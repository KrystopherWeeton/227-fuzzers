; ModuleID = '../../third_party/libpng/pngerror.c'
source_filename = "../../third_party/libpng/pngerror.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.png_compression_buffer = type { %struct.png_compression_buffer*, [1 x i8] }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], %struct.png_colorspace, i8*, i8*, i32, i32, i32, %struct.png_text_struct*, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, %struct.png_unknown_chunk_t*, i32, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_colorspace = type { i32, %struct.png_xy, %struct.png_XYZ, i16, i16 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_image = type { %struct.png_control*, i32, i32, i32, i32, i32, i32, i32, [64 x i8] }
%struct.png_control = type { %struct.png_struct_def*, %struct.png_info_def*, i8*, i8*, i64, i8 }

@cr_png_format_number.digits = internal unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 16
@cr_png_formatted_warning.valid_parameters = internal unnamed_addr constant [10 x i8] c"123456789\00", align 1
@.str = private unnamed_addr constant [25 x i8] c"fixed point overflow in \00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"Libpng jmp_buf still allocated\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Application jmp_buf size changed\00", align 1
@png_digit = internal unnamed_addr constant [16 x i8] c"0123456789ABCDEF", align 16

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @cr_png_error(%struct.png_struct_def* noalias, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 4
  %6 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %5, align 8
  %7 = icmp eq void (%struct.png_struct_def*, i8*)* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void %6(%struct.png_struct_def* nonnull %0, i8* %1) #9
  br label %9

9:                                                ; preds = %4, %2, %8
  tail call fastcc void @png_default_error(%struct.png_struct_def* %0) #10
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @png_default_error(%struct.png_struct_def* noalias readonly) unnamed_addr #0 {
  tail call void @cr_png_longjmp(%struct.png_struct_def* %0, i32 1) #10
  unreachable
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @cr_png_safecat(i8*, i64, i64, i8* readonly) local_unnamed_addr #1 {
  %5 = icmp ne i8* %0, null
  %6 = icmp ult i64 %2, %1
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %30

8:                                                ; preds = %4
  %9 = icmp eq i8* %3, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %8
  %11 = load i8, i8* %3, align 1
  %12 = icmp ne i8 %11, 0
  %13 = add i64 %1, -1
  %14 = icmp ugt i64 %13, %2
  %15 = and i1 %14, %12
  br i1 %15, label %16, label %27

16:                                               ; preds = %10, %16
  %17 = phi i8 [ %23, %16 ], [ %11, %10 ]
  %18 = phi i8* [ %20, %16 ], [ %3, %10 ]
  %19 = phi i64 [ %21, %16 ], [ %2, %10 ]
  %20 = getelementptr inbounds i8, i8* %18, i64 1
  %21 = add nuw i64 %19, 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %19
  store i8 %17, i8* %22, align 1
  %23 = load i8, i8* %20, align 1
  %24 = icmp ne i8 %23, 0
  %25 = icmp ult i64 %21, %13
  %26 = and i1 %25, %24
  br i1 %26, label %16, label %27

27:                                               ; preds = %16, %10, %8
  %28 = phi i64 [ %2, %8 ], [ %2, %10 ], [ %21, %16 ]
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  store i8 0, i8* %29, align 1
  br label %30

30:                                               ; preds = %4, %27
  %31 = phi i64 [ %28, %27 ], [ %2, %4 ]
  ret i64 %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @cr_png_format_number(i8* readnone, i8*, i32, i64) local_unnamed_addr #2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 -1
  store i8 0, i8* %5, align 1
  %6 = icmp ugt i8* %5, %0
  br i1 %6, label %7, label %78

7:                                                ; preds = %4
  %8 = icmp eq i32 %2, 5
  br label %9

9:                                                ; preds = %7, %71
  %10 = phi i32 [ 0, %7 ], [ %73, %71 ]
  %11 = phi i32 [ 1, %7 ], [ %74, %71 ]
  %12 = phi i32 [ 0, %7 ], [ %72, %71 ]
  %13 = phi i64 [ %3, %7 ], [ %75, %71 ]
  %14 = phi i8* [ %5, %7 ], [ %76, %71 ]
  %15 = icmp ne i64 %13, 0
  %16 = icmp slt i32 %12, %11
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %78

18:                                               ; preds = %9
  switch i32 %2, label %53 [
    i32 5, label %19
    i32 2, label %32
    i32 1, label %33
    i32 4, label %40
    i32 3, label %41
  ]

19:                                               ; preds = %18
  %20 = icmp eq i32 %10, 0
  %21 = urem i64 %13, 10
  %22 = icmp eq i64 %21, 0
  %23 = and i1 %22, %20
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds [17 x i8], [17 x i8]* @cr_png_format_number.digits, i64 0, i64 %21
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 -1
  store i8 %26, i8* %27, align 1
  br label %28

28:                                               ; preds = %19, %24
  %29 = phi i8* [ %27, %24 ], [ %14, %19 ]
  %30 = phi i32 [ 1, %24 ], [ 0, %19 ]
  %31 = udiv i64 %13, 10
  br label %53

32:                                               ; preds = %18
  br label %33

33:                                               ; preds = %18, %32
  %34 = phi i32 [ %11, %18 ], [ 2, %32 ]
  %35 = urem i64 %13, 10
  %36 = getelementptr inbounds [17 x i8], [17 x i8]* @cr_png_format_number.digits, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = getelementptr inbounds i8, i8* %14, i64 -1
  store i8 %37, i8* %38, align 1
  %39 = udiv i64 %13, 10
  br label %48

40:                                               ; preds = %18
  br label %41

41:                                               ; preds = %18, %40
  %42 = phi i32 [ %11, %18 ], [ 2, %40 ]
  %43 = and i64 %13, 15
  %44 = getelementptr inbounds [17 x i8], [17 x i8]* @cr_png_format_number.digits, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = getelementptr inbounds i8, i8* %14, i64 -1
  store i8 %45, i8* %46, align 1
  %47 = lshr i64 %13, 4
  br label %48

48:                                               ; preds = %41, %33
  %49 = phi i8* [ %38, %33 ], [ %46, %41 ]
  %50 = phi i64 [ %39, %33 ], [ %47, %41 ]
  %51 = phi i32 [ %34, %33 ], [ %42, %41 ]
  %52 = add nuw nsw i32 %12, 1
  br label %71

53:                                               ; preds = %18, %28
  %54 = phi i8* [ %29, %28 ], [ %14, %18 ]
  %55 = phi i64 [ %31, %28 ], [ 0, %18 ]
  %56 = phi i32 [ 5, %28 ], [ %11, %18 ]
  %57 = phi i32 [ %30, %28 ], [ %10, %18 ]
  %58 = add nuw nsw i32 %12, 1
  %59 = icmp eq i32 %58, 5
  %60 = and i1 %8, %59
  %61 = icmp ugt i8* %54, %0
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %53
  %64 = icmp eq i32 %57, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds i8, i8* %54, i64 -1
  store i8 46, i8* %66, align 1
  br label %71

67:                                               ; preds = %63
  %68 = icmp eq i64 %55, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = getelementptr inbounds i8, i8* %54, i64 -1
  store i8 48, i8* %70, align 1
  br label %71

71:                                               ; preds = %48, %65, %69, %67, %53
  %72 = phi i32 [ 5, %65 ], [ 5, %69 ], [ 5, %67 ], [ %58, %53 ], [ %52, %48 ]
  %73 = phi i32 [ %57, %65 ], [ 0, %69 ], [ 0, %67 ], [ %57, %53 ], [ %10, %48 ]
  %74 = phi i32 [ %56, %65 ], [ %56, %69 ], [ %56, %67 ], [ %56, %53 ], [ %51, %48 ]
  %75 = phi i64 [ %55, %65 ], [ 0, %69 ], [ %55, %67 ], [ %55, %53 ], [ %50, %48 ]
  %76 = phi i8* [ %66, %65 ], [ %70, %69 ], [ %54, %67 ], [ %54, %53 ], [ %49, %48 ]
  %77 = icmp ugt i8* %76, %0
  br i1 %77, label %9, label %78

78:                                               ; preds = %71, %9, %4
  %79 = phi i8* [ %5, %4 ], [ %14, %9 ], [ %76, %71 ]
  ret i8* %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_warning(%struct.png_struct_def* noalias, i8*) local_unnamed_addr #4 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = load i8, i8* %1, align 1
  %6 = icmp eq i8 %5, 35
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %1, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 32
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %1, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 32
  br i1 %14, label %15, label %23

15:                                               ; preds = %67, %7, %11, %23, %27, %31, %35, %39, %43, %47, %51, %55, %59, %63, %4
  %16 = phi i64 [ 0, %4 ], [ 1, %7 ], [ 2, %11 ], [ 3, %23 ], [ 4, %27 ], [ 5, %31 ], [ 6, %35 ], [ 7, %39 ], [ 8, %43 ], [ 9, %47 ], [ 10, %51 ], [ 11, %55 ], [ 12, %59 ], [ 13, %63 ], [ %71, %67 ]
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 5
  %18 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %17, align 8
  %19 = icmp eq void (%struct.png_struct_def*, i8*)* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds i8, i8* %1, i64 %16
  tail call void %18(%struct.png_struct_def* nonnull %0, i8* %21) #9
  br label %22

22:                                               ; preds = %2, %15, %20
  ret void

23:                                               ; preds = %11
  %24 = getelementptr inbounds i8, i8* %1, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 32
  br i1 %26, label %15, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds i8, i8* %1, i64 4
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 32
  br i1 %30, label %15, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, i8* %1, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 32
  br i1 %34, label %15, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds i8, i8* %1, i64 6
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 32
  br i1 %38, label %15, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i8, i8* %1, i64 7
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 32
  br i1 %42, label %15, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %1, i64 8
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 32
  br i1 %46, label %15, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %1, i64 9
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 32
  br i1 %50, label %15, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %1, i64 10
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 32
  br i1 %54, label %15, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds i8, i8* %1, i64 11
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 32
  br i1 %58, label %15, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds i8, i8* %1, i64 12
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 32
  br i1 %62, label %15, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %1, i64 13
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 32
  br i1 %66, label %15, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds i8, i8* %1, i64 14
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 32
  %71 = select i1 %70, i64 14, i64 15
  br label %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_warning_parameter([32 x i8]*, i32, i8* readonly) local_unnamed_addr #1 {
  %4 = add i32 %1, -1
  %5 = icmp ult i32 %4, 8
  br i1 %5, label %6, label %29

6:                                                ; preds = %3
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %0, i64 %7, i64 0
  %9 = icmp eq i8* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %6
  %11 = icmp eq i8* %2, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %10
  %13 = load i8, i8* %2, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12, %15
  %16 = phi i8 [ %22, %15 ], [ %13, %12 ]
  %17 = phi i8* [ %19, %15 ], [ %2, %12 ]
  %18 = phi i64 [ %20, %15 ], [ 0, %12 ]
  %19 = getelementptr inbounds i8, i8* %17, i64 1
  %20 = add nuw nsw i64 %18, 1
  %21 = getelementptr inbounds [32 x i8], [32 x i8]* %0, i64 %7, i64 %18
  store i8 %16, i8* %21, align 1
  %22 = load i8, i8* %19, align 1
  %23 = icmp ne i8 %22, 0
  %24 = icmp ult i64 %20, 31
  %25 = and i1 %24, %23
  br i1 %25, label %15, label %26

26:                                               ; preds = %15, %12, %10
  %27 = phi i64 [ 0, %10 ], [ 0, %12 ], [ %20, %15 ]
  %28 = getelementptr inbounds [32 x i8], [32 x i8]* %0, i64 %7, i64 %27
  store i8 0, i8* %28, align 1
  br label %29

29:                                               ; preds = %6, %26, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_warning_parameter_unsigned([32 x i8]*, i32, i32, i64) local_unnamed_addr #4 {
  %5 = alloca [24 x i8], align 16
  %6 = getelementptr inbounds [24 x i8], [24 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds [24 x i8], [24 x i8]* %5, i64 0, i64 23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 23, i1 false)
  store i8 0, i8* %7, align 1
  %8 = icmp eq i32 %2, 5
  br label %9

9:                                                ; preds = %75, %4
  %10 = phi i8 [ 0, %4 ], [ %76, %75 ]
  %11 = phi i32 [ 0, %4 ], [ %78, %75 ]
  %12 = phi i32 [ 1, %4 ], [ %79, %75 ]
  %13 = phi i32 [ 0, %4 ], [ %77, %75 ]
  %14 = phi i64 [ %3, %4 ], [ %80, %75 ]
  %15 = phi i8* [ %7, %4 ], [ %81, %75 ]
  %16 = icmp ne i64 %14, 0
  %17 = icmp slt i32 %13, %12
  %18 = or i1 %17, %16
  br i1 %18, label %19, label %83

19:                                               ; preds = %9
  switch i32 %2, label %56 [
    i32 5, label %20
    i32 2, label %34
    i32 1, label %35
    i32 4, label %42
    i32 3, label %43
  ]

20:                                               ; preds = %19
  %21 = icmp eq i32 %11, 0
  %22 = urem i64 %14, 10
  %23 = icmp eq i64 %22, 0
  %24 = and i1 %21, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds [17 x i8], [17 x i8]* @cr_png_format_number.digits, i64 0, i64 %22
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %15, i64 -1
  store i8 %27, i8* %28, align 1
  br label %29

29:                                               ; preds = %25, %20
  %30 = phi i8 [ %27, %25 ], [ %10, %20 ]
  %31 = phi i8* [ %28, %25 ], [ %15, %20 ]
  %32 = phi i32 [ 1, %25 ], [ 0, %20 ]
  %33 = udiv i64 %14, 10
  br label %56

34:                                               ; preds = %19
  br label %35

35:                                               ; preds = %34, %19
  %36 = phi i32 [ %12, %19 ], [ 2, %34 ]
  %37 = urem i64 %14, 10
  %38 = getelementptr inbounds [17 x i8], [17 x i8]* @cr_png_format_number.digits, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %15, i64 -1
  store i8 %39, i8* %40, align 1
  %41 = udiv i64 %14, 10
  br label %50

42:                                               ; preds = %19
  br label %43

43:                                               ; preds = %42, %19
  %44 = phi i32 [ %12, %19 ], [ 2, %42 ]
  %45 = and i64 %14, 15
  %46 = getelementptr inbounds [17 x i8], [17 x i8]* @cr_png_format_number.digits, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds i8, i8* %15, i64 -1
  store i8 %47, i8* %48, align 1
  %49 = lshr i64 %14, 4
  br label %50

50:                                               ; preds = %43, %35
  %51 = phi i8 [ %39, %35 ], [ %47, %43 ]
  %52 = phi i8* [ %40, %35 ], [ %48, %43 ]
  %53 = phi i64 [ %41, %35 ], [ %49, %43 ]
  %54 = phi i32 [ %36, %35 ], [ %44, %43 ]
  %55 = add nuw nsw i32 %13, 1
  br label %75

56:                                               ; preds = %29, %19
  %57 = phi i8 [ %30, %29 ], [ %10, %19 ]
  %58 = phi i8* [ %31, %29 ], [ %15, %19 ]
  %59 = phi i64 [ %33, %29 ], [ 0, %19 ]
  %60 = phi i32 [ 5, %29 ], [ %12, %19 ]
  %61 = phi i32 [ %32, %29 ], [ %11, %19 ]
  %62 = add nuw nsw i32 %13, 1
  %63 = icmp eq i32 %62, 5
  %64 = and i1 %8, %63
  %65 = icmp ugt i8* %58, %6
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %75

67:                                               ; preds = %56
  %68 = icmp eq i32 %61, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds i8, i8* %58, i64 -1
  store i8 46, i8* %70, align 1
  br label %75

71:                                               ; preds = %67
  %72 = icmp eq i64 %59, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = getelementptr inbounds i8, i8* %58, i64 -1
  store i8 48, i8* %74, align 1
  br label %75

75:                                               ; preds = %73, %71, %69, %56, %50
  %76 = phi i8 [ 46, %69 ], [ 48, %73 ], [ %57, %71 ], [ %57, %56 ], [ %51, %50 ]
  %77 = phi i32 [ 5, %69 ], [ 5, %73 ], [ 5, %71 ], [ %62, %56 ], [ %55, %50 ]
  %78 = phi i32 [ %61, %69 ], [ 0, %73 ], [ 0, %71 ], [ %61, %56 ], [ %11, %50 ]
  %79 = phi i32 [ %60, %69 ], [ %60, %73 ], [ %60, %71 ], [ %60, %56 ], [ %54, %50 ]
  %80 = phi i64 [ %59, %69 ], [ 0, %73 ], [ %59, %71 ], [ %59, %56 ], [ %53, %50 ]
  %81 = phi i8* [ %70, %69 ], [ %74, %73 ], [ %58, %71 ], [ %58, %56 ], [ %52, %50 ]
  %82 = icmp ugt i8* %81, %6
  br i1 %82, label %9, label %83

83:                                               ; preds = %9, %75
  %84 = phi i8 [ %10, %9 ], [ %76, %75 ]
  %85 = phi i8* [ %15, %9 ], [ %81, %75 ]
  %86 = add i32 %1, -1
  %87 = icmp ult i32 %86, 8
  br i1 %87, label %88, label %110

88:                                               ; preds = %83
  %89 = sext i32 %86 to i64
  %90 = getelementptr inbounds [32 x i8], [32 x i8]* %0, i64 %89, i64 0
  %91 = icmp eq i8* %90, null
  br i1 %91, label %110, label %92

92:                                               ; preds = %88
  %93 = icmp eq i8* %85, null
  %94 = icmp eq i8 %84, 0
  %95 = or i1 %93, %94
  br i1 %95, label %107, label %96

96:                                               ; preds = %92, %96
  %97 = phi i8 [ %103, %96 ], [ %84, %92 ]
  %98 = phi i8* [ %100, %96 ], [ %85, %92 ]
  %99 = phi i64 [ %101, %96 ], [ 0, %92 ]
  %100 = getelementptr inbounds i8, i8* %98, i64 1
  %101 = add nuw nsw i64 %99, 1
  %102 = getelementptr inbounds [32 x i8], [32 x i8]* %0, i64 %89, i64 %99
  store i8 %97, i8* %102, align 1
  %103 = load i8, i8* %100, align 1
  %104 = icmp ne i8 %103, 0
  %105 = icmp ult i64 %101, 31
  %106 = and i1 %105, %104
  br i1 %106, label %96, label %107

107:                                              ; preds = %96, %92
  %108 = phi i64 [ 0, %92 ], [ %101, %96 ]
  %109 = getelementptr inbounds [32 x i8], [32 x i8]* %0, i64 %89, i64 %108
  store i8 0, i8* %109, align 1
  br label %110

110:                                              ; preds = %83, %88, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_warning_parameter_signed([32 x i8]*, i32, i32, i32) local_unnamed_addr #4 {
  %5 = alloca [24 x i8], align 16
  %6 = getelementptr inbounds [24 x i8], [24 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = sext i32 %3 to i64
  %8 = icmp slt i32 %3, 0
  %9 = sub nsw i64 0, %7
  %10 = select i1 %8, i64 %9, i64 %7
  %11 = getelementptr inbounds [24 x i8], [24 x i8]* %5, i64 0, i64 23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 23, i1 false)
  store i8 0, i8* %11, align 1
  %12 = icmp eq i32 %2, 5
  br label %13

13:                                               ; preds = %79, %4
  %14 = phi i8 [ 0, %4 ], [ %80, %79 ]
  %15 = phi i32 [ 0, %4 ], [ %82, %79 ]
  %16 = phi i32 [ 1, %4 ], [ %83, %79 ]
  %17 = phi i32 [ 0, %4 ], [ %81, %79 ]
  %18 = phi i64 [ %10, %4 ], [ %84, %79 ]
  %19 = phi i8* [ %11, %4 ], [ %85, %79 ]
  %20 = icmp ne i64 %18, 0
  %21 = icmp slt i32 %17, %16
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %87

23:                                               ; preds = %13
  switch i32 %2, label %60 [
    i32 5, label %24
    i32 2, label %38
    i32 1, label %39
    i32 4, label %46
    i32 3, label %47
  ]

24:                                               ; preds = %23
  %25 = icmp eq i32 %15, 0
  %26 = urem i64 %18, 10
  %27 = icmp eq i64 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds [17 x i8], [17 x i8]* @cr_png_format_number.digits, i64 0, i64 %26
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds i8, i8* %19, i64 -1
  store i8 %31, i8* %32, align 1
  br label %33

33:                                               ; preds = %29, %24
  %34 = phi i8 [ %31, %29 ], [ %14, %24 ]
  %35 = phi i8* [ %32, %29 ], [ %19, %24 ]
  %36 = phi i32 [ 1, %29 ], [ 0, %24 ]
  %37 = udiv i64 %18, 10
  br label %60

38:                                               ; preds = %23
  br label %39

39:                                               ; preds = %38, %23
  %40 = phi i32 [ %16, %23 ], [ 2, %38 ]
  %41 = urem i64 %18, 10
  %42 = getelementptr inbounds [17 x i8], [17 x i8]* @cr_png_format_number.digits, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %19, i64 -1
  store i8 %43, i8* %44, align 1
  %45 = udiv i64 %18, 10
  br label %54

46:                                               ; preds = %23
  br label %47

47:                                               ; preds = %46, %23
  %48 = phi i32 [ %16, %23 ], [ 2, %46 ]
  %49 = and i64 %18, 15
  %50 = getelementptr inbounds [17 x i8], [17 x i8]* @cr_png_format_number.digits, i64 0, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = getelementptr inbounds i8, i8* %19, i64 -1
  store i8 %51, i8* %52, align 1
  %53 = lshr i64 %18, 4
  br label %54

54:                                               ; preds = %47, %39
  %55 = phi i8 [ %43, %39 ], [ %51, %47 ]
  %56 = phi i8* [ %44, %39 ], [ %52, %47 ]
  %57 = phi i64 [ %45, %39 ], [ %53, %47 ]
  %58 = phi i32 [ %40, %39 ], [ %48, %47 ]
  %59 = add nuw nsw i32 %17, 1
  br label %79

60:                                               ; preds = %33, %23
  %61 = phi i8 [ %34, %33 ], [ %14, %23 ]
  %62 = phi i8* [ %35, %33 ], [ %19, %23 ]
  %63 = phi i64 [ %37, %33 ], [ 0, %23 ]
  %64 = phi i32 [ 5, %33 ], [ %16, %23 ]
  %65 = phi i32 [ %36, %33 ], [ %15, %23 ]
  %66 = add nuw nsw i32 %17, 1
  %67 = icmp eq i32 %66, 5
  %68 = and i1 %12, %67
  %69 = icmp ugt i8* %62, %6
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %60
  %72 = icmp eq i32 %65, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds i8, i8* %62, i64 -1
  store i8 46, i8* %74, align 1
  br label %79

75:                                               ; preds = %71
  %76 = icmp eq i64 %63, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = getelementptr inbounds i8, i8* %62, i64 -1
  store i8 48, i8* %78, align 1
  br label %79

79:                                               ; preds = %77, %75, %73, %60, %54
  %80 = phi i8 [ 46, %73 ], [ 48, %77 ], [ %61, %75 ], [ %61, %60 ], [ %55, %54 ]
  %81 = phi i32 [ 5, %73 ], [ 5, %77 ], [ 5, %75 ], [ %66, %60 ], [ %59, %54 ]
  %82 = phi i32 [ %65, %73 ], [ 0, %77 ], [ 0, %75 ], [ %65, %60 ], [ %15, %54 ]
  %83 = phi i32 [ %64, %73 ], [ %64, %77 ], [ %64, %75 ], [ %64, %60 ], [ %58, %54 ]
  %84 = phi i64 [ %63, %73 ], [ 0, %77 ], [ %63, %75 ], [ %63, %60 ], [ %57, %54 ]
  %85 = phi i8* [ %74, %73 ], [ %78, %77 ], [ %62, %75 ], [ %62, %60 ], [ %56, %54 ]
  %86 = icmp ugt i8* %85, %6
  br i1 %86, label %13, label %87

87:                                               ; preds = %13, %79
  %88 = phi i8 [ %14, %13 ], [ %80, %79 ]
  %89 = phi i8* [ %19, %13 ], [ %85, %79 ]
  %90 = icmp ugt i8* %89, %6
  %91 = and i1 %8, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = getelementptr inbounds i8, i8* %89, i64 -1
  store i8 45, i8* %93, align 1
  br label %94

94:                                               ; preds = %92, %87
  %95 = phi i8 [ 45, %92 ], [ %88, %87 ]
  %96 = phi i8* [ %93, %92 ], [ %89, %87 ]
  %97 = add i32 %1, -1
  %98 = icmp ult i32 %97, 8
  br i1 %98, label %99, label %121

99:                                               ; preds = %94
  %100 = sext i32 %97 to i64
  %101 = getelementptr inbounds [32 x i8], [32 x i8]* %0, i64 %100, i64 0
  %102 = icmp eq i8* %101, null
  br i1 %102, label %121, label %103

103:                                              ; preds = %99
  %104 = icmp eq i8* %96, null
  %105 = icmp eq i8 %95, 0
  %106 = or i1 %104, %105
  br i1 %106, label %118, label %107

107:                                              ; preds = %103, %107
  %108 = phi i8 [ %114, %107 ], [ %95, %103 ]
  %109 = phi i8* [ %111, %107 ], [ %96, %103 ]
  %110 = phi i64 [ %112, %107 ], [ 0, %103 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = add nuw nsw i64 %110, 1
  %113 = getelementptr inbounds [32 x i8], [32 x i8]* %0, i64 %100, i64 %110
  store i8 %108, i8* %113, align 1
  %114 = load i8, i8* %111, align 1
  %115 = icmp ne i8 %114, 0
  %116 = icmp ult i64 %112, 31
  %117 = and i1 %116, %115
  br i1 %117, label %107, label %118

118:                                              ; preds = %107, %103
  %119 = phi i64 [ 0, %103 ], [ %112, %107 ]
  %120 = getelementptr inbounds [32 x i8], [32 x i8]* %0, i64 %100, i64 %119
  store i8 0, i8* %120, align 1
  br label %121

121:                                              ; preds = %94, %99, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_formatted_warning(%struct.png_struct_def* noalias, [32 x i8]* readonly, i8* nocapture readonly) local_unnamed_addr #4 {
  %4 = alloca [192 x i8], align 16
  %5 = getelementptr inbounds [192 x i8], [192 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 192, i1 false)
  %6 = icmp ne [32 x i8]* %1, null
  br label %7

7:                                                ; preds = %3, %57
  %8 = phi i64 [ 0, %3 ], [ %59, %57 ]
  %9 = phi i8* [ %2, %3 ], [ %58, %57 ]
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %7
  %13 = icmp eq i8 %10, 64
  %14 = and i1 %6, %13
  br i1 %14, label %15, label %51

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8, i8* %9, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %51, label %19

19:                                               ; preds = %15, %19
  %20 = phi i64 [ %26, %19 ], [ 0, %15 ]
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* @cr_png_formatted_warning.valid_parameters, i64 0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = icmp ne i8 %22, %17
  %24 = icmp ne i64 %20, 9
  %25 = and i1 %24, %23
  %26 = add nuw nsw i64 %20, 1
  br i1 %25, label %19, label %27

27:                                               ; preds = %19
  %28 = trunc i64 %20 to i32
  %29 = and i64 %20, 4294967295
  %30 = icmp ult i32 %28, 8
  br i1 %30, label %31, label %51

31:                                               ; preds = %27
  %32 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i64 %29, i64 32
  %33 = icmp ult i64 %8, 191
  br i1 %33, label %34, label %48

34:                                               ; preds = %31
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i64 %29, i64 0
  br label %36

36:                                               ; preds = %43, %34
  %37 = phi i8* [ %44, %43 ], [ %35, %34 ]
  %38 = phi i64 [ %45, %43 ], [ %8, %34 ]
  %39 = load i8, i8* %37, align 1
  %40 = icmp ne i8 %39, 0
  %41 = icmp ult i8* %37, %32
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %48

43:                                               ; preds = %36
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = add i64 %38, 1
  %46 = getelementptr inbounds [192 x i8], [192 x i8]* %4, i64 0, i64 %38
  store i8 %39, i8* %46, align 1
  %47 = icmp eq i64 %45, 191
  br i1 %47, label %48, label %36

48:                                               ; preds = %36, %43, %31
  %49 = phi i64 [ %8, %31 ], [ 191, %43 ], [ %38, %36 ]
  %50 = getelementptr inbounds i8, i8* %9, i64 2
  br label %57

51:                                               ; preds = %27, %12, %15
  %52 = phi i8 [ 64, %15 ], [ %10, %12 ], [ %17, %27 ]
  %53 = phi i8* [ %9, %15 ], [ %9, %12 ], [ %16, %27 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  %55 = add i64 %8, 1
  %56 = getelementptr inbounds [192 x i8], [192 x i8]* %4, i64 0, i64 %8
  store i8 %52, i8* %56, align 1
  br label %57

57:                                               ; preds = %51, %48
  %58 = phi i8* [ %54, %51 ], [ %50, %48 ]
  %59 = phi i64 [ %55, %51 ], [ %49, %48 ]
  %60 = icmp ult i64 %59, 191
  br i1 %60, label %7, label %61

61:                                               ; preds = %7, %57
  %62 = phi i64 [ %8, %7 ], [ %59, %57 ]
  %63 = getelementptr inbounds [192 x i8], [192 x i8]* %4, i64 0, i64 %62
  store i8 0, i8* %63, align 1
  call void @cr_png_warning(%struct.png_struct_def* %0, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_benign_error(%struct.png_struct_def* noalias, i8*) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1048576
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 4
  %9 = trunc i32 %8 to i16
  %10 = icmp slt i16 %9, 0
  br i1 %6, label %18, label %11

11:                                               ; preds = %2
  br i1 %10, label %12, label %17

12:                                               ; preds = %11
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 44
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @cr_png_chunk_warning(%struct.png_struct_def* %0, i8* %1)
  br label %25

17:                                               ; preds = %12, %11
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* %1)
  br label %25

18:                                               ; preds = %2
  br i1 %10, label %19, label %24

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 44
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @cr_png_chunk_error(%struct.png_struct_def* %0, i8* %1) #10
  unreachable

24:                                               ; preds = %19, %18
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* %1) #10
  unreachable

25:                                               ; preds = %16, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_chunk_warning(%struct.png_struct_def* noalias, i8* readonly) local_unnamed_addr #4 {
  %3 = alloca [214 x i8], align 16
  %4 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 214, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 214, i1 false)
  %5 = icmp eq %struct.png_struct_def* %0, null
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  call fastcc void @png_format_buffer(%struct.png_struct_def* nonnull %0, i8* nonnull %4, i8* %1)
  %7 = load i8, i8* %4, align 16, !noalias !2
  %8 = icmp eq i8 %7, 35
  br i1 %8, label %9, label %17

9:                                                ; preds = %6
  %10 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 1
  %11 = load i8, i8* %10, align 1, !noalias !2
  %12 = icmp eq i8 %11, 32
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 2
  %15 = load i8, i8* %14, align 2, !noalias !2
  %16 = icmp eq i8 %15, 32
  br i1 %16, label %17, label %24

17:                                               ; preds = %68, %64, %60, %56, %52, %48, %44, %40, %36, %32, %28, %24, %13, %9, %6
  %18 = phi i64 [ 0, %6 ], [ 1, %9 ], [ 2, %13 ], [ 3, %24 ], [ 4, %28 ], [ 5, %32 ], [ 6, %36 ], [ 7, %40 ], [ 8, %44 ], [ 9, %48 ], [ 10, %52 ], [ 11, %56 ], [ 12, %60 ], [ 13, %64 ], [ %72, %68 ]
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 5
  %20 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %19, align 8, !alias.scope !2
  %21 = icmp eq void (%struct.png_struct_def*, i8*)* %20, null
  br i1 %21, label %73, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 %18
  call void %20(%struct.png_struct_def* nonnull %0, i8* %23) #9
  br label %73

24:                                               ; preds = %13
  %25 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 3
  %26 = load i8, i8* %25, align 1, !noalias !2
  %27 = icmp eq i8 %26, 32
  br i1 %27, label %17, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 4
  %30 = load i8, i8* %29, align 4, !noalias !2
  %31 = icmp eq i8 %30, 32
  br i1 %31, label %17, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 5
  %34 = load i8, i8* %33, align 1, !noalias !2
  %35 = icmp eq i8 %34, 32
  br i1 %35, label %17, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 6
  %38 = load i8, i8* %37, align 2, !noalias !2
  %39 = icmp eq i8 %38, 32
  br i1 %39, label %17, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 7
  %42 = load i8, i8* %41, align 1, !noalias !2
  %43 = icmp eq i8 %42, 32
  br i1 %43, label %17, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 8
  %46 = load i8, i8* %45, align 8, !noalias !2
  %47 = icmp eq i8 %46, 32
  br i1 %47, label %17, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 9
  %50 = load i8, i8* %49, align 1, !noalias !2
  %51 = icmp eq i8 %50, 32
  br i1 %51, label %17, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 10
  %54 = load i8, i8* %53, align 2, !noalias !2
  %55 = icmp eq i8 %54, 32
  br i1 %55, label %17, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 11
  %58 = load i8, i8* %57, align 1, !noalias !2
  %59 = icmp eq i8 %58, 32
  br i1 %59, label %17, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 12
  %62 = load i8, i8* %61, align 4, !noalias !2
  %63 = icmp eq i8 %62, 32
  br i1 %63, label %17, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 13
  %66 = load i8, i8* %65, align 1, !noalias !2
  %67 = icmp eq i8 %66, 32
  br i1 %67, label %17, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 14
  %70 = load i8, i8* %69, align 2, !noalias !2
  %71 = icmp eq i8 %70, 32
  %72 = select i1 %71, i64 14, i64 15
  br label %17

73:                                               ; preds = %22, %17, %2
  call void @llvm.lifetime.end.p0i8(i64 214, i8* nonnull %4) #9
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @cr_png_chunk_error(%struct.png_struct_def* noalias, i8* readonly) local_unnamed_addr #0 {
  %3 = alloca [214 x i8], align 16
  %4 = getelementptr inbounds [214 x i8], [214 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 214, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 214, i1 false)
  %5 = icmp eq %struct.png_struct_def* %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call fastcc void @png_default_error(%struct.png_struct_def* null) #11
  unreachable

7:                                                ; preds = %2
  call fastcc void @png_format_buffer(%struct.png_struct_def* nonnull %0, i8* nonnull %4, i8* %1)
  call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* nonnull %4) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_app_warning(%struct.png_struct_def* noalias, i8*) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2097152
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* %1)
  ret void

8:                                                ; preds = %2
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* %1) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_app_error(%struct.png_struct_def* noalias, i8*) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 4194304
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* %1)
  ret void

8:                                                ; preds = %2
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* %1) #10
  unreachable
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @png_format_buffer(%struct.png_struct_def* noalias nocapture readonly, i8* nocapture, i8* readonly) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 44
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 24
  %7 = add nsw i32 %6, -65
  %8 = icmp ugt i32 %7, 57
  %9 = add nsw i32 %6, -91
  %10 = icmp ult i32 %9, 6
  %11 = or i1 %8, %10
  br i1 %11, label %12, label %24

12:                                               ; preds = %3
  store i8 91, i8* %1, align 1
  %13 = lshr i32 %5, 28
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %6, 15
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 93, i8* %23, align 1
  br label %26

24:                                               ; preds = %3
  %25 = trunc i32 %6 to i8
  store i8 %25, i8* %1, align 1
  br label %26

26:                                               ; preds = %24, %12
  %27 = phi i32 [ 4, %12 ], [ 1, %24 ]
  %28 = lshr i32 %5, 16
  %29 = and i32 %28, 255
  %30 = add nsw i32 %29, -65
  %31 = icmp ugt i32 %30, 57
  %32 = add nsw i32 %29, -91
  %33 = icmp ult i32 %32, 6
  %34 = or i1 %31, %33
  br i1 %34, label %66, label %64

35:                                               ; preds = %152
  %36 = add nuw nsw i32 %153, 2
  %37 = sext i32 %157 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  store i8 58, i8* %38, align 1
  %39 = add nuw nsw i32 %153, 3
  %40 = sext i32 %36 to i64
  %41 = getelementptr inbounds i8, i8* %1, i64 %40
  store i8 32, i8* %41, align 1
  %42 = sext i32 %39 to i64
  br label %43

43:                                               ; preds = %166, %35
  %44 = phi i64 [ %42, %35 ], [ %168, %166 ]
  %45 = phi i64 [ 0, %35 ], [ %167, %166 ]
  %46 = phi i32 [ %39, %35 ], [ %169, %166 ]
  %47 = getelementptr inbounds i8, i8* %2, i64 %45
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %43
  %51 = add nuw nsw i64 %45, 1
  %52 = add nsw i64 %44, 1
  %53 = getelementptr inbounds i8, i8* %1, i64 %44
  store i8 %48, i8* %53, align 1
  %54 = getelementptr inbounds i8, i8* %2, i64 %51
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %159

57:                                               ; preds = %159, %50, %43
  %58 = phi i64 [ %44, %43 ], [ %52, %50 ], [ %161, %159 ]
  %59 = trunc i64 %58 to i32
  br label %60

60:                                               ; preds = %166, %57, %152
  %61 = phi i32 [ %157, %152 ], [ %59, %57 ], [ %169, %166 ]
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %1, i64 %62
  store i8 0, i8* %63, align 1
  ret void

64:                                               ; preds = %26
  %65 = trunc i32 %28 to i8
  br label %85

66:                                               ; preds = %26
  %67 = add nuw nsw i32 %27, 1
  %68 = zext i32 %27 to i64
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  store i8 91, i8* %69, align 1
  %70 = lshr i32 %5, 20
  %71 = and i32 %70, 15
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = or i32 %27, 2
  %76 = zext i32 %67 to i64
  %77 = getelementptr inbounds i8, i8* %1, i64 %76
  store i8 %74, i8* %77, align 1
  %78 = and i32 %28, 15
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = add nuw nsw i32 %27, 3
  %83 = zext i32 %75 to i64
  %84 = getelementptr inbounds i8, i8* %1, i64 %83
  store i8 %81, i8* %84, align 1
  br label %85

85:                                               ; preds = %66, %64
  %86 = phi i32 [ %82, %66 ], [ %27, %64 ]
  %87 = phi i8 [ 93, %66 ], [ %65, %64 ]
  %88 = zext i32 %86 to i64
  %89 = getelementptr inbounds i8, i8* %1, i64 %88
  store i8 %87, i8* %89, align 1
  %90 = add nuw nsw i32 %86, 1
  %91 = lshr i32 %5, 8
  %92 = and i32 %91, 255
  %93 = add nsw i32 %92, -65
  %94 = icmp ugt i32 %93, 57
  %95 = add nsw i32 %92, -91
  %96 = icmp ult i32 %95, 6
  %97 = or i1 %94, %96
  br i1 %97, label %100, label %98

98:                                               ; preds = %85
  %99 = trunc i32 %91 to i8
  br label %119

100:                                              ; preds = %85
  %101 = add nuw nsw i32 %86, 2
  %102 = sext i32 %90 to i64
  %103 = getelementptr inbounds i8, i8* %1, i64 %102
  store i8 91, i8* %103, align 1
  %104 = lshr i32 %5, 12
  %105 = and i32 %104, 15
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = add nuw nsw i32 %86, 3
  %110 = sext i32 %101 to i64
  %111 = getelementptr inbounds i8, i8* %1, i64 %110
  store i8 %108, i8* %111, align 1
  %112 = and i32 %91, 15
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = add nuw nsw i32 %86, 4
  %117 = sext i32 %109 to i64
  %118 = getelementptr inbounds i8, i8* %1, i64 %117
  store i8 %115, i8* %118, align 1
  br label %119

119:                                              ; preds = %100, %98
  %120 = phi i32 [ %116, %100 ], [ %90, %98 ]
  %121 = phi i8 [ 93, %100 ], [ %99, %98 ]
  %122 = sext i32 %120 to i64
  %123 = getelementptr inbounds i8, i8* %1, i64 %122
  store i8 %121, i8* %123, align 1
  %124 = add nuw nsw i32 %120, 1
  %125 = and i32 %5, 255
  %126 = add nsw i32 %125, -65
  %127 = icmp ugt i32 %126, 57
  %128 = add nsw i32 %125, -91
  %129 = icmp ult i32 %128, 6
  %130 = or i1 %127, %129
  br i1 %130, label %133, label %131

131:                                              ; preds = %119
  %132 = trunc i32 %5 to i8
  br label %152

133:                                              ; preds = %119
  %134 = add nuw nsw i32 %120, 2
  %135 = sext i32 %124 to i64
  %136 = getelementptr inbounds i8, i8* %1, i64 %135
  store i8 91, i8* %136, align 1
  %137 = lshr i32 %5, 4
  %138 = and i32 %137, 15
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = add nuw nsw i32 %120, 3
  %143 = sext i32 %134 to i64
  %144 = getelementptr inbounds i8, i8* %1, i64 %143
  store i8 %141, i8* %144, align 1
  %145 = and i32 %5, 15
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds [16 x i8], [16 x i8]* @png_digit, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = add nuw nsw i32 %120, 4
  %150 = sext i32 %142 to i64
  %151 = getelementptr inbounds i8, i8* %1, i64 %150
  store i8 %148, i8* %151, align 1
  br label %152

152:                                              ; preds = %133, %131
  %153 = phi i32 [ %149, %133 ], [ %124, %131 ]
  %154 = phi i8 [ 93, %133 ], [ %132, %131 ]
  %155 = sext i32 %153 to i64
  %156 = getelementptr inbounds i8, i8* %1, i64 %155
  store i8 %154, i8* %156, align 1
  %157 = add nuw nsw i32 %153, 1
  %158 = icmp eq i8* %2, null
  br i1 %158, label %60, label %35

159:                                              ; preds = %50
  %160 = add nuw nsw i64 %45, 2
  %161 = add nsw i64 %44, 2
  %162 = getelementptr inbounds i8, i8* %1, i64 %52
  store i8 %55, i8* %162, align 1
  %163 = getelementptr inbounds i8, i8* %2, i64 %160
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %57, label %166

166:                                              ; preds = %159
  %167 = add nuw nsw i64 %45, 3
  %168 = add nsw i64 %44, 3
  %169 = add nsw i32 %46, 3
  %170 = getelementptr inbounds i8, i8* %1, i64 %161
  store i8 %164, i8* %170, align 1
  %171 = icmp eq i64 %167, 195
  br i1 %171, label %60, label %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_chunk_benign_error(%struct.png_struct_def* noalias, i8* readonly) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1048576
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @cr_png_chunk_warning(%struct.png_struct_def* %0, i8* %1)
  ret void

8:                                                ; preds = %2
  tail call void @cr_png_chunk_error(%struct.png_struct_def* %0, i8* %1) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_chunk_report(%struct.png_struct_def* noalias, i8*, i32) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %5 = load i32, i32* %4, align 4
  %6 = trunc i32 %5 to i16
  %7 = icmp slt i16 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %3
  %9 = icmp slt i32 %2, 2
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @cr_png_chunk_warning(%struct.png_struct_def* %0, i8* %1)
  br label %32

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %13 = load i32, i32* %12, align 8, !alias.scope !5
  %14 = and i32 %13, 1048576
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  tail call void @cr_png_chunk_error(%struct.png_struct_def* %0, i8* %1) #11
  unreachable

17:                                               ; preds = %11
  tail call void @cr_png_chunk_warning(%struct.png_struct_def* %0, i8* %1) #9
  br label %32

18:                                               ; preds = %3
  %19 = icmp slt i32 %2, 1
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %21 = load i32, i32* %20, align 8
  br i1 %19, label %22, label %27

22:                                               ; preds = %18
  %23 = and i32 %21, 2097152
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* %1) #11
  unreachable

26:                                               ; preds = %22
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* %1) #9
  br label %32

27:                                               ; preds = %18
  %28 = and i32 %21, 4194304
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* %1) #11
  unreachable

31:                                               ; preds = %27
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* %1) #9
  br label %32

32:                                               ; preds = %31, %26, %10, %17
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @cr_png_fixed_error(%struct.png_struct_def* noalias, i8* readonly) local_unnamed_addr #0 {
  %3 = alloca [220 x i8], align 16
  %4 = getelementptr inbounds [220 x i8], [220 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 220, i8* nonnull %4) #9
  %5 = getelementptr inbounds [220 x i8], [220 x i8]* %3, i64 0, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 196, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %4, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 24, i1 false)
  %6 = icmp eq i8* %1, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2, %35
  %8 = phi i64 [ %38, %35 ], [ 0, %2 ]
  %9 = phi i32 [ %39, %35 ], [ 0, %2 ]
  %10 = getelementptr inbounds i8, i8* %1, i64 %8
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %7
  %14 = add nuw nsw i64 %8, 24
  %15 = getelementptr inbounds [220 x i8], [220 x i8]* %3, i64 0, i64 %14
  store i8 %11, i8* %15, align 1
  %16 = add nuw nsw i64 %8, 1
  %17 = getelementptr inbounds i8, i8* %1, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %28, %13, %7
  %21 = phi i64 [ %8, %7 ], [ %16, %13 ], [ %31, %28 ]
  %22 = trunc i64 %21 to i32
  br label %23

23:                                               ; preds = %35, %20, %2
  %24 = phi i32 [ 0, %2 ], [ %22, %20 ], [ %39, %35 ]
  %25 = add nuw i32 %24, 24
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [220 x i8], [220 x i8]* %3, i64 0, i64 %26
  store i8 0, i8* %27, align 1
  call void @cr_png_error(%struct.png_struct_def* %0, i8* nonnull %4) #10
  unreachable

28:                                               ; preds = %13
  %29 = add nuw nsw i64 %8, 25
  %30 = getelementptr inbounds [220 x i8], [220 x i8]* %3, i64 0, i64 %29
  store i8 %18, i8* %30, align 1
  %31 = add nuw nsw i64 %8, 2
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %20, label %35

35:                                               ; preds = %28
  %36 = add nuw nsw i64 %8, 26
  %37 = getelementptr inbounds [220 x i8], [220 x i8]* %3, i64 0, i64 %36
  store i8 %33, i8* %37, align 1
  %38 = add nuw nsw i64 %8, 3
  %39 = add nuw nsw i32 %9, 3
  %40 = icmp eq i64 %38, 195
  br i1 %40, label %23, label %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* noalias, void (%struct.__jmp_buf_tag*, i32)*, i64) local_unnamed_addr #4 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %38, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 2
  %7 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %6, align 8
  %8 = icmp eq [1 x %struct.__jmp_buf_tag]* %7, null
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 3
  br i1 %8, label %10, label %20

10:                                               ; preds = %5
  store i64 0, i64* %9, align 8
  %11 = icmp ult i64 %2, 201
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 0
  store [1 x %struct.__jmp_buf_tag]* %13, [1 x %struct.__jmp_buf_tag]** %6, align 8
  br label %35

14:                                               ; preds = %10
  %15 = tail call noalias i8* @cr_png_malloc_warn(%struct.png_struct_def* nonnull %0, i64 %2) #9
  %16 = bitcast [1 x %struct.__jmp_buf_tag]** %6 to i8**
  store i8* %15, i8** %16, align 8
  %17 = icmp eq i8* %15, null
  br i1 %17, label %38, label %18

18:                                               ; preds = %14
  %19 = bitcast i8* %15 to [1 x %struct.__jmp_buf_tag]*
  store i64 %2, i64* %9, align 8
  br label %35

20:                                               ; preds = %5
  %21 = load i64, i64* %9, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 0
  %25 = icmp eq [1 x %struct.__jmp_buf_tag]* %7, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable

27:                                               ; preds = %23, %20
  %28 = phi i64 [ 200, %23 ], [ %21, %20 ]
  %29 = icmp eq i64 %28, %2
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 5
  %32 = load void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)** %31, align 8, !alias.scope !8
  %33 = icmp eq void (%struct.png_struct_def*, i8*)* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  tail call void %32(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %38

35:                                               ; preds = %27, %12, %18
  %36 = phi [1 x %struct.__jmp_buf_tag]* [ %7, %27 ], [ %13, %12 ], [ %19, %18 ]
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 1
  store void (%struct.__jmp_buf_tag*, i32)* %1, void (%struct.__jmp_buf_tag*, i32)** %37, align 8
  br label %38

38:                                               ; preds = %34, %30, %14, %3, %35
  %39 = phi [1 x %struct.__jmp_buf_tag]* [ %36, %35 ], [ null, %3 ], [ null, %14 ], [ null, %30 ], [ null, %34 ]
  ret [1 x %struct.__jmp_buf_tag]* %39
}

declare noalias i8* @cr_png_malloc_warn(%struct.png_struct_def*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_free_jmpbuf(%struct.png_struct_def* noalias) local_unnamed_addr #4 {
  %2 = alloca [1 x %struct.__jmp_buf_tag], align 16
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 2
  %6 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %5, align 8
  %7 = icmp eq [1 x %struct.__jmp_buf_tag]* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 0
  %13 = icmp eq [1 x %struct.__jmp_buf_tag]* %6, %12
  %14 = or i1 %13, %11
  br i1 %14, label %24, label %15

15:                                               ; preds = %8
  %16 = bitcast [1 x %struct.__jmp_buf_tag]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 200, i1 false)
  %17 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %2, i64 0, i64 0
  %18 = call i32 @_setjmp(%struct.__jmp_buf_tag* nonnull %17) #12
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  store [1 x %struct.__jmp_buf_tag]* %2, [1 x %struct.__jmp_buf_tag]** %5, align 8
  store i64 0, i64* %9, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 1
  store void (%struct.__jmp_buf_tag*, i32)* @longjmp, void (%struct.__jmp_buf_tag*, i32)** %21, align 8
  %22 = bitcast [1 x %struct.__jmp_buf_tag]* %6 to i8*
  call void @cr_png_free(%struct.png_struct_def* nonnull %0, i8* nonnull %22) #9
  br label %23

23:                                               ; preds = %15, %20
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %16) #9
  br label %24

24:                                               ; preds = %8, %4, %23
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 1
  %26 = bitcast void (%struct.__jmp_buf_tag*, i32)** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false)
  br label %27

27:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) #7

declare void @cr_png_free(%struct.png_struct_def*, i8*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @cr_png_longjmp(%struct.png_struct_def* noalias readonly, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 1
  %6 = load void (%struct.__jmp_buf_tag*, i32)*, void (%struct.__jmp_buf_tag*, i32)** %5, align 8
  %7 = icmp eq void (%struct.__jmp_buf_tag*, i32)* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 2
  %10 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %9, align 8
  %11 = icmp eq [1 x %struct.__jmp_buf_tag]* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %10, i64 0, i64 0
  tail call void %6(%struct.__jmp_buf_tag* %13, i32 %1) #9
  br label %14

14:                                               ; preds = %8, %4, %2, %12
  tail call void @abort() #11
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_error_fn(%struct.png_struct_def* noalias, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #2 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 6
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 4
  store void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)** %8, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 5
  store void (%struct.png_struct_def*, i8*)* %3, void (%struct.png_struct_def*, i8*)** %9, align 8
  br label %10

10:                                               ; preds = %4, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @cr_png_get_error_ptr(%struct.png_struct_def* noalias readonly) local_unnamed_addr #8 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 6
  %5 = load i8*, i8** %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ null, %1 ]
  ret i8* %7
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @cr_png_safe_error(%struct.png_struct_def* nocapture readonly, i8* readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 6
  %4 = bitcast i8** %3 to %struct.png_image**
  %5 = load %struct.png_image*, %struct.png_image** %4, align 8
  %6 = icmp eq %struct.png_image* %5, null
  br i1 %6, label %75, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 0
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %29

10:                                               ; preds = %7
  %11 = icmp eq i8* %1, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %10
  %13 = load i8, i8* %1, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12, %15
  %16 = phi i8 [ %22, %15 ], [ %13, %12 ]
  %17 = phi i8* [ %19, %15 ], [ %1, %12 ]
  %18 = phi i64 [ %20, %15 ], [ 0, %12 ]
  %19 = getelementptr inbounds i8, i8* %17, i64 1
  %20 = add nuw nsw i64 %18, 1
  %21 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 %18
  store i8 %16, i8* %21, align 1
  %22 = load i8, i8* %19, align 1
  %23 = icmp ne i8 %22, 0
  %24 = icmp ult i64 %20, 63
  %25 = and i1 %24, %23
  br i1 %25, label %15, label %26

26:                                               ; preds = %15, %12, %10
  %27 = phi i64 [ 0, %10 ], [ 0, %12 ], [ %20, %15 ]
  %28 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 %27
  store i8 0, i8* %28, align 1
  br label %29

29:                                               ; preds = %7, %26
  %30 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 7
  %31 = load i32, i32* %30, align 8
  %32 = or i32 %31, 2
  store i32 %32, i32* %30, align 8
  %33 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 0
  %34 = load %struct.png_control*, %struct.png_control** %33, align 8
  %35 = icmp eq %struct.png_control* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.png_control, %struct.png_control* %34, i64 0, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast i8* %38 to %struct.__jmp_buf_tag*
  tail call void @longjmp(%struct.__jmp_buf_tag* nonnull %41, i32 1) #11
  unreachable

42:                                               ; preds = %36, %29
  br i1 %9, label %43, label %75

43:                                               ; preds = %42
  store i8 98, i8* %8, align 1
  %44 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 1
  store i8 97, i8* %44, align 1
  %45 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 2
  store i8 100, i8* %45, align 1
  %46 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 3
  store i8 32, i8* %46, align 1
  %47 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 4
  store i8 108, i8* %47, align 1
  %48 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 5
  store i8 111, i8* %48, align 1
  %49 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 6
  store i8 110, i8* %49, align 1
  %50 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 7
  store i8 103, i8* %50, align 1
  %51 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 8
  store i8 106, i8* %51, align 1
  %52 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 9
  store i8 109, i8* %52, align 1
  %53 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 10
  store i8 112, i8* %53, align 1
  %54 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 11
  store i8 58, i8* %54, align 1
  %55 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 12
  store i8 32, i8* %55, align 1
  %56 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 13
  store i8 0, i8* %56, align 1
  %57 = icmp eq i8* %1, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %43
  %59 = load i8, i8* %1, align 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %61
  %62 = phi i8 [ %68, %61 ], [ %59, %58 ]
  %63 = phi i8* [ %65, %61 ], [ %1, %58 ]
  %64 = phi i64 [ %66, %61 ], [ 13, %58 ]
  %65 = getelementptr inbounds i8, i8* %63, i64 1
  %66 = add nuw nsw i64 %64, 1
  %67 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 %64
  store i8 %62, i8* %67, align 1
  %68 = load i8, i8* %65, align 1
  %69 = icmp ne i8 %68, 0
  %70 = icmp ult i64 %66, 63
  %71 = and i1 %70, %69
  br i1 %71, label %61, label %72

72:                                               ; preds = %61, %58, %43
  %73 = phi i64 [ 13, %43 ], [ 13, %58 ], [ %66, %61 ]
  %74 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 %73
  store i8 0, i8* %74, align 1
  br label %75

75:                                               ; preds = %42, %72, %2
  tail call void @abort() #11
  unreachable
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_safe_warning(%struct.png_struct_def* nocapture readonly, i8* readonly) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 6
  %4 = bitcast i8** %3 to %struct.png_image**
  %5 = load %struct.png_image*, %struct.png_image** %4, align 8
  %6 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %35

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 0
  %11 = icmp eq i8* %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %9
  %13 = icmp eq i8* %1, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %12
  %15 = load i8, i8* %1, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %14, %17
  %18 = phi i8 [ %24, %17 ], [ %15, %14 ]
  %19 = phi i8* [ %21, %17 ], [ %1, %14 ]
  %20 = phi i64 [ %22, %17 ], [ 0, %14 ]
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  %22 = add nuw nsw i64 %20, 1
  %23 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 %20
  store i8 %18, i8* %23, align 1
  %24 = load i8, i8* %21, align 1
  %25 = icmp ne i8 %24, 0
  %26 = icmp ult i64 %22, 63
  %27 = and i1 %26, %25
  br i1 %27, label %17, label %28

28:                                               ; preds = %17, %14, %12
  %29 = phi i64 [ 0, %12 ], [ 0, %14 ], [ %22, %17 ]
  %30 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 8, i64 %29
  store i8 0, i8* %30, align 1
  %31 = load i32, i32* %6, align 8
  %32 = or i32 %31, 1
  br label %33

33:                                               ; preds = %9, %28
  %34 = phi i32 [ 1, %9 ], [ %32, %28 ]
  store i32 %34, i32* %6, align 8
  br label %35

35:                                               ; preds = %33, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_safe_execute(%struct.png_image*, i32 (i8*)* nocapture, i8*) local_unnamed_addr #4 {
  %4 = alloca %struct.png_image*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca [1 x %struct.__jmp_buf_tag], align 16
  %8 = bitcast %struct.png_image** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  store volatile %struct.png_image* inttoptr (i64 -6148914691236517206 to %struct.png_image*), %struct.png_image** %4, align 8
  store volatile %struct.png_image* %0, %struct.png_image** %4, align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9)
  store volatile i32 -1431655766, i32* %5, align 4
  %10 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  store volatile i64 -6148914691236517206, i64* %6, align 8
  %11 = bitcast [1 x %struct.__jmp_buf_tag]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 200, i1 false)
  %12 = load volatile %struct.png_image*, %struct.png_image** %4, align 8
  %13 = getelementptr inbounds %struct.png_image, %struct.png_image* %12, i64 0, i32 0
  %14 = load %struct.png_control*, %struct.png_control** %13, align 8
  %15 = getelementptr inbounds %struct.png_control, %struct.png_control* %14, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  store volatile i64 %17, i64* %6, align 8
  %18 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %7, i64 0, i64 0
  %19 = call i32 @_setjmp(%struct.__jmp_buf_tag* nonnull %18) #12
  %20 = icmp eq i32 %19, 0
  %21 = zext i1 %20 to i32
  store volatile i32 %21, i32* %5, align 4
  %22 = load volatile i32, i32* %5, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %3
  %25 = load volatile %struct.png_image*, %struct.png_image** %4, align 8
  %26 = getelementptr inbounds %struct.png_image, %struct.png_image* %25, i64 0, i32 0
  %27 = load %struct.png_control*, %struct.png_control** %26, align 8
  %28 = getelementptr inbounds %struct.png_control, %struct.png_control* %27, i64 0, i32 2
  %29 = bitcast i8** %28 to [1 x %struct.__jmp_buf_tag]**
  store [1 x %struct.__jmp_buf_tag]* %7, [1 x %struct.__jmp_buf_tag]** %29, align 8
  %30 = call i32 %1(i8* %2) #9
  store volatile i32 %30, i32* %5, align 4
  br label %31

31:                                               ; preds = %3, %24
  %32 = load volatile i64, i64* %6, align 8
  %33 = inttoptr i64 %32 to i8*
  %34 = load volatile %struct.png_image*, %struct.png_image** %4, align 8
  %35 = getelementptr inbounds %struct.png_image, %struct.png_image* %34, i64 0, i32 0
  %36 = load %struct.png_control*, %struct.png_control** %35, align 8
  %37 = getelementptr inbounds %struct.png_control, %struct.png_control* %36, i64 0, i32 2
  store i8* %33, i8** %37, align 8
  %38 = load volatile i32, i32* %5, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = load volatile %struct.png_image*, %struct.png_image** %4, align 8
  call void @cr_png_image_free(%struct.png_image* %41) #9
  br label %42

42:                                               ; preds = %40, %31
  %43 = load volatile i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  ret i32 %43
}

declare void @cr_png_image_free(%struct.png_image*) local_unnamed_addr #5

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind returns_twice }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"cr_png_warning: argument 0"}
!4 = distinct !{!4, !"cr_png_warning"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"cr_png_chunk_benign_error: argument 0"}
!7 = distinct !{!7, !"cr_png_chunk_benign_error"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"cr_png_warning: argument 0"}
!10 = distinct !{!10, !"cr_png_warning"}
