; ModuleID = '../../ui/ozone/platform/wayland/host/wayland_input_method_context.cc'
source_filename = "../../ui/ozone/platform/wayland/host/wayland_input_method_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::KeyboardLayoutEngine" = type { i32 (...)** }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.ui::WaylandInputMethodContext" = type { %"class.ui::LinuxInputMethodContext", %"class.ui::ZWPTextInputWrapperClient", %"class.ui::WaylandConnection"*, %"class.ui::WaylandKeyboard::Delegate"*, %"class.ui::LinuxInputMethodContextDelegate"*, i8, %"class.std::__1::unique_ptr.338", %"class.ui::CharacterComposer" }
%"class.ui::LinuxInputMethodContext" = type { i32 (...)** }
%"class.ui::ZWPTextInputWrapperClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.ui::ZWPTextInputWrapper"* }
%"class.ui::ZWPTextInputWrapper" = type { i32 (...)** }
%"class.ui::CharacterComposer" = type <{ %"class.std::__1::vector.344", %"class.std::__1::vector.351", %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358", i32, [4 x i8] }>
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.ui::DomKey"*, %"class.ui::DomKey"*, %"class.std::__1::__compressed_pair.346" }
%"class.ui::DomKey" = type { i32 }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.ui::DomKey"* }
%"class.std::__1::vector.351" = type { %"class.std::__1::__vector_base.352" }
%"class.std::__1::__vector_base.352" = type { i32*, i32*, %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { i32* }
%"class.std::__1::basic_string.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.361 }
%union.anon.361 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.ui::WaylandConnection" = type { i32, %"class.wl::Object", %"class.wl::Object.1", %"class.wl::Object.5", %"class.wl::Object.9", %"class.wl::Object.13", %"class.wl::Object.17", %"class.wl::Object.21", %"class.wl::Object.25", %"class.wl::Object.29", %"class.wl::Object.33", %"class.wl::Object.37", %"class.wl::Object.41", %"class.wl::Object.45", %"class.wl::Object.49", %"class.wl::Object.53", %"class.wl::Object.57", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.326", i32, %"class.std::__1::unique_ptr.332", %"class.ui::WaylandWindowManager", %"class.ui::WaylandCursorBufferListener"*, i8, %"struct.ui::WaylandConnection::EventSerial", i32 }
%"class.wl::Object" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.wl_display* }
%struct.wl_display = type opaque
%"class.wl::Object.1" = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %struct.wl_proxy* }
%struct.wl_proxy = type opaque
%"class.wl::Object.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %struct.wl_event_queue* }
%struct.wl_event_queue = type opaque
%"class.wl::Object.9" = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %struct.wl_registry* }
%struct.wl_registry = type opaque
%"class.wl::Object.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %struct.wl_compositor* }
%struct.wl_compositor = type opaque
%"class.wl::Object.17" = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.wl_subcompositor* }
%struct.wl_subcompositor = type opaque
%"class.wl::Object.21" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %struct.wl_seat* }
%struct.wl_seat = type opaque
%"class.wl::Object.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %struct.xdg_wm_base* }
%struct.xdg_wm_base = type opaque
%"class.wl::Object.29" = type { %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %struct.zxdg_shell_v6* }
%struct.zxdg_shell_v6 = type opaque
%"class.wl::Object.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.wp_presentation* }
%struct.wp_presentation = type opaque
%"class.wl::Object.37" = type { %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %struct.wp_viewporter* }
%struct.wp_viewporter = type opaque
%"class.wl::Object.41" = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %struct.zcr_keyboard_extension_v1* }
%struct.zcr_keyboard_extension_v1 = type opaque
%"class.wl::Object.45" = type { %"class.std::__1::unique_ptr.46" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %struct.zwp_text_input_manager_v1* }
%struct.zwp_text_input_manager_v1 = type opaque
%"class.wl::Object.49" = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %struct.zwp_linux_explicit_synchronization_v1* }
%struct.zwp_linux_explicit_synchronization_v1 = type opaque
%"class.wl::Object.53" = type { %"class.std::__1::unique_ptr.54" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %struct.zxdg_decoration_manager_v1* }
%struct.zxdg_decoration_manager_v1 = type opaque
%"class.wl::Object.57" = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.zcr_extended_drag_v1* }
%struct.zcr_extended_drag_v1 = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.ui::WaylandEventSource"* }
%"class.ui::WaylandEventSource" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.ui::WaylandKeyboard"* }
%"class.ui::WaylandKeyboard" = type { %"class.ui::EventAutoRepeatHandler::Delegate", %"class.wl::Object.68", %"class.std::__1::unique_ptr.72", %"class.ui::WaylandConnection"*, %"class.ui::WaylandKeyboard::Delegate"*, %"class.ui::EventAutoRepeatHandler", %"class.base::OnceCallback", %"class.wl::Object.86", %"class.ui::XkbKeyboardLayoutEngine"* }
%"class.ui::EventAutoRepeatHandler::Delegate" = type { i32 (...)** }
%"class.wl::Object.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %struct.wl_keyboard* }
%struct.wl_keyboard = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.ui::WaylandKeyboard::ZCRExtendedKeyboard"* }
%"class.ui::WaylandKeyboard::ZCRExtendedKeyboard" = type opaque
%"class.ui::EventAutoRepeatHandler" = type { i8, i32, i32, i32, i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.ui::EventAutoRepeatHandler::Delegate"*, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.85", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.wl::Object.86" = type { %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %struct.wl_callback* }
%struct.wl_callback = type opaque
%"class.ui::XkbKeyboardLayoutEngine" = type { %"class.ui::KeyboardLayoutEngine", %"class.std::__1::vector", %"class.base::flat_map", i32, i32, %"class.ui::XkbKeyCodeConverter"*, %"class.std::__1::unique_ptr.100", %"class.std::__1::vector.104", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.120", %"class.std::__1::basic_string", i32, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.124" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::XkbKeyboardLayoutEngine::XkbFlagMapEntry"*, %"struct.ui::XkbKeyboardLayoutEngine::XkbFlagMapEntry"*, %"class.std::__1::__compressed_pair.90" }
%"struct.ui::XkbKeyboardLayoutEngine::XkbFlagMapEntry" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.ui::XkbKeyboardLayoutEngine::XkbFlagMapEntry"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.93" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.95" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::pair"* }
%"class.ui::XkbKeyCodeConverter" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %struct.xkb_state* }
%struct.xkb_state = type opaque
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.ui::XkbKeyboardLayoutEngine::XkbKeymapEntry"*, %"struct.ui::XkbKeyboardLayoutEngine::XkbKeymapEntry"*, %"class.std::__1::__compressed_pair.111" }
%"struct.ui::XkbKeyboardLayoutEngine::XkbKeymapEntry" = type { %"class.std::__1::basic_string", %struct.xkb_keymap* }
%struct.xkb_keymap = type opaque
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.ui::XkbKeyboardLayoutEngine::XkbKeymapEntry"* }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %struct.xkb_context* }
%struct.xkb_context = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %struct.xkb_keymap* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::WeakPtrFactory.124" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.ui::WaylandPointer"* }
%"class.ui::WaylandPointer" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.ui::WaylandTouch"* }
%"class.ui::WaylandTouch" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.ui::WaylandCursor"* }
%"class.ui::WaylandCursor" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.ui::WaylandDataDeviceManager"* }
%"class.ui::WaylandDataDeviceManager" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.ui::WaylandOutputManager"* }
%"class.ui::WaylandOutputManager" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.ui::WaylandCursorPosition"* }
%"class.ui::WaylandCursorPosition" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.ui::WaylandZAuraShell"* }
%"class.ui::WaylandZAuraShell" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.ui::WaylandZcrCursorShapes"* }
%"class.ui::WaylandZcrCursorShapes" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.ui::WaylandZwpPointerGestures"* }
%"class.ui::WaylandZwpPointerGestures" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.ui::WaylandZwpLinuxDmabuf"* }
%"class.ui::WaylandZwpLinuxDmabuf" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.ui::WaylandDrm"* }
%"class.ui::WaylandDrm" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.ui::WaylandShm"* }
%"class.ui::WaylandShm" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.ui::WaylandBufferManagerHost"* }
%"class.ui::WaylandBufferManagerHost" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.ui::XdgForeignWrapper"* }
%"class.ui::XdgForeignWrapper" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.ui::GtkPrimarySelectionDeviceManager"* }
%"class.ui::GtkPrimarySelectionDeviceManager" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.ui::ZwpPrimarySelectionDeviceManager"* }
%"class.ui::ZwpPrimarySelectionDeviceManager" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.ui::WaylandClipboard"* }
%"class.ui::WaylandClipboard" = type { %"class.ui::PlatformClipboard", %"class.ui::WaylandConnection"*, %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227" }
%"class.ui::PlatformClipboard" = type { i32 (...)** }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.wl::Clipboard"* }
%"class.wl::Clipboard" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.ui::GtkShell1"* }
%"class.ui::GtkShell1" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.ui::WaylandDataDragController"* }
%"class.ui::WaylandDataDragController" = type { %"class.ui::WaylandDataDevice::DragDelegate", %"class.wl::DataSource<wl_data_source>::Delegate", %"class.ui::WaylandWindowObserver", %"class.ui::WaylandConnection"*, %"class.ui::WaylandDataDeviceManager"*, %"class.ui::WaylandDataDevice"*, %"class.ui::WaylandWindowManager"*, i32, %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.263", %"class.std::__1::list", %"class.ui::WaylandWindow"*, %"class.ui::WaylandWindow"*, %"class.gfx::PointF", %"class.std::__1::unique_ptr.297", i8, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %class.SkBitmap*, %"class.base::WeakPtrFactory.322" }
%"class.ui::WaylandDataDevice::DragDelegate" = type { i32 (...)** }
%"class.wl::DataSource<wl_data_source>::Delegate" = type { i32 (...)** }
%"class.ui::WaylandWindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.245" }
%"class.base::WeakPtrFactory.245" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::WaylandDataDevice" = type { %"class.ui::WaylandDataDeviceBase", %"class.wl::Object.259", %"class.ui::WaylandDataDevice::DragDelegate"*, %"class.std::__1::unique_ptr.263" }
%"class.ui::WaylandDataDeviceBase" = type { i32 (...)**, %"class.ui::WaylandDataDeviceBase::SelectionDelegate"*, %"class.ui::WaylandConnection"*, %"class.std::__1::unique_ptr.246", %"class.base::OnceCallback", %"class.wl::Object.86" }
%"class.ui::WaylandDataDeviceBase::SelectionDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.ui::WaylandDataOfferBase"* }
%"class.ui::WaylandDataOfferBase" = type <{ i32 (...)**, %"class.std::__1::vector.249", i8, [7 x i8] }>
%"class.std::__1::vector.249" = type { %"class.std::__1::__vector_base.250" }
%"class.std::__1::__vector_base.250" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::basic_string"* }
%"class.wl::Object.259" = type { %"class.std::__1::unique_ptr.260" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %struct.wl_data_device* }
%struct.wl_data_device = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.wl::DataSource"* }
%"class.wl::DataSource" = type <{ %"class.wl::Object.290", %"class.ui::WaylandConnection"*, %"class.wl::DataSource<wl_data_source>::Delegate"*, i32, [4 x i8] }>
%"class.wl::Object.290" = type { %"class.std::__1::unique_ptr.291" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %struct.wl_data_source* }
%struct.wl_data_source = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.ui::WaylandDataOffer"* }
%"class.ui::WaylandDataOffer" = type opaque
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.303" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { i64 }
%"class.ui::WaylandWindow" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.ui::OSExchangeData"* }
%"class.ui::OSExchangeData" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.ui::WaylandSurface"* }
%"class.ui::WaylandSurface" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.ui::WaylandShmBuffer"* }
%"class.ui::WaylandShmBuffer" = type opaque
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.321 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.320, i32, i32 }
%class.sk_sp.320 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.79" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.321 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.base::WeakPtrFactory.322" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.ui::WaylandWindowDragController"* }
%"class.ui::WaylandWindowDragController" = type opaque
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.wl::WaylandProxy"* }
%"class.wl::WaylandProxy" = type opaque
%"class.ui::WaylandWindowManager" = type <{ %"class.base::ObserverList", %"class.base::flat_map.277", %"class.ui::WaylandWindow"*, i32, [4 x i8] }>
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.269", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.272" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.271 }
%class.scoped_refptr.271 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::flat_map.277" = type { %"class.base::internal::flat_tree.278" }
%"class.base::internal::flat_tree.278" = type { %"class.std::__1::vector.279" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.std::__1::pair.281"*, %"struct.std::__1::pair.281"*, %"class.std::__1::__compressed_pair.282" }
%"struct.std::__1::pair.281" = type opaque
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::pair.281"* }
%"class.ui::WaylandCursorBufferListener" = type opaque
%"struct.ui::WaylandConnection::EventSerial" = type { i32, i32 }
%"class.ui::WaylandKeyboard::Delegate" = type { i32 (...)** }
%"class.ui::LinuxInputMethodContextDelegate" = type { i32 (...)** }
%"class.base::CommandLine" = type { %"class.std::__1::vector.249", %"class.std::__1::map", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"class.ui::ZWPTextInputWrapperV1" = type { %"class.ui::ZWPTextInputWrapper", %"class.ui::WaylandConnection"*, %"class.wl::Object.370", %"class.ui::ZWPTextInputWrapperClient"*, %"class.std::__1::vector.374", i32, %"class.std::__1::basic_string" }
%"class.wl::Object.370" = type { %"class.std::__1::unique_ptr.371" }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %struct.zwp_text_input_v1* }
%struct.zwp_text_input_v1 = type opaque
%"class.std::__1::vector.374" = type { %"class.std::__1::__vector_base.375" }
%"class.std::__1::__vector_base.375" = type { %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"*, %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"*, %"class.std::__1::__compressed_pair.376" }
%"struct.ui::ZWPTextInputWrapperClient::SpanStyle" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"* }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.394" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.384", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.384" = type { %"class.base::internal::flat_tree.385" }
%"class.base::internal::flat_tree.385" = type { %"class.std::__1::vector.386" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"*, %"class.std::__1::__compressed_pair.389" }
%"struct.std::__1::pair.388" = type opaque
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"struct.std::__1::pair.388"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.base::flat_map.397"* }
%"class.base::flat_map.397" = type { %"class.base::internal::flat_tree.398" }
%"class.base::internal::flat_tree.398" = type { %"class.std::__1::vector.399" }
%"class.std::__1::vector.399" = type { %"class.std::__1::__vector_base.400" }
%"class.std::__1::__vector_base.400" = type { %"struct.std::__1::pair.401"*, %"struct.std::__1::pair.401"*, %"class.std::__1::__compressed_pair.409" }
%"struct.std::__1::pair.401" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.402" }
%"class.std::__1::vector.402" = type { %"class.std::__1::__vector_base.403" }
%"class.std::__1::__vector_base.403" = type { i8*, i8*, %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { i8* }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::pair.401"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.362 }
%struct.anon.362 = type { %"struct.std::__1::__padding.363", i8 }
%"struct.std::__1::__padding.363" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.ui::CompositionText" = type { %"class.std::__1::basic_string.358", %"class.std::__1::vector.417", %"class.gfx::Range" }
%"class.std::__1::vector.417" = type { %"class.std::__1::__vector_base.418" }
%"class.std::__1::__vector_base.418" = type { %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"*, %"class.std::__1::__compressed_pair.419" }
%"struct.ui::ImeTextSpan" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.std::__1::vector.249" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"struct.ui::ImeTextSpan"* }
%"class.gfx::Range" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZTVN2ui25WaylandInputMethodContextE = hidden unnamed_addr constant { [14 x i8*], [8 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*)* @_ZN2ui25WaylandInputMethodContextD2Ev to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*)* @_ZN2ui25WaylandInputMethodContextD0Ev to i8*), i8* bitcast (i1 (%"class.ui::WaylandInputMethodContext"*, %"class.ui::KeyEvent"*)* @_ZN2ui25WaylandInputMethodContext16DispatchKeyEventERKNS_8KeyEventE to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, %"class.gfx::Rect"*)* @_ZN2ui25WaylandInputMethodContext17SetCursorLocationERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, %"class.std::__1::basic_string.358"*, %"class.gfx::Range"*)* @_ZN2ui25WaylandInputMethodContext18SetSurroundingTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN3gfx5RangeE to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*)* @_ZN2ui25WaylandInputMethodContext5ResetEv to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*)* @_ZN2ui25WaylandInputMethodContext5FocusEv to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*)* @_ZN2ui25WaylandInputMethodContext4BlurEv to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, i8*, i64, %"class.std::__1::vector.374"*, i32)* @_ZN2ui25WaylandInputMethodContext15OnPreeditStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS_25ZWPTextInputWrapperClient9SpanStyleENS3_9allocatorIS9_EEEEi to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, i8*, i64)* @_ZN2ui25WaylandInputMethodContext14OnCommitStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, i32, i32)* @_ZN2ui25WaylandInputMethodContext23OnDeleteSurroundingTextEij to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, i32, i32, i32)* @_ZN2ui25WaylandInputMethodContext8OnKeysymEjjj to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*)* @_ZThn8_N2ui25WaylandInputMethodContextD1Ev to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*)* @_ZThn8_N2ui25WaylandInputMethodContextD0Ev to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, i8*, i64, %"class.std::__1::vector.374"*, i32)* @_ZThn8_N2ui25WaylandInputMethodContext15OnPreeditStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS_25ZWPTextInputWrapperClient9SpanStyleENS3_9allocatorIS9_EEEEi to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, i8*, i64)* @_ZThn8_N2ui25WaylandInputMethodContext14OnCommitStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, i32, i32)* @_ZThn8_N2ui25WaylandInputMethodContext23OnDeleteSurroundingTextEij to i8*), i8* bitcast (void (%"class.ui::WaylandInputMethodContext"*, i32, i32, i32)* @_ZThn8_N2ui25WaylandInputMethodContext8OnKeysymEjjj to i8*)] }, align 8
@.str = private unnamed_addr constant [69 x i8] c"../../ui/ozone/platform/wayland/host/wayland_input_method_context.cc\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Unsupported style. Skipped: \00", align 1
@_ZN8switches17kEnableWaylandImeE = external constant [0 x i8], align 1
@_ZN8switches18kDisableWaylandImeE = external constant [0 x i8], align 1
@_ZN2uiL24kPropertyKeyboardImeFlagE = internal constant [25 x i8] c"_keyevent_kbd_ime_flags_\00", align 16
@_ZN2ui27KeyboardLayoutEngineManager23keyboard_layout_engine_E = external local_unnamed_addr global %"class.ui::KeyboardLayoutEngine"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2ui25WaylandInputMethodContextC1EPNS_17WaylandConnectionEPNS_15WaylandKeyboard8DelegateEPNS_31LinuxInputMethodContextDelegateEb = hidden unnamed_addr alias void (%"class.ui::WaylandInputMethodContext"*, %"class.ui::WaylandConnection"*, %"class.ui::WaylandKeyboard::Delegate"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1), void (%"class.ui::WaylandInputMethodContext"*, %"class.ui::WaylandConnection"*, %"class.ui::WaylandKeyboard::Delegate"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)* @_ZN2ui25WaylandInputMethodContextC2EPNS_17WaylandConnectionEPNS_15WaylandKeyboard8DelegateEPNS_31LinuxInputMethodContextDelegateEb
@_ZN2ui25WaylandInputMethodContextD1Ev = hidden unnamed_addr alias void (%"class.ui::WaylandInputMethodContext"*), void (%"class.ui::WaylandInputMethodContext"*)* @_ZN2ui25WaylandInputMethodContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContextC2EPNS_17WaylandConnectionEPNS_15WaylandKeyboard8DelegateEPNS_31LinuxInputMethodContextDelegateEb(%"class.ui::WaylandInputMethodContext"*, %"class.ui::WaylandConnection"*, %"class.ui::WaylandKeyboard::Delegate"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = zext i1 %4 to i8
  %7 = bitcast %"class.ui::WaylandInputMethodContext"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 2
  store %"class.ui::WaylandConnection"* %1, %"class.ui::WaylandConnection"** %8, align 8
  %9 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 3
  store %"class.ui::WaylandKeyboard::Delegate"* %2, %"class.ui::WaylandKeyboard::Delegate"** %9, align 8
  %10 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 4
  store %"class.ui::LinuxInputMethodContextDelegate"* %3, %"class.ui::LinuxInputMethodContextDelegate"** %10, align 8
  %11 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 5
  store i8 %6, i8* %11, align 8
  %12 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 6
  %13 = bitcast %"class.std::__1::unique_ptr.338"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 7
  tail call void @_ZN2ui17CharacterComposerC1Ev(%"class.ui::CharacterComposer"* %14) #9
  tail call void @_ZN2ui25WaylandInputMethodContext4InitEb(%"class.ui::WaylandInputMethodContext"* %0, i1 zeroext false)
  ret void
}

declare void @_ZN2ui17CharacterComposerC1Ev(%"class.ui::CharacterComposer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext4InitEb(%"class.ui::WaylandInputMethodContext"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %1, label %8, label %3

3:                                                ; preds = %2
  %4 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #9
  %5 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kEnableWaylandImeE, i64 0, i64 0)) #9
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kDisableWaylandImeE, i64 0, i64 0)) #9
  br label %43

8:                                                ; preds = %3, %2
  %9 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %43

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %14 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %13, align 8
  %15 = icmp eq %"class.ui::ZWPTextInputWrapper"* %14, null
  br i1 %15, label %16, label %43

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 2
  %18 = load %"class.ui::WaylandConnection"*, %"class.ui::WaylandConnection"** %17, align 8
  %19 = getelementptr inbounds %"class.ui::WaylandConnection", %"class.ui::WaylandConnection"* %18, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %20 = load %struct.zwp_text_input_manager_v1*, %struct.zwp_text_input_manager_v1** %19, align 8
  %21 = icmp eq %struct.zwp_text_input_manager_v1* %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %16
  %23 = tail call i8* @_Znwm(i64 88) #10
  %24 = bitcast i8* %23 to %"class.ui::ZWPTextInputWrapperV1"*
  tail call void @_ZN2ui21ZWPTextInputWrapperV1C1EP25zwp_text_input_manager_v1(%"class.ui::ZWPTextInputWrapperV1"* nonnull %24, %struct.zwp_text_input_manager_v1* nonnull %20) #9
  %25 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %13, align 8
  %26 = bitcast %"class.ui::ZWPTextInputWrapper"** %13 to i8**
  store i8* %23, i8** %26, align 8
  %27 = icmp eq %"class.ui::ZWPTextInputWrapper"* %25, null
  %28 = bitcast i8* %23 to %"class.ui::ZWPTextInputWrapper"*
  br i1 %27, label %35, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.ui::ZWPTextInputWrapper"* %25 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %31 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %31, i64 1
  %33 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %32, align 8
  tail call void %33(%"class.ui::ZWPTextInputWrapper"* nonnull %25) #9
  %34 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %13, align 8
  br label %35

35:                                               ; preds = %29, %22
  %36 = phi %"class.ui::ZWPTextInputWrapper"* [ %34, %29 ], [ %28, %22 ]
  %37 = load %"class.ui::WaylandConnection"*, %"class.ui::WaylandConnection"** %17, align 8
  %38 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 1
  %39 = bitcast %"class.ui::ZWPTextInputWrapper"* %36 to void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandConnection"*, %"class.ui::ZWPTextInputWrapperClient"*)***
  %40 = load void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandConnection"*, %"class.ui::ZWPTextInputWrapperClient"*)**, void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandConnection"*, %"class.ui::ZWPTextInputWrapperClient"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandConnection"*, %"class.ui::ZWPTextInputWrapperClient"*)*, void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandConnection"*, %"class.ui::ZWPTextInputWrapperClient"*)** %40, i64 2
  %42 = load void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandConnection"*, %"class.ui::ZWPTextInputWrapperClient"*)*, void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandConnection"*, %"class.ui::ZWPTextInputWrapperClient"*)** %41, align 8
  tail call void %42(%"class.ui::ZWPTextInputWrapper"* %36, %"class.ui::WaylandConnection"* %37, %"class.ui::ZWPTextInputWrapperClient"* %38) #9
  br label %43

43:                                               ; preds = %12, %6, %16, %8, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContextD2Ev(%"class.ui::WaylandInputMethodContext"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::WaylandInputMethodContext"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  %5 = icmp eq %"class.ui::ZWPTextInputWrapper"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::ZWPTextInputWrapper"* %4 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %8 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %8, i64 5
  %10 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %9, align 8
  tail call void %10(%"class.ui::ZWPTextInputWrapper"* nonnull %4) #9
  %11 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  %12 = bitcast %"class.ui::ZWPTextInputWrapper"* %11 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %13 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %13, i64 7
  %15 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %14, align 8
  tail call void %15(%"class.ui::ZWPTextInputWrapper"* %11) #9
  br label %16

16:                                               ; preds = %1, %6
  %17 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 7
  tail call void @_ZN2ui17CharacterComposerD1Ev(%"class.ui::CharacterComposer"* %17) #9
  %18 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  store %"class.ui::ZWPTextInputWrapper"* null, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  %19 = icmp eq %"class.ui::ZWPTextInputWrapper"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.ui::ZWPTextInputWrapper"* %18 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %22 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %22, i64 1
  %24 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %23, align 8
  tail call void %24(%"class.ui::ZWPTextInputWrapper"* nonnull %18) #9
  br label %25

25:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui17CharacterComposerD1Ev(%"class.ui::CharacterComposer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2ui25WaylandInputMethodContextD1Ev(%"class.ui::WaylandInputMethodContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 -1, i32 7, i32 4
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 12
  %5 = bitcast i32* %4 to %"class.ui::ZWPTextInputWrapper"**
  %6 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %5, align 8
  %7 = icmp eq %"class.ui::ZWPTextInputWrapper"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.ui::ZWPTextInputWrapper"* %6 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %10 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %10, i64 5
  %12 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %11, align 8
  tail call void %12(%"class.ui::ZWPTextInputWrapper"* nonnull %6) #9
  %13 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %5, align 8
  %14 = bitcast %"class.ui::ZWPTextInputWrapper"* %13 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %15 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %15, i64 7
  %17 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %16, align 8
  tail call void %17(%"class.ui::ZWPTextInputWrapper"* %13) #9
  br label %18

18:                                               ; preds = %8, %1
  %19 = getelementptr inbounds i32, i32* %2, i64 14
  %20 = bitcast i32* %19 to %"class.ui::CharacterComposer"*
  tail call void @_ZN2ui17CharacterComposerD1Ev(%"class.ui::CharacterComposer"* %20) #9
  %21 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %5, align 8
  store %"class.ui::ZWPTextInputWrapper"* null, %"class.ui::ZWPTextInputWrapper"** %5, align 8
  %22 = icmp eq %"class.ui::ZWPTextInputWrapper"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.ui::ZWPTextInputWrapper"* %21 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %25 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %25, i64 1
  %27 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %26, align 8
  tail call void %27(%"class.ui::ZWPTextInputWrapper"* nonnull %21) #9
  br label %28

28:                                               ; preds = %18, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContextD0Ev(%"class.ui::WaylandInputMethodContext"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::WaylandInputMethodContext"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  %5 = icmp eq %"class.ui::ZWPTextInputWrapper"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::ZWPTextInputWrapper"* %4 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %8 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %8, i64 5
  %10 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %9, align 8
  tail call void %10(%"class.ui::ZWPTextInputWrapper"* nonnull %4) #9
  %11 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  %12 = bitcast %"class.ui::ZWPTextInputWrapper"* %11 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %13 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %13, i64 7
  %15 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %14, align 8
  tail call void %15(%"class.ui::ZWPTextInputWrapper"* %11) #9
  br label %16

16:                                               ; preds = %6, %1
  %17 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 7
  tail call void @_ZN2ui17CharacterComposerD1Ev(%"class.ui::CharacterComposer"* %17) #9
  %18 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  store %"class.ui::ZWPTextInputWrapper"* null, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  %19 = icmp eq %"class.ui::ZWPTextInputWrapper"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.ui::ZWPTextInputWrapper"* %18 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %22 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %22, i64 1
  %24 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %23, align 8
  tail call void %24(%"class.ui::ZWPTextInputWrapper"* nonnull %18) #9
  br label %25

25:                                               ; preds = %16, %20
  %26 = bitcast %"class.ui::WaylandInputMethodContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2ui25WaylandInputMethodContextD0Ev(%"class.ui::WaylandInputMethodContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 -1, i32 7, i32 4
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN2ui25WaylandInputMethodContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 12
  %5 = bitcast i32* %4 to %"class.ui::ZWPTextInputWrapper"**
  %6 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %5, align 8
  %7 = icmp eq %"class.ui::ZWPTextInputWrapper"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.ui::ZWPTextInputWrapper"* %6 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %10 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %10, i64 5
  %12 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %11, align 8
  tail call void %12(%"class.ui::ZWPTextInputWrapper"* nonnull %6) #9
  %13 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %5, align 8
  %14 = bitcast %"class.ui::ZWPTextInputWrapper"* %13 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %15 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %15, i64 7
  %17 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %16, align 8
  tail call void %17(%"class.ui::ZWPTextInputWrapper"* %13) #9
  br label %18

18:                                               ; preds = %8, %1
  %19 = getelementptr inbounds i32, i32* %2, i64 14
  %20 = bitcast i32* %19 to %"class.ui::CharacterComposer"*
  tail call void @_ZN2ui17CharacterComposerD1Ev(%"class.ui::CharacterComposer"* %20) #9
  %21 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %5, align 8
  store %"class.ui::ZWPTextInputWrapper"* null, %"class.ui::ZWPTextInputWrapper"** %5, align 8
  %22 = icmp eq %"class.ui::ZWPTextInputWrapper"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.ui::ZWPTextInputWrapper"* %21 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %25 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %25, i64 1
  %27 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %26, align 8
  tail call void %27(%"class.ui::ZWPTextInputWrapper"* nonnull %21) #9
  br label %28

28:                                               ; preds = %18, %23
  %29 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui25WaylandInputMethodContext16DispatchKeyEventERKNS_8KeyEventE(%"class.ui::WaylandInputMethodContext"*, %"class.ui::KeyEvent"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.358", align 8
  %4 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 7
  br i1 %6, label %7, label %278

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %9 = load %"class.base::flat_map.397"*, %"class.base::flat_map.397"** %8, align 8
  %10 = icmp eq %"class.base::flat_map.397"* %9, null
  br i1 %10, label %278, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::flat_map.397", %"class.base::flat_map.397"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.401"*, %"struct.std::__1::pair.401"** %12, align 8
  %14 = getelementptr inbounds %"class.base::flat_map.397", %"class.base::flat_map.397"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair.401"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = ptrtoint %"struct.std::__1::pair.401"* %13 to i64
  %18 = sub i64 %16, %17
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %16 to %"struct.std::__1::pair.401"*
  br i1 %19, label %40, label %21

21:                                               ; preds = %11
  %22 = sdiv exact i64 %18, 48
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi %"struct.std::__1::pair.401"* [ %13, %21 ], [ %35, %23 ]
  %25 = phi i64 [ %22, %21 ], [ %34, %23 ]
  %26 = lshr i64 %25, 1
  %27 = getelementptr inbounds %"struct.std::__1::pair.401", %"struct.std::__1::pair.401"* %24, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.401", %"struct.std::__1::pair.401"* %27, i64 0, i32 0
  %29 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN2uiL24kPropertyKeyboardImeFlagE, i64 0, i64 0)) #9
  %30 = icmp slt i32 %29, 0
  %31 = getelementptr inbounds %"struct.std::__1::pair.401", %"struct.std::__1::pair.401"* %27, i64 1
  %32 = xor i64 %26, -1
  %33 = add i64 %25, %32
  %34 = select i1 %30, i64 %33, i64 %26
  %35 = select i1 %30, %"struct.std::__1::pair.401"* %31, %"struct.std::__1::pair.401"* %24
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %37, label %23

37:                                               ; preds = %23
  %38 = load %"struct.std::__1::pair.401"*, %"struct.std::__1::pair.401"** %14, align 8
  %39 = ptrtoint %"struct.std::__1::pair.401"* %35 to i64
  br label %40

40:                                               ; preds = %37, %11
  %41 = phi i64 [ %39, %37 ], [ %17, %11 ]
  %42 = phi %"struct.std::__1::pair.401"* [ %38, %37 ], [ %20, %11 ]
  %43 = phi %"struct.std::__1::pair.401"* [ %35, %37 ], [ %13, %11 ]
  %44 = icmp eq %"struct.std::__1::pair.401"* %43, %42
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"struct.std::__1::pair.401", %"struct.std::__1::pair.401"* %43, i64 0, i32 0
  %47 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %46, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN2uiL24kPropertyKeyboardImeFlagE, i64 0, i64 0)) #9
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.std::__1::pair.401", %"struct.std::__1::pair.401"* %43, i64 1
  %51 = ptrtoint %"struct.std::__1::pair.401"* %50 to i64
  br label %52

52:                                               ; preds = %49, %45, %40
  %53 = phi i64 [ %51, %49 ], [ %41, %40 ], [ %41, %45 ]
  %54 = inttoptr i64 %53 to %"struct.std::__1::pair.401"*
  %55 = icmp eq %"struct.std::__1::pair.401"* %43, %54
  br i1 %55, label %278, label %56

56:                                               ; preds = %52
  %57 = load %"struct.std::__1::pair.401"*, %"struct.std::__1::pair.401"** %14, align 8
  %58 = icmp eq %"struct.std::__1::pair.401"* %43, %57
  br i1 %58, label %278, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.std::__1::pair.401", %"struct.std::__1::pair.401"* %43, i64 0, i32 1, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = load i8, i8* %61, align 1
  %63 = and i8 %62, 2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %278, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 7
  %67 = tail call zeroext i1 @_ZN2ui17CharacterComposer14FilterKeyPressERKNS_8KeyEventE(%"class.ui::CharacterComposer"* %66, %"class.ui::KeyEvent"* dereferenceable(168) %1) #9
  br i1 %67, label %68, label %278

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 7, i32 3
  tail call void @_ZN2ui25WaylandInputMethodContext17UpdatePreeditTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::WaylandInputMethodContext"* %0, %"class.std::__1::basic_string.358"* dereferenceable(24) %69)
  %70 = bitcast %"class.std::__1::basic_string.358"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #9
  %71 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %73 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 7, i32 2
  %74 = bitcast %"class.std::__1::basic_string.358"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = bitcast %"class.std::__1::basic_string.358"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 24, i1 false)
  %77 = load i8, i8* %75, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %68
  %80 = bitcast %"class.std::__1::basic_string.358"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 8 %80, i64 24, i1 false) #9
  br label %254

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i16*, i16** %82, align 8
  %84 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, 11
  br i1 %86, label %87, label %92

87:                                               ; preds = %81
  %88 = bitcast %"class.std::__1::basic_string.358"* %3 to i16*
  %89 = trunc i64 %85 to i8
  %90 = bitcast %"class.std::__1::basic_string.358"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  store i8 %89, i8* %91, align 1
  br label %107

92:                                               ; preds = %81
  %93 = icmp ugt i64 %85, 9223372036854775791
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::basic_string.358"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %95) #11
  unreachable

96:                                               ; preds = %92
  %97 = add nuw nsw i64 %85, 8
  %98 = and i64 %97, -8
  %99 = icmp slt i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  tail call void @abort() #11
  unreachable

101:                                              ; preds = %96
  %102 = shl i64 %98, 1
  %103 = tail call i8* @_Znwm(i64 %102) #10
  %104 = bitcast i8* %103 to i16*
  %105 = bitcast %"class.std::__1::basic_string.358"* %3 to i8**
  store i8* %103, i8** %105, align 8
  %106 = or i64 %98, -9223372036854775808
  store i64 %106, i64* %72, align 8
  store i64 %85, i64* %71, align 8
  br label %107

107:                                              ; preds = %101, %87
  %108 = phi i16* [ %88, %87 ], [ %104, %101 ]
  %109 = add nuw nsw i64 %85, 1
  %110 = add i64 %85, 1
  %111 = icmp ult i64 %110, 16
  br i1 %111, label %201, label %112

112:                                              ; preds = %107
  %113 = add i64 %85, 1
  %114 = getelementptr i16, i16* %108, i64 %113
  %115 = getelementptr i16, i16* %83, i64 %113
  %116 = icmp ult i16* %108, %115
  %117 = icmp ult i16* %83, %114
  %118 = and i1 %116, %117
  br i1 %118, label %201, label %119

119:                                              ; preds = %112
  %120 = and i64 %110, -16
  %121 = sub i64 %109, %120
  %122 = getelementptr i16, i16* %83, i64 %120
  %123 = getelementptr i16, i16* %108, i64 %120
  %124 = add i64 %120, -16
  %125 = lshr exact i64 %124, 4
  %126 = add nuw nsw i64 %125, 1
  %127 = and i64 %126, 3
  %128 = icmp ult i64 %124, 48
  br i1 %128, label %180, label %129

129:                                              ; preds = %119
  %130 = sub nsw i64 %126, %127
  br label %131

131:                                              ; preds = %131, %129
  %132 = phi i64 [ 0, %129 ], [ %177, %131 ]
  %133 = phi i64 [ %130, %129 ], [ %178, %131 ]
  %134 = getelementptr i16, i16* %83, i64 %132
  %135 = getelementptr i16, i16* %108, i64 %132
  %136 = bitcast i16* %134 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !3
  %138 = getelementptr i16, i16* %134, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !3
  %141 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %141, align 2, !alias.scope !6, !noalias !3
  %142 = getelementptr i16, i16* %135, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %143, align 2, !alias.scope !6, !noalias !3
  %144 = or i64 %132, 16
  %145 = getelementptr i16, i16* %83, i64 %144
  %146 = getelementptr i16, i16* %108, i64 %144
  %147 = bitcast i16* %145 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !3
  %149 = getelementptr i16, i16* %145, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !3
  %152 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %152, align 2, !alias.scope !6, !noalias !3
  %153 = getelementptr i16, i16* %146, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %154, align 2, !alias.scope !6, !noalias !3
  %155 = or i64 %132, 32
  %156 = getelementptr i16, i16* %83, i64 %155
  %157 = getelementptr i16, i16* %108, i64 %155
  %158 = bitcast i16* %156 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2, !alias.scope !3
  %160 = getelementptr i16, i16* %156, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !3
  %163 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %163, align 2, !alias.scope !6, !noalias !3
  %164 = getelementptr i16, i16* %157, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %165, align 2, !alias.scope !6, !noalias !3
  %166 = or i64 %132, 48
  %167 = getelementptr i16, i16* %83, i64 %166
  %168 = getelementptr i16, i16* %108, i64 %166
  %169 = bitcast i16* %167 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !3
  %171 = getelementptr i16, i16* %167, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !3
  %174 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %174, align 2, !alias.scope !6, !noalias !3
  %175 = getelementptr i16, i16* %168, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %176, align 2, !alias.scope !6, !noalias !3
  %177 = add i64 %132, 64
  %178 = add i64 %133, -4
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %131, !llvm.loop !8

180:                                              ; preds = %131, %119
  %181 = phi i64 [ 0, %119 ], [ %177, %131 ]
  %182 = icmp eq i64 %127, 0
  br i1 %182, label %199, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %196, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %197, %183 ], [ %127, %180 ]
  %186 = getelementptr i16, i16* %83, i64 %184
  %187 = getelementptr i16, i16* %108, i64 %184
  %188 = bitcast i16* %186 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2, !alias.scope !3
  %190 = getelementptr i16, i16* %186, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !3
  %193 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %193, align 2, !alias.scope !6, !noalias !3
  %194 = getelementptr i16, i16* %187, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %195, align 2, !alias.scope !6, !noalias !3
  %196 = add i64 %184, 16
  %197 = add i64 %185, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %183, !llvm.loop !10

199:                                              ; preds = %183, %180
  %200 = icmp eq i64 %110, %120
  br i1 %200, label %254, label %201

201:                                              ; preds = %199, %112, %107
  %202 = phi i64 [ %109, %112 ], [ %109, %107 ], [ %121, %199 ]
  %203 = phi i16* [ %83, %112 ], [ %83, %107 ], [ %122, %199 ]
  %204 = phi i16* [ %108, %112 ], [ %108, %107 ], [ %123, %199 ]
  %205 = add i64 %202, -1
  %206 = and i64 %202, 7
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %219, label %208

208:                                              ; preds = %201, %208
  %209 = phi i64 [ %214, %208 ], [ %202, %201 ]
  %210 = phi i16* [ %216, %208 ], [ %203, %201 ]
  %211 = phi i16* [ %215, %208 ], [ %204, %201 ]
  %212 = phi i64 [ %217, %208 ], [ %206, %201 ]
  %213 = load i16, i16* %210, align 2
  store i16 %213, i16* %211, align 2
  %214 = add i64 %209, -1
  %215 = getelementptr inbounds i16, i16* %211, i64 1
  %216 = getelementptr inbounds i16, i16* %210, i64 1
  %217 = add i64 %212, -1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %208, !llvm.loop !12

219:                                              ; preds = %208, %201
  %220 = phi i64 [ %202, %201 ], [ %214, %208 ]
  %221 = phi i16* [ %203, %201 ], [ %216, %208 ]
  %222 = phi i16* [ %204, %201 ], [ %215, %208 ]
  %223 = icmp ult i64 %205, 7
  br i1 %223, label %254, label %224

224:                                              ; preds = %219, %224
  %225 = phi i64 [ %250, %224 ], [ %220, %219 ]
  %226 = phi i16* [ %252, %224 ], [ %221, %219 ]
  %227 = phi i16* [ %251, %224 ], [ %222, %219 ]
  %228 = load i16, i16* %226, align 2
  store i16 %228, i16* %227, align 2
  %229 = getelementptr inbounds i16, i16* %227, i64 1
  %230 = getelementptr inbounds i16, i16* %226, i64 1
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = getelementptr inbounds i16, i16* %227, i64 2
  %233 = getelementptr inbounds i16, i16* %226, i64 2
  %234 = load i16, i16* %233, align 2
  store i16 %234, i16* %232, align 2
  %235 = getelementptr inbounds i16, i16* %227, i64 3
  %236 = getelementptr inbounds i16, i16* %226, i64 3
  %237 = load i16, i16* %236, align 2
  store i16 %237, i16* %235, align 2
  %238 = getelementptr inbounds i16, i16* %227, i64 4
  %239 = getelementptr inbounds i16, i16* %226, i64 4
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = getelementptr inbounds i16, i16* %227, i64 5
  %242 = getelementptr inbounds i16, i16* %226, i64 5
  %243 = load i16, i16* %242, align 2
  store i16 %243, i16* %241, align 2
  %244 = getelementptr inbounds i16, i16* %227, i64 6
  %245 = getelementptr inbounds i16, i16* %226, i64 6
  %246 = load i16, i16* %245, align 2
  store i16 %246, i16* %244, align 2
  %247 = getelementptr inbounds i16, i16* %227, i64 7
  %248 = getelementptr inbounds i16, i16* %226, i64 7
  %249 = load i16, i16* %248, align 2
  store i16 %249, i16* %247, align 2
  %250 = add i64 %225, -8
  %251 = getelementptr inbounds i16, i16* %227, i64 8
  %252 = getelementptr inbounds i16, i16* %226, i64 8
  %253 = icmp eq i64 %250, 0
  br i1 %253, label %254, label %224, !llvm.loop !13

254:                                              ; preds = %219, %224, %199, %79
  %255 = bitcast %"class.std::__1::basic_string.358"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %256 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %255, i64 0, i32 1, i32 1
  %257 = load i8, i8* %256, align 1
  %258 = icmp slt i8 %257, 0
  %259 = load i64, i64* %71, align 8
  %260 = zext i8 %257 to i64
  %261 = select i1 %258, i64 %259, i64 %260
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %271, label %263

263:                                              ; preds = %254
  %264 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 4
  %265 = load %"class.ui::LinuxInputMethodContextDelegate"*, %"class.ui::LinuxInputMethodContextDelegate"** %264, align 8
  %266 = bitcast %"class.ui::LinuxInputMethodContextDelegate"* %265 to void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)***
  %267 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)**, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)*** %266, align 8
  %268 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)** %267, i64 2
  %269 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)** %268, align 8
  call void %269(%"class.ui::LinuxInputMethodContextDelegate"* %265, %"class.std::__1::basic_string.358"* nonnull dereferenceable(24) %3) #9
  %270 = load i8, i8* %256, align 1
  br label %271

271:                                              ; preds = %263, %254
  %272 = phi i8 [ %270, %263 ], [ %257, %254 ]
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %277

274:                                              ; preds = %271
  %275 = bitcast %"class.std::__1::basic_string.358"* %3 to i8**
  %276 = load i8*, i8** %275, align 8
  call void @_ZdlPv(i8* %276) #10
  br label %277

277:                                              ; preds = %271, %274
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #9
  br label %278

278:                                              ; preds = %52, %56, %7, %65, %59, %2, %277
  %279 = phi i1 [ true, %277 ], [ false, %2 ], [ true, %59 ], [ false, %65 ], [ true, %7 ], [ true, %56 ], [ true, %52 ]
  ret i1 %279
}

declare zeroext i1 @_ZN2ui17CharacterComposer14FilterKeyPressERKNS_8KeyEventE(%"class.ui::CharacterComposer"*, %"class.ui::KeyEvent"* dereferenceable(168)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext17UpdatePreeditTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::WaylandInputMethodContext"* nocapture readonly, %"class.std::__1::basic_string.358"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::CompositionText", align 8
  %4 = alloca %"struct.ui::ImeTextSpan", align 8
  %5 = alloca %"class.std::__1::vector.249", align 8
  %6 = bitcast %"struct.ui::CompositionText"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  call void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"* nonnull %3) #9
  %7 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 0
  %8 = call dereferenceable(24) %"class.std::__1::basic_string.358"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.358"* nonnull %7, %"class.std::__1::basic_string.358"* dereferenceable(24) %1)
  %9 = bitcast %"struct.ui::CompositionText"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 2
  %19 = bitcast %"class.gfx::Range"* %18 to i64*
  %20 = and i64 %16, 4294967295
  %21 = shl i64 %16, 32
  %22 = or i64 %21, %20
  store i64 %22, i64* %19, align 8
  %23 = bitcast %"struct.ui::ImeTextSpan"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #9
  %24 = bitcast %"class.std::__1::vector.249"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #9
  call void @_ZN2ui11ImeTextSpanC1ENS0_4TypeEjjNS0_9ThicknessENS0_14UnderlineStyleEjjRKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"struct.ui::ImeTextSpan"* nonnull %4, i32 0, i32 0, i32 %17, i32 1, i32 1, i32 0, i32 0, %"class.std::__1::vector.249"* nonnull dereferenceable(24) %5) #9
  %25 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1, i32 0, i32 1
  %26 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %25, align 8
  %27 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %28 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %27, align 8
  %29 = icmp ult %"struct.ui::ImeTextSpan"* %26, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %2
  call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %26, %"struct.ui::ImeTextSpan"* nonnull dereferenceable(64) %4) #9
  %31 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %26, i64 1
  %32 = ptrtoint %"struct.ui::ImeTextSpan"* %31 to i64
  %33 = bitcast %"struct.ui::ImeTextSpan"** %25 to i64*
  store i64 %32, i64* %33, align 8
  br label %36

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1
  call void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.417"* %35, %"struct.ui::ImeTextSpan"* nonnull dereferenceable(64) %4) #9
  br label %36

36:                                               ; preds = %30, %34
  call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* nonnull %4) #9
  %37 = getelementptr inbounds %"class.std::__1::vector.249", %"class.std::__1::vector.249"* %5, i64 0, i32 0, i32 0
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %42 = getelementptr inbounds %"class.std::__1::vector.249", %"class.std::__1::vector.249"* %5, i64 0, i32 0, i32 1
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %38
  br i1 %44, label %60, label %45

45:                                               ; preds = %40, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %38
  br i1 %56, label %57, label %45

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector.249"* %5 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %40
  %61 = phi i8* [ %59, %57 ], [ %41, %40 ]
  store %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"** %42, align 8
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %36, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #9
  %63 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 4
  %64 = load %"class.ui::LinuxInputMethodContextDelegate"*, %"class.ui::LinuxInputMethodContextDelegate"** %63, align 8
  %65 = bitcast %"class.ui::LinuxInputMethodContextDelegate"* %64 to void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)***
  %66 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)**, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)** %66, i64 4
  %68 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)** %67, align 8
  call void %68(%"class.ui::LinuxInputMethodContextDelegate"* %64, %"struct.ui::CompositionText"* nonnull dereferenceable(56) %3) #9
  call void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.358"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.358"*, %"class.std::__1::basic_string.358"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.358"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.358"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.358"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.358"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.358"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.358"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.358"*
  %35 = icmp ugt %"class.std::__1::basic_string.358"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !14
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !14
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !17, !noalias !14
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !17, !noalias !14
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !14
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !14
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !17, !noalias !14
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !17, !noalias !14
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !14
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !14
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !17, !noalias !14
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !17, !noalias !14
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !14
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !14
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !17, !noalias !14
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !17, !noalias !14
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !19

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !14
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !14
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !17, !noalias !14
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !17, !noalias !14
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !20

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !21

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !22

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.358"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #10
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !23
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !23
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !26, !noalias !23
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !26, !noalias !23
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !23
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !23
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !26, !noalias !23
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !26, !noalias !23
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !23
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !23
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !26, !noalias !23
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !26, !noalias !23
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !23
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !23
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !26, !noalias !23
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !26, !noalias !23
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !28

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !23
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !23
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !26, !noalias !23
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !26, !noalias !23
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !29

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !30

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !31

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.358"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.358"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !32
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !32
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !35, !noalias !32
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !35, !noalias !32
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !32
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !32
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !35, !noalias !32
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !35, !noalias !32
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !32
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !32
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !35, !noalias !32
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !35, !noalias !32
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !32
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !32
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !35, !noalias !32
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !35, !noalias !32
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !37

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !32
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !32
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !35, !noalias !32
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !35, !noalias !32
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !38

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !39

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !40

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.358"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #9
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.358"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN2ui11ImeTextSpanC1ENS0_4TypeEjjNS0_9ThicknessENS0_14UnderlineStyleEjjRKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"struct.ui::ImeTextSpan"*, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.249"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext5ResetEv(%"class.ui::WaylandInputMethodContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 7
  tail call void @_ZN2ui17CharacterComposer5ResetEv(%"class.ui::CharacterComposer"* %2) #9
  %3 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  %5 = icmp eq %"class.ui::ZWPTextInputWrapper"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::ZWPTextInputWrapper"* %4 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %8 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %8, i64 3
  %10 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %9, align 8
  tail call void %10(%"class.ui::ZWPTextInputWrapper"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

declare void @_ZN2ui17CharacterComposer5ResetEv(%"class.ui::CharacterComposer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext5FocusEv(%"class.ui::WaylandInputMethodContext"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 2
  %3 = load %"class.ui::WaylandConnection"*, %"class.ui::WaylandConnection"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::WaylandConnection", %"class.ui::WaylandConnection"* %3, i64 0, i32 41
  %5 = tail call %"class.ui::WaylandWindow"* @_ZNK2ui20WaylandWindowManager31GetCurrentKeyboardFocusedWindowEv(%"class.ui::WaylandWindowManager"* %4) #9
  %6 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %6, align 8
  %8 = icmp ne %"class.ui::ZWPTextInputWrapper"* %7, null
  %9 = icmp ne %"class.ui::WaylandWindow"* %5, null
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %1
  %12 = bitcast %"class.ui::ZWPTextInputWrapper"* %7 to void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandWindow"*)***
  %13 = load void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandWindow"*)**, void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandWindow"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandWindow"*)*, void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandWindow"*)** %13, i64 4
  %15 = load void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandWindow"*)*, void (%"class.ui::ZWPTextInputWrapper"*, %"class.ui::WaylandWindow"*)** %14, align 8
  tail call void %15(%"class.ui::ZWPTextInputWrapper"* nonnull %7, %"class.ui::WaylandWindow"* nonnull %5) #9
  %16 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %6, align 8
  %17 = bitcast %"class.ui::ZWPTextInputWrapper"* %16 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %18 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %18, i64 6
  %20 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %19, align 8
  tail call void %20(%"class.ui::ZWPTextInputWrapper"* %16) #9
  br label %21

21:                                               ; preds = %1, %11
  ret void
}

declare %"class.ui::WaylandWindow"* @_ZNK2ui20WaylandWindowManager31GetCurrentKeyboardFocusedWindowEv(%"class.ui::WaylandWindowManager"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext4BlurEv(%"class.ui::WaylandInputMethodContext"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %2, align 8
  %4 = icmp eq %"class.ui::ZWPTextInputWrapper"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.ui::ZWPTextInputWrapper"* %3 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %7 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %7, i64 5
  %9 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %8, align 8
  tail call void %9(%"class.ui::ZWPTextInputWrapper"* nonnull %3) #9
  %10 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %2, align 8
  %11 = bitcast %"class.ui::ZWPTextInputWrapper"* %10 to void (%"class.ui::ZWPTextInputWrapper"*)***
  %12 = load void (%"class.ui::ZWPTextInputWrapper"*)**, void (%"class.ui::ZWPTextInputWrapper"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %12, i64 7
  %14 = load void (%"class.ui::ZWPTextInputWrapper"*)*, void (%"class.ui::ZWPTextInputWrapper"*)** %13, align 8
  tail call void %14(%"class.ui::ZWPTextInputWrapper"* %10) #9
  br label %15

15:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext17SetCursorLocationERKN3gfx4RectE(%"class.ui::WaylandInputMethodContext"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %3, align 8
  %5 = icmp eq %"class.ui::ZWPTextInputWrapper"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.ui::ZWPTextInputWrapper"* %4 to void (%"class.ui::ZWPTextInputWrapper"*, %"class.gfx::Rect"*)***
  %8 = load void (%"class.ui::ZWPTextInputWrapper"*, %"class.gfx::Rect"*)**, void (%"class.ui::ZWPTextInputWrapper"*, %"class.gfx::Rect"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*, %"class.gfx::Rect"*)*, void (%"class.ui::ZWPTextInputWrapper"*, %"class.gfx::Rect"*)** %8, i64 8
  %10 = load void (%"class.ui::ZWPTextInputWrapper"*, %"class.gfx::Rect"*)*, void (%"class.ui::ZWPTextInputWrapper"*, %"class.gfx::Rect"*)** %9, align 8
  tail call void %10(%"class.ui::ZWPTextInputWrapper"* nonnull %4, %"class.gfx::Rect"* dereferenceable(16) %1) #9
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext18SetSurroundingTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN3gfx5RangeE(%"class.ui::WaylandInputMethodContext"* nocapture readonly, %"class.std::__1::basic_string.358"* dereferenceable(24), %"class.gfx::Range"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"class.ui::ZWPTextInputWrapper"*, %"class.ui::ZWPTextInputWrapper"** %4, align 8
  %6 = icmp eq %"class.ui::ZWPTextInputWrapper"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.ui::ZWPTextInputWrapper"* %5 to void (%"class.ui::ZWPTextInputWrapper"*, %"class.std::__1::basic_string.358"*, %"class.gfx::Range"*)***
  %9 = load void (%"class.ui::ZWPTextInputWrapper"*, %"class.std::__1::basic_string.358"*, %"class.gfx::Range"*)**, void (%"class.ui::ZWPTextInputWrapper"*, %"class.std::__1::basic_string.358"*, %"class.gfx::Range"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.ui::ZWPTextInputWrapper"*, %"class.std::__1::basic_string.358"*, %"class.gfx::Range"*)*, void (%"class.ui::ZWPTextInputWrapper"*, %"class.std::__1::basic_string.358"*, %"class.gfx::Range"*)** %9, i64 9
  %11 = load void (%"class.ui::ZWPTextInputWrapper"*, %"class.std::__1::basic_string.358"*, %"class.gfx::Range"*)*, void (%"class.ui::ZWPTextInputWrapper"*, %"class.std::__1::basic_string.358"*, %"class.gfx::Range"*)** %10, align 8
  tail call void %11(%"class.ui::ZWPTextInputWrapper"* nonnull %5, %"class.std::__1::basic_string.358"* dereferenceable(24) %1, %"class.gfx::Range"* dereferenceable(8) %2) #9
  br label %12

12:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext15OnPreeditStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS_25ZWPTextInputWrapperClient9SpanStyleENS3_9allocatorIS9_EEEEi(%"class.ui::WaylandInputMethodContext"* nocapture readonly, i8*, i64, %"class.std::__1::vector.374"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string.358", align 8
  %7 = alloca %"class.std::__1::basic_string.358", align 8
  %8 = alloca %"class.std::__1::basic_string.358", align 8
  %9 = alloca %"struct.ui::CompositionText", align 8
  %10 = alloca %"class.std::__1::basic_string.358", align 8
  %11 = alloca %"struct.ui::ImeTextSpan", align 8
  %12 = alloca %"class.std::__1::vector.249", align 8
  %13 = alloca %"class.logging::LogMessage", align 8
  %14 = bitcast %"struct.ui::CompositionText"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  call void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"* nonnull %9) #9
  %15 = bitcast %"class.std::__1::basic_string.358"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.358"* nonnull sret %10, i8* %1, i64 %2) #9
  %16 = bitcast %"struct.ui::CompositionText"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %5
  %21 = bitcast %"struct.ui::CompositionText"* %9 to i8**
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %20, %5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %15, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  %24 = getelementptr inbounds %"class.std::__1::vector.374", %"class.std::__1::vector.374"* %3, i64 0, i32 0, i32 0
  %25 = load %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"*, %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.374", %"class.std::__1::vector.374"* %3, i64 0, i32 0, i32 1
  %27 = load %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"*, %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"** %26, align 8
  %28 = icmp eq %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"* %25, %27
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = bitcast %"struct.ui::ImeTextSpan"* %11 to i8*
  %31 = bitcast %"class.std::__1::vector.249"* %12 to i8*
  %32 = getelementptr inbounds %"class.std::__1::vector.249", %"class.std::__1::vector.249"* %12, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.249", %"class.std::__1::vector.249"* %12, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector.249"* %12 to i8**
  %35 = bitcast %"class.std::__1::basic_string.358"* %7 to i8*
  %36 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string.358"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = bitcast %"class.std::__1::basic_string.358"* %7 to i8**
  %40 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %11, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string.358"* %6 to i8*
  %42 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string.358"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = bitcast %"class.std::__1::basic_string.358"* %6 to i8**
  %46 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %11, i64 0, i32 2
  %47 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %11, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %11, i64 0, i32 4
  %49 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %9, i64 0, i32 1, i32 0, i32 1
  %50 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %9, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %9, i64 0, i32 1
  %52 = bitcast %"struct.ui::ImeTextSpan"** %49 to i64*
  %53 = bitcast %"class.logging::LogMessage"* %13 to i8*
  %54 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %13, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_ostringstream"* %54 to %"class.std::__1::basic_ostream"*
  br label %58

56:                                               ; preds = %150, %23
  %57 = icmp slt i32 %4, 0
  br i1 %57, label %153, label %156

58:                                               ; preds = %29, %150
  %59 = phi %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"* [ %25, %29 ], [ %151, %150 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 64, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #9
  call void @_ZN2ui11ImeTextSpanC1ENS0_4TypeEjjNS0_9ThicknessENS0_14UnderlineStyleEjjRKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"struct.ui::ImeTextSpan"* nonnull %11, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, %"class.std::__1::vector.249"* nonnull dereferenceable(24) %12) #9
  %60 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %61 = icmp eq %"class.std::__1::basic_string"* %60, null
  br i1 %61, label %82, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %33, align 8
  %65 = icmp eq %"class.std::__1::basic_string"* %64, %60
  br i1 %65, label %80, label %66

66:                                               ; preds = %62, %76
  %67 = phi %"class.std::__1::basic_string"* [ %68, %76 ], [ %64, %62 ]
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 -1
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #10
  br label %76

76:                                               ; preds = %73, %66
  %77 = icmp eq %"class.std::__1::basic_string"* %68, %60
  br i1 %77, label %78, label %66

78:                                               ; preds = %76
  %79 = load i8*, i8** %34, align 8
  br label %80

80:                                               ; preds = %78, %62
  %81 = phi i8* [ %79, %78 ], [ %63, %62 ]
  store %"class.std::__1::basic_string"* %60, %"class.std::__1::basic_string"** %33, align 8
  call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %58, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  %83 = getelementptr inbounds %"struct.ui::ZWPTextInputWrapperClient::SpanStyle", %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"* %59, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = icmp ugt i64 %85, %2
  br i1 %86, label %150, label %87

87:                                               ; preds = %82
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #9
  %88 = call zeroext i1 @_ZN4base11UTF8ToUTF16EPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i8* %1, i64 %85, %"class.std::__1::basic_string.358"* nonnull %7) #9
  %89 = load i8, i8* %38, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %88, label %91, label %96

91:                                               ; preds = %87
  br i1 %90, label %92, label %94

92:                                               ; preds = %91
  %93 = load i64, i64* %36, align 8
  br label %98

94:                                               ; preds = %91
  %95 = zext i8 %89 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  br label %102

96:                                               ; preds = %87
  br i1 %90, label %98, label %97

97:                                               ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  br label %150

98:                                               ; preds = %92, %96
  %99 = phi i64 [ %93, %92 ], [ undef, %96 ]
  %100 = phi i1 [ true, %92 ], [ false, %96 ]
  %101 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %101) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  br i1 %100, label %102, label %150

102:                                              ; preds = %98, %94
  %103 = phi i64 [ %95, %94 ], [ %99, %98 ]
  %104 = trunc i64 %103 to i32
  store i32 %104, i32* %40, align 4
  %105 = load i32, i32* %83, align 4
  %106 = getelementptr inbounds %"struct.ui::ZWPTextInputWrapperClient::SpanStyle", %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"* %59, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, %105
  %109 = zext i32 %108 to i64
  %110 = icmp ugt i64 %109, %2
  br i1 %110, label %150, label %111

111:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #9
  %112 = call zeroext i1 @_ZN4base11UTF8ToUTF16EPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i8* %1, i64 %109, %"class.std::__1::basic_string.358"* nonnull %6) #9
  %113 = load i8, i8* %44, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %112, label %115, label %120

115:                                              ; preds = %111
  br i1 %114, label %116, label %118

116:                                              ; preds = %115
  %117 = load i64, i64* %42, align 8
  br label %122

118:                                              ; preds = %115
  %119 = zext i8 %113 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  br label %126

120:                                              ; preds = %111
  br i1 %114, label %122, label %121

121:                                              ; preds = %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  br label %150

122:                                              ; preds = %116, %120
  %123 = phi i64 [ %117, %116 ], [ undef, %120 ]
  %124 = phi i1 [ true, %116 ], [ false, %120 ]
  %125 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %125) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  br i1 %124, label %126, label %150

126:                                              ; preds = %122, %118
  %127 = phi i64 [ %119, %118 ], [ %123, %122 ]
  %128 = trunc i64 %127 to i32
  store i32 %128, i32* %46, align 8
  %129 = getelementptr inbounds %"struct.ui::ZWPTextInputWrapperClient::SpanStyle", %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"* %59, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  switch i32 %130, label %135 [
    i32 0, label %142
    i32 4, label %131
    i32 5, label %132
    i32 6, label %133
    i32 7, label %134
  ]

131:                                              ; preds = %126
  store i32 2, i32* %48, align 8
  br label %142

132:                                              ; preds = %126
  store i32 1, i32* %48, align 8
  br label %142

133:                                              ; preds = %126
  store i32 1, i32* %47, align 8
  br label %142

134:                                              ; preds = %126
  store i32 2, i32* %47, align 8
  br label %142

135:                                              ; preds = %126
  %136 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i64 69) #9
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %53) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %13, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 243, i32 -1) #9
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %55, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i64 28) #9
  %140 = load i32, i32* %129, align 4
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %139, i32 %140) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %53) #9
  br label %150

142:                                              ; preds = %126, %131, %132, %133, %134
  %143 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %49, align 8
  %144 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %50, align 8
  %145 = icmp ult %"struct.ui::ImeTextSpan"* %143, %144
  br i1 %145, label %146, label %149

146:                                              ; preds = %142
  call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %143, %"struct.ui::ImeTextSpan"* nonnull dereferenceable(64) %11) #9
  %147 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %143, i64 1
  %148 = ptrtoint %"struct.ui::ImeTextSpan"* %147 to i64
  store i64 %148, i64* %52, align 8
  br label %150

149:                                              ; preds = %142
  call void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.417"* %51, %"struct.ui::ImeTextSpan"* nonnull dereferenceable(64) %11) #9
  br label %150

150:                                              ; preds = %122, %121, %135, %138, %146, %149, %102, %82, %97, %98
  call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #9
  %151 = getelementptr inbounds %"struct.ui::ZWPTextInputWrapperClient::SpanStyle", %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"* %59, i64 1
  %152 = icmp eq %"struct.ui::ZWPTextInputWrapperClient::SpanStyle"* %151, %27
  br i1 %152, label %56, label %58

153:                                              ; preds = %56
  %154 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %9, i64 0, i32 2
  %155 = bitcast %"class.gfx::Range"* %154 to i64*
  store i64 -1, i64* %155, align 8
  br label %186

156:                                              ; preds = %56
  %157 = zext i32 %4 to i64
  %158 = icmp ugt i64 %157, %2
  br i1 %158, label %193, label %159

159:                                              ; preds = %156
  %160 = bitcast %"class.std::__1::basic_string.358"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #9
  %161 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 0, i64 24, i1 false) #9
  %162 = call zeroext i1 @_ZN4base11UTF8ToUTF16EPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i8* %1, i64 %157, %"class.std::__1::basic_string.358"* nonnull %8) #9
  %163 = bitcast %"class.std::__1::basic_string.358"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %163, i64 0, i32 1, i32 1
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %162, label %167, label %172

167:                                              ; preds = %159
  br i1 %166, label %168, label %170

168:                                              ; preds = %167
  %169 = load i64, i64* %161, align 8
  br label %174

170:                                              ; preds = %167
  %171 = zext i8 %165 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #9
  br label %179

172:                                              ; preds = %159
  br i1 %166, label %174, label %173

173:                                              ; preds = %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #9
  br label %193

174:                                              ; preds = %168, %172
  %175 = phi i64 [ %169, %168 ], [ undef, %172 ]
  %176 = phi i1 [ true, %168 ], [ false, %172 ]
  %177 = bitcast %"class.std::__1::basic_string.358"* %8 to i8**
  %178 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %178) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #9
  br i1 %176, label %179, label %193

179:                                              ; preds = %174, %170
  %180 = phi i64 [ %171, %170 ], [ %175, %174 ]
  %181 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %9, i64 0, i32 2
  %182 = bitcast %"class.gfx::Range"* %181 to i64*
  %183 = and i64 %180, 4294967295
  %184 = shl i64 %180, 32
  %185 = or i64 %184, %183
  store i64 %185, i64* %182, align 8
  br label %186

186:                                              ; preds = %179, %153
  %187 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 4
  %188 = load %"class.ui::LinuxInputMethodContextDelegate"*, %"class.ui::LinuxInputMethodContextDelegate"** %187, align 8
  %189 = bitcast %"class.ui::LinuxInputMethodContextDelegate"* %188 to void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)***
  %190 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)**, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)** %190, i64 4
  %192 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"struct.ui::CompositionText"*)** %191, align 8
  call void %192(%"class.ui::LinuxInputMethodContextDelegate"* %188, %"struct.ui::CompositionText"* nonnull dereferenceable(56) %9) #9
  br label %193

193:                                              ; preds = %174, %173, %156, %186
  call void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #9
  ret void
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.358"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2ui25WaylandInputMethodContext15OnPreeditStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS_25ZWPTextInputWrapperClient9SpanStyleENS3_9allocatorIS9_EEEEi(%"class.ui::WaylandInputMethodContext"* nocapture readonly, i8*, i64, %"class.std::__1::vector.374"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 -1, i32 7, i32 4
  %7 = bitcast i32* %6 to %"class.ui::WaylandInputMethodContext"*
  tail call void @_ZN2ui25WaylandInputMethodContext15OnPreeditStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS_25ZWPTextInputWrapperClient9SpanStyleENS3_9allocatorIS9_EEEEi(%"class.ui::WaylandInputMethodContext"* %7, i8* %1, i64 %2, %"class.std::__1::vector.374"* dereferenceable(24) %3, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext14OnCommitStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.ui::WaylandInputMethodContext"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string.358", align 8
  %5 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 4
  %6 = load %"class.ui::LinuxInputMethodContextDelegate"*, %"class.ui::LinuxInputMethodContextDelegate"** %5, align 8
  %7 = bitcast %"class.std::__1::basic_string.358"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.358"* nonnull sret %4, i8* %1, i64 %2) #9
  %8 = bitcast %"class.ui::LinuxInputMethodContextDelegate"* %6 to void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)***
  %9 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)**, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)** %9, i64 2
  %11 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)** %10, align 8
  call void %11(%"class.ui::LinuxInputMethodContextDelegate"* %6, %"class.std::__1::basic_string.358"* nonnull dereferenceable(24) %4) #9
  %12 = bitcast %"class.std::__1::basic_string.358"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = bitcast %"class.std::__1::basic_string.358"* %4 to i8**
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %3, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2ui25WaylandInputMethodContext14OnCommitStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.ui::WaylandInputMethodContext"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string.358", align 8
  %5 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 -1, i32 7, i32 4
  %6 = getelementptr inbounds i32, i32* %5, i64 8
  %7 = bitcast i32* %6 to %"class.ui::LinuxInputMethodContextDelegate"**
  %8 = load %"class.ui::LinuxInputMethodContextDelegate"*, %"class.ui::LinuxInputMethodContextDelegate"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string.358"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.358"* nonnull sret %4, i8* %1, i64 %2) #9
  %10 = bitcast %"class.ui::LinuxInputMethodContextDelegate"* %8 to void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)***
  %11 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)**, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)** %11, i64 2
  %13 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, %"class.std::__1::basic_string.358"*)** %12, align 8
  call void %13(%"class.ui::LinuxInputMethodContextDelegate"* %8, %"class.std::__1::basic_string.358"* nonnull dereferenceable(24) %4) #9
  %14 = bitcast %"class.std::__1::basic_string.358"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::basic_string.358"* %4 to i8**
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %3, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext23OnDeleteSurroundingTextEij(%"class.ui::WaylandInputMethodContext"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 4
  %5 = load %"class.ui::LinuxInputMethodContextDelegate"*, %"class.ui::LinuxInputMethodContextDelegate"** %4, align 8
  %6 = bitcast %"class.ui::LinuxInputMethodContextDelegate"* %5 to void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)***
  %7 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)**, void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)** %7, i64 3
  %9 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)** %8, align 8
  tail call void %9(%"class.ui::LinuxInputMethodContextDelegate"* %5, i32 %1, i32 %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2ui25WaylandInputMethodContext23OnDeleteSurroundingTextEij(%"class.ui::WaylandInputMethodContext"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 -1, i32 7, i32 4
  %5 = getelementptr inbounds i32, i32* %4, i64 8
  %6 = bitcast i32* %5 to %"class.ui::LinuxInputMethodContextDelegate"**
  %7 = load %"class.ui::LinuxInputMethodContextDelegate"*, %"class.ui::LinuxInputMethodContextDelegate"** %6, align 8
  %8 = bitcast %"class.ui::LinuxInputMethodContextDelegate"* %7 to void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)***
  %9 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)**, void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)** %9, i64 3
  %11 = load void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)*, void (%"class.ui::LinuxInputMethodContextDelegate"*, i32, i32)** %10, align 8
  tail call void %11(%"class.ui::LinuxInputMethodContextDelegate"* %7, i32 %1, i32 %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui25WaylandInputMethodContext8OnKeysymEjjj(%"class.ui::WaylandInputMethodContext"* nocapture readonly, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = load %"class.ui::KeyboardLayoutEngine"*, %"class.ui::KeyboardLayoutEngine"** @_ZN2ui27KeyboardLayoutEngineManager23keyboard_layout_engine_E, align 8
  %6 = icmp eq %"class.ui::KeyboardLayoutEngine"* %5, null
  br i1 %6, label %34, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.ui::KeyboardLayoutEngine"* %5 to %"class.ui::XkbKeyboardLayoutEngine"*
  %9 = tail call i32 @_ZNK2ui23XkbKeyboardLayoutEngine18GetDomCodeByKeysymEj(%"class.ui::XkbKeyboardLayoutEngine"* nonnull %8, i32 %1) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %34, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 2
  %13 = load %"class.ui::WaylandConnection"*, %"class.ui::WaylandConnection"** %12, align 8
  %14 = getelementptr inbounds %"class.ui::WaylandConnection", %"class.ui::WaylandConnection"* %13, i64 0, i32 18, i32 0, i32 0, i32 0
  %15 = load %"class.ui::WaylandKeyboard"*, %"class.ui::WaylandKeyboard"** %14, align 8
  %16 = icmp eq %"class.ui::WaylandKeyboard"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.ui::WaylandKeyboard", %"class.ui::WaylandKeyboard"* %15, i64 0, i32 1
  %19 = bitcast %"class.wl::Object.68"* %18 to %struct.wl_proxy**
  %20 = load %struct.wl_proxy*, %struct.wl_proxy** %19, align 8
  %21 = tail call i32 @wl_proxy_get_id(%struct.wl_proxy* %20) #9
  br label %22

22:                                               ; preds = %11, %17
  %23 = phi i32 [ %21, %17 ], [ 0, %11 ]
  %24 = icmp eq i32 %2, 1
  %25 = select i1 %24, i32 7, i32 8
  %26 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 0, i32 3
  %27 = load %"class.ui::WaylandKeyboard::Delegate"*, %"class.ui::WaylandKeyboard::Delegate"** %26, align 8
  %28 = tail call i64 @_ZN2ui15EventTimeForNowEv() #9
  %29 = bitcast %"class.ui::WaylandKeyboard::Delegate"* %27 to i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)***
  %30 = load i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)**, i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)*, i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)** %30, i64 2
  %32 = load i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)*, i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)** %31, align 8
  %33 = tail call i32 %32(%"class.ui::WaylandKeyboard::Delegate"* %27, i32 %25, i32 %9, i1 zeroext false, i64 %28, i32 %23, i32 1) #9
  br label %34

34:                                               ; preds = %22, %7, %4
  ret void
}

declare i32 @_ZNK2ui23XkbKeyboardLayoutEngine18GetDomCodeByKeysymEj(%"class.ui::XkbKeyboardLayoutEngine"*, i32) local_unnamed_addr #1

declare i64 @_ZN2ui15EventTimeForNowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2ui25WaylandInputMethodContext8OnKeysymEjjj(%"class.ui::WaylandInputMethodContext"* nocapture readonly, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ui::WaylandInputMethodContext", %"class.ui::WaylandInputMethodContext"* %0, i64 -1, i32 7, i32 4
  %6 = load %"class.ui::KeyboardLayoutEngine"*, %"class.ui::KeyboardLayoutEngine"** @_ZN2ui27KeyboardLayoutEngineManager23keyboard_layout_engine_E, align 8
  %7 = icmp eq %"class.ui::KeyboardLayoutEngine"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.ui::KeyboardLayoutEngine"* %6 to %"class.ui::XkbKeyboardLayoutEngine"*
  %10 = tail call i32 @_ZNK2ui23XkbKeyboardLayoutEngine18GetDomCodeByKeysymEj(%"class.ui::XkbKeyboardLayoutEngine"* nonnull %9, i32 %1) #9
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds i32, i32* %5, i64 4
  %14 = bitcast i32* %13 to %"class.ui::WaylandConnection"**
  %15 = load %"class.ui::WaylandConnection"*, %"class.ui::WaylandConnection"** %14, align 8
  %16 = getelementptr inbounds %"class.ui::WaylandConnection", %"class.ui::WaylandConnection"* %15, i64 0, i32 18, i32 0, i32 0, i32 0
  %17 = load %"class.ui::WaylandKeyboard"*, %"class.ui::WaylandKeyboard"** %16, align 8
  %18 = icmp eq %"class.ui::WaylandKeyboard"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.ui::WaylandKeyboard", %"class.ui::WaylandKeyboard"* %17, i64 0, i32 1
  %21 = bitcast %"class.wl::Object.68"* %20 to %struct.wl_proxy**
  %22 = load %struct.wl_proxy*, %struct.wl_proxy** %21, align 8
  %23 = tail call i32 @wl_proxy_get_id(%struct.wl_proxy* %22) #9
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi i32 [ %23, %19 ], [ 0, %12 ]
  %26 = icmp eq i32 %2, 1
  %27 = select i1 %26, i32 7, i32 8
  %28 = getelementptr inbounds i32, i32* %5, i64 6
  %29 = bitcast i32* %28 to %"class.ui::WaylandKeyboard::Delegate"**
  %30 = load %"class.ui::WaylandKeyboard::Delegate"*, %"class.ui::WaylandKeyboard::Delegate"** %29, align 8
  %31 = tail call i64 @_ZN2ui15EventTimeForNowEv() #9
  %32 = bitcast %"class.ui::WaylandKeyboard::Delegate"* %30 to i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)***
  %33 = load i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)**, i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)*, i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)** %33, i64 2
  %35 = load i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)*, i32 (%"class.ui::WaylandKeyboard::Delegate"*, i32, i32, i1, i64, i32, i32)** %34, align 8
  %36 = tail call i32 %35(%"class.ui::WaylandKeyboard::Delegate"* %30, i32 %27, i32 %10, i1 zeroext false, i64 %31, i32 %25, i32 1) #9
  br label %37

37:                                               ; preds = %4, %8, %24
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11UTF8ToUTF16EPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i8*, i64, %"class.std::__1::basic_string.358"*) local_unnamed_addr #1

declare i32 @wl_proxy_get_id(%struct.wl_proxy*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN2ui21ZWPTextInputWrapperV1C1EP25zwp_text_input_manager_v1(%"class.ui::ZWPTextInputWrapperV1"*, %struct.zwp_text_input_manager_v1*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.358"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.358"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.358"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.358"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #10
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !41
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !41
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !44, !noalias !41
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !44, !noalias !41
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !41
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !41
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !44, !noalias !41
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !44, !noalias !41
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !41
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !41
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !44, !noalias !41
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !44, !noalias !41
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !41
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !41
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !44, !noalias !41
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !44, !noalias !41
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !46

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !41
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !41
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !44, !noalias !41
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !44, !noalias !41
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !47

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !48

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !49

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !50

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !51

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !52

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !54
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !54
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !57, !noalias !54
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !57, !noalias !54
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !54
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !54
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !57, !noalias !54
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !57, !noalias !54
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !54
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !54
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !57, !noalias !54
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !57, !noalias !54
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !54
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !54
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !57, !noalias !54
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !57, !noalias !54
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !59

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !54
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !54
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !57, !noalias !54
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !57, !noalias !54
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !60

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !61

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !62

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #10
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.358"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.358", %"class.std::__1::basic_string.358"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.417"*, %"struct.ui::ImeTextSpan"* dereferenceable(64)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.417", %"class.std::__1::vector.417"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ui::ImeTextSpan"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.417"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.417"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.417", %"class.std::__1::vector.417"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ui::ImeTextSpan"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"struct.ui::ImeTextSpan"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.ui::ImeTextSpan"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %36, i64 %35
  %39 = ptrtoint %"struct.ui::ImeTextSpan"* %38 to i64
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %37, %"struct.ui::ImeTextSpan"* dereferenceable(64) %1) #9
  %40 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %37, i64 1
  %41 = ptrtoint %"struct.ui::ImeTextSpan"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.417", %"class.std::__1::vector.417"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %42, align 8
  %44 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %3, align 8
  %45 = icmp eq %"struct.ui::ImeTextSpan"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.ui::ImeTextSpan"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.ui::ImeTextSpan"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.ui::ImeTextSpan"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %50, i64 -1
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %51, %"struct.ui::ImeTextSpan"* dereferenceable(64) %52) #9
  %53 = icmp eq %"struct.ui::ImeTextSpan"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.ui::ImeTextSpan"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.ui::ImeTextSpan"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.ui::ImeTextSpan"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.ui::ImeTextSpan"*
  %63 = icmp eq %"struct.ui::ImeTextSpan"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.ui::ImeTextSpan"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %65, i64 -1
  tail call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* %66) #9
  %67 = icmp eq %"struct.ui::ImeTextSpan"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !9}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !9}
!47 = distinct !{!47, !11}
!48 = distinct !{!48, !11}
!49 = distinct !{!49, !9}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !53, !9}
!53 = !{!"llvm.loop.unroll.runtime.disable"}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !9}
!60 = distinct !{!60, !11}
!61 = distinct !{!61, !11}
!62 = distinct !{!62, !9}
