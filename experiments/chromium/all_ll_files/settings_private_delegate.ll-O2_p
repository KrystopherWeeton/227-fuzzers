; ModuleID = '../../chrome/browser/extensions/api/settings_private/settings_private_delegate.cc'
source_filename = "../../chrome/browser/extensions/api/settings_private/settings_private_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::SettingsPrivateDelegate" = type { %class.KeyedService, %class.Profile*, %"class.std::__1::unique_ptr.30" }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.extensions::PrefsUtil"* }
%"class.extensions::PrefsUtil" = type { i32 (...)**, %class.Profile* }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.7", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.24" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.42" }
%"union.absl::variant_internal::DestructibleUnionImpl.42" = type { %"union.absl::variant_internal::DestructibleUnionImpl.43" }
%"union.absl::variant_internal::DestructibleUnionImpl.43" = type { %"union.absl::variant_internal::DestructibleUnionImpl.44" }
%"union.absl::variant_internal::DestructibleUnionImpl.44" = type { %"union.absl::variant_internal::DestructibleUnionImpl.45" }
%"union.absl::variant_internal::DestructibleUnionImpl.45" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.extensions::api::settings_private::PrefObject" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::unique_ptr.36", i32, %"class.std::__1::unique_ptr.78", i32, %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.base::Value"* }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::vector.87"* }
%"class.std::__1::vector.87" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i8* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::map.112" = type { %"class.std::__1::__tree.113" }
%"class.std::__1::__tree.113" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.ChromeZoomLevelPrefs = type { %"class.content::ZoomLevelDelegate", %class.PrefService*, %"class.base::WeakPtr.175", %"class.content::HostZoomMap"*, %"class.base::CallbackListSubscription", %"class.std::__1::basic_string", %"class.base::RepeatingCallbackList" }
%"class.content::ZoomLevelDelegate" = type { i32 (...)** }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %class.scoped_refptr.154, %"class.base::RepeatingCallback.155", %class.scoped_refptr.156, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map.136", i8, %"class.std::__1::unique_ptr.145" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.133, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.133 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.135", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.135" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.136" = type { %"class.std::__1::__tree.137" }
%"class.std::__1::__tree.137" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.154 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.155" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.156 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.157", %"class.std::__1::__compressed_pair.165", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.172", [4 x i8] }>
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159", %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { float }
%"class.base::WeakPtr.175" = type { %"class.base::internal::WeakPtrBase" }
%"class.content::HostZoomMap" = type { i32 (...)** }
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback.180", %"class.base::WeakPtrFactory" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.176" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::RepeatingCallback.180" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.base::internal::WeakReference::Flag"* }

@_ZTVN10extensions23SettingsPrivateDelegateE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::SettingsPrivateDelegate"*)* @_ZN10extensions23SettingsPrivateDelegateD2Ev to i8*), i8* bitcast (void (%"class.extensions::SettingsPrivateDelegate"*)* @_ZN10extensions23SettingsPrivateDelegateD0Ev to i8*), i8* bitcast (void (%class.KeyedService*)* @_ZN12KeyedService8ShutdownEv to i8*), i8* bitcast (i32 (%"class.extensions::SettingsPrivateDelegate"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)* @_ZN10extensions23SettingsPrivateDelegate7SetPrefERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKN4base5ValueE to i8*), i8* bitcast (%"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*, %"class.std::__1::basic_string"*)* @_ZN10extensions23SettingsPrivateDelegate7GetPrefERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (%"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*)* @_ZN10extensions23SettingsPrivateDelegate11GetAllPrefsEv to i8*), i8* bitcast (%"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*)* @_ZN10extensions23SettingsPrivateDelegate14GetDefaultZoomEv to i8*), i8* bitcast (i32 (%"class.extensions::SettingsPrivateDelegate"*, double)* @_ZN10extensions23SettingsPrivateDelegate14SetDefaultZoomEd to i8*)] }, align 8

@_ZN10extensions23SettingsPrivateDelegateC1EP7Profile = hidden unnamed_addr alias void (%"class.extensions::SettingsPrivateDelegate"*, %class.Profile*), void (%"class.extensions::SettingsPrivateDelegate"*, %class.Profile*)* @_ZN10extensions23SettingsPrivateDelegateC2EP7Profile
@_ZN10extensions23SettingsPrivateDelegateD1Ev = hidden unnamed_addr alias void (%"class.extensions::SettingsPrivateDelegate"*), void (%"class.extensions::SettingsPrivateDelegate"*)* @_ZN10extensions23SettingsPrivateDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23SettingsPrivateDelegateC2EP7Profile(%"class.extensions::SettingsPrivateDelegate"*, %class.Profile*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.Profile* %1 to i64
  %4 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceC2Ev(%class.KeyedService* %4) #5
  %5 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN10extensions23SettingsPrivateDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 1
  %7 = bitcast %class.Profile** %6 to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::unique_ptr.30"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = tail call i8* @_Znwm(i64 16) #6
  %11 = bitcast i8* %10 to %"class.extensions::PrefsUtil"*
  tail call void @_ZN10extensions9PrefsUtilC1EP7Profile(%"class.extensions::PrefsUtil"* nonnull %11, %class.Profile* %1) #5
  %12 = ptrtoint i8* %10 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %8, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.extensions::PrefsUtil"*, %"class.extensions::PrefsUtil"** %13, align 8
  store i64 %12, i64* %9, align 8
  %15 = icmp eq %"class.extensions::PrefsUtil"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.extensions::PrefsUtil"* %14 to void (%"class.extensions::PrefsUtil"*)***
  %18 = load void (%"class.extensions::PrefsUtil"*)**, void (%"class.extensions::PrefsUtil"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.extensions::PrefsUtil"*)*, void (%"class.extensions::PrefsUtil"*)** %18, i64 1
  %20 = load void (%"class.extensions::PrefsUtil"*)*, void (%"class.extensions::PrefsUtil"*)** %19, align 8
  tail call void %20(%"class.extensions::PrefsUtil"* nonnull %14) #5
  br label %21

21:                                               ; preds = %16, %2
  ret void
}

declare void @_ZN12KeyedServiceC2Ev(%class.KeyedService*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23SettingsPrivateDelegateD2Ev(%"class.extensions::SettingsPrivateDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN10extensions23SettingsPrivateDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.extensions::PrefsUtil"*, %"class.extensions::PrefsUtil"** %3, align 8
  store %"class.extensions::PrefsUtil"* null, %"class.extensions::PrefsUtil"** %3, align 8
  %5 = icmp eq %"class.extensions::PrefsUtil"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.extensions::PrefsUtil"* %4 to void (%"class.extensions::PrefsUtil"*)***
  %8 = load void (%"class.extensions::PrefsUtil"*)**, void (%"class.extensions::PrefsUtil"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.extensions::PrefsUtil"*)*, void (%"class.extensions::PrefsUtil"*)** %8, i64 1
  %10 = load void (%"class.extensions::PrefsUtil"*)*, void (%"class.extensions::PrefsUtil"*)** %9, align 8
  tail call void %10(%"class.extensions::PrefsUtil"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %12) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12KeyedServiceD2Ev(%class.KeyedService*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23SettingsPrivateDelegateD0Ev(%"class.extensions::SettingsPrivateDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN10extensions23SettingsPrivateDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.extensions::PrefsUtil"*, %"class.extensions::PrefsUtil"** %3, align 8
  store %"class.extensions::PrefsUtil"* null, %"class.extensions::PrefsUtil"** %3, align 8
  %5 = icmp eq %"class.extensions::PrefsUtil"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.extensions::PrefsUtil"* %4 to void (%"class.extensions::PrefsUtil"*)***
  %8 = load void (%"class.extensions::PrefsUtil"*)**, void (%"class.extensions::PrefsUtil"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.extensions::PrefsUtil"*)*, void (%"class.extensions::PrefsUtil"*)** %8, i64 1
  %10 = load void (%"class.extensions::PrefsUtil"*)*, void (%"class.extensions::PrefsUtil"*)** %9, align 8
  tail call void %10(%"class.extensions::PrefsUtil"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %12) #5
  %13 = bitcast %"class.extensions::SettingsPrivateDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZN10extensions23SettingsPrivateDelegate7GetPrefERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::SettingsPrivateDelegate"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.extensions::PrefsUtil"*, %"class.extensions::PrefsUtil"** %3, align 8
  %5 = bitcast %"class.extensions::PrefsUtil"* %4 to %"struct.extensions::api::settings_private::PrefObject"* (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*)***
  %6 = load %"struct.extensions::api::settings_private::PrefObject"* (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*)**, %"struct.extensions::api::settings_private::PrefObject"* (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*)*** %5, align 8
  %7 = getelementptr inbounds %"struct.extensions::api::settings_private::PrefObject"* (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*)*, %"struct.extensions::api::settings_private::PrefObject"* (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*)** %6, i64 2
  %8 = load %"struct.extensions::api::settings_private::PrefObject"* (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*)*, %"struct.extensions::api::settings_private::PrefObject"* (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*)** %7, align 8
  %9 = tail call %"struct.extensions::api::settings_private::PrefObject"* %8(%"class.extensions::PrefsUtil"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #5
  %10 = icmp eq %"struct.extensions::api::settings_private::PrefObject"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = tail call i8* @_Znwm(i64 32) #6
  %13 = bitcast i8* %12 to %"class.base::Value"*
  tail call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %13) #5
  %14 = ptrtoint i8* %12 to i64
  br label %19

15:                                               ; preds = %2
  %16 = tail call %"class.base::DictionaryValue"* @_ZNK10extensions3api16settings_private10PrefObject7ToValueEv(%"struct.extensions::api::settings_private::PrefObject"* nonnull %9) #5
  %17 = ptrtoint %"class.base::DictionaryValue"* %16 to i64
  tail call void @_ZN10extensions3api16settings_private10PrefObjectD1Ev(%"struct.extensions::api::settings_private::PrefObject"* nonnull %9) #5
  %18 = bitcast %"struct.extensions::api::settings_private::PrefObject"* %9 to i8*
  tail call void @_ZdlPv(i8* %18) #6
  br label %19

19:                                               ; preds = %11, %15
  %20 = phi i64 [ %14, %11 ], [ %17, %15 ]
  %21 = inttoptr i64 %20 to %"class.base::Value"*
  ret %"class.base::Value"* %21
}

declare %"class.base::DictionaryValue"* @_ZNK10extensions3api16settings_private10PrefObject7ToValueEv(%"struct.extensions::api::settings_private::PrefObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZN10extensions23SettingsPrivateDelegate11GetAllPrefsEv(%"class.extensions::SettingsPrivateDelegate"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #6
  %3 = bitcast i8* %2 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %3) #5
  %4 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.extensions::PrefsUtil"*, %"class.extensions::PrefsUtil"** %4, align 8
  %6 = tail call dereferenceable(24) %"class.std::__1::map.112"* @_ZN10extensions9PrefsUtil18GetAllowlistedKeysEv(%"class.extensions::PrefsUtil"* %5) #5
  %7 = getelementptr inbounds %"class.std::__1::map.112", %"class.std::__1::map.112"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::map.112", %"class.std::__1::map.112"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.extensions::SettingsPrivateDelegate"* %0 to %"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*, %"class.std::__1::basic_string"*)***
  br label %15

13:                                               ; preds = %60, %1
  %14 = bitcast i8* %2 to %"class.base::Value"*
  ret %"class.base::Value"* %14

15:                                               ; preds = %11, %60
  %16 = phi %"class.std::__1::__tree_end_node"* [ %8, %11 ], [ %61, %60 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 4
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::basic_string"*
  %19 = load %"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*, %"class.std::__1::basic_string"*)**, %"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*, %"class.std::__1::basic_string"*)*** %12, align 8
  %20 = getelementptr inbounds %"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*, %"class.std::__1::basic_string"*)*, %"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*, %"class.std::__1::basic_string"*)** %19, i64 4
  %21 = load %"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*, %"class.std::__1::basic_string"*)*, %"class.base::Value"* (%"class.extensions::SettingsPrivateDelegate"*, %"class.std::__1::basic_string"*)** %20, align 8
  %22 = tail call %"class.base::Value"* %21(%"class.extensions::SettingsPrivateDelegate"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %18) #5
  %23 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %15
  tail call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %3, %"class.base::Value"* %22) #5
  br label %32

28:                                               ; preds = %15
  %29 = icmp eq %"class.base::Value"* %22, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %22) #5
  %31 = bitcast %"class.base::Value"* %22 to i8*
  tail call void @_ZdlPv(i8* %31) #6
  br label %32

32:                                               ; preds = %27, %28, %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 2
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_end_node"**
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %37
  br i1 %43, label %60, label %51

44:                                               ; preds = %32, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %34, %32 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0
  br label %60

51:                                               ; preds = %36, %51
  %52 = phi %"class.std::__1::__tree_end_node"** [ %55, %51 ], [ %39, %36 ]
  %53 = bitcast %"class.std::__1::__tree_end_node"** %52 to %"class.std::__1::__tree_node_base"**
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %54
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %36, %49
  %61 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %40, %36 ], [ %56, %51 ]
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %9
  br i1 %62, label %13, label %15
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::map.112"* @_ZN10extensions9PrefsUtil18GetAllowlistedKeysEv(%"class.extensions::PrefsUtil"*) local_unnamed_addr #1

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions23SettingsPrivateDelegate7SetPrefERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKN4base5ValueE(%"class.extensions::SettingsPrivateDelegate"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.extensions::PrefsUtil"*, %"class.extensions::PrefsUtil"** %4, align 8
  %6 = bitcast %"class.extensions::PrefsUtil"* %5 to i32 (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)***
  %7 = load i32 (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)**, i32 (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)*, i32 (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)** %7, i64 3
  %9 = load i32 (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)*, i32 (%"class.extensions::PrefsUtil"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)** %8, align 8
  %10 = tail call i32 %9(%"class.extensions::PrefsUtil"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.base::Value"* %2) #5
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.base::Value"* @_ZN10extensions23SettingsPrivateDelegate14GetDefaultZoomEv(%"class.extensions::SettingsPrivateDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 1
  %3 = load %class.Profile*, %class.Profile** %2, align 8
  %4 = bitcast %class.Profile* %3 to i1 (%class.Profile*)***
  %5 = load i1 (%class.Profile*)**, i1 (%class.Profile*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.Profile*)*, i1 (%class.Profile*)** %5, i64 7
  %7 = load i1 (%class.Profile*)*, i1 (%class.Profile*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.Profile* %3) #5
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = tail call i8* @_Znwm(i64 32) #6
  %11 = bitcast i8* %10 to %"class.base::Value"*
  tail call void @_ZN4base5ValueC1Ed(%"class.base::Value"* nonnull %11, double 0.000000e+00) #5
  br label %23

12:                                               ; preds = %1
  %13 = load %class.Profile*, %class.Profile** %2, align 8
  %14 = bitcast %class.Profile* %13 to %class.ChromeZoomLevelPrefs* (%class.Profile*)***
  %15 = load %class.ChromeZoomLevelPrefs* (%class.Profile*)**, %class.ChromeZoomLevelPrefs* (%class.Profile*)*** %14, align 8
  %16 = getelementptr inbounds %class.ChromeZoomLevelPrefs* (%class.Profile*)*, %class.ChromeZoomLevelPrefs* (%class.Profile*)** %15, i64 48
  %17 = load %class.ChromeZoomLevelPrefs* (%class.Profile*)*, %class.ChromeZoomLevelPrefs* (%class.Profile*)** %16, align 8
  %18 = tail call %class.ChromeZoomLevelPrefs* %17(%class.Profile* %13) #5
  %19 = tail call double @_ZNK20ChromeZoomLevelPrefs23GetDefaultZoomLevelPrefEv(%class.ChromeZoomLevelPrefs* %18) #5
  %20 = tail call double @_ZN5blink25PageZoomLevelToZoomFactorEd(double %19) #5
  %21 = tail call i8* @_Znwm(i64 32) #6
  %22 = bitcast i8* %21 to %"class.base::Value"*
  tail call void @_ZN4base5ValueC1Ed(%"class.base::Value"* nonnull %22, double %20) #5
  br label %23

23:                                               ; preds = %12, %9
  %24 = phi %"class.base::Value"* [ %11, %9 ], [ %22, %12 ]
  ret %"class.base::Value"* %24
}

declare double @_ZN5blink25PageZoomLevelToZoomFactorEd(double) local_unnamed_addr #1

declare double @_ZNK20ChromeZoomLevelPrefs23GetDefaultZoomLevelPrefEv(%class.ChromeZoomLevelPrefs*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions23SettingsPrivateDelegate14SetDefaultZoomEd(%"class.extensions::SettingsPrivateDelegate"* nocapture readonly, double) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SettingsPrivateDelegate", %"class.extensions::SettingsPrivateDelegate"* %0, i64 0, i32 1
  %4 = load %class.Profile*, %class.Profile** %3, align 8
  %5 = bitcast %class.Profile* %4 to i1 (%class.Profile*)***
  %6 = load i1 (%class.Profile*)**, i1 (%class.Profile*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.Profile*)*, i1 (%class.Profile*)** %6, i64 7
  %8 = load i1 (%class.Profile*)*, i1 (%class.Profile*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.Profile* %4) #5
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = tail call double @_ZN5blink25PageZoomFactorToZoomLevelEd(double %1) #5
  %12 = load %class.Profile*, %class.Profile** %3, align 8
  %13 = bitcast %class.Profile* %12 to %class.ChromeZoomLevelPrefs* (%class.Profile*)***
  %14 = load %class.ChromeZoomLevelPrefs* (%class.Profile*)**, %class.ChromeZoomLevelPrefs* (%class.Profile*)*** %13, align 8
  %15 = getelementptr inbounds %class.ChromeZoomLevelPrefs* (%class.Profile*)*, %class.ChromeZoomLevelPrefs* (%class.Profile*)** %14, i64 48
  %16 = load %class.ChromeZoomLevelPrefs* (%class.Profile*)*, %class.ChromeZoomLevelPrefs* (%class.Profile*)** %15, align 8
  %17 = tail call %class.ChromeZoomLevelPrefs* %16(%class.Profile* %12) #5
  tail call void @_ZN20ChromeZoomLevelPrefs23SetDefaultZoomLevelPrefEd(%class.ChromeZoomLevelPrefs* %17, double %11) #5
  br label %18

18:                                               ; preds = %2, %10
  %19 = phi i32 [ 0, %10 ], [ 1, %2 ]
  ret i32 %19
}

declare double @_ZN5blink25PageZoomFactorToZoomLevelEd(double) local_unnamed_addr #1

declare void @_ZN20ChromeZoomLevelPrefs23SetDefaultZoomLevelPrefEd(%class.ChromeZoomLevelPrefs*, double) local_unnamed_addr #1

declare void @_ZN12KeyedService8ShutdownEv(%class.KeyedService*) unnamed_addr #1

declare void @_ZN10extensions9PrefsUtilC1EP7Profile(%"class.extensions::PrefsUtil"*, %class.Profile*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions3api16settings_private10PrefObjectD1Ev(%"struct.extensions::api::settings_private::PrefObject"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

declare void @_ZN4base5ValueC1Ed(%"class.base::Value"*, double) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
