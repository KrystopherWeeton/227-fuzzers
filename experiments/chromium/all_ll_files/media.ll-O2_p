; ModuleID = '../../media/base/media.cc'
source_filename = "../../media/base/media.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::MediaInitializer" = type { i8 }

@_ZZN5mediaL16GetMediaInstanceEvE8instance = internal unnamed_addr global %"class.media::MediaInitializer"* null, align 8
@_ZGVZN5mediaL16GetMediaInstanceEvE8instance = internal global i64 0, align 8
@cpu_info_ = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22InitializeMediaLibraryEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5mediaL16GetMediaInstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5mediaL16GetMediaInstanceEvE8instance) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 1) #5
  %8 = tail call i32 @InitCpuFlags() #4
  %9 = tail call i32 @av_get_cpu_flags() #4
  tail call void @av_log_set_level(i32 -8) #4
  tail call void @av_max_alloc(i64 -1) #4
  store i8* %7, i8** bitcast (%"class.media::MediaInitializer"** @_ZZN5mediaL16GetMediaInstanceEvE8instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5mediaL16GetMediaInstanceEvE8instance) #4
  br label %10

10:                                               ; preds = %0, %3, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media31InitializeMediaLibraryInSandboxEll(i64, i64) local_unnamed_addr #0 {
  %3 = trunc i64 %0 to i32
  store atomic i32 %3, i32* @cpu_info_ monotonic, align 4
  %4 = trunc i64 %1 to i32
  tail call void @av_force_cpu_flags(i32 %4) #4
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5mediaL16GetMediaInstanceEvE8instance to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %14, !prof !2

7:                                                ; preds = %2
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5mediaL16GetMediaInstanceEvE8instance) #4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = tail call i8* @_Znwm(i64 1) #5
  %12 = tail call i32 @InitCpuFlags() #4
  %13 = tail call i32 @av_get_cpu_flags() #4
  tail call void @av_log_set_level(i32 -8) #4
  tail call void @av_max_alloc(i64 -1) #4
  store i8* %11, i8** bitcast (%"class.media::MediaInitializer"** @_ZZN5mediaL16GetMediaInstanceEvE8instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5mediaL16GetMediaInstanceEvE8instance) #4
  br label %14

14:                                               ; preds = %2, %7, %10
  ret void
}

declare void @av_force_cpu_flags(i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

declare i32 @InitCpuFlags() local_unnamed_addr #1

declare i32 @av_get_cpu_flags() local_unnamed_addr #1

declare void @av_log_set_level(i32) local_unnamed_addr #1

declare void @av_max_alloc(i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
