; ModuleID = '../../net/spdy/multiplexed_http_stream.cc'
source_filename = "../../net/spdy/multiplexed_http_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::MultiplexedHttpStream" = type { %"class.net::HttpStream", %"class.std::__1::unique_ptr", %"class.base::RepeatingCallback" }
%"class.net::HttpStream" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::MultiplexedSessionHandle"* }
%"class.net::MultiplexedSessionHandle" = type <{ i32 (...)**, %"class.base::WeakPtr", %"class.net::SSLInfo", i8, [7 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.6, %class.scoped_refptr.6, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.27", %"class.std::__1::basic_string", %"class.std::__1::vector.35", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.6 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.7", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.16", %"class.std::__1::vector.20" }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::unique_ptr.16"* }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.30" }
%"class.net::HashValue" = type { i32, %union.anon.29 }
%union.anon.29 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.net::HashValue"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.39" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.37, i32, [4 x i8] }>
%class.scoped_refptr.37 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.38", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.38" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.46", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::HttpNetworkSession" = type opaque
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"struct.std::__1::pair"**, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"struct.std::__1::pair" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i64 }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.58", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.66" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr.60", i64, i64 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { i8* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.net::HttpRawRequestHeaders" = type { %"class.std::__1::vector.71", %"class.std::__1::basic_string" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.std::__1::pair.73"*, %"struct.std::__1::pair.73"*, %"class.std::__1::__compressed_pair.74" }
%"struct.std::__1::pair.73" = type opaque
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::pair.73"* }
%"class.spdy::Http2HeaderBlock::iterator" = type { %"class.std::__1::__list_const_iterator" }
%"class.std::__1::__list_const_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.std::__1::pair.80" }
%"struct.std::__1::pair.80" = type { %"class.absl::string_view", %"class.spdy::Http2HeaderBlock::HeaderValue" }
%"class.spdy::Http2HeaderBlock::HeaderValue" = type { %"class.spdy::SpdyHeaderStorage"*, %"class.std::__1::vector.81", %"struct.std::__1::pair.79", i64, i64 }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.absl::string_view"* }
%"struct.std::__1::pair.79" = type { %"class.absl::string_view", %"class.absl::string_view" }

$_ZN3net10HttpStream21SetRequestIdempotencyENS_11IdempotencyE = comdat any

@_ZTVN3net21MultiplexedHttpStreamE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::MultiplexedHttpStream"*)* @_ZN3net21MultiplexedHttpStreamD2Ev to i8*), i8* bitcast (void (%"class.net::MultiplexedHttpStream"*)* @_ZN3net21MultiplexedHttpStreamD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::MultiplexedHttpStream"*)* @_ZN3net21MultiplexedHttpStream19SetConnectionReusedEv to i8*), i8* bitcast (i1 (%"class.net::MultiplexedHttpStream"*)* @_ZNK3net21MultiplexedHttpStream18CanReuseConnectionEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::MultiplexedHttpStream"*, %"class.net::SSLInfo"*)* @_ZN3net21MultiplexedHttpStream10GetSSLInfoEPNS_7SSLInfoE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::MultiplexedHttpStream"*, %"class.net::SSLCertRequestInfo"*)* @_ZN3net21MultiplexedHttpStream21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE to i8*), i8* bitcast (i1 (%"class.net::MultiplexedHttpStream"*, %"class.net::IPEndPoint"*)* @_ZN3net21MultiplexedHttpStream17GetRemoteEndpointEPNS_10IPEndPointE to i8*), i8* bitcast (void (%"class.net::MultiplexedHttpStream"*, %"class.net::HttpNetworkSession"*)* @_ZN3net21MultiplexedHttpStream5DrainEPNS_18HttpNetworkSessionE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.net::HttpStream"* (%"class.net::MultiplexedHttpStream"*)* @_ZN3net21MultiplexedHttpStream18RenewStreamForAuthEv to i8*), i8* bitcast (void (%"class.net::MultiplexedHttpStream"*, %"class.base::RepeatingCallback"*)* @_ZN3net21MultiplexedHttpStream25SetRequestHeadersCallbackEN4base17RepeatingCallbackIFvNS_21HttpRawRequestHeadersEEEE to i8*), i8* bitcast (void (%"class.net::HttpStream"*, i32)* @_ZN3net10HttpStream21SetRequestIdempotencyENS_11IdempotencyE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3net21MultiplexedHttpStreamD1Ev = hidden unnamed_addr alias void (%"class.net::MultiplexedHttpStream"*), void (%"class.net::MultiplexedHttpStream"*)* @_ZN3net21MultiplexedHttpStreamD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStreamC2ENSt3__110unique_ptrINS_24MultiplexedSessionHandleENS1_14default_deleteIS3_EEEE(%"class.net::MultiplexedHttpStream"* nocapture, %"class.net::MultiplexedSessionHandle"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.net::MultiplexedSessionHandle"* %1 to i64
  %4 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3net21MultiplexedHttpStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStreamD2Ev(%"class.net::MultiplexedHttpStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3net21MultiplexedHttpStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.net::MultiplexedSessionHandle"*, %"class.net::MultiplexedSessionHandle"** %4, align 8
  store %"class.net::MultiplexedSessionHandle"* null, %"class.net::MultiplexedSessionHandle"** %4, align 8
  %6 = icmp eq %"class.net::MultiplexedSessionHandle"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.net::MultiplexedSessionHandle"* %5 to void (%"class.net::MultiplexedSessionHandle"*)***
  %9 = load void (%"class.net::MultiplexedSessionHandle"*)**, void (%"class.net::MultiplexedSessionHandle"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::MultiplexedSessionHandle"*)*, void (%"class.net::MultiplexedSessionHandle"*)** %9, i64 1
  %11 = load void (%"class.net::MultiplexedSessionHandle"*)*, void (%"class.net::MultiplexedSessionHandle"*)** %10, align 8
  tail call void %11(%"class.net::MultiplexedSessionHandle"* nonnull %5) #7
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStreamD0Ev(%"class.net::MultiplexedHttpStream"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net21MultiplexedHttpStream17GetRemoteEndpointEPNS_10IPEndPointE(%"class.net::MultiplexedHttpStream"* nocapture readonly, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::MultiplexedSessionHandle"*, %"class.net::MultiplexedSessionHandle"** %3, align 8
  %5 = tail call zeroext i1 @_ZN3net24MultiplexedSessionHandle17GetRemoteEndpointEPNS_10IPEndPointE(%"class.net::MultiplexedSessionHandle"* %4, %"class.net::IPEndPoint"* %1) #7
  ret i1 %5
}

declare zeroext i1 @_ZN3net24MultiplexedSessionHandle17GetRemoteEndpointEPNS_10IPEndPointE(%"class.net::MultiplexedSessionHandle"*, %"class.net::IPEndPoint"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStream10GetSSLInfoEPNS_7SSLInfoE(%"class.net::MultiplexedHttpStream"* nocapture readonly, %"class.net::SSLInfo"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::MultiplexedSessionHandle"*, %"class.net::MultiplexedSessionHandle"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK3net24MultiplexedSessionHandle10GetSSLInfoEPNS_7SSLInfoE(%"class.net::MultiplexedSessionHandle"* %4, %"class.net::SSLInfo"* %1) #7
  ret void
}

declare zeroext i1 @_ZNK3net24MultiplexedSessionHandle10GetSSLInfoEPNS_7SSLInfoE(%"class.net::MultiplexedSessionHandle"*, %"class.net::SSLInfo"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStream11SaveSSLInfoEv(%"class.net::MultiplexedHttpStream"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::MultiplexedSessionHandle"*, %"class.net::MultiplexedSessionHandle"** %2, align 8
  tail call void @_ZN3net24MultiplexedSessionHandle11SaveSSLInfoEv(%"class.net::MultiplexedSessionHandle"* %3) #7
  ret void
}

declare void @_ZN3net24MultiplexedSessionHandle11SaveSSLInfoEv(%"class.net::MultiplexedSessionHandle"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStream21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE(%"class.net::MultiplexedHttpStream"* nocapture, %"class.net::SSLCertRequestInfo"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStream5DrainEPNS_18HttpNetworkSessionE(%"class.net::MultiplexedHttpStream"*, %"class.net::HttpNetworkSession"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 0
  %4 = bitcast %"class.net::MultiplexedHttpStream"* %0 to void (%"class.net::HttpStream"*, i1)***
  %5 = load void (%"class.net::HttpStream"*, i1)**, void (%"class.net::HttpStream"*, i1)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.net::HttpStream"*, i1)*, void (%"class.net::HttpStream"*, i1)** %5, i64 6
  %7 = load void (%"class.net::HttpStream"*, i1)*, void (%"class.net::HttpStream"*, i1)** %6, align 8
  tail call void %7(%"class.net::HttpStream"* %3, i1 zeroext false) #7
  %8 = icmp eq %"class.net::MultiplexedHttpStream"* %0, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.net::MultiplexedHttpStream"* %0 to void (%"class.net::MultiplexedHttpStream"*)***
  %11 = load void (%"class.net::MultiplexedHttpStream"*)**, void (%"class.net::MultiplexedHttpStream"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::MultiplexedHttpStream"*)*, void (%"class.net::MultiplexedHttpStream"*)** %11, i64 1
  %13 = load void (%"class.net::MultiplexedHttpStream"*)*, void (%"class.net::MultiplexedHttpStream"*)** %12, align 8
  tail call void %13(%"class.net::MultiplexedHttpStream"* nonnull %0) #7
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.net::HttpStream"* @_ZN3net21MultiplexedHttpStream18RenewStreamForAuthEv(%"class.net::MultiplexedHttpStream"* nocapture readnone) unnamed_addr #5 align 2 {
  ret %"class.net::HttpStream"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStream19SetConnectionReusedEv(%"class.net::MultiplexedHttpStream"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net21MultiplexedHttpStream18CanReuseConnectionEv(%"class.net::MultiplexedHttpStream"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStream25SetRequestHeadersCallbackEN4base17RepeatingCallbackIFvNS_21HttpRawRequestHeadersEEEE(%"class.net::MultiplexedHttpStream"*, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21MultiplexedHttpStream30DispatchRequestHeadersCallbackERKN4spdy16Http2HeaderBlockE(%"class.net::MultiplexedHttpStream"* nocapture readonly, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::HttpRawRequestHeaders", align 8
  %4 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %5 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %6 = alloca %"class.net::HttpRawRequestHeaders", align 8
  %7 = getelementptr inbounds %"class.net::MultiplexedHttpStream", %"class.net::MultiplexedHttpStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = icmp eq %"class.base::internal::BindStateBase"* %8, null
  br i1 %9, label %51, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.net::HttpRawRequestHeaders"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #7
  %12 = bitcast %"class.net::HttpRawRequestHeaders"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN3net21HttpRawRequestHeadersC1Ev(%"class.net::HttpRawRequestHeaders"* nonnull %3) #7
  %13 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %4, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*), %"struct.std::__1::__list_node_base"** %14, align 8
  %15 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8, !noalias !2
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %4, %"struct.std::__1::__list_node_base"* %16) #7
  %17 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %5, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*), %"struct.std::__1::__list_node_base"** %18, align 8
  %19 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5, %"struct.std::__1::__list_node_base"* %19) #7
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %21 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %20, %21
  br i1 %22, label %26, label %23

23:                                               ; preds = %10
  %24 = bitcast %"struct.std::__1::__list_node_base"* %20 to %"struct.std::__1::__list_node"*
  %25 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %4 to i64*
  br label %31

26:                                               ; preds = %31, %10
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  call void @_ZN3net21HttpRawRequestHeadersC1EOS0_(%"class.net::HttpRawRequestHeaders"* nonnull %6, %"class.net::HttpRawRequestHeaders"* nonnull dereferenceable(48) %3) #7
  %27 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %27, i64 0, i32 1
  %29 = bitcast void ()** %28 to void (%"class.base::internal::BindStateBase"*, %"class.net::HttpRawRequestHeaders"*)**
  %30 = load void (%"class.base::internal::BindStateBase"*, %"class.net::HttpRawRequestHeaders"*)*, void (%"class.base::internal::BindStateBase"*, %"class.net::HttpRawRequestHeaders"*)** %29, align 8
  call void %30(%"class.base::internal::BindStateBase"* %27, %"class.net::HttpRawRequestHeaders"* nonnull dereferenceable(48) %6) #7
  call void @_ZN3net21HttpRawRequestHeadersD1Ev(%"class.net::HttpRawRequestHeaders"* nonnull %6) #7
  call void @_ZN3net21HttpRawRequestHeadersD1Ev(%"class.net::HttpRawRequestHeaders"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  br label %51

31:                                               ; preds = %23, %31
  %32 = phi %"struct.std::__1::__list_node"* [ %24, %23 ], [ %50, %31 ]
  %33 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %32, i64 0, i32 1, i32 1
  %34 = call dereferenceable(32) %"struct.std::__1::pair.79"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %33) #7
  %35 = getelementptr inbounds %"struct.std::__1::pair.79", %"struct.std::__1::pair.79"* %34, i64 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.79", %"struct.std::__1::pair.79"* %34, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.79", %"struct.std::__1::pair.79"* %34, i64 0, i32 1, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.79", %"struct.std::__1::pair.79"* %34, i64 0, i32 1, i32 1
  %42 = load i64, i64* %41, align 8
  call void @_ZN3net21HttpRawRequestHeaders3AddEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpRawRequestHeaders"* nonnull %3, i8* %36, i64 %38, i8* %40, i64 %42) #7
  %43 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %43, i64 0, i32 1
  %45 = bitcast %"struct.std::__1::__list_node_base"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %25, align 8
  %47 = inttoptr i64 %46 to %"struct.std::__1::__list_node_base"*
  %48 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %49 = icmp eq %"struct.std::__1::__list_node_base"* %48, %47
  %50 = inttoptr i64 %46 to %"struct.std::__1::__list_node"*
  br i1 %49, label %26, label %31

51:                                               ; preds = %2, %26
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN3net21HttpRawRequestHeadersC1Ev(%"class.net::HttpRawRequestHeaders"*) unnamed_addr #4

declare void @_ZN3net21HttpRawRequestHeaders3AddEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpRawRequestHeaders"*, i8*, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"*) unnamed_addr #1

declare void @_ZN3net21HttpRawRequestHeadersC1EOS0_(%"class.net::HttpRawRequestHeaders"*, %"class.net::HttpRawRequestHeaders"* dereferenceable(48)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net21HttpRawRequestHeadersD1Ev(%"class.net::HttpRawRequestHeaders"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net10HttpStream21SetRequestIdempotencyENS_11IdempotencyE(%"class.net::HttpStream"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"*, %"struct.std::__1::__list_node_base"*) unnamed_addr #4

declare dereferenceable(32) %"struct.std::__1::pair.79"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4spdy16Http2HeaderBlock5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4spdy16Http2HeaderBlock5beginEv"}
