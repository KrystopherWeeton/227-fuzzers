; ModuleID = '../../extensions/common/api/declarative/declarative_manifest_data.cc'
source_filename = "../../extensions/common/api/declarative/declarative_manifest_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.extensions::DeclarativeManifestData" = type { %"struct.extensions::Extension::ManifestData", %"class.std::__1::map" }
%"struct.extensions::Extension::ManifestData" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.162" }
%"struct.std::__1::pair.162" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.142" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"*, %"class.std::__1::__compressed_pair.144" }
%"struct.extensions::api::events::Rule" = type { %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::vector.124", %"class.std::__1::vector.124", %"class.std::__1::unique_ptr.136" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::vector.120"* }
%"class.std::__1::vector.120" = type opaque
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.std::__1::unique_ptr.126"*, %"class.std::__1::unique_ptr.126"*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::Value"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.52" }
%"union.absl::variant_internal::DestructibleUnionImpl.52" = type { %"union.absl::variant_internal::DestructibleUnionImpl.53" }
%"union.absl::variant_internal::DestructibleUnionImpl.53" = type { %"union.absl::variant_internal::DestructibleUnionImpl.54" }
%"union.absl::variant_internal::DestructibleUnionImpl.54" = type { %"union.absl::variant_internal::DestructibleUnionImpl.55" }
%"union.absl::variant_internal::DestructibleUnionImpl.55" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.std::__1::unique_ptr.126"* }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { i32* }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.extensions::api::events::Rule"* }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.22", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.46", %"class.std::__1::map.87", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.28" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.33" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.39" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { i32*, i32*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i32* }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.std::__1::map.87" = type { %"class.std::__1::__tree.88" }
%"class.std::__1::__tree.88" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_string.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.105 }
%union.anon.105 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.164" = type { i8 }
%class.anon.160 = type { %"class.extensions::(anonymous namespace)::ErrorBuilder"* }
%"class.extensions::(anonymous namespace)::ErrorBuilder" = type { %"class.std::__1::basic_string.102"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.106 }
%struct.anon.106 = type { %"struct.std::__1::__padding.107", i8 }
%"struct.std::__1::__padding.107" = type { [1 x i8] }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv = comdat any

$_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE7reserveEm = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSQ_IJEEEEEENS_4pairINS_15__tree_iteratorISF_PNS_11__tree_nodeISF_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISQ_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@_ZTVN10extensions23DeclarativeManifestDataE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::DeclarativeManifestData"*)* @_ZN10extensions23DeclarativeManifestDataD2Ev to i8*), i8* bitcast (void (%"class.extensions::DeclarativeManifestData"*)* @_ZN10extensions23DeclarativeManifestDataD0Ev to i8*)] }, align 8
@_ZN10extensions13manifest_keys11kEventRulesE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [36 x i8] c"'event_rules' expected list, got %s\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"expected dictionary, got %s\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"'event' is required\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"rule failed to populate\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.13 = private unnamed_addr constant [3 x i16] [i16 59, i16 32, i16 0], align 2
@.str.15 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.16 = private unnamed_addr constant [40 x i8] c"'type' is required and must be a string\00", align 1
@_ZN10extensions29declarative_content_constants17kLegacyShowActionE = external constant [0 x i8], align 1
@_ZN10extensions29declarative_content_constants11kShowActionE = external constant [0 x i8], align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"instanceType\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN10extensions23DeclarativeManifestDataC1Ev = hidden unnamed_addr alias void (%"class.extensions::DeclarativeManifestData"*), void (%"class.extensions::DeclarativeManifestData"*)* @_ZN10extensions23DeclarativeManifestDataC2Ev
@_ZN10extensions23DeclarativeManifestDataD1Ev = hidden unnamed_addr alias void (%"class.extensions::DeclarativeManifestData"*), void (%"class.extensions::DeclarativeManifestData"*)* @_ZN10extensions23DeclarativeManifestDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23DeclarativeManifestDataC2Ev(%"class.extensions::DeclarativeManifestData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions23DeclarativeManifestDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23DeclarativeManifestDataD2Ev(%"class.extensions::DeclarativeManifestData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions23DeclarativeManifestDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23DeclarativeManifestDataD0Ev(%"class.extensions::DeclarativeManifestData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions23DeclarativeManifestDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #12
  %7 = bitcast %"class.extensions::DeclarativeManifestData"* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::DeclarativeManifestData"* @_ZN10extensions23DeclarativeManifestData3GetEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys11kEventRulesE, i64 0, i64 0)) #12
  %5 = icmp ugt i64 %4, -17
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %7) #14
  unreachable

8:                                                ; preds = %1
  %9 = icmp ult i64 %4, 23
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = add nuw i64 %4, 16
  %12 = and i64 %11, -16
  %13 = tail call i8* @_Znwm(i64 %12) #13
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = or i64 %12, -9223372036854775808
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %17, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %24

19:                                               ; preds = %8
  %20 = trunc i64 %4 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1
  %23 = icmp eq i64 %4, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19, %10
  %25 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %18, %10 ]
  %26 = phi i8* [ %3, %19 ], [ %13, %10 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys11kEventRulesE, i64 0, i64 0), i64 %4, i1 false) #12
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %25, %24 ]
  %29 = phi i8* [ %3, %19 ], [ %26, %24 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %4
  store i8 0, i8* %30, align 1
  %31 = call %"struct.extensions::Extension::ManifestData"* @_ZNK10extensions9Extension15GetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Extension"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #12
  %32 = bitcast %"struct.extensions::Extension::ManifestData"* %31 to %"class.extensions::DeclarativeManifestData"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %27, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  ret %"class.extensions::DeclarativeManifestData"* %32
}

declare %"struct.extensions::Extension::ManifestData"* @_ZNK10extensions9Extension15GetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Extension"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::DeclarativeManifestData"* @_ZN10extensions23DeclarativeManifestData9FromValueERKN4base5ValueEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string.102"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.164", align 1
  %5 = alloca %class.anon.160, align 8
  %6 = alloca %"class.std::__1::basic_string.102", align 8
  %7 = alloca %"class.std::__1::basic_string.102", align 8
  %8 = alloca %"class.std::__1::basic_string.102", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.std::__1::basic_string.102", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.extensions::(anonymous namespace)::ErrorBuilder", align 8
  %15 = alloca %"class.base::ListValue"*, align 8
  %16 = alloca %"class.base::CheckedContiguousIterator", align 8
  %17 = alloca %"class.base::CheckedContiguousIterator", align 8
  %18 = alloca %"class.base::DictionaryValue"*, align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"struct.extensions::api::events::Rule", align 8
  %21 = bitcast %"class.extensions::(anonymous namespace)::ErrorBuilder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ErrorBuilder", %"class.extensions::(anonymous namespace)::ErrorBuilder"* %14, i64 0, i32 0
  store %"class.std::__1::basic_string.102"* %1, %"class.std::__1::basic_string.102"** %22, align 8
  %23 = tail call i8* @_Znwm(i64 32) #13
  %24 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions23DeclarativeManifestDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 16
  %26 = getelementptr inbounds i8, i8* %23, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #12
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast %"class.base::ListValue"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %15, align 8
  %29 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %0, %"class.base::ListValue"** nonnull %15) #12
  br i1 %29, label %316, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i8
  %34 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %33) #12
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #12
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %39

39:                                               ; preds = %30, %36
  %40 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i8* %34) #12
  %41 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = select i1 %44, i8* %46, i8* %40
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %43 to i64
  %51 = select i1 %44, i64 %49, i64 %50
  %52 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %22, align 8
  %53 = bitcast %"class.std::__1::basic_string.102"* %52 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %39
  %58 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  br label %62

60:                                               ; preds = %39
  %61 = zext i8 %55 to i64
  br label %62

62:                                               ; preds = %60, %57
  %63 = phi i64 [ %59, %57 ], [ %61, %60 ]
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %105, label %65

65:                                               ; preds = %62
  br i1 %56, label %66, label %73

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 9223372036854775807
  %70 = add nsw i64 %69, -1
  %71 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  br label %75

73:                                               ; preds = %65
  %74 = zext i8 %55 to i64
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i64 [ %70, %66 ], [ 10, %73 ]
  %77 = phi i64 [ %72, %66 ], [ %74, %73 ]
  %78 = sub i64 %76, %77
  %79 = icmp ult i64 %78, 2
  br i1 %79, label %99, label %80

80:                                               ; preds = %75
  br i1 %56, label %81, label %84

81:                                               ; preds = %80
  %82 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i16*, i16** %82, align 8
  br label %86

84:                                               ; preds = %80
  %85 = bitcast %"class.std::__1::basic_string.102"* %52 to i16*
  br label %86

86:                                               ; preds = %84, %81
  %87 = phi i16* [ %83, %81 ], [ %85, %84 ]
  %88 = getelementptr inbounds i16, i16* %87, i64 %77
  store i16 59, i16* %88, align 2
  %89 = getelementptr inbounds i16, i16* %88, i64 1
  store i16 32, i16* %89, align 2
  %90 = add i64 %77, 2
  %91 = load i8, i8* %54, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %90, i64* %94, align 8
  br label %97

95:                                               ; preds = %86
  %96 = trunc i64 %90 to i8
  store i8 %96, i8* %54, align 1
  br label %97

97:                                               ; preds = %95, %93
  %98 = getelementptr inbounds i16, i16* %87, i64 %90
  store i16 0, i16* %98, align 2
  br label %102

99:                                               ; preds = %75
  %100 = add i64 %77, 2
  %101 = sub i64 %100, %76
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %52, i64 %76, i64 %101, i64 %77, i64 %77, i64 0, i64 2, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.13, i64 0, i64 0)) #12
  br label %102

102:                                              ; preds = %97, %99
  %103 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %22, align 8
  %104 = bitcast %"class.std::__1::basic_string.102"* %103 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %105

105:                                              ; preds = %102, %62
  %106 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %104, %102 ], [ %53, %62 ]
  %107 = phi %"class.std::__1::basic_string.102"* [ %103, %102 ], [ %52, %62 ]
  %108 = bitcast %"class.std::__1::basic_string.102"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #12
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.102"* nonnull sret %11, i8* %47, i64 %51) #12
  %109 = bitcast %"class.std::__1::basic_string.102"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i16*, i16** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.std::__1::basic_string.102"* %11 to i16*
  %118 = zext i8 %111 to i64
  %119 = select i1 %112, i16* %114, i16* %117
  %120 = select i1 %112, i64 %116, i64 %118
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %105
  %125 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 9223372036854775807
  %128 = add nsw i64 %127, -1
  %129 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  br label %133

131:                                              ; preds = %105
  %132 = zext i8 %122 to i64
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i64 [ %128, %124 ], [ 10, %131 ]
  %135 = phi i64 [ %130, %124 ], [ %132, %131 ]
  %136 = sub i64 %134, %135
  %137 = icmp ult i64 %136, %120
  br i1 %137, label %302, label %138

138:                                              ; preds = %133
  %139 = icmp eq i64 %120, 0
  br i1 %139, label %305, label %140

140:                                              ; preds = %138
  br i1 %123, label %141, label %144

141:                                              ; preds = %140
  %142 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i16*, i16** %142, align 8
  br label %146

144:                                              ; preds = %140
  %145 = bitcast %"class.std::__1::basic_string.102"* %107 to i16*
  br label %146

146:                                              ; preds = %144, %141
  %147 = phi i16* [ %143, %141 ], [ %145, %144 ]
  %148 = getelementptr inbounds i16, i16* %147, i64 %135
  %149 = icmp ult i64 %120, 16
  br i1 %149, label %239, label %150

150:                                              ; preds = %146
  %151 = add i64 %120, %135
  %152 = getelementptr i16, i16* %147, i64 %151
  %153 = getelementptr i16, i16* %119, i64 %120
  %154 = icmp ult i16* %148, %153
  %155 = icmp ult i16* %119, %152
  %156 = and i1 %154, %155
  br i1 %156, label %239, label %157

157:                                              ; preds = %150
  %158 = and i64 %120, -16
  %159 = sub i64 %120, %158
  %160 = getelementptr i16, i16* %119, i64 %158
  %161 = getelementptr i16, i16* %148, i64 %158
  %162 = add i64 %158, -16
  %163 = lshr exact i64 %162, 4
  %164 = add nuw nsw i64 %163, 1
  %165 = and i64 %164, 3
  %166 = icmp ult i64 %162, 48
  br i1 %166, label %218, label %167

167:                                              ; preds = %157
  %168 = sub nsw i64 %164, %165
  br label %169

169:                                              ; preds = %169, %167
  %170 = phi i64 [ 0, %167 ], [ %215, %169 ]
  %171 = phi i64 [ %168, %167 ], [ %216, %169 ]
  %172 = getelementptr i16, i16* %119, i64 %170
  %173 = getelementptr i16, i16* %148, i64 %170
  %174 = bitcast i16* %172 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !2
  %176 = getelementptr i16, i16* %172, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  %178 = load <8 x i16>, <8 x i16>* %177, align 2, !alias.scope !2
  %179 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %175, <8 x i16>* %179, align 2, !alias.scope !5, !noalias !2
  %180 = getelementptr i16, i16* %173, i64 8
  %181 = bitcast i16* %180 to <8 x i16>*
  store <8 x i16> %178, <8 x i16>* %181, align 2, !alias.scope !5, !noalias !2
  %182 = or i64 %170, 16
  %183 = getelementptr i16, i16* %119, i64 %182
  %184 = getelementptr i16, i16* %148, i64 %182
  %185 = bitcast i16* %183 to <8 x i16>*
  %186 = load <8 x i16>, <8 x i16>* %185, align 2, !alias.scope !2
  %187 = getelementptr i16, i16* %183, i64 8
  %188 = bitcast i16* %187 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2, !alias.scope !2
  %190 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %186, <8 x i16>* %190, align 2, !alias.scope !5, !noalias !2
  %191 = getelementptr i16, i16* %184, i64 8
  %192 = bitcast i16* %191 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %192, align 2, !alias.scope !5, !noalias !2
  %193 = or i64 %170, 32
  %194 = getelementptr i16, i16* %119, i64 %193
  %195 = getelementptr i16, i16* %148, i64 %193
  %196 = bitcast i16* %194 to <8 x i16>*
  %197 = load <8 x i16>, <8 x i16>* %196, align 2, !alias.scope !2
  %198 = getelementptr i16, i16* %194, i64 8
  %199 = bitcast i16* %198 to <8 x i16>*
  %200 = load <8 x i16>, <8 x i16>* %199, align 2, !alias.scope !2
  %201 = bitcast i16* %195 to <8 x i16>*
  store <8 x i16> %197, <8 x i16>* %201, align 2, !alias.scope !5, !noalias !2
  %202 = getelementptr i16, i16* %195, i64 8
  %203 = bitcast i16* %202 to <8 x i16>*
  store <8 x i16> %200, <8 x i16>* %203, align 2, !alias.scope !5, !noalias !2
  %204 = or i64 %170, 48
  %205 = getelementptr i16, i16* %119, i64 %204
  %206 = getelementptr i16, i16* %148, i64 %204
  %207 = bitcast i16* %205 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 2, !alias.scope !2
  %209 = getelementptr i16, i16* %205, i64 8
  %210 = bitcast i16* %209 to <8 x i16>*
  %211 = load <8 x i16>, <8 x i16>* %210, align 2, !alias.scope !2
  %212 = bitcast i16* %206 to <8 x i16>*
  store <8 x i16> %208, <8 x i16>* %212, align 2, !alias.scope !5, !noalias !2
  %213 = getelementptr i16, i16* %206, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %214, align 2, !alias.scope !5, !noalias !2
  %215 = add i64 %170, 64
  %216 = add i64 %171, -4
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %169, !llvm.loop !7

218:                                              ; preds = %169, %157
  %219 = phi i64 [ 0, %157 ], [ %215, %169 ]
  %220 = icmp eq i64 %165, 0
  br i1 %220, label %237, label %221

221:                                              ; preds = %218, %221
  %222 = phi i64 [ %234, %221 ], [ %219, %218 ]
  %223 = phi i64 [ %235, %221 ], [ %165, %218 ]
  %224 = getelementptr i16, i16* %119, i64 %222
  %225 = getelementptr i16, i16* %148, i64 %222
  %226 = bitcast i16* %224 to <8 x i16>*
  %227 = load <8 x i16>, <8 x i16>* %226, align 2, !alias.scope !2
  %228 = getelementptr i16, i16* %224, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !2
  %231 = bitcast i16* %225 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %231, align 2, !alias.scope !5, !noalias !2
  %232 = getelementptr i16, i16* %225, i64 8
  %233 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %233, align 2, !alias.scope !5, !noalias !2
  %234 = add i64 %222, 16
  %235 = add i64 %223, -1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %221, !llvm.loop !9

237:                                              ; preds = %221, %218
  %238 = icmp eq i64 %120, %158
  br i1 %238, label %292, label %239

239:                                              ; preds = %237, %150, %146
  %240 = phi i64 [ %120, %150 ], [ %120, %146 ], [ %159, %237 ]
  %241 = phi i16* [ %119, %150 ], [ %119, %146 ], [ %160, %237 ]
  %242 = phi i16* [ %148, %150 ], [ %148, %146 ], [ %161, %237 ]
  %243 = add i64 %240, -1
  %244 = and i64 %240, 7
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %257, label %246

246:                                              ; preds = %239, %246
  %247 = phi i64 [ %252, %246 ], [ %240, %239 ]
  %248 = phi i16* [ %254, %246 ], [ %241, %239 ]
  %249 = phi i16* [ %253, %246 ], [ %242, %239 ]
  %250 = phi i64 [ %255, %246 ], [ %244, %239 ]
  %251 = load i16, i16* %248, align 2
  store i16 %251, i16* %249, align 2
  %252 = add i64 %247, -1
  %253 = getelementptr inbounds i16, i16* %249, i64 1
  %254 = getelementptr inbounds i16, i16* %248, i64 1
  %255 = add i64 %250, -1
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %246, !llvm.loop !11

257:                                              ; preds = %246, %239
  %258 = phi i64 [ %240, %239 ], [ %252, %246 ]
  %259 = phi i16* [ %241, %239 ], [ %254, %246 ]
  %260 = phi i16* [ %242, %239 ], [ %253, %246 ]
  %261 = icmp ult i64 %243, 7
  br i1 %261, label %292, label %262

262:                                              ; preds = %257, %262
  %263 = phi i64 [ %288, %262 ], [ %258, %257 ]
  %264 = phi i16* [ %290, %262 ], [ %259, %257 ]
  %265 = phi i16* [ %289, %262 ], [ %260, %257 ]
  %266 = load i16, i16* %264, align 2
  store i16 %266, i16* %265, align 2
  %267 = getelementptr inbounds i16, i16* %265, i64 1
  %268 = getelementptr inbounds i16, i16* %264, i64 1
  %269 = load i16, i16* %268, align 2
  store i16 %269, i16* %267, align 2
  %270 = getelementptr inbounds i16, i16* %265, i64 2
  %271 = getelementptr inbounds i16, i16* %264, i64 2
  %272 = load i16, i16* %271, align 2
  store i16 %272, i16* %270, align 2
  %273 = getelementptr inbounds i16, i16* %265, i64 3
  %274 = getelementptr inbounds i16, i16* %264, i64 3
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %265, i64 4
  %277 = getelementptr inbounds i16, i16* %264, i64 4
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = getelementptr inbounds i16, i16* %265, i64 5
  %280 = getelementptr inbounds i16, i16* %264, i64 5
  %281 = load i16, i16* %280, align 2
  store i16 %281, i16* %279, align 2
  %282 = getelementptr inbounds i16, i16* %265, i64 6
  %283 = getelementptr inbounds i16, i16* %264, i64 6
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %282, align 2
  %285 = getelementptr inbounds i16, i16* %265, i64 7
  %286 = getelementptr inbounds i16, i16* %264, i64 7
  %287 = load i16, i16* %286, align 2
  store i16 %287, i16* %285, align 2
  %288 = add i64 %263, -8
  %289 = getelementptr inbounds i16, i16* %265, i64 8
  %290 = getelementptr inbounds i16, i16* %264, i64 8
  %291 = icmp eq i64 %288, 0
  br i1 %291, label %292, label %262, !llvm.loop !12

292:                                              ; preds = %257, %262, %237
  %293 = add i64 %135, %120
  %294 = load i8, i8* %121, align 1
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %292
  %297 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %293, i64* %297, align 8
  br label %300

298:                                              ; preds = %292
  %299 = trunc i64 %293 to i8
  store i8 %299, i8* %121, align 1
  br label %300

300:                                              ; preds = %298, %296
  %301 = getelementptr inbounds i16, i16* %147, i64 %293
  store i16 0, i16* %301, align 2
  br label %305

302:                                              ; preds = %133
  %303 = add i64 %135, %120
  %304 = sub i64 %303, %134
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %107, i64 %134, i64 %304, i64 %135, i64 %135, i64 0, i64 %120, i16* %119) #12
  br label %305

305:                                              ; preds = %138, %300, %302
  %306 = load i8, i8* %110, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %305
  %309 = bitcast %"class.std::__1::basic_string.102"* %11 to i8**
  %310 = load i8*, i8** %309, align 8
  call void @_ZdlPv(i8* %310) #13
  br label %311

311:                                              ; preds = %305, %308
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #12
  %312 = load i8, i8* %42, align 1
  %313 = icmp slt i8 %312, 0
  br i1 %313, label %314, label %1232

314:                                              ; preds = %311
  %315 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %315) #13
  br label %1232

316:                                              ; preds = %2
  %317 = bitcast %"class.base::ListValue"** %15 to %"class.base::Value"**
  %318 = load %"class.base::Value"*, %"class.base::Value"** %317, align 8
  %319 = call %"class.std::__1::vector.73"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %318) #12
  %320 = bitcast %"class.base::CheckedContiguousIterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %320) #12
  %321 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %16, i64 0, i32 1
  %322 = icmp eq %"class.std::__1::vector.73"* %319, null
  %323 = bitcast %"class.base::CheckedContiguousIterator"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %323, i8 -86, i64 24, i1 false)
  br i1 %322, label %333, label %324

324:                                              ; preds = %316
  %325 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %319, i64 0, i32 0, i32 0
  %326 = load %"class.base::Value"*, %"class.base::Value"** %325, align 8
  %327 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %319, i64 0, i32 0, i32 1
  %328 = bitcast %"class.base::Value"** %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = ptrtoint %"class.base::Value"* %326 to i64
  %331 = sub i64 %329, %330
  %332 = ashr exact i64 %331, 5
  br label %333

333:                                              ; preds = %316, %324
  %334 = phi %"class.base::Value"* [ %326, %324 ], [ null, %316 ]
  %335 = phi i64 [ %332, %324 ], [ 0, %316 ]
  %336 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %334, i64 %335
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %16, %"class.base::Value"* %334, %"class.base::Value"* %334, %"class.base::Value"* %336) #12
  %337 = bitcast %"class.base::CheckedContiguousIterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %337) #12
  %338 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %17, i64 0, i32 1
  %339 = bitcast %"class.base::CheckedContiguousIterator"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %339, i8 -86, i64 24, i1 false)
  br i1 %322, label %350, label %340

340:                                              ; preds = %333
  %341 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %319, i64 0, i32 0, i32 0
  %342 = load %"class.base::Value"*, %"class.base::Value"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %319, i64 0, i32 0, i32 1
  %344 = bitcast %"class.base::Value"** %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = ptrtoint %"class.base::Value"* %342 to i64
  %347 = sub i64 %345, %346
  %348 = ashr exact i64 %347, 5
  %349 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %342, i64 %348
  br label %350

350:                                              ; preds = %333, %340
  %351 = phi %"class.base::Value"* [ %342, %340 ], [ null, %333 ]
  %352 = phi %"class.base::Value"* [ %349, %340 ], [ null, %333 ]
  %353 = phi i64 [ %348, %340 ], [ 0, %333 ]
  %354 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %351, i64 %353
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %17, %"class.base::Value"* %351, %"class.base::Value"* %352, %"class.base::Value"* %354) #12
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %16, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %17) #12
  %355 = load %"class.base::Value"*, %"class.base::Value"** %321, align 8
  %356 = load %"class.base::Value"*, %"class.base::Value"** %338, align 8
  %357 = icmp eq %"class.base::Value"* %355, %356
  br i1 %357, label %1230, label %358

358:                                              ; preds = %350
  %359 = bitcast %"class.base::DictionaryValue"** %18 to i8*
  %360 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %361 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = bitcast %"class.std::__1::basic_string.102"* %7 to i8*
  %363 = bitcast %"class.std::__1::basic_string.102"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %364 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %363, i64 0, i32 1, i32 1
  %365 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %367 = bitcast %"class.std::__1::basic_string.102"* %7 to i16*
  %368 = bitcast %"class.std::__1::basic_string.102"* %7 to i8**
  %369 = bitcast %"struct.extensions::api::events::Rule"* %20 to i8*
  %370 = bitcast %"class.base::DictionaryValue"** %18 to %"class.base::Value"**
  %371 = bitcast %"class.std::__1::basic_string.102"* %6 to i8*
  %372 = bitcast %"class.std::__1::basic_string.102"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %373 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %372, i64 0, i32 1, i32 1
  %374 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %376 = bitcast %"class.std::__1::basic_string.102"* %6 to i16*
  %377 = bitcast %"class.std::__1::basic_string.102"* %6 to i8**
  %378 = bitcast %class.anon.160* %5 to i8*
  %379 = getelementptr inbounds %class.anon.160, %class.anon.160* %5, i64 0, i32 0
  %380 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %20, i64 0, i32 3
  %381 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %20, i64 0, i32 2
  %382 = bitcast i8* %26 to %"class.std::__1::__tree"*
  %383 = bitcast %"class.std::__1::tuple"* %3 to i8*
  %384 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %385 = getelementptr inbounds %"class.std::__1::tuple.164", %"class.std::__1::tuple.164"* %4, i64 0, i32 0
  %386 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %387 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %386, i64 0, i32 1, i32 0
  br label %388

388:                                              ; preds = %358, %1224
  %389 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %16)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %359) #12
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %18, align 8
  %390 = call zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"* %389, %"class.base::DictionaryValue"** nonnull %18) #12
  br i1 %390, label %678, label %391

391:                                              ; preds = %388
  %392 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %389, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %393 = load i64, i64* %392, align 8
  %394 = trunc i64 %393 to i8
  %395 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %394) #12
  %396 = icmp eq i8* %395, null
  br i1 %396, label %397, label %400

397:                                              ; preds = %391
  %398 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %398) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #12
  %399 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %398) #12
  br label %400

400:                                              ; preds = %391, %397
  %401 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %401) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8* %395) #12
  %402 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %403 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %402, i64 0, i32 1, i32 0
  %404 = load i8, i8* %403, align 1
  %405 = icmp slt i8 %404, 0
  %406 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %407 = load i8*, i8** %406, align 8
  %408 = select i1 %405, i8* %407, i8* %401
  %409 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %410 = load i64, i64* %409, align 8
  %411 = zext i8 %404 to i64
  %412 = select i1 %405, i64 %410, i64 %411
  %413 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %22, align 8
  %414 = bitcast %"class.std::__1::basic_string.102"* %413 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %415 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %414, i64 0, i32 1, i32 1
  %416 = load i8, i8* %415, align 1
  %417 = icmp slt i8 %416, 0
  br i1 %417, label %418, label %421

418:                                              ; preds = %400
  %419 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %413, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %420 = load i64, i64* %419, align 8
  br label %423

421:                                              ; preds = %400
  %422 = zext i8 %416 to i64
  br label %423

423:                                              ; preds = %421, %418
  %424 = phi i64 [ %420, %418 ], [ %422, %421 ]
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %466, label %426

426:                                              ; preds = %423
  br i1 %417, label %427, label %434

427:                                              ; preds = %426
  %428 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %413, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %429 = load i64, i64* %428, align 8
  %430 = and i64 %429, 9223372036854775807
  %431 = add nsw i64 %430, -1
  %432 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %413, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %433 = load i64, i64* %432, align 8
  br label %436

434:                                              ; preds = %426
  %435 = zext i8 %416 to i64
  br label %436

436:                                              ; preds = %434, %427
  %437 = phi i64 [ %431, %427 ], [ 10, %434 ]
  %438 = phi i64 [ %433, %427 ], [ %435, %434 ]
  %439 = sub i64 %437, %438
  %440 = icmp ult i64 %439, 2
  br i1 %440, label %460, label %441

441:                                              ; preds = %436
  br i1 %417, label %442, label %445

442:                                              ; preds = %441
  %443 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %413, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load i16*, i16** %443, align 8
  br label %447

445:                                              ; preds = %441
  %446 = bitcast %"class.std::__1::basic_string.102"* %413 to i16*
  br label %447

447:                                              ; preds = %445, %442
  %448 = phi i16* [ %444, %442 ], [ %446, %445 ]
  %449 = getelementptr inbounds i16, i16* %448, i64 %438
  store i16 59, i16* %449, align 2
  %450 = getelementptr inbounds i16, i16* %449, i64 1
  store i16 32, i16* %450, align 2
  %451 = add i64 %438, 2
  %452 = load i8, i8* %415, align 1
  %453 = icmp slt i8 %452, 0
  br i1 %453, label %454, label %456

454:                                              ; preds = %447
  %455 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %413, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %451, i64* %455, align 8
  br label %458

456:                                              ; preds = %447
  %457 = trunc i64 %451 to i8
  store i8 %457, i8* %415, align 1
  br label %458

458:                                              ; preds = %456, %454
  %459 = getelementptr inbounds i16, i16* %448, i64 %451
  store i16 0, i16* %459, align 2
  br label %463

460:                                              ; preds = %436
  %461 = add i64 %438, 2
  %462 = sub i64 %461, %437
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %413, i64 %437, i64 %462, i64 %438, i64 %438, i64 0, i64 2, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.13, i64 0, i64 0)) #12
  br label %463

463:                                              ; preds = %458, %460
  %464 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %22, align 8
  %465 = bitcast %"class.std::__1::basic_string.102"* %464 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %466

466:                                              ; preds = %463, %423
  %467 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %465, %463 ], [ %414, %423 ]
  %468 = phi %"class.std::__1::basic_string.102"* [ %464, %463 ], [ %413, %423 ]
  %469 = bitcast %"class.std::__1::basic_string.102"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %469) #12
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.102"* nonnull sret %8, i8* %408, i64 %412) #12
  %470 = bitcast %"class.std::__1::basic_string.102"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %471 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %470, i64 0, i32 1, i32 1
  %472 = load i8, i8* %471, align 1
  %473 = icmp slt i8 %472, 0
  %474 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %475 = load i16*, i16** %474, align 8
  %476 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %477 = load i64, i64* %476, align 8
  %478 = bitcast %"class.std::__1::basic_string.102"* %8 to i16*
  %479 = zext i8 %472 to i64
  %480 = select i1 %473, i16* %475, i16* %478
  %481 = select i1 %473, i64 %477, i64 %479
  %482 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %467, i64 0, i32 1, i32 1
  %483 = load i8, i8* %482, align 1
  %484 = icmp slt i8 %483, 0
  br i1 %484, label %485, label %492

485:                                              ; preds = %466
  %486 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %468, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %487 = load i64, i64* %486, align 8
  %488 = and i64 %487, 9223372036854775807
  %489 = add nsw i64 %488, -1
  %490 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %468, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %491 = load i64, i64* %490, align 8
  br label %494

492:                                              ; preds = %466
  %493 = zext i8 %483 to i64
  br label %494

494:                                              ; preds = %492, %485
  %495 = phi i64 [ %489, %485 ], [ 10, %492 ]
  %496 = phi i64 [ %491, %485 ], [ %493, %492 ]
  %497 = sub i64 %495, %496
  %498 = icmp ult i64 %497, %481
  br i1 %498, label %663, label %499

499:                                              ; preds = %494
  %500 = icmp eq i64 %481, 0
  br i1 %500, label %666, label %501

501:                                              ; preds = %499
  br i1 %484, label %502, label %505

502:                                              ; preds = %501
  %503 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %468, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load i16*, i16** %503, align 8
  br label %507

505:                                              ; preds = %501
  %506 = bitcast %"class.std::__1::basic_string.102"* %468 to i16*
  br label %507

507:                                              ; preds = %505, %502
  %508 = phi i16* [ %504, %502 ], [ %506, %505 ]
  %509 = getelementptr inbounds i16, i16* %508, i64 %496
  %510 = icmp ult i64 %481, 16
  br i1 %510, label %600, label %511

511:                                              ; preds = %507
  %512 = add i64 %481, %496
  %513 = getelementptr i16, i16* %508, i64 %512
  %514 = getelementptr i16, i16* %480, i64 %481
  %515 = icmp ult i16* %509, %514
  %516 = icmp ult i16* %480, %513
  %517 = and i1 %515, %516
  br i1 %517, label %600, label %518

518:                                              ; preds = %511
  %519 = and i64 %481, -16
  %520 = sub i64 %481, %519
  %521 = getelementptr i16, i16* %480, i64 %519
  %522 = getelementptr i16, i16* %509, i64 %519
  %523 = add i64 %519, -16
  %524 = lshr exact i64 %523, 4
  %525 = add nuw nsw i64 %524, 1
  %526 = and i64 %525, 3
  %527 = icmp ult i64 %523, 48
  br i1 %527, label %579, label %528

528:                                              ; preds = %518
  %529 = sub nsw i64 %525, %526
  br label %530

530:                                              ; preds = %530, %528
  %531 = phi i64 [ 0, %528 ], [ %576, %530 ]
  %532 = phi i64 [ %529, %528 ], [ %577, %530 ]
  %533 = getelementptr i16, i16* %480, i64 %531
  %534 = getelementptr i16, i16* %509, i64 %531
  %535 = bitcast i16* %533 to <8 x i16>*
  %536 = load <8 x i16>, <8 x i16>* %535, align 2, !alias.scope !13
  %537 = getelementptr i16, i16* %533, i64 8
  %538 = bitcast i16* %537 to <8 x i16>*
  %539 = load <8 x i16>, <8 x i16>* %538, align 2, !alias.scope !13
  %540 = bitcast i16* %534 to <8 x i16>*
  store <8 x i16> %536, <8 x i16>* %540, align 2, !alias.scope !16, !noalias !13
  %541 = getelementptr i16, i16* %534, i64 8
  %542 = bitcast i16* %541 to <8 x i16>*
  store <8 x i16> %539, <8 x i16>* %542, align 2, !alias.scope !16, !noalias !13
  %543 = or i64 %531, 16
  %544 = getelementptr i16, i16* %480, i64 %543
  %545 = getelementptr i16, i16* %509, i64 %543
  %546 = bitcast i16* %544 to <8 x i16>*
  %547 = load <8 x i16>, <8 x i16>* %546, align 2, !alias.scope !13
  %548 = getelementptr i16, i16* %544, i64 8
  %549 = bitcast i16* %548 to <8 x i16>*
  %550 = load <8 x i16>, <8 x i16>* %549, align 2, !alias.scope !13
  %551 = bitcast i16* %545 to <8 x i16>*
  store <8 x i16> %547, <8 x i16>* %551, align 2, !alias.scope !16, !noalias !13
  %552 = getelementptr i16, i16* %545, i64 8
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %550, <8 x i16>* %553, align 2, !alias.scope !16, !noalias !13
  %554 = or i64 %531, 32
  %555 = getelementptr i16, i16* %480, i64 %554
  %556 = getelementptr i16, i16* %509, i64 %554
  %557 = bitcast i16* %555 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !13
  %559 = getelementptr i16, i16* %555, i64 8
  %560 = bitcast i16* %559 to <8 x i16>*
  %561 = load <8 x i16>, <8 x i16>* %560, align 2, !alias.scope !13
  %562 = bitcast i16* %556 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %562, align 2, !alias.scope !16, !noalias !13
  %563 = getelementptr i16, i16* %556, i64 8
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %561, <8 x i16>* %564, align 2, !alias.scope !16, !noalias !13
  %565 = or i64 %531, 48
  %566 = getelementptr i16, i16* %480, i64 %565
  %567 = getelementptr i16, i16* %509, i64 %565
  %568 = bitcast i16* %566 to <8 x i16>*
  %569 = load <8 x i16>, <8 x i16>* %568, align 2, !alias.scope !13
  %570 = getelementptr i16, i16* %566, i64 8
  %571 = bitcast i16* %570 to <8 x i16>*
  %572 = load <8 x i16>, <8 x i16>* %571, align 2, !alias.scope !13
  %573 = bitcast i16* %567 to <8 x i16>*
  store <8 x i16> %569, <8 x i16>* %573, align 2, !alias.scope !16, !noalias !13
  %574 = getelementptr i16, i16* %567, i64 8
  %575 = bitcast i16* %574 to <8 x i16>*
  store <8 x i16> %572, <8 x i16>* %575, align 2, !alias.scope !16, !noalias !13
  %576 = add i64 %531, 64
  %577 = add i64 %532, -4
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %579, label %530, !llvm.loop !18

579:                                              ; preds = %530, %518
  %580 = phi i64 [ 0, %518 ], [ %576, %530 ]
  %581 = icmp eq i64 %526, 0
  br i1 %581, label %598, label %582

582:                                              ; preds = %579, %582
  %583 = phi i64 [ %595, %582 ], [ %580, %579 ]
  %584 = phi i64 [ %596, %582 ], [ %526, %579 ]
  %585 = getelementptr i16, i16* %480, i64 %583
  %586 = getelementptr i16, i16* %509, i64 %583
  %587 = bitcast i16* %585 to <8 x i16>*
  %588 = load <8 x i16>, <8 x i16>* %587, align 2, !alias.scope !13
  %589 = getelementptr i16, i16* %585, i64 8
  %590 = bitcast i16* %589 to <8 x i16>*
  %591 = load <8 x i16>, <8 x i16>* %590, align 2, !alias.scope !13
  %592 = bitcast i16* %586 to <8 x i16>*
  store <8 x i16> %588, <8 x i16>* %592, align 2, !alias.scope !16, !noalias !13
  %593 = getelementptr i16, i16* %586, i64 8
  %594 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %591, <8 x i16>* %594, align 2, !alias.scope !16, !noalias !13
  %595 = add i64 %583, 16
  %596 = add i64 %584, -1
  %597 = icmp eq i64 %596, 0
  br i1 %597, label %598, label %582, !llvm.loop !19

598:                                              ; preds = %582, %579
  %599 = icmp eq i64 %481, %519
  br i1 %599, label %653, label %600

600:                                              ; preds = %598, %511, %507
  %601 = phi i64 [ %481, %511 ], [ %481, %507 ], [ %520, %598 ]
  %602 = phi i16* [ %480, %511 ], [ %480, %507 ], [ %521, %598 ]
  %603 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %522, %598 ]
  %604 = add i64 %601, -1
  %605 = and i64 %601, 7
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %618, label %607

607:                                              ; preds = %600, %607
  %608 = phi i64 [ %613, %607 ], [ %601, %600 ]
  %609 = phi i16* [ %615, %607 ], [ %602, %600 ]
  %610 = phi i16* [ %614, %607 ], [ %603, %600 ]
  %611 = phi i64 [ %616, %607 ], [ %605, %600 ]
  %612 = load i16, i16* %609, align 2
  store i16 %612, i16* %610, align 2
  %613 = add i64 %608, -1
  %614 = getelementptr inbounds i16, i16* %610, i64 1
  %615 = getelementptr inbounds i16, i16* %609, i64 1
  %616 = add i64 %611, -1
  %617 = icmp eq i64 %616, 0
  br i1 %617, label %618, label %607, !llvm.loop !20

618:                                              ; preds = %607, %600
  %619 = phi i64 [ %601, %600 ], [ %613, %607 ]
  %620 = phi i16* [ %602, %600 ], [ %615, %607 ]
  %621 = phi i16* [ %603, %600 ], [ %614, %607 ]
  %622 = icmp ult i64 %604, 7
  br i1 %622, label %653, label %623

623:                                              ; preds = %618, %623
  %624 = phi i64 [ %649, %623 ], [ %619, %618 ]
  %625 = phi i16* [ %651, %623 ], [ %620, %618 ]
  %626 = phi i16* [ %650, %623 ], [ %621, %618 ]
  %627 = load i16, i16* %625, align 2
  store i16 %627, i16* %626, align 2
  %628 = getelementptr inbounds i16, i16* %626, i64 1
  %629 = getelementptr inbounds i16, i16* %625, i64 1
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %626, i64 2
  %632 = getelementptr inbounds i16, i16* %625, i64 2
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %626, i64 3
  %635 = getelementptr inbounds i16, i16* %625, i64 3
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %626, i64 4
  %638 = getelementptr inbounds i16, i16* %625, i64 4
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %626, i64 5
  %641 = getelementptr inbounds i16, i16* %625, i64 5
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %626, i64 6
  %644 = getelementptr inbounds i16, i16* %625, i64 6
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = getelementptr inbounds i16, i16* %626, i64 7
  %647 = getelementptr inbounds i16, i16* %625, i64 7
  %648 = load i16, i16* %647, align 2
  store i16 %648, i16* %646, align 2
  %649 = add i64 %624, -8
  %650 = getelementptr inbounds i16, i16* %626, i64 8
  %651 = getelementptr inbounds i16, i16* %625, i64 8
  %652 = icmp eq i64 %649, 0
  br i1 %652, label %653, label %623, !llvm.loop !21

653:                                              ; preds = %618, %623, %598
  %654 = add i64 %496, %481
  %655 = load i8, i8* %482, align 1
  %656 = icmp slt i8 %655, 0
  br i1 %656, label %657, label %659

657:                                              ; preds = %653
  %658 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %468, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %654, i64* %658, align 8
  br label %661

659:                                              ; preds = %653
  %660 = trunc i64 %654 to i8
  store i8 %660, i8* %482, align 1
  br label %661

661:                                              ; preds = %659, %657
  %662 = getelementptr inbounds i16, i16* %508, i64 %654
  store i16 0, i16* %662, align 2
  br label %666

663:                                              ; preds = %494
  %664 = add i64 %496, %481
  %665 = sub i64 %664, %495
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %468, i64 %495, i64 %665, i64 %496, i64 %496, i64 0, i64 %481, i16* %480) #12
  br label %666

666:                                              ; preds = %499, %661, %663
  %667 = load i8, i8* %471, align 1
  %668 = icmp slt i8 %667, 0
  br i1 %668, label %669, label %672

669:                                              ; preds = %666
  %670 = bitcast %"class.std::__1::basic_string.102"* %8 to i8**
  %671 = load i8*, i8** %670, align 8
  call void @_ZdlPv(i8* %671) #13
  br label %672

672:                                              ; preds = %666, %669
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %469) #12
  %673 = load i8, i8* %403, align 1
  %674 = icmp slt i8 %673, 0
  br i1 %674, label %675, label %677

675:                                              ; preds = %672
  %676 = load i8*, i8** %406, align 8
  call void @_ZdlPv(i8* %676) #13
  br label %677

677:                                              ; preds = %675, %672
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %401) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %359) #12
  br label %1229

678:                                              ; preds = %388
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %360, i8 0, i64 24, i1 false) #12
  %679 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %18, align 8
  %680 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %679, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5, %"class.std::__1::basic_string"* nonnull %19) #12
  br i1 %680, label %935, label %681

681:                                              ; preds = %678
  %682 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %22, align 8
  %683 = bitcast %"class.std::__1::basic_string.102"* %682 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %684 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %683, i64 0, i32 1, i32 1
  %685 = load i8, i8* %684, align 1
  %686 = icmp slt i8 %685, 0
  br i1 %686, label %687, label %690

687:                                              ; preds = %681
  %688 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %682, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %689 = load i64, i64* %688, align 8
  br label %692

690:                                              ; preds = %681
  %691 = zext i8 %685 to i64
  br label %692

692:                                              ; preds = %690, %687
  %693 = phi i64 [ %689, %687 ], [ %691, %690 ]
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %735, label %695

695:                                              ; preds = %692
  br i1 %686, label %696, label %703

696:                                              ; preds = %695
  %697 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %682, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %698 = load i64, i64* %697, align 8
  %699 = and i64 %698, 9223372036854775807
  %700 = add nsw i64 %699, -1
  %701 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %682, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %702 = load i64, i64* %701, align 8
  br label %705

703:                                              ; preds = %695
  %704 = zext i8 %685 to i64
  br label %705

705:                                              ; preds = %703, %696
  %706 = phi i64 [ %700, %696 ], [ 10, %703 ]
  %707 = phi i64 [ %702, %696 ], [ %704, %703 ]
  %708 = sub i64 %706, %707
  %709 = icmp ult i64 %708, 2
  br i1 %709, label %729, label %710

710:                                              ; preds = %705
  br i1 %686, label %711, label %714

711:                                              ; preds = %710
  %712 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %682, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %713 = load i16*, i16** %712, align 8
  br label %716

714:                                              ; preds = %710
  %715 = bitcast %"class.std::__1::basic_string.102"* %682 to i16*
  br label %716

716:                                              ; preds = %714, %711
  %717 = phi i16* [ %713, %711 ], [ %715, %714 ]
  %718 = getelementptr inbounds i16, i16* %717, i64 %707
  store i16 59, i16* %718, align 2
  %719 = getelementptr inbounds i16, i16* %718, i64 1
  store i16 32, i16* %719, align 2
  %720 = add i64 %707, 2
  %721 = load i8, i8* %684, align 1
  %722 = icmp slt i8 %721, 0
  br i1 %722, label %723, label %725

723:                                              ; preds = %716
  %724 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %682, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %720, i64* %724, align 8
  br label %727

725:                                              ; preds = %716
  %726 = trunc i64 %720 to i8
  store i8 %726, i8* %684, align 1
  br label %727

727:                                              ; preds = %725, %723
  %728 = getelementptr inbounds i16, i16* %717, i64 %720
  store i16 0, i16* %728, align 2
  br label %732

729:                                              ; preds = %705
  %730 = add i64 %707, 2
  %731 = sub i64 %730, %706
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %682, i64 %706, i64 %731, i64 %707, i64 %707, i64 0, i64 2, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.13, i64 0, i64 0)) #12
  br label %732

732:                                              ; preds = %727, %729
  %733 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %22, align 8
  %734 = bitcast %"class.std::__1::basic_string.102"* %733 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %735

735:                                              ; preds = %732, %692
  %736 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %734, %732 ], [ %683, %692 ]
  %737 = phi %"class.std::__1::basic_string.102"* [ %733, %732 ], [ %682, %692 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %362) #12
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.102"* nonnull sret %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i64 19) #12
  %738 = load i8, i8* %364, align 1
  %739 = icmp slt i8 %738, 0
  %740 = load i16*, i16** %365, align 8
  %741 = load i64, i64* %366, align 8
  %742 = zext i8 %738 to i64
  %743 = select i1 %739, i16* %740, i16* %367
  %744 = select i1 %739, i64 %741, i64 %742
  %745 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %736, i64 0, i32 1, i32 1
  %746 = load i8, i8* %745, align 1
  %747 = icmp slt i8 %746, 0
  br i1 %747, label %748, label %755

748:                                              ; preds = %735
  %749 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %737, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %750 = load i64, i64* %749, align 8
  %751 = and i64 %750, 9223372036854775807
  %752 = add nsw i64 %751, -1
  %753 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %737, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %754 = load i64, i64* %753, align 8
  br label %757

755:                                              ; preds = %735
  %756 = zext i8 %746 to i64
  br label %757

757:                                              ; preds = %755, %748
  %758 = phi i64 [ %752, %748 ], [ 10, %755 ]
  %759 = phi i64 [ %754, %748 ], [ %756, %755 ]
  %760 = sub i64 %758, %759
  %761 = icmp ult i64 %760, %744
  br i1 %761, label %926, label %762

762:                                              ; preds = %757
  %763 = icmp eq i64 %744, 0
  br i1 %763, label %929, label %764

764:                                              ; preds = %762
  br i1 %747, label %765, label %768

765:                                              ; preds = %764
  %766 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %737, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %767 = load i16*, i16** %766, align 8
  br label %770

768:                                              ; preds = %764
  %769 = bitcast %"class.std::__1::basic_string.102"* %737 to i16*
  br label %770

770:                                              ; preds = %768, %765
  %771 = phi i16* [ %767, %765 ], [ %769, %768 ]
  %772 = getelementptr inbounds i16, i16* %771, i64 %759
  %773 = icmp ult i64 %744, 16
  br i1 %773, label %863, label %774

774:                                              ; preds = %770
  %775 = add i64 %744, %759
  %776 = getelementptr i16, i16* %771, i64 %775
  %777 = getelementptr i16, i16* %743, i64 %744
  %778 = icmp ult i16* %772, %777
  %779 = icmp ult i16* %743, %776
  %780 = and i1 %778, %779
  br i1 %780, label %863, label %781

781:                                              ; preds = %774
  %782 = and i64 %744, -16
  %783 = sub i64 %744, %782
  %784 = getelementptr i16, i16* %743, i64 %782
  %785 = getelementptr i16, i16* %772, i64 %782
  %786 = add i64 %782, -16
  %787 = lshr exact i64 %786, 4
  %788 = add nuw nsw i64 %787, 1
  %789 = and i64 %788, 3
  %790 = icmp ult i64 %786, 48
  br i1 %790, label %842, label %791

791:                                              ; preds = %781
  %792 = sub nsw i64 %788, %789
  br label %793

793:                                              ; preds = %793, %791
  %794 = phi i64 [ 0, %791 ], [ %839, %793 ]
  %795 = phi i64 [ %792, %791 ], [ %840, %793 ]
  %796 = getelementptr i16, i16* %743, i64 %794
  %797 = getelementptr i16, i16* %772, i64 %794
  %798 = bitcast i16* %796 to <8 x i16>*
  %799 = load <8 x i16>, <8 x i16>* %798, align 2, !alias.scope !22
  %800 = getelementptr i16, i16* %796, i64 8
  %801 = bitcast i16* %800 to <8 x i16>*
  %802 = load <8 x i16>, <8 x i16>* %801, align 2, !alias.scope !22
  %803 = bitcast i16* %797 to <8 x i16>*
  store <8 x i16> %799, <8 x i16>* %803, align 2, !alias.scope !25, !noalias !22
  %804 = getelementptr i16, i16* %797, i64 8
  %805 = bitcast i16* %804 to <8 x i16>*
  store <8 x i16> %802, <8 x i16>* %805, align 2, !alias.scope !25, !noalias !22
  %806 = or i64 %794, 16
  %807 = getelementptr i16, i16* %743, i64 %806
  %808 = getelementptr i16, i16* %772, i64 %806
  %809 = bitcast i16* %807 to <8 x i16>*
  %810 = load <8 x i16>, <8 x i16>* %809, align 2, !alias.scope !22
  %811 = getelementptr i16, i16* %807, i64 8
  %812 = bitcast i16* %811 to <8 x i16>*
  %813 = load <8 x i16>, <8 x i16>* %812, align 2, !alias.scope !22
  %814 = bitcast i16* %808 to <8 x i16>*
  store <8 x i16> %810, <8 x i16>* %814, align 2, !alias.scope !25, !noalias !22
  %815 = getelementptr i16, i16* %808, i64 8
  %816 = bitcast i16* %815 to <8 x i16>*
  store <8 x i16> %813, <8 x i16>* %816, align 2, !alias.scope !25, !noalias !22
  %817 = or i64 %794, 32
  %818 = getelementptr i16, i16* %743, i64 %817
  %819 = getelementptr i16, i16* %772, i64 %817
  %820 = bitcast i16* %818 to <8 x i16>*
  %821 = load <8 x i16>, <8 x i16>* %820, align 2, !alias.scope !22
  %822 = getelementptr i16, i16* %818, i64 8
  %823 = bitcast i16* %822 to <8 x i16>*
  %824 = load <8 x i16>, <8 x i16>* %823, align 2, !alias.scope !22
  %825 = bitcast i16* %819 to <8 x i16>*
  store <8 x i16> %821, <8 x i16>* %825, align 2, !alias.scope !25, !noalias !22
  %826 = getelementptr i16, i16* %819, i64 8
  %827 = bitcast i16* %826 to <8 x i16>*
  store <8 x i16> %824, <8 x i16>* %827, align 2, !alias.scope !25, !noalias !22
  %828 = or i64 %794, 48
  %829 = getelementptr i16, i16* %743, i64 %828
  %830 = getelementptr i16, i16* %772, i64 %828
  %831 = bitcast i16* %829 to <8 x i16>*
  %832 = load <8 x i16>, <8 x i16>* %831, align 2, !alias.scope !22
  %833 = getelementptr i16, i16* %829, i64 8
  %834 = bitcast i16* %833 to <8 x i16>*
  %835 = load <8 x i16>, <8 x i16>* %834, align 2, !alias.scope !22
  %836 = bitcast i16* %830 to <8 x i16>*
  store <8 x i16> %832, <8 x i16>* %836, align 2, !alias.scope !25, !noalias !22
  %837 = getelementptr i16, i16* %830, i64 8
  %838 = bitcast i16* %837 to <8 x i16>*
  store <8 x i16> %835, <8 x i16>* %838, align 2, !alias.scope !25, !noalias !22
  %839 = add i64 %794, 64
  %840 = add i64 %795, -4
  %841 = icmp eq i64 %840, 0
  br i1 %841, label %842, label %793, !llvm.loop !27

842:                                              ; preds = %793, %781
  %843 = phi i64 [ 0, %781 ], [ %839, %793 ]
  %844 = icmp eq i64 %789, 0
  br i1 %844, label %861, label %845

845:                                              ; preds = %842, %845
  %846 = phi i64 [ %858, %845 ], [ %843, %842 ]
  %847 = phi i64 [ %859, %845 ], [ %789, %842 ]
  %848 = getelementptr i16, i16* %743, i64 %846
  %849 = getelementptr i16, i16* %772, i64 %846
  %850 = bitcast i16* %848 to <8 x i16>*
  %851 = load <8 x i16>, <8 x i16>* %850, align 2, !alias.scope !22
  %852 = getelementptr i16, i16* %848, i64 8
  %853 = bitcast i16* %852 to <8 x i16>*
  %854 = load <8 x i16>, <8 x i16>* %853, align 2, !alias.scope !22
  %855 = bitcast i16* %849 to <8 x i16>*
  store <8 x i16> %851, <8 x i16>* %855, align 2, !alias.scope !25, !noalias !22
  %856 = getelementptr i16, i16* %849, i64 8
  %857 = bitcast i16* %856 to <8 x i16>*
  store <8 x i16> %854, <8 x i16>* %857, align 2, !alias.scope !25, !noalias !22
  %858 = add i64 %846, 16
  %859 = add i64 %847, -1
  %860 = icmp eq i64 %859, 0
  br i1 %860, label %861, label %845, !llvm.loop !28

861:                                              ; preds = %845, %842
  %862 = icmp eq i64 %744, %782
  br i1 %862, label %916, label %863

863:                                              ; preds = %861, %774, %770
  %864 = phi i64 [ %744, %774 ], [ %744, %770 ], [ %783, %861 ]
  %865 = phi i16* [ %743, %774 ], [ %743, %770 ], [ %784, %861 ]
  %866 = phi i16* [ %772, %774 ], [ %772, %770 ], [ %785, %861 ]
  %867 = add i64 %864, -1
  %868 = and i64 %864, 7
  %869 = icmp eq i64 %868, 0
  br i1 %869, label %881, label %870

870:                                              ; preds = %863, %870
  %871 = phi i64 [ %876, %870 ], [ %864, %863 ]
  %872 = phi i16* [ %878, %870 ], [ %865, %863 ]
  %873 = phi i16* [ %877, %870 ], [ %866, %863 ]
  %874 = phi i64 [ %879, %870 ], [ %868, %863 ]
  %875 = load i16, i16* %872, align 2
  store i16 %875, i16* %873, align 2
  %876 = add i64 %871, -1
  %877 = getelementptr inbounds i16, i16* %873, i64 1
  %878 = getelementptr inbounds i16, i16* %872, i64 1
  %879 = add i64 %874, -1
  %880 = icmp eq i64 %879, 0
  br i1 %880, label %881, label %870, !llvm.loop !29

881:                                              ; preds = %870, %863
  %882 = phi i64 [ %864, %863 ], [ %876, %870 ]
  %883 = phi i16* [ %865, %863 ], [ %878, %870 ]
  %884 = phi i16* [ %866, %863 ], [ %877, %870 ]
  %885 = icmp ult i64 %867, 7
  br i1 %885, label %916, label %886

886:                                              ; preds = %881, %886
  %887 = phi i64 [ %912, %886 ], [ %882, %881 ]
  %888 = phi i16* [ %914, %886 ], [ %883, %881 ]
  %889 = phi i16* [ %913, %886 ], [ %884, %881 ]
  %890 = load i16, i16* %888, align 2
  store i16 %890, i16* %889, align 2
  %891 = getelementptr inbounds i16, i16* %889, i64 1
  %892 = getelementptr inbounds i16, i16* %888, i64 1
  %893 = load i16, i16* %892, align 2
  store i16 %893, i16* %891, align 2
  %894 = getelementptr inbounds i16, i16* %889, i64 2
  %895 = getelementptr inbounds i16, i16* %888, i64 2
  %896 = load i16, i16* %895, align 2
  store i16 %896, i16* %894, align 2
  %897 = getelementptr inbounds i16, i16* %889, i64 3
  %898 = getelementptr inbounds i16, i16* %888, i64 3
  %899 = load i16, i16* %898, align 2
  store i16 %899, i16* %897, align 2
  %900 = getelementptr inbounds i16, i16* %889, i64 4
  %901 = getelementptr inbounds i16, i16* %888, i64 4
  %902 = load i16, i16* %901, align 2
  store i16 %902, i16* %900, align 2
  %903 = getelementptr inbounds i16, i16* %889, i64 5
  %904 = getelementptr inbounds i16, i16* %888, i64 5
  %905 = load i16, i16* %904, align 2
  store i16 %905, i16* %903, align 2
  %906 = getelementptr inbounds i16, i16* %889, i64 6
  %907 = getelementptr inbounds i16, i16* %888, i64 6
  %908 = load i16, i16* %907, align 2
  store i16 %908, i16* %906, align 2
  %909 = getelementptr inbounds i16, i16* %889, i64 7
  %910 = getelementptr inbounds i16, i16* %888, i64 7
  %911 = load i16, i16* %910, align 2
  store i16 %911, i16* %909, align 2
  %912 = add i64 %887, -8
  %913 = getelementptr inbounds i16, i16* %889, i64 8
  %914 = getelementptr inbounds i16, i16* %888, i64 8
  %915 = icmp eq i64 %912, 0
  br i1 %915, label %916, label %886, !llvm.loop !30

916:                                              ; preds = %881, %886, %861
  %917 = add i64 %759, %744
  %918 = load i8, i8* %745, align 1
  %919 = icmp slt i8 %918, 0
  br i1 %919, label %920, label %922

920:                                              ; preds = %916
  %921 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %737, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %917, i64* %921, align 8
  br label %924

922:                                              ; preds = %916
  %923 = trunc i64 %917 to i8
  store i8 %923, i8* %745, align 1
  br label %924

924:                                              ; preds = %922, %920
  %925 = getelementptr inbounds i16, i16* %771, i64 %917
  store i16 0, i16* %925, align 2
  br label %929

926:                                              ; preds = %757
  %927 = add i64 %759, %744
  %928 = sub i64 %927, %758
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %737, i64 %758, i64 %928, i64 %759, i64 %759, i64 0, i64 %744, i16* %743) #12
  br label %929

929:                                              ; preds = %762, %924, %926
  %930 = load i8, i8* %364, align 1
  %931 = icmp slt i8 %930, 0
  br i1 %931, label %932, label %934

932:                                              ; preds = %929
  %933 = load i8*, i8** %368, align 8
  call void @_ZdlPv(i8* %933) #13
  br label %934

934:                                              ; preds = %929, %932
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %362) #12
  br label %1216

935:                                              ; preds = %678
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %369) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %369, i8 -86, i64 72, i1 false)
  call void @_ZN10extensions3api6events4RuleC1Ev(%"struct.extensions::api::events::Rule"* nonnull %20) #12
  %936 = load %"class.base::Value"*, %"class.base::Value"** %370, align 8
  %937 = call zeroext i1 @_ZN10extensions3api6events4Rule8PopulateERKN4base5ValueEPS2_(%"class.base::Value"* dereferenceable(32) %936, %"struct.extensions::api::events::Rule"* nonnull %20) #12
  br i1 %937, label %1192, label %938

938:                                              ; preds = %935
  %939 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %22, align 8
  %940 = bitcast %"class.std::__1::basic_string.102"* %939 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %941 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %940, i64 0, i32 1, i32 1
  %942 = load i8, i8* %941, align 1
  %943 = icmp slt i8 %942, 0
  br i1 %943, label %944, label %947

944:                                              ; preds = %938
  %945 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %939, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %946 = load i64, i64* %945, align 8
  br label %949

947:                                              ; preds = %938
  %948 = zext i8 %942 to i64
  br label %949

949:                                              ; preds = %947, %944
  %950 = phi i64 [ %946, %944 ], [ %948, %947 ]
  %951 = icmp eq i64 %950, 0
  br i1 %951, label %992, label %952

952:                                              ; preds = %949
  br i1 %943, label %953, label %960

953:                                              ; preds = %952
  %954 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %939, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %955 = load i64, i64* %954, align 8
  %956 = and i64 %955, 9223372036854775807
  %957 = add nsw i64 %956, -1
  %958 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %939, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %959 = load i64, i64* %958, align 8
  br label %962

960:                                              ; preds = %952
  %961 = zext i8 %942 to i64
  br label %962

962:                                              ; preds = %960, %953
  %963 = phi i64 [ %957, %953 ], [ 10, %960 ]
  %964 = phi i64 [ %959, %953 ], [ %961, %960 ]
  %965 = sub i64 %963, %964
  %966 = icmp ult i64 %965, 2
  br i1 %966, label %986, label %967

967:                                              ; preds = %962
  br i1 %943, label %968, label %971

968:                                              ; preds = %967
  %969 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %939, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %970 = load i16*, i16** %969, align 8
  br label %973

971:                                              ; preds = %967
  %972 = bitcast %"class.std::__1::basic_string.102"* %939 to i16*
  br label %973

973:                                              ; preds = %971, %968
  %974 = phi i16* [ %970, %968 ], [ %972, %971 ]
  %975 = getelementptr inbounds i16, i16* %974, i64 %964
  store i16 59, i16* %975, align 2
  %976 = getelementptr inbounds i16, i16* %975, i64 1
  store i16 32, i16* %976, align 2
  %977 = add i64 %964, 2
  %978 = load i8, i8* %941, align 1
  %979 = icmp slt i8 %978, 0
  br i1 %979, label %980, label %982

980:                                              ; preds = %973
  %981 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %939, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %977, i64* %981, align 8
  br label %984

982:                                              ; preds = %973
  %983 = trunc i64 %977 to i8
  store i8 %983, i8* %941, align 1
  br label %984

984:                                              ; preds = %982, %980
  %985 = getelementptr inbounds i16, i16* %974, i64 %977
  store i16 0, i16* %985, align 2
  br label %989

986:                                              ; preds = %962
  %987 = add i64 %964, 2
  %988 = sub i64 %987, %963
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %939, i64 %963, i64 %988, i64 %964, i64 %964, i64 0, i64 2, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.13, i64 0, i64 0)) #12
  br label %989

989:                                              ; preds = %984, %986
  %990 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %22, align 8
  %991 = bitcast %"class.std::__1::basic_string.102"* %990 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %992

992:                                              ; preds = %989, %949
  %993 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %991, %989 ], [ %940, %949 ]
  %994 = phi %"class.std::__1::basic_string.102"* [ %990, %989 ], [ %939, %949 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %371) #12
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.102"* nonnull sret %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i64 23) #12
  %995 = load i8, i8* %373, align 1
  %996 = icmp slt i8 %995, 0
  %997 = load i16*, i16** %374, align 8
  %998 = load i64, i64* %375, align 8
  %999 = zext i8 %995 to i64
  %1000 = select i1 %996, i16* %997, i16* %376
  %1001 = select i1 %996, i64 %998, i64 %999
  %1002 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %993, i64 0, i32 1, i32 1
  %1003 = load i8, i8* %1002, align 1
  %1004 = icmp slt i8 %1003, 0
  br i1 %1004, label %1005, label %1012

1005:                                             ; preds = %992
  %1006 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %994, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1007 = load i64, i64* %1006, align 8
  %1008 = and i64 %1007, 9223372036854775807
  %1009 = add nsw i64 %1008, -1
  %1010 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %994, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1011 = load i64, i64* %1010, align 8
  br label %1014

1012:                                             ; preds = %992
  %1013 = zext i8 %1003 to i64
  br label %1014

1014:                                             ; preds = %1012, %1005
  %1015 = phi i64 [ %1009, %1005 ], [ 10, %1012 ]
  %1016 = phi i64 [ %1011, %1005 ], [ %1013, %1012 ]
  %1017 = sub i64 %1015, %1016
  %1018 = icmp ult i64 %1017, %1001
  br i1 %1018, label %1183, label %1019

1019:                                             ; preds = %1014
  %1020 = icmp eq i64 %1001, 0
  br i1 %1020, label %1186, label %1021

1021:                                             ; preds = %1019
  br i1 %1004, label %1022, label %1025

1022:                                             ; preds = %1021
  %1023 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %994, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1024 = load i16*, i16** %1023, align 8
  br label %1027

1025:                                             ; preds = %1021
  %1026 = bitcast %"class.std::__1::basic_string.102"* %994 to i16*
  br label %1027

1027:                                             ; preds = %1025, %1022
  %1028 = phi i16* [ %1024, %1022 ], [ %1026, %1025 ]
  %1029 = getelementptr inbounds i16, i16* %1028, i64 %1016
  %1030 = icmp ult i64 %1001, 16
  br i1 %1030, label %1120, label %1031

1031:                                             ; preds = %1027
  %1032 = add i64 %1001, %1016
  %1033 = getelementptr i16, i16* %1028, i64 %1032
  %1034 = getelementptr i16, i16* %1000, i64 %1001
  %1035 = icmp ult i16* %1029, %1034
  %1036 = icmp ult i16* %1000, %1033
  %1037 = and i1 %1035, %1036
  br i1 %1037, label %1120, label %1038

1038:                                             ; preds = %1031
  %1039 = and i64 %1001, -16
  %1040 = sub i64 %1001, %1039
  %1041 = getelementptr i16, i16* %1000, i64 %1039
  %1042 = getelementptr i16, i16* %1029, i64 %1039
  %1043 = add i64 %1039, -16
  %1044 = lshr exact i64 %1043, 4
  %1045 = add nuw nsw i64 %1044, 1
  %1046 = and i64 %1045, 3
  %1047 = icmp ult i64 %1043, 48
  br i1 %1047, label %1099, label %1048

1048:                                             ; preds = %1038
  %1049 = sub nsw i64 %1045, %1046
  br label %1050

1050:                                             ; preds = %1050, %1048
  %1051 = phi i64 [ 0, %1048 ], [ %1096, %1050 ]
  %1052 = phi i64 [ %1049, %1048 ], [ %1097, %1050 ]
  %1053 = getelementptr i16, i16* %1000, i64 %1051
  %1054 = getelementptr i16, i16* %1029, i64 %1051
  %1055 = bitcast i16* %1053 to <8 x i16>*
  %1056 = load <8 x i16>, <8 x i16>* %1055, align 2, !alias.scope !31
  %1057 = getelementptr i16, i16* %1053, i64 8
  %1058 = bitcast i16* %1057 to <8 x i16>*
  %1059 = load <8 x i16>, <8 x i16>* %1058, align 2, !alias.scope !31
  %1060 = bitcast i16* %1054 to <8 x i16>*
  store <8 x i16> %1056, <8 x i16>* %1060, align 2, !alias.scope !34, !noalias !31
  %1061 = getelementptr i16, i16* %1054, i64 8
  %1062 = bitcast i16* %1061 to <8 x i16>*
  store <8 x i16> %1059, <8 x i16>* %1062, align 2, !alias.scope !34, !noalias !31
  %1063 = or i64 %1051, 16
  %1064 = getelementptr i16, i16* %1000, i64 %1063
  %1065 = getelementptr i16, i16* %1029, i64 %1063
  %1066 = bitcast i16* %1064 to <8 x i16>*
  %1067 = load <8 x i16>, <8 x i16>* %1066, align 2, !alias.scope !31
  %1068 = getelementptr i16, i16* %1064, i64 8
  %1069 = bitcast i16* %1068 to <8 x i16>*
  %1070 = load <8 x i16>, <8 x i16>* %1069, align 2, !alias.scope !31
  %1071 = bitcast i16* %1065 to <8 x i16>*
  store <8 x i16> %1067, <8 x i16>* %1071, align 2, !alias.scope !34, !noalias !31
  %1072 = getelementptr i16, i16* %1065, i64 8
  %1073 = bitcast i16* %1072 to <8 x i16>*
  store <8 x i16> %1070, <8 x i16>* %1073, align 2, !alias.scope !34, !noalias !31
  %1074 = or i64 %1051, 32
  %1075 = getelementptr i16, i16* %1000, i64 %1074
  %1076 = getelementptr i16, i16* %1029, i64 %1074
  %1077 = bitcast i16* %1075 to <8 x i16>*
  %1078 = load <8 x i16>, <8 x i16>* %1077, align 2, !alias.scope !31
  %1079 = getelementptr i16, i16* %1075, i64 8
  %1080 = bitcast i16* %1079 to <8 x i16>*
  %1081 = load <8 x i16>, <8 x i16>* %1080, align 2, !alias.scope !31
  %1082 = bitcast i16* %1076 to <8 x i16>*
  store <8 x i16> %1078, <8 x i16>* %1082, align 2, !alias.scope !34, !noalias !31
  %1083 = getelementptr i16, i16* %1076, i64 8
  %1084 = bitcast i16* %1083 to <8 x i16>*
  store <8 x i16> %1081, <8 x i16>* %1084, align 2, !alias.scope !34, !noalias !31
  %1085 = or i64 %1051, 48
  %1086 = getelementptr i16, i16* %1000, i64 %1085
  %1087 = getelementptr i16, i16* %1029, i64 %1085
  %1088 = bitcast i16* %1086 to <8 x i16>*
  %1089 = load <8 x i16>, <8 x i16>* %1088, align 2, !alias.scope !31
  %1090 = getelementptr i16, i16* %1086, i64 8
  %1091 = bitcast i16* %1090 to <8 x i16>*
  %1092 = load <8 x i16>, <8 x i16>* %1091, align 2, !alias.scope !31
  %1093 = bitcast i16* %1087 to <8 x i16>*
  store <8 x i16> %1089, <8 x i16>* %1093, align 2, !alias.scope !34, !noalias !31
  %1094 = getelementptr i16, i16* %1087, i64 8
  %1095 = bitcast i16* %1094 to <8 x i16>*
  store <8 x i16> %1092, <8 x i16>* %1095, align 2, !alias.scope !34, !noalias !31
  %1096 = add i64 %1051, 64
  %1097 = add i64 %1052, -4
  %1098 = icmp eq i64 %1097, 0
  br i1 %1098, label %1099, label %1050, !llvm.loop !36

1099:                                             ; preds = %1050, %1038
  %1100 = phi i64 [ 0, %1038 ], [ %1096, %1050 ]
  %1101 = icmp eq i64 %1046, 0
  br i1 %1101, label %1118, label %1102

1102:                                             ; preds = %1099, %1102
  %1103 = phi i64 [ %1115, %1102 ], [ %1100, %1099 ]
  %1104 = phi i64 [ %1116, %1102 ], [ %1046, %1099 ]
  %1105 = getelementptr i16, i16* %1000, i64 %1103
  %1106 = getelementptr i16, i16* %1029, i64 %1103
  %1107 = bitcast i16* %1105 to <8 x i16>*
  %1108 = load <8 x i16>, <8 x i16>* %1107, align 2, !alias.scope !31
  %1109 = getelementptr i16, i16* %1105, i64 8
  %1110 = bitcast i16* %1109 to <8 x i16>*
  %1111 = load <8 x i16>, <8 x i16>* %1110, align 2, !alias.scope !31
  %1112 = bitcast i16* %1106 to <8 x i16>*
  store <8 x i16> %1108, <8 x i16>* %1112, align 2, !alias.scope !34, !noalias !31
  %1113 = getelementptr i16, i16* %1106, i64 8
  %1114 = bitcast i16* %1113 to <8 x i16>*
  store <8 x i16> %1111, <8 x i16>* %1114, align 2, !alias.scope !34, !noalias !31
  %1115 = add i64 %1103, 16
  %1116 = add i64 %1104, -1
  %1117 = icmp eq i64 %1116, 0
  br i1 %1117, label %1118, label %1102, !llvm.loop !37

1118:                                             ; preds = %1102, %1099
  %1119 = icmp eq i64 %1001, %1039
  br i1 %1119, label %1173, label %1120

1120:                                             ; preds = %1118, %1031, %1027
  %1121 = phi i64 [ %1001, %1031 ], [ %1001, %1027 ], [ %1040, %1118 ]
  %1122 = phi i16* [ %1000, %1031 ], [ %1000, %1027 ], [ %1041, %1118 ]
  %1123 = phi i16* [ %1029, %1031 ], [ %1029, %1027 ], [ %1042, %1118 ]
  %1124 = add i64 %1121, -1
  %1125 = and i64 %1121, 7
  %1126 = icmp eq i64 %1125, 0
  br i1 %1126, label %1138, label %1127

1127:                                             ; preds = %1120, %1127
  %1128 = phi i64 [ %1133, %1127 ], [ %1121, %1120 ]
  %1129 = phi i16* [ %1135, %1127 ], [ %1122, %1120 ]
  %1130 = phi i16* [ %1134, %1127 ], [ %1123, %1120 ]
  %1131 = phi i64 [ %1136, %1127 ], [ %1125, %1120 ]
  %1132 = load i16, i16* %1129, align 2
  store i16 %1132, i16* %1130, align 2
  %1133 = add i64 %1128, -1
  %1134 = getelementptr inbounds i16, i16* %1130, i64 1
  %1135 = getelementptr inbounds i16, i16* %1129, i64 1
  %1136 = add i64 %1131, -1
  %1137 = icmp eq i64 %1136, 0
  br i1 %1137, label %1138, label %1127, !llvm.loop !38

1138:                                             ; preds = %1127, %1120
  %1139 = phi i64 [ %1121, %1120 ], [ %1133, %1127 ]
  %1140 = phi i16* [ %1122, %1120 ], [ %1135, %1127 ]
  %1141 = phi i16* [ %1123, %1120 ], [ %1134, %1127 ]
  %1142 = icmp ult i64 %1124, 7
  br i1 %1142, label %1173, label %1143

1143:                                             ; preds = %1138, %1143
  %1144 = phi i64 [ %1169, %1143 ], [ %1139, %1138 ]
  %1145 = phi i16* [ %1171, %1143 ], [ %1140, %1138 ]
  %1146 = phi i16* [ %1170, %1143 ], [ %1141, %1138 ]
  %1147 = load i16, i16* %1145, align 2
  store i16 %1147, i16* %1146, align 2
  %1148 = getelementptr inbounds i16, i16* %1146, i64 1
  %1149 = getelementptr inbounds i16, i16* %1145, i64 1
  %1150 = load i16, i16* %1149, align 2
  store i16 %1150, i16* %1148, align 2
  %1151 = getelementptr inbounds i16, i16* %1146, i64 2
  %1152 = getelementptr inbounds i16, i16* %1145, i64 2
  %1153 = load i16, i16* %1152, align 2
  store i16 %1153, i16* %1151, align 2
  %1154 = getelementptr inbounds i16, i16* %1146, i64 3
  %1155 = getelementptr inbounds i16, i16* %1145, i64 3
  %1156 = load i16, i16* %1155, align 2
  store i16 %1156, i16* %1154, align 2
  %1157 = getelementptr inbounds i16, i16* %1146, i64 4
  %1158 = getelementptr inbounds i16, i16* %1145, i64 4
  %1159 = load i16, i16* %1158, align 2
  store i16 %1159, i16* %1157, align 2
  %1160 = getelementptr inbounds i16, i16* %1146, i64 5
  %1161 = getelementptr inbounds i16, i16* %1145, i64 5
  %1162 = load i16, i16* %1161, align 2
  store i16 %1162, i16* %1160, align 2
  %1163 = getelementptr inbounds i16, i16* %1146, i64 6
  %1164 = getelementptr inbounds i16, i16* %1145, i64 6
  %1165 = load i16, i16* %1164, align 2
  store i16 %1165, i16* %1163, align 2
  %1166 = getelementptr inbounds i16, i16* %1146, i64 7
  %1167 = getelementptr inbounds i16, i16* %1145, i64 7
  %1168 = load i16, i16* %1167, align 2
  store i16 %1168, i16* %1166, align 2
  %1169 = add i64 %1144, -8
  %1170 = getelementptr inbounds i16, i16* %1146, i64 8
  %1171 = getelementptr inbounds i16, i16* %1145, i64 8
  %1172 = icmp eq i64 %1169, 0
  br i1 %1172, label %1173, label %1143, !llvm.loop !39

1173:                                             ; preds = %1138, %1143, %1118
  %1174 = add i64 %1016, %1001
  %1175 = load i8, i8* %1002, align 1
  %1176 = icmp slt i8 %1175, 0
  br i1 %1176, label %1177, label %1179

1177:                                             ; preds = %1173
  %1178 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %994, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1174, i64* %1178, align 8
  br label %1181

1179:                                             ; preds = %1173
  %1180 = trunc i64 %1174 to i8
  store i8 %1180, i8* %1002, align 1
  br label %1181

1181:                                             ; preds = %1179, %1177
  %1182 = getelementptr inbounds i16, i16* %1028, i64 %1174
  store i16 0, i16* %1182, align 2
  br label %1186

1183:                                             ; preds = %1014
  %1184 = add i64 %1016, %1001
  %1185 = sub i64 %1184, %1015
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %994, i64 %1015, i64 %1185, i64 %1016, i64 %1016, i64 0, i64 %1001, i16* %1000) #12
  br label %1186

1186:                                             ; preds = %1019, %1181, %1183
  %1187 = load i8, i8* %373, align 1
  %1188 = icmp slt i8 %1187, 0
  br i1 %1188, label %1189, label %1191

1189:                                             ; preds = %1186
  %1190 = load i8*, i8** %377, align 8
  call void @_ZdlPv(i8* %1190) #13
  br label %1191

1191:                                             ; preds = %1186, %1189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #12
  br label %1214

1192:                                             ; preds = %935
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #12
  store %"class.extensions::(anonymous namespace)::ErrorBuilder"* %14, %"class.extensions::(anonymous namespace)::ErrorBuilder"** %379, align 8
  %1193 = call fastcc zeroext i1 @"_ZZN10extensions12_GLOBAL__N_119ConvertManifestRuleERKNS_3api6events4RuleEPNS0_12ErrorBuilderEENK3$_0clERKNSt3__16vectorINS9_10unique_ptrIN4base5ValueENS9_14default_deleteISD_EEEENS9_9allocatorISG_EEEE"(%class.anon.160* nonnull %5, %"class.std::__1::vector.124"* dereferenceable(24) %380) #12
  br i1 %1193, label %1195, label %1194

1194:                                             ; preds = %1192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #12
  br label %1214

1195:                                             ; preds = %1192
  %1196 = call fastcc zeroext i1 @"_ZZN10extensions12_GLOBAL__N_119ConvertManifestRuleERKNS_3api6events4RuleEPNS0_12ErrorBuilderEENK3$_0clERKNSt3__16vectorINS9_10unique_ptrIN4base5ValueENS9_14default_deleteISD_EEEENS9_9allocatorISG_EEEE"(%class.anon.160* nonnull %5, %"class.std::__1::vector.124"* dereferenceable(24) %381) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #12
  br i1 %1196, label %1197, label %1214

1197:                                             ; preds = %1195
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383) #12
  store %"class.std::__1::basic_string"* %19, %"class.std::__1::basic_string"** %384, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %385) #12
  %1198 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSQ_IJEEEEEENS_4pairINS_15__tree_iteratorISF_PNS_11__tree_nodeISF_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %382, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.164"* nonnull dereferenceable(1) %4) #12
  %1199 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %1198, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %385) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383) #12
  %1200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1199, i64 8
  %1201 = bitcast %"class.std::__1::__tree_end_node"* %1200 to %"struct.extensions::api::events::Rule"**
  %1202 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %1201, align 8
  %1203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1199, i64 9
  %1204 = bitcast %"class.std::__1::__tree_end_node"* %1203 to %"struct.extensions::api::events::Rule"**
  %1205 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %1204, align 8
  %1206 = icmp ult %"struct.extensions::api::events::Rule"* %1202, %1205
  br i1 %1206, label %1207, label %1211

1207:                                             ; preds = %1197
  call void @_ZN10extensions3api6events4RuleC1EOS2_(%"struct.extensions::api::events::Rule"* %1202, %"struct.extensions::api::events::Rule"* nonnull dereferenceable(72) %20) #12
  %1208 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %1202, i64 1
  %1209 = ptrtoint %"struct.extensions::api::events::Rule"* %1208 to i64
  %1210 = bitcast %"class.std::__1::__tree_end_node"* %1200 to i64*
  store i64 %1209, i64* %1210, align 8
  br label %1214

1211:                                             ; preds = %1197
  %1212 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1199, i64 7
  %1213 = bitcast %"class.std::__1::__tree_end_node"* %1212 to %"class.std::__1::vector.142"*
  call void @_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.142"* %1213, %"struct.extensions::api::events::Rule"* nonnull dereferenceable(72) %20) #12
  br label %1214

1214:                                             ; preds = %1211, %1207, %1195, %1194, %1191
  %1215 = phi i32 [ 1, %1191 ], [ 1, %1194 ], [ 1, %1195 ], [ 0, %1207 ], [ 0, %1211 ]
  call void @_ZN10extensions3api6events4RuleD1Ev(%"struct.extensions::api::events::Rule"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %369) #12
  br label %1216

1216:                                             ; preds = %1214, %934
  %1217 = phi i32 [ %1215, %1214 ], [ 1, %934 ]
  %1218 = load i8, i8* %387, align 1
  %1219 = icmp slt i8 %1218, 0
  br i1 %1219, label %1220, label %1222

1220:                                             ; preds = %1216
  %1221 = load i8*, i8** %361, align 8
  call void @_ZdlPv(i8* %1221) #13
  br label %1222

1222:                                             ; preds = %1220, %1216
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %359) #12
  %1223 = icmp eq i32 %1217, 0
  br i1 %1223, label %1224, label %1229

1224:                                             ; preds = %1222
  %1225 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %16)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %16, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %17) #12
  %1226 = load %"class.base::Value"*, %"class.base::Value"** %321, align 8
  %1227 = load %"class.base::Value"*, %"class.base::Value"** %338, align 8
  %1228 = icmp eq %"class.base::Value"* %1226, %1227
  br i1 %1228, label %1230, label %388

1229:                                             ; preds = %1222, %677
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %337) #12
  br label %1232

1230:                                             ; preds = %1224, %350
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %337) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %320) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  %1231 = bitcast i8* %23 to %"class.extensions::DeclarativeManifestData"*
  br label %1239

1232:                                             ; preds = %314, %311, %1229
  %1233 = phi i8* [ %320, %1229 ], [ %40, %311 ], [ %40, %314 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1233) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  %1234 = bitcast i8* %23 to %"class.extensions::DeclarativeManifestData"*
  %1235 = bitcast i8* %23 to void (%"class.extensions::DeclarativeManifestData"*)***
  %1236 = load void (%"class.extensions::DeclarativeManifestData"*)**, void (%"class.extensions::DeclarativeManifestData"*)*** %1235, align 8
  %1237 = getelementptr inbounds void (%"class.extensions::DeclarativeManifestData"*)*, void (%"class.extensions::DeclarativeManifestData"*)** %1236, i64 1
  %1238 = load void (%"class.extensions::DeclarativeManifestData"*)*, void (%"class.extensions::DeclarativeManifestData"*)** %1237, align 8
  call void %1238(%"class.extensions::DeclarativeManifestData"* nonnull %1234) #12
  br label %1239

1239:                                             ; preds = %1230, %1232
  %1240 = phi %"class.extensions::DeclarativeManifestData"* [ %1231, %1230 ], [ null, %1232 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  ret %"class.extensions::DeclarativeManifestData"* %1240
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"*, %"class.base::ListValue"**) local_unnamed_addr #2

declare i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext) local_unnamed_addr #2

declare %"class.std::__1::vector.73"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

declare zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN10extensions3api6events4RuleC1Ev(%"struct.extensions::api::events::Rule"*) unnamed_addr #2

declare zeroext i1 @_ZN10extensions3api6events4Rule8PopulateERKN4base5ValueEPS2_(%"class.base::Value"* dereferenceable(32), %"struct.extensions::api::events::Rule"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions3api6events4RuleD1Ev(%"struct.extensions::api::events::Rule"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23DeclarativeManifestData13RulesForEventERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::vector.142"* noalias sret, %"class.extensions::DeclarativeManifestData"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.164", align 1
  %6 = getelementptr inbounds %"class.extensions::DeclarativeManifestData", %"class.extensions::DeclarativeManifestData"* %1, i64 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::tuple.164", %"class.std::__1::tuple.164"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  %10 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSQ_IJEEEEEENS_4pairINS_15__tree_iteratorISF_PNS_11__tree_nodeISF_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.164"* nonnull dereferenceable(1) %5) #12
  %11 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %10, 0
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %13 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::vector.142"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #12
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 8
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"struct.extensions::api::events::Rule"**
  %18 = bitcast %"class.std::__1::__tree_end_node"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::__tree_end_node"* %12 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 72
  call void @_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector.142"* %0, i64 %23)
  %24 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"struct.extensions::api::events::Rule"**
  %25 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %24, align 8
  %26 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %17, align 8
  %27 = icmp eq %"struct.extensions::api::events::Rule"* %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %3
  %29 = bitcast %"struct.extensions::api::events::Rule"** %13 to i64*
  br label %31

30:                                               ; preds = %51, %3
  ret void

31:                                               ; preds = %28, %51
  %32 = phi %"struct.extensions::api::events::Rule"* [ %25, %28 ], [ %52, %51 ]
  %33 = call %"class.base::DictionaryValue"* @_ZNK10extensions3api6events4Rule7ToValueEv(%"struct.extensions::api::events::Rule"* %32) #12
  %34 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %33, i64 0, i32 0
  %35 = call %"struct.extensions::api::events::Rule"* @_ZN10extensions3api6events4Rule9FromValueERKN4base5ValueE(%"class.base::Value"* dereferenceable(32) %34) #12
  %36 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %13, align 8
  %37 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %14, align 8
  %38 = icmp ult %"struct.extensions::api::events::Rule"* %36, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %31
  call void @_ZN10extensions3api6events4RuleC1EOS2_(%"struct.extensions::api::events::Rule"* %36, %"struct.extensions::api::events::Rule"* dereferenceable(72) %35) #12
  %40 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %36, i64 1
  %41 = ptrtoint %"struct.extensions::api::events::Rule"* %40 to i64
  store i64 %41, i64* %29, align 8
  br label %43

42:                                               ; preds = %31
  call void @_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.142"* %0, %"struct.extensions::api::events::Rule"* dereferenceable(72) %35) #12
  br label %43

43:                                               ; preds = %39, %42
  %44 = icmp eq %"struct.extensions::api::events::Rule"* %35, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  call void @_ZN10extensions3api6events4RuleD1Ev(%"struct.extensions::api::events::Rule"* nonnull %35) #12
  %46 = bitcast %"struct.extensions::api::events::Rule"* %35 to i8*
  call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %43, %45
  %48 = icmp eq %"class.base::DictionaryValue"* %33, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %34) #12
  %50 = bitcast %"class.base::DictionaryValue"* %33 to i8*
  call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %47, %49
  %52 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %32, i64 1
  %53 = icmp eq %"struct.extensions::api::events::Rule"* %52, %26
  br i1 %53, label %30, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector.142"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.extensions::api::events::Rule"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.142"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.extensions::api::events::Rule"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.extensions::api::events::Rule"** %13 to i64*
  %15 = icmp ugt i64 %1, 256204778801521550
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 72
  %21 = mul i64 %1, 72
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast i8* %22 to %"struct.extensions::api::events::Rule"*
  %24 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %23, i64 %20
  %25 = ptrtoint %"struct.extensions::api::events::Rule"* %24 to i64
  %26 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %23, i64 %1
  %27 = ptrtoint %"struct.extensions::api::events::Rule"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.extensions::api::events::Rule"*
  %29 = icmp eq %"struct.extensions::api::events::Rule"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.extensions::api::events::Rule"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"struct.extensions::api::events::Rule"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %31, i64 -1
  %34 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %32, i64 -1
  tail call void @_ZN10extensions3api6events4RuleC1EOS2_(%"struct.extensions::api::events::Rule"* %33, %"struct.extensions::api::events::Rule"* dereferenceable(72) %34) #12
  %35 = icmp eq %"struct.extensions::api::events::Rule"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"struct.extensions::api::events::Rule"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %13, align 8
  %40 = inttoptr i64 %38 to %"struct.extensions::api::events::Rule"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"struct.extensions::api::events::Rule"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"struct.extensions::api::events::Rule"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"struct.extensions::api::events::Rule"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"struct.extensions::api::events::Rule"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %48, i64 -1
  tail call void @_ZN10extensions3api6events4RuleD1Ev(%"struct.extensions::api::events::Rule"* %49) #12
  %50 = icmp eq %"struct.extensions::api::events::Rule"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

declare %"class.base::DictionaryValue"* @_ZNK10extensions3api6events4Rule7ToValueEv(%"struct.extensions::api::events::Rule"*) local_unnamed_addr #2

declare %"struct.extensions::api::events::Rule"* @_ZN10extensions3api6events4Rule9FromValueERKN4base5ValueE(%"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %29, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* %48, i8* %50) #12
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #12
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %20, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* %41, i8* %43) #12
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #12
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  ret void
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.102"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.102"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.102"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.102"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !40
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !40
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !43, !noalias !40
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !43, !noalias !40
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !40
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !40
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !43, !noalias !40
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !43, !noalias !40
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !40
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !40
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !43, !noalias !40
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !43, !noalias !40
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !40
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !40
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !43, !noalias !40
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !43, !noalias !40
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !45

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !40
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !40
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !43, !noalias !40
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !43, !noalias !40
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !46

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !47

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !48

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !49

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !50

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !51

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !53
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !53
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !56, !noalias !53
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !56, !noalias !53
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !53
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !53
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !56, !noalias !53
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !56, !noalias !53
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !53
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !53
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !56, !noalias !53
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !56, !noalias !53
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !53
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !53
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !56, !noalias !53
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !56, !noalias !53
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !58

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !53
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !53
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !56, !noalias !53
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !56, !noalias !53
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !59

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !60

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !61

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.102"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZZN10extensions12_GLOBAL__N_119ConvertManifestRuleERKNS_3api6events4RuleEPNS0_12ErrorBuilderEENK3$_0clERKNSt3__16vectorINS9_10unique_ptrIN4base5ValueENS9_14default_deleteISD_EEEENS9_9allocatorISG_EEEE"(%class.anon.160* nocapture readonly, %"class.std::__1::vector.124"* nocapture readonly dereferenceable(24)) unnamed_addr #7 align 2 {
  %3 = alloca %"class.std::__1::basic_string.102", align 8
  %4 = alloca %"class.std::__1::basic_string.102", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::DictionaryValue"*, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.126"*, %"class.std::__1::unique_ptr.126"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.126"*, %"class.std::__1::unique_ptr.126"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.126"* %10, %12
  br i1 %13, label %641, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.base::DictionaryValue"** %7 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %class.anon.160, %class.anon.160* %0, i64 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string.102"* %3 to i8*
  %21 = bitcast %"class.std::__1::basic_string.102"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string.102"* %3 to i16*
  %26 = bitcast %"class.std::__1::basic_string.102"* %3 to i8**
  %27 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  br label %31

29:                                               ; preds = %638
  %30 = icmp eq %"class.std::__1::unique_ptr.126"* %640, %12
  br i1 %30, label %641, label %31

31:                                               ; preds = %14, %29
  %32 = phi %"class.std::__1::unique_ptr.126"* [ %10, %14 ], [ %640, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %7, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %35 = call zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"* %34, %"class.base::DictionaryValue"** nonnull %7) #12
  br i1 %35, label %327, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.extensions::(anonymous namespace)::ErrorBuilder"*, %"class.extensions::(anonymous namespace)::ErrorBuilder"** %19, align 8
  %39 = load %"class.base::Value"*, %"class.base::Value"** %37, align 8
  %40 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %41 to i8
  %43 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %42) #12
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %36
  %46 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  br label %48

48:                                               ; preds = %36, %45
  %49 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8* %43) #12
  %50 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = select i1 %53, i8* %55, i8* %49
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = zext i8 %52 to i64
  %60 = select i1 %53, i64 %58, i64 %59
  %61 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ErrorBuilder", %"class.extensions::(anonymous namespace)::ErrorBuilder"* %38, i64 0, i32 0
  %62 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string.102"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %48
  %68 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  br label %72

70:                                               ; preds = %48
  %71 = zext i8 %65 to i64
  br label %72

72:                                               ; preds = %70, %67
  %73 = phi i64 [ %69, %67 ], [ %71, %70 ]
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %115, label %75

75:                                               ; preds = %72
  br i1 %66, label %76, label %83

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 9223372036854775807
  %80 = add nsw i64 %79, -1
  %81 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  br label %85

83:                                               ; preds = %75
  %84 = zext i8 %65 to i64
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i64 [ %80, %76 ], [ 10, %83 ]
  %87 = phi i64 [ %82, %76 ], [ %84, %83 ]
  %88 = sub i64 %86, %87
  %89 = icmp ult i64 %88, 2
  br i1 %89, label %109, label %90

90:                                               ; preds = %85
  br i1 %66, label %91, label %94

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i16*, i16** %92, align 8
  br label %96

94:                                               ; preds = %90
  %95 = bitcast %"class.std::__1::basic_string.102"* %62 to i16*
  br label %96

96:                                               ; preds = %94, %91
  %97 = phi i16* [ %93, %91 ], [ %95, %94 ]
  %98 = getelementptr inbounds i16, i16* %97, i64 %87
  store i16 59, i16* %98, align 2
  %99 = getelementptr inbounds i16, i16* %98, i64 1
  store i16 32, i16* %99, align 2
  %100 = add i64 %87, 2
  %101 = load i8, i8* %64, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %100, i64* %104, align 8
  br label %107

105:                                              ; preds = %96
  %106 = trunc i64 %100 to i8
  store i8 %106, i8* %64, align 1
  br label %107

107:                                              ; preds = %105, %103
  %108 = getelementptr inbounds i16, i16* %97, i64 %100
  store i16 0, i16* %108, align 2
  br label %112

109:                                              ; preds = %85
  %110 = add i64 %87, 2
  %111 = sub i64 %110, %86
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %62, i64 %86, i64 %111, i64 %87, i64 %87, i64 0, i64 2, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.13, i64 0, i64 0)) #12
  br label %112

112:                                              ; preds = %107, %109
  %113 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %61, align 8
  %114 = bitcast %"class.std::__1::basic_string.102"* %113 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %115

115:                                              ; preds = %112, %72
  %116 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %114, %112 ], [ %63, %72 ]
  %117 = phi %"class.std::__1::basic_string.102"* [ %113, %112 ], [ %62, %72 ]
  %118 = bitcast %"class.std::__1::basic_string.102"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #12
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.102"* nonnull sret %4, i8* %56, i64 %60) #12
  %119 = bitcast %"class.std::__1::basic_string.102"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %119, i64 0, i32 1, i32 1
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  %123 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i16*, i16** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.std::__1::basic_string.102"* %4 to i16*
  %128 = zext i8 %121 to i64
  %129 = select i1 %122, i16* %124, i16* %127
  %130 = select i1 %122, i64 %126, i64 %128
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %141

134:                                              ; preds = %115
  %135 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 9223372036854775807
  %138 = add nsw i64 %137, -1
  %139 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  br label %143

141:                                              ; preds = %115
  %142 = zext i8 %132 to i64
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i64 [ %138, %134 ], [ 10, %141 ]
  %145 = phi i64 [ %140, %134 ], [ %142, %141 ]
  %146 = sub i64 %144, %145
  %147 = icmp ult i64 %146, %130
  br i1 %147, label %312, label %148

148:                                              ; preds = %143
  %149 = icmp eq i64 %130, 0
  br i1 %149, label %315, label %150

150:                                              ; preds = %148
  br i1 %133, label %151, label %154

151:                                              ; preds = %150
  %152 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i16*, i16** %152, align 8
  br label %156

154:                                              ; preds = %150
  %155 = bitcast %"class.std::__1::basic_string.102"* %117 to i16*
  br label %156

156:                                              ; preds = %154, %151
  %157 = phi i16* [ %153, %151 ], [ %155, %154 ]
  %158 = getelementptr inbounds i16, i16* %157, i64 %145
  %159 = icmp ult i64 %130, 16
  br i1 %159, label %249, label %160

160:                                              ; preds = %156
  %161 = add i64 %130, %145
  %162 = getelementptr i16, i16* %157, i64 %161
  %163 = getelementptr i16, i16* %129, i64 %130
  %164 = icmp ult i16* %158, %163
  %165 = icmp ult i16* %129, %162
  %166 = and i1 %164, %165
  br i1 %166, label %249, label %167

167:                                              ; preds = %160
  %168 = and i64 %130, -16
  %169 = sub i64 %130, %168
  %170 = getelementptr i16, i16* %129, i64 %168
  %171 = getelementptr i16, i16* %158, i64 %168
  %172 = add i64 %168, -16
  %173 = lshr exact i64 %172, 4
  %174 = add nuw nsw i64 %173, 1
  %175 = and i64 %174, 3
  %176 = icmp ult i64 %172, 48
  br i1 %176, label %228, label %177

177:                                              ; preds = %167
  %178 = sub nsw i64 %174, %175
  br label %179

179:                                              ; preds = %179, %177
  %180 = phi i64 [ 0, %177 ], [ %225, %179 ]
  %181 = phi i64 [ %178, %177 ], [ %226, %179 ]
  %182 = getelementptr i16, i16* %129, i64 %180
  %183 = getelementptr i16, i16* %158, i64 %180
  %184 = bitcast i16* %182 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !62
  %186 = getelementptr i16, i16* %182, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !62
  %189 = bitcast i16* %183 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %189, align 2, !alias.scope !65, !noalias !62
  %190 = getelementptr i16, i16* %183, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %191, align 2, !alias.scope !65, !noalias !62
  %192 = or i64 %180, 16
  %193 = getelementptr i16, i16* %129, i64 %192
  %194 = getelementptr i16, i16* %158, i64 %192
  %195 = bitcast i16* %193 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !62
  %197 = getelementptr i16, i16* %193, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !62
  %200 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %200, align 2, !alias.scope !65, !noalias !62
  %201 = getelementptr i16, i16* %194, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %202, align 2, !alias.scope !65, !noalias !62
  %203 = or i64 %180, 32
  %204 = getelementptr i16, i16* %129, i64 %203
  %205 = getelementptr i16, i16* %158, i64 %203
  %206 = bitcast i16* %204 to <8 x i16>*
  %207 = load <8 x i16>, <8 x i16>* %206, align 2, !alias.scope !62
  %208 = getelementptr i16, i16* %204, i64 8
  %209 = bitcast i16* %208 to <8 x i16>*
  %210 = load <8 x i16>, <8 x i16>* %209, align 2, !alias.scope !62
  %211 = bitcast i16* %205 to <8 x i16>*
  store <8 x i16> %207, <8 x i16>* %211, align 2, !alias.scope !65, !noalias !62
  %212 = getelementptr i16, i16* %205, i64 8
  %213 = bitcast i16* %212 to <8 x i16>*
  store <8 x i16> %210, <8 x i16>* %213, align 2, !alias.scope !65, !noalias !62
  %214 = or i64 %180, 48
  %215 = getelementptr i16, i16* %129, i64 %214
  %216 = getelementptr i16, i16* %158, i64 %214
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !62
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !62
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !65, !noalias !62
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !65, !noalias !62
  %225 = add i64 %180, 64
  %226 = add i64 %181, -4
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %179, !llvm.loop !67

228:                                              ; preds = %179, %167
  %229 = phi i64 [ 0, %167 ], [ %225, %179 ]
  %230 = icmp eq i64 %175, 0
  br i1 %230, label %247, label %231

231:                                              ; preds = %228, %231
  %232 = phi i64 [ %244, %231 ], [ %229, %228 ]
  %233 = phi i64 [ %245, %231 ], [ %175, %228 ]
  %234 = getelementptr i16, i16* %129, i64 %232
  %235 = getelementptr i16, i16* %158, i64 %232
  %236 = bitcast i16* %234 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2, !alias.scope !62
  %238 = getelementptr i16, i16* %234, i64 8
  %239 = bitcast i16* %238 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !62
  %241 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %241, align 2, !alias.scope !65, !noalias !62
  %242 = getelementptr i16, i16* %235, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %243, align 2, !alias.scope !65, !noalias !62
  %244 = add i64 %232, 16
  %245 = add i64 %233, -1
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %231, !llvm.loop !68

247:                                              ; preds = %231, %228
  %248 = icmp eq i64 %130, %168
  br i1 %248, label %302, label %249

249:                                              ; preds = %247, %160, %156
  %250 = phi i64 [ %130, %160 ], [ %130, %156 ], [ %169, %247 ]
  %251 = phi i16* [ %129, %160 ], [ %129, %156 ], [ %170, %247 ]
  %252 = phi i16* [ %158, %160 ], [ %158, %156 ], [ %171, %247 ]
  %253 = add i64 %250, -1
  %254 = and i64 %250, 7
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %267, label %256

256:                                              ; preds = %249, %256
  %257 = phi i64 [ %262, %256 ], [ %250, %249 ]
  %258 = phi i16* [ %264, %256 ], [ %251, %249 ]
  %259 = phi i16* [ %263, %256 ], [ %252, %249 ]
  %260 = phi i64 [ %265, %256 ], [ %254, %249 ]
  %261 = load i16, i16* %258, align 2
  store i16 %261, i16* %259, align 2
  %262 = add i64 %257, -1
  %263 = getelementptr inbounds i16, i16* %259, i64 1
  %264 = getelementptr inbounds i16, i16* %258, i64 1
  %265 = add i64 %260, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %256, !llvm.loop !69

267:                                              ; preds = %256, %249
  %268 = phi i64 [ %250, %249 ], [ %262, %256 ]
  %269 = phi i16* [ %251, %249 ], [ %264, %256 ]
  %270 = phi i16* [ %252, %249 ], [ %263, %256 ]
  %271 = icmp ult i64 %253, 7
  br i1 %271, label %302, label %272

272:                                              ; preds = %267, %272
  %273 = phi i64 [ %298, %272 ], [ %268, %267 ]
  %274 = phi i16* [ %300, %272 ], [ %269, %267 ]
  %275 = phi i16* [ %299, %272 ], [ %270, %267 ]
  %276 = load i16, i16* %274, align 2
  store i16 %276, i16* %275, align 2
  %277 = getelementptr inbounds i16, i16* %275, i64 1
  %278 = getelementptr inbounds i16, i16* %274, i64 1
  %279 = load i16, i16* %278, align 2
  store i16 %279, i16* %277, align 2
  %280 = getelementptr inbounds i16, i16* %275, i64 2
  %281 = getelementptr inbounds i16, i16* %274, i64 2
  %282 = load i16, i16* %281, align 2
  store i16 %282, i16* %280, align 2
  %283 = getelementptr inbounds i16, i16* %275, i64 3
  %284 = getelementptr inbounds i16, i16* %274, i64 3
  %285 = load i16, i16* %284, align 2
  store i16 %285, i16* %283, align 2
  %286 = getelementptr inbounds i16, i16* %275, i64 4
  %287 = getelementptr inbounds i16, i16* %274, i64 4
  %288 = load i16, i16* %287, align 2
  store i16 %288, i16* %286, align 2
  %289 = getelementptr inbounds i16, i16* %275, i64 5
  %290 = getelementptr inbounds i16, i16* %274, i64 5
  %291 = load i16, i16* %290, align 2
  store i16 %291, i16* %289, align 2
  %292 = getelementptr inbounds i16, i16* %275, i64 6
  %293 = getelementptr inbounds i16, i16* %274, i64 6
  %294 = load i16, i16* %293, align 2
  store i16 %294, i16* %292, align 2
  %295 = getelementptr inbounds i16, i16* %275, i64 7
  %296 = getelementptr inbounds i16, i16* %274, i64 7
  %297 = load i16, i16* %296, align 2
  store i16 %297, i16* %295, align 2
  %298 = add i64 %273, -8
  %299 = getelementptr inbounds i16, i16* %275, i64 8
  %300 = getelementptr inbounds i16, i16* %274, i64 8
  %301 = icmp eq i64 %298, 0
  br i1 %301, label %302, label %272, !llvm.loop !70

302:                                              ; preds = %267, %272, %247
  %303 = add i64 %145, %130
  %304 = load i8, i8* %131, align 1
  %305 = icmp slt i8 %304, 0
  br i1 %305, label %306, label %308

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %303, i64* %307, align 8
  br label %310

308:                                              ; preds = %302
  %309 = trunc i64 %303 to i8
  store i8 %309, i8* %131, align 1
  br label %310

310:                                              ; preds = %308, %306
  %311 = getelementptr inbounds i16, i16* %157, i64 %303
  store i16 0, i16* %311, align 2
  br label %315

312:                                              ; preds = %143
  %313 = add i64 %145, %130
  %314 = sub i64 %313, %144
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %117, i64 %144, i64 %314, i64 %145, i64 %145, i64 0, i64 %130, i16* %129) #12
  br label %315

315:                                              ; preds = %148, %310, %312
  %316 = load i8, i8* %120, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %318, label %321

318:                                              ; preds = %315
  %319 = bitcast %"class.std::__1::basic_string.102"* %4 to i8**
  %320 = load i8*, i8** %319, align 8
  call void @_ZdlPv(i8* %320) #13
  br label %321

321:                                              ; preds = %315, %318
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #12
  %322 = load i8, i8* %51, align 1
  %323 = icmp slt i8 %322, 0
  br i1 %323, label %324, label %326

324:                                              ; preds = %321
  %325 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %325) #13
  br label %326

326:                                              ; preds = %324, %321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br label %641

327:                                              ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  %328 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %7, align 8
  %329 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %328, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4, %"class.std::__1::basic_string"* nonnull %8) #12
  br i1 %329, label %586, label %330

330:                                              ; preds = %327
  %331 = load %"class.extensions::(anonymous namespace)::ErrorBuilder"*, %"class.extensions::(anonymous namespace)::ErrorBuilder"** %19, align 8
  %332 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ErrorBuilder", %"class.extensions::(anonymous namespace)::ErrorBuilder"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %332, align 8
  %334 = bitcast %"class.std::__1::basic_string.102"* %333 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %335 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %334, i64 0, i32 1, i32 1
  %336 = load i8, i8* %335, align 1
  %337 = icmp slt i8 %336, 0
  br i1 %337, label %338, label %341

338:                                              ; preds = %330
  %339 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %340 = load i64, i64* %339, align 8
  br label %343

341:                                              ; preds = %330
  %342 = zext i8 %336 to i64
  br label %343

343:                                              ; preds = %341, %338
  %344 = phi i64 [ %340, %338 ], [ %342, %341 ]
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %386, label %346

346:                                              ; preds = %343
  br i1 %337, label %347, label %354

347:                                              ; preds = %346
  %348 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %349 = load i64, i64* %348, align 8
  %350 = and i64 %349, 9223372036854775807
  %351 = add nsw i64 %350, -1
  %352 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %353 = load i64, i64* %352, align 8
  br label %356

354:                                              ; preds = %346
  %355 = zext i8 %336 to i64
  br label %356

356:                                              ; preds = %354, %347
  %357 = phi i64 [ %351, %347 ], [ 10, %354 ]
  %358 = phi i64 [ %353, %347 ], [ %355, %354 ]
  %359 = sub i64 %357, %358
  %360 = icmp ult i64 %359, 2
  br i1 %360, label %380, label %361

361:                                              ; preds = %356
  br i1 %337, label %362, label %365

362:                                              ; preds = %361
  %363 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load i16*, i16** %363, align 8
  br label %367

365:                                              ; preds = %361
  %366 = bitcast %"class.std::__1::basic_string.102"* %333 to i16*
  br label %367

367:                                              ; preds = %365, %362
  %368 = phi i16* [ %364, %362 ], [ %366, %365 ]
  %369 = getelementptr inbounds i16, i16* %368, i64 %358
  store i16 59, i16* %369, align 2
  %370 = getelementptr inbounds i16, i16* %369, i64 1
  store i16 32, i16* %370, align 2
  %371 = add i64 %358, 2
  %372 = load i8, i8* %335, align 1
  %373 = icmp slt i8 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %367
  %375 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %371, i64* %375, align 8
  br label %378

376:                                              ; preds = %367
  %377 = trunc i64 %371 to i8
  store i8 %377, i8* %335, align 1
  br label %378

378:                                              ; preds = %376, %374
  %379 = getelementptr inbounds i16, i16* %368, i64 %371
  store i16 0, i16* %379, align 2
  br label %383

380:                                              ; preds = %356
  %381 = add i64 %358, 2
  %382 = sub i64 %381, %357
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %333, i64 %357, i64 %382, i64 %358, i64 %358, i64 0, i64 2, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.13, i64 0, i64 0)) #12
  br label %383

383:                                              ; preds = %378, %380
  %384 = load %"class.std::__1::basic_string.102"*, %"class.std::__1::basic_string.102"** %332, align 8
  %385 = bitcast %"class.std::__1::basic_string.102"* %384 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %386

386:                                              ; preds = %383, %343
  %387 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %385, %383 ], [ %334, %343 ]
  %388 = phi %"class.std::__1::basic_string.102"* [ %384, %383 ], [ %333, %343 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.102"* nonnull sret %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16, i64 0, i64 0), i64 39) #12
  %389 = load i8, i8* %22, align 1
  %390 = icmp slt i8 %389, 0
  %391 = load i16*, i16** %23, align 8
  %392 = load i64, i64* %24, align 8
  %393 = zext i8 %389 to i64
  %394 = select i1 %390, i16* %391, i16* %25
  %395 = select i1 %390, i64 %392, i64 %393
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %387, i64 0, i32 1, i32 1
  %397 = load i8, i8* %396, align 1
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %399, label %406

399:                                              ; preds = %386
  %400 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %388, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %401 = load i64, i64* %400, align 8
  %402 = and i64 %401, 9223372036854775807
  %403 = add nsw i64 %402, -1
  %404 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %388, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %405 = load i64, i64* %404, align 8
  br label %408

406:                                              ; preds = %386
  %407 = zext i8 %397 to i64
  br label %408

408:                                              ; preds = %406, %399
  %409 = phi i64 [ %403, %399 ], [ 10, %406 ]
  %410 = phi i64 [ %405, %399 ], [ %407, %406 ]
  %411 = sub i64 %409, %410
  %412 = icmp ult i64 %411, %395
  br i1 %412, label %577, label %413

413:                                              ; preds = %408
  %414 = icmp eq i64 %395, 0
  br i1 %414, label %580, label %415

415:                                              ; preds = %413
  br i1 %398, label %416, label %419

416:                                              ; preds = %415
  %417 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %388, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load i16*, i16** %417, align 8
  br label %421

419:                                              ; preds = %415
  %420 = bitcast %"class.std::__1::basic_string.102"* %388 to i16*
  br label %421

421:                                              ; preds = %419, %416
  %422 = phi i16* [ %418, %416 ], [ %420, %419 ]
  %423 = getelementptr inbounds i16, i16* %422, i64 %410
  %424 = icmp ult i64 %395, 16
  br i1 %424, label %514, label %425

425:                                              ; preds = %421
  %426 = add i64 %395, %410
  %427 = getelementptr i16, i16* %422, i64 %426
  %428 = getelementptr i16, i16* %394, i64 %395
  %429 = icmp ult i16* %423, %428
  %430 = icmp ult i16* %394, %427
  %431 = and i1 %429, %430
  br i1 %431, label %514, label %432

432:                                              ; preds = %425
  %433 = and i64 %395, -16
  %434 = sub i64 %395, %433
  %435 = getelementptr i16, i16* %394, i64 %433
  %436 = getelementptr i16, i16* %423, i64 %433
  %437 = add i64 %433, -16
  %438 = lshr exact i64 %437, 4
  %439 = add nuw nsw i64 %438, 1
  %440 = and i64 %439, 3
  %441 = icmp ult i64 %437, 48
  br i1 %441, label %493, label %442

442:                                              ; preds = %432
  %443 = sub nsw i64 %439, %440
  br label %444

444:                                              ; preds = %444, %442
  %445 = phi i64 [ 0, %442 ], [ %490, %444 ]
  %446 = phi i64 [ %443, %442 ], [ %491, %444 ]
  %447 = getelementptr i16, i16* %394, i64 %445
  %448 = getelementptr i16, i16* %423, i64 %445
  %449 = bitcast i16* %447 to <8 x i16>*
  %450 = load <8 x i16>, <8 x i16>* %449, align 2, !alias.scope !71
  %451 = getelementptr i16, i16* %447, i64 8
  %452 = bitcast i16* %451 to <8 x i16>*
  %453 = load <8 x i16>, <8 x i16>* %452, align 2, !alias.scope !71
  %454 = bitcast i16* %448 to <8 x i16>*
  store <8 x i16> %450, <8 x i16>* %454, align 2, !alias.scope !74, !noalias !71
  %455 = getelementptr i16, i16* %448, i64 8
  %456 = bitcast i16* %455 to <8 x i16>*
  store <8 x i16> %453, <8 x i16>* %456, align 2, !alias.scope !74, !noalias !71
  %457 = or i64 %445, 16
  %458 = getelementptr i16, i16* %394, i64 %457
  %459 = getelementptr i16, i16* %423, i64 %457
  %460 = bitcast i16* %458 to <8 x i16>*
  %461 = load <8 x i16>, <8 x i16>* %460, align 2, !alias.scope !71
  %462 = getelementptr i16, i16* %458, i64 8
  %463 = bitcast i16* %462 to <8 x i16>*
  %464 = load <8 x i16>, <8 x i16>* %463, align 2, !alias.scope !71
  %465 = bitcast i16* %459 to <8 x i16>*
  store <8 x i16> %461, <8 x i16>* %465, align 2, !alias.scope !74, !noalias !71
  %466 = getelementptr i16, i16* %459, i64 8
  %467 = bitcast i16* %466 to <8 x i16>*
  store <8 x i16> %464, <8 x i16>* %467, align 2, !alias.scope !74, !noalias !71
  %468 = or i64 %445, 32
  %469 = getelementptr i16, i16* %394, i64 %468
  %470 = getelementptr i16, i16* %423, i64 %468
  %471 = bitcast i16* %469 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 2, !alias.scope !71
  %473 = getelementptr i16, i16* %469, i64 8
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !71
  %476 = bitcast i16* %470 to <8 x i16>*
  store <8 x i16> %472, <8 x i16>* %476, align 2, !alias.scope !74, !noalias !71
  %477 = getelementptr i16, i16* %470, i64 8
  %478 = bitcast i16* %477 to <8 x i16>*
  store <8 x i16> %475, <8 x i16>* %478, align 2, !alias.scope !74, !noalias !71
  %479 = or i64 %445, 48
  %480 = getelementptr i16, i16* %394, i64 %479
  %481 = getelementptr i16, i16* %423, i64 %479
  %482 = bitcast i16* %480 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !71
  %484 = getelementptr i16, i16* %480, i64 8
  %485 = bitcast i16* %484 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !71
  %487 = bitcast i16* %481 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %487, align 2, !alias.scope !74, !noalias !71
  %488 = getelementptr i16, i16* %481, i64 8
  %489 = bitcast i16* %488 to <8 x i16>*
  store <8 x i16> %486, <8 x i16>* %489, align 2, !alias.scope !74, !noalias !71
  %490 = add i64 %445, 64
  %491 = add i64 %446, -4
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %493, label %444, !llvm.loop !76

493:                                              ; preds = %444, %432
  %494 = phi i64 [ 0, %432 ], [ %490, %444 ]
  %495 = icmp eq i64 %440, 0
  br i1 %495, label %512, label %496

496:                                              ; preds = %493, %496
  %497 = phi i64 [ %509, %496 ], [ %494, %493 ]
  %498 = phi i64 [ %510, %496 ], [ %440, %493 ]
  %499 = getelementptr i16, i16* %394, i64 %497
  %500 = getelementptr i16, i16* %423, i64 %497
  %501 = bitcast i16* %499 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !71
  %503 = getelementptr i16, i16* %499, i64 8
  %504 = bitcast i16* %503 to <8 x i16>*
  %505 = load <8 x i16>, <8 x i16>* %504, align 2, !alias.scope !71
  %506 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %506, align 2, !alias.scope !74, !noalias !71
  %507 = getelementptr i16, i16* %500, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> %505, <8 x i16>* %508, align 2, !alias.scope !74, !noalias !71
  %509 = add i64 %497, 16
  %510 = add i64 %498, -1
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %512, label %496, !llvm.loop !77

512:                                              ; preds = %496, %493
  %513 = icmp eq i64 %395, %433
  br i1 %513, label %567, label %514

514:                                              ; preds = %512, %425, %421
  %515 = phi i64 [ %395, %425 ], [ %395, %421 ], [ %434, %512 ]
  %516 = phi i16* [ %394, %425 ], [ %394, %421 ], [ %435, %512 ]
  %517 = phi i16* [ %423, %425 ], [ %423, %421 ], [ %436, %512 ]
  %518 = add i64 %515, -1
  %519 = and i64 %515, 7
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %532, label %521

521:                                              ; preds = %514, %521
  %522 = phi i64 [ %527, %521 ], [ %515, %514 ]
  %523 = phi i16* [ %529, %521 ], [ %516, %514 ]
  %524 = phi i16* [ %528, %521 ], [ %517, %514 ]
  %525 = phi i64 [ %530, %521 ], [ %519, %514 ]
  %526 = load i16, i16* %523, align 2
  store i16 %526, i16* %524, align 2
  %527 = add i64 %522, -1
  %528 = getelementptr inbounds i16, i16* %524, i64 1
  %529 = getelementptr inbounds i16, i16* %523, i64 1
  %530 = add i64 %525, -1
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %532, label %521, !llvm.loop !78

532:                                              ; preds = %521, %514
  %533 = phi i64 [ %515, %514 ], [ %527, %521 ]
  %534 = phi i16* [ %516, %514 ], [ %529, %521 ]
  %535 = phi i16* [ %517, %514 ], [ %528, %521 ]
  %536 = icmp ult i64 %518, 7
  br i1 %536, label %567, label %537

537:                                              ; preds = %532, %537
  %538 = phi i64 [ %563, %537 ], [ %533, %532 ]
  %539 = phi i16* [ %565, %537 ], [ %534, %532 ]
  %540 = phi i16* [ %564, %537 ], [ %535, %532 ]
  %541 = load i16, i16* %539, align 2
  store i16 %541, i16* %540, align 2
  %542 = getelementptr inbounds i16, i16* %540, i64 1
  %543 = getelementptr inbounds i16, i16* %539, i64 1
  %544 = load i16, i16* %543, align 2
  store i16 %544, i16* %542, align 2
  %545 = getelementptr inbounds i16, i16* %540, i64 2
  %546 = getelementptr inbounds i16, i16* %539, i64 2
  %547 = load i16, i16* %546, align 2
  store i16 %547, i16* %545, align 2
  %548 = getelementptr inbounds i16, i16* %540, i64 3
  %549 = getelementptr inbounds i16, i16* %539, i64 3
  %550 = load i16, i16* %549, align 2
  store i16 %550, i16* %548, align 2
  %551 = getelementptr inbounds i16, i16* %540, i64 4
  %552 = getelementptr inbounds i16, i16* %539, i64 4
  %553 = load i16, i16* %552, align 2
  store i16 %553, i16* %551, align 2
  %554 = getelementptr inbounds i16, i16* %540, i64 5
  %555 = getelementptr inbounds i16, i16* %539, i64 5
  %556 = load i16, i16* %555, align 2
  store i16 %556, i16* %554, align 2
  %557 = getelementptr inbounds i16, i16* %540, i64 6
  %558 = getelementptr inbounds i16, i16* %539, i64 6
  %559 = load i16, i16* %558, align 2
  store i16 %559, i16* %557, align 2
  %560 = getelementptr inbounds i16, i16* %540, i64 7
  %561 = getelementptr inbounds i16, i16* %539, i64 7
  %562 = load i16, i16* %561, align 2
  store i16 %562, i16* %560, align 2
  %563 = add i64 %538, -8
  %564 = getelementptr inbounds i16, i16* %540, i64 8
  %565 = getelementptr inbounds i16, i16* %539, i64 8
  %566 = icmp eq i64 %563, 0
  br i1 %566, label %567, label %537, !llvm.loop !79

567:                                              ; preds = %532, %537, %512
  %568 = add i64 %410, %395
  %569 = load i8, i8* %396, align 1
  %570 = icmp slt i8 %569, 0
  br i1 %570, label %571, label %573

571:                                              ; preds = %567
  %572 = getelementptr inbounds %"class.std::__1::basic_string.102", %"class.std::__1::basic_string.102"* %388, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %568, i64* %572, align 8
  br label %575

573:                                              ; preds = %567
  %574 = trunc i64 %568 to i8
  store i8 %574, i8* %396, align 1
  br label %575

575:                                              ; preds = %573, %571
  %576 = getelementptr inbounds i16, i16* %422, i64 %568
  store i16 0, i16* %576, align 2
  br label %580

577:                                              ; preds = %408
  %578 = add i64 %410, %395
  %579 = sub i64 %578, %409
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.102"* %388, i64 %409, i64 %579, i64 %410, i64 %410, i64 0, i64 %395, i16* %394) #12
  br label %580

580:                                              ; preds = %413, %575, %577
  %581 = load i8, i8* %22, align 1
  %582 = icmp slt i8 %581, 0
  br i1 %582, label %583, label %585

583:                                              ; preds = %580
  %584 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %584) #13
  br label %585

585:                                              ; preds = %580, %583
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br label %632

586:                                              ; preds = %327
  %587 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants17kLegacyShowActionE, i64 0, i64 0)) #12
  %588 = load i8, i8* %28, align 1
  %589 = icmp slt i8 %588, 0
  %590 = load i64, i64* %18, align 8
  %591 = zext i8 %588 to i64
  %592 = select i1 %589, i64 %590, i64 %591
  %593 = icmp eq i64 %587, %592
  br i1 %593, label %594, label %620

594:                                              ; preds = %586
  %595 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %8, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants17kLegacyShowActionE, i64 0, i64 0), i64 %587) #12
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %620

597:                                              ; preds = %594
  %598 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants11kShowActionE, i64 0, i64 0), align 1
  %599 = call i1 @llvm.is.constant.i8(i8 %598) #12
  br i1 %599, label %600, label %618

600:                                              ; preds = %597
  %601 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants11kShowActionE, i64 0, i64 0)) #12
  %602 = icmp ult i64 %601, 23
  br i1 %602, label %603, label %616

603:                                              ; preds = %600
  %604 = load i8, i8* %28, align 1
  %605 = icmp slt i8 %604, 0
  br i1 %605, label %606, label %608

606:                                              ; preds = %603
  store i64 %601, i64* %18, align 8
  %607 = load i8*, i8** %17, align 8
  br label %610

608:                                              ; preds = %603
  %609 = trunc i64 %601 to i8
  store i8 %609, i8* %28, align 1
  br label %610

610:                                              ; preds = %608, %606
  %611 = phi i8* [ %607, %606 ], [ %16, %608 ]
  %612 = icmp eq i64 %601, 0
  br i1 %612, label %614, label %613

613:                                              ; preds = %610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %611, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants11kShowActionE, i64 0, i64 0), i64 %601, i1 false) #12
  br label %614

614:                                              ; preds = %613, %610
  %615 = getelementptr inbounds i8, i8* %611, i64 %601
  store i8 0, i8* %615, align 1
  br label %620

616:                                              ; preds = %600
  %617 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants11kShowActionE, i64 0, i64 0), i64 %601) #12
  br label %620

618:                                              ; preds = %597
  %619 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions29declarative_content_constants11kShowActionE, i64 0, i64 0)) #12
  br label %620

620:                                              ; preds = %586, %618, %616, %614, %594
  %621 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %7, align 8
  %622 = call zeroext i1 @_ZN4base15DictionaryValue6RemoveENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* %621, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4, %"class.std::__1::unique_ptr.126"* null) #12
  %623 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %7, align 8
  %624 = load i8, i8* %28, align 1
  %625 = icmp slt i8 %624, 0
  %626 = load i8*, i8** %17, align 8
  %627 = select i1 %625, i8* %626, i8* %16
  %628 = load i64, i64* %18, align 8
  %629 = zext i8 %624 to i64
  %630 = select i1 %625, i64 %628, i64 %629
  %631 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* %623, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i64 12, i8* %627, i64 %630) #12
  br label %632

632:                                              ; preds = %620, %585
  %633 = phi i32 [ 1, %585 ], [ 0, %620 ]
  %634 = load i8, i8* %28, align 1
  %635 = icmp slt i8 %634, 0
  br i1 %635, label %636, label %638

636:                                              ; preds = %632
  %637 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %637) #13
  br label %638

638:                                              ; preds = %636, %632
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %639 = icmp eq i32 %633, 0
  %640 = getelementptr inbounds %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126"* %32, i64 1
  br i1 %639, label %29, label %641

641:                                              ; preds = %638, %29, %2, %326
  %642 = phi i1 [ false, %326 ], [ true, %2 ], [ false, %638 ], [ true, %29 ]
  ret i1 %642
}

declare zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #2

declare zeroext i1 @_ZN4base15DictionaryValue6RemoveENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::unique_ptr.126"*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %11, i64 0, i32 0, i32 0
  %13 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %12, align 8
  %14 = icmp eq %"struct.extensions::api::events::Rule"* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %4
  %16 = bitcast %"struct.extensions::api::events::Rule"* %13 to i8*
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %18 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %17, align 8
  %19 = icmp eq %"struct.extensions::api::events::Rule"* %18, %13
  br i1 %19, label %27, label %20

20:                                               ; preds = %15, %20
  %21 = phi %"struct.extensions::api::events::Rule"* [ %22, %20 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %21, i64 -1
  tail call void @_ZN10extensions3api6events4RuleD1Ev(%"struct.extensions::api::events::Rule"* %22) #12
  %23 = icmp eq %"struct.extensions::api::events::Rule"* %22, %13
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::vector.142"* %11 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi i8* [ %26, %24 ], [ %16, %15 ]
  store %"struct.extensions::api::events::Rule"* %13, %"struct.extensions::api::events::Rule"** %17, align 8
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %27, %4
  %30 = bitcast %"struct.std::__1::pair.162"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::pair.162", %"struct.std::__1::pair.162"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %29, %34
  %38 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSQ_IJEEEEEENS_4pairINS_15__tree_iteratorISF_PNS_11__tree_nodeISF_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.164"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISQ_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %54

12:                                               ; preds = %5
  %13 = call i8* @_Znwm(i64 80) #13, !noalias !80
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8, !noalias !80
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !80
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %22, i64 24, i1 false) #12, !noalias !80
  br label %29

23:                                               ; preds = %12
  %24 = bitcast i8* %14 to %"class.std::__1::basic_string"*
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !80
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !80
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %26, i64 %28) #12, !noalias !80
  br label %29

29:                                               ; preds = %21, %23
  %30 = getelementptr inbounds i8, i8* %13, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #12, !noalias !80
  %31 = bitcast %"class.std::__1::__tree_end_node"** %6 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8* %13 to %"class.std::__1::__tree_node"*
  %34 = bitcast i8* %13 to %"class.std::__1::__tree_node_base"*
  %35 = getelementptr inbounds i8, i8* %13, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #12
  %36 = bitcast i8* %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8**
  store i8* %13, i8** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %29
  %44 = ptrtoint %"class.std::__1::__tree_node_base"* %41 to i64
  %45 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %44, i64* %45, align 8
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  br label %47

47:                                               ; preds = %43, %29
  %48 = phi %"class.std::__1::__tree_node_base"* [ %34, %29 ], [ %46, %43 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %50, %"class.std::__1::__tree_node_base"* %48) #12
  %51 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %51, align 8
  br label %54

54:                                               ; preds = %47, %5
  %55 = phi i8 [ 1, %47 ], [ 0, %5 ]
  %56 = phi %"class.std::__1::__tree_node"* [ %33, %47 ], [ %10, %5 ]
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %56, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %58 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %57, 0
  %59 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %58, i8 %55, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISQ_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !83
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !83
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !83
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions3api6events4RuleENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.142"*, %"struct.extensions::api::events::Rule"* dereferenceable(72)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.extensions::api::events::Rule"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.142"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.142"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.extensions::api::events::Rule"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.extensions::api::events::Rule"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.extensions::api::events::Rule"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %33, i64 %32
  %36 = ptrtoint %"struct.extensions::api::events::Rule"* %35 to i64
  tail call void @_ZN10extensions3api6events4RuleC1EOS2_(%"struct.extensions::api::events::Rule"* %34, %"struct.extensions::api::events::Rule"* dereferenceable(72) %1) #12
  %37 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %34, i64 1
  %38 = ptrtoint %"struct.extensions::api::events::Rule"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %39, align 8
  %41 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %3, align 8
  %42 = icmp eq %"struct.extensions::api::events::Rule"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.extensions::api::events::Rule"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.extensions::api::events::Rule"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.extensions::api::events::Rule"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %47, i64 -1
  tail call void @_ZN10extensions3api6events4RuleC1EOS2_(%"struct.extensions::api::events::Rule"* %48, %"struct.extensions::api::events::Rule"* dereferenceable(72) %49) #12
  %50 = icmp eq %"struct.extensions::api::events::Rule"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.extensions::api::events::Rule"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.extensions::api::events::Rule"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.extensions::api::events::Rule"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.extensions::api::events::Rule"*
  %60 = icmp eq %"struct.extensions::api::events::Rule"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.extensions::api::events::Rule"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.extensions::api::events::Rule", %"struct.extensions::api::events::Rule"* %62, i64 -1
  tail call void @_ZN10extensions3api6events4RuleD1Ev(%"struct.extensions::api::events::Rule"* %63) #12
  %64 = icmp eq %"struct.extensions::api::events::Rule"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN10extensions3api6events4RuleC1EOS2_(%"struct.extensions::api::events::Rule"*, %"struct.extensions::api::events::Rule"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = distinct !{!49, !8}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !52, !8}
!52 = !{!"llvm.loop.unroll.runtime.disable"}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !8}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !8}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !8}
!68 = distinct !{!68, !10}
!69 = distinct !{!69, !10}
!70 = distinct !{!70, !8}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !8}
!77 = distinct !{!77, !10}
!78 = distinct !{!78, !10}
!79 = distinct !{!79, !8}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISY_EEEEEEDpOT_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIN10extensions3api6events4RuleENS5_ISC_EEEEEENS_19__map_value_compareIS7_SF_NS_4lessIS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISY_EEEEEEDpOT_"}
!83 = !{i8 0, i8 2}
