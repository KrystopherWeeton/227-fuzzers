; ModuleID = '../../third_party/unrar/src/getbits.cpp'
source_filename = "../../third_party/unrar/src/getbits.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.BitInput = type { i32, i32, i8, i8* }

@_ZN8BitInputC1Eb = hidden unnamed_addr alias void (%class.BitInput*, i1), void (%class.BitInput*, i1)* @_ZN8BitInputC2Eb
@_ZN8BitInputD1Ev = hidden unnamed_addr alias void (%class.BitInput*), void (%class.BitInput*)* @_ZN8BitInputD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8BitInputC2Eb(%class.BitInput* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  br i1 %1, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call i8* @_Znam(i64 32771) #6
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 0, i64 32771, i1 false)
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i8* [ %5, %4 ], [ null, %2 ]
  %8 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 3
  store i8* %7, i8** %8, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8BitInputD2Ev(%class.BitInput* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(i8* nonnull %7) #6
  br label %10

10:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8BitInput8faddbitsEj(%class.BitInput* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, %1
  %6 = lshr i32 %5, 3
  %7 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %6, %8
  store i32 %9, i32* %7, align 8
  %10 = and i32 %5, 7
  store i32 %10, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN8BitInput8fgetbitsEv(%class.BitInput* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 16
  %11 = add nsw i32 %5, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %3, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %16, %10
  %18 = add nsw i32 %5, 2
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %3, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = or i32 %17, %22
  %24 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 8, %25
  %27 = lshr i32 %23, %26
  %28 = and i32 %27, 65535
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8BitInput17SetExternalBufferEPh(%class.BitInput* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @_ZdaPv(i8* nonnull %4) #6
  br label %11

11:                                               ; preds = %6, %2, %10
  store i8* %1, i8** %3, align 8
  %12 = getelementptr inbounds %class.BitInput, %class.BitInput* %0, i64 0, i32 2
  store i8 1, i8* %12, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
