; ModuleID = '../../third_party/libphonenumber/dist/cpp/src/phonenumbers/regex_based_matcher.cc'
source_filename = "../../third_party/libphonenumber/dist/cpp/src/phonenumbers/regex_based_matcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.i18n::phonenumbers::RegexBasedMatcher" = type { %"class.i18n::phonenumbers::MatcherApi", %"class.i18n::phonenumbers::scoped_ptr", %"class.i18n::phonenumbers::scoped_ptr.0" }
%"class.i18n::phonenumbers::MatcherApi" = type { i32 (...)** }
%"class.i18n::phonenumbers::scoped_ptr" = type { %"class.i18n::phonenumbers::scoped_ptr_impl" }
%"class.i18n::phonenumbers::scoped_ptr_impl" = type { %"struct.i18n::phonenumbers::scoped_ptr_impl<const i18n::phonenumbers::AbstractRegExpFactory, i18n::phonenumbers::DefaultDeleter<const i18n::phonenumbers::AbstractRegExpFactory> >::Data" }
%"struct.i18n::phonenumbers::scoped_ptr_impl<const i18n::phonenumbers::AbstractRegExpFactory, i18n::phonenumbers::DefaultDeleter<const i18n::phonenumbers::AbstractRegExpFactory> >::Data" = type { %"class.i18n::phonenumbers::AbstractRegExpFactory"* }
%"class.i18n::phonenumbers::AbstractRegExpFactory" = type { i32 (...)** }
%"class.i18n::phonenumbers::scoped_ptr.0" = type { %"class.i18n::phonenumbers::scoped_ptr_impl.1" }
%"class.i18n::phonenumbers::scoped_ptr_impl.1" = type { %"struct.i18n::phonenumbers::scoped_ptr_impl<i18n::phonenumbers::RegExpCache, i18n::phonenumbers::DefaultDeleter<i18n::phonenumbers::RegExpCache> >::Data" }
%"struct.i18n::phonenumbers::scoped_ptr_impl<i18n::phonenumbers::RegExpCache, i18n::phonenumbers::DefaultDeleter<i18n::phonenumbers::RegExpCache> >::Data" = type { %"class.i18n::phonenumbers::RegExpCache"* }
%"class.i18n::phonenumbers::RegExpCache" = type { %"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.i18n::phonenumbers::Lock", %"class.i18n::phonenumbers::scoped_ptr.4" }
%"class.i18n::phonenumbers::Lock" = type { %"class.std::__1::mutex" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.i18n::phonenumbers::scoped_ptr.4" = type { %"class.i18n::phonenumbers::scoped_ptr_impl.5" }
%"class.i18n::phonenumbers::scoped_ptr_impl.5" = type { %"struct.i18n::phonenumbers::scoped_ptr_impl<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, const i18n::phonenumbers::RegExp *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, const i18n::phonenumbers::RegExp *> > >, i18n::phonenumbers::DefaultDeleter<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, const i18n::phonenumbers::RegExp *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, const i18n::phonenumbers::RegExp *> > > > >::Data" }
%"struct.i18n::phonenumbers::scoped_ptr_impl<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, const i18n::phonenumbers::RegExp *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, const i18n::phonenumbers::RegExp *> > >, i18n::phonenumbers::DefaultDeleter<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, const i18n::phonenumbers::RegExp *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, const i18n::phonenumbers::RegExp *> > > > >::Data" = type { %"class.std::__1::map"* }
%"class.std::__1::map" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.i18n::phonenumbers::PhoneNumberDesc" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.i18n::phonenumbers::RegExp" = type { i32 (...)** }
%"class.i18n::phonenumbers::RegExpInput" = type { i32 (...)** }

@_ZTVN4i18n12phonenumbers17RegexBasedMatcherE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.i18n::phonenumbers::RegexBasedMatcher"*)* @_ZN4i18n12phonenumbers17RegexBasedMatcherD2Ev to i8*), i8* bitcast (void (%"class.i18n::phonenumbers::RegexBasedMatcher"*)* @_ZN4i18n12phonenumbers17RegexBasedMatcherD0Ev to i8*), i8* bitcast (i1 (%"class.i18n::phonenumbers::RegexBasedMatcher"*, %"class.std::__1::basic_string"*, %"class.i18n::phonenumbers::PhoneNumberDesc"*, i1)* @_ZNK4i18n12phonenumbers17RegexBasedMatcher19MatchNationalNumberERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS0_15PhoneNumberDescEb to i8*)] }, align 8
@_ZTVN4i18n12phonenumbers16ICURegExpFactoryE = external unnamed_addr constant { [6 x i8*] }, align 8

@_ZN4i18n12phonenumbers17RegexBasedMatcherC1Ev = hidden unnamed_addr alias void (%"class.i18n::phonenumbers::RegexBasedMatcher"*), void (%"class.i18n::phonenumbers::RegexBasedMatcher"*)* @_ZN4i18n12phonenumbers17RegexBasedMatcherC2Ev
@_ZN4i18n12phonenumbers17RegexBasedMatcherD1Ev = hidden unnamed_addr alias void (%"class.i18n::phonenumbers::RegexBasedMatcher"*), void (%"class.i18n::phonenumbers::RegexBasedMatcher"*)* @_ZN4i18n12phonenumbers17RegexBasedMatcherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12phonenumbers17RegexBasedMatcherC2Ev(%"class.i18n::phonenumbers::RegexBasedMatcher"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4i18n12phonenumbers17RegexBasedMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call i8* @_Znwm(i64 8) #5
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4i18n12phonenumbers16ICURegExpFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast i8* %3 to %"class.i18n::phonenumbers::AbstractRegExpFactory"*
  %6 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = bitcast %"class.i18n::phonenumbers::AbstractRegExpFactory"** %6 to i8**
  store i8* %3, i8** %7, align 8
  %8 = tail call i8* @_Znwm(i64 56) #5
  %9 = bitcast i8* %8 to %"class.i18n::phonenumbers::RegExpCache"*
  tail call void @_ZN4i18n12phonenumbers11RegExpCacheC1ERKNS0_21AbstractRegExpFactoryEm(%"class.i18n::phonenumbers::RegExpCache"* nonnull %9, %"class.i18n::phonenumbers::AbstractRegExpFactory"* nonnull dereferenceable(8) %5, i64 128) #6
  %10 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = bitcast %"class.i18n::phonenumbers::RegExpCache"** %10 to i8**
  store i8* %8, i8** %11, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN4i18n12phonenumbers11RegExpCacheC1ERKNS0_21AbstractRegExpFactoryEm(%"class.i18n::phonenumbers::RegExpCache"*, %"class.i18n::phonenumbers::AbstractRegExpFactory"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12phonenumbers17RegexBasedMatcherD2Ev(%"class.i18n::phonenumbers::RegexBasedMatcher"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4i18n12phonenumbers17RegexBasedMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.i18n::phonenumbers::RegExpCache"*, %"class.i18n::phonenumbers::RegExpCache"** %3, align 8
  %5 = icmp eq %"class.i18n::phonenumbers::RegExpCache"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN4i18n12phonenumbers11RegExpCacheD1Ev(%"class.i18n::phonenumbers::RegExpCache"* nonnull %4) #6
  %7 = bitcast %"class.i18n::phonenumbers::RegExpCache"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.i18n::phonenumbers::AbstractRegExpFactory"** %9, align 8
  %11 = icmp eq %"class.i18n::phonenumbers::AbstractRegExpFactory"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.i18n::phonenumbers::AbstractRegExpFactory"* %10 to void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)***
  %14 = load void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)**, void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)*, void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)** %14, i64 1
  %16 = load void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)*, void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)** %15, align 8
  tail call void %16(%"class.i18n::phonenumbers::AbstractRegExpFactory"* nonnull %10) #6
  br label %17

17:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12phonenumbers17RegexBasedMatcherD0Ev(%"class.i18n::phonenumbers::RegexBasedMatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4i18n12phonenumbers17RegexBasedMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.i18n::phonenumbers::RegExpCache"*, %"class.i18n::phonenumbers::RegExpCache"** %3, align 8
  %5 = icmp eq %"class.i18n::phonenumbers::RegExpCache"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN4i18n12phonenumbers11RegExpCacheD1Ev(%"class.i18n::phonenumbers::RegExpCache"* nonnull %4) #6
  %7 = bitcast %"class.i18n::phonenumbers::RegExpCache"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #5
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.i18n::phonenumbers::AbstractRegExpFactory"** %9, align 8
  %11 = icmp eq %"class.i18n::phonenumbers::AbstractRegExpFactory"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.i18n::phonenumbers::AbstractRegExpFactory"* %10 to void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)***
  %14 = load void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)**, void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)*, void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)** %14, i64 1
  %16 = load void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)*, void (%"class.i18n::phonenumbers::AbstractRegExpFactory"*)** %15, align 8
  tail call void %16(%"class.i18n::phonenumbers::AbstractRegExpFactory"* nonnull %10) #6
  br label %17

17:                                               ; preds = %8, %12
  %18 = bitcast %"class.i18n::phonenumbers::RegexBasedMatcher"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4i18n12phonenumbers17RegexBasedMatcher19MatchNationalNumberERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS0_15PhoneNumberDescEb(%"class.i18n::phonenumbers::RegexBasedMatcher"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %"class.i18n::phonenumbers::PhoneNumberDesc"* nocapture readonly dereferenceable(72), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.i18n::phonenumbers::PhoneNumberDesc", %"class.i18n::phonenumbers::PhoneNumberDesc"* %2, i64 0, i32 5, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %4
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %48, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.i18n::phonenumbers::RegExpCache"*, %"class.i18n::phonenumbers::RegExpCache"** %20, align 8
  %22 = tail call dereferenceable(8) %"class.i18n::phonenumbers::RegExp"* @_ZN4i18n12phonenumbers11RegExpCache9GetRegExpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::phonenumbers::RegExpCache"* %21, %"class.std::__1::basic_string"* dereferenceable(24) %6) #6
  %23 = bitcast %"class.i18n::phonenumbers::RegExp"* %22 to i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)***
  %24 = load i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)**, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)*, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)** %24, i64 3
  %26 = load i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)*, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.i18n::phonenumbers::RegExp"* %22, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext true, %"class.std::__1::basic_string"* null) #6
  br i1 %27, label %48, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.i18n::phonenumbers::AbstractRegExpFactory"** %29, align 8
  %31 = bitcast %"class.i18n::phonenumbers::AbstractRegExpFactory"* %30 to %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)***
  %32 = load %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)**, %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)*, %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)** %32, i64 2
  %34 = load %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)*, %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)** %33, align 8
  %35 = tail call %"class.i18n::phonenumbers::RegExpInput"* %34(%"class.i18n::phonenumbers::AbstractRegExpFactory"* %30, %"class.std::__1::basic_string"* dereferenceable(24) %1) #6
  %36 = bitcast %"class.i18n::phonenumbers::RegExp"* %22 to i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %37 = load i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %37, i64 2
  %39 = load i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.i18n::phonenumbers::RegExp"* %22, %"class.i18n::phonenumbers::RegExpInput"* %35, i1 zeroext true, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* null) #6
  %41 = and i1 %40, %3
  %42 = icmp eq %"class.i18n::phonenumbers::RegExpInput"* %35, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %28
  %44 = bitcast %"class.i18n::phonenumbers::RegExpInput"* %35 to void (%"class.i18n::phonenumbers::RegExpInput"*)***
  %45 = load void (%"class.i18n::phonenumbers::RegExpInput"*)**, void (%"class.i18n::phonenumbers::RegExpInput"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.i18n::phonenumbers::RegExpInput"*)*, void (%"class.i18n::phonenumbers::RegExpInput"*)** %45, i64 1
  %47 = load void (%"class.i18n::phonenumbers::RegExpInput"*)*, void (%"class.i18n::phonenumbers::RegExpInput"*)** %46, align 8
  tail call void %47(%"class.i18n::phonenumbers::RegExpInput"* nonnull %35) #6
  br label %48

48:                                               ; preds = %43, %28, %19, %16
  %49 = phi i1 [ false, %16 ], [ true, %19 ], [ %41, %28 ], [ %41, %43 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4i18n12phonenumbers17RegexBasedMatcher5MatchERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_b(%"class.i18n::phonenumbers::RegexBasedMatcher"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.i18n::phonenumbers::RegExpCache"*, %"class.i18n::phonenumbers::RegExpCache"** %5, align 8
  %7 = tail call dereferenceable(8) %"class.i18n::phonenumbers::RegExp"* @_ZN4i18n12phonenumbers11RegExpCache9GetRegExpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::phonenumbers::RegExpCache"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %2) #6
  %8 = bitcast %"class.i18n::phonenumbers::RegExp"* %7 to i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)***
  %9 = load i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)**, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)*, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)** %9, i64 3
  %11 = load i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)*, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::basic_string"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.i18n::phonenumbers::RegExp"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext true, %"class.std::__1::basic_string"* null) #6
  br i1 %12, label %33, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.i18n::phonenumbers::RegexBasedMatcher", %"class.i18n::phonenumbers::RegexBasedMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.i18n::phonenumbers::AbstractRegExpFactory"** %14, align 8
  %16 = bitcast %"class.i18n::phonenumbers::AbstractRegExpFactory"* %15 to %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)***
  %17 = load %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)**, %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)*, %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)** %17, i64 2
  %19 = load %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)*, %"class.i18n::phonenumbers::RegExpInput"* (%"class.i18n::phonenumbers::AbstractRegExpFactory"*, %"class.std::__1::basic_string"*)** %18, align 8
  %20 = tail call %"class.i18n::phonenumbers::RegExpInput"* %19(%"class.i18n::phonenumbers::AbstractRegExpFactory"* %15, %"class.std::__1::basic_string"* dereferenceable(24) %1) #6
  %21 = bitcast %"class.i18n::phonenumbers::RegExp"* %7 to i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %22 = load i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %22, i64 2
  %24 = load i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.i18n::phonenumbers::RegExp"*, %"class.i18n::phonenumbers::RegExpInput"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.i18n::phonenumbers::RegExp"* %7, %"class.i18n::phonenumbers::RegExpInput"* %20, i1 zeroext true, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* null) #6
  %26 = and i1 %25, %3
  %27 = icmp eq %"class.i18n::phonenumbers::RegExpInput"* %20, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %13
  %29 = bitcast %"class.i18n::phonenumbers::RegExpInput"* %20 to void (%"class.i18n::phonenumbers::RegExpInput"*)***
  %30 = load void (%"class.i18n::phonenumbers::RegExpInput"*)**, void (%"class.i18n::phonenumbers::RegExpInput"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.i18n::phonenumbers::RegExpInput"*)*, void (%"class.i18n::phonenumbers::RegExpInput"*)** %30, i64 1
  %32 = load void (%"class.i18n::phonenumbers::RegExpInput"*)*, void (%"class.i18n::phonenumbers::RegExpInput"*)** %31, align 8
  tail call void %32(%"class.i18n::phonenumbers::RegExpInput"* nonnull %20) #6
  br label %33

33:                                               ; preds = %28, %13, %4
  %34 = phi i1 [ true, %4 ], [ %26, %13 ], [ %26, %28 ]
  ret i1 %34
}

declare dereferenceable(8) %"class.i18n::phonenumbers::RegExp"* @_ZN4i18n12phonenumbers11RegExpCache9GetRegExpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::phonenumbers::RegExpCache"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4i18n12phonenumbers11RegExpCacheD1Ev(%"class.i18n::phonenumbers::RegExpCache"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
