; ModuleID = 'gen/headless/public/devtools/domains/accessibility.cc'
source_filename = "gen/headless/public/devtools/domains/accessibility.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::accessibility::Domain" = type { %"class.headless::internal::MessageDispatcher"* }
%"class.headless::internal::MessageDispatcher" = type { i32 (...)** }
%"class.headless::accessibility::ExperimentalDomain" = type { %"class.headless::accessibility::Domain" }
%"class.headless::accessibility::DisableParams" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.37" = type { %"class.base::internal::CallbackBase" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"union.absl::variant_internal::DestructibleUnionImpl.11" }
%"union.absl::variant_internal::DestructibleUnionImpl.11" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.headless::accessibility::DisableResult"* }
%"class.headless::accessibility::DisableResult" = type { i8 }
%"class.headless::ErrorReporter" = type { %"class.std::__1::vector.90", %"class.std::__1::vector.97" }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i8**, i8**, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i8** }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::basic_string"* }
%"class.headless::accessibility::EnableParams" = type { i8 }
%"class.base::OnceCallback.44" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.headless::accessibility::EnableResult"* }
%"class.headless::accessibility::EnableResult" = type { i8 }
%"class.headless::accessibility::GetPartialAXTreeParams" = type <{ %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.49", %"class.absl::optional.54", [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.48 }
%union.anon.48 = type { i32 }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { i8 }
%"class.base::OnceCallback.62" = type { %"class.base::internal::CallbackBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.headless::accessibility::GetPartialAXTreeResult" = type { %"class.std::__1::vector.113" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"*, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.headless::accessibility::AXNode"* }
%"class.headless::accessibility::AXNode" = type { %"class.std::__1::basic_string", i8, %"class.absl::optional.118", %"class.absl::optional.187", %"class.absl::optional.187", %"class.absl::optional.187", %"class.absl::optional.187", %"class.absl::optional.118", %"class.absl::optional.192", %"class.absl::optional" }
%"class.absl::optional.187" = type { %"class.absl::optional_internal::optional_data.188" }
%"class.absl::optional_internal::optional_data.188" = type { %"class.absl::optional_internal::optional_data_base.189" }
%"class.absl::optional_internal::optional_data_base.189" = type { %"class.absl::optional_internal::optional_data_dtor_base.190" }
%"class.absl::optional_internal::optional_data_dtor_base.190" = type { i8, %union.anon.191 }
%union.anon.191 = type { %"class.std::__1::unique_ptr.128" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.headless::accessibility::AXValue"* }
%"class.headless::accessibility::AXValue" = type { i32, %"class.absl::optional.131", %"class.absl::optional.140", %"class.absl::optional.158" }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::Value"* }
%"class.absl::optional.140" = type { %"class.absl::optional_internal::optional_data.141" }
%"class.absl::optional_internal::optional_data.141" = type { %"class.absl::optional_internal::optional_data_base.142" }
%"class.absl::optional_internal::optional_data_base.142" = type { %"class.absl::optional_internal::optional_data_dtor_base.143" }
%"class.absl::optional_internal::optional_data_dtor_base.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { %"class.std::__1::vector.145" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"*, %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.headless::accessibility::AXRelatedNode"* }
%"class.headless::accessibility::AXRelatedNode" = type { i32, %"class.absl::optional.49", %"class.absl::optional.49" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.std::__1::unique_ptr.147"* }
%"class.absl::optional.158" = type { %"class.absl::optional_internal::optional_data.159" }
%"class.absl::optional_internal::optional_data.159" = type { %"class.absl::optional_internal::optional_data_base.160" }
%"class.absl::optional_internal::optional_data_base.160" = type { %"class.absl::optional_internal::optional_data_dtor_base.161" }
%"class.absl::optional_internal::optional_data_dtor_base.161" = type { i8, %union.anon.162 }
%union.anon.162 = type { %"class.std::__1::vector.163" }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"*, %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.headless::accessibility::AXValueSource"* }
%"class.headless::accessibility::AXValueSource" = type { i32, %"class.absl::optional.187", %"class.absl::optional.49", %"class.absl::optional.187", %"class.absl::optional.54", %"class.absl::optional.208", %"class.absl::optional.187", %"class.absl::optional.54", %"class.absl::optional.49" }
%"class.absl::optional.208" = type { %"class.absl::optional_internal::optional_data.209" }
%"class.absl::optional_internal::optional_data.209" = type { %"class.absl::optional_internal::optional_data_base.210" }
%"class.absl::optional_internal::optional_data_base.210" = type { %"class.absl::optional_internal::optional_data_dtor_base.211" }
%"class.absl::optional_internal::optional_data_dtor_base.211" = type { i8, %union.anon.212 }
%union.anon.212 = type { i32 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.std::__1::unique_ptr.165"* }
%"class.absl::optional.118" = type { %"class.absl::optional_internal::optional_data.119" }
%"class.absl::optional_internal::optional_data.119" = type { %"class.absl::optional_internal::optional_data_base.120" }
%"class.absl::optional_internal::optional_data_base.120" = type { %"class.absl::optional_internal::optional_data_dtor_base.121" }
%"class.absl::optional_internal::optional_data_dtor_base.121" = type { i8, %union.anon.122 }
%union.anon.122 = type { %"class.std::__1::vector.123" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.std::__1::unique_ptr.125"*, %"class.std::__1::unique_ptr.125"*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.headless::accessibility::AXProperty"* }
%"class.headless::accessibility::AXProperty" = type { i32, %"class.std::__1::unique_ptr.128" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.std::__1::unique_ptr.125"* }
%"class.absl::optional.192" = type { %"class.absl::optional_internal::optional_data.193" }
%"class.absl::optional_internal::optional_data.193" = type { %"class.absl::optional_internal::optional_data_base.194" }
%"class.absl::optional_internal::optional_data_base.194" = type { %"class.absl::optional_internal::optional_data_dtor_base.195" }
%"class.absl::optional_internal::optional_data_dtor_base.195" = type { i8, %union.anon.196 }
%union.anon.196 = type { %"class.std::__1::vector.97" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.std::__1::unique_ptr.115"* }
%"class.headless::accessibility::GetFullAXTreeParams" = type { %"class.absl::optional" }
%"class.base::OnceCallback.69" = type { %"class.base::internal::CallbackBase" }
%"class.headless::accessibility::GetFullAXTreeResult" = type { %"class.std::__1::vector.113" }
%"class.headless::accessibility::GetChildAXNodesParams" = type { %"class.std::__1::basic_string" }
%"class.base::OnceCallback.76" = type { %"class.base::internal::CallbackBase" }
%"class.headless::accessibility::GetChildAXNodesResult" = type { %"class.std::__1::vector.113" }
%"class.headless::accessibility::QueryAXTreeParams" = type { %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.49", %"class.absl::optional.49", %"class.absl::optional.49" }
%"class.base::OnceCallback.83" = type { %"class.base::internal::CallbackBase" }
%"class.headless::accessibility::QueryAXTreeResult" = type { %"class.std::__1::vector.113" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.headless::accessibility::GetPartialAXTreeResult"* }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.headless::accessibility::GetFullAXTreeResult"* }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.headless::accessibility::GetChildAXNodesResult"* }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.headless::accessibility::QueryAXTreeResult"* }

$_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_ = comdat any

$_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_ = comdat any

$_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS1_14default_deleteIS5_EEEEEE3RunES8_ = comdat any

$_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_ = comdat any

$_ZN8headless13accessibility6AXNodeD2Ev = comdat any

$_ZN8headless13accessibility7AXValueD2Ev = comdat any

$_ZN8headless13accessibility13AXValueSourceD2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [22 x i8] c"Accessibility.disable\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Accessibility.enable\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"Accessibility.getPartialAXTree\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"Accessibility.getFullAXTree\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"Accessibility.getChildAXNodes\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"Accessibility.queryAXTree\00", align 1

@_ZN8headless13accessibility6DomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::accessibility::Domain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::accessibility::Domain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless13accessibility6DomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless13accessibility6DomainD1Ev = hidden unnamed_addr alias void (%"class.headless::accessibility::Domain"*), void (%"class.headless::accessibility::Domain"*)* @_ZN8headless13accessibility6DomainD2Ev
@_ZN8headless13accessibility18ExperimentalDomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::accessibility::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::accessibility::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless13accessibility18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless13accessibility18ExperimentalDomainD2Ev = hidden unnamed_addr alias void (%"class.headless::accessibility::ExperimentalDomain"*), bitcast (void (%"class.headless::accessibility::Domain"*)* @_ZN8headless13accessibility6DomainD2Ev to void (%"class.headless::accessibility::ExperimentalDomain"*)*)
@_ZN8headless13accessibility18ExperimentalDomainD1Ev = hidden unnamed_addr alias void (%"class.headless::accessibility::ExperimentalDomain"*), bitcast (void (%"class.headless::accessibility::Domain"*)* @_ZN8headless13accessibility6DomainD2Ev to void (%"class.headless::accessibility::ExperimentalDomain"*)*)

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.headless::accessibility::ExperimentalDomain"* @_ZN8headless13accessibility6Domain15GetExperimentalEv(%"class.headless::accessibility::Domain"* readnone) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.headless::accessibility::Domain"* %0 to %"class.headless::accessibility::ExperimentalDomain"*
  ret %"class.headless::accessibility::ExperimentalDomain"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility18ExperimentalDomain7DisableENSt3__110unique_ptrINS0_13DisableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_13DisableResultENS5_ISA_EEEEEEE(%"class.headless::accessibility::ExperimentalDomain"* nocapture readonly, %"class.headless::accessibility::DisableParams"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::accessibility::ExperimentalDomain", %"class.headless::accessibility::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless13accessibility13DisableParams9SerializeEv(%"class.headless::accessibility::DisableParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !2
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !2
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*, %"class.base::Value"*)* @_ZN8headless13accessibility6Domain21HandleDisableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_13DisableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !2
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !2
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !2
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !2
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::accessibility::DisableParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::accessibility::DisableParams", %"class.headless::accessibility::DisableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless13accessibility13DisableParams9SerializeEv(%"class.headless::accessibility::DisableParams"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility6Domain21HandleDisableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_13DisableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.84", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.std::__1::unique_ptr.84", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.84"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::accessibility::DisableResult"* null, %"class.headless::accessibility::DisableResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.84"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.84"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.84"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.84"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %26 = load %"class.headless::accessibility::DisableResult"*, %"class.headless::accessibility::DisableResult"** %19, align 8
  store %"class.headless::accessibility::DisableResult"* null, %"class.headless::accessibility::DisableResult"** %19, align 8
  %27 = icmp eq %"class.headless::accessibility::DisableResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::accessibility::DisableResult", %"class.headless::accessibility::DisableResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #8
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  %34 = call %"class.headless::accessibility::DisableResult"* @_ZN8headless13accessibility13DisableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #8
  %35 = bitcast %"class.std::__1::unique_ptr.84"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::accessibility::DisableResult"* %34, %"class.headless::accessibility::DisableResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.84"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.84"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.84"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.84"* nonnull dereferenceable(8) %5) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %46 = load %"class.headless::accessibility::DisableResult"*, %"class.headless::accessibility::DisableResult"** %36, align 8
  store %"class.headless::accessibility::DisableResult"* null, %"class.headless::accessibility::DisableResult"** %36, align 8
  %47 = icmp eq %"class.headless::accessibility::DisableResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::accessibility::DisableResult", %"class.headless::accessibility::DisableResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #8
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility18ExperimentalDomain6EnableENSt3__110unique_ptrINS0_12EnableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_12EnableResultENS5_ISA_EEEEEEE(%"class.headless::accessibility::ExperimentalDomain"* nocapture readonly, %"class.headless::accessibility::EnableParams"*, %"class.base::OnceCallback.44"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::accessibility::ExperimentalDomain", %"class.headless::accessibility::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless13accessibility12EnableParams9SerializeEv(%"class.headless::accessibility::EnableParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !7
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !7
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.44"*, %"class.base::Value"*)* @_ZN8headless13accessibility6Domain20HandleEnableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_12EnableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !7
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.44"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !7
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !7
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !7
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !7
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::accessibility::EnableParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::accessibility::EnableParams", %"class.headless::accessibility::EnableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless13accessibility12EnableParams9SerializeEv(%"class.headless::accessibility::EnableParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility6Domain20HandleEnableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_12EnableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.44"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.104", align 8
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = alloca %"class.std::__1::unique_ptr.104", align 8
  %6 = alloca %"class.base::OnceCallback.44", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.104"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.104"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::accessibility::EnableResult"* null, %"class.headless::accessibility::EnableResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.44"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = bitcast %"class.base::OnceCallback.44"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.104"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.104"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.104"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.104"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %26 = load %"class.headless::accessibility::EnableResult"*, %"class.headless::accessibility::EnableResult"** %19, align 8
  store %"class.headless::accessibility::EnableResult"* null, %"class.headless::accessibility::EnableResult"** %19, align 8
  %27 = icmp eq %"class.headless::accessibility::EnableResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::accessibility::EnableResult", %"class.headless::accessibility::EnableResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #8
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  %34 = call %"class.headless::accessibility::EnableResult"* @_ZN8headless13accessibility12EnableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #8
  %35 = bitcast %"class.std::__1::unique_ptr.104"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.104"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::accessibility::EnableResult"* %34, %"class.headless::accessibility::EnableResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.44"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = bitcast %"class.base::OnceCallback.44"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.44"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.104"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.104"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.104"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.104"* nonnull dereferenceable(8) %5) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %46 = load %"class.headless::accessibility::EnableResult"*, %"class.headless::accessibility::EnableResult"** %36, align 8
  store %"class.headless::accessibility::EnableResult"* null, %"class.headless::accessibility::EnableResult"** %36, align 8
  %47 = icmp eq %"class.headless::accessibility::EnableResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::accessibility::EnableResult", %"class.headless::accessibility::EnableResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #8
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility18ExperimentalDomain16GetPartialAXTreeENSt3__110unique_ptrINS0_22GetPartialAXTreeParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_22GetPartialAXTreeResultENS5_ISA_EEEEEEE(%"class.headless::accessibility::ExperimentalDomain"* nocapture readonly, %"class.headless::accessibility::GetPartialAXTreeParams"*, %"class.base::OnceCallback.62"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::accessibility::ExperimentalDomain", %"class.headless::accessibility::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless13accessibility22GetPartialAXTreeParams9SerializeEv(%"class.headless::accessibility::GetPartialAXTreeParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !12
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !12
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.62"*, %"class.base::Value"*)* @_ZN8headless13accessibility6Domain30HandleGetPartialAXTreeResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_22GetPartialAXTreeResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !12
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.62", %"class.base::OnceCallback.62"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.62"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !12
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !12
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !12
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !12
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::accessibility::GetPartialAXTreeParams"* %1, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::accessibility::GetPartialAXTreeParams", %"class.headless::accessibility::GetPartialAXTreeParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !17
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.headless::accessibility::GetPartialAXTreeParams", %"class.headless::accessibility::GetPartialAXTreeParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %33, %27, %23
  %37 = getelementptr inbounds %"class.headless::accessibility::GetPartialAXTreeParams", %"class.headless::accessibility::GetPartialAXTreeParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %3, %36
  ret void
}

declare %"class.base::Value"* @_ZNK8headless13accessibility22GetPartialAXTreeParams9SerializeEv(%"class.headless::accessibility::GetPartialAXTreeParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility6Domain30HandleGetPartialAXTreeResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_22GetPartialAXTreeResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.62"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = getelementptr inbounds %"class.base::OnceCallback.62", %"class.base::OnceCallback.62"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.62"* %0, %"class.headless::accessibility::GetPartialAXTreeResult"* null)
  br label %17

13:                                               ; preds = %7
  %14 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  %15 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #8
  %16 = call %"class.headless::accessibility::GetPartialAXTreeResult"* @_ZN8headless13accessibility22GetPartialAXTreeResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #8
  call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.62"* %0, %"class.headless::accessibility::GetPartialAXTreeResult"* %16)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %17

17:                                               ; preds = %2, %13, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility18ExperimentalDomain13GetFullAXTreeENSt3__110unique_ptrINS0_19GetFullAXTreeParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_19GetFullAXTreeResultENS5_ISA_EEEEEEE(%"class.headless::accessibility::ExperimentalDomain"* nocapture readonly, %"class.headless::accessibility::GetFullAXTreeParams"*, %"class.base::OnceCallback.69"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::accessibility::ExperimentalDomain", %"class.headless::accessibility::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless13accessibility19GetFullAXTreeParams9SerializeEv(%"class.headless::accessibility::GetFullAXTreeParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !18
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !18
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.69"*, %"class.base::Value"*)* @_ZN8headless13accessibility6Domain27HandleGetFullAXTreeResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_19GetFullAXTreeResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !18
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.69", %"class.base::OnceCallback.69"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.69"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !18
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !18
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !18
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !18
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::accessibility::GetFullAXTreeParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::accessibility::GetFullAXTreeParams", %"class.headless::accessibility::GetFullAXTreeParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless13accessibility19GetFullAXTreeParams9SerializeEv(%"class.headless::accessibility::GetFullAXTreeParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility6Domain27HandleGetFullAXTreeResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_19GetFullAXTreeResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.69"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = getelementptr inbounds %"class.base::OnceCallback.69", %"class.base::OnceCallback.69"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.69"* %0, %"class.headless::accessibility::GetFullAXTreeResult"* null)
  br label %17

13:                                               ; preds = %7
  %14 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  %15 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #8
  %16 = call %"class.headless::accessibility::GetFullAXTreeResult"* @_ZN8headless13accessibility19GetFullAXTreeResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #8
  call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.69"* %0, %"class.headless::accessibility::GetFullAXTreeResult"* %16)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %17

17:                                               ; preds = %2, %13, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility18ExperimentalDomain15GetChildAXNodesENSt3__110unique_ptrINS0_21GetChildAXNodesParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_21GetChildAXNodesResultENS5_ISA_EEEEEEE(%"class.headless::accessibility::ExperimentalDomain"* nocapture readonly, %"class.headless::accessibility::GetChildAXNodesParams"*, %"class.base::OnceCallback.76"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::accessibility::ExperimentalDomain", %"class.headless::accessibility::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless13accessibility21GetChildAXNodesParams9SerializeEv(%"class.headless::accessibility::GetChildAXNodesParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !23
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !23
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.76"*, %"class.base::Value"*)* @_ZN8headless13accessibility6Domain29HandleGetChildAXNodesResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_21GetChildAXNodesResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !23
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.76", %"class.base::OnceCallback.76"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.76"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !23
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !23
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !23
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !23
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::accessibility::GetChildAXNodesParams"* %1, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %3
  %24 = bitcast %"class.headless::accessibility::GetChildAXNodesParams"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.headless::accessibility::GetChildAXNodesParams", %"class.headless::accessibility::GetChildAXNodesParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %28, %23
  %32 = bitcast %"class.headless::accessibility::GetChildAXNodesParams"* %1 to i8*
  call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %3, %31
  ret void
}

declare %"class.base::Value"* @_ZNK8headless13accessibility21GetChildAXNodesParams9SerializeEv(%"class.headless::accessibility::GetChildAXNodesParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility6Domain29HandleGetChildAXNodesResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_21GetChildAXNodesResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.76"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = getelementptr inbounds %"class.base::OnceCallback.76", %"class.base::OnceCallback.76"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.76"* %0, %"class.headless::accessibility::GetChildAXNodesResult"* null)
  br label %17

13:                                               ; preds = %7
  %14 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  %15 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #8
  %16 = call %"class.headless::accessibility::GetChildAXNodesResult"* @_ZN8headless13accessibility21GetChildAXNodesResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #8
  call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.76"* %0, %"class.headless::accessibility::GetChildAXNodesResult"* %16)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %17

17:                                               ; preds = %2, %13, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility18ExperimentalDomain11QueryAXTreeENSt3__110unique_ptrINS0_17QueryAXTreeParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_17QueryAXTreeResultENS5_ISA_EEEEEEE(%"class.headless::accessibility::ExperimentalDomain"* nocapture readonly, %"class.headless::accessibility::QueryAXTreeParams"*, %"class.base::OnceCallback.83"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = getelementptr inbounds %"class.headless::accessibility::ExperimentalDomain", %"class.headless::accessibility::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless13accessibility17QueryAXTreeParams9SerializeEv(%"class.headless::accessibility::QueryAXTreeParams"* %1) #8
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !28
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !28
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.83"*, %"class.base::Value"*)* @_ZN8headless13accessibility6Domain25HandleQueryAXTreeResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_17QueryAXTreeResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !28
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.83", %"class.base::OnceCallback.83"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.83"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !28
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !28
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !28
  %17 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !28
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.37"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.37"* nonnull %4) #8
  %21 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  %22 = icmp eq %"class.headless::accessibility::QueryAXTreeParams"* %1, null
  br i1 %22, label %66, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::accessibility::QueryAXTreeParams", %"class.headless::accessibility::QueryAXTreeParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !17
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.headless::accessibility::QueryAXTreeParams", %"class.headless::accessibility::QueryAXTreeParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %33, %27
  store i8 0, i8* %24, align 8
  br label %37

37:                                               ; preds = %36, %23
  %38 = getelementptr inbounds %"class.headless::accessibility::QueryAXTreeParams", %"class.headless::accessibility::QueryAXTreeParams"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !17
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.headless::accessibility::QueryAXTreeParams", %"class.headless::accessibility::QueryAXTreeParams"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %47, %41
  store i8 0, i8* %38, align 8
  br label %51

51:                                               ; preds = %50, %37
  %52 = getelementptr inbounds %"class.headless::accessibility::QueryAXTreeParams", %"class.headless::accessibility::QueryAXTreeParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 8, !range !17
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.headless::accessibility::QueryAXTreeParams", %"class.headless::accessibility::QueryAXTreeParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #9
  br label %64

64:                                               ; preds = %51, %55, %61
  %65 = getelementptr inbounds %"class.headless::accessibility::QueryAXTreeParams", %"class.headless::accessibility::QueryAXTreeParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %3, %64
  ret void
}

declare %"class.base::Value"* @_ZNK8headless13accessibility17QueryAXTreeParams9SerializeEv(%"class.headless::accessibility::QueryAXTreeParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless13accessibility6Domain25HandleQueryAXTreeResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_17QueryAXTreeResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.83"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = getelementptr inbounds %"class.base::OnceCallback.83", %"class.base::OnceCallback.83"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.83"* %0, %"class.headless::accessibility::QueryAXTreeResult"* null)
  br label %17

13:                                               ; preds = %7
  %14 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  %15 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #8
  %16 = call %"class.headless::accessibility::QueryAXTreeResult"* @_ZN8headless13accessibility17QueryAXTreeResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #8
  call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.83"* %0, %"class.headless::accessibility::QueryAXTreeResult"* %16)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %17

17:                                               ; preds = %2, %13, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #2

declare %"class.headless::accessibility::DisableResult"* @_ZN8headless13accessibility13DisableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #4

declare %"class.headless::accessibility::EnableResult"* @_ZN8headless13accessibility12EnableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.62"*, %"class.headless::accessibility::GetPartialAXTreeResult"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.110", align 8
  %4 = alloca %"class.base::OnceCallback.62", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::accessibility::GetPartialAXTreeResult"* %1, %"class.headless::accessibility::GetPartialAXTreeResult"** %5, align 8
  %6 = bitcast %"class.base::OnceCallback.62"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.base::OnceCallback.62", %"class.base::OnceCallback.62"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.62"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.62"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.62", %"class.base::OnceCallback.62"* %4, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.110"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.110"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.110"*)** %14, align 8
  call void %15(%"class.base::internal::BindStateBase"* %12, %"class.std::__1::unique_ptr.110"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %16 = load %"class.headless::accessibility::GetPartialAXTreeResult"*, %"class.headless::accessibility::GetPartialAXTreeResult"** %5, align 8
  store %"class.headless::accessibility::GetPartialAXTreeResult"* null, %"class.headless::accessibility::GetPartialAXTreeResult"** %5, align 8
  %17 = icmp eq %"class.headless::accessibility::GetPartialAXTreeResult"* %16, null
  br i1 %17, label %44, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.headless::accessibility::GetPartialAXTreeResult", %"class.headless::accessibility::GetPartialAXTreeResult"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.115"* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::unique_ptr.115"* %20 to i8*
  %24 = getelementptr inbounds %"class.headless::accessibility::GetPartialAXTreeResult", %"class.headless::accessibility::GetPartialAXTreeResult"* %16, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.115"* %25, %20
  br i1 %26, label %40, label %27

27:                                               ; preds = %22, %35
  %28 = phi %"class.std::__1::unique_ptr.115"* [ %29, %35 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %28, i64 -1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.headless::accessibility::AXNode"*, %"class.headless::accessibility::AXNode"** %30, align 8
  store %"class.headless::accessibility::AXNode"* null, %"class.headless::accessibility::AXNode"** %30, align 8
  %32 = icmp eq %"class.headless::accessibility::AXNode"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  call void @_ZN8headless13accessibility6AXNodeD2Ev(%"class.headless::accessibility::AXNode"* nonnull %31) #8
  %34 = bitcast %"class.headless::accessibility::AXNode"* %31 to i8*
  call void @_ZdlPv(i8* %34) #9
  br label %35

35:                                               ; preds = %33, %27
  %36 = icmp eq %"class.std::__1::unique_ptr.115"* %29, %20
  br i1 %36, label %37, label %27

37:                                               ; preds = %35
  %38 = bitcast %"class.headless::accessibility::GetPartialAXTreeResult"* %16 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %22
  %41 = phi i8* [ %39, %37 ], [ %23, %22 ]
  store %"class.std::__1::unique_ptr.115"* %20, %"class.std::__1::unique_ptr.115"** %24, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %40, %18
  %43 = bitcast %"class.headless::accessibility::GetPartialAXTreeResult"* %16 to i8*
  call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %2, %42
  ret void
}

declare %"class.headless::accessibility::GetPartialAXTreeResult"* @_ZN8headless13accessibility22GetPartialAXTreeResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.69"*, %"class.headless::accessibility::GetFullAXTreeResult"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.213", align 8
  %4 = alloca %"class.base::OnceCallback.69", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::accessibility::GetFullAXTreeResult"* %1, %"class.headless::accessibility::GetFullAXTreeResult"** %5, align 8
  %6 = bitcast %"class.base::OnceCallback.69"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.base::OnceCallback.69", %"class.base::OnceCallback.69"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.69"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.69"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.69", %"class.base::OnceCallback.69"* %4, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.213"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.213"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.213"*)** %14, align 8
  call void %15(%"class.base::internal::BindStateBase"* %12, %"class.std::__1::unique_ptr.213"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %16 = load %"class.headless::accessibility::GetFullAXTreeResult"*, %"class.headless::accessibility::GetFullAXTreeResult"** %5, align 8
  store %"class.headless::accessibility::GetFullAXTreeResult"* null, %"class.headless::accessibility::GetFullAXTreeResult"** %5, align 8
  %17 = icmp eq %"class.headless::accessibility::GetFullAXTreeResult"* %16, null
  br i1 %17, label %44, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.headless::accessibility::GetFullAXTreeResult", %"class.headless::accessibility::GetFullAXTreeResult"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.115"* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::unique_ptr.115"* %20 to i8*
  %24 = getelementptr inbounds %"class.headless::accessibility::GetFullAXTreeResult", %"class.headless::accessibility::GetFullAXTreeResult"* %16, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.115"* %25, %20
  br i1 %26, label %40, label %27

27:                                               ; preds = %22, %35
  %28 = phi %"class.std::__1::unique_ptr.115"* [ %29, %35 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %28, i64 -1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.headless::accessibility::AXNode"*, %"class.headless::accessibility::AXNode"** %30, align 8
  store %"class.headless::accessibility::AXNode"* null, %"class.headless::accessibility::AXNode"** %30, align 8
  %32 = icmp eq %"class.headless::accessibility::AXNode"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  call void @_ZN8headless13accessibility6AXNodeD2Ev(%"class.headless::accessibility::AXNode"* nonnull %31) #8
  %34 = bitcast %"class.headless::accessibility::AXNode"* %31 to i8*
  call void @_ZdlPv(i8* %34) #9
  br label %35

35:                                               ; preds = %33, %27
  %36 = icmp eq %"class.std::__1::unique_ptr.115"* %29, %20
  br i1 %36, label %37, label %27

37:                                               ; preds = %35
  %38 = bitcast %"class.headless::accessibility::GetFullAXTreeResult"* %16 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %22
  %41 = phi i8* [ %39, %37 ], [ %23, %22 ]
  store %"class.std::__1::unique_ptr.115"* %20, %"class.std::__1::unique_ptr.115"** %24, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %40, %18
  %43 = bitcast %"class.headless::accessibility::GetFullAXTreeResult"* %16 to i8*
  call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %2, %42
  ret void
}

declare %"class.headless::accessibility::GetFullAXTreeResult"* @_ZN8headless13accessibility19GetFullAXTreeResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.76"*, %"class.headless::accessibility::GetChildAXNodesResult"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.219", align 8
  %4 = alloca %"class.base::OnceCallback.76", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::accessibility::GetChildAXNodesResult"* %1, %"class.headless::accessibility::GetChildAXNodesResult"** %5, align 8
  %6 = bitcast %"class.base::OnceCallback.76"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.base::OnceCallback.76", %"class.base::OnceCallback.76"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.76"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.76"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.76", %"class.base::OnceCallback.76"* %4, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.219"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.219"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.219"*)** %14, align 8
  call void %15(%"class.base::internal::BindStateBase"* %12, %"class.std::__1::unique_ptr.219"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %16 = load %"class.headless::accessibility::GetChildAXNodesResult"*, %"class.headless::accessibility::GetChildAXNodesResult"** %5, align 8
  store %"class.headless::accessibility::GetChildAXNodesResult"* null, %"class.headless::accessibility::GetChildAXNodesResult"** %5, align 8
  %17 = icmp eq %"class.headless::accessibility::GetChildAXNodesResult"* %16, null
  br i1 %17, label %44, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.headless::accessibility::GetChildAXNodesResult", %"class.headless::accessibility::GetChildAXNodesResult"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.115"* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::unique_ptr.115"* %20 to i8*
  %24 = getelementptr inbounds %"class.headless::accessibility::GetChildAXNodesResult", %"class.headless::accessibility::GetChildAXNodesResult"* %16, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.115"* %25, %20
  br i1 %26, label %40, label %27

27:                                               ; preds = %22, %35
  %28 = phi %"class.std::__1::unique_ptr.115"* [ %29, %35 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %28, i64 -1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.headless::accessibility::AXNode"*, %"class.headless::accessibility::AXNode"** %30, align 8
  store %"class.headless::accessibility::AXNode"* null, %"class.headless::accessibility::AXNode"** %30, align 8
  %32 = icmp eq %"class.headless::accessibility::AXNode"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  call void @_ZN8headless13accessibility6AXNodeD2Ev(%"class.headless::accessibility::AXNode"* nonnull %31) #8
  %34 = bitcast %"class.headless::accessibility::AXNode"* %31 to i8*
  call void @_ZdlPv(i8* %34) #9
  br label %35

35:                                               ; preds = %33, %27
  %36 = icmp eq %"class.std::__1::unique_ptr.115"* %29, %20
  br i1 %36, label %37, label %27

37:                                               ; preds = %35
  %38 = bitcast %"class.headless::accessibility::GetChildAXNodesResult"* %16 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %22
  %41 = phi i8* [ %39, %37 ], [ %23, %22 ]
  store %"class.std::__1::unique_ptr.115"* %20, %"class.std::__1::unique_ptr.115"** %24, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %40, %18
  %43 = bitcast %"class.headless::accessibility::GetChildAXNodesResult"* %16 to i8*
  call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %2, %42
  ret void
}

declare %"class.headless::accessibility::GetChildAXNodesResult"* @_ZN8headless13accessibility21GetChildAXNodesResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.83"*, %"class.headless::accessibility::QueryAXTreeResult"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.225", align 8
  %4 = alloca %"class.base::OnceCallback.83", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::accessibility::QueryAXTreeResult"* %1, %"class.headless::accessibility::QueryAXTreeResult"** %5, align 8
  %6 = bitcast %"class.base::OnceCallback.83"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.base::OnceCallback.83", %"class.base::OnceCallback.83"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.83"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.83"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.83", %"class.base::OnceCallback.83"* %4, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.225"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.225"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.225"*)** %14, align 8
  call void %15(%"class.base::internal::BindStateBase"* %12, %"class.std::__1::unique_ptr.225"* nonnull dereferenceable(8) %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %16 = load %"class.headless::accessibility::QueryAXTreeResult"*, %"class.headless::accessibility::QueryAXTreeResult"** %5, align 8
  store %"class.headless::accessibility::QueryAXTreeResult"* null, %"class.headless::accessibility::QueryAXTreeResult"** %5, align 8
  %17 = icmp eq %"class.headless::accessibility::QueryAXTreeResult"* %16, null
  br i1 %17, label %44, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.headless::accessibility::QueryAXTreeResult", %"class.headless::accessibility::QueryAXTreeResult"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.115"* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::unique_ptr.115"* %20 to i8*
  %24 = getelementptr inbounds %"class.headless::accessibility::QueryAXTreeResult", %"class.headless::accessibility::QueryAXTreeResult"* %16, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.115"* %25, %20
  br i1 %26, label %40, label %27

27:                                               ; preds = %22, %35
  %28 = phi %"class.std::__1::unique_ptr.115"* [ %29, %35 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %28, i64 -1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.headless::accessibility::AXNode"*, %"class.headless::accessibility::AXNode"** %30, align 8
  store %"class.headless::accessibility::AXNode"* null, %"class.headless::accessibility::AXNode"** %30, align 8
  %32 = icmp eq %"class.headless::accessibility::AXNode"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  call void @_ZN8headless13accessibility6AXNodeD2Ev(%"class.headless::accessibility::AXNode"* nonnull %31) #8
  %34 = bitcast %"class.headless::accessibility::AXNode"* %31 to i8*
  call void @_ZdlPv(i8* %34) #9
  br label %35

35:                                               ; preds = %33, %27
  %36 = icmp eq %"class.std::__1::unique_ptr.115"* %29, %20
  br i1 %36, label %37, label %27

37:                                               ; preds = %35
  %38 = bitcast %"class.headless::accessibility::QueryAXTreeResult"* %16 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %22
  %41 = phi i8* [ %39, %37 ], [ %23, %22 ]
  store %"class.std::__1::unique_ptr.115"* %20, %"class.std::__1::unique_ptr.115"** %24, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %40, %18
  %43 = bitcast %"class.headless::accessibility::QueryAXTreeResult"* %16 to i8*
  call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %2, %42
  ret void
}

declare %"class.headless::accessibility::QueryAXTreeResult"* @_ZN8headless13accessibility17QueryAXTreeResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8headless13accessibility6DomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::accessibility::Domain"* nocapture, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.headless::accessibility::Domain", %"class.headless::accessibility::Domain"* %0, i64 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8headless13accessibility6DomainD2Ev(%"class.headless::accessibility::Domain"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8headless13accessibility18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::accessibility::ExperimentalDomain"* nocapture, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.headless::accessibility::ExperimentalDomain", %"class.headless::accessibility::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless13accessibility6AXNodeD2Ev(%"class.headless::accessibility::AXNode"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !17
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %9 = icmp eq %"class.std::__1::basic_string"* %8, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %12 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, %8
  br i1 %14, label %30, label %15

15:                                               ; preds = %10, %25
  %16 = phi %"class.std::__1::basic_string"* [ %17, %25 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %22, %15
  %26 = icmp eq %"class.std::__1::basic_string"* %17, %8
  br i1 %26, label %27, label %15

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.97"* %6 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %10
  %31 = phi i8* [ %29, %27 ], [ %11, %10 ]
  store %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"** %12, align 8
  tail call void @_ZdlPv(i8* %31) #9
  br label %32

32:                                               ; preds = %30, %5
  store i8 0, i8* %2, align 8
  br label %33

33:                                               ; preds = %1, %32
  %34 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !17
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %69, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.123", %"class.std::__1::vector.123"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::unique_ptr.125"*, %"class.std::__1::unique_ptr.125"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.125"* %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.std::__1::unique_ptr.125"* %40 to i8*
  %44 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %45 = load %"class.std::__1::unique_ptr.125"*, %"class.std::__1::unique_ptr.125"** %44, align 8
  %46 = icmp eq %"class.std::__1::unique_ptr.125"* %45, %40
  br i1 %46, label %66, label %47

47:                                               ; preds = %42, %61
  %48 = phi %"class.std::__1::unique_ptr.125"* [ %49, %61 ], [ %45, %42 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125"* %48, i64 -1
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.headless::accessibility::AXProperty"*, %"class.headless::accessibility::AXProperty"** %50, align 8
  store %"class.headless::accessibility::AXProperty"* null, %"class.headless::accessibility::AXProperty"** %50, align 8
  %52 = icmp eq %"class.headless::accessibility::AXProperty"* %51, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.headless::accessibility::AXProperty", %"class.headless::accessibility::AXProperty"* %51, i64 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.headless::accessibility::AXValue"*, %"class.headless::accessibility::AXValue"** %54, align 8
  store %"class.headless::accessibility::AXValue"* null, %"class.headless::accessibility::AXValue"** %54, align 8
  %56 = icmp eq %"class.headless::accessibility::AXValue"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  tail call void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"* nonnull %55) #8
  %58 = bitcast %"class.headless::accessibility::AXValue"* %55 to i8*
  tail call void @_ZdlPv(i8* %58) #9
  br label %59

59:                                               ; preds = %57, %53
  %60 = bitcast %"class.headless::accessibility::AXProperty"* %51 to i8*
  tail call void @_ZdlPv(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %47
  %62 = icmp eq %"class.std::__1::unique_ptr.125"* %49, %40
  br i1 %62, label %63, label %47

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::vector.123"* %38 to i8**
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %63, %42
  %67 = phi i8* [ %65, %63 ], [ %43, %42 ]
  store %"class.std::__1::unique_ptr.125"* %40, %"class.std::__1::unique_ptr.125"** %44, align 8
  tail call void @_ZdlPv(i8* %67) #9
  br label %68

68:                                               ; preds = %66, %37
  store i8 0, i8* %34, align 8
  br label %69

69:                                               ; preds = %33, %68
  %70 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %71 = load i8, i8* %70, align 8, !range !17
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.headless::accessibility::AXValue"*, %"class.headless::accessibility::AXValue"** %74, align 8
  store %"class.headless::accessibility::AXValue"* null, %"class.headless::accessibility::AXValue"** %74, align 8
  %76 = icmp eq %"class.headless::accessibility::AXValue"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  tail call void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"* nonnull %75) #8
  %78 = bitcast %"class.headless::accessibility::AXValue"* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %77, %73
  store i8 0, i8* %70, align 8
  br label %80

80:                                               ; preds = %69, %79
  %81 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %82 = load i8, i8* %81, align 8, !range !17
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.headless::accessibility::AXValue"*, %"class.headless::accessibility::AXValue"** %85, align 8
  store %"class.headless::accessibility::AXValue"* null, %"class.headless::accessibility::AXValue"** %85, align 8
  %87 = icmp eq %"class.headless::accessibility::AXValue"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  tail call void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"* nonnull %86) #8
  %89 = bitcast %"class.headless::accessibility::AXValue"* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #9
  br label %90

90:                                               ; preds = %88, %84
  store i8 0, i8* %81, align 8
  br label %91

91:                                               ; preds = %80, %90
  %92 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %93 = load i8, i8* %92, align 8, !range !17
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %102, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.headless::accessibility::AXValue"*, %"class.headless::accessibility::AXValue"** %96, align 8
  store %"class.headless::accessibility::AXValue"* null, %"class.headless::accessibility::AXValue"** %96, align 8
  %98 = icmp eq %"class.headless::accessibility::AXValue"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  tail call void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"* nonnull %97) #8
  %100 = bitcast %"class.headless::accessibility::AXValue"* %97 to i8*
  tail call void @_ZdlPv(i8* %100) #9
  br label %101

101:                                              ; preds = %99, %95
  store i8 0, i8* %92, align 8
  br label %102

102:                                              ; preds = %91, %101
  %103 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !17
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %113, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %108 = load %"class.headless::accessibility::AXValue"*, %"class.headless::accessibility::AXValue"** %107, align 8
  store %"class.headless::accessibility::AXValue"* null, %"class.headless::accessibility::AXValue"** %107, align 8
  %109 = icmp eq %"class.headless::accessibility::AXValue"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  tail call void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"* nonnull %108) #8
  %111 = bitcast %"class.headless::accessibility::AXValue"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #9
  br label %112

112:                                              ; preds = %110, %106
  store i8 0, i8* %103, align 8
  br label %113

113:                                              ; preds = %102, %112
  %114 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %115 = load i8, i8* %114, align 8, !range !17
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %149, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::vector.123", %"class.std::__1::vector.123"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.std::__1::unique_ptr.125"*, %"class.std::__1::unique_ptr.125"** %119, align 8
  %121 = icmp eq %"class.std::__1::unique_ptr.125"* %120, null
  br i1 %121, label %148, label %122

122:                                              ; preds = %117
  %123 = bitcast %"class.std::__1::unique_ptr.125"* %120 to i8*
  %124 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %125 = load %"class.std::__1::unique_ptr.125"*, %"class.std::__1::unique_ptr.125"** %124, align 8
  %126 = icmp eq %"class.std::__1::unique_ptr.125"* %125, %120
  br i1 %126, label %146, label %127

127:                                              ; preds = %122, %141
  %128 = phi %"class.std::__1::unique_ptr.125"* [ %129, %141 ], [ %125, %122 ]
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125"* %128, i64 -1
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125"* %129, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.headless::accessibility::AXProperty"*, %"class.headless::accessibility::AXProperty"** %130, align 8
  store %"class.headless::accessibility::AXProperty"* null, %"class.headless::accessibility::AXProperty"** %130, align 8
  %132 = icmp eq %"class.headless::accessibility::AXProperty"* %131, null
  br i1 %132, label %141, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.headless::accessibility::AXProperty", %"class.headless::accessibility::AXProperty"* %131, i64 0, i32 1, i32 0, i32 0, i32 0
  %135 = load %"class.headless::accessibility::AXValue"*, %"class.headless::accessibility::AXValue"** %134, align 8
  store %"class.headless::accessibility::AXValue"* null, %"class.headless::accessibility::AXValue"** %134, align 8
  %136 = icmp eq %"class.headless::accessibility::AXValue"* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  tail call void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"* nonnull %135) #8
  %138 = bitcast %"class.headless::accessibility::AXValue"* %135 to i8*
  tail call void @_ZdlPv(i8* %138) #9
  br label %139

139:                                              ; preds = %137, %133
  %140 = bitcast %"class.headless::accessibility::AXProperty"* %131 to i8*
  tail call void @_ZdlPv(i8* %140) #9
  br label %141

141:                                              ; preds = %139, %127
  %142 = icmp eq %"class.std::__1::unique_ptr.125"* %129, %120
  br i1 %142, label %143, label %127

143:                                              ; preds = %141
  %144 = bitcast %"class.std::__1::vector.123"* %118 to i8**
  %145 = load i8*, i8** %144, align 8
  br label %146

146:                                              ; preds = %143, %122
  %147 = phi i8* [ %145, %143 ], [ %123, %122 ]
  store %"class.std::__1::unique_ptr.125"* %120, %"class.std::__1::unique_ptr.125"** %124, align 8
  tail call void @_ZdlPv(i8* %147) #9
  br label %148

148:                                              ; preds = %146, %117
  store i8 0, i8* %114, align 8
  br label %149

149:                                              ; preds = %113, %148
  %150 = bitcast %"class.headless::accessibility::AXNode"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.headless::accessibility::AXNode", %"class.headless::accessibility::AXNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  tail call void @_ZdlPv(i8* %156) #9
  br label %157

157:                                              ; preds = %149, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::accessibility::AXValue", %"class.headless::accessibility::AXValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !17
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::accessibility::AXValue", %"class.headless::accessibility::AXValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.164", %"class.std::__1::__vector_base.164"* %6, i64 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.165"* %8, null
  br i1 %9, label %30, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.165"* %8 to i8*
  %12 = getelementptr inbounds %"class.headless::accessibility::AXValue", %"class.headless::accessibility::AXValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.165"* %13, %8
  br i1 %14, label %28, label %15

15:                                               ; preds = %10, %23
  %16 = phi %"class.std::__1::unique_ptr.165"* [ %17, %23 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %16, i64 -1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.headless::accessibility::AXValueSource"*, %"class.headless::accessibility::AXValueSource"** %18, align 8
  store %"class.headless::accessibility::AXValueSource"* null, %"class.headless::accessibility::AXValueSource"** %18, align 8
  %20 = icmp eq %"class.headless::accessibility::AXValueSource"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  tail call void @_ZN8headless13accessibility13AXValueSourceD2Ev(%"class.headless::accessibility::AXValueSource"* nonnull %19) #8
  %22 = bitcast %"class.headless::accessibility::AXValueSource"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #9
  br label %23

23:                                               ; preds = %15, %21
  %24 = icmp eq %"class.std::__1::unique_ptr.165"* %17, %8
  br i1 %24, label %25, label %15

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::__vector_base.164"* %6 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %10, %25
  %29 = phi i8* [ %27, %25 ], [ %11, %10 ]
  store %"class.std::__1::unique_ptr.165"* %8, %"class.std::__1::unique_ptr.165"** %12, align 8
  tail call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %28, %5
  store i8 0, i8* %2, align 8
  br label %31

31:                                               ; preds = %1, %30
  %32 = getelementptr inbounds %"class.headless::accessibility::AXValue", %"class.headless::accessibility::AXValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !17
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %88, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.headless::accessibility::AXValue", %"class.headless::accessibility::AXValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %37, align 8
  %39 = icmp eq %"class.std::__1::unique_ptr.147"* %38, null
  br i1 %39, label %87, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.std::__1::unique_ptr.147"* %38 to i8*
  %42 = getelementptr inbounds %"class.headless::accessibility::AXValue", %"class.headless::accessibility::AXValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %43 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %42, align 8
  %44 = icmp eq %"class.std::__1::unique_ptr.147"* %43, %38
  br i1 %44, label %85, label %45

45:                                               ; preds = %40, %80
  %46 = phi %"class.std::__1::unique_ptr.147"* [ %47, %80 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %46, i64 -1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.headless::accessibility::AXRelatedNode"*, %"class.headless::accessibility::AXRelatedNode"** %48, align 8
  store %"class.headless::accessibility::AXRelatedNode"* null, %"class.headless::accessibility::AXRelatedNode"** %48, align 8
  %50 = icmp eq %"class.headless::accessibility::AXRelatedNode"* %49, null
  br i1 %50, label %80, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.headless::accessibility::AXRelatedNode", %"class.headless::accessibility::AXRelatedNode"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 8, !range !17
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.headless::accessibility::AXRelatedNode", %"class.headless::accessibility::AXRelatedNode"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #9
  br label %64

64:                                               ; preds = %61, %55
  store i8 0, i8* %52, align 8
  br label %65

65:                                               ; preds = %64, %51
  %66 = getelementptr inbounds %"class.headless::accessibility::AXRelatedNode", %"class.headless::accessibility::AXRelatedNode"* %49, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %67 = load i8, i8* %66, align 8, !range !17
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.headless::accessibility::AXRelatedNode", %"class.headless::accessibility::AXRelatedNode"* %49, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #9
  br label %78

78:                                               ; preds = %75, %69, %65
  %79 = bitcast %"class.headless::accessibility::AXRelatedNode"* %49 to i8*
  tail call void @_ZdlPv(i8* %79) #9
  br label %80

80:                                               ; preds = %78, %45
  %81 = icmp eq %"class.std::__1::unique_ptr.147"* %47, %38
  br i1 %81, label %82, label %45

82:                                               ; preds = %80
  %83 = bitcast %"class.std::__1::vector.145"* %36 to i8**
  %84 = load i8*, i8** %83, align 8
  br label %85

85:                                               ; preds = %40, %82
  %86 = phi i8* [ %84, %82 ], [ %41, %40 ]
  store %"class.std::__1::unique_ptr.147"* %38, %"class.std::__1::unique_ptr.147"** %42, align 8
  tail call void @_ZdlPv(i8* %86) #9
  br label %87

87:                                               ; preds = %85, %35
  store i8 0, i8* %32, align 8
  br label %88

88:                                               ; preds = %31, %87
  %89 = getelementptr inbounds %"class.headless::accessibility::AXValue", %"class.headless::accessibility::AXValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %90 = load i8, i8* %89, align 8, !range !17
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.headless::accessibility::AXValue", %"class.headless::accessibility::AXValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.base::Value"*, %"class.base::Value"** %93, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %93, align 8
  %95 = icmp eq %"class.base::Value"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %94) #8
  %97 = bitcast %"class.base::Value"* %94 to i8*
  tail call void @_ZdlPv(i8* %97) #9
  br label %98

98:                                               ; preds = %96, %92
  store i8 0, i8* %89, align 8
  br label %99

99:                                               ; preds = %88, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless13accessibility13AXValueSourceD2Ev(%"class.headless::accessibility::AXValueSource"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !17
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !17
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.headless::accessibility::AXValue"*, %"class.headless::accessibility::AXValue"** %20, align 8
  store %"class.headless::accessibility::AXValue"* null, %"class.headless::accessibility::AXValue"** %20, align 8
  %22 = icmp eq %"class.headless::accessibility::AXValue"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  tail call void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"* nonnull %21) #8
  %24 = bitcast %"class.headless::accessibility::AXValue"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %23, %19
  store i8 0, i8* %16, align 8
  br label %26

26:                                               ; preds = %15, %25
  %27 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !17
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.headless::accessibility::AXValue"*, %"class.headless::accessibility::AXValue"** %31, align 8
  store %"class.headless::accessibility::AXValue"* null, %"class.headless::accessibility::AXValue"** %31, align 8
  %33 = icmp eq %"class.headless::accessibility::AXValue"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  tail call void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"* nonnull %32) #8
  %35 = bitcast %"class.headless::accessibility::AXValue"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %34, %30
  store i8 0, i8* %27, align 8
  br label %37

37:                                               ; preds = %26, %36
  %38 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !17
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  tail call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %47, %41
  store i8 0, i8* %38, align 8
  br label %51

51:                                               ; preds = %37, %50
  %52 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 8, !range !17
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.headless::accessibility::AXValueSource", %"class.headless::accessibility::AXValueSource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.headless::accessibility::AXValue"*, %"class.headless::accessibility::AXValue"** %56, align 8
  store %"class.headless::accessibility::AXValue"* null, %"class.headless::accessibility::AXValue"** %56, align 8
  %58 = icmp eq %"class.headless::accessibility::AXValue"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  tail call void @_ZN8headless13accessibility7AXValueD2Ev(%"class.headless::accessibility::AXValue"* nonnull %57) #8
  %60 = bitcast %"class.headless::accessibility::AXValue"* %57 to i8*
  tail call void @_ZdlPv(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %55
  store i8 0, i8* %52, align 8
  br label %62

62:                                               ; preds = %51, %61
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.44", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.44"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.44"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback.44"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.44"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.44"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.44"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.62", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.62"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.62"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback.62"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.62"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.62"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.62"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback.62", %"class.base::OnceCallback.62"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.69", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.69"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.69"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback.69"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.69"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.69"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.69"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback.69", %"class.base::OnceCallback.69"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.76", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.76"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.76"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback.76"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.76"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.76"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.76"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback.76", %"class.base::OnceCallback.76"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.83", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.83"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.83"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::OnceCallback.83"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.83"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.83"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.83"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback.83", %"class.base::OnceCallback.83"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility13DisableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility12EnableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility22GetPartialAXTreeResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!17 = !{i8 0, i8 2}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility19GetFullAXTreeResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility21GetChildAXNodesResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!31 = distinct !{!31, !32, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless13accessibility17QueryAXTreeResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
