; ModuleID = 'gen/third_party/blink/public/mojom/sms/webotp_service.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/sms/webotp_service.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::WebOTPServiceAsyncWaiter" = type { %"class.blink::mojom::WebOTPService"* }
%"class.blink::mojom::WebOTPService" = type { i32 (...)** }
%"class.blink::mojom::WebOTPServiceInterceptorForTesting" = type { %"class.blink::mojom::WebOTPService" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1 }
%union.anon.1 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.15, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.8", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.10" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.15 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16" }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.18", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN5blink5mojom13WebOTPServiceD2Ev = comdat any

$_ZN5blink5mojom34WebOTPServiceInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [8 x i8] c"Receive\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"gen/third_party/blink/public/mojom/sms/webotp_service.mojom-test-utils.cc\00", align 1
@_ZTVN5blink5mojom34WebOTPServiceInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::WebOTPService"*)* @_ZN5blink5mojom13WebOTPServiceD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)* @_ZN5blink5mojom34WebOTPServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom34WebOTPServiceInterceptorForTesting7ReceiveEN4base12OnceCallbackIFvNS0_9SmsStatusERKN4absl8optionalINSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)* @_ZN5blink5mojom34WebOTPServiceInterceptorForTesting5AbortEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom24WebOTPServiceAsyncWaiterC1EPNS0_13WebOTPServiceE = hidden unnamed_addr alias void (%"class.blink::mojom::WebOTPServiceAsyncWaiter"*, %"class.blink::mojom::WebOTPService"*), void (%"class.blink::mojom::WebOTPServiceAsyncWaiter"*, %"class.blink::mojom::WebOTPService"*)* @_ZN5blink5mojom24WebOTPServiceAsyncWaiterC2EPNS0_13WebOTPServiceE
@_ZN5blink5mojom24WebOTPServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::WebOTPServiceAsyncWaiter"*), void (%"class.blink::mojom::WebOTPServiceAsyncWaiter"*)* @_ZN5blink5mojom24WebOTPServiceAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34WebOTPServiceInterceptorForTesting7ReceiveEN4base12OnceCallbackIFvNS0_9SmsStatusERKN4absl8optionalINSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEEEEEE(%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.blink::mojom::WebOTPServiceInterceptorForTesting"* %0 to %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)**, %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)*, %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)*, %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::WebOTPService"* %7(%"class.blink::mojom::WebOTPServiceInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::WebOTPService"* %8 to void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)** %14, i64 2
  %16 = load void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.blink::mojom::WebOTPService"* %8, %"class.base::OnceCallback"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34WebOTPServiceInterceptorForTesting5AbortEv(%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::WebOTPServiceInterceptorForTesting"* %0 to %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)**, %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)*, %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)** %3, i64 4
  %5 = load %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)*, %"class.blink::mojom::WebOTPService"* (%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::WebOTPService"* %5(%"class.blink::mojom::WebOTPServiceInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.blink::mojom::WebOTPService"* %6 to void (%"class.blink::mojom::WebOTPService"*)***
  %8 = load void (%"class.blink::mojom::WebOTPService"*)**, void (%"class.blink::mojom::WebOTPService"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::WebOTPService"*)*, void (%"class.blink::mojom::WebOTPService"*)** %8, i64 3
  %10 = load void (%"class.blink::mojom::WebOTPService"*)*, void (%"class.blink::mojom::WebOTPService"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::WebOTPService"* %6) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom24WebOTPServiceAsyncWaiterC2EPNS0_13WebOTPServiceE(%"class.blink::mojom::WebOTPServiceAsyncWaiter"* nocapture, %"class.blink::mojom::WebOTPService"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::WebOTPServiceAsyncWaiter", %"class.blink::mojom::WebOTPServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::WebOTPService"* %1, %"class.blink::mojom::WebOTPService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom24WebOTPServiceAsyncWaiterD2Ev(%"class.blink::mojom::WebOTPServiceAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24WebOTPServiceAsyncWaiter7ReceiveEPNS0_9SmsStatusEPN4absl8optionalINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE(%"class.blink::mojom::WebOTPServiceAsyncWaiter"* nocapture readonly, i32*, %"class.absl::optional"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i32* %1 to i64
  %8 = ptrtoint %"class.absl::optional"* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::mojom::WebOTPServiceAsyncWaiter", %"class.blink::mojom::WebOTPServiceAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::WebOTPService"*, %"class.blink::mojom::WebOTPService"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %13 = call i8* @_Znwm(i64 64) #11, !noalias !2
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.absl::optional"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24WebOTPServiceAsyncWaiter7ReceiveEPNS4_9SmsStatusEPN4absl8optionalINSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE3$_0JPNS_7RunLoopES7_SI_EEEFvS6_RKSH_EE7RunOnceEPNS0_13BindStateBaseES6_SO_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24WebOTPServiceAsyncWaiter7ReceiveEPNS3_9SmsStatusEPN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEE3$_0JPNS_7RunLoopES6_SH_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %7, i64* %18, align 8, !noalias !2
  %19 = getelementptr inbounds i8, i8* %13, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8, !noalias !2
  %21 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %13, i8** %21, align 8, !alias.scope !2
  %22 = bitcast %"class.blink::mojom::WebOTPService"* %11 to void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)***
  %23 = load void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)** %23, i64 2
  %25 = load void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::WebOTPService"*, %"class.base::OnceCallback"*)** %24, align 8
  call void %25(%"class.blink::mojom::WebOTPService"* %11, %"class.base::OnceCallback"* nonnull %5) #10
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #10
  %27 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 59) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom13WebOTPServiceD2Ev(%"class.blink::mojom::WebOTPService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom34WebOTPServiceInterceptorForTestingD0Ev(%"class.blink::mojom::WebOTPServiceInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24WebOTPServiceAsyncWaiter7ReceiveEPNS4_9SmsStatusEPN4absl8optionalINSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE3$_0JPNS_7RunLoopES7_SI_EEEFvS6_RKSH_EE7RunOnceEPNS0_13BindStateBaseES6_SO_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.absl::optional"* dereferenceable(32)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.absl::optional"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.absl::optional"*, %"class.absl::optional"** %9, align 8
  store i32 %1, i32* %11, align 4
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !7
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %67, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !7
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %20, label %53, label %22

22:                                               ; preds = %16
  %23 = icmp eq %"class.absl::optional"* %12, %2
  br i1 %23, label %81, label %24

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %28, label %43, label %33

33:                                               ; preds = %24
  br i1 %32, label %37, label %34

34:                                               ; preds = %33
  %35 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #10
  br label %81

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %21, i8* %39, i64 %41) #10
  br label %81

43:                                               ; preds = %24
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %49 = zext i8 %31 to i64
  %50 = select i1 %32, i8* %45, i8* %48
  %51 = select i1 %32, i64 %47, i64 %49
  %52 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %21, i8* %50, i64 %51) #10
  br label %81

53:                                               ; preds = %16
  %54 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %60 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #10
  br label %66

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %63, i64 %65) #10
  br label %66

66:                                               ; preds = %61, %58
  store i8 1, i8* %18, align 8
  br label %81

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !7
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %73 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  tail call void @_ZdlPv(i8* %79) #11
  br label %80

80:                                               ; preds = %77, %71
  store i8 0, i8* %68, align 8
  br label %81

81:                                               ; preds = %22, %34, %37, %43, %66, %67, %80
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24WebOTPServiceAsyncWaiter7ReceiveEPNS3_9SmsStatusEPN4absl8optionalINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEE3$_0JPNS_7RunLoopES6_SH_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24WebOTPServiceAsyncWaiter7ReceiveEPNS4_9SmsStatusEPN4absl8optionalINSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE3$_0JPNS_7RunLoopERS7_RSI_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24WebOTPServiceAsyncWaiter7ReceiveEPNS4_9SmsStatusEPN4absl8optionalINSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE3$_0JPNS_7RunLoopERS7_RSI_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom24WebOTPServiceAsyncWaiter7ReceiveEPNS2_9SmsStatusEPN4absl8optionalINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEEEE3$_0JPNS_7RunLoopERS5_RSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom24WebOTPServiceAsyncWaiter7ReceiveEPNS2_9SmsStatusEPN4absl8optionalINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEEEE3$_0JPNS_7RunLoopERS5_RSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!7 = !{i8 0, i8 2}
