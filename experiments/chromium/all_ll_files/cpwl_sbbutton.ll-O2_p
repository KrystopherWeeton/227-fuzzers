; ModuleID = '../../third_party/pdfium/fpdfsdk/pwl/cpwl_sbbutton.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/pwl/cpwl_sbbutton.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPWL_SBButton = type { %class.CPWL_Wnd.base, i8, i8, [3 x i8] }
%class.CPWL_Wnd.base = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.10", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.17", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8 }>
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.CPWL_Wnd::CreateParams" = type <{ %class.CFX_FloatRect, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.4", %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::UnownedPtr.6", i32, %struct.CFX_Color, i32, i32, %struct.CFX_Color, %struct.CFX_Color, i32, float, %struct.CPWL_Dash, [4 x i8], %class.CPWL_MsgControl*, i32, [4 x i8] }>
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CFX_Timer::HandlerIface"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CFX_Timer::HandlerIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::UnownedPtr" = type { %class.IPWL_SystemHandler* }
%class.IPWL_SystemHandler = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.4" = type { %class.IPVT_FontMap* }
%class.IPVT_FontMap = type opaque
%"class.fxcrt::ObservedPtr.5" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPWL_Wnd::ProviderIface"* }
%"class.CPWL_Wnd::ProviderIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::UnownedPtr.6" = type { %"class.CPWL_Wnd::FocusHandlerIface"* }
%"class.CPWL_Wnd::FocusHandlerIface" = type { i32 (...)** }
%struct.CFX_Color = type { i32, float, float, float, float }
%struct.CPWL_Dash = type { i32, i32, i32 }
%class.CPWL_MsgControl = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.IPWL_SystemHandler::PerWindowData"* }
%"class.fxcrt::UnownedPtr.10" = type { %class.CPWL_Wnd* }
%class.CPWL_Wnd = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.10", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.17", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::unique_ptr.11" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr.11"* }
%"class.fxcrt::UnownedPtr.17" = type { %class.CPWL_ScrollBar* }
%class.CPWL_ScrollBar = type opaque
%class.CFX_FloatRect = type { float, float, float, float }
%"class.IPWL_SystemHandler::PerWindowData" = type { i32 (...)** }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.22" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %class.CFX_PTemplate*, %class.CFX_PTemplate*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.CFX_PTemplate* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CFX_VTemplate = type opaque
%struct.PWL_SCROLL_INFO = type opaque
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.35" }
%"class.fxcrt::RetainPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>

@_ZTV13CPWL_SBButton = hidden unnamed_addr constant { [43 x i8*] } { [43 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPWL_SBButton*)* @_ZN13CPWL_SBButtonD2Ev to i8*), i8* bitcast (void (%class.CPWL_SBButton*)* @_ZN13CPWL_SBButtonD0Ev to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)* @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i16, i32)* @_ZN8CPWL_Wnd9OnKeyDownEtj to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i16, i32)* @_ZN8CPWL_Wnd6OnCharEtj to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_SBButton*, i32, %class.CFX_PTemplate*)* @_ZN13CPWL_SBButton13OnLButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_SBButton*, i32, %class.CFX_PTemplate*)* @_ZN13CPWL_SBButton11OnLButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_SBButton*, i32, %class.CFX_PTemplate*)* @_ZN13CPWL_SBButton11OnMouseMoveEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)* @_ZN8CPWL_Wnd12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)* @_ZN8CPWL_Wnd13SetScrollInfoERK15PWL_SCROLL_INFO to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd17SetScrollPositionEf to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd22ScrollWindowVerticallyEf to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd17NotifyLButtonDownEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15NotifyLButtonUpEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15NotifyMouseMoveEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd8SetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9KillFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9SetCursorEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i1)* @_ZN8CPWL_Wnd10SetVisibleEb to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd11SetFontSizeEf to i8*), i8* bitcast (float (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd11GetFontSizeEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7GetTextEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Wnd*)* @_ZN8CPWL_Wnd15GetSelectedTextEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %"class.fxcrt::WideString"*)* @_ZN8CPWL_Wnd16ReplaceSelectionERKN5fxcrt10WideStringE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd13SelectAllTextEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7CanUndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7CanRedoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd4UndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd4RedoEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd12GetFocusRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd13GetClientRectEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd10OnSetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd11OnKillFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)* @_ZN8CPWL_Wnd14CreateChildWndERKNS_12CreateParamsE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd13RePosChildWndEv to i8*), i8* bitcast (void (%class.CPWL_SBButton*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)* @_ZN13CPWL_SBButton18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9OnCreatedEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9OnDestroyEv to i8*)] }, align 8
@_ZZN13CPWL_SBButton18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_MatrixE9kOffsetsX = internal unnamed_addr constant [7 x float] [float 2.500000e+00, float 2.500000e+00, float 4.500000e+00, float 6.500000e+00, float 6.500000e+00, float 4.500000e+00, float 2.500000e+00], align 16
@_ZZN13CPWL_SBButton18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_MatrixE9kOffsetsY = internal unnamed_addr constant [7 x float] [float 5.000000e+00, float 6.000000e+00, float 4.000000e+00, float 6.000000e+00, float 5.000000e+00, float 3.000000e+00, float 5.000000e+00], align 16
@_ZZN13CPWL_SBButton18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_MatrixE12kOffsetsMinY = internal unnamed_addr constant [7 x float] [float 4.000000e+00, float 3.000000e+00, float 5.000000e+00, float 3.000000e+00, float 4.000000e+00, float 6.000000e+00, float 4.000000e+00], align 16

@_ZN13CPWL_SBButtonC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEENS_4TypeE = hidden unnamed_addr alias void (%class.CPWL_SBButton*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*, i8), void (%class.CPWL_SBButton*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*, i8)* @_ZN13CPWL_SBButtonC2ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEENS_4TypeE
@_ZN13CPWL_SBButtonD1Ev = hidden unnamed_addr alias void (%class.CPWL_SBButton*), void (%class.CPWL_SBButton*)* @_ZN13CPWL_SBButtonD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_SBButtonC2ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEENS_4TypeE(%class.CPWL_SBButton*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*, i8 zeroext) unnamed_addr #0 align 2 {
  %5 = bitcast %class.CPWL_SBButton* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE(%class.CPWL_Wnd* %5, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184) %1, %"class.IPWL_SystemHandler::PerWindowData"* %2) #8
  %6 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [43 x i8*] }, { [43 x i8*] }* @_ZTV13CPWL_SBButton, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 1
  store i8 %3, i8* %7, align 1
  %8 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 2
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 0, i32 2, i32 17
  store i32 0, i32* %9, align 8
  ret void
}

declare void @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_SBButtonD2Ev(%class.CPWL_SBButton*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_SBButton* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_SBButtonD0Ev(%class.CPWL_SBButton*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_SBButton* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %2) #8
  %3 = bitcast %class.CPWL_SBButton* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_SBButton18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_SBButton*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %class.CFX_FloatRect*
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = alloca i32, align 4
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %class.CFX_FloatRect*
  %10 = alloca i32, align 4
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %class.CFX_FloatRect*
  %13 = alloca %"class.std::__1::vector.28", align 8
  %14 = alloca i32, align 4
  %15 = alloca %class.CFX_PTemplate, align 4
  %16 = alloca %class.CFX_PTemplate, align 4
  %17 = alloca [10 x i32], align 16
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %class.CFX_PTemplate, align 4
  %21 = alloca %class.CFX_PTemplate, align 4
  %22 = bitcast %class.CPWL_SBButton* %0 to %class.CPWL_Wnd*
  %23 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 0, i32 10
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %363, label %26

26:                                               ; preds = %3
  %27 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0, i64 0
  %29 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 1
  %30 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 3
  %31 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %22) #8
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %33 = extractvalue { <2 x float>, <2 x float> } %31, 0
  store <2 x float> %33, <2 x float>* %32, align 8
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %35 = extractvalue { <2 x float>, <2 x float> } %31, 1
  store <2 x float> %35, <2 x float>* %34, align 8
  %36 = extractelement <2 x float> %33, i32 0
  %37 = extractelement <2 x float> %35, i32 0
  %38 = fcmp ult float %36, %37
  br i1 %38, label %39, label %362

39:                                               ; preds = %26
  %40 = extractelement <2 x float> %35, i32 1
  %41 = extractelement <2 x float> %33, i32 1
  %42 = fcmp ult float %41, %40
  br i1 %42, label %43, label %362

43:                                               ; preds = %39
  %44 = bitcast %class.CFX_PTemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8
  %45 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %45, align 4
  %46 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %46, align 4
  call void @_ZNK8CPWL_Wnd14GetCenterPointEv(%class.CFX_PTemplate* nonnull sret %6, %class.CPWL_Wnd* %22) #8
  %47 = call i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd* %22) #8
  %48 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #8
  %49 = shl i32 %47, 24
  %50 = or i32 %49, 6579300
  store i32 %50, i32* %7, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeRectERK10CFX_MatrixRK13CFX_FloatRectRKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2, %class.CFX_FloatRect* nonnull dereferenceable(16) %5, i32* nonnull dereferenceable(4) %7, float 0.000000e+00) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #8
  %51 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8
  %52 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %5, float 5.000000e-01, float 5.000000e-01) #8
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %54 = extractvalue { <2 x float>, <2 x float> } %52, 0
  store <2 x float> %54, <2 x float>* %53, align 8
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %56 = extractvalue { <2 x float>, <2 x float> } %52, 1
  store <2 x float> %56, <2 x float>* %55, align 8
  %57 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #8
  %58 = or i32 %49, 16777215
  store i32 %58, i32* %10, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeRectERK10CFX_MatrixRK13CFX_FloatRectRKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2, %class.CFX_FloatRect* nonnull dereferenceable(16) %9, i32* nonnull dereferenceable(4) %10, float 1.000000e+00) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8
  %59 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 2
  br i1 %61, label %244, label %62

62:                                               ; preds = %43
  %63 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #8
  %64 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %5, float 1.000000e+00, float 1.000000e+00) #8
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %66 = extractvalue { <2 x float>, <2 x float> } %64, 0
  store <2 x float> %66, <2 x float>* %65, align 8
  %67 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %68 = extractvalue { <2 x float>, <2 x float> } %64, 1
  store <2 x float> %68, <2 x float>* %67, align 8
  call void @_ZN16CFX_RenderDevice10DrawShadowERK10CFX_MatrixbbRK13CFX_FloatRectiii(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2, i1 zeroext true, i1 zeroext false, %class.CFX_FloatRect* nonnull dereferenceable(16) %12, i32 %47, i32 80, i32 220) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #8
  %69 = load float, float* %30, align 4
  %70 = load float, float* %29, align 4
  %71 = fsub float %69, %70
  %72 = fcmp ogt float %71, 6.000000e+00
  br i1 %72, label %73, label %361

73:                                               ; preds = %62
  %74 = load float, float* %28, align 8
  %75 = fadd float %74, 1.500000e+00
  %76 = bitcast %"class.std::__1::vector.28"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #8
  %77 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %13, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %13, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #8
  %80 = load i8, i8* %59, align 1
  %81 = icmp eq i8 %80, 0
  %82 = select i1 %81, [7 x float]* @_ZZN13CPWL_SBButton18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_MatrixE12kOffsetsMinY, [7 x float]* @_ZZN13CPWL_SBButton18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_MatrixE9kOffsetsY
  %83 = bitcast %class.CFX_PTemplate** %78 to i64*
  %84 = bitcast %"class.std::__1::vector.28"* %13 to i64*
  %85 = bitcast %class.CFX_PTemplate** %79 to i64*
  br label %94

86:                                               ; preds = %236
  %87 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #8
  store i32 %58, i32* %14, align 4
  call void @_ZN16CFX_RenderDevice12DrawFillAreaERK10CFX_MatrixRKNSt3__16vectorI13CFX_PTemplateIfENS3_9allocatorIS6_EEEERKj(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2, %"class.std::__1::vector.28"* nonnull dereferenceable(24) %13, i32* nonnull dereferenceable(4) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #8
  %88 = load %class.CFX_PTemplate*, %class.CFX_PTemplate** %77, align 8
  %89 = icmp eq %class.CFX_PTemplate* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = ptrtoint %class.CFX_PTemplate* %88 to i64
  store i64 %91, i64* %83, align 8
  %92 = bitcast %class.CFX_PTemplate* %88 to i8*
  call void @_ZdlPv(i8* %92) #9
  br label %93

93:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #8
  br label %361

94:                                               ; preds = %239, %73
  %95 = phi i64 [ 0, %73 ], [ %243, %239 ]
  %96 = phi i64 [ 0, %73 ], [ %242, %239 ]
  %97 = phi %class.CFX_PTemplate* [ null, %73 ], [ %241, %239 ]
  %98 = phi %class.CFX_PTemplate* [ null, %73 ], [ %240, %239 ]
  %99 = phi i64 [ 0, %73 ], [ %237, %239 ]
  %100 = getelementptr inbounds [7 x float], [7 x float]* @_ZZN13CPWL_SBButton18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_MatrixE9kOffsetsX, i64 0, i64 %99
  %101 = load float, float* %100, align 4
  %102 = fadd float %75, %101
  %103 = getelementptr inbounds [7 x float], [7 x float]* %82, i64 0, i64 %99
  %104 = load float, float* %103, align 4
  %105 = fadd float %70, %104
  %106 = icmp ult %class.CFX_PTemplate* %98, %97
  br i1 %106, label %107, label %112

107:                                              ; preds = %94
  %108 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %98, i64 0, i32 0
  store float %102, float* %108, align 4
  %109 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %98, i64 0, i32 1
  store float %105, float* %109, align 4
  %110 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %98, i64 1
  %111 = ptrtoint %class.CFX_PTemplate* %110 to i64
  store i64 %111, i64* %83, align 8
  br label %236

112:                                              ; preds = %94
  %113 = load i64, i64* %84, align 8
  %114 = sub i64 %96, %113
  %115 = ashr exact i64 %114, 3
  %116 = add nsw i64 %115, 1
  %117 = icmp ugt i64 %116, 2305843009213693951
  %118 = inttoptr i64 %113 to %class.CFX_PTemplate*
  br i1 %117, label %119, label %121

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::vector.28"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %120) #10
  unreachable

121:                                              ; preds = %112
  %122 = sub i64 %95, %113
  %123 = ashr exact i64 %122, 3
  %124 = icmp ult i64 %123, 1152921504606846975
  br i1 %124, label %125, label %133

125:                                              ; preds = %121
  %126 = ashr exact i64 %122, 2
  %127 = icmp ult i64 %126, %116
  %128 = select i1 %127, i64 %116, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %125
  %131 = icmp ugt i64 %128, 2305843009213693951
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  call void @abort() #10
  unreachable

133:                                              ; preds = %130, %121
  %134 = phi i64 [ %128, %130 ], [ 2305843009213693951, %121 ]
  %135 = shl i64 %134, 3
  %136 = call i8* @_Znwm(i64 %135) #9
  %137 = bitcast i8* %136 to %class.CFX_PTemplate*
  br label %138

138:                                              ; preds = %133, %125
  %139 = phi i64 [ %134, %133 ], [ 0, %125 ]
  %140 = phi %class.CFX_PTemplate* [ %137, %133 ], [ null, %125 ]
  %141 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %140, i64 %115
  %142 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %140, i64 %139
  %143 = ptrtoint %class.CFX_PTemplate* %142 to i64
  %144 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %141, i64 0, i32 0
  store float %102, float* %144, align 4
  %145 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %140, i64 %115, i32 1
  store float %105, float* %145, align 4
  %146 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %141, i64 1
  %147 = ptrtoint %class.CFX_PTemplate* %146 to i64
  %148 = icmp eq %class.CFX_PTemplate* %98, %118
  br i1 %148, label %180, label %149

149:                                              ; preds = %138
  %150 = getelementptr %class.CFX_PTemplate, %class.CFX_PTemplate* %98, i64 -1
  %151 = bitcast %class.CFX_PTemplate* %150 to i8*
  %152 = sub i64 0, %113
  %153 = getelementptr i8, i8* %151, i64 %152
  %154 = ptrtoint i8* %153 to i64
  %155 = lshr i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %175, label %159

159:                                              ; preds = %149, %159
  %160 = phi %class.CFX_PTemplate* [ %163, %159 ], [ %141, %149 ]
  %161 = phi %class.CFX_PTemplate* [ %164, %159 ], [ %98, %149 ]
  %162 = phi i64 [ %173, %159 ], [ %157, %149 ]
  %163 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %160, i64 -1
  %164 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %161, i64 -1
  %165 = bitcast %class.CFX_PTemplate* %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = bitcast %class.CFX_PTemplate* %163 to i32*
  store i32 %166, i32* %167, align 4
  %168 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %160, i64 -1, i32 1
  %169 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %161, i64 -1, i32 1
  %170 = bitcast float* %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = bitcast float* %168 to i32*
  store i32 %171, i32* %172, align 4
  %173 = add i64 %162, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %159, !llvm.loop !3

175:                                              ; preds = %159, %149
  %176 = phi %class.CFX_PTemplate* [ undef, %149 ], [ %163, %159 ]
  %177 = phi %class.CFX_PTemplate* [ %141, %149 ], [ %163, %159 ]
  %178 = phi %class.CFX_PTemplate* [ %98, %149 ], [ %164, %159 ]
  %179 = icmp ult i8* %153, inttoptr (i64 24 to i8*)
  br i1 %179, label %226, label %182

180:                                              ; preds = %138
  %181 = ptrtoint %class.CFX_PTemplate* %98 to i64
  br label %229

182:                                              ; preds = %175, %182
  %183 = phi %class.CFX_PTemplate* [ %215, %182 ], [ %177, %175 ]
  %184 = phi %class.CFX_PTemplate* [ %216, %182 ], [ %178, %175 ]
  %185 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %183, i64 -1
  %186 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %184, i64 -1
  %187 = bitcast %class.CFX_PTemplate* %186 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = bitcast %class.CFX_PTemplate* %185 to i32*
  store i32 %188, i32* %189, align 4
  %190 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %183, i64 -1, i32 1
  %191 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %184, i64 -1, i32 1
  %192 = bitcast float* %191 to i32*
  %193 = load i32, i32* %192, align 4
  %194 = bitcast float* %190 to i32*
  store i32 %193, i32* %194, align 4
  %195 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %183, i64 -2
  %196 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %184, i64 -2
  %197 = bitcast %class.CFX_PTemplate* %196 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = bitcast %class.CFX_PTemplate* %195 to i32*
  store i32 %198, i32* %199, align 4
  %200 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %183, i64 -2, i32 1
  %201 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %184, i64 -2, i32 1
  %202 = bitcast float* %201 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = bitcast float* %200 to i32*
  store i32 %203, i32* %204, align 4
  %205 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %183, i64 -3
  %206 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %184, i64 -3
  %207 = bitcast %class.CFX_PTemplate* %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = bitcast %class.CFX_PTemplate* %205 to i32*
  store i32 %208, i32* %209, align 4
  %210 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %183, i64 -3, i32 1
  %211 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %184, i64 -3, i32 1
  %212 = bitcast float* %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = bitcast float* %210 to i32*
  store i32 %213, i32* %214, align 4
  %215 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %183, i64 -4
  %216 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %184, i64 -4
  %217 = bitcast %class.CFX_PTemplate* %216 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = bitcast %class.CFX_PTemplate* %215 to i32*
  store i32 %218, i32* %219, align 4
  %220 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %183, i64 -4, i32 1
  %221 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %184, i64 -4, i32 1
  %222 = bitcast float* %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = bitcast float* %220 to i32*
  store i32 %223, i32* %224, align 4
  %225 = icmp eq %class.CFX_PTemplate* %216, %118
  br i1 %225, label %226, label %182

226:                                              ; preds = %182, %175
  %227 = phi %class.CFX_PTemplate* [ %176, %175 ], [ %215, %182 ]
  %228 = load i64, i64* %84, align 8
  br label %229

229:                                              ; preds = %226, %180
  %230 = phi %class.CFX_PTemplate* [ %141, %180 ], [ %227, %226 ]
  %231 = phi i64 [ %181, %180 ], [ %228, %226 ]
  %232 = ptrtoint %class.CFX_PTemplate* %230 to i64
  store i64 %232, i64* %84, align 8
  store i64 %147, i64* %83, align 8
  store i64 %143, i64* %85, align 8
  %233 = icmp eq i64 %231, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %229
  %235 = inttoptr i64 %231 to i8*
  call void @_ZdlPv(i8* %235) #9
  br label %236

236:                                              ; preds = %234, %229, %107
  %237 = add nuw nsw i64 %99, 1
  %238 = icmp eq i64 %237, 7
  br i1 %238, label %86, label %239

239:                                              ; preds = %236
  %240 = load %class.CFX_PTemplate*, %class.CFX_PTemplate** %78, align 8
  %241 = load %class.CFX_PTemplate*, %class.CFX_PTemplate** %79, align 8
  %242 = ptrtoint %class.CFX_PTemplate* %240 to i64
  %243 = ptrtoint %class.CFX_PTemplate* %241 to i64
  br label %94

244:                                              ; preds = %43
  %245 = bitcast %class.CFX_PTemplate* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %245) #8
  %246 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 0
  %247 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 1
  %248 = load float, float* %28, align 8
  %249 = load float, float* %30, align 4
  %250 = fadd float %249, -1.000000e+00
  store float %250, float* %247, align 4
  %251 = bitcast %class.CFX_PTemplate* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #8
  %252 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %16, i64 0, i32 0
  %253 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %16, i64 0, i32 1
  %254 = load float, float* %29, align 4
  %255 = fadd float %254, 1.000000e+00
  store float %255, float* %253, align 4
  %256 = fadd float %248, 1.500000e+00
  store float %256, float* %246, align 4
  store float %256, float* %252, align 4
  %257 = bitcast [10 x i32]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %257) #8
  %258 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 0
  %259 = insertelement <4 x i32> undef, i32 %49, i32 0
  %260 = shufflevector <4 x i32> %259, <4 x i32> undef, <4 x i32> zeroinitializer
  %261 = or <4 x i32> %260, <i32 15790320, i32 13816530, i32 11842740, i32 9868950>
  %262 = extractelement <4 x i32> %261, i32 1
  store i32 %262, i32* %258, align 16
  %263 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 1
  %264 = or i32 %49, 14474460
  store i32 %264, i32* %263, align 4
  %265 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 2
  %266 = extractelement <4 x i32> %261, i32 0
  store i32 %266, i32* %265, align 8
  %267 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 3
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %261, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 7
  %270 = extractelement <4 x i32> %261, i32 3
  store i32 %270, i32* %269, align 4
  %271 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 8
  %272 = extractelement <4 x i32> %261, i32 2
  store i32 %272, i32* %271, align 16
  %273 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 9
  store i32 %262, i32* %273, align 4
  %274 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %262, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %275 = load float, float* %246, align 4
  %276 = fadd float %275, 1.000000e+00
  store float %276, float* %246, align 4
  %277 = load float, float* %252, align 4
  %278 = fadd float %277, 1.000000e+00
  store float %278, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %279 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 1
  %280 = load i32, i32* %279, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %280, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %281 = load float, float* %246, align 4
  %282 = fadd float %281, 1.000000e+00
  store float %282, float* %246, align 4
  %283 = load float, float* %252, align 4
  %284 = fadd float %283, 1.000000e+00
  store float %284, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %285 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 2
  %286 = load i32, i32* %285, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %286, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %287 = load float, float* %246, align 4
  %288 = fadd float %287, 1.000000e+00
  store float %288, float* %246, align 4
  %289 = load float, float* %252, align 4
  %290 = fadd float %289, 1.000000e+00
  store float %290, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %291 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 3
  %292 = load i32, i32* %291, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %292, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %293 = load float, float* %246, align 4
  %294 = fadd float %293, 1.000000e+00
  store float %294, float* %246, align 4
  %295 = load float, float* %252, align 4
  %296 = fadd float %295, 1.000000e+00
  store float %296, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %297 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 4
  %298 = load i32, i32* %297, align 16
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %298, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %299 = load float, float* %246, align 4
  %300 = fadd float %299, 1.000000e+00
  store float %300, float* %246, align 4
  %301 = load float, float* %252, align 4
  %302 = fadd float %301, 1.000000e+00
  store float %302, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %303 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 5
  %304 = load i32, i32* %303, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %304, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %305 = load float, float* %246, align 4
  %306 = fadd float %305, 1.000000e+00
  store float %306, float* %246, align 4
  %307 = load float, float* %252, align 4
  %308 = fadd float %307, 1.000000e+00
  store float %308, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %309 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 6
  %310 = load i32, i32* %309, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %310, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %311 = load float, float* %246, align 4
  %312 = fadd float %311, 1.000000e+00
  store float %312, float* %246, align 4
  %313 = load float, float* %252, align 4
  %314 = fadd float %313, 1.000000e+00
  store float %314, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %315 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 7
  %316 = load i32, i32* %315, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %316, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %317 = load float, float* %246, align 4
  %318 = fadd float %317, 1.000000e+00
  store float %318, float* %246, align 4
  %319 = load float, float* %252, align 4
  %320 = fadd float %319, 1.000000e+00
  store float %320, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %321 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 8
  %322 = load i32, i32* %321, align 16
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %322, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %323 = load float, float* %246, align 4
  %324 = fadd float %323, 1.000000e+00
  store float %324, float* %246, align 4
  %325 = load float, float* %252, align 4
  %326 = fadd float %325, 1.000000e+00
  store float %326, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %327 = getelementptr inbounds [10 x i32], [10 x i32]* %17, i64 0, i64 9
  %328 = load i32, i32* %327, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #8
  store i32 %328, i32* %18, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %18, float 1.000000e+00) #8
  %329 = load float, float* %246, align 4
  %330 = fadd float %329, 1.000000e+00
  store float %330, float* %246, align 4
  %331 = load float, float* %252, align 4
  %332 = fadd float %331, 1.000000e+00
  store float %332, float* %252, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #8
  %333 = load float, float* %30, align 4
  %334 = load float, float* %29, align 4
  %335 = fsub float %333, %334
  %336 = fcmp ugt float %335, 8.000000e+00
  br i1 %336, label %337, label %360

337:                                              ; preds = %244
  %338 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %338) #8
  %339 = or i32 %49, 7895160
  store i32 %339, i32* %19, align 4
  %340 = bitcast %class.CFX_PTemplate* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %340) #8
  %341 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %20, i64 0, i32 0
  %342 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %20, i64 0, i32 1
  %343 = load float, float* %45, align 4
  %344 = fadd float %343, -2.500000e+00
  %345 = load float, float* %46, align 4
  %346 = fadd float %345, -2.750000e+00
  %347 = fadd float %346, 5.000000e-01
  store float %344, float* %341, align 4
  store float %347, float* %342, align 4
  %348 = bitcast %class.CFX_PTemplate* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %348) #8
  %349 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %21, i64 0, i32 0
  %350 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %21, i64 0, i32 1
  %351 = fadd float %343, 2.500000e+00
  store float %351, float* %349, align 4
  store float %347, float* %350, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %20, %class.CFX_PTemplate* nonnull dereferenceable(8) %21, i32* nonnull dereferenceable(4) %19, float 1.000000e+00) #8
  %352 = load float, float* %342, align 4
  %353 = fadd float %352, 2.000000e+00
  store float %353, float* %342, align 4
  %354 = load float, float* %350, align 4
  %355 = fadd float %354, 2.000000e+00
  store float %355, float* %350, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %20, %class.CFX_PTemplate* nonnull dereferenceable(8) %21, i32* nonnull dereferenceable(4) %19, float 1.000000e+00) #8
  %356 = load float, float* %342, align 4
  %357 = fadd float %356, 2.000000e+00
  store float %357, float* %342, align 4
  %358 = load float, float* %350, align 4
  %359 = fadd float %358, 2.000000e+00
  store float %359, float* %350, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %20, %class.CFX_PTemplate* nonnull dereferenceable(8) %21, i32* nonnull dereferenceable(4) %19, float 1.000000e+00) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %348) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %340) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %338) #8
  br label %360

360:                                              ; preds = %244, %337
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %257) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #8
  br label %361

361:                                              ; preds = %62, %93, %360
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8
  br label %362

362:                                              ; preds = %39, %26, %361
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  br label %363

363:                                              ; preds = %3, %362
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare void @_ZNK8CPWL_Wnd14GetCenterPointEv(%class.CFX_PTemplate* sret, %class.CPWL_Wnd*) local_unnamed_addr #1

declare i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare void @_ZN16CFX_RenderDevice14DrawStrokeRectERK10CFX_MatrixRK13CFX_FloatRectRKjf(%class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), %class.CFX_FloatRect* dereferenceable(16), i32* dereferenceable(4), float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect*, float, float) local_unnamed_addr #1

declare void @_ZN16CFX_RenderDevice10DrawShadowERK10CFX_MatrixbbRK13CFX_FloatRectiii(%class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), i1 zeroext, i1 zeroext, %class.CFX_FloatRect* dereferenceable(16), i32, i32, i32) local_unnamed_addr #1

declare void @_ZN16CFX_RenderDevice12DrawFillAreaERK10CFX_MatrixRKNSt3__16vectorI13CFX_PTemplateIfENS3_9allocatorIS6_EEEERKj(%class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), %"class.std::__1::vector.28"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice*, %class.CFX_Matrix*, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8), i32* dereferenceable(4), float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_SBButton13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_SBButton*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_SBButton* %0 to %class.CPWL_Wnd*
  %5 = tail call zeroext i1 @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #8
  %6 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 0, i32 4, i32 0
  %7 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %6, align 8
  %8 = icmp eq %class.CPWL_Wnd* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = bitcast %class.CPWL_Wnd* %7 to void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)***
  %11 = load void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)**, void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)*, void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)** %11, i64 15
  %13 = load void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)*, void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)** %12, align 8
  tail call void %13(%class.CPWL_Wnd* nonnull %7, %class.CPWL_Wnd* %4, %class.CFX_PTemplate* dereferenceable(8) %2) #8
  br label %14

14:                                               ; preds = %3, %9
  %15 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 2
  store i8 1, i8* %15, align 4
  tail call void @_ZN8CPWL_Wnd10SetCaptureEv(%class.CPWL_Wnd* %4) #8
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd10SetCaptureEv(%class.CPWL_Wnd*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_SBButton11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_SBButton*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_SBButton* %0 to %class.CPWL_Wnd*
  %5 = tail call zeroext i1 @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #8
  %6 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 0, i32 4, i32 0
  %7 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %6, align 8
  %8 = icmp eq %class.CPWL_Wnd* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = bitcast %class.CPWL_Wnd* %7 to void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)***
  %11 = load void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)**, void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)*, void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)** %11, i64 16
  %13 = load void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)*, void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)** %12, align 8
  tail call void %13(%class.CPWL_Wnd* nonnull %7, %class.CPWL_Wnd* %4, %class.CFX_PTemplate* dereferenceable(8) %2) #8
  br label %14

14:                                               ; preds = %3, %9
  %15 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 2
  store i8 0, i8* %15, align 4
  tail call void @_ZN8CPWL_Wnd14ReleaseCaptureEv(%class.CPWL_Wnd* %4) #8
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd14ReleaseCaptureEv(%class.CPWL_Wnd*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_SBButton11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CPWL_SBButton*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_SBButton* %0 to %class.CPWL_Wnd*
  %5 = tail call zeroext i1 @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #8
  %6 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %0, i64 0, i32 0, i32 4, i32 0
  %7 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %6, align 8
  %8 = icmp eq %class.CPWL_Wnd* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = bitcast %class.CPWL_Wnd* %7 to void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)***
  %11 = load void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)**, void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)*, void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)** %11, i64 17
  %13 = load void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)*, void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)** %12, align 8
  tail call void %13(%class.CPWL_Wnd* nonnull %7, %class.CPWL_Wnd* %4, %class.CFX_PTemplate* dereferenceable(8) %2) #8
  br label %14

14:                                               ; preds = %3, %9
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd*, %class.CFX_FloatRect*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd9OnKeyDownEtj(%class.CPWL_Wnd*, i16 zeroext, i32) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd6OnCharEtj(%class.CPWL_Wnd*, i16 zeroext, i32) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_VTemplate*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd13SetScrollInfoERK15PWL_SCROLL_INFO(%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd17SetScrollPositionEf(%class.CPWL_Wnd*, float) unnamed_addr #1

declare void @_ZN8CPWL_Wnd22ScrollWindowVerticallyEf(%class.CPWL_Wnd*, float) unnamed_addr #1

declare void @_ZN8CPWL_Wnd17NotifyLButtonDownEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd15NotifyLButtonUpEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd15NotifyMouseMoveEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd8SetFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd9KillFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd9SetCursorEv(%class.CPWL_Wnd*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd*, i1 zeroext) unnamed_addr #1

declare void @_ZN8CPWL_Wnd11SetFontSizeEf(%class.CPWL_Wnd*, float) unnamed_addr #1

declare float @_ZNK8CPWL_Wnd11GetFontSizeEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd15GetSelectedTextEv(%"class.fxcrt::WideString"* sret, %class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd16ReplaceSelectionERKN5fxcrt10WideStringE(%class.CPWL_Wnd*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd13SelectAllTextEv(%class.CPWL_Wnd*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd7CanUndoEv(%class.CPWL_Wnd*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd7CanRedoEv(%class.CPWL_Wnd*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd4UndoEv(%class.CPWL_Wnd*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd4RedoEv(%class.CPWL_Wnd*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd12GetFocusRectEv(%class.CPWL_Wnd*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd10OnSetFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd11OnKillFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd14CreateChildWndERKNS_12CreateParamsE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd13RePosChildWndEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd9OnCreatedEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd9OnDestroyEv(%class.CPWL_Wnd*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
