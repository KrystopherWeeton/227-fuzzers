; ModuleID = '../../net/cert/merkle_tree_leaf.cc'
source_filename = "../../net/cert/merkle_tree_leaf.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ct::MerkleTreeLeaf" = type { %"struct.net::ct::SignedEntryData", %"class.base::Time", %"class.std::__1::basic_string" }
%"struct.net::ct::SignedEntryData" = type { i32, %"class.std::__1::basic_string", %"struct.net::SHA256HashValue", %"class.std::__1::basic_string" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::vector.10" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.17", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }

@_ZN3net2ct14MerkleTreeLeafC1Ev = hidden unnamed_addr alias void (%"struct.net::ct::MerkleTreeLeaf"*), void (%"struct.net::ct::MerkleTreeLeaf"*)* @_ZN3net2ct14MerkleTreeLeafC2Ev
@_ZN3net2ct14MerkleTreeLeafC1ERKS1_ = hidden unnamed_addr alias void (%"struct.net::ct::MerkleTreeLeaf"*, %"struct.net::ct::MerkleTreeLeaf"*), void (%"struct.net::ct::MerkleTreeLeaf"*, %"struct.net::ct::MerkleTreeLeaf"*)* @_ZN3net2ct14MerkleTreeLeafC2ERKS1_
@_ZN3net2ct14MerkleTreeLeafC1EOS1_ = hidden unnamed_addr alias void (%"struct.net::ct::MerkleTreeLeaf"*, %"struct.net::ct::MerkleTreeLeaf"*), void (%"struct.net::ct::MerkleTreeLeaf"*, %"struct.net::ct::MerkleTreeLeaf"*)* @_ZN3net2ct14MerkleTreeLeafC2EOS1_
@_ZN3net2ct14MerkleTreeLeafD1Ev = hidden unnamed_addr alias void (%"struct.net::ct::MerkleTreeLeaf"*), void (%"struct.net::ct::MerkleTreeLeaf"*)* @_ZN3net2ct14MerkleTreeLeafD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct14MerkleTreeLeafC2Ev(%"struct.net::ct::MerkleTreeLeaf"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0
  tail call void @_ZN3net2ct15SignedEntryDataC1Ev(%"struct.net::ct::SignedEntryData"* %2) #5
  %3 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN3net2ct15SignedEntryDataC1Ev(%"struct.net::ct::SignedEntryData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct14MerkleTreeLeafC2ERKS1_(%"struct.net::ct::MerkleTreeLeaf"*, %"struct.net::ct::MerkleTreeLeaf"* nocapture readonly dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #5
  br label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %17, i64 %19) #5
  br label %20

20:                                               ; preds = %15, %12
  %21 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0, i32 2, i32 0, i64 0
  %22 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 2, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false) #5
  %23 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0, i32 3
  %24 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 3
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #5
  br label %37

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %34, i64 %36) #5
  br label %37

37:                                               ; preds = %29, %32
  %38 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 2
  %42 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 2
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #5
  br label %55

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %41, i8* %52, i64 %54) #5
  br label %55

55:                                               ; preds = %47, %50
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct14MerkleTreeLeafC2EOS1_(%"struct.net::ct::MerkleTreeLeaf"*, %"struct.net::ct::MerkleTreeLeaf"* nocapture dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #5
  br label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %17, i64 %19) #5
  br label %20

20:                                               ; preds = %15, %12
  %21 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0, i32 2, i32 0, i64 0
  %22 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 2, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false) #5
  %23 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0, i32 3
  %24 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 3
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #5
  br label %37

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %34, i64 %36) #5
  br label %37

37:                                               ; preds = %29, %32
  %38 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 2
  %42 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %1, i64 0, i32 2
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct14MerkleTreeLeafD2Ev(%"struct.net::ct::MerkleTreeLeaf"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #6
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %0, i64 0, i32 0
  tail call void @_ZN3net2ct15SignedEntryDataD1Ev(%"struct.net::ct::SignedEntryData"* %11) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net2ct15SignedEntryDataD1Ev(%"struct.net::ct::SignedEntryData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct18HashMerkleTreeLeafERKNS0_14MerkleTreeLeafEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::MerkleTreeLeaf"* dereferenceable(120), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  store i8 1, i8* %8, align 1
  store i8 0, i8* %5, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 1
  store i8 0, i8* %10, align 1
  %11 = call zeroext i1 @_ZN3net2ct14EncodeTreeLeafERKNS0_14MerkleTreeLeafEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::MerkleTreeLeaf"* dereferenceable(120) %0, %"class.std::__1::basic_string"* nonnull %3) #5
  br i1 %11, label %12, label %31

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #5
  %15 = load i8, i8* %8, align 1
  %16 = icmp slt i8 %15, 0
  %17 = load i8*, i8** %6, align 8
  %18 = select i1 %16, i8* %17, i8* %5
  %19 = load i64, i64* %13, align 8
  %20 = zext i8 %15 to i64
  %21 = select i1 %16, i64 %19, i64 %20
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* %18, i64 %21) #5
  %22 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #6
  br label %29

29:                                               ; preds = %26, %12
  %30 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %14, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #5
  br label %31

31:                                               ; preds = %2, %29
  %32 = phi i1 [ true, %29 ], [ false, %2 ]
  %33 = load i8, i8* %8, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %36) #6
  br label %37

37:                                               ; preds = %31, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret i1 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN3net2ct14EncodeTreeLeafERKNS0_14MerkleTreeLeafEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::MerkleTreeLeaf"* dereferenceable(120), %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct17GetMerkleTreeLeafEPKNS_15X509CertificateEPKNS0_26SignedCertificateTimestampEPNS0_14MerkleTreeLeafE(%"class.net::X509Certificate"* nocapture readonly, %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::MerkleTreeLeaf"*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %1, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %0, i64 0, i32 7, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr"* %9, %11
  br i1 %12, label %61, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %17 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %16, align 8
  %18 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %2, i64 0, i32 0
  %19 = tail call zeroext i1 @_ZN3net2ct21GetPrecertSignedEntryEPK16crypto_buffer_stS3_PNS0_15SignedEntryDataE(%struct.crypto_buffer_st* %15, %struct.crypto_buffer_st* %17, %"struct.net::ct::SignedEntryData"* %18) #5
  br i1 %19, label %25, label %61

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %22 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %21, align 8
  %23 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %2, i64 0, i32 0
  %24 = tail call zeroext i1 @_ZN3net2ct18GetX509SignedEntryEPK16crypto_buffer_stPNS0_15SignedEntryDataE(%struct.crypto_buffer_st* %22, %"struct.net::ct::SignedEntryData"* %23) #5
  br i1 %24, label %25, label %61

25:                                               ; preds = %20, %13
  %26 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %1, i64 0, i32 3, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %2, i64 0, i32 1, i32 0, i32 0
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %1, i64 0, i32 4
  %30 = getelementptr inbounds %"struct.net::ct::MerkleTreeLeaf", %"struct.net::ct::MerkleTreeLeaf"* %2, i64 0, i32 2
  %31 = icmp eq %"class.std::__1::basic_string"* %30, %29
  br i1 %31, label %61, label %32

32:                                               ; preds = %25
  %33 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #5
  br label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %47, i64 %49) #5
  br label %61

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %58, i64 %59) #5
  br label %61

61:                                               ; preds = %51, %45, %42, %25, %20, %7, %13
  %62 = phi i1 [ false, %13 ], [ false, %7 ], [ false, %20 ], [ true, %25 ], [ true, %42 ], [ true, %45 ], [ true, %51 ]
  ret i1 %62
}

declare zeroext i1 @_ZN3net2ct21GetPrecertSignedEntryEPK16crypto_buffer_stS3_PNS0_15SignedEntryDataE(%struct.crypto_buffer_st*, %struct.crypto_buffer_st*, %"struct.net::ct::SignedEntryData"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net2ct18GetX509SignedEntryEPK16crypto_buffer_stPNS0_15SignedEntryDataE(%struct.crypto_buffer_st*, %"struct.net::ct::SignedEntryData"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
