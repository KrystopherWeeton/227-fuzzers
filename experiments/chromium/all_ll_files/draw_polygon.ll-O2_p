; ModuleID = '../../components/viz/service/display/draw_polygon.cc'
source_filename = "../../components/viz/service/display/draw_polygon.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.viz::DrawPolygon" = type <{ %"class.std::__1::vector", %"class.gfx::Vector3dF", i32, %"class.viz::DrawQuad"*, i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Point3F"* }
%"class.gfx::Vector3dF" = type { float, float, float }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.1", float, i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Rect" }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType"] }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.gfx::QuadF" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.viz::DrawPolygon"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { float*, float*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { float* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.gfx::QuadF"*, %"class.gfx::QuadF"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.gfx::QuadF"* }

$_ZNSt3__16vectorIN3gfx7Point3FENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

@__const._ZN3viz11DrawPolygon22ApplyTransformToNormalERKN3gfx9TransformE.inverse_transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN3viz11DrawPolygonC1Ev = hidden unnamed_addr alias void (%"class.viz::DrawPolygon"*), void (%"class.viz::DrawPolygon"*)* @_ZN3viz11DrawPolygonC2Ev
@_ZN3viz11DrawPolygonC1EPKNS_8DrawQuadERKNSt3__16vectorIN3gfx7Point3FENS4_9allocatorIS7_EEEERKNS6_9Vector3dFEi = hidden unnamed_addr alias void (%"class.viz::DrawPolygon"*, %"class.viz::DrawQuad"*, %"class.std::__1::vector"*, %"class.gfx::Vector3dF"*, i32), void (%"class.viz::DrawPolygon"*, %"class.viz::DrawQuad"*, %"class.std::__1::vector"*, %"class.gfx::Vector3dF"*, i32)* @_ZN3viz11DrawPolygonC2EPKNS_8DrawQuadERKNSt3__16vectorIN3gfx7Point3FENS4_9allocatorIS7_EEEERKNS6_9Vector3dFEi
@_ZN3viz11DrawPolygonC1EPKNS_8DrawQuadERKN3gfx5RectFERKNS4_9TransformEi = hidden unnamed_addr alias void (%"class.viz::DrawPolygon"*, %"class.viz::DrawQuad"*, %"class.gfx::RectF"*, %"class.gfx::Transform"*, i32), void (%"class.viz::DrawPolygon"*, %"class.viz::DrawQuad"*, %"class.gfx::RectF"*, %"class.gfx::Transform"*, i32)* @_ZN3viz11DrawPolygonC2EPKNS_8DrawQuadERKN3gfx5RectFERKNS4_9TransformEi
@_ZN3viz11DrawPolygonD1Ev = hidden unnamed_addr alias void (%"class.viz::DrawPolygon"*), void (%"class.viz::DrawPolygon"*)* @_ZN3viz11DrawPolygonD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz11DrawPolygonC2Ev(%"class.viz::DrawPolygon"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::DrawPolygon"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz11DrawPolygonC2EPKNS_8DrawQuadERKNSt3__16vectorIN3gfx7Point3FENS4_9allocatorIS7_EEEERKNS6_9Vector3dFEi(%"class.viz::DrawPolygon"*, %"class.viz::DrawQuad"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.gfx::Vector3dF"* nocapture readonly dereferenceable(12), i32) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.viz::DrawPolygon"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #7
  %7 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  %8 = bitcast %"class.gfx::Vector3dF"* %7 to i8*
  %9 = bitcast %"class.gfx::Vector3dF"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 12, i1 false)
  %10 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 2
  store i32 %4, i32* %10, align 4
  %11 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 3
  store %"class.viz::DrawQuad"* %1, %"class.viz::DrawQuad"** %11, align 8
  %12 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 4
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"class.gfx::Point3F"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %26, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.gfx::Point3F"** %20 to i64*
  %23 = bitcast %"class.viz::DrawPolygon"* %0 to i64*
  %24 = bitcast %"class.gfx::Point3F"** %21 to i64*
  %25 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 0
  br label %27

26:                                               ; preds = %88, %5
  ret void

27:                                               ; preds = %95, %19
  %28 = phi %"class.gfx::Point3F"* [ null, %19 ], [ %98, %95 ]
  %29 = phi i8* [ null, %19 ], [ %97, %95 ]
  %30 = phi %"class.gfx::Point3F"* [ null, %19 ], [ %96, %95 ]
  %31 = phi i64 [ %17, %19 ], [ %91, %95 ]
  %32 = phi i64 [ 0, %19 ], [ %89, %95 ]
  %33 = inttoptr i64 %31 to %"class.gfx::Point3F"*
  %34 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %33, i64 %32
  %35 = icmp eq %"class.gfx::Point3F"* %30, %28
  br i1 %35, label %40, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.gfx::Point3F"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %37, i64 12, i1 false) #7
  %38 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %30, i64 1
  %39 = ptrtoint %"class.gfx::Point3F"* %38 to i64
  store i64 %39, i64* %22, align 8
  br label %88

40:                                               ; preds = %27
  %41 = ptrtoint %"class.gfx::Point3F"* %28 to i64
  %42 = load i64, i64* %23, align 8
  %43 = sub i64 %41, %42
  %44 = sdiv exact i64 %43, 12
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 1537228672809129301
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = bitcast %"class.viz::DrawPolygon"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #8
  unreachable

49:                                               ; preds = %40
  %50 = icmp ult i64 %44, 768614336404564650
  br i1 %50, label %51, label %56

51:                                               ; preds = %49
  %52 = shl nsw i64 %44, 1
  %53 = icmp ult i64 %52, %45
  %54 = select i1 %53, i64 %45, i64 %52
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51, %49
  %57 = phi i64 [ %54, %51 ], [ 1537228672809129301, %49 ]
  %58 = mul i64 %57, 12
  %59 = tail call i8* @_Znwm(i64 %58) #9
  %60 = bitcast i8* %59 to %"class.gfx::Point3F"*
  br label %61

61:                                               ; preds = %56, %51
  %62 = phi i64 [ %57, %56 ], [ 0, %51 ]
  %63 = phi %"class.gfx::Point3F"* [ %60, %56 ], [ null, %51 ]
  %64 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %63, i64 %44
  %65 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %63, i64 %62
  %66 = ptrtoint %"class.gfx::Point3F"* %65 to i64
  %67 = bitcast %"class.gfx::Point3F"* %64 to i8*
  %68 = bitcast %"class.gfx::Point3F"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 12, i1 false) #7
  %69 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %64, i64 1
  %70 = ptrtoint %"class.gfx::Point3F"* %69 to i64
  %71 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %25, align 8
  %72 = load i64, i64* %22, align 8
  %73 = ptrtoint %"class.gfx::Point3F"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = sdiv exact i64 %74, -12
  %76 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %64, i64 %75
  %77 = ptrtoint %"class.gfx::Point3F"* %76 to i64
  %78 = icmp sgt i64 %74, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %61
  %80 = bitcast %"class.gfx::Point3F"* %76 to i8*
  %81 = bitcast %"class.gfx::Point3F"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 %74, i1 false) #7
  %82 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %25, align 8
  br label %83

83:                                               ; preds = %79, %61
  %84 = phi %"class.gfx::Point3F"* [ %71, %61 ], [ %82, %79 ]
  store i64 %77, i64* %23, align 8
  store i64 %70, i64* %22, align 8
  store i64 %66, i64* %24, align 8
  %85 = icmp eq %"class.gfx::Point3F"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.gfx::Point3F"* %84 to i8*
  tail call void @_ZdlPv(i8* %87) #9
  br label %88

88:                                               ; preds = %36, %83, %86
  %89 = add nuw i64 %32, 1
  %90 = load i64, i64* %14, align 8
  %91 = load i64, i64* %16, align 8
  %92 = sub i64 %90, %91
  %93 = sdiv exact i64 %92, 12
  %94 = icmp ult i64 %89, %93
  br i1 %94, label %95, label %26

95:                                               ; preds = %88
  %96 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %20, align 8
  %97 = bitcast %"class.gfx::Point3F"* %96 to i8*
  %98 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %21, align 8
  br label %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz11DrawPolygonC2EPKNS_8DrawQuadERKN3gfx5RectFERKNS4_9TransformEi(%"class.viz::DrawPolygon"*, %"class.viz::DrawQuad"*, %"class.gfx::RectF"* nocapture readonly dereferenceable(16), %"class.gfx::Transform"* dereferenceable(68), i32) unnamed_addr #0 align 2 {
  %6 = alloca [6 x %"class.gfx::Point3F"], align 16
  %7 = bitcast [6 x %"class.gfx::Point3F"]* %6 to i8*
  %8 = alloca i32, align 4
  %9 = alloca %"class.gfx::QuadF", align 4
  %10 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 2
  %12 = bitcast %"class.viz::DrawPolygon"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  store float 1.000000e+00, float* %11, align 4
  %13 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 2
  store i32 %4, i32* %13, align 4
  %14 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 3
  store %"class.viz::DrawQuad"* %1, %"class.viz::DrawQuad"** %14, align 8
  %15 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 4
  store i8 0, i8* %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #7
  %16 = getelementptr inbounds [6 x %"class.gfx::Point3F"], [6 x %"class.gfx::Point3F"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 72, i1 false)
  %17 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #7
  store i32 -1431655766, i32* %8, align 4
  %18 = bitcast %"class.gfx::QuadF"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %9, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %9, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %9, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %9, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %9, i64 0, i32 2, i32 1
  %24 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %9, i64 0, i32 3, i32 1
  %25 = bitcast %"class.gfx::RectF"* %2 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %2, i64 0, i32 0, i32 1
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = bitcast %"class.gfx::QuadF"* %9 to i32*
  store i32 %26, i32* %30, align 4
  %31 = bitcast float* %19 to i32*
  store i32 %29, i32* %31, align 4
  %32 = bitcast i32 %26 to float
  %33 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %2, i64 0, i32 1, i32 0
  %34 = load float, float* %33, align 4
  %35 = fadd float %34, %32
  store float %35, float* %20, align 4
  %36 = bitcast float* %21 to i32*
  store i32 %29, i32* %36, align 4
  %37 = bitcast i32 %29 to float
  %38 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %2, i64 0, i32 1, i32 1
  %39 = load float, float* %38, align 4
  %40 = fadd float %39, %37
  store float %35, float* %22, align 4
  store float %40, float* %23, align 4
  %41 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %9, i64 0, i32 3
  %42 = bitcast %"class.gfx::PointF"* %41 to i32*
  store i32 %26, i32* %42, align 4
  store float %40, float* %24, align 4
  %43 = call zeroext i1 @_ZN2cc8MathUtil16MapClippedQuad3dERKN3gfx9TransformERKNS1_5QuadFEPNS1_7Point3FEPi(%"class.gfx::Transform"* dereferenceable(68) %3, %"class.gfx::QuadF"* nonnull dereferenceable(32) %9, %"class.gfx::Point3F"* nonnull %16, i32* nonnull %8) #7
  %44 = load i32, i32* %8, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %5
  %47 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.gfx::Point3F"** %47 to i64*
  %50 = bitcast %"class.viz::DrawPolygon"* %0 to i64*
  %51 = bitcast %"class.gfx::Point3F"** %48 to i64*
  %52 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 0
  br label %54

53:                                               ; preds = %118, %5
  call void @_ZNK3gfx9Transform15TransformVectorEPNS_9Vector3dFE(%"class.gfx::Transform"* %3, %"class.gfx::Vector3dF"* %10) #7
  call void @_ZN3viz11DrawPolygon15ConstructNormalEv(%"class.viz::DrawPolygon"* %0)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #7
  ret void

54:                                               ; preds = %46, %118
  %55 = phi i32 [ %44, %46 ], [ %119, %118 ]
  %56 = phi i64 [ 0, %46 ], [ %120, %118 ]
  %57 = getelementptr inbounds [6 x %"class.gfx::Point3F"], [6 x %"class.gfx::Point3F"]* %6, i64 0, i64 %56
  %58 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %47, align 8
  %59 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %48, align 8
  %60 = icmp eq %"class.gfx::Point3F"* %58, %59
  %61 = ptrtoint %"class.gfx::Point3F"* %59 to i64
  br i1 %60, label %67, label %62

62:                                               ; preds = %54
  %63 = bitcast %"class.gfx::Point3F"* %58 to i8*
  %64 = bitcast %"class.gfx::Point3F"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 12, i1 false) #7
  %65 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %58, i64 1
  %66 = ptrtoint %"class.gfx::Point3F"* %65 to i64
  store i64 %66, i64* %49, align 8
  br label %118

67:                                               ; preds = %54
  %68 = ptrtoint %"class.gfx::Point3F"* %58 to i64
  %69 = load i64, i64* %50, align 8
  %70 = sub i64 %68, %69
  %71 = sdiv exact i64 %70, 12
  %72 = add nsw i64 %71, 1
  %73 = icmp ugt i64 %72, 1537228672809129301
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.viz::DrawPolygon"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #8
  unreachable

76:                                               ; preds = %67
  %77 = sub i64 %61, %69
  %78 = sdiv exact i64 %77, 12
  %79 = icmp ult i64 %78, 768614336404564650
  br i1 %79, label %80, label %85

80:                                               ; preds = %76
  %81 = shl nsw i64 %78, 1
  %82 = icmp ult i64 %81, %72
  %83 = select i1 %82, i64 %72, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80, %76
  %86 = phi i64 [ %83, %80 ], [ 1537228672809129301, %76 ]
  %87 = mul i64 %86, 12
  %88 = call i8* @_Znwm(i64 %87) #9
  %89 = bitcast i8* %88 to %"class.gfx::Point3F"*
  br label %90

90:                                               ; preds = %85, %80
  %91 = phi i64 [ %86, %85 ], [ 0, %80 ]
  %92 = phi %"class.gfx::Point3F"* [ %89, %85 ], [ null, %80 ]
  %93 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %92, i64 %71
  %94 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %92, i64 %91
  %95 = ptrtoint %"class.gfx::Point3F"* %94 to i64
  %96 = bitcast %"class.gfx::Point3F"* %93 to i8*
  %97 = bitcast %"class.gfx::Point3F"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 4 %97, i64 12, i1 false) #7
  %98 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %93, i64 1
  %99 = ptrtoint %"class.gfx::Point3F"* %98 to i64
  %100 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %52, align 8
  %101 = load i64, i64* %49, align 8
  %102 = ptrtoint %"class.gfx::Point3F"* %100 to i64
  %103 = sub i64 %101, %102
  %104 = sdiv exact i64 %103, -12
  %105 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %93, i64 %104
  %106 = ptrtoint %"class.gfx::Point3F"* %105 to i64
  %107 = icmp sgt i64 %103, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %90
  %109 = bitcast %"class.gfx::Point3F"* %105 to i8*
  %110 = bitcast %"class.gfx::Point3F"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 %103, i1 false) #7
  %111 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %52, align 8
  br label %112

112:                                              ; preds = %108, %90
  %113 = phi %"class.gfx::Point3F"* [ %100, %90 ], [ %111, %108 ]
  store i64 %106, i64* %50, align 8
  store i64 %99, i64* %49, align 8
  store i64 %95, i64* %51, align 8
  %114 = icmp eq %"class.gfx::Point3F"* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.gfx::Point3F"* %113 to i8*
  call void @_ZdlPv(i8* %116) #9
  %117 = load i32, i32* %8, align 4
  br label %118

118:                                              ; preds = %62, %112, %115
  %119 = phi i32 [ %55, %62 ], [ %55, %112 ], [ %117, %115 ]
  %120 = add nuw nsw i64 %56, 1
  %121 = sext i32 %119 to i64
  %122 = icmp slt i64 %120, %121
  br i1 %122, label %54, label %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN2cc8MathUtil16MapClippedQuad3dERKN3gfx9TransformERKNS1_5QuadFEPNS1_7Point3FEPi(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::QuadF"* dereferenceable(32), %"class.gfx::Point3F"*, i32*) local_unnamed_addr #2

declare void @_ZNK3gfx9Transform15TransformVectorEPNS_9Vector3dFE(%"class.gfx::Transform"*, %"class.gfx::Vector3dF"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz11DrawPolygon15ConstructNormalEv(%"class.viz::DrawPolygon"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::Vector3dF", align 8
  %3 = alloca %"class.gfx::Vector3dF", align 4
  %4 = alloca %"class.gfx::Vector3dF", align 8
  %5 = alloca %"class.gfx::Vector3dF", align 8
  %6 = bitcast %"class.gfx::Vector3dF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 2
  store float 0.000000e+00, float* %7, align 4
  store float 0.000000e+00, float* %8, align 4
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.gfx::Point3F"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.viz::DrawPolygon"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 12
  %17 = shl i64 %16, 31
  %18 = ashr i64 %17, 32
  %19 = add nsw i64 %18, 1
  %20 = icmp ult i64 %19, %16
  br i1 %20, label %21, label %35

21:                                               ; preds = %1
  %22 = bitcast %"class.gfx::Vector3dF"* %4 to i8*
  %23 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.gfx::Vector3dF"* %5 to i8*
  %25 = bitcast %"class.gfx::Vector3dF"* %5 to <2 x float>*
  %26 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %5, i64 0, i32 2
  %27 = bitcast %"class.gfx::Vector3dF"* %2 to i8*
  %28 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 2
  %29 = bitcast %"class.gfx::Vector3dF"* %2 to <2 x float>*
  %30 = bitcast %"class.gfx::Vector3dF"* %2 to i64*
  %31 = bitcast float* %28 to i32*
  %32 = bitcast %"class.gfx::Vector3dF"* %4 to i64*
  %33 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %4, i64 0, i32 2
  %34 = bitcast float* %33 to i32*
  br label %45

35:                                               ; preds = %45, %1
  %36 = call float @_ZNK3gfx9Vector3dF6LengthEv(%"class.gfx::Vector3dF"* nonnull %3) #7
  %37 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  %38 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12) %37, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %3) #7
  %39 = fcmp olt float %38, 0.000000e+00
  %40 = fsub float -0.000000e+00, %36
  %41 = select i1 %39, float %40, float %36
  %42 = fcmp une float %41, 0.000000e+00
  %43 = fcmp une float %41, 1.000000e+00
  %44 = and i1 %42, %43
  br i1 %44, label %68, label %70

45:                                               ; preds = %21, %45
  %46 = phi i64 [ %14, %21 ], [ %64, %45 ]
  %47 = phi i64 [ %19, %21 ], [ %62, %45 ]
  %48 = phi i64 [ 1, %21 ], [ %61, %45 ]
  %49 = inttoptr i64 %46 to %"class.gfx::Point3F"*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %22) #7
  %50 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %49, i64 %48
  %51 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12) %50, %"class.gfx::Point3F"* dereferenceable(12) %49) #7
  %52 = extractvalue { <2 x float>, float } %51, 0
  %53 = extractvalue { <2 x float>, float } %51, 1
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %24) #7
  %54 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %23, align 8
  %55 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %54, i64 %47
  %56 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12) %55, %"class.gfx::Point3F"* dereferenceable(12) %54) #7
  %57 = extractvalue { <2 x float>, float } %56, 0
  %58 = extractvalue { <2 x float>, float } %56, 1
  store <2 x float> %57, <2 x float>* %25, align 8
  store float %58, float* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %27)
  store <2 x float> %52, <2 x float>* %29, align 8
  store float %53, float* %28, align 8
  call void @_ZN3gfx9Vector3dF5CrossERKS0_(%"class.gfx::Vector3dF"* nonnull %2, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %5) #7
  %59 = load i64, i64* %30, align 8
  %60 = load i32, i32* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %27)
  store i64 %59, i64* %32, align 8
  store i32 %60, i32* %34, align 8
  call void @_ZN3gfx9Vector3dF3AddERKS0_(%"class.gfx::Vector3dF"* nonnull %3, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %22) #7
  %61 = add i64 %48, 1
  %62 = add i64 %61, %18
  %63 = load i64, i64* %11, align 8
  %64 = load i64, i64* %13, align 8
  %65 = sub i64 %63, %64
  %66 = sdiv exact i64 %65, 12
  %67 = icmp ult i64 %62, %66
  br i1 %67, label %45, label %35

68:                                               ; preds = %35
  %69 = fdiv float 1.000000e+00, %41
  call void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"* nonnull %3, float %69, float %69, float %69) #7
  br label %70

70:                                               ; preds = %68, %35
  %71 = bitcast %"class.gfx::Vector3dF"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 4 %6, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz11DrawPolygonD2Ev(%"class.viz::DrawPolygon"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %2, align 8
  %4 = icmp eq %"class.gfx::Point3F"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.gfx::Point3F"* %3 to i64
  %7 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.gfx::Point3F"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.gfx::Point3F"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::DrawPolygon"* @_ZN3viz11DrawPolygon10CreateCopyEv(%"class.viz::DrawPolygon"* readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #9
  %3 = bitcast i8* %2 to %"class.viz::DrawPolygon"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 36, i1 false) #7
  %4 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds i8, i8* %2, i64 36
  %7 = bitcast i8* %6 to i32*
  store i32 %5, i32* %7, align 4
  %8 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 3
  %9 = bitcast %"class.viz::DrawQuad"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 40
  %12 = bitcast i8* %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast i8* %2 to %"class.std::__1::vector"*
  %14 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.gfx::Point3F"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.viz::DrawPolygon"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 12
  %22 = getelementptr inbounds i8, i8* %2, i64 16
  %23 = bitcast i8* %22 to i64*
  %24 = bitcast i8* %2 to i64*
  %25 = icmp eq i64 %20, 0
  %26 = inttoptr i64 %19 to %"class.gfx::Point3F"*
  %27 = inttoptr i64 %17 to %"class.gfx::Point3F"*
  br i1 %25, label %39, label %28

28:                                               ; preds = %1
  %29 = icmp ugt i64 %21, 1537228672809129301
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void @abort() #8
  unreachable

31:                                               ; preds = %28
  %32 = getelementptr inbounds i8, i8* %2, i64 8
  %33 = bitcast i8* %32 to i64*
  %34 = tail call i8* @_Znwm(i64 %20) #9
  %35 = bitcast i8* %34 to %"class.gfx::Point3F"*
  %36 = ptrtoint i8* %34 to i64
  %37 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %35, i64 %21
  %38 = ptrtoint %"class.gfx::Point3F"* %37 to i64
  store i64 %36, i64* %24, align 8
  store i64 %36, i64* %33, align 8
  store i64 %38, i64* %23, align 8
  br label %39

39:                                               ; preds = %31, %1
  %40 = icmp eq %"class.std::__1::vector"* %14, %13
  br i1 %40, label %42, label %41

41:                                               ; preds = %39
  tail call void @_ZNSt3__16vectorIN3gfx7Point3FENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* nonnull %13, %"class.gfx::Point3F"* %26, %"class.gfx::Point3F"* %27) #7
  br label %42

42:                                               ; preds = %39, %41
  %43 = getelementptr inbounds i8, i8* %2, i64 24
  %44 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  %45 = bitcast %"class.gfx::Vector3dF"* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = bitcast i8* %43 to i32*
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 1
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds i8, i8* %2, i64 28
  %52 = bitcast i8* %51 to i32*
  store i32 %50, i32* %52, align 4
  %53 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 2
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds i8, i8* %2, i64 32
  %57 = bitcast i8* %56 to i32*
  store i32 %55, i32* %57, align 4
  ret %"class.viz::DrawPolygon"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12), %"class.gfx::Point3F"* dereferenceable(12)) local_unnamed_addr #2

declare float @_ZNK3gfx9Vector3dF6LengthEv(%"class.gfx::Vector3dF"*) local_unnamed_addr #2

declare float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK3viz11DrawPolygon19SignedPointDistanceERKN3gfx7Point3FE(%"class.viz::DrawPolygon"*, %"class.gfx::Point3F"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Vector3dF", align 8
  %4 = bitcast %"class.gfx::Vector3dF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %5, align 8
  %7 = tail call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12) %1, %"class.gfx::Point3F"* dereferenceable(12) %6) #7
  %8 = extractvalue { <2 x float>, float } %7, 0
  %9 = extractvalue { <2 x float>, float } %7, 1
  %10 = bitcast %"class.gfx::Vector3dF"* %3 to <2 x float>*
  store <2 x float> %8, <2 x float>* %10, align 8
  %11 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 2
  store float %9, float* %11, align 8
  %12 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  %13 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %3, %"class.gfx::Vector3dF"* dereferenceable(12) %12) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #7
  ret float %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz11DrawPolygon22ApplyTransformToNormalERKN3gfx9TransformE(%"class.viz::DrawPolygon"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Point3F", align 4
  %5 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %5) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz11DrawPolygon22ApplyTransformToNormalERKN3gfx9TransformE.inverse_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %1, %"class.gfx::Transform"* nonnull %3) #7
  br i1 %7, label %8, label %36

8:                                                ; preds = %2
  call void @_ZN3gfx9Transform9TransposeEv(%"class.gfx::Transform"* nonnull %3) #7
  %9 = bitcast %"class.gfx::Point3F"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %4, i64 0, i32 2
  %12 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  %13 = bitcast %"class.gfx::Vector3dF"* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 1
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 2
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %"class.gfx::Point3F"* %4 to i32*
  store i32 %14, i32* %21, align 4
  %22 = bitcast float* %10 to i32*
  store i32 %17, i32* %22, align 4
  %23 = bitcast float* %11 to i32*
  store i32 %20, i32* %23, align 4
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %3, %"class.gfx::Point3F"* nonnull %4) #7
  %24 = load i32, i32* %21, align 4
  %25 = load i32, i32* %22, align 4
  %26 = load i32, i32* %23, align 4
  %27 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 0
  %28 = bitcast float* %27 to i32*
  store i32 %24, i32* %28, align 8
  store i32 %25, i32* %16, align 4
  store i32 %26, i32* %19, align 8
  %29 = call float @_ZNK3gfx9Vector3dF6LengthEv(%"class.gfx::Vector3dF"* %12) #7
  %30 = fcmp une float %29, 0.000000e+00
  %31 = fcmp une float %29, 1.000000e+00
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %8
  %34 = fdiv float 1.000000e+00, %29
  call void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"* %12, float %34, float %34, float %34) #7
  br label %35

35:                                               ; preds = %33, %8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #7
  br label %36

36:                                               ; preds = %2, %35
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %5) #7
  ret void
}

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #2

declare void @_ZN3gfx9Transform9TransposeEv(%"class.gfx::Transform"*) local_unnamed_addr #2

declare void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"*, %"class.gfx::Point3F"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz11DrawPolygon14ApplyTransformERKN3gfx9TransformE(%"class.viz::DrawPolygon"* nocapture readonly, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.gfx::Point3F"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.viz::DrawPolygon"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %2
  ret void

10:                                               ; preds = %2, %10
  %11 = phi i64 [ %17, %10 ], [ %7, %2 ]
  %12 = phi i64 [ %15, %10 ], [ 0, %2 ]
  %13 = inttoptr i64 %11 to %"class.gfx::Point3F"*
  %14 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %13, i64 %12
  tail call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* %1, %"class.gfx::Point3F"* %14) #7
  %15 = add nuw i64 %12, 1
  %16 = load i64, i64* %4, align 8
  %17 = load i64, i64* %6, align 8
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 12
  %20 = icmp ult i64 %15, %19
  br i1 %20, label %10, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz11DrawPolygon22TransformToScreenSpaceERKN3gfx9TransformE(%"class.viz::DrawPolygon"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.gfx::Point3F"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.viz::DrawPolygon"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %20, label %9

9:                                                ; preds = %2, %9
  %10 = phi i64 [ %16, %9 ], [ %7, %2 ]
  %11 = phi i64 [ %14, %9 ], [ 0, %2 ]
  %12 = inttoptr i64 %10 to %"class.gfx::Point3F"*
  %13 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %12, i64 %11
  tail call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* %1, %"class.gfx::Point3F"* %13) #7
  %14 = add nuw i64 %11, 1
  %15 = load i64, i64* %4, align 8
  %16 = load i64, i64* %6, align 8
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 12
  %19 = icmp ult i64 %14, %18
  br i1 %19, label %9, label %20

20:                                               ; preds = %9, %2
  %21 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  tail call void @_ZNK3gfx9Transform15TransformVectorEPNS_9Vector3dFE(%"class.gfx::Transform"* %1, %"class.gfx::Vector3dF"* %21) #7
  tail call void @_ZN3viz11DrawPolygon15ConstructNormalEv(%"class.viz::DrawPolygon"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz11DrawPolygon21TransformToLayerSpaceERKN3gfx9TransformE(%"class.viz::DrawPolygon"* nocapture, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.gfx::Point3F"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.viz::DrawPolygon"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %20, label %9

9:                                                ; preds = %2, %9
  %10 = phi i64 [ %16, %9 ], [ %7, %2 ]
  %11 = phi i64 [ %14, %9 ], [ 0, %2 ]
  %12 = inttoptr i64 %10 to %"class.gfx::Point3F"*
  %13 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %12, i64 %11
  tail call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* %1, %"class.gfx::Point3F"* %13) #7
  %14 = add nuw i64 %11, 1
  %15 = load i64, i64* %4, align 8
  %16 = load i64, i64* %6, align 8
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 12
  %19 = icmp ult i64 %14, %18
  br i1 %19, label %9, label %20

20:                                               ; preds = %9, %2
  %21 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %21, align 8
  %22 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %22, align 4
  %23 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1, i32 2
  store float -1.000000e+00, float* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz11DrawPolygon12SplitPolygonENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEEPS5_S6_Pb(%"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"*, %"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.gfx::Vector3dF", align 8
  %7 = alloca %"class.std::__1::vector.10", align 8
  %8 = alloca %"class.gfx::Vector3dF", align 8
  %9 = alloca %"class.gfx::Vector3dF", align 8
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = ptrtoint %"class.viz::DrawPolygon"* %1 to i64
  %12 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.gfx::Point3F"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.viz::DrawPolygon"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 12
  %19 = bitcast %"class.std::__1::vector.10"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %7, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #7
  %22 = bitcast float** %21 to i64*
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %5
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.10"* nonnull %7, i64 %18) #7
  %25 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.gfx::Vector3dF"* %6 to i8*
  %27 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.gfx::Vector3dF"* %6 to <2 x float>*
  %29 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %6, i64 0, i32 2
  %30 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  br label %37

31:                                               ; preds = %61, %5
  %32 = phi i64 [ 0, %5 ], [ %62, %61 ]
  %33 = phi i64 [ 0, %5 ], [ %63, %61 ]
  %34 = icmp eq i64 %33, 0
  %35 = or i64 %33, %32
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %66, label %118

37:                                               ; preds = %24, %61
  %38 = phi i64 [ 0, %24 ], [ %63, %61 ]
  %39 = phi i64 [ 0, %24 ], [ %62, %61 ]
  %40 = phi i64 [ 0, %24 ], [ %64, %61 ]
  %41 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %25, align 8
  %42 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %41, i64 %40
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %26) #7
  %43 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %27, align 8
  %44 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12) %42, %"class.gfx::Point3F"* dereferenceable(12) %43) #7
  %45 = extractvalue { <2 x float>, float } %44, 0
  %46 = extractvalue { <2 x float>, float } %44, 1
  store <2 x float> %45, <2 x float>* %28, align 8
  store float %46, float* %29, align 8
  %47 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %6, %"class.gfx::Vector3dF"* dereferenceable(12) %30) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %26) #7
  %48 = load float*, float** %20, align 8
  %49 = getelementptr inbounds float, float* %48, i64 %40
  store float %47, float* %49, align 4
  %50 = load float*, float** %20, align 8
  %51 = getelementptr inbounds float, float* %50, i64 %40
  %52 = load float, float* %51, align 4
  %53 = fcmp olt float %52, 0xBFA99999A0000000
  br i1 %53, label %54, label %56

54:                                               ; preds = %37
  %55 = add i64 %39, 1
  br label %61

56:                                               ; preds = %37
  %57 = fcmp ogt float %52, 0x3FA99999A0000000
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = add i64 %38, 1
  br label %61

60:                                               ; preds = %56
  store float 0.000000e+00, float* %51, align 4
  br label %61

61:                                               ; preds = %54, %60, %58
  %62 = phi i64 [ %55, %54 ], [ %39, %58 ], [ %39, %60 ]
  %63 = phi i64 [ %38, %54 ], [ %59, %58 ], [ %38, %60 ]
  %64 = add nuw i64 %40, 1
  %65 = icmp ult i64 %64, %18
  br i1 %65, label %37, label %31

66:                                               ; preds = %31
  %67 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  %68 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %1, i64 0, i32 1
  %69 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12) %67, %"class.gfx::Vector3dF"* dereferenceable(12) %68) #7
  %70 = fcmp ult float %69, 0.000000e+00
  br i1 %70, label %77, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %1, i64 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %85

77:                                               ; preds = %71, %66
  %78 = fcmp ugt float %69, 0.000000e+00
  br i1 %78, label %101, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %1, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %81, %83
  br i1 %84, label %101, label %85

85:                                               ; preds = %71, %79
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %86, align 8
  %88 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %11, i64* %88, align 8
  %89 = icmp eq %"class.viz::DrawPolygon"* %87, null
  br i1 %89, label %117, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %87, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %91, align 8
  %93 = icmp eq %"class.gfx::Point3F"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = ptrtoint %"class.gfx::Point3F"* %92 to i64
  %96 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %87, i64 0, i32 0, i32 0, i32 1
  %97 = bitcast %"class.gfx::Point3F"** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = bitcast %"class.gfx::Point3F"* %92 to i8*
  call void @_ZdlPv(i8* %98) #9
  br label %99

99:                                               ; preds = %94, %90
  %100 = bitcast %"class.viz::DrawPolygon"* %87 to i8*
  call void @_ZdlPv(i8* %100) #9
  br label %117

101:                                              ; preds = %79, %77
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %102, align 8
  %104 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %11, i64* %104, align 8
  %105 = icmp eq %"class.viz::DrawPolygon"* %103, null
  br i1 %105, label %117, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %103, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %107, align 8
  %109 = icmp eq %"class.gfx::Point3F"* %108, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %106
  %111 = ptrtoint %"class.gfx::Point3F"* %108 to i64
  %112 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %103, i64 0, i32 0, i32 0, i32 1
  %113 = bitcast %"class.gfx::Point3F"** %112 to i64*
  store i64 %111, i64* %113, align 8
  %114 = bitcast %"class.gfx::Point3F"* %108 to i8*
  call void @_ZdlPv(i8* %114) #9
  br label %115

115:                                              ; preds = %110, %106
  %116 = bitcast %"class.viz::DrawPolygon"* %103 to i8*
  call void @_ZdlPv(i8* %116) #9
  br label %117

117:                                              ; preds = %115, %101, %99, %85
  store i8 1, i8* %4, align 1
  br label %666

118:                                              ; preds = %31
  %119 = icmp eq i64 %32, 0
  store i8 0, i8* %4, align 1
  br i1 %119, label %120, label %136

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %121, align 8
  %123 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %11, i64* %123, align 8
  %124 = icmp eq %"class.viz::DrawPolygon"* %122, null
  br i1 %124, label %666, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %122, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %126, align 8
  %128 = icmp eq %"class.gfx::Point3F"* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint %"class.gfx::Point3F"* %127 to i64
  %131 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %122, i64 0, i32 0, i32 0, i32 1
  %132 = bitcast %"class.gfx::Point3F"** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast %"class.gfx::Point3F"* %127 to i8*
  call void @_ZdlPv(i8* %133) #9
  br label %134

134:                                              ; preds = %129, %125
  %135 = bitcast %"class.viz::DrawPolygon"* %122 to i8*
  call void @_ZdlPv(i8* %135) #9
  br label %666

136:                                              ; preds = %118
  br i1 %34, label %137, label %153

137:                                              ; preds = %136
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %11, i64* %140, align 8
  %141 = icmp eq %"class.viz::DrawPolygon"* %139, null
  br i1 %141, label %666, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %139, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %143, align 8
  %145 = icmp eq %"class.gfx::Point3F"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %142
  %147 = ptrtoint %"class.gfx::Point3F"* %144 to i64
  %148 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %139, i64 0, i32 0, i32 0, i32 1
  %149 = bitcast %"class.gfx::Point3F"** %148 to i64*
  store i64 %147, i64* %149, align 8
  %150 = bitcast %"class.gfx::Point3F"* %144 to i8*
  call void @_ZdlPv(i8* %150) #9
  br label %151

151:                                              ; preds = %146, %142
  %152 = bitcast %"class.viz::DrawPolygon"* %139 to i8*
  call void @_ZdlPv(i8* %152) #9
  br label %666

153:                                              ; preds = %136
  %154 = load float*, float** %20, align 8
  %155 = load float*, float** %21, align 8
  %156 = icmp eq float* %154, %155
  br i1 %156, label %164, label %157

157:                                              ; preds = %153, %161
  %158 = phi float* [ %162, %161 ], [ %154, %153 ]
  %159 = load float, float* %158, align 4
  %160 = fcmp ogt float %159, 0.000000e+00
  br i1 %160, label %164, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds float, float* %158, i64 1
  %163 = icmp eq float* %162, %155
  br i1 %163, label %164, label %157

164:                                              ; preds = %157, %161, %153
  %165 = phi float* [ %154, %153 ], [ %158, %157 ], [ %155, %161 ]
  %166 = ptrtoint float* %165 to i64
  %167 = ptrtoint float* %154 to i64
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 2
  %170 = add nsw i64 %18, -1
  br label %171

171:                                              ; preds = %171, %164
  %172 = phi i64 [ %169, %164 ], [ %174, %171 ]
  %173 = add i64 %170, %172
  %174 = urem i64 %173, %18
  %175 = getelementptr inbounds float, float* %154, i64 %174
  %176 = load float, float* %175, align 4
  %177 = fcmp ogt float %176, 0.000000e+00
  br i1 %177, label %171, label %178

178:                                              ; preds = %171
  br i1 %156, label %189, label %179

179:                                              ; preds = %178, %183
  %180 = phi float* [ %184, %183 ], [ %154, %178 ]
  %181 = load float, float* %180, align 4
  %182 = fcmp olt float %181, 0.000000e+00
  br i1 %182, label %186, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds float, float* %180, i64 1
  %185 = icmp eq float* %184, %155
  br i1 %185, label %186, label %179

186:                                              ; preds = %183, %179
  %187 = phi float* [ %155, %183 ], [ %180, %179 ]
  %188 = ptrtoint float* %187 to i64
  br label %189

189:                                              ; preds = %186, %178
  %190 = phi i64 [ %188, %186 ], [ %167, %178 ]
  %191 = sub i64 %190, %167
  %192 = ashr exact i64 %191, 2
  br label %193

193:                                              ; preds = %193, %189
  %194 = phi i64 [ %192, %189 ], [ %196, %193 ]
  %195 = add i64 %170, %194
  %196 = urem i64 %195, %18
  %197 = getelementptr inbounds float, float* %154, i64 %196
  %198 = load float, float* %197, align 4
  %199 = fcmp olt float %198, 0.000000e+00
  br i1 %199, label %193, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %1, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %201, align 8
  %203 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %202, i64 %174
  %204 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %202, i64 %172
  %205 = fsub float -0.000000e+00, %176
  %206 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 1
  %207 = bitcast %"class.gfx::Vector3dF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %207) #7
  %208 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12) %204, %"class.gfx::Point3F"* dereferenceable(12) %203) #7
  %209 = extractvalue { <2 x float>, float } %208, 0
  %210 = extractvalue { <2 x float>, float } %208, 1
  %211 = bitcast %"class.gfx::Vector3dF"* %8 to <2 x float>*
  store <2 x float> %209, <2 x float>* %211, align 8
  %212 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %8, i64 0, i32 2
  store float %210, float* %212, align 8
  %213 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12) %206, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %8) #7
  %214 = fdiv float %205, %213
  %215 = fpext float %214 to double
  %216 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %203, i64 0, i32 0
  %217 = load float, float* %216, align 4
  %218 = fpext float %217 to double
  %219 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %204, i64 0, i32 0
  %220 = load float, float* %219, align 4
  %221 = fsub float %220, %217
  %222 = fpext float %221 to double
  %223 = fmul double %215, %222
  %224 = fadd double %223, %218
  %225 = fptrunc double %224 to float
  %226 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %202, i64 %174, i32 1
  %227 = load float, float* %226, align 4
  %228 = fpext float %227 to double
  %229 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %202, i64 %172, i32 1
  %230 = load float, float* %229, align 4
  %231 = fsub float %230, %227
  %232 = fpext float %231 to double
  %233 = fmul double %215, %232
  %234 = fadd double %233, %228
  %235 = fptrunc double %234 to float
  %236 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %202, i64 %174, i32 2
  %237 = load float, float* %236, align 4
  %238 = fpext float %237 to double
  %239 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %202, i64 %172, i32 2
  %240 = load float, float* %239, align 4
  %241 = fsub float %240, %237
  %242 = fpext float %241 to double
  %243 = fmul double %215, %242
  %244 = fadd double %243, %238
  %245 = fptrunc double %244 to float
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %207) #7
  %246 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %201, align 8
  %247 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %246, i64 %196
  %248 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %246, i64 %194
  %249 = load float*, float** %20, align 8
  %250 = getelementptr inbounds float, float* %249, i64 %196
  %251 = load float, float* %250, align 4
  %252 = fsub float -0.000000e+00, %251
  %253 = bitcast %"class.gfx::Vector3dF"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %253) #7
  %254 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12) %248, %"class.gfx::Point3F"* dereferenceable(12) %247) #7
  %255 = extractvalue { <2 x float>, float } %254, 0
  %256 = extractvalue { <2 x float>, float } %254, 1
  %257 = bitcast %"class.gfx::Vector3dF"* %9 to <2 x float>*
  store <2 x float> %255, <2 x float>* %257, align 8
  %258 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %9, i64 0, i32 2
  store float %256, float* %258, align 8
  %259 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12) %206, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %9) #7
  %260 = fdiv float %252, %259
  %261 = fpext float %260 to double
  %262 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %247, i64 0, i32 0
  %263 = load float, float* %262, align 4
  %264 = fpext float %263 to double
  %265 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %248, i64 0, i32 0
  %266 = load float, float* %265, align 4
  %267 = fsub float %266, %263
  %268 = fpext float %267 to double
  %269 = fmul double %261, %268
  %270 = fadd double %269, %264
  %271 = fptrunc double %270 to float
  %272 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %246, i64 %196, i32 1
  %273 = load float, float* %272, align 4
  %274 = fpext float %273 to double
  %275 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %246, i64 %194, i32 1
  %276 = load float, float* %275, align 4
  %277 = fsub float %276, %273
  %278 = fpext float %277 to double
  %279 = fmul double %261, %278
  %280 = fadd double %279, %274
  %281 = fptrunc double %280 to float
  %282 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %246, i64 %196, i32 2
  %283 = load float, float* %282, align 4
  %284 = fpext float %283 to double
  %285 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %246, i64 %194, i32 2
  %286 = load float, float* %285, align 4
  %287 = fsub float %286, %283
  %288 = fpext float %287 to double
  %289 = fmul double %261, %288
  %290 = fadd double %289, %284
  %291 = fptrunc double %290 to float
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %253) #7
  %292 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #7
  %293 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %294 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %295 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %296 = bitcast %"class.gfx::Point3F"** %294 to i64*
  %297 = bitcast %"class.std::__1::vector"* %10 to i64*
  %298 = bitcast %"class.gfx::Point3F"** %295 to i64*
  %299 = call i8* @_Znwm(i64 12) #9
  %300 = getelementptr inbounds i8, i8* %299, i64 12
  %301 = bitcast i8* %300 to %"class.gfx::Point3F"*
  %302 = ptrtoint i8* %300 to i64
  %303 = bitcast i8* %299 to float*
  store float %225, float* %303, align 4
  %304 = getelementptr inbounds i8, i8* %299, i64 4
  %305 = bitcast i8* %304 to float*
  store float %235, float* %305, align 4
  %306 = getelementptr inbounds i8, i8* %299, i64 8
  %307 = bitcast i8* %306 to float*
  store float %245, float* %307, align 4
  %308 = ptrtoint i8* %299 to i64
  store i64 %308, i64* %297, align 8
  store i64 %302, i64* %296, align 8
  store i64 %302, i64* %298, align 8
  %309 = icmp eq i64 %172, %194
  br i1 %309, label %316, label %310

310:                                              ; preds = %200
  %311 = bitcast %"class.gfx::Point3F"** %294 to i64*
  %312 = bitcast %"class.std::__1::vector"* %10 to i64*
  %313 = bitcast %"class.gfx::Point3F"** %295 to i64*
  br label %330

314:                                              ; preds = %386
  %315 = ptrtoint %"class.gfx::Point3F"* %390 to i64
  br label %316

316:                                              ; preds = %314, %200
  %317 = phi i64 [ %315, %314 ], [ %302, %200 ]
  %318 = phi %"class.gfx::Point3F"* [ %390, %314 ], [ %301, %200 ]
  %319 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %318, i64 -1, i32 0
  %320 = load float, float* %319, align 4
  %321 = fcmp oeq float %320, %271
  br i1 %321, label %322, label %394

322:                                              ; preds = %316
  %323 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %318, i64 -1, i32 1
  %324 = load float, float* %323, align 4
  %325 = fcmp oeq float %324, %281
  br i1 %325, label %326, label %394

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %318, i64 -1, i32 2
  %328 = load float, float* %327, align 4
  %329 = fcmp une float %328, %291
  br i1 %329, label %394, label %454

330:                                              ; preds = %391, %310
  %331 = phi i64 [ %302, %310 ], [ %393, %391 ]
  %332 = phi %"class.gfx::Point3F"* [ %301, %310 ], [ %392, %391 ]
  %333 = phi %"class.gfx::Point3F"* [ %301, %310 ], [ %390, %391 ]
  %334 = phi i64 [ %172, %310 ], [ %388, %391 ]
  %335 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %201, align 8
  %336 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %335, i64 %334
  %337 = icmp eq %"class.gfx::Point3F"* %333, %332
  br i1 %337, label %343, label %338

338:                                              ; preds = %330
  %339 = bitcast %"class.gfx::Point3F"* %333 to i8*
  %340 = bitcast %"class.gfx::Point3F"* %336 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %339, i8* align 4 %340, i64 12, i1 false) #7
  %341 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %333, i64 1
  %342 = ptrtoint %"class.gfx::Point3F"* %341 to i64
  store i64 %342, i64* %311, align 8
  br label %386

343:                                              ; preds = %330
  %344 = ptrtoint %"class.gfx::Point3F"* %332 to i64
  %345 = load i64, i64* %312, align 8
  %346 = sub i64 %344, %345
  %347 = sdiv exact i64 %346, 12
  %348 = add nsw i64 %347, 1
  %349 = icmp ugt i64 %348, 1537228672809129301
  br i1 %349, label %350, label %352

350:                                              ; preds = %343
  %351 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %351) #8
  unreachable

352:                                              ; preds = %343
  %353 = icmp ult i64 %347, 768614336404564650
  br i1 %353, label %354, label %359

354:                                              ; preds = %352
  %355 = shl nsw i64 %347, 1
  %356 = icmp ult i64 %355, %348
  %357 = select i1 %356, i64 %348, i64 %355
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %364, label %359

359:                                              ; preds = %354, %352
  %360 = phi i64 [ %357, %354 ], [ 1537228672809129301, %352 ]
  %361 = mul i64 %360, 12
  %362 = call i8* @_Znwm(i64 %361) #9
  %363 = bitcast i8* %362 to %"class.gfx::Point3F"*
  br label %364

364:                                              ; preds = %359, %354
  %365 = phi i64 [ %360, %359 ], [ 0, %354 ]
  %366 = phi %"class.gfx::Point3F"* [ %363, %359 ], [ null, %354 ]
  %367 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %366, i64 %347
  %368 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %366, i64 %365
  %369 = ptrtoint %"class.gfx::Point3F"* %368 to i64
  %370 = bitcast %"class.gfx::Point3F"* %367 to i8*
  %371 = bitcast %"class.gfx::Point3F"* %336 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %370, i8* align 4 %371, i64 12, i1 false) #7
  %372 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %367, i64 1
  %373 = ptrtoint %"class.gfx::Point3F"* %372 to i64
  %374 = sub i64 %331, %345
  %375 = sdiv exact i64 %374, -12
  %376 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %367, i64 %375
  %377 = ptrtoint %"class.gfx::Point3F"* %376 to i64
  %378 = icmp sgt i64 %374, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %364
  %380 = bitcast %"class.gfx::Point3F"* %376 to i8*
  %381 = inttoptr i64 %345 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %380, i8* align 4 %381, i64 %374, i1 false) #7
  br label %382

382:                                              ; preds = %379, %364
  store i64 %377, i64* %312, align 8
  store i64 %373, i64* %311, align 8
  store i64 %369, i64* %313, align 8
  %383 = icmp eq i64 %345, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %382
  %385 = inttoptr i64 %345 to i8*
  call void @_ZdlPv(i8* %385) #9
  br label %386

386:                                              ; preds = %338, %382, %384
  %387 = add i64 %334, 1
  %388 = urem i64 %387, %18
  %389 = icmp eq i64 %388, %194
  %390 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %294, align 8
  br i1 %389, label %314, label %391

391:                                              ; preds = %386
  %392 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %295, align 8
  %393 = ptrtoint %"class.gfx::Point3F"* %390 to i64
  br label %330

394:                                              ; preds = %316, %322, %326
  %395 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %295, align 8
  %396 = icmp eq %"class.gfx::Point3F"* %318, %395
  %397 = ptrtoint %"class.gfx::Point3F"* %395 to i64
  br i1 %396, label %405, label %398

398:                                              ; preds = %394
  %399 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %318, i64 0, i32 0
  store float %271, float* %399, align 4
  %400 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %318, i64 0, i32 1
  store float %281, float* %400, align 4
  %401 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %318, i64 0, i32 2
  store float %291, float* %401, align 4
  %402 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %318, i64 1
  %403 = ptrtoint %"class.gfx::Point3F"* %402 to i64
  %404 = bitcast %"class.gfx::Point3F"** %294 to i64*
  store i64 %403, i64* %404, align 8
  br label %454

405:                                              ; preds = %394
  %406 = ptrtoint %"class.gfx::Point3F"* %318 to i64
  %407 = bitcast %"class.gfx::Point3F"** %294 to i64*
  %408 = bitcast %"class.std::__1::vector"* %10 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = sub i64 %406, %409
  %411 = sdiv exact i64 %410, 12
  %412 = add nsw i64 %411, 1
  %413 = icmp ugt i64 %412, 1537228672809129301
  br i1 %413, label %414, label %416

414:                                              ; preds = %405
  %415 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %415) #8
  unreachable

416:                                              ; preds = %405
  %417 = bitcast %"class.gfx::Point3F"** %295 to i64*
  %418 = sub i64 %397, %409
  %419 = sdiv exact i64 %418, 12
  %420 = icmp ult i64 %419, 768614336404564650
  br i1 %420, label %421, label %426

421:                                              ; preds = %416
  %422 = shl nsw i64 %419, 1
  %423 = icmp ult i64 %422, %412
  %424 = select i1 %423, i64 %412, i64 %422
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %431, label %426

426:                                              ; preds = %421, %416
  %427 = phi i64 [ %424, %421 ], [ 1537228672809129301, %416 ]
  %428 = mul i64 %427, 12
  %429 = call i8* @_Znwm(i64 %428) #9
  %430 = bitcast i8* %429 to %"class.gfx::Point3F"*
  br label %431

431:                                              ; preds = %426, %421
  %432 = phi i64 [ %427, %426 ], [ 0, %421 ]
  %433 = phi %"class.gfx::Point3F"* [ %430, %426 ], [ null, %421 ]
  %434 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %433, i64 %411
  %435 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %433, i64 %432
  %436 = ptrtoint %"class.gfx::Point3F"* %435 to i64
  %437 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %434, i64 0, i32 0
  store float %271, float* %437, align 4
  %438 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %433, i64 %411, i32 1
  store float %281, float* %438, align 4
  %439 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %433, i64 %411, i32 2
  store float %291, float* %439, align 4
  %440 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %434, i64 1
  %441 = ptrtoint %"class.gfx::Point3F"* %440 to i64
  %442 = sub i64 %317, %409
  %443 = sdiv exact i64 %442, -12
  %444 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %434, i64 %443
  %445 = ptrtoint %"class.gfx::Point3F"* %444 to i64
  %446 = icmp sgt i64 %442, 0
  br i1 %446, label %447, label %450

447:                                              ; preds = %431
  %448 = bitcast %"class.gfx::Point3F"* %444 to i8*
  %449 = inttoptr i64 %409 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %448, i8* align 4 %449, i64 %442, i1 false) #7
  br label %450

450:                                              ; preds = %447, %431
  store i64 %445, i64* %408, align 8
  store i64 %441, i64* %407, align 8
  store i64 %436, i64* %417, align 8
  %451 = icmp eq i64 %409, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %409 to i8*
  call void @_ZdlPv(i8* %453) #9
  br label %454

454:                                              ; preds = %452, %450, %398, %326
  %455 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %1, i64 0, i32 3
  %456 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %1, i64 0, i32 1
  %457 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %1, i64 0, i32 2
  %458 = call i8* @_Znwm(i64 56) #9
  %459 = bitcast i8* %458 to %"class.viz::DrawPolygon"*
  %460 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %455, align 8
  %461 = load i32, i32* %457, align 4
  call void @_ZN3viz11DrawPolygonC2EPKNS_8DrawQuadERKNSt3__16vectorIN3gfx7Point3FENS4_9allocatorIS7_EEEERKNS6_9Vector3dFEi(%"class.viz::DrawPolygon"* nonnull %459, %"class.viz::DrawQuad"* %460, %"class.std::__1::vector"* nonnull dereferenceable(24) %10, %"class.gfx::Vector3dF"* dereferenceable(12) %456, i32 %461) #7
  %462 = ptrtoint i8* %458 to i64
  %463 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %464 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %463, align 8
  %465 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %462, i64* %465, align 8
  %466 = icmp eq %"class.viz::DrawPolygon"* %464, null
  br i1 %466, label %478, label %467

467:                                              ; preds = %454
  %468 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %464, i64 0, i32 0, i32 0, i32 0
  %469 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %468, align 8
  %470 = icmp eq %"class.gfx::Point3F"* %469, null
  br i1 %470, label %476, label %471

471:                                              ; preds = %467
  %472 = ptrtoint %"class.gfx::Point3F"* %469 to i64
  %473 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %464, i64 0, i32 0, i32 0, i32 1
  %474 = bitcast %"class.gfx::Point3F"** %473 to i64*
  store i64 %472, i64* %474, align 8
  %475 = bitcast %"class.gfx::Point3F"* %469 to i8*
  call void @_ZdlPv(i8* %475) #9
  br label %476

476:                                              ; preds = %471, %467
  %477 = bitcast %"class.viz::DrawPolygon"* %464 to i8*
  call void @_ZdlPv(i8* %477) #9
  br label %478

478:                                              ; preds = %476, %454
  %479 = bitcast %"class.std::__1::vector"* %10 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = bitcast %"class.gfx::Point3F"** %294 to i64*
  store i64 %480, i64* %481, align 8
  %482 = inttoptr i64 %480 to %"class.gfx::Point3F"*
  %483 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %295, align 8
  %484 = icmp eq %"class.gfx::Point3F"* %483, %482
  br i1 %484, label %491, label %485

485:                                              ; preds = %478
  %486 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %482, i64 0, i32 0
  store float %271, float* %486, align 4
  %487 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %482, i64 0, i32 1
  store float %281, float* %487, align 4
  %488 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %482, i64 0, i32 2
  store float %291, float* %488, align 4
  %489 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %482, i64 1
  %490 = ptrtoint %"class.gfx::Point3F"* %489 to i64
  store i64 %490, i64* %481, align 8
  br label %505

491:                                              ; preds = %478
  %492 = bitcast %"class.gfx::Point3F"** %295 to i64*
  %493 = call i8* @_Znwm(i64 12) #9
  %494 = getelementptr inbounds i8, i8* %493, i64 12
  %495 = ptrtoint i8* %494 to i64
  %496 = bitcast i8* %493 to float*
  store float %271, float* %496, align 4
  %497 = getelementptr inbounds i8, i8* %493, i64 4
  %498 = bitcast i8* %497 to float*
  store float %281, float* %498, align 4
  %499 = getelementptr inbounds i8, i8* %493, i64 8
  %500 = bitcast i8* %499 to float*
  store float %291, float* %500, align 4
  %501 = ptrtoint i8* %493 to i64
  store i64 %501, i64* %479, align 8
  store i64 %495, i64* %481, align 8
  store i64 %495, i64* %492, align 8
  %502 = icmp eq i64 %480, 0
  br i1 %502, label %505, label %503

503:                                              ; preds = %491
  %504 = inttoptr i64 %480 to i8*
  call void @_ZdlPv(i8* %504) #9
  br label %505

505:                                              ; preds = %485, %491, %503
  br i1 %309, label %508, label %506

506:                                              ; preds = %505
  %507 = bitcast %"class.gfx::Point3F"** %295 to i64*
  br label %522

508:                                              ; preds = %579, %505
  %509 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %294, align 8
  %510 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %509, i64 -1, i32 0
  %511 = load float, float* %510, align 4
  %512 = fcmp oeq float %511, %225
  %513 = ptrtoint %"class.gfx::Point3F"* %509 to i64
  br i1 %512, label %514, label %583

514:                                              ; preds = %508
  %515 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %509, i64 -1, i32 1
  %516 = load float, float* %515, align 4
  %517 = fcmp oeq float %516, %235
  br i1 %517, label %518, label %583

518:                                              ; preds = %514
  %519 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %509, i64 -1, i32 2
  %520 = load float, float* %519, align 4
  %521 = fcmp une float %520, %245
  br i1 %521, label %583, label %638

522:                                              ; preds = %506, %579
  %523 = phi i64 [ %194, %506 ], [ %581, %579 ]
  %524 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %201, align 8
  %525 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %524, i64 %523
  %526 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %294, align 8
  %527 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %295, align 8
  %528 = icmp eq %"class.gfx::Point3F"* %526, %527
  %529 = ptrtoint %"class.gfx::Point3F"* %527 to i64
  br i1 %528, label %535, label %530

530:                                              ; preds = %522
  %531 = bitcast %"class.gfx::Point3F"* %526 to i8*
  %532 = bitcast %"class.gfx::Point3F"* %525 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %531, i8* align 4 %532, i64 12, i1 false) #7
  %533 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %526, i64 1
  %534 = ptrtoint %"class.gfx::Point3F"* %533 to i64
  store i64 %534, i64* %481, align 8
  br label %579

535:                                              ; preds = %522
  %536 = ptrtoint %"class.gfx::Point3F"* %526 to i64
  %537 = load i64, i64* %479, align 8
  %538 = sub i64 %536, %537
  %539 = sdiv exact i64 %538, 12
  %540 = add nsw i64 %539, 1
  %541 = icmp ugt i64 %540, 1537228672809129301
  br i1 %541, label %542, label %544

542:                                              ; preds = %535
  %543 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %543) #8
  unreachable

544:                                              ; preds = %535
  %545 = sub i64 %529, %537
  %546 = sdiv exact i64 %545, 12
  %547 = icmp ult i64 %546, 768614336404564650
  br i1 %547, label %548, label %553

548:                                              ; preds = %544
  %549 = shl nsw i64 %546, 1
  %550 = icmp ult i64 %549, %540
  %551 = select i1 %550, i64 %540, i64 %549
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %558, label %553

553:                                              ; preds = %548, %544
  %554 = phi i64 [ %551, %548 ], [ 1537228672809129301, %544 ]
  %555 = mul i64 %554, 12
  %556 = call i8* @_Znwm(i64 %555) #9
  %557 = bitcast i8* %556 to %"class.gfx::Point3F"*
  br label %558

558:                                              ; preds = %553, %548
  %559 = phi i64 [ %554, %553 ], [ 0, %548 ]
  %560 = phi %"class.gfx::Point3F"* [ %557, %553 ], [ null, %548 ]
  %561 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %560, i64 %539
  %562 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %560, i64 %559
  %563 = ptrtoint %"class.gfx::Point3F"* %562 to i64
  %564 = bitcast %"class.gfx::Point3F"* %561 to i8*
  %565 = bitcast %"class.gfx::Point3F"* %525 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %564, i8* align 4 %565, i64 12, i1 false) #7
  %566 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %561, i64 1
  %567 = ptrtoint %"class.gfx::Point3F"* %566 to i64
  %568 = sdiv exact i64 %538, -12
  %569 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %561, i64 %568
  %570 = ptrtoint %"class.gfx::Point3F"* %569 to i64
  %571 = icmp sgt i64 %538, 0
  br i1 %571, label %572, label %575

572:                                              ; preds = %558
  %573 = bitcast %"class.gfx::Point3F"* %569 to i8*
  %574 = inttoptr i64 %537 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %573, i8* align 4 %574, i64 %538, i1 false) #7
  br label %575

575:                                              ; preds = %572, %558
  store i64 %570, i64* %479, align 8
  store i64 %567, i64* %481, align 8
  store i64 %563, i64* %507, align 8
  %576 = icmp eq i64 %537, 0
  br i1 %576, label %579, label %577

577:                                              ; preds = %575
  %578 = inttoptr i64 %537 to i8*
  call void @_ZdlPv(i8* %578) #9
  br label %579

579:                                              ; preds = %530, %575, %577
  %580 = add i64 %523, 1
  %581 = urem i64 %580, %18
  %582 = icmp eq i64 %581, %172
  br i1 %582, label %508, label %522

583:                                              ; preds = %508, %514, %518
  %584 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %295, align 8
  %585 = icmp eq %"class.gfx::Point3F"* %509, %584
  %586 = ptrtoint %"class.gfx::Point3F"* %584 to i64
  br i1 %585, label %593, label %587

587:                                              ; preds = %583
  %588 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %509, i64 0, i32 0
  store float %225, float* %588, align 4
  %589 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %509, i64 0, i32 1
  store float %235, float* %589, align 4
  %590 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %509, i64 0, i32 2
  store float %245, float* %590, align 4
  %591 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %509, i64 1
  %592 = ptrtoint %"class.gfx::Point3F"* %591 to i64
  store i64 %592, i64* %481, align 8
  br label %638

593:                                              ; preds = %583
  %594 = load i64, i64* %479, align 8
  %595 = sub i64 %513, %594
  %596 = sdiv exact i64 %595, 12
  %597 = add nsw i64 %596, 1
  %598 = icmp ugt i64 %597, 1537228672809129301
  br i1 %598, label %599, label %601

599:                                              ; preds = %593
  %600 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %600) #8
  unreachable

601:                                              ; preds = %593
  %602 = bitcast %"class.gfx::Point3F"** %295 to i64*
  %603 = sub i64 %586, %594
  %604 = sdiv exact i64 %603, 12
  %605 = icmp ult i64 %604, 768614336404564650
  br i1 %605, label %606, label %611

606:                                              ; preds = %601
  %607 = shl nsw i64 %604, 1
  %608 = icmp ult i64 %607, %597
  %609 = select i1 %608, i64 %597, i64 %607
  %610 = icmp eq i64 %609, 0
  br i1 %610, label %616, label %611

611:                                              ; preds = %606, %601
  %612 = phi i64 [ %609, %606 ], [ 1537228672809129301, %601 ]
  %613 = mul i64 %612, 12
  %614 = call i8* @_Znwm(i64 %613) #9
  %615 = bitcast i8* %614 to %"class.gfx::Point3F"*
  br label %616

616:                                              ; preds = %611, %606
  %617 = phi i64 [ %612, %611 ], [ 0, %606 ]
  %618 = phi %"class.gfx::Point3F"* [ %615, %611 ], [ null, %606 ]
  %619 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %618, i64 %596
  %620 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %618, i64 %617
  %621 = ptrtoint %"class.gfx::Point3F"* %620 to i64
  %622 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %619, i64 0, i32 0
  store float %225, float* %622, align 4
  %623 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %618, i64 %596, i32 1
  store float %235, float* %623, align 4
  %624 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %618, i64 %596, i32 2
  store float %245, float* %624, align 4
  %625 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %619, i64 1
  %626 = ptrtoint %"class.gfx::Point3F"* %625 to i64
  %627 = sdiv exact i64 %595, -12
  %628 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %619, i64 %627
  %629 = ptrtoint %"class.gfx::Point3F"* %628 to i64
  %630 = icmp sgt i64 %595, 0
  br i1 %630, label %631, label %634

631:                                              ; preds = %616
  %632 = bitcast %"class.gfx::Point3F"* %628 to i8*
  %633 = inttoptr i64 %594 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %632, i8* align 4 %633, i64 %595, i1 false) #7
  br label %634

634:                                              ; preds = %631, %616
  store i64 %629, i64* %479, align 8
  store i64 %626, i64* %481, align 8
  store i64 %621, i64* %602, align 8
  %635 = icmp eq i64 %594, 0
  br i1 %635, label %638, label %636

636:                                              ; preds = %634
  %637 = inttoptr i64 %594 to i8*
  call void @_ZdlPv(i8* %637) #9
  br label %638

638:                                              ; preds = %636, %634, %587, %518
  %639 = call i8* @_Znwm(i64 56) #9
  %640 = bitcast i8* %639 to %"class.viz::DrawPolygon"*
  %641 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %455, align 8
  %642 = load i32, i32* %457, align 4
  call void @_ZN3viz11DrawPolygonC2EPKNS_8DrawQuadERKNSt3__16vectorIN3gfx7Point3FENS4_9allocatorIS7_EEEERKNS6_9Vector3dFEi(%"class.viz::DrawPolygon"* nonnull %640, %"class.viz::DrawQuad"* %641, %"class.std::__1::vector"* nonnull dereferenceable(24) %10, %"class.gfx::Vector3dF"* dereferenceable(12) %456, i32 %642) #7
  %643 = ptrtoint i8* %639 to i64
  %644 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %645 = load %"class.viz::DrawPolygon"*, %"class.viz::DrawPolygon"** %644, align 8
  %646 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %643, i64* %646, align 8
  %647 = icmp eq %"class.viz::DrawPolygon"* %645, null
  br i1 %647, label %659, label %648

648:                                              ; preds = %638
  %649 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %645, i64 0, i32 0, i32 0, i32 0
  %650 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %649, align 8
  %651 = icmp eq %"class.gfx::Point3F"* %650, null
  br i1 %651, label %657, label %652

652:                                              ; preds = %648
  %653 = ptrtoint %"class.gfx::Point3F"* %650 to i64
  %654 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %645, i64 0, i32 0, i32 0, i32 1
  %655 = bitcast %"class.gfx::Point3F"** %654 to i64*
  store i64 %653, i64* %655, align 8
  %656 = bitcast %"class.gfx::Point3F"* %650 to i8*
  call void @_ZdlPv(i8* %656) #9
  br label %657

657:                                              ; preds = %652, %648
  %658 = bitcast %"class.viz::DrawPolygon"* %645 to i8*
  call void @_ZdlPv(i8* %658) #9
  br label %659

659:                                              ; preds = %657, %638
  %660 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %293, align 8
  %661 = icmp eq %"class.gfx::Point3F"* %660, null
  br i1 %661, label %665, label %662

662:                                              ; preds = %659
  %663 = ptrtoint %"class.gfx::Point3F"* %660 to i64
  store i64 %663, i64* %481, align 8
  %664 = bitcast %"class.gfx::Point3F"* %660 to i8*
  call void @_ZdlPv(i8* %664) #9
  br label %665

665:                                              ; preds = %659, %662
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #7
  br label %666

666:                                              ; preds = %151, %137, %134, %120, %665, %117
  %667 = phi %"class.viz::DrawPolygon"* [ null, %117 ], [ %1, %665 ], [ null, %120 ], [ null, %134 ], [ null, %137 ], [ null, %151 ]
  %668 = load float*, float** %20, align 8
  %669 = icmp eq float* %668, null
  br i1 %669, label %673, label %670

670:                                              ; preds = %666
  %671 = ptrtoint float* %668 to i64
  store i64 %671, i64* %22, align 8
  %672 = bitcast float* %668 to i8*
  call void @_ZdlPv(i8* %672) #9
  br label %673

673:                                              ; preds = %666, %670
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #7
  %674 = icmp eq %"class.viz::DrawPolygon"* %667, null
  br i1 %674, label %686, label %675

675:                                              ; preds = %673
  %676 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %667, i64 0, i32 0, i32 0, i32 0
  %677 = load %"class.gfx::Point3F"*, %"class.gfx::Point3F"** %676, align 8
  %678 = icmp eq %"class.gfx::Point3F"* %677, null
  br i1 %678, label %684, label %679

679:                                              ; preds = %675
  %680 = ptrtoint %"class.gfx::Point3F"* %677 to i64
  %681 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %667, i64 0, i32 0, i32 0, i32 1
  %682 = bitcast %"class.gfx::Point3F"** %681 to i64*
  store i64 %680, i64* %682, align 8
  %683 = bitcast %"class.gfx::Point3F"* %677 to i8*
  call void @_ZdlPv(i8* %683) #9
  br label %684

684:                                              ; preds = %679, %675
  %685 = bitcast %"class.viz::DrawPolygon"* %667 to i8*
  call void @_ZdlPv(i8* %685) #9
  br label %686

686:                                              ; preds = %673, %684
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz11DrawPolygon9ToQuads2DEPNSt3__16vectorIN3gfx5QuadFENS1_9allocatorIS4_EEEE(%"class.viz::DrawPolygon"* nocapture readonly, %"class.std::__1::vector.20"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DrawPolygon", %"class.viz::DrawPolygon"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.gfx::Point3F"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.viz::DrawPolygon"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 12
  %10 = inttoptr i64 %7 to %"class.gfx::Point3F"*
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %147, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %10, i64 0, i32 1
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = inttoptr i64 %7 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.gfx::QuadF"** %18 to i64*
  %21 = bitcast %"class.std::__1::vector.20"* %1 to i64*
  %22 = bitcast %"class.gfx::QuadF"** %19 to i64*
  %23 = zext i32 %15 to i64
  %24 = shl nuw i64 %23, 32
  %25 = zext i32 %17 to i64
  %26 = or i64 %24, %25
  %27 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %12, %139
  %29 = phi %"class.gfx::Point3F"* [ %10, %12 ], [ %146, %139 ]
  %30 = phi i64 [ %9, %12 ], [ %143, %139 ]
  %31 = phi i64 [ 1, %12 ], [ %35, %139 ]
  %32 = add nuw i64 %31, 1
  %33 = add i64 %31, 2
  %34 = icmp ult i64 %33, %30
  %35 = select i1 %34, i64 %33, i64 %32
  %36 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %29, i64 %31
  %37 = bitcast %"class.gfx::Point3F"* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %29, i64 %31, i32 1
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %29, i64 %32
  %43 = bitcast %"class.gfx::Point3F"* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %29, i64 %32, i32 1
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %29, i64 %35
  %49 = bitcast %"class.gfx::Point3F"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %29, i64 %35, i32 1
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = load %"class.gfx::QuadF"*, %"class.gfx::QuadF"** %18, align 8
  %55 = load %"class.gfx::QuadF"*, %"class.gfx::QuadF"** %19, align 8
  %56 = icmp ult %"class.gfx::QuadF"* %54, %55
  %57 = ptrtoint %"class.gfx::QuadF"* %55 to i64
  br i1 %56, label %58, label %74

58:                                               ; preds = %28
  %59 = bitcast %"class.gfx::QuadF"* %54 to i64*
  store i64 %26, i64* %59, align 4
  %60 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %54, i64 0, i32 1
  %61 = bitcast %"class.gfx::PointF"* %60 to i32*
  store i32 %38, i32* %61, align 4
  %62 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %54, i64 0, i32 1, i32 1
  %63 = bitcast float* %62 to i32*
  store i32 %41, i32* %63, align 4
  %64 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %54, i64 0, i32 2
  %65 = bitcast %"class.gfx::PointF"* %64 to i32*
  store i32 %44, i32* %65, align 4
  %66 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %54, i64 0, i32 2, i32 1
  %67 = bitcast float* %66 to i32*
  store i32 %47, i32* %67, align 4
  %68 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %54, i64 0, i32 3
  %69 = bitcast %"class.gfx::PointF"* %68 to i32*
  store i32 %50, i32* %69, align 4
  %70 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %54, i64 0, i32 3, i32 1
  %71 = bitcast float* %70 to i32*
  store i32 %53, i32* %71, align 4
  %72 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %54, i64 1
  %73 = ptrtoint %"class.gfx::QuadF"* %72 to i64
  store i64 %73, i64* %20, align 8
  br label %139

74:                                               ; preds = %28
  %75 = ptrtoint %"class.gfx::QuadF"* %54 to i64
  %76 = load i64, i64* %21, align 8
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 5
  %79 = add nsw i64 %78, 1
  %80 = icmp ugt i64 %79, 576460752303423487
  br i1 %80, label %81, label %83

81:                                               ; preds = %74
  %82 = bitcast %"class.std::__1::vector.20"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %82) #8
  unreachable

83:                                               ; preds = %74
  %84 = sub i64 %57, %76
  %85 = ashr exact i64 %84, 5
  %86 = icmp ult i64 %85, 288230376151711743
  br i1 %86, label %87, label %95

87:                                               ; preds = %83
  %88 = ashr exact i64 %84, 4
  %89 = icmp ult i64 %88, %79
  %90 = select i1 %89, i64 %79, i64 %88
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %87
  %93 = icmp ugt i64 %90, 576460752303423487
  br i1 %93, label %94, label %95

94:                                               ; preds = %92
  tail call void @abort() #8
  unreachable

95:                                               ; preds = %92, %83
  %96 = phi i64 [ %90, %92 ], [ 576460752303423487, %83 ]
  %97 = shl i64 %96, 5
  %98 = tail call i8* @_Znwm(i64 %97) #9
  %99 = bitcast i8* %98 to %"class.gfx::QuadF"*
  br label %100

100:                                              ; preds = %95, %87
  %101 = phi i64 [ %96, %95 ], [ 0, %87 ]
  %102 = phi %"class.gfx::QuadF"* [ %99, %95 ], [ null, %87 ]
  %103 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %102, i64 %78
  %104 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %102, i64 %101
  %105 = ptrtoint %"class.gfx::QuadF"* %104 to i64
  %106 = bitcast %"class.gfx::QuadF"* %103 to i64*
  store i64 %26, i64* %106, align 4
  %107 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %102, i64 %78, i32 1
  %108 = bitcast %"class.gfx::PointF"* %107 to i32*
  store i32 %38, i32* %108, align 4
  %109 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %102, i64 %78, i32 1, i32 1
  %110 = bitcast float* %109 to i32*
  store i32 %41, i32* %110, align 4
  %111 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %102, i64 %78, i32 2
  %112 = bitcast %"class.gfx::PointF"* %111 to i32*
  store i32 %44, i32* %112, align 4
  %113 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %102, i64 %78, i32 2, i32 1
  %114 = bitcast float* %113 to i32*
  store i32 %47, i32* %114, align 4
  %115 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %102, i64 %78, i32 3
  %116 = bitcast %"class.gfx::PointF"* %115 to i32*
  store i32 %50, i32* %116, align 4
  %117 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %102, i64 %78, i32 3, i32 1
  %118 = bitcast float* %117 to i32*
  store i32 %53, i32* %118, align 4
  %119 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %103, i64 1
  %120 = ptrtoint %"class.gfx::QuadF"* %119 to i64
  %121 = load %"class.gfx::QuadF"*, %"class.gfx::QuadF"** %27, align 8
  %122 = load i64, i64* %20, align 8
  %123 = ptrtoint %"class.gfx::QuadF"* %121 to i64
  %124 = sub i64 %122, %123
  %125 = ashr exact i64 %124, 5
  %126 = sub nsw i64 0, %125
  %127 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %103, i64 %126
  %128 = ptrtoint %"class.gfx::QuadF"* %127 to i64
  %129 = icmp sgt i64 %124, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %100
  %131 = bitcast %"class.gfx::QuadF"* %127 to i8*
  %132 = bitcast %"class.gfx::QuadF"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %131, i8* align 4 %132, i64 %124, i1 false) #7
  %133 = load %"class.gfx::QuadF"*, %"class.gfx::QuadF"** %27, align 8
  br label %134

134:                                              ; preds = %130, %100
  %135 = phi %"class.gfx::QuadF"* [ %121, %100 ], [ %133, %130 ]
  store i64 %128, i64* %21, align 8
  store i64 %120, i64* %20, align 8
  store i64 %105, i64* %22, align 8
  %136 = icmp eq %"class.gfx::QuadF"* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  %138 = bitcast %"class.gfx::QuadF"* %135 to i8*
  tail call void @_ZdlPv(i8* %138) #9
  br label %139

139:                                              ; preds = %58, %134, %137
  %140 = load i64, i64* %4, align 8
  %141 = load i64, i64* %6, align 8
  %142 = sub i64 %140, %141
  %143 = sdiv exact i64 %142, 12
  %144 = add nsw i64 %143, -1
  %145 = icmp ult i64 %35, %144
  %146 = inttoptr i64 %141 to %"class.gfx::Point3F"*
  br i1 %145, label %28, label %147

147:                                              ; preds = %139, %2
  ret void
}

declare void @_ZN3gfx9Vector3dF5CrossERKS0_(%"class.gfx::Vector3dF"*, %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #2

declare void @_ZN3gfx9Vector3dF3AddERKS0_(%"class.gfx::Vector3dF"*, %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #2

declare void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"*, float, float, float) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx7Point3FENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.gfx::Point3F"*, %"class.gfx::Point3F"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Point3F"* %2 to i64
  %5 = ptrtoint %"class.gfx::Point3F"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 12
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Point3F"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 12
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Point3F"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Point3F"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 12
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Point3F"* %24, %"class.gfx::Point3F"* %2
  %26 = ptrtoint %"class.gfx::Point3F"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 12
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Point3F"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #7
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = udiv exact i64 %36, 12
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Point3F"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #7
  %42 = inttoptr i64 %35 to %"class.gfx::Point3F"*
  %43 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Point3F"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %87

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %16, i64 %28
  store %"class.gfx::Point3F"* %48, %"class.gfx::Point3F"** %18, align 8
  br label %87

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Point3F"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #7
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1537228672809129301
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #8
  unreachable

61:                                               ; preds = %56
  %62 = sdiv exact i64 %57, 12
  %63 = icmp ult i64 %62, 768614336404564650
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %7
  %67 = select i1 %66, i64 %7, i64 %65
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i64 [ %67, %64 ], [ 1537228672809129301, %61 ]
  %70 = mul i64 %69, 12
  %71 = tail call i8* @_Znwm(i64 %70) #9
  %72 = bitcast i8* %71 to %"class.gfx::Point3F"*
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %74 = bitcast %"class.gfx::Point3F"** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %72, i64 %69
  store %"class.gfx::Point3F"* %76, %"class.gfx::Point3F"** %8, align 8
  %77 = bitcast %"class.gfx::Point3F"** %73 to i64*
  %78 = ptrtoint i8* %71 to i64
  %79 = icmp sgt i64 %6, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %68
  %81 = udiv exact i64 %6, 12
  %82 = bitcast %"class.gfx::Point3F"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %82, i64 %6, i1 false) #7
  %83 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %72, i64 %81
  %84 = ptrtoint %"class.gfx::Point3F"* %83 to i64
  br label %85

85:                                               ; preds = %68, %80
  %86 = phi i64 [ %84, %80 ], [ %78, %68 ]
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %45, %47, %85
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.10"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #7
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #8
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #8
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #7
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #7
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
