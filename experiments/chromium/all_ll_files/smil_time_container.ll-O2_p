; ModuleID = '../../third_party/blink/renderer/core/svg/animation/smil_time_container.cc'
source_filename = "../../third_party/blink/renderer/core/svg/animation/smil_time_container.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.214", i32, [4 x i8], %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.350", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.367", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.385", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.392", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.330", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.250" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.250" = type { %"struct.std::__1::__atomic_base.251" }
%"struct.std::__1::__atomic_base.251" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__cxx_atomic_impl.253" }
%"struct.std::__1::__cxx_atomic_impl.253" = type { %"struct.std::__1::__cxx_atomic_base_impl.254" }
%"struct.std::__1::__cxx_atomic_base_impl.254" = type { i64 }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::Worklist.261"* }
%"class.blink::Worklist.261" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.250" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::Worklist.268"* }
%"class.blink::Worklist.268" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.250" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::Worklist.275"* }
%"class.blink::Worklist.275" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.250" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::Worklist.282"* }
%"class.blink::Worklist.282" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.250" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::Worklist.289"* }
%"class.blink::Worklist.289" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.250" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::Worklist.296"* }
%"class.blink::Worklist.296" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.250" }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::Worklist.303"* }
%"class.blink::Worklist.303" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.250" }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.310", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312", %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { i64 }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { float }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.333", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.342" }
%"class.WTF::Vector.342" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase.344" }
%"class.WTF::VectorBufferBase.344" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359" }
%"class.WTF::VectorBufferBase.359" = type { %"struct.std::__1::pair.360"*, i32, i32 }
%"struct.std::__1::pair.360" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.373" }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.261"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.268"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.275"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.282"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.289"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.758" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.391 }
%class.scoped_refptr.391 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.392" = type { %"struct.std::__1::__atomic_base.393" }
%"struct.std::__1::__atomic_base.393" = type { %"struct.std::__1::__cxx_atomic_impl.394" }
%"struct.std::__1::__cxx_atomic_impl.394" = type { %"struct.std::__1::__cxx_atomic_base_impl.395" }
%"struct.std::__1::__cxx_atomic_base_impl.395" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i32 }
%"class.blink::SMILTimeContainer::TimingUpdate" = type { %"class.blink::SMILTime", i32, %"class.blink::SMILTimeContainer"*, %"class.blink::HeapHashMap.104" }
%"class.blink::SMILTime" = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::SMILTimeContainer" = type { %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.base::TimeDelta", i32, i8, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashCountedSet", %"class.blink::PriorityQueue", %"class.blink::Member.87" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SMILTimeContainer"* }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::WeakMember.10", i32, [4 x i8] }>
%"class.blink::WeakMember.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::SVGElement"* }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.50", %"class.blink::Member.52" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.28" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.15", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.17" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.111", %"class.blink::Member.113", %"class.blink::Member.15", %"class.blink::Member.115", %"class.blink::Member.115", %"class.blink::Member.139", %"class.blink::Member.141", %"class.blink::Member.143", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.148", %"class.blink::HeapVector.150" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.166", %"class.WTF::Vector.166", i8, i32, %"class.blink::Member.173", %"class.blink::Member.175", %"class.blink::Member.177", %"class.blink::Member.179", %"class.blink::Member.181", %"class.blink::Member.183", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.186", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.192", %"class.blink::Member.194", %"class.blink::Member.156", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.197", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.398", %"class.blink::HeapVector.132", %"class.blink::Member.130", %"class.blink::Member.400", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::Member.130", %"class.blink::UserActionElementSet", %"class.blink::Member.409", double, double, i64, i64, %"class.blink::HeapHashSet.411", %"class.blink::HeapHashSet.418", i16, i8, %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::TextLinkColors", %"class.blink::Member.433", i8, [7 x i8], %"class.blink::HeapHashMap.435", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.130", %"class.WTF::Vector.442", %"class.blink::Member.447", %"class.blink::Member.449", i8, %"class.blink::Member.130", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.451", %"class.blink::HeapVector.453", %"class.std::__1::unique_ptr.461", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.467", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.480", %"class.WTF::Vector.482", i8, i8, %"class.std::__1::unique_ptr.487", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.132", %"class.blink::HeapVector.493", i32, i8, %"class.blink::HeapTaskRunnerTimer.398", %"class.blink::HeapTaskRunnerTimer.398", %"class.blink::DocumentTiming", %"class.blink::Member.501", i8, i32, %"class.blink::Member.503", %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::HeapTaskRunnerTimer.398", %"class.blink::Member.509", %"class.WTF::HashMap.511", %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::Member.651", %"class.blink::Member.653", %"class.blink::Member.113", %"class.blink::Member.113", %"class.blink::HeapTaskRunnerTimer.398", %"class.blink::HeapHashSet.655", i8, i32, %"class.blink::Member.662", %"class.blink::Member.664", i32, %"class.blink::Member.666", %"class.blink::Member.668", %"class.blink::Member.670", %"class.std::__1::unique_ptr.672", i64, %"class.std::__1::unique_ptr.678", i32, i32, %"class.blink::Member.684", %"class.blink::Member.686", %"class.blink::Member.688", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.690", %"class.WTF::Vector.692", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.697", %"class.blink::Member.704", %"class.std::__1::unique_ptr.706", %"class.blink::Member.712", i8, i8, %"class.WTF::String", %"class.blink::Member.714", i8, [7 x i8], %"class.blink::HeapHashMap.716", %"class.blink::HeapObserverSet.723", %"class.blink::Member.731", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.733", i32, i8, i8, %"class.blink::WeakMember.735", %"class.blink::Member.736" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.159" }
%"class.blink::HeapHashMap.159" = type { %"class.WTF::HashMap.162" }
%"class.WTF::HashMap.162" = type { %"class.WTF::HashTable.163" }
%"class.WTF::HashTable.163" = type <{ %"struct.WTF::KeyValuePair.165"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.165" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.166" = type { %"class.WTF::VectorBuffer.167" }
%"class.WTF::VectorBuffer.167" = type { %"class.WTF::VectorBufferBase.168" }
%"class.WTF::VectorBufferBase.168" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.170", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.170" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.173" = type { %"class.blink::MemberBase.174" }
%"class.blink::MemberBase.174" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.175" = type { %"class.blink::MemberBase.176" }
%"class.blink::MemberBase.176" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.763", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.796", i32, i8, [3 x i8], %"class.blink::HeapVector.798", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.806", %"class.blink::Member.808", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.817", %"class.blink::Member.823", %"class.blink::Member.825", i8, [7 x i8] }>
%"class.blink::Supplementable.763" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.764" }
%"class.blink::HeapHashMap.764" = type { %"class.WTF::HashMap.767" }
%"class.WTF::HashMap.767" = type { %"class.WTF::HashTable.768" }
%"class.WTF::HashTable.768" = type <{ %"struct.WTF::KeyValuePair.770"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.770" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.771" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.551" }
%"class.blink::HeapHashSet.551" = type { %"class.WTF::HashSet.554" }
%"class.WTF::HashSet.554" = type { %"class.WTF::HashTable.555" }
%"class.WTF::HashTable.555" = type <{ %"class.blink::WeakMember.557"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.557" = type opaque
%"class.blink::Supplementable.771" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.772" }
%"class.blink::HeapHashMap.772" = type { %"class.WTF::HashMap.775" }
%"class.WTF::HashMap.775" = type { %"class.WTF::HashTable.776" }
%"class.WTF::HashTable.776" = type <{ %"struct.WTF::KeyValuePair.778"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.778" = type { i8*, %"class.blink::Member.1141" }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1143" }
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.779, %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.786", %"class.std::__1::unique_ptr.786", %"class.blink::Member.175", i32, [4 x i8], %"class.WTF::HashSet.792", i32, i32 }
%class.scoped_refptr.779 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.792" = type { %"class.WTF::HashTable.793" }
%"class.WTF::HashTable.793" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.798" = type { %"class.WTF::Vector.801" }
%"class.WTF::Vector.801" = type { %"class.WTF::VectorBuffer.802" }
%"class.WTF::VectorBuffer.802" = type { %"class.WTF::VectorBufferBase.803" }
%"class.WTF::VectorBufferBase.803" = type { %"class.blink::Member.804"*, i32, i32 }
%"class.blink::Member.804" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.810", i32, i32 }
%"class.blink::HeapHashMap.810" = type { %"class.WTF::HashMap.813" }
%"class.WTF::HashMap.813" = type { %"class.WTF::HashTable.814" }
%"class.WTF::HashTable.814" = type <{ %"struct.WTF::KeyValuePair.816"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.816" = type opaque
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.183" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.196 }
%class.scoped_refptr.196 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.197" = type { %"class.WTF::VectorBuffer.198" }
%"class.WTF::VectorBuffer.198" = type { %"class.WTF::VectorBufferBase.199" }
%"class.WTF::VectorBufferBase.199" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.200 }
%class.scoped_refptr.200 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.201", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.201" = type { %"class.base::RefCounted.202" }
%"class.base::RefCounted.202" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.205" }
%"class.blink::HeapHashMap.205" = type { %"class.WTF::HashMap.208" }
%"class.WTF::HashMap.208" = type { %"class.WTF::HashTable.209" }
%"class.WTF::HashTable.209" = type <{ %"struct.WTF::KeyValuePair.211"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.211" = type { %"class.blink::WeakMember.212", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.402" }
%"class.blink::HeapHashMap.402" = type { %"class.WTF::HashMap.405" }
%"class.WTF::HashMap.405" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"struct.WTF::KeyValuePair.408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.408" = type opaque
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.411" = type { %"class.WTF::HashSet.414" }
%"class.WTF::HashSet.414" = type { %"class.WTF::HashTable.415" }
%"class.WTF::HashTable.415" = type <{ %"class.blink::WeakMember.417"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.417" = type opaque
%"class.blink::HeapHashSet.418" = type { %"class.WTF::HashSet.421" }
%"class.WTF::HashSet.421" = type { %"class.WTF::HashTable.422" }
%"class.WTF::HashTable.422" = type <{ %"class.blink::WeakMember.424"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.424" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.435" = type { %"class.WTF::HashMap.438" }
%"class.WTF::HashMap.438" = type { %"class.WTF::HashTable.439" }
%"class.WTF::HashTable.439" = type <{ %"struct.WTF::KeyValuePair.441"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.441" = type opaque
%"class.WTF::Vector.442" = type { %"class.WTF::VectorBuffer.443" }
%"class.WTF::VectorBuffer.443" = type { %"class.WTF::VectorBufferBase.444" }
%"class.WTF::VectorBufferBase.444" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.453" = type { %"class.WTF::Vector.456" }
%"class.WTF::Vector.456" = type { %"class.WTF::VectorBuffer.457" }
%"class.WTF::VectorBuffer.457" = type { %"class.WTF::VectorBufferBase.458" }
%"class.WTF::VectorBufferBase.458" = type { %"class.blink::Member.459"*, i32, i32 }
%"class.blink::Member.459" = type opaque
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.467" = type { %"class.WTF::HashSet.470" }
%"class.WTF::HashSet.470" = type { %"class.WTF::HashTable.471" }
%"class.WTF::HashTable.471" = type <{ %"class.blink::WeakMember.473"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.473" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.474", i32, [4 x i8] }>
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { %"struct.std::__1::pair.477"*, i32, i32 }
%"struct.std::__1::pair.477" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.132" = type { %"class.WTF::Vector.135" }
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"class.blink::Member.130"*, i32, i32 }
%"class.blink::HeapVector.493" = type { %"class.WTF::Vector.496" }
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { %"class.blink::Member.499"*, i32, i32 }
%"class.blink::Member.499" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.113" }
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type { %"class.blink::AnimationTimeline", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, double, %"class.blink::Member.647" }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.113", i32, [4 x i8], %"class.blink::HeapHashSet.520", %"class.blink::HeapHashSet.597", %"class.std::__1::unique_ptr.604", %"class.absl::optional.637" }
%"class.blink::HeapHashSet.520" = type { %"class.WTF::HashSet.523" }
%"class.WTF::HashSet.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"class.blink::Member.526"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional", %"class.absl::optional.558", %"class.absl::optional.558", %"class.absl::optional.563", %"class.absl::optional.558", i8, [3 x i8], i32, %"class.blink::Member.568", %"class.blink::Member.568", %"class.blink::Member.570", %"class.blink::Member.113", %"class.blink::Member.585", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.587", %"class.blink::Member.587", %"class.blink::Member.587", %"class.std::__1::unique_ptr.589", i8, [3 x i8], i32, %"class.blink::Member.595", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.542" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.530" }
%"class.blink::HeapVector.530" = type { %"class.WTF::Vector.533" }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535", [32 x i8] }
%"class.WTF::VectorBufferBase.535" = type { %"struct.std::__1::pair.536"*, i32, i32 }
%"struct.std::__1::pair.536" = type { %"class.WTF::AtomicString", %"class.blink::Member.537" }
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::HeapVector.539"* }
%"class.blink::HeapVector.539" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.WTF::Vector.545"* }
%"class.WTF::Vector.545" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.549" }
%"class.blink::WeakMember.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.absl::optional.563" = type { %"class.absl::optional_internal::optional_data.564" }
%"class.absl::optional_internal::optional_data.564" = type { %"class.absl::optional_internal::optional_data_base.565" }
%"class.absl::optional_internal::optional_data_base.565" = type { %"class.absl::optional_internal::optional_data_dtor_base.566" }
%"class.absl::optional_internal::optional_data_dtor_base.566" = type { i8, %union.anon.567 }
%union.anon.567 = type { i32 }
%"class.absl::optional.558" = type { %"class.absl::optional_internal::optional_data.559" }
%"class.absl::optional_internal::optional_data.559" = type { %"class.absl::optional_internal::optional_data_base.560" }
%"class.absl::optional_internal::optional_data_base.560" = type { %"class.absl::optional_internal::optional_data_dtor_base.561" }
%"class.absl::optional_internal::optional_data_dtor_base.561" = type { i8, %union.anon.562 }
%union.anon.562 = type { %"class.blink::AnimationTimeDelta" }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::AnimationEffect"* }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.572", %"struct.blink::Timing", %"class.blink::Member.576", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.558", %"class.absl::optional.580", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::AnimationEffectOwner"* }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.558", i32, [4 x i8], %class.scoped_refptr.574, i16, [6 x i8] }>
%class.scoped_refptr.574 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.575" }
%"class.base::RefCountedThreadSafe.575" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional", %"class.absl::optional", i8, i8, i8, %"class.absl::optional.558", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.580" = type { %"class.absl::optional_internal::optional_data.581" }
%"class.absl::optional_internal::optional_data.581" = type { %"class.absl::optional_internal::optional_data_base.582" }
%"class.absl::optional_internal::optional_data_base.582" = type { %"class.absl::optional_internal::optional_data_dtor_base.583" }
%"class.absl::optional_internal::optional_data_dtor_base.583" = type { i8, %union.anon.584 }
%union.anon.584 = type { i32 }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional", %"class.absl::optional", double, i8, i32 }
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.751", %"class.std::__1::unique_ptr.752", %"class.blink::Member.526" }
%"class.blink::ThreadState::PrefinalizerRegistration.751" = type { i8 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.597" = type { %"class.WTF::HashSet.600" }
%"class.WTF::HashSet.600" = type { %"class.WTF::HashTable.601" }
%"class.WTF::HashTable.601" = type <{ %"class.blink::WeakMember.603"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.603" = type opaque
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.607 }
%class.scoped_refptr.607 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.608", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.608" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.609" }
%"class.std::__1::__hash_table.609" = type <{ %"class.std::__1::unique_ptr.610", %"class.std::__1::__compressed_pair.620", %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.629", [4 x i8] }>
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612", %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"struct.std::__1::__hash_node_base.613"** }
%"struct.std::__1::__hash_node_base.613" = type { %"struct.std::__1::__hash_node_base.613"* }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.std::__1::__bucket_list_deallocator.615" }
%"class.std::__1::__bucket_list_deallocator.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.std::__1::__hash_node_base.613" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.637" = type { %"class.absl::optional_internal::optional_data.638" }
%"class.absl::optional_internal::optional_data.638" = type { %"class.absl::optional_internal::optional_data_base.639" }
%"class.absl::optional_internal::optional_data_base.639" = type { %"class.absl::optional_internal::optional_data_dtor_base.640" }
%"class.absl::optional_internal::optional_data_dtor_base.640" = type { i8, %union.anon.641 }
%union.anon.641 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.642" }
%"class.absl::optional.642" = type { %"class.absl::optional_internal::optional_data.643" }
%"class.absl::optional_internal::optional_data.643" = type { %"class.absl::optional_internal::optional_data_base.644" }
%"class.absl::optional_internal::optional_data_base.644" = type { %"class.absl::optional_internal::optional_data_dtor_base.645" }
%"class.absl::optional_internal::optional_data_dtor_base.645" = type { i8, %union.anon.646 }
%union.anon.646 = type { %"class.base::TimeDelta" }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::DocumentTimeline::PlatformTiming"* }
%"class.blink::DocumentTimeline::PlatformTiming" = type { i32 (...)** }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.398" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.399", { i64, i64 } }
%"class.blink::WeakMember.399" = type { %"class.blink::MemberBase.114" }
%"class.blink::HeapHashSet.655" = type { %"class.WTF::HashSet.658" }
%"class.WTF::HashSet.658" = type { %"class.WTF::HashTable.659" }
%"class.WTF::HashTable.659" = type <{ %"class.blink::Member.661"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.661" = type opaque
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.692" = type { %"class.WTF::VectorBuffer.693" }
%"class.WTF::VectorBuffer.693" = type { %"class.WTF::VectorBufferBase.694" }
%"class.WTF::VectorBufferBase.694" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.697" = type { %"class.WTF::HashMap.700" }
%"class.WTF::HashMap.700" = type { %"class.WTF::HashTable.701" }
%"class.WTF::HashTable.701" = type <{ %"struct.WTF::KeyValuePair.703"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.703" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.716" = type { %"class.WTF::HashMap.719" }
%"class.WTF::HashMap.719" = type { %"class.WTF::HashTable.720" }
%"class.WTF::HashTable.720" = type <{ %"struct.WTF::KeyValuePair.722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.722" = type opaque
%"class.blink::HeapObserverSet.723" = type { i32, [4 x i8], %"class.blink::HeapHashSet.724" }
%"class.blink::HeapHashSet.724" = type { %"class.WTF::HashSet.727" }
%"class.WTF::HashSet.727" = type { %"class.WTF::HashTable.728" }
%"class.WTF::HashTable.728" = type <{ %"class.blink::WeakMember.730"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.730" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.113", %"class.blink::HeapHashSet.740", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.747", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.740" = type { %"class.WTF::HashSet.743" }
%"class.WTF::HashSet.743" = type { %"class.WTF::HashTable.744" }
%"class.WTF::HashTable.744" = type <{ %"class.blink::Member.746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.746" = type opaque
%"class.blink::HeapTaskRunnerTimer.747" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.748", { i64, i64 } }
%"class.blink::WeakMember.748" = type { %"class.blink::MemberBase.734" }
%"class.blink::WeakMember.735" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::Node"* }
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.119" }
%"class.blink::HeapHashMap.119" = type { %"class.WTF::HashMap.122" }
%"class.WTF::HashMap.122" = type { %"class.WTF::HashTable.123" }
%"class.WTF::HashTable.123" = type <{ %"struct.WTF::KeyValuePair.125"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.125" = type { %"class.WTF::AtomicString", %"class.blink::Member.126" }
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.130", i32, %"class.blink::HeapVector.132" }
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.143" = type { %"class.blink::MemberBase.144" }
%"class.blink::MemberBase.144" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.145" }
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::HeapHashMap.147"* }
%"class.blink::HeapHashMap.147" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.150" = type { %"class.WTF::Vector.153" }
%"class.WTF::Vector.153" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { %"class.blink::Member.156"*, i32, i32 }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase.14" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.32", %"class.blink::Member.34", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.32" = type { %"class.WTF::SingleThreadedBitField.33" }
%"class.WTF::SingleThreadedBitField.33" = type { i32 }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.37", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.37" = type { %"class.base::RefCounted.38" }
%"class.base::RefCounted.38" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.42" }
%"class.WTF::HashTable.42" = type <{ %"class.blink::WeakMember.10"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.46" }
%"class.WTF::HashMap.46" = type { %"class.WTF::HashTable.47" }
%"class.WTF::HashTable.47" = type <{ %"struct.WTF::KeyValuePair.49"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.49" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::PriorityQueue" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.blink::SMILTime", %"class.blink::Member.59" }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::SVGSMILElement"* }
%"class.blink::SVGSMILElement" = type <{ %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.63", %"class.blink::Member.64", %"class.blink::HeapVector.66", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.74", %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList", %"struct.blink::SMILInterval", %"struct.blink::SMILInterval", i8, [3 x i8], %"struct.blink::SVGSMILElement::ProgressState", [4 x i8], %"class.blink::Member.85", i32, i32, %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILRepeatCount", %"class.blink::SMILTime", %"class.blink::SMILTime", i8, i8, i8, [5 x i8] }>
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.61", %"class.blink::Member.61" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.11" }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::IdTargetObserver"* }
%"class.blink::IdTargetObserver" = type opaque
%"class.blink::HeapVector.66" = type { %"class.WTF::Vector.69" }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::Member.72"*, i32, i32 }
%"class.blink::Member.72" = type opaque
%"class.blink::HeapHashSet.74" = type { %"class.WTF::HashSet.77" }
%"class.WTF::HashSet.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.59"*, i32, i32, i32, [4 x i8] }>
%"class.blink::SMILInstanceTimeList" = type <{ %"class.WTF::Vector.80", i32, [4 x i8] }>
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"class.blink::SMILTimeWithOrigin"*, i32, i32 }
%"class.blink::SMILTimeWithOrigin" = type <{ %"class.blink::SMILTime", i32, [4 x i8] }>
%"struct.blink::SMILInterval" = type { %"class.blink::SMILTime", %"class.blink::SMILTime" }
%"struct.blink::SVGSMILElement::ProgressState" = type { float, i32 }
%"class.blink::Member.85" = type { %"class.blink::MemberBase" }
%"class.blink::SMILRepeatCount" = type { double }
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::SVGSVGElement"* }
%"class.blink::SVGSVGElement" = type <{ %"class.blink::SVGGraphicsElement", %"class.blink::SVGFitToViewBox", %"class.blink::SVGZoomAndPan.base", [4 x i8], %"class.blink::Member.95", %"class.blink::Member.95", %"class.blink::Member.95", %"class.blink::Member.95", %"class.blink::Member.85", %"class.blink::Member.97", %"class.blink::Member.102", float, [4 x i8] }>
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.89" }
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::SVGFitToViewBox" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.91", %"class.blink::Member.93" }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::SVGAnimatedRect"* }
%"class.blink::SVGAnimatedRect" = type opaque
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::SVGAnimatedPreserveAspectRatio"* }
%"class.blink::SVGAnimatedPreserveAspectRatio" = type opaque
%"class.blink::SVGZoomAndPan.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::SVGPoint"* }
%"class.blink::SVGPoint" = type { %"class.blink::SVGListablePropertyBase", %"class.blink::FloatPoint" }
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type opaque
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::SVGViewSpec"* }
%"class.blink::SVGViewSpec" = type opaque
%"class.blink::HeapHashMap.104" = type { %"class.WTF::HashMap.107" }
%"class.WTF::HashMap.107" = type { %"class.WTF::HashTable.108" }
%"class.WTF::HashTable.108" = type <{ %"struct.WTF::KeyValuePair.110"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.110" = type { %"class.blink::Member.59", %"struct.blink::SMILInterval" }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.834" }
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.blink::Settings"* }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.840", %"class.WTF::HashMap.840", %"class.WTF::HashMap.840", %"class.WTF::HashMap.840", %"class.WTF::HashMap.840", %"class.WTF::HashMap.840", %"class.WTF::HashMap.840", %"class.std::__1::unique_ptr.845" }
%"class.WTF::HashMap.840" = type { %"class.WTF::HashTable.841" }
%"class.WTF::HashTable.841" = type <{ %"struct.WTF::KeyValuePair.844"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.844" = type opaque
%"class.std::__1::unique_ptr.845" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.WTF::Vector.848"* }
%"class.WTF::Vector.848" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.854", %"class.blink::Member.859", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.861", i8, i32, %"class.blink::Color", %"class.absl::optional.864", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.869", %"class.blink::Member.871", %"class.blink::Member.871", %"class.std::__1::unique_ptr.874", i32, [4 x i8], %"class.WTF::HashSet.877", %"class.blink::Member.884", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.886", %"class.blink::HeapHashSet.893", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.901", i8, %"class.blink::Member.907", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.919", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.933", i8, %"class.std::__1::unique_ptr.939", %"class.std::__1::unique_ptr.1058", %"class.WTF::Vector.1064", i32, %class.scoped_refptr.1069, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1070", %"class.blink::Member.1072", %"class.blink::Member.1074", %"class.blink::HeapHashSet.1076", %"class.blink::HeapHashSet.1083", %"class.std::__1::unique_ptr.1090", %"class.std::__1::unique_ptr.1097", %"class.WTF::Vector.166" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.854" = type { %"class.WTF::HashTable.855" }
%"class.WTF::HashTable.855" = type <{ %class.scoped_refptr.858*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.858 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.861" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.862", { i64, i64 } }
%"class.blink::WeakMember.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.864" = type { %"class.absl::optional_internal::optional_data.865" }
%"class.absl::optional_internal::optional_data.865" = type { %"class.absl::optional_internal::optional_data_base.866" }
%"class.absl::optional_internal::optional_data_base.866" = type { %"class.absl::optional_internal::optional_data_dtor_base.867" }
%"class.absl::optional_internal::optional_data_dtor_base.867" = type { i8, %union.anon.868 }
%union.anon.868 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::HeapHashSet.873"* }
%"class.blink::HeapHashSet.873" = type opaque
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.WTF::HashSet.877"* }
%"class.WTF::HashSet.877" = type { %"class.WTF::HashTable.878" }
%"class.WTF::HashTable.878" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.886" = type { %"class.WTF::HashSet.889" }
%"class.WTF::HashSet.889" = type { %"class.WTF::HashTable.890" }
%"class.WTF::HashTable.890" = type <{ %"class.blink::Member.892"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.892" = type opaque
%"class.blink::HeapHashSet.893" = type { %"class.WTF::HashSet.896" }
%"class.WTF::HashSet.896" = type { %"class.WTF::HashTable.897" }
%"class.WTF::HashTable.897" = type <{ %"class.blink::Member.899"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.911", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.911" = type { %"class.WTF::HashTable.912" }
%"class.WTF::HashTable.912" = type <{ %"struct.WTF::KeyValuePair.914"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.914" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.915", i32, i32 }
%"class.WTF::Vector.915" = type { %"class.WTF::VectorBuffer.916" }
%"class.WTF::VectorBuffer.916" = type { %"class.WTF::VectorBufferBase.917" }
%"class.WTF::VectorBufferBase.917" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.919" = type { %"class.WTF::LinkedHashSet.922" }
%"class.WTF::LinkedHashSet.922" = type { %"class.WTF::HashMap.923", %"class.WTF::VectorBackedLinkedList.927" }
%"class.WTF::HashMap.923" = type { %"class.WTF::HashTable.924" }
%"class.WTF::HashTable.924" = type <{ %"struct.WTF::KeyValuePair.926"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.926" = type opaque
%"class.WTF::VectorBackedLinkedList.927" = type { %"class.WTF::Vector.928", i32, i32 }
%"class.WTF::Vector.928" = type { %"class.WTF::VectorBuffer.929" }
%"class.WTF::VectorBuffer.929" = type { %"class.WTF::VectorBufferBase.930" }
%"class.WTF::VectorBufferBase.930" = type { %"class.WTF::VectorBackedLinkedListNode.931"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.931" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.942, %class.scoped_refptr.942, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1035", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1040", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.942 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.943", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.950" }
%"class.WTF::RefCounted.943" = type { %"class.base::RefCounted.944" }
%"class.base::RefCounted.944" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.945", i32, [4 x i8] }>
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase.947" }
%"class.WTF::VectorBufferBase.947" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.951" }
%"class.WTF::VectorBuffer.951" = type { %"class.WTF::VectorBufferBase.952" }
%"class.WTF::VectorBufferBase.952" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.956", %"class.std::__1::unique_ptr.1005", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.953, %class.scoped_refptr.954, %class.scoped_refptr.955 }
%class.scoped_refptr.953 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.969", i8, i8, %class.scoped_refptr.953, i32, i32 }
%"class.WTF::RefCounted.969" = type { %"class.base::RefCounted.970" }
%"class.base::RefCounted.970" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.954 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1126" }
%"class.blink::PaintPropertyNode.1126" = type { %"class.WTF::RefCounted.1127", i8, i8, %class.scoped_refptr.954, i32, i32 }
%"class.WTF::RefCounted.1127" = type { %"class.base::RefCounted.1128" }
%"class.base::RefCounted.1128" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.955 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1123" }
%"class.blink::PaintPropertyNode.1123" = type { %"class.WTF::RefCounted.1124", i8, i8, %class.scoped_refptr.955, i32, i32 }
%"class.WTF::RefCounted.1124" = type { %"class.base::RefCounted.1125" }
%"class.base::RefCounted.1125" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.959", %"class.WTF::Vector.964", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.964" = type { %"class.WTF::VectorBuffer.965" }
%"class.WTF::VectorBuffer.965" = type { %"class.WTF::VectorBufferBase.966" }
%"class.WTF::VectorBufferBase.966" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.984" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.977, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.978", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.971" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.977 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1108", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1108" = type { %"class.WTF::RefCounted.1109", i8, i8, %class.scoped_refptr.977, i32, i32 }
%"class.WTF::RefCounted.1109" = type { %"class.base::RefCounted.1110" }
%"class.base::RefCounted.1110" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1111" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1111" = type { %"class.absl::optional_internal::optional_data.1112" }
%"class.absl::optional_internal::optional_data.1112" = type { %"class.absl::optional_internal::optional_data_base.1113" }
%"class.absl::optional_internal::optional_data_base.1113" = type { %"class.absl::optional_internal::optional_data_dtor_base.1114" }
%"class.absl::optional_internal::optional_data_dtor_base.1114" = type { i8, %union.anon.1115 }
%union.anon.1115 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1116", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1116" = type { %"class.std::__1::__vector_base.1117" }
%"class.std::__1::__vector_base.1117" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1118" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.987", %"class.std::__1::unique_ptr.993", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1008", %"class.absl::optional.1008" }
%"class.absl::optional.1008" = type { %"class.absl::optional_internal::optional_data.1009" }
%"class.absl::optional_internal::optional_data.1009" = type { %"class.absl::optional_internal::optional_data_base.1010" }
%"class.absl::optional_internal::optional_data_base.1010" = type { %"class.absl::optional_internal::optional_data_dtor_base.1011" }
%"class.absl::optional_internal::optional_data_dtor_base.1011" = type { i8, [3 x i8], %union.anon.1012 }
%union.anon.1012 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.950"*, %"class.absl::optional.1018", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1018" = type { %"class.absl::optional_internal::optional_data.1019" }
%"class.absl::optional_internal::optional_data.1019" = type { %"class.absl::optional_internal::optional_data_base.1020" }
%"class.absl::optional_internal::optional_data_base.1020" = type { %"class.absl::optional_internal::optional_data_dtor_base.1021" }
%"class.absl::optional_internal::optional_data_dtor_base.1021" = type { i8, %union.anon.1022 }
%union.anon.1022 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1025", %"class.WTF::Vector.1030" }
%"class.WTF::Vector.1025" = type { %"class.WTF::VectorBuffer.1026" }
%"class.WTF::VectorBuffer.1026" = type { %"class.WTF::VectorBufferBase.1027", [128 x i8] }
%"class.WTF::VectorBufferBase.1027" = type { i32*, i32, i32 }
%"class.WTF::Vector.1030" = type { %"class.WTF::VectorBuffer.1031" }
%"class.WTF::VectorBuffer.1031" = type { %"class.WTF::VectorBufferBase.1032", [128 x i8] }
%"class.WTF::VectorBufferBase.1032" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1035" = type { %"class.WTF::VectorBuffer.1036" }
%"class.WTF::VectorBuffer.1036" = type { %"class.WTF::VectorBufferBase.1037" }
%"class.WTF::VectorBufferBase.1037" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1040" = type { %"class.WTF::HashTable.1041" }
%"class.WTF::HashTable.1041" = type <{ %"struct.WTF::KeyValuePair.1044"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1044" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1045", %"class.WTF::Vector.1050" }
%"class.WTF::HashMap.1045" = type { %"class.WTF::HashTable.1046" }
%"class.WTF::HashTable.1046" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type opaque
%"class.WTF::Vector.1050" = type { %"class.WTF::VectorBuffer.1051" }
%"class.WTF::VectorBuffer.1051" = type { %"class.WTF::VectorBufferBase.1052" }
%"class.WTF::VectorBufferBase.1052" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1064" = type { %"class.WTF::VectorBuffer.1065" }
%"class.WTF::VectorBuffer.1065" = type { %"class.WTF::VectorBufferBase.1066" }
%"class.WTF::VectorBufferBase.1066" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1069 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1076" = type { %"class.WTF::HashSet.1079" }
%"class.WTF::HashSet.1079" = type { %"class.WTF::HashTable.1080" }
%"class.WTF::HashTable.1080" = type <{ %"class.blink::WeakMember.1082"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1082" = type opaque
%"class.blink::HeapHashSet.1083" = type { %"class.WTF::HashSet.1086" }
%"class.WTF::HashSet.1086" = type { %"class.WTF::HashTable.1087" }
%"class.WTF::HashTable.1087" = type <{ %"class.blink::WeakMember.1089"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1089" = type opaque
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1093" }
%"class.base::time_internal::TimeBase.1093" = type { i64 }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1100", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1100" = type { %"class.absl::optional_internal::optional_data.1101" }
%"class.absl::optional_internal::optional_data.1101" = type { %"class.absl::optional_internal::optional_data_base.1102" }
%"class.absl::optional_internal::optional_data_base.1102" = type { %"class.absl::optional_internal::optional_data_dtor_base.1103" }
%"class.absl::optional_internal::optional_data_dtor_base.1103" = type { i8, %union.anon.1104 }
%union.anon.1104 = type { %"class.base::Time" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.830 }
%union.anon.830 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::ElementSMILAnimations" = type { %"class.blink::HeapHashMap.1134" }
%"class.blink::HeapHashMap.1134" = type { %"class.WTF::HashMap.1137" }
%"class.WTF::HashMap.1137" = type { %"class.WTF::HashTable.1138" }
%"class.WTF::HashTable.1138" = type <{ %"struct.WTF::KeyValuePair.1140"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1140" = type opaque
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1173 }
%class.scoped_refptr.1173 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1174" }
%"class.blink::PersistentBase.1174" = type { %"class.blink::SMILTimeContainer"*, %"class.blink::PersistentNodePtr.1175" }
%"class.blink::PersistentNodePtr.1175" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.1176" }
%"class.std::__1::__tuple_leaf" = type { %"class.base::WeakPtr" }
%"class.std::__1::__tuple_leaf.1176" = type { %"class.blink::WeakPersistent" }
%"class.blink::HeapHashTableBacking.1186" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE6InsertES1_PS2_ = comdat any

$_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE6RemoveEPS2_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6RehashEjPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink6MemberINS2_14SVGSMILElementEEENS2_12SMILIntervalEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSA_IS6_EEEELb1EE4MoveEOS7_RS7_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_14SVGSMILElementEEEEENS4_INS5_12SMILIntervalEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS1_12KeyValuePairIS5_NS_12SMILIntervalEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEED0Ev = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEE5FiredEv = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_17SMILTimeContainerEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_17SMILTimeContainerEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_17SMILTimeContainerEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17SMILTimeContainerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_17SMILTimeContainerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_iEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE11PercolateUpEj = comdat any

$_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEENS_12VectorTraitsIS8_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseIS8_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS7_EEE14AllocateObjectISB_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE13PercolateDownEj = comdat any

$_ZNK3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink9TraversalINS_14SVGSMILElementEE11FirstWithinERKNS_4NodeE = comdat any

$_ZN5blink9TraversalINS_14SVGSMILElementEE4NextERKNS_13ContainerNodeEPKNS_4NodeE = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_17SMILTimeContainerEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10SVGElementEEENS_12KeyValuePairIS5_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSC_IjEEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_13SVGSVGElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [75 x i8] c"../../third_party/blink/renderer/core/svg/animation/smil_time_container.cc\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"!IsStarted()\00", align 1
@_ZN5blink16DocumentTimeline13kMinimumDelayE = external local_unnamed_addr constant double, align 8
@.str.2 = private unnamed_addr constant [15 x i8] c"ScheduleWakeUp\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"current_iteration++ < kMaxIterations\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.10 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.11 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS6_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [477 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::SVGSMILElement>, WTF::KeyValuePair<blink::Member<blink::SVGSMILElement>, blink::SMILInterval>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::SVGSMILElement>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::SVGSMILElement> >, WTF::HashTraits<blink::SMILInterval> >, WTF::HashTraits<blink::Member<blink::SVGSMILElement> >, blink::HeapAllocator> >]\00", align 1
@_ZTVN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::HeapTaskRunnerTimer"*)* @_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEED0Ev to i8*), i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase4StopEv to i8*), i8* bitcast (void (%"class.blink::HeapTaskRunnerTimer"*)* @_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEE5FiredEv to i8*), i8* bitcast (void (%"class.base::OnceCallback"*, %"class.blink::HeapTaskRunnerTimer"*, %"class.base::WeakPtr"*)* @_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE to i8*)] }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [459 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::SVGElement>, WTF::KeyValuePair<blink::WeakMember<blink::SVGElement>, unsigned int>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::SVGElement>, WTF::HashMapValueTraits<WTF::HashTraits<blink::WeakMember<blink::SVGElement> >, WTF::HashTraits<unsigned int> >, WTF::HashTraits<blink::WeakMember<blink::SVGElement> >, blink::HeapAllocator> >]\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.18 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_8SMILTimeENS1_6MemberINS1_14SVGSMILElementEEEEENS_12VectorTraitsIS9_EEEEEEPKcv = private unnamed_addr constant [237 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<std::__1::pair<blink::SMILTime, blink::Member<blink::SVGSMILElement> >, WTF::VectorTraits<std::__1::pair<blink::SMILTime, blink::Member<blink::SVGSMILElement> > > >]\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink9svg_names7kSetTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names11kAnimateTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names17kAnimateMotionTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names20kAnimateTransformTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8

@_ZN5blink17SMILTimeContainer12TimingUpdateD1Ev = hidden unnamed_addr alias void (%"class.blink::SMILTimeContainer::TimingUpdate"*), void (%"class.blink::SMILTimeContainer::TimingUpdate"*)* @_ZN5blink17SMILTimeContainer12TimingUpdateD2Ev
@_ZN5blink17SMILTimeContainerC1ERNS_13SVGSVGElementE = hidden unnamed_addr alias void (%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSVGElement"*), void (%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSVGElement"*)* @_ZN5blink17SMILTimeContainerC2ERNS_13SVGSVGElementE
@_ZN5blink17SMILTimeContainerD1Ev = hidden unnamed_addr alias void (%"class.blink::SMILTimeContainer"*), void (%"class.blink::SMILTimeContainer"*)* @_ZN5blink17SMILTimeContainerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer12TimingUpdateD2Ev(%"class.blink::SMILTimeContainer::TimingUpdate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %0, i64 0, i32 2
  %3 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %3, i64 0, i32 5
  %5 = load i8, i8* %4, align 4
  %6 = and i8 %5, 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %50, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %13, i64 %16
  br i1 %11, label %50, label %18

18:                                               ; preds = %8
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %18, %24
  %21 = phi %"struct.WTF::KeyValuePair.110"* [ %25, %24 ], [ %13, %18 ]
  %22 = bitcast %"struct.WTF::KeyValuePair.110"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  switch i64 %23, label %27 [
    i64 -1, label %24
    i64 0, label %24
  ]

24:                                               ; preds = %20, %20
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %21, i64 1
  %26 = icmp eq %"struct.WTF::KeyValuePair.110"* %25, %17
  br i1 %26, label %50, label %20

27:                                               ; preds = %20, %18
  %28 = phi %"struct.WTF::KeyValuePair.110"* [ %13, %18 ], [ %21, %20 ]
  %29 = icmp eq %"struct.WTF::KeyValuePair.110"* %28, %17
  br i1 %29, label %50, label %30

30:                                               ; preds = %27, %48
  %31 = phi %"struct.WTF::KeyValuePair.110"* [ %42, %48 ], [ %28, %27 ]
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %32, align 8
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %31, i64 0, i32 1
  %35 = tail call i32 @_ZNK5blink14SVGSMILElement17ComputeSeekEventsERKNS_12SMILIntervalE(%"class.blink::SVGSMILElement"* %33, %"struct.blink::SMILInterval"* dereferenceable(16) %34) #10
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %30
  tail call void @_ZN5blink14SVGSMILElement14DispatchEventsENS0_17EventDispatchMaskE(%"class.blink::SVGSMILElement"* %33, i32 %35) #10
  br label %38

38:                                               ; preds = %30, %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %31, i64 1
  %40 = icmp eq %"struct.WTF::KeyValuePair.110"* %39, %17
  br i1 %40, label %50, label %41

41:                                               ; preds = %38, %45
  %42 = phi %"struct.WTF::KeyValuePair.110"* [ %46, %45 ], [ %39, %38 ]
  %43 = bitcast %"struct.WTF::KeyValuePair.110"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  switch i64 %44, label %48 [
    i64 -1, label %45
    i64 0, label %45
  ]

45:                                               ; preds = %41, %41
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %42, i64 1
  %47 = icmp eq %"struct.WTF::KeyValuePair.110"* %46, %17
  br i1 %47, label %50, label %41

48:                                               ; preds = %41
  %49 = icmp eq %"struct.WTF::KeyValuePair.110"* %42, %17
  br i1 %49, label %50, label %30

50:                                               ; preds = %24, %38, %48, %45, %8, %27, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK5blink14SVGSMILElement17ComputeSeekEventsERKNS_12SMILIntervalE(%"class.blink::SVGSMILElement"*, %"struct.blink::SMILInterval"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink14SVGSMILElement14DispatchEventsENS0_17EventDispatchMaskE(%"class.blink::SVGSMILElement"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer12TimingUpdate16AddActiveElementEPNS_14SVGSMILElementERKNS_12SMILIntervalE(%"class.blink::SMILTimeContainer::TimingUpdate"*, %"class.blink::SVGSMILElement"*, %"struct.blink::SMILInterval"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SVGSMILElement"*, align 8
  store %"class.blink::SVGSMILElement"* %1, %"class.blink::SVGSMILElement"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = call { %"struct.WTF::KeyValuePair.110"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.108"* %5, %"class.blink::SVGSMILElement"** nonnull dereferenceable(8) %4, %"struct.blink::SMILInterval"* dereferenceable(16) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer12TimingUpdate12HandleEventsEPNS_14SVGSMILElementENS2_17EventDispatchMaskE(%"class.blink::SMILTimeContainer::TimingUpdate"*, %"class.blink::SVGSMILElement"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SVGSMILElement"*, align 8
  %5 = alloca <2 x i64>, align 16
  store %"class.blink::SVGSMILElement"* %1, %"class.blink::SVGSMILElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %0, i64 0, i32 2
  %11 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %11, i64 0, i32 5
  %13 = load i8, i8* %12, align 4
  %14 = and i8 %13, 4
  %15 = icmp ne i8 %14, 0
  %16 = icmp ne i32 %2, 0
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %24

18:                                               ; preds = %9
  tail call void @_ZN5blink14SVGSMILElement14DispatchEventsENS0_17EventDispatchMaskE(%"class.blink::SVGSMILElement"* %1, i32 %2) #10
  br label %24

19:                                               ; preds = %3
  %20 = bitcast <2 x i64>* %5 to %"struct.blink::SMILInterval"*
  %21 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %5, align 16
  %22 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = call { %"struct.WTF::KeyValuePair.110"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.108"* %22, %"class.blink::SVGSMILElement"** nonnull dereferenceable(8) %4, %"struct.blink::SMILInterval"* nonnull dereferenceable(16) %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  br label %24

24:                                               ; preds = %9, %18, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainerC2ERNS_13SVGSVGElementE(%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSVGElement"* dereferenceable(304)) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %6, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %9 = bitcast %"class.blink::SMILTimeContainer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 36, i1 false)
  %10 = load i8, i8* %8, align 4
  %11 = and i8 %10, -4
  store i8 %11, i8* %8, align 4
  %12 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = tail call zeroext i1 @_ZN5blink8SVGImage12IsInSVGImageEPKNS_4NodeE(%"class.blink::Node"* %12) #10
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i8
  %16 = load i8, i8* %8, align 4
  %17 = shl nuw nsw i8 %15, 2
  %18 = and i8 %16, -13
  %19 = or i8 %18, %17
  store i8 %19, i8* %8, align 4
  %20 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 6
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %25, i8 zeroext 23) #10
  %27 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %21, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %27, %"class.base::SingleThreadTaskRunner"* %26) #10
  %28 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %21, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  store %"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 2, i32 0
  store i64 ptrtoint (void (%"class.blink::SMILTimeContainer"*, %"class.blink::TimerBase"*)* @_ZN5blink17SMILTimeContainer16WakeupTimerFiredEPNS_9TimerBaseE to i64), i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 2, i32 1
  %32 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9
  %33 = bitcast %"class.blink::PriorityQueue"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #10
  %34 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %35 = bitcast i64* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 28, i1 false)
  store %"class.blink::SVGSVGElement"* %1, %"class.blink::SVGSVGElement"** %34, align 8
  %36 = load i64, i64* %5, align 8
  %37 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 9223372036854775804, i64* %37, align 8
  %38 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  store i64 %36, i64* %3, align 8
  %39 = icmp sgt i64 %36, 9223372036854775804
  %40 = bitcast i64* %3 to %"class.blink::SMILTime"*
  %41 = select i1 %39, %"class.blink::SMILTime"* %6, %"class.blink::SMILTime"* %40
  %42 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %41, i64 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  store i64 %43, i64* %5, align 8
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  %47 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %46) #10
  %48 = icmp eq %"class.blink::Settings"* %47, null
  br i1 %48, label %72, label %49

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %47, i64 0, i32 17
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %72

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = icmp slt i64 %54, 9223372036854775806
  br i1 %55, label %56, label %63

56:                                               ; preds = %53
  %57 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %54, i64 3000000) #10
  %58 = extractvalue { i64, i1 } %57, 1
  %59 = extractvalue { i64, i1 } %57, 0
  %60 = select i1 %58, i64 9223372036854775807, i64 %59, !prof !2
  %61 = icmp slt i64 %60, 9223372036854775805
  %62 = select i1 %61, i64 %60, i64 9223372036854775805
  br label %63

63:                                               ; preds = %56, %53
  %64 = phi i64 [ %62, %56 ], [ %54, %53 ]
  %65 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  store i64 %64, i64* %4, align 8
  %66 = load i64, i64* %7, align 8
  %67 = icmp slt i64 %66, %64
  %68 = bitcast i64* %4 to %"class.blink::SMILTime"*
  %69 = select i1 %67, %"class.blink::SMILTime"* %6, %"class.blink::SMILTime"* %68
  %70 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %69, i64 0, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  store i64 %71, i64* %37, align 8
  br label %72

72:                                               ; preds = %2, %49, %63
  ret void
}

declare zeroext i1 @_ZN5blink8SVGImage12IsInSVGImageEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer16WakeupTimerFiredEPNS_9TimerBaseE(%"class.blink::SMILTimeContainer"*, %"class.blink::TimerBase"* nocapture readnone) #0 align 2 {
  %3 = alloca %"class.blink::SMILTimeContainer::TimingUpdate", align 8
  %4 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  store i32 0, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %7 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 5, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -2
  %15 = icmp ult i32 %14, 18
  br i1 %15, label %16, label %85

16:                                               ; preds = %2
  %17 = icmp eq i32 %5, 2
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %11) #10
  %20 = icmp eq %"class.blink::LocalFrameView"* %19, null
  br i1 %20, label %85, label %21

21:                                               ; preds = %18
  %22 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %26) #10
  tail call void @_ZN5blink14LocalFrameView17ScheduleAnimationEN4base9TimeDeltaE(%"class.blink::LocalFrameView"* %27, i64 0) #10
  store i32 3, i32* %4, align 8
  br label %85

28:                                               ; preds = %16
  %29 = bitcast %"class.blink::SMILTimeContainer::TimingUpdate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 48, i1 false)
  %30 = tail call i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"* %0)
  %31 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %3, i64 0, i32 1
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %3, i64 0, i32 2
  store %"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %3, i64 0, i32 3
  %35 = bitcast %"class.blink::HeapHashMap.104"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 20, i1 false) #10
  %36 = call zeroext i1 @_ZN5blink17SMILTimeContainer40UpdateAnimationsAndScheduleFrameIfNeededERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer::TimingUpdate"* nonnull dereferenceable(48) %3)
  %37 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %33, align 8
  %38 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %37, i64 0, i32 5
  %39 = load i8, i8* %38, align 4
  %40 = and i8 %39, 4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %84, label %42

42:                                               ; preds = %28
  %43 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %3, i64 0, i32 3, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %3, i64 0, i32 3, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %47, i64 %50
  br i1 %45, label %84, label %52

52:                                               ; preds = %42
  %53 = icmp eq i32 %49, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %52, %58
  %55 = phi %"struct.WTF::KeyValuePair.110"* [ %59, %58 ], [ %47, %52 ]
  %56 = bitcast %"struct.WTF::KeyValuePair.110"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  switch i64 %57, label %61 [
    i64 -1, label %58
    i64 0, label %58
  ]

58:                                               ; preds = %54, %54
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %55, i64 1
  %60 = icmp eq %"struct.WTF::KeyValuePair.110"* %59, %51
  br i1 %60, label %84, label %54

61:                                               ; preds = %54, %52
  %62 = phi %"struct.WTF::KeyValuePair.110"* [ %47, %52 ], [ %55, %54 ]
  %63 = icmp eq %"struct.WTF::KeyValuePair.110"* %62, %51
  br i1 %63, label %84, label %64

64:                                               ; preds = %61, %82
  %65 = phi %"struct.WTF::KeyValuePair.110"* [ %76, %82 ], [ %62, %61 ]
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %66, align 8
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %65, i64 0, i32 1
  %69 = call i32 @_ZNK5blink14SVGSMILElement17ComputeSeekEventsERKNS_12SMILIntervalE(%"class.blink::SVGSMILElement"* %67, %"struct.blink::SMILInterval"* dereferenceable(16) %68) #10
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %64
  call void @_ZN5blink14SVGSMILElement14DispatchEventsENS0_17EventDispatchMaskE(%"class.blink::SVGSMILElement"* %67, i32 %69) #10
  br label %72

72:                                               ; preds = %71, %64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %65, i64 1
  %74 = icmp eq %"struct.WTF::KeyValuePair.110"* %73, %51
  br i1 %74, label %84, label %75

75:                                               ; preds = %72, %79
  %76 = phi %"struct.WTF::KeyValuePair.110"* [ %80, %79 ], [ %73, %72 ]
  %77 = bitcast %"struct.WTF::KeyValuePair.110"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  switch i64 %78, label %82 [
    i64 -1, label %79
    i64 0, label %79
  ]

79:                                               ; preds = %75, %75
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %76, i64 1
  %81 = icmp eq %"struct.WTF::KeyValuePair.110"* %80, %51
  br i1 %81, label %84, label %75

82:                                               ; preds = %75
  %83 = icmp eq %"struct.WTF::KeyValuePair.110"* %76, %51
  br i1 %83, label %84, label %64

84:                                               ; preds = %58, %72, %82, %79, %28, %42, %61
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #10
  br label %85

85:                                               ; preds = %21, %18, %84, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer19SetPresentationTimeENS_8SMILTimeE(%"class.blink::SMILTimeContainer"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 9223372036854775804, i64* %5, align 8
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  store i64 %1, i64* %3, align 8
  %7 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %7, i64 0, i32 0, i32 0
  %9 = icmp sgt i64 %1, 9223372036854775804
  %10 = bitcast i64* %3 to %"class.blink::SMILTime"*
  %11 = select i1 %9, %"class.blink::SMILTime"* %7, %"class.blink::SMILTime"* %10
  %12 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %11, i64 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  %14 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %16 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %20) #10
  %22 = icmp eq %"class.blink::Settings"* %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %21, i64 0, i32 17
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %46

27:                                               ; preds = %23
  %28 = load i64, i64* %14, align 8
  %29 = icmp slt i64 %28, 9223372036854775806
  br i1 %29, label %30, label %37

30:                                               ; preds = %27
  %31 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %28, i64 3000000) #10
  %32 = extractvalue { i64, i1 } %31, 1
  %33 = extractvalue { i64, i1 } %31, 0
  %34 = select i1 %32, i64 9223372036854775807, i64 %33, !prof !2
  %35 = icmp slt i64 %34, 9223372036854775805
  %36 = select i1 %35, i64 %34, i64 9223372036854775805
  br label %37

37:                                               ; preds = %27, %30
  %38 = phi i64 [ %36, %30 ], [ %28, %27 ]
  %39 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  store i64 %38, i64* %4, align 8
  %40 = load i64, i64* %8, align 8
  %41 = icmp slt i64 %40, %38
  %42 = bitcast i64* %4 to %"class.blink::SMILTime"*
  %43 = select i1 %41, %"class.blink::SMILTime"* %7, %"class.blink::SMILTime"* %42
  %44 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %43, i64 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  store i64 %45, i64* %5, align 8
  br label %46

46:                                               ; preds = %2, %23, %37
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainerD2Ev(%"class.blink::SMILTimeContainer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %3) #10
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer20CancelAnimationFrameEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %3) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer8ScheduleEPNS_14SVGSMILElementE(%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSMILElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::WeakMember.10", align 8
  %5 = bitcast %"class.blink::WeakMember.10"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.blink::SVGElement"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::WeakMember.10"* %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 0, i32* %3, align 4
  %11 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %12 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_iEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %11, %"class.blink::WeakMember.10"* nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %3) #10
  %13 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %12, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, 1
  store i32 %16, i32* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %17 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9
  call void @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE6InsertES1_PS2_(%"class.blink::PriorityQueue"* %17, i64 9223372036854775807, %"class.blink::SVGSMILElement"* %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE6InsertES1_PS2_(%"class.blink::PriorityQueue"*, i64, %"class.blink::SVGSMILElement"*) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = ptrtoint %"class.blink::SVGSMILElement"* %2 to i64
  %6 = bitcast %"struct.std::__1::pair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %9 = bitcast %"class.blink::Member.59"* %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %61, label %15, !prof !2

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %18 = zext i32 %11 to i64
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %18, i32 0, i32 0, i32 0
  store i64 %1, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %18, i32 1
  %21 = load i64, i64* %9, align 8
  %22 = bitcast %"class.blink::Member.59"* %20 to i64*
  store i64 %21, i64* %22, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %58, label %25

25:                                               ; preds = %15
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #10
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #10
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 9
  %37 = load i8, i8* %36, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %44 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %43, align 8
  %45 = load atomic i64, i64* %22 monotonic, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %44, i64 0, i32 0, i32 0
  %49 = inttoptr i64 %45 to i8*
  %50 = bitcast %"class.blink::MarkingVisitor"* %44 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, i64 5
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, align 8
  tail call void %53(%"class.blink::Visitor"* %48, i8* nonnull %49, i8* %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #10
  %54 = load i64, i64* %40, align 8
  br label %55

55:                                               ; preds = %47, %39
  %56 = phi i64 [ %42, %39 ], [ %54, %47 ]
  %57 = add i64 %56, -1
  store i64 %57, i64* %40, align 8
  br label %58

58:                                               ; preds = %15, %32, %55
  %59 = load i32, i32* %10, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %10, align 4
  br label %64

61:                                               ; preds = %3
  %62 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseIS8_EEvOT_(%"class.WTF::Vector.56"* %62, %"struct.std::__1::pair"* nonnull dereferenceable(16) %4) #10
  %63 = load i32, i32* %10, align 4
  br label %64

64:                                               ; preds = %58, %61
  %65 = phi i32 [ %60, %58 ], [ %63, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  %66 = add i32 %65, -1
  %67 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %2, i64 0, i32 21
  store i32 %66, i32* %67, align 4
  %68 = call i32 @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE11PercolateUpEj(%"class.blink::PriorityQueue"* %0, i32 %66)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer10UnscheduleEPNS_14SVGSMILElementE(%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSMILElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 8, i32 0
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %3, i64 0, i32 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %6, %"class.blink::SVGElement"* %5) #10
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %14, %8
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  store i32 %19, i32* %17, align 8
  br label %23

22:                                               ; preds = %16
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable"* %6, %"struct.WTF::KeyValuePair"* %8) #10
  br label %23

23:                                               ; preds = %2, %21, %22
  %24 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9
  tail call void @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE6RemoveEPS2_(%"class.blink::PriorityQueue"* %24, %"class.blink::SVGSMILElement"* %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE6RemoveEPS2_(%"class.blink::PriorityQueue"*, %"class.blink::SVGSMILElement"*) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 21
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0
  %6 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %5, i32 %4) #10
  %7 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %5, i32 %9) #10
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %12, i64 0, i32 21
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %15, i64 0, i32 21
  %17 = load i32, i32* %13, align 4
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %13, align 4
  store i32 %17, i32* %16, align 4
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 %20, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 1
  %25 = bitcast %"class.blink::Member.59"* %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::Member.59"* %24 to i64*
  %28 = load i64, i64* %27, align 8
  store atomic i64 %28, i64* %25 monotonic, align 8
  store atomic i64 %26, i64* %27 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %2
  %32 = bitcast %"class.blink::Member.59"* %23 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #10
  br label %35

35:                                               ; preds = %31, %2
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.blink::Member.59"* %24 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #10
  br label %42

42:                                               ; preds = %35, %38
  %43 = load i32, i32* %7, align 4
  %44 = add i32 %43, -1
  %45 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %45, align 8
  %47 = zext i32 %44 to i64
  %48 = zext i32 %43 to i64
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 %47
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 %48
  %51 = bitcast %"struct.std::__1::pair"* %49 to i8*
  %52 = ptrtoint %"struct.std::__1::pair"* %50 to i64
  %53 = ptrtoint %"struct.std::__1::pair"* %49 to i64
  %54 = sub i64 %52, %53
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %51, i64 %54) #10
  store i32 %44, i32* %7, align 4
  store i32 -1, i32* %3, align 4
  %55 = load i32, i32* %7, align 4
  %56 = icmp eq i32 %4, %55
  br i1 %56, label %61, label %57

57:                                               ; preds = %42
  %58 = tail call i32 @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE11PercolateUpEj(%"class.blink::PriorityQueue"* %0, i32 %4)
  %59 = icmp eq i32 %58, %4
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE13PercolateDownEj(%"class.blink::PriorityQueue"* %0, i32 %4)
  br label %61

61:                                               ; preds = %42, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer10RescheduleEPNS_14SVGSMILElementENS_8SMILTimeE(%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSMILElement"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 21
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %41, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %5, i64 0, i32 0, i32 0
  %11 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %10, i32 %7) #10
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %12, align 8
  %13 = tail call i32 @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE11PercolateUpEj(%"class.blink::PriorityQueue"* %5, i32 %7) #10
  %14 = icmp eq i32 %13, %7
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  tail call void @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE13PercolateDownEj(%"class.blink::PriorityQueue"* %5, i32 %7) #10
  br label %16

16:                                               ; preds = %9, %15
  %17 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 6
  %18 = load i8, i8* %17, align 1, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %41

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %38

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %30, align 8
  %32 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %31, i64 0, i32 0, i32 0
  %33 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %32) #10
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  %36 = tail call i64 @_ZNK5blink9TimerBase16NextFireIntervalEv(%"class.blink::TimerBase"* %35) #10
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %25, %29, %34
  store i32 0, i32* %26, align 8
  %39 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %39) #10
  %40 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 391) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %39, i64 0, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #10
  store i32 1, i32* %26, align 8
  br label %41

41:                                               ; preds = %20, %3, %16, %34, %38
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SMILTimeContainer9IsStartedEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SMILTimeContainer25HasPendingSynchronizationEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %7, i64 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %8) #10
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  %12 = tail call i64 @_ZNK5blink9TimerBase16NextFireIntervalEv(%"class.blink::TimerBase"* %11) #10
  %13 = icmp eq i64 %12, 0
  br label %14

14:                                               ; preds = %5, %10, %1
  %15 = phi i1 [ false, %5 ], [ false, %1 ], [ %13, %10 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer14ScheduleWakeUpEN4base9TimeDeltaENS0_20FrameSchedulingStateE(%"class.blink::SMILTimeContainer"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  %6 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 391) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %5, i64 %1, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  store i32 %2, i32* %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SMILTimeContainer13HasAnimationsEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

declare i64 @_ZNK5blink9TimerBase16NextFireIntervalEv(%"class.blink::TimerBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"struct.blink::AnimationTimeline::PhaseAndTime", align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %8 = load i8, i8* %7, align 4
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %98, label %11

11:                                               ; preds = %1
  %12 = and i8 %8, 2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %32

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %16 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 5, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -2
  %24 = icmp ult i32 %23, 18
  br i1 %24, label %25, label %32

25:                                               ; preds = %14
  %26 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %20) #10
  %27 = icmp eq %"class.blink::Settings"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %26, i64 0, i32 17
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %32, label %35

32:                                               ; preds = %14, %11, %28
  %33 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  br label %98

35:                                               ; preds = %25, %28
  %36 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  %37 = bitcast %"struct.blink::AnimationTimeline::PhaseAndTime"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  %38 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %15, align 8
  %39 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 131, i32 0, i32 0
  %44 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %43, align 8
  %45 = bitcast %"class.blink::DocumentTimeline"* %44 to void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)***
  %46 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)**, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %46, i64 28
  %48 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %47, align 8
  call void %48(%"struct.blink::AnimationTimeline::PhaseAndTime"* nonnull sret %5, %"class.blink::DocumentTimeline"* %44) #10
  %49 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  store i64 0, i64* %6, align 8
  %50 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !3
  %52 = icmp eq i8 %51, 0
  %53 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %54 = bitcast i64* %6 to %"class.base::TimeDelta"*
  %55 = select i1 %52, %"class.base::TimeDelta"* %54, %"class.base::TimeDelta"* %53
  %56 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 3, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %60)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  %62 = icmp slt i64 %61, 9223372036854775805
  %63 = select i1 %62, i64 %61, i64 9223372036854775805
  %64 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp slt i64 %65, 9223372036854775806
  br i1 %66, label %67, label %87

67:                                               ; preds = %35
  %68 = add i64 %63, -9223372036854775807
  %69 = icmp ult i64 %68, 2
  br i1 %69, label %70, label %78

70:                                               ; preds = %67
  %71 = add i64 %65, -9223372036854775807
  %72 = icmp ugt i64 %71, 1
  %73 = icmp eq i64 %65, %63
  %74 = or i1 %73, %72
  br i1 %74, label %87, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #10
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #10
  br label %87

78:                                               ; preds = %67
  %79 = icmp slt i64 %63, 0
  %80 = select i1 %79, i64 -9223372036854775808, i64 9223372036854775807
  %81 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %65, i64 %63) #10
  %82 = extractvalue { i64, i1 } %81, 1
  %83 = extractvalue { i64, i1 } %81, 0
  %84 = select i1 %82, i64 %80, i64 %83, !prof !2
  %85 = icmp slt i64 %84, 9223372036854775805
  %86 = select i1 %85, i64 %84, i64 9223372036854775805
  br label %87

87:                                               ; preds = %35, %70, %75, %78
  %88 = phi i64 [ %86, %78 ], [ %65, %35 ], [ -9223372036854775808, %70 ], [ -9223372036854775808, %75 ]
  %89 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  store i64 %88, i64* %3, align 8
  %90 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1
  %91 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %90, i64 0, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp slt i64 %92, %88
  %94 = bitcast i64* %3 to %"class.blink::SMILTime"*
  %95 = select i1 %93, %"class.blink::SMILTime"* %90, %"class.blink::SMILTime"* %94
  %96 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %95, i64 0, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  br label %98

98:                                               ; preds = %1, %87, %32
  %99 = phi i64 [ %34, %32 ], [ %97, %87 ], [ 0, %1 ]
  ret i64 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SMILTimeContainer8IsPausedEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %8 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %12, i64 0, i32 5, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, -2
  %16 = icmp ult i32 %15, 18
  br i1 %16, label %17, label %24

17:                                               ; preds = %6
  %18 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %12) #10
  %19 = icmp eq %"class.blink::Settings"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %18, i64 0, i32 17
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 2
  br label %24

24:                                               ; preds = %20, %17, %6, %1
  %25 = phi i1 [ true, %1 ], [ true, %6 ], [ %23, %20 ], [ false, %17 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink17SMILTimeContainer11GetDocumentEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  ret %"class.blink::Document"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #10
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink17SMILTimeContainer21ClampPresentationTimeENS_8SMILTimeE(%"class.blink::SMILTimeContainer"* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %4, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, %1
  %8 = bitcast i64* %3 to %"class.blink::SMILTime"*
  %9 = select i1 %7, %"class.blink::SMILTime"* %4, %"class.blink::SMILTime"* %8
  %10 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %9, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer17ResetDocumentTimeEv(%"class.blink::SMILTimeContainer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::AnimationTimeline::PhaseAndTime", align 8
  %3 = alloca i64, align 8
  %4 = bitcast %"struct.blink::AnimationTimeline::PhaseAndTime"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 131, i32 0, i32 0
  %12 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %11, align 8
  %13 = bitcast %"class.blink::DocumentTimeline"* %12 to void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)***
  %14 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)**, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %14, i64 28
  %16 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %15, align 8
  call void %16(%"struct.blink::AnimationTimeline::PhaseAndTime"* nonnull sret %2, %"class.blink::DocumentTimeline"* %12) #10
  %17 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  store i64 0, i64* %3, align 8
  %18 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast i64* %3 to %"class.base::TimeDelta"*
  %23 = select i1 %20, %"class.base::TimeDelta"* %22, %"class.base::TimeDelta"* %21
  %24 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %23, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 3, i32 0
  store i64 %25, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer29SynchronizeToDocumentTimelineEv(%"class.blink::SMILTimeContainer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::AnimationTimeline::PhaseAndTime", align 8
  %3 = alloca i64, align 8
  %4 = bitcast %"struct.blink::AnimationTimeline::PhaseAndTime"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 131, i32 0, i32 0
  %12 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %11, align 8
  %13 = bitcast %"class.blink::DocumentTimeline"* %12 to void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)***
  %14 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)**, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %14, i64 28
  %16 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %15, align 8
  call void %16(%"struct.blink::AnimationTimeline::PhaseAndTime"* nonnull sret %2, %"class.blink::DocumentTimeline"* %12) #10
  %17 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  store i64 0, i64* %3, align 8
  %18 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast i64* %3 to %"class.base::TimeDelta"*
  %23 = select i1 %20, %"class.base::TimeDelta"* %22, %"class.base::TimeDelta"* %21
  %24 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %23, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 3, i32 0
  store i64 %25, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink17SMILTimeContainer28LatestUpdatePresentationTimeEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SMILTimeContainer18AnimationsDisabledEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 5, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -2
  %11 = icmp ult i32 %10, 18
  br i1 %11, label %12, label %19

12:                                               ; preds = %1
  %13 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %7) #10
  %14 = icmp eq %"class.blink::Settings"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %13, i64 0, i32 17
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 2
  br label %19

19:                                               ; preds = %15, %12, %1
  %20 = phi i1 [ true, %1 ], [ %18, %15 ], [ false, %12 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SMILTimeContainer17IsTimelineRunningEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 3
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %24

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %8 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %12, i64 0, i32 5, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, -2
  %16 = icmp ult i32 %15, 18
  br i1 %16, label %17, label %24

17:                                               ; preds = %6
  %18 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %12) #10
  %19 = icmp eq %"class.blink::Settings"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %18, i64 0, i32 17
  %22 = load i32, i32* %21, align 8
  %23 = icmp ne i32 %22, 2
  br label %24

24:                                               ; preds = %1, %20, %17, %6
  %25 = phi i1 [ false, %1 ], [ false, %6 ], [ %23, %20 ], [ true, %17 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer5StartEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::AnimationTimeline::PhaseAndTime", align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::SMILTimeContainer::TimingUpdate", align 8
  %6 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 282, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #10
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %13

13:                                               ; preds = %1, %10
  %14 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %15 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 5, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -2
  %23 = icmp ult i32 %22, 18
  br i1 %23, label %24, label %113

24:                                               ; preds = %13
  %25 = call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %19) #10
  %26 = icmp eq %"class.blink::Settings"* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %25, i64 0, i32 17
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 2
  br i1 %30, label %113, label %31

31:                                               ; preds = %24, %27
  %32 = bitcast %"struct.blink::AnimationTimeline::PhaseAndTime"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #10
  %33 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %14, align 8
  %34 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %37, i64 0, i32 131, i32 0, i32 0
  %39 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %38, align 8
  %40 = bitcast %"class.blink::DocumentTimeline"* %39 to void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)***
  %41 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)**, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %41, i64 28
  %43 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %42, align 8
  call void %43(%"struct.blink::AnimationTimeline::PhaseAndTime"* nonnull sret %2, %"class.blink::DocumentTimeline"* %39) #10
  %44 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  store i64 0, i64* %3, align 8
  %45 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !3
  %47 = icmp eq i8 %46, 0
  %48 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = bitcast i64* %3 to %"class.base::TimeDelta"*
  %50 = select i1 %47, %"class.base::TimeDelta"* %49, %"class.base::TimeDelta"* %48
  %51 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %50, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 3, i32 0
  store i64 %52, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #10
  %54 = load i8, i8* %6, align 4
  %55 = or i8 %54, 1
  store i8 %55, i8* %6, align 4
  %56 = bitcast %"class.blink::SMILTimeContainer::TimingUpdate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %56) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 48, i1 false)
  %57 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %5, i64 0, i32 1
  store i32 1, i32* %60, align 8
  %61 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %5, i64 0, i32 2
  store %"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer"** %61, align 8
  %62 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %5, i64 0, i32 3
  %63 = bitcast %"class.blink::HeapHashMap.104"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 20, i1 false) #10
  %64 = call zeroext i1 @_ZN5blink17SMILTimeContainer40UpdateAnimationsAndScheduleFrameIfNeededERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer::TimingUpdate"* nonnull dereferenceable(48) %5)
  %65 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %61, align 8
  %66 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %65, i64 0, i32 5
  %67 = load i8, i8* %66, align 4
  %68 = and i8 %67, 4
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %112, label %70

70:                                               ; preds = %31
  %71 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %5, i64 0, i32 3, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  %75 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %5, i64 0, i32 3, i32 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %75, i64 %78
  br i1 %73, label %112, label %80

80:                                               ; preds = %70
  %81 = icmp eq i32 %77, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %80, %86
  %83 = phi %"struct.WTF::KeyValuePair.110"* [ %87, %86 ], [ %75, %80 ]
  %84 = bitcast %"struct.WTF::KeyValuePair.110"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  switch i64 %85, label %89 [
    i64 -1, label %86
    i64 0, label %86
  ]

86:                                               ; preds = %82, %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %83, i64 1
  %88 = icmp eq %"struct.WTF::KeyValuePair.110"* %87, %79
  br i1 %88, label %112, label %82

89:                                               ; preds = %82, %80
  %90 = phi %"struct.WTF::KeyValuePair.110"* [ %75, %80 ], [ %83, %82 ]
  %91 = icmp eq %"struct.WTF::KeyValuePair.110"* %90, %79
  br i1 %91, label %112, label %92

92:                                               ; preds = %89, %110
  %93 = phi %"struct.WTF::KeyValuePair.110"* [ %104, %110 ], [ %90, %89 ]
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %94, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %93, i64 0, i32 1
  %97 = call i32 @_ZNK5blink14SVGSMILElement17ComputeSeekEventsERKNS_12SMILIntervalE(%"class.blink::SVGSMILElement"* %95, %"struct.blink::SMILInterval"* dereferenceable(16) %96) #10
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %92
  call void @_ZN5blink14SVGSMILElement14DispatchEventsENS0_17EventDispatchMaskE(%"class.blink::SVGSMILElement"* %95, i32 %97) #10
  br label %100

100:                                              ; preds = %99, %92
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %93, i64 1
  %102 = icmp eq %"struct.WTF::KeyValuePair.110"* %101, %79
  br i1 %102, label %112, label %103

103:                                              ; preds = %100, %107
  %104 = phi %"struct.WTF::KeyValuePair.110"* [ %108, %107 ], [ %101, %100 ]
  %105 = bitcast %"struct.WTF::KeyValuePair.110"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  switch i64 %106, label %110 [
    i64 -1, label %107
    i64 0, label %107
  ]

107:                                              ; preds = %103, %103
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %104, i64 1
  %109 = icmp eq %"struct.WTF::KeyValuePair.110"* %108, %79
  br i1 %109, label %112, label %103

110:                                              ; preds = %103
  %111 = icmp eq %"struct.WTF::KeyValuePair.110"* %104, %79
  br i1 %111, label %112, label %92

112:                                              ; preds = %86, %100, %110, %107, %31, %70, %89
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %56) #10
  br label %113

113:                                              ; preds = %13, %27, %112
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17SMILTimeContainer40UpdateAnimationsAndScheduleFrameIfNeededERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer::TimingUpdate"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SMILTime", align 8
  %4 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  tail call void @_ZN5blink17SMILTimeContainer19UpdateTimedElementsERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer::TimingUpdate"* dereferenceable(48) %1)
  %8 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN5blink17SMILTimeContainer17ApplyTimedEffectsENS_8SMILTimeE(%"class.blink::SMILTimeContainer"* %0, i64 %9)
  %10 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 3
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %73

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %16 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 5, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -2
  %24 = icmp ult i32 %23, 18
  br i1 %24, label %25, label %73

25:                                               ; preds = %14
  %26 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %20) #10
  %27 = icmp eq %"class.blink::Settings"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %26, i64 0, i32 17
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %73, label %32

32:                                               ; preds = %28, %25
  %33 = bitcast %"class.blink::SMILTime"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %3, i64 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %34, align 8
  %35 = load i64, i64* %8, align 8
  %36 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %35
  br i1 %38, label %58, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %40, align 8
  %42 = load i32, i32* %4, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %41, i64 %43
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %39, %46
  %47 = phi i64 [ %53, %46 ], [ 9223372036854775807, %39 ]
  %48 = phi %"struct.std::__1::pair"* [ %55, %46 ], [ %41, %39 ]
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %49, align 8
  %51 = tail call i64 @_ZNK5blink14SVGSMILElement16NextProgressTimeENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %50, i64 %35) #10
  %52 = icmp slt i64 %51, %47
  %53 = select i1 %52, i64 %51, i64 %47
  %54 = icmp sle i64 %53, %35
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 1
  %56 = icmp eq %"struct.std::__1::pair"* %55, %44
  %57 = or i1 %56, %54
  br i1 %57, label %59, label %46

58:                                               ; preds = %32, %39
  store i64 9223372036854775807, i64* %34, align 8
  br label %71

59:                                               ; preds = %46
  store i64 %53, i64* %34, align 8
  %60 = icmp slt i64 %53, 9223372036854775806
  br i1 %60, label %61, label %71

61:                                               ; preds = %59
  %62 = load i64, i64* %8, align 8
  %63 = icmp slt i64 %62, 9223372036854775806
  br i1 %63, label %64, label %69

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %3, i64 0, i32 0
  %66 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %65, i64 %62) #10
  %67 = icmp slt i64 %66, 9223372036854775805
  %68 = select i1 %67, i64 %66, i64 9223372036854775805
  br label %69

69:                                               ; preds = %61, %64
  %70 = phi i64 [ %68, %64 ], [ %62, %61 ]
  call void @_ZN5blink17SMILTimeContainer22ScheduleAnimationFrameEN4base9TimeDeltaE(%"class.blink::SMILTimeContainer"* %0, i64 %70)
  br label %71

71:                                               ; preds = %58, %59, %69
  %72 = phi i1 [ true, %69 ], [ false, %59 ], [ false, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  br label %73

73:                                               ; preds = %28, %14, %7, %71, %2
  %74 = phi i1 [ false, %2 ], [ %72, %71 ], [ false, %28 ], [ false, %7 ], [ false, %14 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer5PauseEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %5 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 5, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -2
  %13 = icmp ult i32 %12, 18
  br i1 %13, label %14, label %75

14:                                               ; preds = %1
  %15 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %9) #10
  %16 = icmp eq %"class.blink::Settings"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %15, i64 0, i32 17
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %75, label %21

21:                                               ; preds = %14, %17
  %22 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %23 = load i8, i8* %22, align 4
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %72, label %26

26:                                               ; preds = %21
  %27 = tail call i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"* %0)
  %28 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 9223372036854775804, i64* %28, align 8
  %29 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  store i64 %27, i64* %2, align 8
  %30 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %30, i64 0, i32 0, i32 0
  %32 = icmp sgt i64 %27, 9223372036854775804
  %33 = bitcast i64* %2 to %"class.blink::SMILTime"*
  %34 = select i1 %32, %"class.blink::SMILTime"* %30, %"class.blink::SMILTime"* %33
  %35 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %34, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  %37 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %4, align 8
  %39 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %42) #10
  %44 = icmp eq %"class.blink::Settings"* %43, null
  br i1 %44, label %68, label %45

45:                                               ; preds = %26
  %46 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %43, i64 0, i32 17
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %68

49:                                               ; preds = %45
  %50 = load i64, i64* %37, align 8
  %51 = icmp slt i64 %50, 9223372036854775806
  br i1 %51, label %52, label %59

52:                                               ; preds = %49
  %53 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %50, i64 3000000) #10
  %54 = extractvalue { i64, i1 } %53, 1
  %55 = extractvalue { i64, i1 } %53, 0
  %56 = select i1 %54, i64 9223372036854775807, i64 %55, !prof !2
  %57 = icmp slt i64 %56, 9223372036854775805
  %58 = select i1 %57, i64 %56, i64 9223372036854775805
  br label %59

59:                                               ; preds = %52, %49
  %60 = phi i64 [ %58, %52 ], [ %50, %49 ]
  %61 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  store i64 %60, i64* %3, align 8
  %62 = load i64, i64* %31, align 8
  %63 = icmp slt i64 %62, %60
  %64 = bitcast i64* %3 to %"class.blink::SMILTime"*
  %65 = select i1 %63, %"class.blink::SMILTime"* %30, %"class.blink::SMILTime"* %64
  %66 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %65, i64 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  store i64 %67, i64* %28, align 8
  br label %68

68:                                               ; preds = %26, %45, %59
  %69 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  store i32 0, i32* %69, align 8
  %70 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %70) #10
  %71 = load i8, i8* %22, align 4
  br label %72

72:                                               ; preds = %21, %68
  %73 = phi i8 [ %23, %21 ], [ %71, %68 ]
  %74 = or i8 %73, 2
  store i8 %74, i8* %22, align 4
  br label %75

75:                                               ; preds = %1, %17, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer7UnpauseEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::AnimationTimeline::PhaseAndTime", align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 5, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -2
  %14 = icmp ult i32 %13, 18
  br i1 %14, label %15, label %54

15:                                               ; preds = %1
  %16 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %10) #10
  %17 = icmp eq %"class.blink::Settings"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %16, i64 0, i32 17
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %54, label %22

22:                                               ; preds = %15, %18
  %23 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %24 = load i8, i8* %23, align 4
  %25 = and i8 %24, -3
  store i8 %25, i8* %23, align 4
  %26 = and i8 %24, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %54, label %28

28:                                               ; preds = %22
  %29 = bitcast %"struct.blink::AnimationTimeline::PhaseAndTime"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %5, align 8
  %31 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %34, i64 0, i32 131, i32 0, i32 0
  %36 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %35, align 8
  %37 = bitcast %"class.blink::DocumentTimeline"* %36 to void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)***
  %38 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)**, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %38, i64 28
  %40 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %39, align 8
  call void %40(%"struct.blink::AnimationTimeline::PhaseAndTime"* nonnull sret %2, %"class.blink::DocumentTimeline"* %36) #10
  %41 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  store i64 0, i64* %3, align 8
  %42 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !3
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = bitcast i64* %3 to %"class.base::TimeDelta"*
  %47 = select i1 %44, %"class.base::TimeDelta"* %46, %"class.base::TimeDelta"* %45
  %48 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %47, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 3, i32 0
  store i64 %49, i64* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  %51 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  %52 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 391) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %51, i64 0, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #10
  %53 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  store i32 1, i32* %53, align 8
  br label %54

54:                                               ; preds = %22, %1, %18, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17SMILTimeContainer15AnimationPolicyEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %7) #10
  %9 = icmp eq %"class.blink::Settings"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %8, i64 0, i32 17
  %12 = load i32, i32* %11, align 8
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer10SetElapsedENS_8SMILTimeE(%"class.blink::SMILTimeContainer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::AnimationTimeline::PhaseAndTime", align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.blink::SMILTimeContainer::TimingUpdate", align 8
  %8 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 9223372036854775804, i64* %8, align 8
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store i64 %1, i64* %5, align 8
  %10 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %10, i64 0, i32 0, i32 0
  %12 = icmp sgt i64 %1, 9223372036854775804
  %13 = bitcast i64* %5 to %"class.blink::SMILTime"*
  %14 = select i1 %12, %"class.blink::SMILTime"* %10, %"class.blink::SMILTime"* %13
  %15 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %14, i64 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %17 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %19 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %23) #10
  %25 = icmp eq %"class.blink::Settings"* %24, null
  br i1 %25, label %49, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %24, i64 0, i32 17
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %49

30:                                               ; preds = %26
  %31 = load i64, i64* %17, align 8
  %32 = icmp slt i64 %31, 9223372036854775806
  br i1 %32, label %33, label %40

33:                                               ; preds = %30
  %34 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %31, i64 3000000) #10
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  %37 = select i1 %35, i64 9223372036854775807, i64 %36, !prof !2
  %38 = icmp slt i64 %37, 9223372036854775805
  %39 = select i1 %38, i64 %37, i64 9223372036854775805
  br label %40

40:                                               ; preds = %33, %30
  %41 = phi i64 [ %39, %33 ], [ %31, %30 ]
  %42 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  store i64 %41, i64* %6, align 8
  %43 = load i64, i64* %11, align 8
  %44 = icmp slt i64 %43, %41
  %45 = bitcast i64* %6 to %"class.blink::SMILTime"*
  %46 = select i1 %44, %"class.blink::SMILTime"* %10, %"class.blink::SMILTime"* %45
  %47 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %46, i64 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i64 %48, i64* %8, align 8
  br label %49

49:                                               ; preds = %2, %26, %40
  %50 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %18, align 8
  %51 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %54, i64 0, i32 5, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, -2
  %58 = icmp ult i32 %57, 18
  br i1 %58, label %59, label %174

59:                                               ; preds = %49
  %60 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %54) #10
  %61 = icmp eq %"class.blink::Settings"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %60, i64 0, i32 17
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 2
  br i1 %65, label %174, label %66

66:                                               ; preds = %59, %62
  %67 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %68 = load i8, i8* %67, align 4
  %69 = and i8 %68, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %174, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  store i32 0, i32* %72, align 8
  %73 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %73) #10
  %74 = load i8, i8* %67, align 4
  %75 = and i8 %74, 2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %117

77:                                               ; preds = %71
  %78 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %18, align 8
  %79 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::Document"*, %"class.blink::Document"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %82, i64 0, i32 5, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, -2
  %86 = icmp ult i32 %85, 18
  br i1 %86, label %87, label %117

87:                                               ; preds = %77
  %88 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %82) #10
  %89 = icmp eq %"class.blink::Settings"* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %88, i64 0, i32 17
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 2
  br i1 %93, label %117, label %94

94:                                               ; preds = %87, %90
  %95 = bitcast %"struct.blink::AnimationTimeline::PhaseAndTime"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #10
  %96 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %18, align 8
  %97 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::Document"*, %"class.blink::Document"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %100, i64 0, i32 131, i32 0, i32 0
  %102 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %101, align 8
  %103 = bitcast %"class.blink::DocumentTimeline"* %102 to void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)***
  %104 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)**, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %104, i64 28
  %106 = load void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)*, void (%"struct.blink::AnimationTimeline::PhaseAndTime"*, %"class.blink::DocumentTimeline"*)** %105, align 8
  call void %106(%"struct.blink::AnimationTimeline::PhaseAndTime"* nonnull sret %3, %"class.blink::DocumentTimeline"* %102) #10
  %107 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107)
  store i64 0, i64* %4, align 8
  %108 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 8, !range !3
  %110 = icmp eq i8 %109, 0
  %111 = getelementptr inbounds %"struct.blink::AnimationTimeline::PhaseAndTime", %"struct.blink::AnimationTimeline::PhaseAndTime"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %112 = bitcast i64* %4 to %"class.base::TimeDelta"*
  %113 = select i1 %110, %"class.base::TimeDelta"* %112, %"class.base::TimeDelta"* %111
  %114 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %113, i64 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 3, i32 0
  store i64 %115, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #10
  br label %117

117:                                              ; preds = %77, %71, %94, %90
  %118 = bitcast %"class.blink::SMILTimeContainer::TimingUpdate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %118) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 48, i1 false)
  %119 = load i64, i64* %17, align 8
  %120 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %7, i64 0, i32 1
  store i32 1, i32* %121, align 8
  %122 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %7, i64 0, i32 2
  store %"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer"** %122, align 8
  %123 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %7, i64 0, i32 3
  %124 = bitcast %"class.blink::HeapHashMap.104"* %123 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 20, i1 false) #10
  call void @_ZN5blink17SMILTimeContainer11PrepareSeekERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer::TimingUpdate"* nonnull dereferenceable(48) %7)
  %125 = call zeroext i1 @_ZN5blink17SMILTimeContainer40UpdateAnimationsAndScheduleFrameIfNeededERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer::TimingUpdate"* nonnull dereferenceable(48) %7)
  %126 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %122, align 8
  %127 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %126, i64 0, i32 5
  %128 = load i8, i8* %127, align 4
  %129 = and i8 %128, 4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %173, label %131

131:                                              ; preds = %117
  %132 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %7, i64 0, i32 3, i32 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %7, i64 0, i32 3, i32 0, i32 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %136, i64 %139
  br i1 %134, label %173, label %141

141:                                              ; preds = %131
  %142 = icmp eq i32 %138, 0
  br i1 %142, label %150, label %143

143:                                              ; preds = %141, %147
  %144 = phi %"struct.WTF::KeyValuePair.110"* [ %148, %147 ], [ %136, %141 ]
  %145 = bitcast %"struct.WTF::KeyValuePair.110"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  switch i64 %146, label %150 [
    i64 -1, label %147
    i64 0, label %147
  ]

147:                                              ; preds = %143, %143
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %144, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair.110"* %148, %140
  br i1 %149, label %173, label %143

150:                                              ; preds = %143, %141
  %151 = phi %"struct.WTF::KeyValuePair.110"* [ %136, %141 ], [ %144, %143 ]
  %152 = icmp eq %"struct.WTF::KeyValuePair.110"* %151, %140
  br i1 %152, label %173, label %153

153:                                              ; preds = %150, %171
  %154 = phi %"struct.WTF::KeyValuePair.110"* [ %165, %171 ], [ %151, %150 ]
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %155, align 8
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %154, i64 0, i32 1
  %158 = call i32 @_ZNK5blink14SVGSMILElement17ComputeSeekEventsERKNS_12SMILIntervalE(%"class.blink::SVGSMILElement"* %156, %"struct.blink::SMILInterval"* dereferenceable(16) %157) #10
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %161, label %160

160:                                              ; preds = %153
  call void @_ZN5blink14SVGSMILElement14DispatchEventsENS0_17EventDispatchMaskE(%"class.blink::SVGSMILElement"* %156, i32 %158) #10
  br label %161

161:                                              ; preds = %160, %153
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %154, i64 1
  %163 = icmp eq %"struct.WTF::KeyValuePair.110"* %162, %140
  br i1 %163, label %173, label %164

164:                                              ; preds = %161, %168
  %165 = phi %"struct.WTF::KeyValuePair.110"* [ %169, %168 ], [ %162, %161 ]
  %166 = bitcast %"struct.WTF::KeyValuePair.110"* %165 to i64*
  %167 = load i64, i64* %166, align 8
  switch i64 %167, label %171 [
    i64 -1, label %168
    i64 0, label %168
  ]

168:                                              ; preds = %164, %164
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %165, i64 1
  %170 = icmp eq %"struct.WTF::KeyValuePair.110"* %169, %140
  br i1 %170, label %173, label %164

171:                                              ; preds = %164
  %172 = icmp eq %"struct.WTF::KeyValuePair.110"* %165, %140
  br i1 %172, label %173, label %153

173:                                              ; preds = %147, %161, %171, %168, %117, %131, %150
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %118) #10
  br label %174

174:                                              ; preds = %66, %49, %62, %173
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer11PrepareSeekERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"* nocapture, %"class.blink::SMILTimeContainer::TimingUpdate"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGSMILElement"*, align 8
  %4 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 2
  %5 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %5, i64 0, i32 5
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %45, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::SVGSMILElement"** %3 to i8*
  %20 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 3, i32 0, i32 0
  br label %21

21:                                               ; preds = %41, %18
  %22 = phi %"class.blink::SMILTimeContainer"* [ %5, %18 ], [ %44, %41 ]
  %23 = phi %"struct.std::__1::pair"* [ %12, %18 ], [ %42, %41 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %22, i64 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = call dereferenceable(16) %"struct.blink::SMILInterval"* @_ZNK5blink14SVGSMILElement17GetActiveIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %25, i64 %27) #10
  %29 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %4, align 8
  %30 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %28, i64 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp sgt i64 %33, %31
  br i1 %34, label %41, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %28, i64 0, i32 1, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp sgt i64 %37, %31
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  store %"class.blink::SVGSMILElement"* %25, %"class.blink::SVGSMILElement"** %3, align 8
  %40 = call { %"struct.WTF::KeyValuePair.110"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.108"* %20, %"class.blink::SVGSMILElement"** nonnull dereferenceable(8) %3, %"struct.blink::SMILInterval"* dereferenceable(16) %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  br label %41

41:                                               ; preds = %21, %35, %39
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 1
  %43 = icmp eq %"struct.std::__1::pair"* %42, %16
  %44 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %4, align 8
  br i1 %43, label %45, label %21

45:                                               ; preds = %41, %10, %2
  %46 = phi %"class.blink::SMILTimeContainer"* [ %5, %10 ], [ %5, %2 ], [ %44, %41 ]
  %47 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp slt i64 %50, %48
  br i1 %51, label %52, label %106

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 6
  %54 = load i8, i8* %53, align 1, !range !3
  store i8 1, i8* %53, align 1
  %55 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 %59
  %61 = icmp eq i32 %58, 0
  br i1 %61, label %103, label %97

62:                                               ; preds = %97
  %63 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %55, align 8
  %64 = load i32, i32* %57, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %63, i64 %65
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %103, label %68

68:                                               ; preds = %62
  %69 = shl nuw nsw i64 %65, 4
  %70 = add nsw i64 %69, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 7
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %68, %75
  %76 = phi %"struct.std::__1::pair"* [ %79, %75 ], [ %63, %68 ]
  %77 = phi i64 [ %80, %75 ], [ %73, %68 ]
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 0, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 1
  %80 = add i64 %77, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %75, !llvm.loop !4

82:                                               ; preds = %75, %68
  %83 = phi %"struct.std::__1::pair"* [ %63, %68 ], [ %79, %75 ]
  %84 = icmp ult i64 %70, 112
  br i1 %84, label %103, label %85

85:                                               ; preds = %82, %85
  %86 = phi %"struct.std::__1::pair"* [ %95, %85 ], [ %83, %82 ]
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 0, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 1, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 2, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 3, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 4, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 5, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 6, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 7, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 8
  %96 = icmp eq %"struct.std::__1::pair"* %95, %66
  br i1 %96, label %103, label %85

97:                                               ; preds = %52, %97
  %98 = phi %"struct.std::__1::pair"* [ %101, %97 ], [ %56, %52 ]
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 0, i32 1, i32 0, i32 0
  %100 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %99, align 8
  call void @_ZN5blink14SVGSMILElement5ResetEv(%"class.blink::SVGSMILElement"* %100) #10
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 1
  %102 = icmp eq %"struct.std::__1::pair"* %101, %60
  br i1 %102, label %62, label %97

103:                                              ; preds = %82, %85, %52, %62
  store i8 %54, i8* %53, align 1
  %104 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %4, align 8
  %105 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %104, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %105, align 8
  br label %106

106:                                              ; preds = %103, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer22ScheduleAnimationFrameEN4base9TimeDeltaE(%"class.blink::SMILTimeContainer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = load double, double* @_ZN5blink16DocumentTimeline13kMinimumDelayE, align 8
  %7 = fmul double %6, 1.000000e+06
  %8 = fcmp ult double %7, 0xC3E0000000000000
  %9 = fcmp ugt double %7, 0x43DFFFFFFFFFFFFF
  %10 = fcmp ogt double %7, 0xC3E0000000000000
  %11 = select i1 %10, double %7, double 0xC3E0000000000000
  %12 = fptosi double %11 to i64
  %13 = select i1 %8, i64 0, i64 9223372036854775807
  %14 = select i1 %9, i64 %13, i64 %12
  %15 = icmp sgt i64 %14, %1
  br i1 %15, label %16, label %32

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %18 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %22) #10
  %24 = icmp eq %"class.blink::LocalFrameView"* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %16
  %26 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %17, align 8
  %27 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %30) #10
  tail call void @_ZN5blink14LocalFrameView17ScheduleAnimationEN4base9TimeDeltaE(%"class.blink::LocalFrameView"* %31, i64 0) #10
  br label %36

32:                                               ; preds = %2
  %33 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %14)
  %34 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  %35 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 391) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %34, i64 %33, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #10
  br label %36

36:                                               ; preds = %32, %25
  %37 = phi i32 [ 3, %25 ], [ 2, %32 ]
  %38 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  store i32 %37, i32* %38, align 8
  br label %39

39:                                               ; preds = %36, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer18ServiceOnNextFrameEv(%"class.blink::SMILTimeContainer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %7) #10
  %9 = icmp eq %"class.blink::LocalFrameView"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %2, align 8
  %12 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %15) #10
  tail call void @_ZN5blink14LocalFrameView17ScheduleAnimationEN4base9TimeDeltaE(%"class.blink::LocalFrameView"* %16, i64 0) #10
  %17 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  store i32 3, i32* %17, align 8
  br label %18

18:                                               ; preds = %1, %10
  ret void
}

declare void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"*) unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer26UpdateDocumentOrderIndexesEv(%"class.blink::SMILTimeContainer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = icmp eq %"class.blink::SVGSVGElement"* %3, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.blink::SVGSMILElement"* @_ZN5blink9TraversalINS_14SVGSMILElementEE11FirstWithinERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %4) #10
  %8 = icmp eq %"class.blink::SVGSMILElement"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %13, %1, %6
  %10 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, -9
  store i8 %12, i8* %10, align 4
  ret void

13:                                               ; preds = %6, %13
  %14 = phi i32 [ %16, %13 ], [ 0, %6 ]
  %15 = phi %"class.blink::SVGSMILElement"* [ %19, %13 ], [ %7, %6 ]
  %16 = add i32 %14, 1
  %17 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %15, i64 0, i32 20
  store i32 %14, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = tail call %"class.blink::SVGSMILElement"* @_ZN5blink9TraversalINS_14SVGSMILElementEE4NextERKNS_13ContainerNodeEPKNS_4NodeE(%"class.blink::ContainerNode"* dereferenceable(80) %18, %"class.blink::Node"* %4) #10
  %20 = icmp eq %"class.blink::SVGSMILElement"* %19, null
  br i1 %20, label %9, label %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(304) %"class.blink::SVGSVGElement"* @_ZNK5blink17SMILTimeContainer15OwnerSVGElementEv(%"class.blink::SMILTimeContainer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %2, align 8
  ret %"class.blink::SVGSVGElement"* %3
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink14LocalFrameView17ScheduleAnimationEN4base9TimeDeltaE(%"class.blink::LocalFrameView"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17SMILTimeContainer17ServiceAnimationsEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SMILTimeContainer::TimingUpdate", align 8
  %3 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %75 [
    i32 1, label %5
    i32 3, label %7
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %6) #10
  store i32 3, i32* %3, align 8
  br label %7

7:                                                ; preds = %1, %5
  store i32 0, i32* %3, align 8
  %8 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %9 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %13, i64 0, i32 5, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, -2
  %17 = icmp ult i32 %16, 18
  br i1 %17, label %18, label %75

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::SMILTimeContainer::TimingUpdate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  %20 = tail call i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"* %0)
  %21 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %2, i64 0, i32 0, i32 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %2, i64 0, i32 1
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %2, i64 0, i32 2
  store %"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %2, i64 0, i32 3
  %25 = bitcast %"class.blink::HeapHashMap.104"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 20, i1 false) #10
  %26 = call zeroext i1 @_ZN5blink17SMILTimeContainer40UpdateAnimationsAndScheduleFrameIfNeededERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer::TimingUpdate"* nonnull dereferenceable(48) %2)
  %27 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %23, align 8
  %28 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %27, i64 0, i32 5
  %29 = load i8, i8* %28, align 4
  %30 = and i8 %29, 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %74, label %32

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %2, i64 0, i32 3, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %2, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %2, i64 0, i32 3, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %37, i64 %40
  br i1 %35, label %74, label %42

42:                                               ; preds = %32
  %43 = icmp eq i32 %39, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %42, %48
  %45 = phi %"struct.WTF::KeyValuePair.110"* [ %49, %48 ], [ %37, %42 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.110"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  switch i64 %47, label %51 [
    i64 -1, label %48
    i64 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %45, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.110"* %49, %41
  br i1 %50, label %74, label %44

51:                                               ; preds = %44, %42
  %52 = phi %"struct.WTF::KeyValuePair.110"* [ %37, %42 ], [ %45, %44 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair.110"* %52, %41
  br i1 %53, label %74, label %54

54:                                               ; preds = %51, %72
  %55 = phi %"struct.WTF::KeyValuePair.110"* [ %66, %72 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %56, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %55, i64 0, i32 1
  %59 = call i32 @_ZNK5blink14SVGSMILElement17ComputeSeekEventsERKNS_12SMILIntervalE(%"class.blink::SVGSMILElement"* %57, %"struct.blink::SMILInterval"* dereferenceable(16) %58) #10
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %54
  call void @_ZN5blink14SVGSMILElement14DispatchEventsENS0_17EventDispatchMaskE(%"class.blink::SVGSMILElement"* %57, i32 %59) #10
  br label %62

62:                                               ; preds = %61, %54
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %55, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair.110"* %63, %41
  br i1 %64, label %74, label %65

65:                                               ; preds = %62, %69
  %66 = phi %"struct.WTF::KeyValuePair.110"* [ %70, %69 ], [ %63, %62 ]
  %67 = bitcast %"struct.WTF::KeyValuePair.110"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %72 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %65, %65
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %66, i64 1
  %71 = icmp eq %"struct.WTF::KeyValuePair.110"* %70, %41
  br i1 %71, label %74, label %65

72:                                               ; preds = %65
  %73 = icmp eq %"struct.WTF::KeyValuePair.110"* %66, %41
  br i1 %73, label %74, label %54

74:                                               ; preds = %48, %62, %72, %69, %18, %32, %51
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #10
  br label %75

75:                                               ; preds = %1, %7, %74
  %76 = phi i1 [ %26, %74 ], [ false, %7 ], [ false, %1 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer19UpdateTimedElementsERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer::TimingUpdate"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17SMILTimeContainer15UpdateIntervalsERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer::TimingUpdate"* dereferenceable(48) %1)
  %3 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9
  %4 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %3, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %4, i32 0) #10
  %6 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 2
  %7 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %7, i64 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %11, %9
  br i1 %12, label %13, label %29

13:                                               ; preds = %2, %22
  %14 = phi i64* [ %26, %22 ], [ %10, %2 ]
  %15 = phi i64 [ %25, %22 ], [ %9, %2 ]
  %16 = phi %"struct.std::__1::pair"* [ %23, %22 ], [ %5, %2 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp slt i64 %15, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  store i64 %15, i64* %14, align 8
  %21 = load i64, i64* %8, align 8
  br label %29

22:                                               ; preds = %13
  store i64 %18, i64* %14, align 8
  tail call void @_ZN5blink17SMILTimeContainer15UpdateIntervalsERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"* %0, %"class.blink::SMILTimeContainer::TimingUpdate"* dereferenceable(48) %1)
  %23 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %4, i32 0) #10
  %24 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %6, align 8
  %25 = load i64, i64* %8, align 8
  %26 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %24, i64 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %27, %25
  br i1 %28, label %13, label %29

29:                                               ; preds = %22, %2, %20
  %30 = phi i64 [ %9, %2 ], [ %21, %20 ], [ %25, %22 ]
  %31 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %35, i64 %38
  br i1 %33, label %52, label %40

40:                                               ; preds = %29
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %40, %46
  %43 = phi %"struct.WTF::KeyValuePair.110"* [ %47, %46 ], [ %35, %40 ]
  %44 = bitcast %"struct.WTF::KeyValuePair.110"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %49 [
    i64 -1, label %46
    i64 0, label %46
  ]

46:                                               ; preds = %42, %42
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %43, i64 1
  %48 = icmp eq %"struct.WTF::KeyValuePair.110"* %47, %39
  br i1 %48, label %52, label %42

49:                                               ; preds = %42, %40
  %50 = phi %"struct.WTF::KeyValuePair.110"* [ %35, %40 ], [ %43, %42 ]
  %51 = icmp eq %"struct.WTF::KeyValuePair.110"* %50, %39
  br i1 %51, label %52, label %53

52:                                               ; preds = %46, %66, %76, %73, %29, %49
  ret void

53:                                               ; preds = %49, %76
  %54 = phi %"struct.WTF::KeyValuePair.110"* [ %70, %76 ], [ %50, %49 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %55, align 8
  %57 = tail call i64 @_ZNK5blink14SVGSMILElement23ComputeNextIntervalTimeENS_8SMILTimeENS0_14IncludeRepeatsE(%"class.blink::SVGSMILElement"* %56, i64 %30, i32 0) #10
  %58 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %55, align 8
  %59 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %58, i64 0, i32 21
  %60 = load i32, i32* %59, align 4
  %61 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %4, i32 %60) #10
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 0, i32 0, i32 0
  store i64 %57, i64* %62, align 8
  %63 = tail call i32 @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE11PercolateUpEj(%"class.blink::PriorityQueue"* %3, i32 %60) #10
  %64 = icmp eq i32 %63, %60
  br i1 %64, label %65, label %66

65:                                               ; preds = %53
  tail call void @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE13PercolateDownEj(%"class.blink::PriorityQueue"* %3, i32 %60) #10
  br label %66

66:                                               ; preds = %53, %65
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %54, i64 1
  %68 = icmp eq %"struct.WTF::KeyValuePair.110"* %67, %39
  br i1 %68, label %52, label %69

69:                                               ; preds = %66, %73
  %70 = phi %"struct.WTF::KeyValuePair.110"* [ %74, %73 ], [ %67, %66 ]
  %71 = bitcast %"struct.WTF::KeyValuePair.110"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  switch i64 %72, label %76 [
    i64 -1, label %73
    i64 0, label %73
  ]

73:                                               ; preds = %69, %69
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %70, i64 1
  %75 = icmp eq %"struct.WTF::KeyValuePair.110"* %74, %39
  br i1 %75, label %52, label %69

76:                                               ; preds = %69
  %77 = icmp eq %"struct.WTF::KeyValuePair.110"* %70, %39
  br i1 %77, label %52, label %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer17ApplyTimedEffectsENS_8SMILTimeE(%"class.blink::SMILTimeContainer"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %9 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = icmp eq %"class.blink::SVGSVGElement"* %9, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %7
  %13 = tail call %"class.blink::SVGSMILElement"* @_ZN5blink9TraversalINS_14SVGSMILElementEE11FirstWithinERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %10) #10
  %14 = icmp eq %"class.blink::SVGSMILElement"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %12, %15
  %16 = phi i32 [ %18, %15 ], [ 0, %12 ]
  %17 = phi %"class.blink::SVGSMILElement"* [ %21, %15 ], [ %13, %12 ]
  %18 = add i32 %16, 1
  %19 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %17, i64 0, i32 20
  store i32 %16, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = tail call %"class.blink::SVGSMILElement"* @_ZN5blink9TraversalINS_14SVGSMILElementEE4NextERKNS_13ContainerNodeEPKNS_4NodeE(%"class.blink::ContainerNode"* dereferenceable(80) %20, %"class.blink::Node"* %10) #10
  %22 = icmp eq %"class.blink::SVGSMILElement"* %21, null
  br i1 %22, label %23, label %15

23:                                               ; preds = %15, %7, %12
  %24 = load i8, i8* %3, align 4
  %25 = and i8 %24, -9
  store i8 %25, i8* %3, align 4
  br label %26

26:                                               ; preds = %2, %23
  %27 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 %34
  br i1 %29, label %90, label %36

36:                                               ; preds = %26
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %36, %42
  %39 = phi %"struct.WTF::KeyValuePair"* [ %43, %42 ], [ %31, %36 ]
  %40 = bitcast %"struct.WTF::KeyValuePair"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  switch i64 %41, label %45 [
    i64 -1, label %42
    i64 0, label %42
  ]

42:                                               ; preds = %38, %38
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair"* %43, %35
  br i1 %44, label %90, label %38

45:                                               ; preds = %38, %36
  %46 = phi %"struct.WTF::KeyValuePair"* [ %31, %36 ], [ %39, %38 ]
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %46, %35
  br i1 %47, label %90, label %51

48:                                               ; preds = %61, %72, %69
  %49 = and i8 %62, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %90, label %74

51:                                               ; preds = %45, %72
  %52 = phi i8 [ %62, %72 ], [ 0, %45 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ %66, %72 ], [ %46, %45 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %54, align 8
  %56 = tail call %"class.blink::ElementSMILAnimations"* @_ZNK5blink10SVGElement17GetSMILAnimationsEv(%"class.blink::SVGElement"* %55) #10
  %57 = icmp eq %"class.blink::ElementSMILAnimations"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  %59 = tail call zeroext i1 @_ZN5blink21ElementSMILAnimations5ApplyENS_8SMILTimeE(%"class.blink::ElementSMILAnimations"* nonnull %56, i64 %1) #10
  %60 = select i1 %59, i8 1, i8 %52
  br label %61

61:                                               ; preds = %58, %51
  %62 = phi i8 [ %52, %51 ], [ %60, %58 ]
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %63, %35
  br i1 %64, label %48, label %65

65:                                               ; preds = %61, %69
  %66 = phi %"struct.WTF::KeyValuePair"* [ %70, %69 ], [ %63, %61 ]
  %67 = bitcast %"struct.WTF::KeyValuePair"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %72 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %65, %65
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 1
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %70, %35
  br i1 %71, label %48, label %65

72:                                               ; preds = %65
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %66, %35
  br i1 %73, label %48, label %51

74:                                               ; preds = %48
  %75 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10, i32 0, i32 0
  %76 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %78 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::Document"*, %"class.blink::Document"** %79, align 8
  %81 = icmp eq %"class.blink::Document"* %80, null
  %82 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %80, i64 0, i32 2
  %83 = icmp eq %"class.blink::UseCounter"* %82, null
  %84 = or i1 %81, %83
  br i1 %84, label %90, label %85

85:                                               ; preds = %74
  %86 = bitcast %"class.blink::UseCounter"* %82 to void (%"class.blink::UseCounter"*, i32)***
  %87 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %87, i64 3
  %89 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %88, align 8
  tail call void %89(%"class.blink::UseCounter"* nonnull %82, i32 1477) #10
  br label %90

90:                                               ; preds = %42, %26, %45, %85, %74, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink17SMILTimeContainer16NextProgressTimeENS_8SMILTimeE(%"class.blink::SMILTimeContainer"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %6, %14
  %15 = phi i64 [ %21, %14 ], [ 9223372036854775807, %6 ]
  %16 = phi %"struct.std::__1::pair"* [ %23, %14 ], [ %8, %6 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %17, align 8
  %19 = tail call i64 @_ZNK5blink14SVGSMILElement16NextProgressTimeENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %18, i64 %1) #10
  %20 = icmp slt i64 %19, %15
  %21 = select i1 %20, i64 %19, i64 %15
  %22 = icmp sle i64 %21, %1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %24 = icmp eq %"struct.std::__1::pair"* %23, %12
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %14

26:                                               ; preds = %14, %6, %2
  %27 = phi i64 [ 9223372036854775807, %2 ], [ 9223372036854775807, %6 ], [ %21, %14 ]
  ret i64 %27
}

declare i64 @_ZNK5blink14SVGSMILElement16NextProgressTimeENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"struct.blink::SMILInterval"* @_ZNK5blink14SVGSMILElement17GetActiveIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer14ResetIntervalsEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 1, !range !3
  store i8 1, i8* %2, align 1
  %4 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %46, label %50

11:                                               ; preds = %50
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %13 = load i32, i32* %6, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %11
  %18 = shl nuw nsw i64 %14, 4
  %19 = add nsw i64 %18, -16
  %20 = lshr exact i64 %19, 4
  %21 = add nuw nsw i64 %20, 1
  %22 = and i64 %21, 7
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %17, %24
  %25 = phi %"struct.std::__1::pair"* [ %28, %24 ], [ %12, %17 ]
  %26 = phi i64 [ %29, %24 ], [ %22, %17 ]
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %29 = add i64 %26, -1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %24, !llvm.loop !6

31:                                               ; preds = %24, %17
  %32 = phi %"struct.std::__1::pair"* [ %12, %17 ], [ %28, %24 ]
  %33 = icmp ult i64 %19, 112
  br i1 %33, label %46, label %34

34:                                               ; preds = %31, %34
  %35 = phi %"struct.std::__1::pair"* [ %44, %34 ], [ %32, %31 ]
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 2, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 3, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 4, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 5, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 6, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 7, i32 0, i32 0, i32 0
  store i64 -9223372036854775808, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 8
  %45 = icmp eq %"struct.std::__1::pair"* %44, %15
  br i1 %45, label %46, label %34

46:                                               ; preds = %31, %34, %1, %11
  %47 = icmp eq i8* %2, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %46
  store i8 %3, i8* %2, align 1
  br label %49

49:                                               ; preds = %46, %48
  ret void

50:                                               ; preds = %1, %50
  %51 = phi %"struct.std::__1::pair"* [ %54, %50 ], [ %5, %1 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %52, align 8
  tail call void @_ZN5blink14SVGSMILElement5ResetEv(%"class.blink::SVGSMILElement"* %53) #10
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 1
  %55 = icmp eq %"struct.std::__1::pair"* %54, %9
  br i1 %55, label %11, label %50
}

declare void @_ZN5blink14SVGSMILElement5ResetEv(%"class.blink::SVGSMILElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer15UpdateIntervalsERNS0_12TimingUpdateE(%"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer::TimingUpdate"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGSMILElement"*, align 8
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.blink::SMILInterval"*
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 2
  %10 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9
  %14 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = shl i32 %15, 4
  %17 = icmp ugt i32 %16, 1000000
  %18 = select i1 %17, i32 %16, i32 1000000
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 1
  %23 = zext i1 %22 to i32
  %24 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 6
  %25 = load i8, i8* %24, align 1, !range !3
  store i8 1, i8* %24, align 1
  %26 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %13, i64 0, i32 0, i32 0
  %27 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %26, i32 0) #10
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp sgt i64 %29, %12
  br i1 %30, label %86, label %31

31:                                               ; preds = %2
  %32 = bitcast %"class.blink::SVGSMILElement"** %3 to i8*
  %33 = bitcast <2 x i64>* %4 to i8*
  %34 = getelementptr inbounds %"class.blink::SMILTimeContainer::TimingUpdate", %"class.blink::SMILTimeContainer::TimingUpdate"* %1, i64 0, i32 3, i32 0, i32 0
  %35 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %37 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  %38 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %39 = bitcast %"class.logging::CheckError"* %8 to i8*
  br label %40

40:                                               ; preds = %31, %81
  %41 = phi i64 [ 0, %31 ], [ %71, %81 ]
  %42 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %26, i32 0) #10
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %43, align 8
  call void @_ZN5blink14SVGSMILElement14UpdateIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %44, i64 %12) #10
  %45 = load i32, i32* %20, align 8
  %46 = icmp eq i32 %45, 1
  %47 = call i32 @_ZN5blink14SVGSMILElement17UpdateActiveStateENS_8SMILTimeEb(%"class.blink::SVGSMILElement"* %44, i64 %12, i1 zeroext %46) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  store %"class.blink::SVGSMILElement"* %44, %"class.blink::SVGSMILElement"** %3, align 8
  %48 = load i32, i32* %20, align 8
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %59, label %50

50:                                               ; preds = %40
  %51 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %9, align 8
  %52 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %51, i64 0, i32 5
  %53 = load i8, i8* %52, align 4
  %54 = and i8 %53, 4
  %55 = icmp ne i8 %54, 0
  %56 = icmp ne i32 %47, 0
  %57 = and i1 %56, %55
  br i1 %57, label %58, label %61

58:                                               ; preds = %50
  call void @_ZN5blink14SVGSMILElement14DispatchEventsENS0_17EventDispatchMaskE(%"class.blink::SVGSMILElement"* %44, i32 %47) #10
  br label %61

59:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #10
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %4, align 16
  %60 = call { %"struct.WTF::KeyValuePair.110"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.108"* %34, %"class.blink::SVGSMILElement"** nonnull dereferenceable(8) %3, %"struct.blink::SMILInterval"* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #10
  br label %61

61:                                               ; preds = %50, %58, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %62 = call i64 @_ZNK5blink14SVGSMILElement23ComputeNextIntervalTimeENS_8SMILTimeENS0_14IncludeRepeatsE(%"class.blink::SVGSMILElement"* %44, i64 %12, i32 %23) #10
  %63 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %44, i64 0, i32 21
  %64 = load i32, i32* %63, align 4
  %65 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %26, i32 %64) #10
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 0, i32 0, i32 0, i32 0
  store i64 %62, i64* %66, align 8
  %67 = call i32 @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE11PercolateUpEj(%"class.blink::PriorityQueue"* %13, i32 %64) #10
  %68 = icmp eq i32 %67, %64
  br i1 %68, label %69, label %70

69:                                               ; preds = %61
  call void @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE13PercolateDownEj(%"class.blink::PriorityQueue"* %13, i32 %64) #10
  br label %70

70:                                               ; preds = %61, %69
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %71 = add i64 %41, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %72 = icmp ult i64 %41, %19
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %81

74:                                               ; preds = %70
  %75 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %41) #10
  %76 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %19) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i8* %75, i8* %76) #10
  %77 = load i8*, i8** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %77, i8** %36, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 568, %"class.logging::CheckOpResult"* nonnull %7) #10
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %81

81:                                               ; preds = %73, %74, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  %82 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %26, i32 0) #10
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp sgt i64 %84, %12
  br i1 %85, label %86, label %40

86:                                               ; preds = %81, %2
  %87 = icmp eq i8* %24, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %86
  store i8 %25, i8* %24, align 1
  br label %89

89:                                               ; preds = %86, %88
  ret void
}

declare void @_ZN5blink14SVGSMILElement14UpdateIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #2

declare i32 @_ZN5blink14SVGSMILElement17UpdateActiveStateENS_8SMILTimeEb(%"class.blink::SVGSMILElement"*, i64, i1 zeroext) local_unnamed_addr #2

declare i64 @_ZNK5blink14SVGSMILElement23ComputeNextIntervalTimeENS_8SMILTimeENS0_14IncludeRepeatsE(%"class.blink::SVGSMILElement"*, i64, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare %"class.blink::ElementSMILAnimations"* @_ZNK5blink10SVGElement17GetSMILAnimationsEv(%"class.blink::SVGElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink21ElementSMILAnimations5ApplyENS_8SMILTimeE(%"class.blink::ElementSMILAnimations"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SMILTimeContainer22AdvanceFrameForTestingEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"* %0)
  %3 = icmp slt i64 %2, 9223372036854775806
  br i1 %3, label %4, label %11

4:                                                ; preds = %1
  %5 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %2, i64 25000) #10
  %6 = extractvalue { i64, i1 } %5, 1
  %7 = extractvalue { i64, i1 } %5, 0
  %8 = select i1 %6, i64 9223372036854775807, i64 %7, !prof !2
  %9 = icmp slt i64 %8, 9223372036854775805
  %10 = select i1 %9, i64 %8, i64 9223372036854775805
  br label %11

11:                                               ; preds = %1, %4
  %12 = phi i64 [ %10, %4 ], [ %2, %1 ]
  tail call void @_ZN5blink17SMILTimeContainer10SetElapsedENS_8SMILTimeE(%"class.blink::SMILTimeContainer"* %0, i64 %12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17SMILTimeContainer5TraceEPNS_7VisitorE(%"class.blink::SMILTimeContainer"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7
  %5 = bitcast %"class.blink::HeapTaskRunnerTimer"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 7, i32 1
  %10 = bitcast %"class.blink::WeakMember"* %9 to i64*
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::WeakMember"* %9 to i8*
  %15 = inttoptr i64 %11 to i8*
  %16 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %17, i64 6
  %19 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %1, i8* nonnull %15, i8* %14, i8* %15, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_17SMILTimeContainerEEEvRKNS_14LivenessBrokerEPKv) #10
  br label %20

20:                                               ; preds = %2, %8, %13
  %21 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 8
  %22 = bitcast %"class.blink::HeapHashCountedSet"* %21 to i8*
  %23 = bitcast %"class.blink::HeapHashCountedSet"* %21 to i64*
  %24 = load atomic i64, i64* %23 monotonic, align 8
  %25 = inttoptr i64 %24 to %"struct.WTF::KeyValuePair"*
  %26 = bitcast %"class.blink::HeapHashCountedSet"* %21 to i8**
  %27 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %28 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %28, i64 11
  %30 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %29, align 8
  tail call void %30(%"class.blink::Visitor"* %1, i8** %26) #10
  %31 = inttoptr i64 %24 to i8*
  %32 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #10
  %33 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair"**
  store %"struct.WTF::KeyValuePair"* %25, %"struct.WTF::KeyValuePair"** %33, align 8
  %34 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  %35 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %36 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %36, i64 10
  %38 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %1, i8* %31, i8** %26, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10SVGElementEEENS_12KeyValuePairIS5_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSC_IjEEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %22) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #10
  %39 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 9
  %40 = bitcast %"class.blink::PriorityQueue"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp eq i64 %41, 0
  %43 = bitcast %"class.blink::PriorityQueue"* %39 to i8**
  %44 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %27, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %44, i64 11
  %46 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8** %43) #10
  br i1 %42, label %53, label %47

47:                                               ; preds = %20
  %48 = inttoptr i64 %41 to i8*
  %49 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %1, i8* nonnull %48, i8* nonnull %48, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

53:                                               ; preds = %20, %47
  %54 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %0, i64 0, i32 10
  %55 = bitcast %"class.blink::Member.87"* %54 to i64*
  %56 = load atomic i64, i64* %55 monotonic, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %53
  %59 = inttoptr i64 %56 to i8*
  %60 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, i64 5
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %1, i8* nonnull %59, i8* nonnull %59, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13SVGSVGElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %64

64:                                               ; preds = %53, %58
  ret void
}

declare zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #6

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

declare void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"*, i64, i64, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.110"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.108"*, %"class.blink::SVGSMILElement"** dereferenceable(8), %"struct.blink::SMILInterval"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.110"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.108"* %0, %"struct.WTF::KeyValuePair.110"* null)
  %9 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.110"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SVGSMILElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #10
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %10
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #10
  br label %45

45:                                               ; preds = %10, %43
  %46 = phi i8* [ %44, %43 ], [ %41, %10 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %11, i64 %38
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %53, align 8
  %55 = icmp eq %"class.blink::SVGSMILElement"* %54, null
  br i1 %55, label %99, label %56

56:                                               ; preds = %45
  %57 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %1, align 8
  %58 = xor i32 %36, -1
  %59 = lshr i32 %36, 23
  %60 = add i32 %59, %58
  %61 = shl i32 %60, 12
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 7
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 2
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 20
  %68 = xor i32 %67, %66
  %69 = or i32 %68, 1
  %70 = zext i32 %69 to i64
  br label %71

71:                                               ; preds = %56, %78
  %72 = phi %"class.blink::SVGSMILElement"* [ %54, %56 ], [ %88, %78 ]
  %73 = phi %"struct.WTF::KeyValuePair.110"* [ %52, %56 ], [ %86, %78 ]
  %74 = phi %"struct.WTF::KeyValuePair.110"* [ null, %56 ], [ %81, %78 ]
  %75 = phi i64 [ %38, %56 ], [ %85, %78 ]
  %76 = phi i64 [ 0, %56 ], [ %83, %78 ]
  %77 = icmp eq %"class.blink::SVGSMILElement"* %72, %57
  br i1 %77, label %160, label %78

78:                                               ; preds = %71
  %79 = icmp eq %"class.blink::SVGSMILElement"* %72, inttoptr (i64 -1 to %"class.blink::SVGSMILElement"*)
  %80 = select i1 %51, %"struct.WTF::KeyValuePair.110"* %74, %"struct.WTF::KeyValuePair.110"* %73
  %81 = select i1 %79, %"struct.WTF::KeyValuePair.110"* %80, %"struct.WTF::KeyValuePair.110"* %74
  %82 = icmp eq i64 %76, 0
  %83 = select i1 %82, i64 %70, i64 %76
  %84 = add i64 %83, %75
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %11, i64 %85
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %87, align 8
  %89 = icmp eq %"class.blink::SVGSMILElement"* %88, null
  br i1 %89, label %90, label %71

90:                                               ; preds = %78
  %91 = icmp eq %"struct.WTF::KeyValuePair.110"* %81, null
  br i1 %91, label %99, label %92

92:                                               ; preds = %90
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_14SVGSMILElementEEEEENS4_INS5_12SMILIntervalEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair.110"* nonnull dereferenceable(24) %81) #10
  %93 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, 2147483647
  %96 = and i32 %95, 2147483647
  %97 = and i32 %94, -2147483648
  %98 = or i32 %96, %97
  store i32 %98, i32* %93, align 8
  br label %99

99:                                               ; preds = %45, %90, %92
  %100 = phi %"struct.WTF::KeyValuePair.110"* [ %81, %92 ], [ %86, %90 ], [ %52, %45 ]
  %101 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %1, align 8
  %102 = ptrtoint %"class.blink::SVGSMILElement"* %101 to i64
  %103 = bitcast %"struct.WTF::KeyValuePair.110"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::SVGSMILElement"* %101 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #10
  br label %109

109:                                              ; preds = %99, %106
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %100, i64 0, i32 1
  %111 = bitcast %"struct.blink::SMILInterval"* %110 to i8*
  %112 = bitcast %"struct.blink::SMILInterval"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false) #10
  %113 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %148, label %115

115:                                              ; preds = %109
  %116 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %117 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %116, i64 0, i32 1
  %118 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %117) #10
  %119 = icmp eq i8* %118, null
  br i1 %119, label %120, label %122, !prof !2

120:                                              ; preds = %115
  %121 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %117, i8* %121) #10
  br label %122

122:                                              ; preds = %120, %115
  %123 = phi i8* [ %121, %120 ], [ %118, %115 ]
  %124 = bitcast i8* %123 to %"class.blink::ThreadState"**
  %125 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %125, i64 0, i32 9
  %127 = load i8, i8* %126, align 1, !range !3
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %148, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %125, i64 0, i32 13
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %130, align 8
  %133 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %125, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %134 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %133, align 8
  %135 = load atomic i64, i64* %103 monotonic, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %134, i64 0, i32 0, i32 0
  %139 = inttoptr i64 %135 to i8*
  %140 = bitcast %"class.blink::MarkingVisitor"* %134 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %141 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %141, i64 5
  %143 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %142, align 8
  tail call void %143(%"class.blink::Visitor"* %138, i8* nonnull %139, i8* %139, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #10
  %144 = load i64, i64* %130, align 8
  br label %145

145:                                              ; preds = %137, %129
  %146 = phi i64 [ %132, %129 ], [ %144, %137 ]
  %147 = add i64 %146, -1
  store i64 %147, i64* %130, align 8
  br label %148

148:                                              ; preds = %109, %122, %145
  %149 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = add i32 %150, 1
  store i32 %151, i32* %149, align 4
  %152 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 3
  %153 = load i32, i32* %152, align 8
  %154 = add i32 %153, %151
  %155 = shl i32 %154, 1
  %156 = load i32, i32* %12, align 8
  %157 = icmp ult i32 %155, %156
  br i1 %157, label %160, label %158

158:                                              ; preds = %148
  %159 = tail call %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.108"* %0, %"struct.WTF::KeyValuePair.110"* %100)
  br label %160

160:                                              ; preds = %71, %148, %158
  %161 = phi i8 [ 1, %148 ], [ 1, %158 ], [ 0, %71 ]
  %162 = phi %"struct.WTF::KeyValuePair.110"* [ %100, %148 ], [ %159, %158 ], [ %73, %71 ]
  %163 = insertvalue { %"struct.WTF::KeyValuePair.110"*, i8 } undef, %"struct.WTF::KeyValuePair.110"* %162, 0
  %164 = insertvalue { %"struct.WTF::KeyValuePair.110"*, i8 } %163, i8 %161, 1
  ret { %"struct.WTF::KeyValuePair.110"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.108"*, %"struct.WTF::KeyValuePair.110"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6RehashEjPS7_(%"class.WTF::HashTable.108"* %0, i32 %32, %"struct.WTF::KeyValuePair.110"* %1)
  ret %"struct.WTF::KeyValuePair.110"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6RehashEjPS7_(%"class.WTF::HashTable.108"*, i32, %"struct.WTF::KeyValuePair.110"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %9 = call %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.108"* %0, i32 %1, %"struct.WTF::KeyValuePair.110"* %2, i8* nonnull dereferenceable(1) %4)
  %10 = load i8, i8* %4, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %11, label %12, label %32

12:                                               ; preds = %8
  %13 = zext i32 %1 to i64
  %14 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %13) #10
  %15 = bitcast %"class.blink::HeapHashTableBacking"* %14 to %"struct.WTF::KeyValuePair.110"*
  br label %21

16:                                               ; preds = %3
  %17 = zext i32 %1 to i64
  %18 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %17) #10
  %19 = bitcast %"class.blink::HeapHashTableBacking"* %18 to %"struct.WTF::KeyValuePair.110"*
  %20 = icmp eq i32 %1, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %12, %16
  %22 = phi %"struct.WTF::KeyValuePair.110"* [ %15, %12 ], [ %19, %16 ]
  %23 = phi i64 [ %13, %12 ], [ %17, %16 ]
  br label %24

24:                                               ; preds = %21, %24
  %25 = phi i64 [ %27, %24 ], [ 0, %21 ]
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %22, i64 %25
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_14SVGSMILElementEEEEENS4_INS5_12SMILIntervalEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair.110"* dereferenceable(24) %26) #10
  %27 = add nuw nsw i64 %25, 1
  %28 = icmp eq i64 %27, %23
  br i1 %28, label %29, label %24

29:                                               ; preds = %24, %16
  %30 = phi %"struct.WTF::KeyValuePair.110"* [ %19, %16 ], [ %22, %24 ]
  %31 = call %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.108"* %0, %"struct.WTF::KeyValuePair.110"* %30, i32 %1, %"struct.WTF::KeyValuePair.110"* %2)
  br label %32

32:                                               ; preds = %8, %29
  %33 = phi %"struct.WTF::KeyValuePair.110"* [ %31, %29 ], [ %9, %8 ]
  ret %"struct.WTF::KeyValuePair.110"* %33
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.108"*, i32, %"struct.WTF::KeyValuePair.110"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.110"* %32, null
  br i1 %33, label %85, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = mul nuw nsw i64 %35, 24
  %37 = bitcast %"struct.WTF::KeyValuePair.110"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %85

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.110"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi i64 [ %50, %47 ], [ 0, %39 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %45, i64 %48
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_14SVGSMILElementEEEEENS4_INS5_12SMILIntervalEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair.110"* dereferenceable(24) %49) #10
  %50 = add nuw nsw i64 %48, 1
  %51 = icmp eq i64 %50, %43
  br i1 %51, label %52, label %47

52:                                               ; preds = %47
  br i1 %46, label %53, label %63

53:                                               ; preds = %75, %39, %52
  %54 = phi %"struct.WTF::KeyValuePair.110"* [ null, %52 ], [ null, %39 ], [ %70, %75 ]
  %55 = bitcast %"class.WTF::HashTable.108"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %55, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #10
  br label %61

61:                                               ; preds = %53, %58
  %62 = icmp eq i32 %1, 0
  br i1 %62, label %78, label %80

63:                                               ; preds = %52, %75
  %64 = phi i64 [ %76, %75 ], [ 0, %52 ]
  %65 = phi %"struct.WTF::KeyValuePair.110"* [ %70, %75 ], [ null, %52 ]
  %66 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %31, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %66, i64 %64
  %68 = icmp eq %"struct.WTF::KeyValuePair.110"* %67, %2
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %45, i64 %64
  %70 = select i1 %68, %"struct.WTF::KeyValuePair.110"* %69, %"struct.WTF::KeyValuePair.110"* %65
  %71 = bitcast %"struct.WTF::KeyValuePair.110"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  switch i64 %72, label %74 [
    i64 -1, label %73
    i64 0, label %73
  ]

73:                                               ; preds = %63, %63
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_14SVGSMILElementEEEEENS4_INS5_12SMILIntervalEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair.110"* dereferenceable(24) %69) #10
  br label %75

74:                                               ; preds = %63
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink6MemberINS2_14SVGSMILElementEEENS2_12SMILIntervalEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSA_IS6_EEEELb1EE4MoveEOS7_RS7_(%"struct.WTF::KeyValuePair.110"* dereferenceable(24) %67, %"struct.WTF::KeyValuePair.110"* dereferenceable(24) %69)
  br label %75

75:                                               ; preds = %73, %74
  %76 = add nuw nsw i64 %64, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %53, label %63

78:                                               ; preds = %80, %61
  %79 = call %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.108"* %0, %"struct.WTF::KeyValuePair.110"* %42, i32 %1, %"struct.WTF::KeyValuePair.110"* %54)
  br label %85

80:                                               ; preds = %61, %80
  %81 = phi i64 [ %83, %80 ], [ 0, %61 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %42, i64 %81
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_14SVGSMILElementEEEEENS4_INS5_12SMILIntervalEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair.110"* dereferenceable(24) %82) #10
  %83 = add nuw nsw i64 %81, 1
  %84 = icmp eq i64 %83, %35
  br i1 %84, label %78, label %80

85:                                               ; preds = %34, %30, %78
  %86 = phi %"struct.WTF::KeyValuePair.110"* [ %79, %78 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.110"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.108"*, %"struct.WTF::KeyValuePair.110"*, i32, %"struct.WTF::KeyValuePair.110"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.108", align 8
  %6 = bitcast %"class.WTF::HashTable.108"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.108"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.110"* %1, %"struct.WTF::KeyValuePair.110"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.110"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.110"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %19, align 8
  br label %57

21:                                               ; preds = %75
  %22 = bitcast %"class.WTF::HashTable.108"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %76, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.110"* [ null, %15 ], [ %78, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.108"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.108"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.108"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #10
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.110"* %29

57:                                               ; preds = %18, %75
  %58 = phi i32 [ %13, %18 ], [ %76, %75 ]
  %59 = phi %"struct.WTF::KeyValuePair.110"* [ %20, %18 ], [ %77, %75 ]
  %60 = phi %"struct.WTF::KeyValuePair.110"* [ null, %18 ], [ %78, %75 ]
  %61 = phi i32 [ 0, %18 ], [ %79, %75 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.110"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %75
    i64 0, label %75
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.110"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.108"* nonnull %5, %"class.blink::Member.59"* dereferenceable(8) %67) #10
  %69 = extractvalue { %"struct.WTF::KeyValuePair.110"*, i8 } %68, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink6MemberINS2_14SVGSMILElementEEENS2_12SMILIntervalEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSA_IS6_EEEELb1EE4MoveEOS7_RS7_(%"struct.WTF::KeyValuePair.110"* dereferenceable(24) %63, %"struct.WTF::KeyValuePair.110"* dereferenceable(24) %69) #10
  %70 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %19, align 8
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %70, i64 %62
  %72 = icmp eq %"struct.WTF::KeyValuePair.110"* %71, %3
  %73 = select i1 %72, %"struct.WTF::KeyValuePair.110"* %69, %"struct.WTF::KeyValuePair.110"* %60
  %74 = load i32, i32* %12, align 8
  br label %75

75:                                               ; preds = %57, %57, %66
  %76 = phi i32 [ %58, %57 ], [ %74, %66 ], [ %58, %57 ]
  %77 = phi %"struct.WTF::KeyValuePair.110"* [ %59, %57 ], [ %70, %66 ], [ %59, %57 ]
  %78 = phi %"struct.WTF::KeyValuePair.110"* [ %60, %57 ], [ %73, %66 ], [ %60, %57 ]
  %79 = add i32 %61, 1
  %80 = icmp eq i32 %79, %76
  br i1 %80, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink6MemberINS2_14SVGSMILElementEEENS2_12SMILIntervalEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSA_IS6_EEEELb1EE4MoveEOS7_RS7_(%"struct.WTF::KeyValuePair.110"* dereferenceable(24), %"struct.WTF::KeyValuePair.110"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #10
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !2

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #10
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = bitcast %"struct.WTF::KeyValuePair.110"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.WTF::KeyValuePair.110"* %1 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %0, i64 0, i32 1
  %21 = bitcast %"struct.blink::SMILInterval"* %19 to i8*
  %22 = bitcast %"struct.blink::SMILInterval"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false) #10
  %23 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %24 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %23, i64 0, i32 1
  %25 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %24) #10
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %9
  %28 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %24, i8* %28) #10
  br label %29

29:                                               ; preds = %9, %27
  %30 = phi i8* [ %28, %27 ], [ %25, %9 ]
  %31 = bitcast i8* %30 to %"class.blink::ThreadState"**
  %32 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %32, i64 0, i32 14
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -1
  store i64 %35, i64* %33, align 8
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_14SVGSMILElementEEEEENS4_INS5_12SMILIntervalEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair.110"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.WTF::KeyValuePair.110"* %0 to i64*
  %3 = bitcast %"struct.WTF::KeyValuePair.110"* %0 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9223372036854775807>, <2 x i64>* %3, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  store i64 9223372036854775807, i64* %4, align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !2

12:                                               ; preds = %7
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %13) #10
  br label %14

14:                                               ; preds = %12, %7
  %15 = phi i8* [ %13, %12 ], [ %10, %7 ]
  %16 = bitcast i8* %15 to %"class.blink::ThreadState"**
  %17 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 9
  %19 = load i8, i8* %18, align 1, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 13
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %25, align 8
  %27 = load atomic i64, i64* %2 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %26, i64 0, i32 0, i32 0
  %31 = inttoptr i64 %27 to i8*
  %32 = bitcast %"class.blink::MarkingVisitor"* %26 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %30, i8* nonnull %31, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #10
  %36 = load i64, i64* %22, align 8
  br label %37

37:                                               ; preds = %29, %21
  %38 = phi i64 [ %24, %21 ], [ %36, %29 ]
  %39 = add i64 %38, -1
  store i64 %39, i64* %22, align 8
  br label %40

40:                                               ; preds = %1, %14, %37
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS1_12KeyValuePairIS5_NS_12SMILIntervalEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS1_12KeyValuePairIS5_NS_12SMILIntervalEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.23"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.23"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([477 x i8], [477 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS6_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.110"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = udiv i64 %22, 24
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp ugt i64 %22, 23
  br i1 %29, label %30, label %56

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.110"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp ult i64 %54, %23
  br i1 %55, label %32, label %56

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEENS2_12KeyValuePairIS6_NS_12SMILIntervalEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.23"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGSMILElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGSMILElement"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.110"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.108"*, %"class.blink::Member.59"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.59"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.110"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %34, align 8
  %36 = icmp eq %"class.blink::SVGSMILElement"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::SVGSMILElement"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.110"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.110"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.110"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.110"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.110"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::SVGSMILElement"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %67, align 8
  %69 = icmp eq %"class.blink::SVGSMILElement"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::SVGSMILElement"* %63, inttoptr (i64 -1 to %"class.blink::SVGSMILElement"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.110"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %79, align 8
  %81 = icmp eq %"class.blink::SVGSMILElement"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.110"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.110"*, i8 } undef, %"struct.WTF::KeyValuePair.110"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.110"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.110"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.110"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.108"*, %"class.blink::SVGSMILElement"** dereferenceable(8), %"struct.blink::SMILInterval"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.110"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.108"* %0, %"struct.WTF::KeyValuePair.110"* null)
  %9 = load %"struct.WTF::KeyValuePair.110"*, %"struct.WTF::KeyValuePair.110"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.110"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SVGSMILElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #10
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %10
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #10
  br label %45

45:                                               ; preds = %10, %43
  %46 = phi i8* [ %44, %43 ], [ %41, %10 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %11, i64 %38
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %53, align 8
  %55 = icmp eq %"class.blink::SVGSMILElement"* %54, null
  br i1 %55, label %99, label %56

56:                                               ; preds = %45
  %57 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %1, align 8
  %58 = xor i32 %36, -1
  %59 = lshr i32 %36, 23
  %60 = add i32 %59, %58
  %61 = shl i32 %60, 12
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 7
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 2
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 20
  %68 = xor i32 %67, %66
  %69 = or i32 %68, 1
  %70 = zext i32 %69 to i64
  br label %71

71:                                               ; preds = %56, %78
  %72 = phi %"class.blink::SVGSMILElement"* [ %54, %56 ], [ %88, %78 ]
  %73 = phi %"struct.WTF::KeyValuePair.110"* [ %52, %56 ], [ %86, %78 ]
  %74 = phi %"struct.WTF::KeyValuePair.110"* [ null, %56 ], [ %81, %78 ]
  %75 = phi i64 [ %38, %56 ], [ %85, %78 ]
  %76 = phi i64 [ 0, %56 ], [ %83, %78 ]
  %77 = icmp eq %"class.blink::SVGSMILElement"* %72, %57
  br i1 %77, label %160, label %78

78:                                               ; preds = %71
  %79 = icmp eq %"class.blink::SVGSMILElement"* %72, inttoptr (i64 -1 to %"class.blink::SVGSMILElement"*)
  %80 = select i1 %51, %"struct.WTF::KeyValuePair.110"* %74, %"struct.WTF::KeyValuePair.110"* %73
  %81 = select i1 %79, %"struct.WTF::KeyValuePair.110"* %80, %"struct.WTF::KeyValuePair.110"* %74
  %82 = icmp eq i64 %76, 0
  %83 = select i1 %82, i64 %70, i64 %76
  %84 = add i64 %83, %75
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %11, i64 %85
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %87, align 8
  %89 = icmp eq %"class.blink::SVGSMILElement"* %88, null
  br i1 %89, label %90, label %71

90:                                               ; preds = %78
  %91 = icmp eq %"struct.WTF::KeyValuePair.110"* %81, null
  br i1 %91, label %99, label %92

92:                                               ; preds = %90
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink6MemberINS5_14SVGSMILElementEEEEENS4_INS5_12SMILIntervalEEEEENS5_13HeapAllocatorENS_12KeyValuePairIS8_SA_EEEEvRT1_(%"struct.WTF::KeyValuePair.110"* nonnull dereferenceable(24) %81) #10
  %93 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, 2147483647
  %96 = and i32 %95, 2147483647
  %97 = and i32 %94, -2147483648
  %98 = or i32 %96, %97
  store i32 %98, i32* %93, align 8
  br label %99

99:                                               ; preds = %45, %90, %92
  %100 = phi %"struct.WTF::KeyValuePair.110"* [ %81, %92 ], [ %86, %90 ], [ %52, %45 ]
  %101 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %1, align 8
  %102 = ptrtoint %"class.blink::SVGSMILElement"* %101 to i64
  %103 = bitcast %"struct.WTF::KeyValuePair.110"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::SVGSMILElement"* %101 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #10
  br label %109

109:                                              ; preds = %99, %106
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.110", %"struct.WTF::KeyValuePair.110"* %100, i64 0, i32 1
  %111 = bitcast %"struct.blink::SMILInterval"* %110 to i8*
  %112 = bitcast %"struct.blink::SMILInterval"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false) #10
  %113 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %148, label %115

115:                                              ; preds = %109
  %116 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %117 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %116, i64 0, i32 1
  %118 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %117) #10
  %119 = icmp eq i8* %118, null
  br i1 %119, label %120, label %122, !prof !2

120:                                              ; preds = %115
  %121 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %117, i8* %121) #10
  br label %122

122:                                              ; preds = %120, %115
  %123 = phi i8* [ %121, %120 ], [ %118, %115 ]
  %124 = bitcast i8* %123 to %"class.blink::ThreadState"**
  %125 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %125, i64 0, i32 9
  %127 = load i8, i8* %126, align 1, !range !3
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %148, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %125, i64 0, i32 13
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %130, align 8
  %133 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %125, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %134 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %133, align 8
  %135 = load atomic i64, i64* %103 monotonic, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %134, i64 0, i32 0, i32 0
  %139 = inttoptr i64 %135 to i8*
  %140 = bitcast %"class.blink::MarkingVisitor"* %134 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %141 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %141, i64 5
  %143 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %142, align 8
  tail call void %143(%"class.blink::Visitor"* %138, i8* nonnull %139, i8* %139, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #10
  %144 = load i64, i64* %130, align 8
  br label %145

145:                                              ; preds = %137, %129
  %146 = phi i64 [ %132, %129 ], [ %144, %137 ]
  %147 = add i64 %146, -1
  store i64 %147, i64* %130, align 8
  br label %148

148:                                              ; preds = %109, %122, %145
  %149 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = add i32 %150, 1
  store i32 %151, i32* %149, align 4
  %152 = getelementptr inbounds %"class.WTF::HashTable.108", %"class.WTF::HashTable.108"* %0, i64 0, i32 3
  %153 = load i32, i32* %152, align 8
  %154 = add i32 %153, %151
  %155 = shl i32 %154, 1
  %156 = load i32, i32* %12, align 8
  %157 = icmp ult i32 %155, %156
  br i1 %157, label %160, label %158

158:                                              ; preds = %148
  %159 = tail call %"struct.WTF::KeyValuePair.110"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEENS_12KeyValuePairIS4_NS1_12SMILIntervalEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.108"* %0, %"struct.WTF::KeyValuePair.110"* %100)
  br label %160

160:                                              ; preds = %71, %148, %158
  %161 = phi i8 [ 1, %148 ], [ 1, %158 ], [ 0, %71 ]
  %162 = phi %"struct.WTF::KeyValuePair.110"* [ %100, %148 ], [ %159, %158 ], [ %73, %71 ]
  %163 = insertvalue { %"struct.WTF::KeyValuePair.110"*, i8 } undef, %"struct.WTF::KeyValuePair.110"* %162, 0
  %164 = insertvalue { %"struct.WTF::KeyValuePair.110"*, i8 } %163, i8 %161, 1
  ret { %"struct.WTF::KeyValuePair.110"*, i8 } %164
}

declare void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEED0Ev(%"class.blink::HeapTaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %2) #10
  %3 = bitcast %"class.blink::HeapTaskRunnerTimer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEE5FiredEv(%"class.blink::HeapTaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::SMILTimeContainer"** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 2, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = bitcast i8* %9 to %"class.blink::SMILTimeContainer"*
  %11 = and i64 %6, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast i8* %9 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = add i64 %6, -1
  %17 = getelementptr i8, i8* %15, i64 %16
  %18 = bitcast i8* %17 to void (%"class.blink::SMILTimeContainer"*, %"class.blink::TimerBase"*)**
  %19 = load void (%"class.blink::SMILTimeContainer"*, %"class.blink::TimerBase"*)*, void (%"class.blink::SMILTimeContainer"*, %"class.blink::TimerBase"*)** %18, align 8
  br label %22

20:                                               ; preds = %1
  %21 = inttoptr i64 %6 to void (%"class.blink::SMILTimeContainer"*, %"class.blink::TimerBase"*)*
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi void (%"class.blink::SMILTimeContainer"*, %"class.blink::TimerBase"*)* [ %19, %13 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %0, i64 0, i32 0
  tail call void %23(%"class.blink::SMILTimeContainer"* %10, %"class.blink::TimerBase"* %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE(%"class.base::OnceCallback"* noalias sret, %"class.blink::HeapTaskRunnerTimer"*, %"class.base::WeakPtr"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::WeakPersistent", align 8
  %5 = bitcast %"class.blink::WeakPersistent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 0
  store %"class.blink::SMILTimeContainer"* %7, %"class.blink::SMILTimeContainer"** %9, align 8, !alias.scope !7
  %10 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8, !alias.scope !7
  %11 = ptrtoint %"class.blink::SMILTimeContainer"* %7 to i64
  switch i64 %11, label %12 [
    i64 0, label %38
    i64 -1, label %38
  ]

12:                                               ; preds = %3
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !7
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #10, !noalias !7
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #10
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8, !noalias !7
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %23, align 8, !noalias !7
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8, !noalias !7
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %28, label %31, !prof !2

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %29) #10
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi %"class.blink::PersistentNode"* [ %30, %28 ], [ %26, %19 ]
  %33 = bitcast %"class.blink::PersistentNode"* %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !7
  %35 = bitcast %"class.blink::PersistentRegion"* %24 to i64*
  store i64 %34, i64* %35, align 8, !noalias !7
  %36 = bitcast %"class.blink::PersistentNode"* %32 to %"class.blink::PersistentBase.1174"**
  store %"class.blink::PersistentBase.1174"* %8, %"class.blink::PersistentBase.1174"** %36, align 8, !noalias !7
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17SMILTimeContainerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %10, align 8, !alias.scope !7
  br label %38

38:                                               ; preds = %3, %3, %31
  %39 = call i8* @_Znwm(i64 72) #11, !noalias !10
  %40 = bitcast i8* %39 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %40, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_17SMILTimeContainerEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_17SMILTimeContainerEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !10
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr"*, %"class.blink::SMILTimeContainer"*)* @_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_ to i64), i64* %42, align 8, !noalias !10
  %43 = getelementptr inbounds i8, i8* %39, i64 40
  %44 = bitcast i8* %43 to %"struct.std::__1::__tuple_impl"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_17SMILTimeContainerEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"* %44, %"class.base::WeakPtr"* dereferenceable(16) %2, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %4) #10, !noalias !10
  %45 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %39, i8** %45, align 8, !alias.scope !10
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %38
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #10
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %48
  %54 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #10
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %59, align 8
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0, i32 0
  %63 = bitcast %"class.blink::PersistentRegion"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentNode"* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %61, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  store %"class.blink::PersistentNode"* %61, %"class.blink::PersistentNode"** %62, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  br label %67

67:                                               ; preds = %38, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_17SMILTimeContainerEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_(%"class.base::WeakPtr"*, %"class.blink::SMILTimeContainer"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #10
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.blink::TimerBase"**
  %8 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %7, align 8
  %9 = icmp ne %"class.blink::TimerBase"* %8, null
  %10 = icmp ne %"class.blink::SMILTimeContainer"* %1, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #10
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %7, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi %"class.blink::TimerBase"* [ %15, %14 ], [ null, %12 ]
  tail call void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"* %17) #10
  br label %18

18:                                               ; preds = %2, %16, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_17SMILTimeContainerEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::WeakPtr"*, %"class.blink::SMILTimeContainer"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = load void (%"class.base::WeakPtr"*, %"class.blink::SMILTimeContainer"*)*, void (%"class.base::WeakPtr"*, %"class.blink::SMILTimeContainer"*)** %4, align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %9 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %8, %"class.base::internal::WeakReference"* dereferenceable(8) %9) #10
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  %14 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %15 = bitcast void ()** %14 to %"class.blink::SMILTimeContainer"**
  %16 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %15, align 8
  call void %7(%"class.base::WeakPtr"* nonnull %2, %"class.blink::SMILTimeContainer"* %16) #10
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_17SMILTimeContainerEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #10
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %5, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %29 = bitcast void ()** %28 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %29) #10
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_17SMILTimeContainerEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"*, %"class.base::WeakPtr"* dereferenceable(16), %"class.blink::WeakPersistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %4, %"class.base::internal::WeakReference"* dereferenceable(8) %5) #10
  %6 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::__tuple_leaf.1176", %"class.std::__1::__tuple_leaf.1176"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::WeakPersistent"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::__tuple_leaf.1176"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  switch i64 %12, label %15 [
    i64 0, label %41
    i64 -1, label %41
  ]

15:                                               ; preds = %3
  %16 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %17 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %16, i64 0, i32 1
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #10
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %15
  %21 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %21) #10
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i8* [ %21, %20 ], [ %18, %15 ]
  %24 = bitcast i8* %23 to %"class.blink::ThreadState"**
  %25 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %31, label %34, !prof !2

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %32) #10
  %33 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  br label %34

34:                                               ; preds = %31, %22
  %35 = phi %"class.blink::PersistentNode"* [ %33, %31 ], [ %29, %22 ]
  %36 = bitcast %"class.blink::PersistentNode"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::PersistentRegion"* %27 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %"class.blink::PersistentNode"* %35 to %"class.blink::PersistentBase.1174"**
  store %"class.blink::PersistentBase.1174"* %10, %"class.blink::PersistentBase.1174"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17SMILTimeContainerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %40, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %14, align 8
  br label %41

41:                                               ; preds = %3, %3, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17SMILTimeContainerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_17SMILTimeContainerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_17SMILTimeContainerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SMILTimeContainer"**
  %4 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %3, align 8
  %5 = icmp eq %"class.blink::SMILTimeContainer"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %4, i64 -1, i32 10
  %20 = bitcast %"class.blink::Member.87"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::SMILTimeContainer"* null, %"class.blink::SMILTimeContainer"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #10
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #10
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

declare void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_iEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::WeakMember.10"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::WeakMember.10"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %40, align 8
  %42 = icmp eq %"class.blink::SVGElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SVGElement"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SVGElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::SVGElement"* %59, %43
  br i1 %64, label %180, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::SVGElement"* %59, inttoptr (i64 -1 to %"class.blink::SVGElement"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %73, align 8
  %75 = icmp eq %"class.blink::SVGElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  store atomic i64 %88, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = inttoptr i64 %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #10
  br label %96

96:                                               ; preds = %87, %93
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %98 = load i32, i32* %2, align 4
  store i32 %98, i32* %97, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %96
  %102 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %103 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %102, i64 0, i32 1
  %104 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %103) #10
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %108, !prof !2

106:                                              ; preds = %101
  %107 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %103, i8* %107) #10
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %107, %106 ], [ %104, %101 ]
  %110 = bitcast i8* %109 to %"class.blink::ThreadState"**
  %111 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 13
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %119, align 8
  %121 = load atomic i64, i64* %90 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %120, i64 0, i32 0, i32 0
  %125 = inttoptr i64 %121 to i8*
  %126 = bitcast %"class.blink::MarkingVisitor"* %120 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, i64 5
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, align 8
  tail call void %129(%"class.blink::Visitor"* %124, i8* nonnull %125, i8* %125, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #10
  %130 = load i64, i64* %116, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i64 [ %118, %115 ], [ %130, %123 ]
  %133 = add i64 %132, -1
  store i64 %133, i64* %116, align 8
  br label %134

134:                                              ; preds = %96, %108, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, %137
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %12, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %180

146:                                              ; preds = %134
  %147 = mul i32 %137, 6
  %148 = icmp ult i32 %147, %142
  %149 = icmp ugt i32 %142, 8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %180

151:                                              ; preds = %146
  %152 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %153 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %152, i64 0, i32 1
  %154 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %153) #10
  %155 = icmp eq i8* %154, null
  br i1 %155, label %156, label %158, !prof !2

156:                                              ; preds = %151
  %157 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %153, i8* %157) #10
  br label %158

158:                                              ; preds = %156, %151
  %159 = phi i8* [ %157, %156 ], [ %154, %151 ]
  %160 = bitcast i8* %159 to %"class.blink::ThreadState"**
  %161 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %161, i64 0, i32 6
  %163 = load i8, i8* %162, align 8, !range !3
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %161, i64 0, i32 16
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %180, label %169

169:                                              ; preds = %158, %165
  %170 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %161, i64 0, i32 13
  %171 = load i64, i64* %170, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %169
  %174 = load i32, i32* %12, align 8
  %175 = lshr i32 %174, 1
  %176 = zext i32 %175 to i64
  %177 = tail call %"class.blink::HeapHashTableBacking.1186"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %176) #10
  %178 = bitcast %"class.blink::HeapHashTableBacking.1186"* %177 to %"struct.WTF::KeyValuePair"*
  %179 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %178, i32 %175, %"struct.WTF::KeyValuePair"* %89) #10
  br label %180

180:                                              ; preds = %58, %165, %146, %144, %173, %169
  %181 = phi i8 [ 1, %169 ], [ 1, %173 ], [ 1, %144 ], [ 1, %146 ], [ 1, %165 ], [ 0, %58 ]
  %182 = phi %"struct.WTF::KeyValuePair"* [ %89, %169 ], [ %179, %173 ], [ %145, %144 ], [ %89, %146 ], [ %89, %165 ], [ %60, %58 ]
  %183 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %182, 0
  %184 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %183, i8 %181, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %184
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1186"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking.1186"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGElement"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1186"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking.1186"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking.1186"**
  store %"class.blink::HeapHashTableBacking.1186"* %44, %"class.blink::HeapHashTableBacking.1186"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1186", %"class.blink::HeapHashTableBacking.1186"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair"* nonnull %52, i32 %41) #10
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::WeakMember.10"* dereferenceable(8) %67) #10
  %69 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair"* %69, %"struct.WTF::KeyValuePair"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1186"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1186"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1186"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.23"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.23"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([459 x i8], [459 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::WeakMember.10"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember.10"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %34, align 8
  %36 = icmp eq %"class.blink::SVGElement"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::SVGElement"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::SVGElement"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %67, align 8
  %69 = icmp eq %"class.blink::SVGElement"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::SVGElement"* %63, inttoptr (i64 -1 to %"class.blink::SVGElement"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %79, align 8
  %81 = icmp eq %"class.blink::SVGElement"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %2
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = icmp ne i8 %17, 0
  %19 = icmp ne i32 %1, 0
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %38

21:                                               ; preds = %12
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %35, %21
  %24 = phi i64 [ 0, %21 ], [ %36, %35 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %24
  %26 = bitcast %"struct.WTF::KeyValuePair"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %28 [
    i64 -1, label %35
    i64 0, label %35
  ]

28:                                               ; preds = %23
  store atomic i64 -1, i64* %26 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %33

33:                                               ; preds = %28, %31
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %24, i32 1
  store i32 0, i32* %34, align 1
  br label %35

35:                                               ; preds = %23, %23, %33
  %36 = add nuw nsw i64 %24, 1
  %37 = icmp eq i64 %36, %22
  br i1 %37, label %38, label %23

38:                                               ; preds = %35, %12, %2
  %39 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %39) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE11PercolateUpEj(%"class.blink::PriorityQueue"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %53, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0
  br label %6

6:                                                ; preds = %4, %51
  %7 = phi i32 [ %1, %4 ], [ %9, %51 ]
  %8 = add i32 %7, -1
  %9 = lshr i32 %8, 1
  %10 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %5, i32 %7) #10
  %11 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %5, i32 %9) #10
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %15, %13
  br i1 %16, label %17, label %53

17:                                               ; preds = %6
  %18 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %5, i32 %7) #10
  %19 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %5, i32 %9) #10
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %21, i64 0, i32 21
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %24, i64 0, i32 21
  %26 = load i32, i32* %22, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %22, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 1
  %34 = bitcast %"class.blink::Member.59"* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::Member.59"* %33 to i64*
  %37 = load i64, i64* %36, align 8
  store atomic i64 %37, i64* %34 monotonic, align 8
  store atomic i64 %35, i64* %36 monotonic, align 8
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %17
  %41 = bitcast %"class.blink::Member.59"* %32 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #10
  br label %44

44:                                               ; preds = %40, %17
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::Member.59"* %33 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #10
  br label %51

51:                                               ; preds = %47, %44
  %52 = icmp eq i32 %9, 0
  br i1 %52, label %53, label %6

53:                                               ; preds = %51, %6, %2
  %54 = phi i32 [ 0, %2 ], [ %7, %6 ], [ 0, %51 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEENS_12VectorTraitsIS8_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_(i8*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.std::__1::pair"*
  %4 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::Member.59"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #10
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %11 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #10
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"struct.std::__1::pair"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseIS8_EEvOT_(%"class.WTF::Vector.56"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.56"* %0, i32 %22) #10
  %23 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %26 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.56"* %0, i32 %37) #10
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"struct.std::__1::pair"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"struct.std::__1::pair"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %41, i64 %44
  %46 = bitcast %"struct.std::__1::pair"* %45 to i8*
  %47 = tail call %"struct.std::__1::pair"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEENS_12VectorTraitsIS8_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_(i8* %46, %"struct.std::__1::pair"* dereferenceable(16) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.56"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !17

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %26 = icmp eq %"struct.std::__1::pair"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.std::__1::pair"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.56"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.56"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.56"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"struct.std::__1::pair"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"struct.std::__1::pair"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !17

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.56"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.56"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.17, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.18, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS7_EEE14AllocateObjectISB_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS7_EEE14AllocateObjectISB_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.23"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.23"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([237 x i8], [237 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_8SMILTimeENS1_6MemberINS1_14SVGSMILElementEEEEENS_12VectorTraitsIS9_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.std::__1::pair"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member.59"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %54

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_8SMILTimeENS_6MemberINS_14SVGSMILElementEEEEEN3WTF12VectorTraitsIS8_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25
  ret %"struct.std::__1::pair"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  store i32 0, i32* %9, align 1
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  %13 = and i32 %12, 2147483647
  %14 = and i32 %11, -2147483648
  %15 = or i32 %13, %14
  store i32 %15, i32* %10, align 8
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  store i32 %18, i32* %16, align 4
  %19 = mul i32 %18, 6
  %20 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %19, %21
  %23 = icmp ugt i32 %21, 8
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %54

25:                                               ; preds = %8
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #10
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #10
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 6
  %37 = load i8, i8* %36, align 8, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 16
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %54, label %43

43:                                               ; preds = %32, %39
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %35, i64 0, i32 13
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %43
  %48 = load i32, i32* %20, align 8
  %49 = lshr i32 %48, 1
  %50 = zext i32 %49 to i64
  %51 = tail call %"class.blink::HeapHashTableBacking.1186"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %50) #10
  %52 = bitcast %"class.blink::HeapHashTableBacking.1186"* %51 to %"struct.WTF::KeyValuePair"*
  %53 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %52, i32 %49, %"struct.WTF::KeyValuePair"* null) #10
  br label %54

54:                                               ; preds = %39, %8, %47, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::SVGElement"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::SVGElement"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %34, align 8
  %36 = icmp eq %"class.blink::SVGElement"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %54, align 8
  %56 = icmp eq %"class.blink::SVGElement"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %63, align 8
  %65 = icmp eq %"class.blink::SVGElement"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13PriorityQueueINS_8SMILTimeENS_14SVGSMILElementEE13PercolateDownEj(%"class.blink::PriorityQueue"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::PriorityQueue", %"class.blink::PriorityQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  br label %5

5:                                                ; preds = %69, %2
  %6 = phi i32 [ %1, %2 ], [ %24, %69 ]
  %7 = shl i32 %6, 1
  %8 = or i32 %7, 1
  %9 = load i32, i32* %4, align 4
  %10 = icmp ult i32 %8, %9
  br i1 %10, label %11, label %23

11:                                               ; preds = %5
  %12 = add nuw i32 %8, 1
  %13 = icmp ult i32 %12, %9
  br i1 %13, label %14, label %22

14:                                               ; preds = %11
  %15 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %3, i32 %12) #10
  %16 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %3, i32 %8) #10
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %20, %18
  br i1 %21, label %23, label %22

22:                                               ; preds = %14, %11
  br label %23

23:                                               ; preds = %5, %14, %22
  %24 = phi i32 [ %8, %5 ], [ %8, %22 ], [ %12, %14 ]
  %25 = load i32, i32* %4, align 4
  %26 = icmp ult i32 %24, %25
  br i1 %26, label %27, label %70

27:                                               ; preds = %23
  %28 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %3, i32 %24) #10
  %29 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %3, i32 %6) #10
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp slt i64 %33, %31
  br i1 %34, label %35, label %70

35:                                               ; preds = %27
  %36 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %3, i32 %24) #10
  %37 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %3, i32 %6) #10
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %39, i64 0, i32 21
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %42, i64 0, i32 21
  %44 = load i32, i32* %40, align 4
  %45 = load i32, i32* %43, align 4
  store i32 %45, i32* %40, align 4
  store i32 %44, i32* %43, align 4
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %46, align 8
  store i64 %47, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1
  %52 = bitcast %"class.blink::Member.59"* %50 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::Member.59"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  store atomic i64 %55, i64* %52 monotonic, align 8
  store atomic i64 %53, i64* %54 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %35
  %59 = bitcast %"class.blink::Member.59"* %50 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %58, %35
  %63 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.blink::Member.59"* %51 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #10
  br label %69

69:                                               ; preds = %65, %62
  br label %5

70:                                               ; preds = %23, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairIN5blink8SMILTimeENS3_6MemberINS3_14SVGSMILElementEEEEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25
  ret %"struct.std::__1::pair"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGSMILElement"* @_ZN5blink9TraversalINS_14SVGSMILElementEE11FirstWithinERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %72, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %72, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %10 = bitcast %"class.blink::Node"* %9 to %"class.blink::Node"**
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %72, label %13

13:                                               ; preds = %8
  %14 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSetTagE, align 8
  %15 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kAnimateTagE, align 8
  %17 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kAnimateMotionTagE, align 8
  %19 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names20kAnimateTransformTagE, align 8
  %21 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %20, i64 0, i32 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %69, %13
  %23 = phi %"class.blink::Node"* [ %11, %13 ], [ %70, %69 ]
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 48
  %27 = icmp eq i32 %26, 32
  br i1 %27, label %28, label %53

28:                                               ; preds = %22
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1, i32 2
  %31 = bitcast %"class.blink::Member"* %30 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %72, label %38

38:                                               ; preds = %28
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %34, %41
  br i1 %42, label %72, label %43

43:                                               ; preds = %38
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %34, %46
  br i1 %47, label %72, label %48

48:                                               ; preds = %43
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %34, %51
  br i1 %52, label %72, label %53

53:                                               ; preds = %48, %22
  %54 = and i32 %25, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1
  %58 = bitcast %"class.blink::Node"* %57 to %"class.blink::Node"**
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %61, label %69

61:                                               ; preds = %56, %53
  %62 = icmp eq %"class.blink::Node"* %23, %0
  br i1 %62, label %72, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 5, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %23, %"class.blink::Node"* nonnull %0) #10
  br label %69

69:                                               ; preds = %67, %63, %56
  %70 = phi %"class.blink::Node"* [ %68, %67 ], [ %65, %63 ], [ %59, %56 ]
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %72, label %22

72:                                               ; preds = %28, %38, %43, %48, %61, %69, %1, %3, %8
  %73 = phi %"class.blink::Node"* [ null, %8 ], [ null, %1 ], [ null, %3 ], [ null, %69 ], [ %23, %43 ], [ %23, %38 ], [ %23, %28 ], [ %23, %48 ], [ null, %61 ]
  %74 = bitcast %"class.blink::Node"* %73 to %"class.blink::SVGSMILElement"*
  ret %"class.blink::SVGSMILElement"* %74
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGSMILElement"* @_ZN5blink9TraversalINS_14SVGSMILElementEE4NextERKNS_13ContainerNodeEPKNS_4NodeE(%"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %8 = icmp eq %"class.blink::Node"* %7, %1
  br i1 %8, label %76, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %7, %"class.blink::Node"* %1) #10
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %76, label %16

16:                                               ; preds = %13, %9, %2
  %17 = phi %"class.blink::Node"* [ %14, %13 ], [ %11, %9 ], [ %4, %2 ]
  %18 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSetTagE, align 8
  %19 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kAnimateTagE, align 8
  %21 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kAnimateMotionTagE, align 8
  %23 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names20kAnimateTransformTagE, align 8
  %25 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %24, i64 0, i32 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %73, %16
  %27 = phi %"class.blink::Node"* [ %17, %16 ], [ %74, %73 ]
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 48
  %31 = icmp eq i32 %30, 32
  br i1 %31, label %32, label %57

32:                                               ; preds = %26
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 1, i32 2
  %35 = bitcast %"class.blink::Member"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %76, label %42

42:                                               ; preds = %32
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %38, %45
  br i1 %46, label %76, label %47

47:                                               ; preds = %42
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %38, %50
  br i1 %51, label %76, label %52

52:                                               ; preds = %47
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %38, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %52, %26
  %58 = and i32 %29, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 1
  %62 = bitcast %"class.blink::Node"* %61 to %"class.blink::Node"**
  %63 = load %"class.blink::Node"*, %"class.blink::Node"** %62, align 8
  %64 = icmp eq %"class.blink::Node"* %63, null
  br i1 %64, label %65, label %73

65:                                               ; preds = %60, %57
  %66 = icmp eq %"class.blink::Node"* %27, %1
  br i1 %66, label %76, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 0, i32 5, i32 0, i32 0
  %69 = load %"class.blink::Node"*, %"class.blink::Node"** %68, align 8
  %70 = icmp eq %"class.blink::Node"* %69, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %27, %"class.blink::Node"* %1) #10
  br label %73

73:                                               ; preds = %71, %67, %60
  %74 = phi %"class.blink::Node"* [ %72, %71 ], [ %69, %67 ], [ %63, %60 ]
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %26

76:                                               ; preds = %32, %42, %47, %52, %65, %73, %6, %13
  %77 = phi %"class.blink::Node"* [ null, %13 ], [ null, %6 ], [ null, %73 ], [ %27, %47 ], [ %27, %42 ], [ %27, %32 ], [ %27, %52 ], [ null, %65 ]
  %78 = bitcast %"class.blink::Node"* %77 to %"class.blink::SVGSMILElement"*
  ret %"class.blink::SVGSMILElement"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_17SMILTimeContainerEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SMILTimeContainer"**
  %4 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %3, align 8
  %5 = ptrtoint %"class.blink::SMILTimeContainer"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %4, i64 -1, i32 10
  %20 = bitcast %"class.blink::Member.87"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SMILTimeContainer"*
  tail call void @_ZNK5blink17SMILTimeContainer5TraceEPNS_7VisitorE(%"class.blink::SMILTimeContainer"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10SVGElementEEENS_12KeyValuePairIS5_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSC_IjEEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"**
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair"* %12, %4
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %59
  %20 = phi %"struct.WTF::KeyValuePair"* [ %12, %14 ], [ %60, %59 ]
  %21 = phi %"struct.WTF::KeyValuePair"* [ %11, %14 ], [ %20, %59 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %22, align 8
  %24 = ptrtoint %"class.blink::SVGElement"* %23 to i64
  switch i64 %24, label %25 [
    i64 -1, label %59
    i64 0, label %59
  ]

25:                                               ; preds = %19
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #10
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #10
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = icmp eq %"class.blink::ThreadState"* %35, null
  br i1 %36, label %59, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %23, i64 -1, i32 4
  %39 = bitcast %"class.blink::Member.52"* %38 to %"class.blink::HeapObjectHeader"*
  %40 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %39, i64 0, i32 2
  %41 = load i16, i16* %40, align 2
  %42 = and i16 %41, 1
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %59

44:                                               ; preds = %37
  %45 = bitcast %"struct.WTF::KeyValuePair"* %20 to i64*
  store atomic i64 -1, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 -1, i32 1
  store i32 0, i32* %51, align 1
  %52 = load i32, i32* %16, align 8
  %53 = add i32 %52, 1
  %54 = and i32 %53, 2147483647
  %55 = and i32 %52, -2147483648
  %56 = or i32 %54, %55
  store i32 %56, i32* %16, align 8
  %57 = load i32, i32* %18, align 4
  %58 = add i32 %57, -1
  store i32 %58, i32* %18, align 4
  br label %59

59:                                               ; preds = %37, %19, %19, %32, %50
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 -1
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %62 = icmp ult %"struct.WTF::KeyValuePair"* %60, %61
  br i1 %62, label %63, label %19

63:                                               ; preds = %59, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13SVGSVGElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGSVGElement"*
  tail call void @_ZNK5blink13SVGSVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGSVGElement"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink13SVGSVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGSVGElement"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink18WrapWeakPersistentINS_17SMILTimeContainerEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!9 = distinct !{!9, !"_ZN5blink18WrapWeakPersistentINS_17SMILTimeContainerEEENS_14WeakPersistentIT_EEPS3_"}
!10 = !{!11, !13, !15}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_17SMILTimeContainerEEJS6_NS4_14WeakPersistentIS7_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_17SMILTimeContainerEEJS6_NS4_14WeakPersistentIS7_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS2_17SMILTimeContainerEEJS4_NS2_14WeakPersistentIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS2_17SMILTimeContainerEEJS4_NS2_14WeakPersistentIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!15 = distinct !{!15, !16, !"_ZN3WTF4BindIPFvN4base7WeakPtrIN5blink9TimerBaseEEEPNS3_17SMILTimeContainerEEJS5_NS3_14WeakPersistentIS6_EEEFvvEEENS1_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF4BindIPFvN4base7WeakPtrIN5blink9TimerBaseEEEPNS3_17SMILTimeContainerEEJS5_NS3_14WeakPersistentIS6_EEEFvvEEENS1_12OnceCallbackIT1_EEOT_DpOT0_"}
!17 = !{!"branch_weights", i32 2000, i32 1}
