; ModuleID = '../../ui/events/gesture_detection/gesture_detector.cc'
source_filename = "../../ui/events/gesture_detection/gesture_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::GestureDetector::Config" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", float, float, float, float, i8, [3 x i8], float, float, i8, [3 x i8], float, [4 x i8], %"class.base::TimeDelta", i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.ui::GestureDetector" = type { %"class.std::__1::unique_ptr", %"class.ui::GestureListener"*, %"class.ui::DoubleTapListener"*, float, float, float, float, float, float, float, float, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11", i8, i8, i32, i32, i32, float, float, float, float, i8, i8, i8, i8, i8, i8, %"class.ui::VelocityTrackerState" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::GestureDetector::TimeoutGestureHandler"* }
%"class.ui::GestureDetector::TimeoutGestureHandler" = type { %"class.ui::GestureDetector"*, [3 x %"class.base::OneShotTimer"], [3 x { i64, i64 }], [3 x %"class.base::TimeDelta"] }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.9", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.ui::MotionEvent"* }
%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.ui::VelocityTrackerState" = type { %"class.ui::VelocityTracker", i32, %"struct.ui::BitSet32", [16 x %"struct.ui::VelocityTrackerState::Velocity"] }
%"class.ui::VelocityTracker" = type { %"class.base::TimeTicks", %"struct.ui::BitSet32", i32, %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.ui::VelocityTrackerStrategy"* }
%"class.ui::VelocityTrackerStrategy" = type opaque
%"struct.ui::BitSet32" = type { i32 }
%"struct.ui::VelocityTrackerState::Velocity" = type { float, float }
%"class.ui::GestureListener" = type { i32 (...)** }
%"class.ui::DoubleTapListener" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [54 x i8] c"../../ui/events/gesture_detection/gesture_detector.cc\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"previous_up_event_\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"StartTimeout\00", align 1

@_ZN2ui15GestureDetector6ConfigC1Ev = hidden unnamed_addr alias void (%"struct.ui::GestureDetector::Config"*), void (%"struct.ui::GestureDetector::Config"*)* @_ZN2ui15GestureDetector6ConfigC2Ev
@_ZN2ui15GestureDetector6ConfigC1ERKS1_ = hidden unnamed_addr alias void (%"struct.ui::GestureDetector::Config"*, %"struct.ui::GestureDetector::Config"*), void (%"struct.ui::GestureDetector::Config"*, %"struct.ui::GestureDetector::Config"*)* @_ZN2ui15GestureDetector6ConfigC2ERKS1_
@_ZN2ui15GestureDetector6ConfigD1Ev = hidden unnamed_addr alias void (%"struct.ui::GestureDetector::Config"*), void (%"struct.ui::GestureDetector::Config"*)* @_ZN2ui15GestureDetector6ConfigD2Ev
@_ZN2ui15GestureDetectorC1ERKNS0_6ConfigEPNS_15GestureListenerEPNS_17DoubleTapListenerE = hidden unnamed_addr alias void (%"class.ui::GestureDetector"*, %"struct.ui::GestureDetector::Config"*, %"class.ui::GestureListener"*, %"class.ui::DoubleTapListener"*), void (%"class.ui::GestureDetector"*, %"struct.ui::GestureDetector::Config"*, %"class.ui::GestureListener"*, %"class.ui::DoubleTapListener"*)* @_ZN2ui15GestureDetectorC2ERKNS0_6ConfigEPNS_15GestureListenerEPNS_17DoubleTapListenerE
@_ZN2ui15GestureDetectorD1Ev = hidden unnamed_addr alias void (%"class.ui::GestureDetector"*), void (%"class.ui::GestureDetector"*)* @_ZN2ui15GestureDetectorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui15GestureDetector6ConfigC2Ev(%"struct.ui::GestureDetector::Config"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.ui::GestureDetector::Config"* %0 to <2 x i64>*
  store <2 x i64> <i64 500000, i64 180000>, <2 x i64>* %2, align 8
  %3 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 2, i32 0
  %4 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 300000, i64 40000>, <2 x i64>* %4, align 8
  %5 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 4
  %6 = bitcast float* %5 to <4 x float>*
  store <4 x float> <float 8.000000e+00, float 1.000000e+02, float 5.000000e+01, float 8.000000e+03>, <4 x float>* %6, align 8
  %7 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 8
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 10
  store float 2.000000e+01, float* %8, align 4
  %9 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 11
  store float 2.000000e+01, float* %9, align 8
  %10 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 12
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 14
  store float 3.000000e+02, float* %11, align 8
  %12 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 16, i32 0
  store i64 700000, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 17
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 18
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 19
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %0, i64 0, i32 21
  store i32 1, i32* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetector6ConfigC2ERKS1_(%"struct.ui::GestureDetector::Config"* nocapture, %"struct.ui::GestureDetector::Config"* nocapture readonly dereferenceable(96)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.ui::GestureDetector::Config"* %0 to i8*
  %4 = bitcast %"struct.ui::GestureDetector::Config"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 92, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui15GestureDetector6ConfigD2Ev(%"struct.ui::GestureDetector::Config"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetectorC2ERKNS0_6ConfigEPNS_15GestureListenerEPNS_17DoubleTapListenerE(%"class.ui::GestureDetector"*, %"struct.ui::GestureDetector::Config"* nocapture readonly dereferenceable(96), %"class.ui::GestureListener"*, %"class.ui::DoubleTapListener"*) unnamed_addr #1 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call i8* @_Znwm(i64 464) #10
  %7 = bitcast i8* %6 to %"class.ui::GestureDetector"**
  store %"class.ui::GestureDetector"* %0, %"class.ui::GestureDetector"** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %9) #11
  %10 = getelementptr inbounds i8, i8* %6, i64 136
  %11 = bitcast i8* %10 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %11) #11
  %12 = getelementptr inbounds i8, i8* %6, i64 264
  %13 = bitcast i8* %12 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %13) #11
  %14 = getelementptr i8, i8* %6, i64 440
  %15 = getelementptr inbounds i8, i8* %6, i64 448
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #11
  %16 = getelementptr inbounds i8, i8* %6, i64 392
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.ui::GestureDetector"*)* @_ZN2ui15GestureDetector18OnShowPressTimeoutEv to i64), i64 0>, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 1, i32 0
  %19 = bitcast i8* %14 to i64*
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 408
  %22 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.ui::GestureDetector"*)* @_ZN2ui15GestureDetector18OnLongPressTimeoutEv to i64), i64 0>, <2 x i64>* %22, align 8
  %23 = add i64 %20, -9223372036854775807
  %24 = icmp ult i64 %23, 2
  %25 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  br i1 %24, label %34, label %27

27:                                               ; preds = %4
  %28 = icmp slt i64 %20, 0
  %29 = select i1 %28, i64 -9223372036854775808, i64 9223372036854775807
  %30 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %26, i64 %20) #11
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = select i1 %31, i64 %29, i64 %32, !prof !2
  br label %42

34:                                               ; preds = %4
  %35 = add i64 %26, -9223372036854775807
  %36 = icmp ugt i64 %35, 1
  %37 = icmp eq i64 %26, %20
  %38 = or i1 %37, %36
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  br label %42

42:                                               ; preds = %27, %34, %39
  %43 = phi i64 [ %33, %27 ], [ %20, %34 ], [ %20, %39 ]
  %44 = getelementptr inbounds i8, i8* %6, i64 448
  %45 = bitcast i8* %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %6, i64 424
  %47 = bitcast i8* %46 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.ui::GestureDetector"*)* @_ZN2ui15GestureDetector12OnTapTimeoutEv to i64), i64 0>, <2 x i64>* %47, align 8
  %48 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 2, i32 0
  %49 = getelementptr inbounds i8, i8* %6, i64 456
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %48, align 8
  store i64 %51, i64* %50, align 8
  %52 = ptrtoint i8* %6 to i64
  %53 = bitcast %"class.ui::GestureDetector"* %0 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  store %"class.ui::GestureListener"* %2, %"class.ui::GestureListener"** %54, align 8
  %55 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 2
  store %"class.ui::DoubleTapListener"* %3, %"class.ui::DoubleTapListener"** %55, align 8
  %56 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 3
  %57 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 4
  %58 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 5
  %59 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 6
  %60 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 7
  %61 = bitcast float* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false)
  store float 1.000000e+00, float* %60, align 8
  %62 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 8
  store float 1.000000e+00, float* %62, align 4
  %63 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 9
  %64 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 10
  %65 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 11, i32 0
  %66 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 12, i32 0
  %67 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 13, i32 0
  %68 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19
  %69 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 24
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 25
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 26
  %72 = bitcast float* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 37, i1 false)
  %73 = bitcast %"class.std::__1::unique_ptr.11"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 26, i1 false)
  store i32 1, i32* %71, align 4
  %74 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 27
  %75 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 31
  %76 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 32
  %77 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 33
  %78 = bitcast float* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 18, i1 false)
  store i8 1, i8* %77, align 2
  %79 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 34
  store i8 1, i8* %79, align 1
  %80 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 35
  store i8 0, i8* %80, align 4
  %81 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 36
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 37
  %83 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 21
  %84 = load i32, i32* %83, align 8
  call void @_ZN2ui20VelocityTrackerStateC1ENS_15VelocityTracker8StrategyE(%"class.ui::VelocityTrackerState"* %82, i32 %84) #11
  %85 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 4
  %86 = load float, float* %85, align 8
  %87 = fadd float %86, 0x3FA99999A0000000
  %88 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 5
  %89 = load float, float* %88, align 4
  %90 = fadd float %89, 0x3FA99999A0000000
  %91 = fmul float %87, %87
  store float %91, float* %56, align 8
  store float %91, float* %57, align 4
  %92 = fmul float %90, %90
  store float %92, float* %58, align 8
  %93 = load i64, i64* %48, align 8
  store i64 %93, i64* %65, align 8
  %94 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 3, i32 0
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %67, align 8
  %96 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 6
  %97 = bitcast float* %96 to i32*
  %98 = load i32, i32* %97, align 8
  %99 = bitcast float* %60 to i32*
  store i32 %98, i32* %99, align 8
  %100 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 7
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = bitcast float* %62 to i32*
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 8
  %105 = load i8, i8* %104, align 8, !range !3
  store i8 %105, i8* %80, align 4
  %106 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 10
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = bitcast float* %63 to i32*
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 11
  %111 = load float, float* %110, align 4
  %112 = fcmp olt float %111, 0x3F50624DE0000000
  %113 = select i1 %112, float 0x3F50624DE0000000, float %111
  %114 = fcmp ogt float %113, 4.500000e+01
  %115 = select i1 %114, float 4.500000e+01, float %113
  %116 = fmul float %115, 0x400921FB60000000
  %117 = fdiv float %116, 1.800000e+02
  %118 = call float @tanf(float %117) #11
  %119 = fdiv float 1.000000e+00, %118
  store float %119, float* %64, align 4
  %120 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 12
  %121 = load i8, i8* %120, align 4, !range !3
  store i8 %121, i8* %81, align 1
  %122 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 14
  %123 = load float, float* %122, align 8
  %124 = fmul float %123, %123
  store float %124, float* %59, align 4
  %125 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 16, i32 0
  %126 = load i64, i64* %125, align 8
  store i64 %126, i64* %66, align 8
  %127 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 17
  %128 = load i32, i32* %127, align 8
  store i32 %128, i32* %71, align 4
  %129 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 18
  %130 = load i8, i8* %129, align 4, !range !3
  store i8 %130, i8* %75, align 8
  %131 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 19
  %132 = load i8, i8* %131, align 1, !range !3
  store i8 %132, i8* %76, align 1
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN2ui20VelocityTrackerStateC1ENS_15VelocityTracker8StrategyE(%"class.ui::VelocityTrackerState"*, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetector4InitERKNS0_6ConfigE(%"class.ui::GestureDetector"* nocapture, %"struct.ui::GestureDetector::Config"* nocapture readonly dereferenceable(96)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 4
  %4 = load float, float* %3, align 8
  %5 = fadd float %4, 0x3FA99999A0000000
  %6 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 5
  %7 = load float, float* %6, align 4
  %8 = fadd float %7, 0x3FA99999A0000000
  %9 = fmul float %5, %5
  %10 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 3
  store float %9, float* %10, align 8
  %11 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 4
  store float %9, float* %11, align 4
  %12 = fmul float %8, %8
  %13 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 5
  store float %12, float* %13, align 8
  %14 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 11, i32 0
  %16 = load i64, i64* %14, align 8
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 13, i32 0
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 6
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 7
  %24 = bitcast float* %23 to i32*
  store i32 %22, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 7
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 8
  %29 = bitcast float* %28 to i32*
  store i32 %27, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 8
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 35
  store i8 %31, i8* %32, align 4
  %33 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 10
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 9
  %37 = bitcast float* %36 to i32*
  store i32 %35, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 11
  %39 = load float, float* %38, align 4
  %40 = fcmp olt float %39, 0x3F50624DE0000000
  %41 = select i1 %40, float 0x3F50624DE0000000, float %39
  %42 = fcmp ogt float %41, 4.500000e+01
  %43 = select i1 %42, float 4.500000e+01, float %41
  %44 = fmul float %43, 0x400921FB60000000
  %45 = fdiv float %44, 1.800000e+02
  %46 = tail call float @tanf(float %45) #11
  %47 = fdiv float 1.000000e+00, %46
  %48 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 10
  store float %47, float* %48, align 4
  %49 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 12
  %50 = load i8, i8* %49, align 4, !range !3
  %51 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 36
  store i8 %50, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 14
  %53 = load float, float* %52, align 8
  %54 = fmul float %53, %53
  %55 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 6
  store float %54, float* %55, align 4
  %56 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 16, i32 0
  %57 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 12, i32 0
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 17
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 26
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 18
  %63 = load i8, i8* %62, align 4, !range !3
  %64 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 31
  store i8 %63, i8* %64, align 8
  %65 = getelementptr inbounds %"struct.ui::GestureDetector::Config", %"struct.ui::GestureDetector::Config"* %1, i64 0, i32 19
  %66 = load i8, i8* %65, align 1, !range !3
  %67 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 32
  store i8 %66, i8* %67, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetectorD2Ev(%"class.ui::GestureDetector"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 37
  tail call void @_ZN2ui20VelocityTrackerStateD1Ev(%"class.ui::VelocityTrackerState"* %2) #11
  %3 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %4 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %3, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %3, align 8
  %5 = icmp eq %"class.ui::MotionEvent"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::MotionEvent"* %4 to void (%"class.ui::MotionEvent"*)***
  %8 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %8, i64 1
  %10 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %9, align 8
  tail call void %10(%"class.ui::MotionEvent"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %13 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %12, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %12, align 8
  %14 = icmp eq %"class.ui::MotionEvent"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.ui::MotionEvent"* %13 to void (%"class.ui::MotionEvent"*)***
  %17 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %17, i64 1
  %19 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %18, align 8
  tail call void %19(%"class.ui::MotionEvent"* nonnull %13) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %22 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %21, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %21, align 8
  %23 = icmp eq %"class.ui::MotionEvent"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.ui::MotionEvent"* %22 to void (%"class.ui::MotionEvent"*)***
  %26 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %26, i64 1
  %28 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %27, align 8
  tail call void %28(%"class.ui::MotionEvent"* nonnull %22) #11
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %30, align 8
  store %"class.ui::GestureDetector::TimeoutGestureHandler"* null, %"class.ui::GestureDetector::TimeoutGestureHandler"** %30, align 8
  %32 = icmp eq %"class.ui::GestureDetector::TimeoutGestureHandler"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %31, i64 0, i32 1, i64 0, i32 0
  %35 = bitcast %"class.base::internal::TimerBase"* %34 to void (%"class.base::internal::TimerBase"*)***
  %36 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %36, i64 3
  %38 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %37, align 8
  tail call void %38(%"class.base::internal::TimerBase"* %34) #11
  %39 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %31, i64 0, i32 1, i64 1, i32 0
  %40 = bitcast %"class.base::internal::TimerBase"* %39 to void (%"class.base::internal::TimerBase"*)***
  %41 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %41, i64 3
  %43 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %42, align 8
  tail call void %43(%"class.base::internal::TimerBase"* %39) #11
  %44 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %31, i64 0, i32 1, i64 2, i32 0
  %45 = bitcast %"class.base::internal::TimerBase"* %44 to void (%"class.base::internal::TimerBase"*)***
  %46 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %46, i64 3
  %48 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %47, align 8
  tail call void %48(%"class.base::internal::TimerBase"* %44) #11
  %49 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %31, i64 0, i32 1, i64 2
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %49) #11
  %50 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %31, i64 0, i32 1, i64 1
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %50) #11
  %51 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %31, i64 0, i32 1, i64 0
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %51) #11
  %52 = bitcast %"class.ui::GestureDetector::TimeoutGestureHandler"* %31 to i8*
  tail call void @_ZdlPv(i8* %52) #10
  br label %53

53:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui20VelocityTrackerStateD1Ev(%"class.ui::VelocityTrackerState"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui15GestureDetector12OnTouchEventERKNS_11MotionEventEb(%"class.ui::GestureDetector"*, %"class.ui::MotionEvent"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*)***
  %11 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %11, i64 3
  %13 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %12, align 8
  %14 = tail call i32 %13(%"class.ui::MotionEvent"* %1) #11
  %15 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 37
  tail call void @_ZN2ui20VelocityTrackerState11AddMovementERKNS_11MotionEventE(%"class.ui::VelocityTrackerState"* %15, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  %16 = icmp eq i32 %14, 6
  br i1 %16, label %17, label %22

17:                                               ; preds = %3
  %18 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %10, align 8
  %19 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %18, i64 4
  %20 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %19, align 8
  %21 = tail call i32 %20(%"class.ui::MotionEvent"* %1) #11
  br label %22

22:                                               ; preds = %3, %17
  %23 = phi i32 [ %21, %17 ], [ -1, %3 ]
  %24 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*)***
  %25 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %25, i64 5
  %27 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %26, align 8
  %28 = tail call i64 %27(%"class.ui::MotionEvent"* %1) #11
  %29 = trunc i64 %28 to i32
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %22
  %32 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %33 = zext i32 %23 to i64
  %34 = and i64 %28, 4294967295
  br label %43

35:                                               ; preds = %59, %22
  %36 = phi <2 x float> [ zeroinitializer, %22 ], [ %60, %59 ]
  %37 = zext i1 %16 to i32
  %38 = sub i32 %29, %37
  %39 = sitofp i32 %38 to float
  %40 = insertelement <2 x float> undef, float %39, i32 0
  %41 = shufflevector <2 x float> %40, <2 x float> undef, <2 x i32> zeroinitializer
  %42 = fdiv <2 x float> %36, %41
  switch i32 %14, label %957 [
    i32 4, label %919
    i32 2, label %757
    i32 3, label %541
    i32 1, label %310
    i32 6, label %167
    i32 5, label %63
  ]

43:                                               ; preds = %59, %31
  %44 = phi i64 [ 0, %31 ], [ %61, %59 ]
  %45 = phi <2 x float> [ zeroinitializer, %31 ], [ %60, %59 ]
  %46 = icmp eq i64 %44, %33
  br i1 %46, label %59, label %47

47:                                               ; preds = %43
  %48 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %32, align 8
  %49 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %48, i64 7
  %50 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %49, align 8
  %51 = tail call float %50(%"class.ui::MotionEvent"* %1, i64 %44) #11
  %52 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %32, align 8
  %53 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %52, i64 8
  %54 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %53, align 8
  %55 = tail call float %54(%"class.ui::MotionEvent"* %1, i64 %44) #11
  %56 = insertelement <2 x float> undef, float %51, i32 0
  %57 = insertelement <2 x float> %56, float %55, i32 1
  %58 = fadd <2 x float> %45, %57
  br label %59

59:                                               ; preds = %43, %47
  %60 = phi <2 x float> [ %45, %43 ], [ %58, %47 ]
  %61 = add nuw nsw i64 %44, 1
  %62 = icmp eq i64 %61, %34
  br i1 %62, label %35, label %43

63:                                               ; preds = %35
  %64 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 27
  %65 = extractelement <2 x float> %42, i32 0
  store float %65, float* %64, align 8
  %66 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 29
  store float %65, float* %66, align 8
  %67 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 28
  %68 = extractelement <2 x float> %42, i32 1
  store float %68, float* %67, align 4
  %69 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 30
  store float %68, float* %69, align 4
  %70 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %70, align 8
  %72 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %71, i64 0, i32 1, i64 0, i32 0
  %73 = bitcast %"class.base::internal::TimerBase"* %72 to void (%"class.base::internal::TimerBase"*)***
  %74 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %74, i64 3
  %76 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %75, align 8
  tail call void %76(%"class.base::internal::TimerBase"* %72) #11
  %77 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %71, i64 0, i32 1, i64 1, i32 0
  %78 = bitcast %"class.base::internal::TimerBase"* %77 to void (%"class.base::internal::TimerBase"*)***
  %79 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %79, i64 3
  %81 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %80, align 8
  tail call void %81(%"class.base::internal::TimerBase"* %77) #11
  %82 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %71, i64 0, i32 1, i64 2, i32 0
  %83 = bitcast %"class.base::internal::TimerBase"* %82 to void (%"class.base::internal::TimerBase"*)***
  %84 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %84, i64 3
  %86 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %85, align 8
  tail call void %86(%"class.base::internal::TimerBase"* %82) #11
  %87 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 22
  store i8 0, i8* %87, align 8
  %88 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 17
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %89, align 1
  %90 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 23
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 25
  store i32 0, i32* %91, align 8
  %92 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 24
  %93 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %24, align 8
  %94 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %93, i64 5
  %95 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %94, align 8
  %96 = tail call i64 %95(%"class.ui::MotionEvent"* %1) #11
  %97 = trunc i64 %96 to i32
  %98 = load i32, i32* %92, align 4
  %99 = icmp slt i32 %98, %97
  %100 = select i1 %99, i32 %97, i32 %98
  store i32 %100, i32* %92, align 4
  %101 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %24, align 8
  %102 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %101, i64 5
  %103 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %102, align 8
  %104 = tail call i64 %103(%"class.ui::MotionEvent"* %1) #11
  %105 = icmp eq i64 %104, 2
  br i1 %105, label %106, label %119

106:                                              ; preds = %63
  %107 = tail call %"class.ui::MotionEvent"* @_ZNK2ui11MotionEvent5CloneEv(%"class.ui::MotionEvent"* %1) #11
  %108 = ptrtoint %"class.ui::MotionEvent"* %107 to i64
  %109 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 21
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %110, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.11"* %109 to i64*
  store i64 %108, i64* %112, align 8
  %113 = icmp eq %"class.ui::MotionEvent"* %111, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %106
  %115 = bitcast %"class.ui::MotionEvent"* %111 to void (%"class.ui::MotionEvent"*)***
  %116 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %116, i64 1
  %118 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %117, align 8
  tail call void %118(%"class.ui::MotionEvent"* nonnull %111) #11
  br label %119

119:                                              ; preds = %106, %114, %63
  %120 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 18
  %121 = load i8, i8* %120, align 4, !range !3
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %957, label %123

123:                                              ; preds = %119
  %124 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %10, align 8
  %125 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %124, i64 4
  %126 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %125, align 8
  %127 = tail call i32 %126(%"class.ui::MotionEvent"* %1) #11
  %128 = sext i32 %127 to i64
  %129 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %130 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %129, align 8
  %131 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %130, i64 7
  %132 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %131, align 8
  %133 = tail call float %132(%"class.ui::MotionEvent"* %1, i64 %128) #11
  %134 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %135 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %134, align 8
  %136 = bitcast %"class.ui::MotionEvent"* %135 to float (%"class.ui::MotionEvent"*, i64)***
  %137 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %136, align 8
  %138 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %137, i64 7
  %139 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %138, align 8
  %140 = tail call float %139(%"class.ui::MotionEvent"* %135, i64 0) #11
  %141 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %129, align 8
  %142 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %141, i64 8
  %143 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %142, align 8
  %144 = tail call float %143(%"class.ui::MotionEvent"* %1, i64 %128) #11
  %145 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %134, align 8
  %146 = bitcast %"class.ui::MotionEvent"* %145 to float (%"class.ui::MotionEvent"*, i64)***
  %147 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %146, align 8
  %148 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %147, i64 8
  %149 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %148, align 8
  %150 = tail call float %149(%"class.ui::MotionEvent"* %145, i64 0) #11
  %151 = insertelement <2 x float> undef, float %133, i32 0
  %152 = insertelement <2 x float> %151, float %144, i32 1
  %153 = insertelement <2 x float> undef, float %140, i32 0
  %154 = insertelement <2 x float> %153, float %150, i32 1
  %155 = fsub <2 x float> %152, %154
  %156 = load i32, i32* %92, align 4
  %157 = icmp sgt i32 %156, 2
  br i1 %157, label %166, label %158

158:                                              ; preds = %123
  %159 = fmul <2 x float> %155, %155
  %160 = extractelement <2 x float> %159, i32 0
  %161 = extractelement <2 x float> %159, i32 1
  %162 = fadd float %160, %161
  %163 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 6
  %164 = load float, float* %163, align 4
  %165 = fcmp ult float %162, %164
  br i1 %165, label %957, label %166

166:                                              ; preds = %158, %123
  store i8 0, i8* %120, align 4
  br label %957

167:                                              ; preds = %35
  %168 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 27
  %169 = extractelement <2 x float> %42, i32 0
  store float %169, float* %168, align 8
  %170 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 29
  store float %169, float* %170, align 8
  %171 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 28
  %172 = extractelement <2 x float> %42, i32 1
  store float %172, float* %171, align 4
  %173 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 30
  store float %172, float* %173, align 4
  %174 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 8
  %175 = load float, float* %174, align 4
  tail call void @_ZN2ui20VelocityTrackerState22ComputeCurrentVelocityEif(%"class.ui::VelocityTrackerState"* %15, i32 1000, float %175) #11
  %176 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %10, align 8
  %177 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %176, i64 4
  %178 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %177, align 8
  %179 = tail call i32 %178(%"class.ui::MotionEvent"* %1) #11
  %180 = sext i32 %179 to i64
  %181 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %182 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %181, align 8
  %183 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %182, i64 6
  %184 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %183, align 8
  %185 = tail call i32 %184(%"class.ui::MotionEvent"* %1, i64 %180) #11
  %186 = tail call float @_ZNK2ui20VelocityTrackerState12GetXVelocityEi(%"class.ui::VelocityTrackerState"* %15, i32 %185) #11
  %187 = tail call float @_ZNK2ui20VelocityTrackerState12GetYVelocityEi(%"class.ui::VelocityTrackerState"* %15, i32 %185) #11
  %188 = insertelement <2 x float> undef, float %186, i32 0
  %189 = insertelement <2 x float> %188, float %187, i32 1
  br i1 %30, label %190, label %217

190:                                              ; preds = %167
  %191 = zext i32 %179 to i64
  %192 = and i64 %28, 4294967295
  br label %193

193:                                              ; preds = %213, %190
  %194 = phi i64 [ 0, %190 ], [ %215, %213 ]
  %195 = phi <2 x float> [ %189, %190 ], [ %214, %213 ]
  %196 = icmp eq i64 %194, %191
  br i1 %196, label %213, label %197

197:                                              ; preds = %193
  %198 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %181, align 8
  %199 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %198, i64 6
  %200 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %199, align 8
  %201 = tail call i32 %200(%"class.ui::MotionEvent"* %1, i64 %194) #11
  %202 = tail call float @_ZNK2ui20VelocityTrackerState12GetXVelocityEi(%"class.ui::VelocityTrackerState"* %15, i32 %201) #11
  %203 = tail call float @_ZNK2ui20VelocityTrackerState12GetYVelocityEi(%"class.ui::VelocityTrackerState"* %15, i32 %201) #11
  %204 = fmul float %186, %202
  %205 = fmul float %187, %203
  %206 = fadd float %204, %205
  %207 = fcmp olt float %206, 0.000000e+00
  br i1 %207, label %212, label %208

208:                                              ; preds = %197
  %209 = insertelement <2 x float> undef, float %202, i32 0
  %210 = insertelement <2 x float> %209, float %203, i32 1
  %211 = fadd <2 x float> %195, %210
  br label %213

212:                                              ; preds = %197
  tail call void @_ZN2ui20VelocityTrackerState5ClearEv(%"class.ui::VelocityTrackerState"* %15) #11
  br label %217

213:                                              ; preds = %208, %193
  %214 = phi <2 x float> [ %195, %193 ], [ %211, %208 ]
  %215 = add nuw nsw i64 %194, 1
  %216 = icmp eq i64 %215, %192
  br i1 %216, label %217, label %193

217:                                              ; preds = %213, %167, %212
  %218 = phi <2 x float> [ zeroinitializer, %212 ], [ %189, %167 ], [ %214, %213 ]
  %219 = sitofp i32 %29 to float
  %220 = insertelement <2 x float> undef, float %219, i32 0
  %221 = shufflevector <2 x float> %220, <2 x float> undef, <2 x i32> zeroinitializer
  %222 = fdiv <2 x float> %218, %221
  %223 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 35
  %224 = load i8, i8* %223, align 4, !range !3
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %268, label %226

226:                                              ; preds = %217
  %227 = extractelement <2 x float> %222, i32 0
  %228 = fcmp une float %227, 0.000000e+00
  %229 = extractelement <2 x float> %222, i32 1
  %230 = fcmp une float %229, 0.000000e+00
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %268

232:                                              ; preds = %226
  %233 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %222)
  %234 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 9
  %235 = load float, float* %234, align 8
  %236 = insertelement <2 x float> undef, float %235, i32 0
  %237 = shufflevector <2 x float> %236, <2 x float> undef, <2 x i32> zeroinitializer
  %238 = fcmp olt <2 x float> %233, %237
  %239 = select <2 x i1> %238, <2 x float> zeroinitializer, <2 x float> %233
  %240 = extractelement <2 x float> %239, i32 0
  %241 = extractelement <2 x float> %239, i32 1
  %242 = fcmp ogt float %240, %241
  %243 = select i1 %242, float %241, float %240
  %244 = select i1 %242, float %241, float %240
  %245 = select i1 %242, float %240, float %241
  %246 = fcmp olt float %243, 0x3F50624DE0000000
  %247 = select i1 %246, float 0x3F50624DE0000000, float %244
  %248 = fdiv float %245, %247
  %249 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 10
  %250 = load float, float* %249, align 4
  %251 = fcmp olt float %248, %250
  br i1 %251, label %268, label %252

252:                                              ; preds = %232
  %253 = extractelement <2 x i1> %238, i32 0
  %254 = select i1 %253, float 0.000000e+00, float %227
  %255 = select i1 %242, float %254, float 0.000000e+00
  %256 = extractelement <2 x i1> %238, i32 1
  %257 = or i1 %256, %242
  %258 = select i1 %257, float 0.000000e+00, float %229
  %259 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %260 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %259, align 8
  %261 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %262 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %261, align 8
  %263 = bitcast %"class.ui::GestureListener"* %260 to i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)***
  %264 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)**, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*** %263, align 8
  %265 = getelementptr inbounds i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %264, i64 8
  %266 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %265, align 8
  %267 = tail call zeroext i1 %266(%"class.ui::GestureListener"* %260, %"class.ui::MotionEvent"* dereferenceable(8) %262, %"class.ui::MotionEvent"* dereferenceable(8) %1, float %255, float %258) #11
  br label %268

268:                                              ; preds = %217, %226, %232, %252
  %269 = phi i1 [ false, %217 ], [ false, %226 ], [ %267, %252 ], [ false, %232 ]
  %270 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 18
  %271 = load i8, i8* %270, align 4, !range !3
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %308, label %273

273:                                              ; preds = %268
  %274 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %24, align 8
  %275 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %274, i64 5
  %276 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %275, align 8
  %277 = tail call i64 %276(%"class.ui::MotionEvent"* %1) #11
  %278 = icmp eq i64 %277, 2
  br i1 %278, label %279, label %308

279:                                              ; preds = %273
  %280 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %281 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %280, align 8
  %282 = icmp eq %"class.ui::MotionEvent"* %281, null
  br i1 %282, label %308, label %283

283:                                              ; preds = %279
  %284 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %24, align 8
  %285 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %284, i64 22
  %286 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %285, align 8
  %287 = tail call i64 %286(%"class.ui::MotionEvent"* %1) #11
  %288 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %280, align 8
  %289 = bitcast %"class.ui::MotionEvent"* %288 to i64 (%"class.ui::MotionEvent"*)***
  %290 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %289, align 8
  %291 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %290, i64 22
  %292 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %291, align 8
  %293 = tail call i64 %292(%"class.ui::MotionEvent"* %288) #11
  %294 = sub nsw i64 %287, %293
  %295 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 12, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = icmp sgt i64 %294, %296
  br i1 %297, label %308, label %298

298:                                              ; preds = %283
  %299 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %300 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %299, align 8
  %301 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %302 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %301, align 8
  %303 = bitcast %"class.ui::GestureListener"* %300 to i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*)***
  %304 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*)*** %303, align 8
  %305 = getelementptr inbounds i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*)** %304, i64 9
  %306 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*)** %305, align 8
  %307 = tail call zeroext i1 %306(%"class.ui::GestureListener"* %300, %"class.ui::MotionEvent"* dereferenceable(8) %302, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  br label %308

308:                                              ; preds = %283, %279, %268, %273, %298
  %309 = phi i1 [ %307, %298 ], [ %269, %283 ], [ %269, %279 ], [ %269, %273 ], [ %269, %268 ]
  store i8 0, i8* %270, align 4
  br label %957

310:                                              ; preds = %35
  %311 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %311, i64 0, i32 0, i32 0, i32 0
  %313 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %312, align 8
  %314 = icmp eq %"class.ui::MotionEvent"* %313, null
  br i1 %314, label %377, label %315

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %317 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %316, align 8
  %318 = icmp eq %"class.ui::MotionEvent"* %317, null
  br i1 %318, label %377, label %319

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 17
  %321 = load i8, i8* %320, align 1, !range !3
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %377, label %323

323:                                              ; preds = %319
  %324 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %24, align 8
  %325 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %324, i64 22
  %326 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %325, align 8
  %327 = tail call i64 %326(%"class.ui::MotionEvent"* %1) #11
  %328 = bitcast %"class.ui::MotionEvent"* %317 to i64 (%"class.ui::MotionEvent"*)***
  %329 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %328, align 8
  %330 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %329, i64 22
  %331 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %330, align 8
  %332 = tail call i64 %331(%"class.ui::MotionEvent"* nonnull %317) #11
  %333 = sub nsw i64 %327, %332
  %334 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 11, i32 0
  %335 = load i64, i64* %334, align 8
  %336 = icmp sgt i64 %333, %335
  br i1 %336, label %377, label %337

337:                                              ; preds = %323
  br i1 %2, label %338, label %346

338:                                              ; preds = %337
  %339 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 2
  %340 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %339, align 8
  %341 = icmp eq %"class.ui::DoubleTapListener"* %340, null
  br i1 %341, label %346, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 13, i32 0
  %344 = load i64, i64* %343, align 8
  %345 = icmp slt i64 %333, %344
  br i1 %345, label %377, label %346

346:                                              ; preds = %342, %338, %337
  %347 = bitcast %"class.ui::MotionEvent"* %313 to float (%"class.ui::MotionEvent"*, i64)***
  %348 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %347, align 8
  %349 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %348, i64 7
  %350 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %349, align 8
  %351 = tail call float %350(%"class.ui::MotionEvent"* nonnull %313, i64 0) #11
  %352 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %353 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %352, align 8
  %354 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %353, i64 7
  %355 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %354, align 8
  %356 = tail call float %355(%"class.ui::MotionEvent"* %1, i64 0) #11
  %357 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %347, align 8
  %358 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %357, i64 8
  %359 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %358, align 8
  %360 = tail call float %359(%"class.ui::MotionEvent"* nonnull %313, i64 0) #11
  %361 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %352, align 8
  %362 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %361, i64 8
  %363 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %362, align 8
  %364 = tail call float %363(%"class.ui::MotionEvent"* %1, i64 0) #11
  %365 = insertelement <2 x float> undef, float %351, i32 0
  %366 = insertelement <2 x float> %365, float %360, i32 1
  %367 = insertelement <2 x float> undef, float %356, i32 0
  %368 = insertelement <2 x float> %367, float %364, i32 1
  %369 = fsub <2 x float> %366, %368
  %370 = fmul <2 x float> %369, %369
  %371 = extractelement <2 x float> %370, i32 0
  %372 = extractelement <2 x float> %370, i32 1
  %373 = fadd float %371, %372
  %374 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 5
  %375 = load float, float* %374, align 8
  %376 = fcmp olt float %373, %375
  br label %377

377:                                              ; preds = %315, %310, %346, %342, %323, %319
  %378 = phi i1 [ false, %315 ], [ false, %310 ], [ false, %319 ], [ %376, %346 ], [ false, %323 ], [ false, %342 ]
  %379 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 2
  %380 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %379, align 8
  %381 = icmp eq %"class.ui::DoubleTapListener"* %380, null
  %382 = xor i1 %2, true
  %383 = or i1 %381, %382
  %384 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 23
  br i1 %383, label %437, label %385

385:                                              ; preds = %377
  store i8 0, i8* %384, align 1
  %386 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %387 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %386, align 8
  %388 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %387, i64 0, i32 1, i64 2, i32 0
  %389 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %388) #11
  br i1 %389, label %390, label %413

390:                                              ; preds = %385
  %391 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %386, align 8
  %392 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %391, i64 0, i32 1, i64 2, i32 0
  %393 = bitcast %"class.base::internal::TimerBase"* %392 to void (%"class.base::internal::TimerBase"*)***
  %394 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %394, i64 3
  %396 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %395, align 8
  tail call void %396(%"class.base::internal::TimerBase"* %392) #11
  br i1 %378, label %397, label %413

397:                                              ; preds = %390
  %398 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 22
  store i8 1, i8* %398, align 8
  %399 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %379, align 8
  %400 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %312, align 8
  %401 = bitcast %"class.ui::DoubleTapListener"* %399 to i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)***
  %402 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*** %401, align 8
  %403 = getelementptr inbounds i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %402, i64 3
  %404 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %403, align 8
  %405 = tail call zeroext i1 %404(%"class.ui::DoubleTapListener"* %399, %"class.ui::MotionEvent"* dereferenceable(8) %400) #11
  %406 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %379, align 8
  %407 = bitcast %"class.ui::DoubleTapListener"* %406 to i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)***
  %408 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*** %407, align 8
  %409 = getelementptr inbounds i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %408, i64 4
  %410 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %409, align 8
  %411 = tail call zeroext i1 %410(%"class.ui::DoubleTapListener"* %406, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  %412 = or i1 %405, %411
  br label %439

413:                                              ; preds = %390, %385
  %414 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %386, align 8
  %415 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %414, i64 0, i32 1, i64 2
  %416 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %416) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 95) #11
  %417 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %414, i64 0, i32 3, i64 2, i32 0
  %418 = load i64, i64* %417, align 8
  %419 = bitcast %"class.ui::GestureDetector::TimeoutGestureHandler"* %414 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %414, i64 0, i32 2, i64 2, i32 0
  %422 = bitcast i64* %421 to <2 x i64>*
  %423 = load <2 x i64>, <2 x i64>* %422, align 8
  %424 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %424) #11
  %425 = call i8* @_Znwm(i64 56) #10, !noalias !4
  %426 = bitcast i8* %425 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %426, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !4
  %427 = getelementptr inbounds i8, i8* %425, i64 32
  %428 = bitcast i8* %427 to <2 x i64>*
  store <2 x i64> %423, <2 x i64>* %428, align 8, !noalias !4
  %429 = getelementptr inbounds i8, i8* %425, i64 48
  %430 = bitcast i8* %429 to i64*
  store i64 %420, i64* %430, align 8, !noalias !4
  %431 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %425, i8** %431, align 8, !alias.scope !4
  %432 = bitcast %"class.base::OneShotTimer"* %415 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %433 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %432, align 8
  %434 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %433, i64 7
  %435 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %434, align 8
  call void %435(%"class.base::OneShotTimer"* %415, %"class.base::Location"* nonnull dereferenceable(32) %9, i64 %418, %"class.base::OnceCallback"* nonnull %8) #11
  %436 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %436) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %424) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %416) #11
  br label %439

437:                                              ; preds = %377
  %438 = zext i1 %378 to i8
  store i8 %438, i8* %384, align 1
  br label %439

439:                                              ; preds = %397, %413, %437
  %440 = phi i1 [ false, %437 ], [ %412, %397 ], [ false, %413 ]
  %441 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 27
  %442 = extractelement <2 x float> %42, i32 0
  store float %442, float* %441, align 8
  %443 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 29
  store float %442, float* %443, align 8
  %444 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 28
  %445 = extractelement <2 x float> %42, i32 1
  store float %445, float* %444, align 4
  %446 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 30
  store float %445, float* %446, align 4
  %447 = call %"class.ui::MotionEvent"* @_ZNK2ui11MotionEvent5CloneEv(%"class.ui::MotionEvent"* %1) #11
  %448 = ptrtoint %"class.ui::MotionEvent"* %447 to i64
  %449 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %312, align 8
  %450 = bitcast %"class.std::__1::unique_ptr.11"* %311 to i64*
  store i64 %448, i64* %450, align 8
  %451 = icmp eq %"class.ui::MotionEvent"* %449, null
  br i1 %451, label %457, label %452

452:                                              ; preds = %439
  %453 = bitcast %"class.ui::MotionEvent"* %449 to void (%"class.ui::MotionEvent"*)***
  %454 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %453, align 8
  %455 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %454, i64 1
  %456 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %455, align 8
  call void %456(%"class.ui::MotionEvent"* nonnull %449) #11
  br label %457

457:                                              ; preds = %452, %439
  %458 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %459 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %458, align 8
  store %"class.ui::MotionEvent"* null, %"class.ui::MotionEvent"** %458, align 8
  %460 = icmp eq %"class.ui::MotionEvent"* %459, null
  br i1 %460, label %466, label %461

461:                                              ; preds = %457
  %462 = bitcast %"class.ui::MotionEvent"* %459 to void (%"class.ui::MotionEvent"*)***
  %463 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %462, align 8
  %464 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %463, i64 1
  %465 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %464, align 8
  call void %465(%"class.ui::MotionEvent"* nonnull %459) #11
  br label %466

466:                                              ; preds = %457, %461
  %467 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 16
  store i8 1, i8* %467, align 2
  %468 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 17
  store i8 1, i8* %468, align 1
  %469 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 14
  store i8 1, i8* %469, align 8
  %470 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %470, align 1
  %471 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 36
  %472 = load i8, i8* %471, align 1, !range !3
  %473 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 18
  store i8 %472, i8* %473, align 4
  %474 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 24
  store i32 1, i32* %474, align 4
  %475 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 34
  %476 = load i8, i8* %475, align 1, !range !3
  %477 = icmp eq i8 %476, 0
  br i1 %477, label %503, label %478

478:                                              ; preds = %466
  %479 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %480 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %479, align 8
  %481 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %480, i64 0, i32 1, i64 0
  %482 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %482) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 95) #11
  %483 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %480, i64 0, i32 3, i64 0, i32 0
  %484 = load i64, i64* %483, align 8
  %485 = bitcast %"class.ui::GestureDetector::TimeoutGestureHandler"* %480 to i64*
  %486 = load i64, i64* %485, align 8
  %487 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %480, i64 0, i32 2, i64 0, i32 0
  %488 = bitcast i64* %487 to <2 x i64>*
  %489 = load <2 x i64>, <2 x i64>* %488, align 8
  %490 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %490) #11
  %491 = call i8* @_Znwm(i64 56) #10, !noalias !9
  %492 = bitcast i8* %491 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %492, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !9
  %493 = getelementptr inbounds i8, i8* %491, i64 32
  %494 = bitcast i8* %493 to <2 x i64>*
  store <2 x i64> %489, <2 x i64>* %494, align 8, !noalias !9
  %495 = getelementptr inbounds i8, i8* %491, i64 48
  %496 = bitcast i8* %495 to i64*
  store i64 %486, i64* %496, align 8, !noalias !9
  %497 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %491, i8** %497, align 8, !alias.scope !9
  %498 = bitcast %"class.base::OneShotTimer"* %481 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %499 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %498, align 8
  %500 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %499, i64 7
  %501 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %500, align 8
  call void %501(%"class.base::OneShotTimer"* %481, %"class.base::Location"* nonnull dereferenceable(32) %7, i64 %484, %"class.base::OnceCallback"* nonnull %6) #11
  %502 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %502) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %490) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %482) #11
  br label %503

503:                                              ; preds = %466, %478
  %504 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 33
  %505 = load i8, i8* %504, align 2, !range !3
  %506 = icmp eq i8 %505, 0
  br i1 %506, label %532, label %507

507:                                              ; preds = %503
  %508 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %509 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %508, align 8
  %510 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %509, i64 0, i32 1, i64 1
  %511 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %511) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 95) #11
  %512 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %509, i64 0, i32 3, i64 1, i32 0
  %513 = load i64, i64* %512, align 8
  %514 = bitcast %"class.ui::GestureDetector::TimeoutGestureHandler"* %509 to i64*
  %515 = load i64, i64* %514, align 8
  %516 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %509, i64 0, i32 2, i64 1, i32 0
  %517 = bitcast i64* %516 to <2 x i64>*
  %518 = load <2 x i64>, <2 x i64>* %517, align 8
  %519 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %519) #11
  %520 = call i8* @_Znwm(i64 56) #10, !noalias !14
  %521 = bitcast i8* %520 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %521, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !14
  %522 = getelementptr inbounds i8, i8* %520, i64 32
  %523 = bitcast i8* %522 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %523, align 8, !noalias !14
  %524 = getelementptr inbounds i8, i8* %520, i64 48
  %525 = bitcast i8* %524 to i64*
  store i64 %515, i64* %525, align 8, !noalias !14
  %526 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %520, i8** %526, align 8, !alias.scope !14
  %527 = bitcast %"class.base::OneShotTimer"* %510 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %528 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %527, align 8
  %529 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %528, i64 7
  %530 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %529, align 8
  call void %530(%"class.base::OneShotTimer"* %510, %"class.base::Location"* nonnull dereferenceable(32) %5, i64 %513, %"class.base::OnceCallback"* nonnull %4) #11
  %531 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %531) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %519) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %511) #11
  br label %532

532:                                              ; preds = %503, %507
  %533 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %534 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %533, align 8
  %535 = bitcast %"class.ui::GestureListener"* %534 to i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)***
  %536 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*** %535, align 8
  %537 = getelementptr inbounds i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %536, i64 2
  %538 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %537, align 8
  %539 = call zeroext i1 %538(%"class.ui::GestureListener"* %534, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  %540 = or i1 %440, %539
  br label %957

541:                                              ; preds = %35
  %542 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 27
  %543 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 28
  %544 = bitcast float* %542 to <2 x float>*
  %545 = load <2 x float>, <2 x float>* %544, align 8
  %546 = fsub <2 x float> %545, %42
  %547 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 22
  %548 = load i8, i8* %547, align 8, !range !3
  %549 = icmp eq i8 %548, 0
  br i1 %549, label %558, label %550

550:                                              ; preds = %541
  %551 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 2
  %552 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %551, align 8
  %553 = bitcast %"class.ui::DoubleTapListener"* %552 to i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)***
  %554 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*** %553, align 8
  %555 = getelementptr inbounds i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %554, i64 4
  %556 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %555, align 8
  %557 = tail call zeroext i1 %556(%"class.ui::DoubleTapListener"* %552, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  br label %650

558:                                              ; preds = %541
  %559 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 16
  %560 = load i8, i8* %559, align 2, !range !3
  %561 = icmp eq i8 %560, 0
  br i1 %561, label %620, label %562

562:                                              ; preds = %558
  %563 = tail call zeroext i1 @_ZN2ui15GestureDetector17IsWithinTouchSlopERKNS_11MotionEventE(%"class.ui::GestureDetector"* %0, %"class.ui::MotionEvent"* dereferenceable(8) %1)
  br i1 %563, label %605, label %564

564:                                              ; preds = %562
  %565 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %566 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %565, align 8
  %567 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %568 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %567, align 8
  %569 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 24
  %570 = load i32, i32* %569, align 4
  %571 = icmp sgt i32 %570, 1
  br i1 %571, label %572, label %577

572:                                              ; preds = %564
  %573 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %574 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %573, align 8
  %575 = icmp eq %"class.ui::MotionEvent"* %574, null
  %576 = select i1 %575, %"class.ui::MotionEvent"* %1, %"class.ui::MotionEvent"* %574
  br label %577

577:                                              ; preds = %572, %564
  %578 = phi %"class.ui::MotionEvent"* [ %1, %564 ], [ %576, %572 ]
  %579 = bitcast %"class.ui::GestureListener"* %566 to i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)***
  %580 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)**, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*** %579, align 8
  %581 = getelementptr inbounds i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %580, i64 6
  %582 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %581, align 8
  %583 = extractelement <2 x float> %546, i32 0
  %584 = extractelement <2 x float> %546, i32 1
  %585 = tail call zeroext i1 %582(%"class.ui::GestureListener"* %566, %"class.ui::MotionEvent"* dereferenceable(8) %568, %"class.ui::MotionEvent"* dereferenceable(8) %1, %"class.ui::MotionEvent"* dereferenceable(8) %578, float %583, float %584) #11
  %586 = extractelement <2 x float> %42, i32 0
  store float %586, float* %542, align 8
  %587 = extractelement <2 x float> %42, i32 1
  store float %587, float* %543, align 4
  store i8 0, i8* %559, align 2
  %588 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %589 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %588, align 8
  %590 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %589, i64 0, i32 1, i64 0, i32 0
  %591 = bitcast %"class.base::internal::TimerBase"* %590 to void (%"class.base::internal::TimerBase"*)***
  %592 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %591, align 8
  %593 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %592, i64 3
  %594 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %593, align 8
  tail call void %594(%"class.base::internal::TimerBase"* %590) #11
  %595 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %589, i64 0, i32 1, i64 1, i32 0
  %596 = bitcast %"class.base::internal::TimerBase"* %595 to void (%"class.base::internal::TimerBase"*)***
  %597 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %596, align 8
  %598 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %597, i64 3
  %599 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %598, align 8
  tail call void %599(%"class.base::internal::TimerBase"* %595) #11
  %600 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %589, i64 0, i32 1, i64 2, i32 0
  %601 = bitcast %"class.base::internal::TimerBase"* %600 to void (%"class.base::internal::TimerBase"*)***
  %602 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %601, align 8
  %603 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %602, i64 3
  %604 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %603, align 8
  tail call void %604(%"class.base::internal::TimerBase"* %600) #11
  br label %605

605:                                              ; preds = %577, %562
  %606 = phi i1 [ false, %562 ], [ %585, %577 ]
  %607 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 29
  %608 = bitcast float* %607 to <2 x float>*
  %609 = load <2 x float>, <2 x float>* %608, align 8
  %610 = fsub <2 x float> %42, %609
  %611 = fmul <2 x float> %610, %610
  %612 = extractelement <2 x float> %611, i32 0
  %613 = extractelement <2 x float> %611, i32 1
  %614 = fadd float %612, %613
  %615 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 4
  %616 = load float, float* %615, align 4
  %617 = fcmp ogt float %614, %616
  br i1 %617, label %618, label %650

618:                                              ; preds = %605
  %619 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 17
  store i8 0, i8* %619, align 1
  br label %650

620:                                              ; preds = %558
  %621 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %546)
  %622 = fcmp ogt <2 x float> %621, <float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %623 = extractelement <2 x i1> %622, i32 0
  %624 = extractelement <2 x i1> %622, i32 1
  %625 = or i1 %623, %624
  br i1 %625, label %626, label %650

626:                                              ; preds = %620
  %627 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %628 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %627, align 8
  %629 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %630 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %629, align 8
  %631 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 24
  %632 = load i32, i32* %631, align 4
  %633 = icmp sgt i32 %632, 1
  br i1 %633, label %634, label %639

634:                                              ; preds = %626
  %635 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %636 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %635, align 8
  %637 = icmp eq %"class.ui::MotionEvent"* %636, null
  %638 = select i1 %637, %"class.ui::MotionEvent"* %1, %"class.ui::MotionEvent"* %636
  br label %639

639:                                              ; preds = %634, %626
  %640 = phi %"class.ui::MotionEvent"* [ %1, %626 ], [ %638, %634 ]
  %641 = bitcast %"class.ui::GestureListener"* %628 to i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)***
  %642 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)**, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*** %641, align 8
  %643 = getelementptr inbounds i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %642, i64 6
  %644 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %643, align 8
  %645 = extractelement <2 x float> %546, i32 0
  %646 = extractelement <2 x float> %546, i32 1
  %647 = tail call zeroext i1 %644(%"class.ui::GestureListener"* %628, %"class.ui::MotionEvent"* dereferenceable(8) %630, %"class.ui::MotionEvent"* dereferenceable(8) %1, %"class.ui::MotionEvent"* dereferenceable(8) %640, float %645, float %646) #11
  %648 = extractelement <2 x float> %42, i32 0
  store float %648, float* %542, align 8
  %649 = extractelement <2 x float> %42, i32 1
  store float %649, float* %543, align 4
  br label %650

650:                                              ; preds = %620, %605, %618, %639, %550
  %651 = phi i1 [ %557, %550 ], [ %647, %639 ], [ %606, %618 ], [ %606, %605 ], [ false, %620 ]
  %652 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %24, align 8
  %653 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %652, i64 5
  %654 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %653, align 8
  %655 = tail call i64 %654(%"class.ui::MotionEvent"* %1) #11
  %656 = icmp eq i64 %655, 1
  br i1 %656, label %657, label %746

657:                                              ; preds = %650
  %658 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %659 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %658, align 8
  %660 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %659, i64 0, i32 1, i64 1, i32 0
  %661 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %660) #11
  br i1 %661, label %662, label %746

662:                                              ; preds = %657
  %663 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %664 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %663, align 8
  %665 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %664, i64 19
  %666 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %665, align 8
  %667 = tail call i32 %666(%"class.ui::MotionEvent"* %1, i64 0) #11
  %668 = icmp eq i32 %667, 2
  br i1 %668, label %669, label %704

669:                                              ; preds = %662
  %670 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 31
  %671 = load i8, i8* %670, align 8, !range !3
  %672 = icmp eq i8 %671, 0
  br i1 %672, label %704, label %673

673:                                              ; preds = %669
  %674 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %10, align 8
  %675 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %674, i64 21
  %676 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %675, align 8
  %677 = tail call i32 %676(%"class.ui::MotionEvent"* %1) #11
  %678 = and i32 %677, 1024
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %704, label %680

680:                                              ; preds = %673
  %681 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %658, align 8
  %682 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %681, i64 0, i32 1, i64 0, i32 0
  %683 = bitcast %"class.base::internal::TimerBase"* %682 to void (%"class.base::internal::TimerBase"*)***
  %684 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %683, align 8
  %685 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %684, i64 3
  %686 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %685, align 8
  tail call void %686(%"class.base::internal::TimerBase"* %682) #11
  %687 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %681, i64 0, i32 1, i64 1, i32 0
  %688 = bitcast %"class.base::internal::TimerBase"* %687 to void (%"class.base::internal::TimerBase"*)***
  %689 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %688, align 8
  %690 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %689, i64 3
  %691 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %690, align 8
  tail call void %691(%"class.base::internal::TimerBase"* %687) #11
  %692 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %681, i64 0, i32 1, i64 2, i32 0
  %693 = bitcast %"class.base::internal::TimerBase"* %692 to void (%"class.base::internal::TimerBase"*)***
  %694 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %693, align 8
  %695 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %694, i64 3
  %696 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %695, align 8
  tail call void %696(%"class.base::internal::TimerBase"* %692) #11
  %697 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %697, align 1
  %698 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %699 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %698, align 8
  %700 = bitcast %"class.ui::GestureListener"* %699 to void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)***
  %701 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*** %700, align 8
  %702 = getelementptr inbounds void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %701, i64 5
  %703 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %702, align 8
  tail call void %703(%"class.ui::GestureListener"* %699, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  br label %746

704:                                              ; preds = %673, %669, %662
  %705 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %663, align 8
  %706 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %705, i64 19
  %707 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %706, align 8
  %708 = tail call i32 %707(%"class.ui::MotionEvent"* %1, i64 0) #11
  %709 = icmp eq i32 %708, 1
  br i1 %709, label %710, label %746

710:                                              ; preds = %704
  %711 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 32
  %712 = load i8, i8* %711, align 1, !range !3
  %713 = icmp eq i8 %712, 0
  br i1 %713, label %746, label %714

714:                                              ; preds = %710
  %715 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %10, align 8
  %716 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %715, i64 23
  %717 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %716, align 8
  %718 = tail call i32 %717(%"class.ui::MotionEvent"* %1) #11
  %719 = icmp eq i32 %718, 2
  br i1 %719, label %720, label %746

720:                                              ; preds = %714
  %721 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %722 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %721, align 8
  %723 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %658, align 8
  %724 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %723, i64 0, i32 1, i64 0, i32 0
  %725 = bitcast %"class.base::internal::TimerBase"* %724 to void (%"class.base::internal::TimerBase"*)***
  %726 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %725, align 8
  %727 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %726, i64 3
  %728 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %727, align 8
  tail call void %728(%"class.base::internal::TimerBase"* %724) #11
  %729 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %723, i64 0, i32 1, i64 1, i32 0
  %730 = bitcast %"class.base::internal::TimerBase"* %729 to void (%"class.base::internal::TimerBase"*)***
  %731 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %730, align 8
  %732 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %731, i64 3
  %733 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %732, align 8
  tail call void %733(%"class.base::internal::TimerBase"* %729) #11
  %734 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %723, i64 0, i32 1, i64 2, i32 0
  %735 = bitcast %"class.base::internal::TimerBase"* %734 to void (%"class.base::internal::TimerBase"*)***
  %736 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %735, align 8
  %737 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %736, i64 3
  %738 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %737, align 8
  tail call void %738(%"class.base::internal::TimerBase"* %734) #11
  %739 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %739, align 1
  %740 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %741 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %740, align 8
  %742 = bitcast %"class.ui::GestureListener"* %741 to void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)***
  %743 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*** %742, align 8
  %744 = getelementptr inbounds void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %743, i64 5
  %745 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %744, align 8
  tail call void %745(%"class.ui::GestureListener"* %741, %"class.ui::MotionEvent"* dereferenceable(8) %722) #11
  br label %746

746:                                              ; preds = %710, %680, %720, %714, %704, %657, %650
  %747 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 18
  %748 = load i8, i8* %747, align 4, !range !3
  %749 = icmp eq i8 %748, 0
  br i1 %749, label %957, label %750

750:                                              ; preds = %746
  %751 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 24
  %752 = load i32, i32* %751, align 4
  %753 = icmp sgt i32 %752, 2
  br i1 %753, label %756, label %754

754:                                              ; preds = %750
  %755 = tail call zeroext i1 @_ZN2ui15GestureDetector17IsWithinTouchSlopERKNS_11MotionEventE(%"class.ui::GestureDetector"* %0, %"class.ui::MotionEvent"* dereferenceable(8) %1)
  br i1 %755, label %957, label %756

756:                                              ; preds = %754, %750
  store i8 0, i8* %747, align 4
  br label %957

757:                                              ; preds = %35
  %758 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 14
  store i8 0, i8* %758, align 8
  %759 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 22
  %760 = load i8, i8* %759, align 8, !range !3
  %761 = icmp eq i8 %760, 0
  %762 = xor i1 %2, true
  %763 = or i1 %761, %762
  br i1 %763, label %772, label %764

764:                                              ; preds = %757
  %765 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 2
  %766 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %765, align 8
  %767 = bitcast %"class.ui::DoubleTapListener"* %766 to i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)***
  %768 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*** %767, align 8
  %769 = getelementptr inbounds i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %768, i64 4
  %770 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %769, align 8
  %771 = tail call zeroext i1 %770(%"class.ui::DoubleTapListener"* %766, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  br label %889

772:                                              ; preds = %757
  %773 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 16
  %774 = load i8, i8* %773, align 2, !range !3
  %775 = icmp eq i8 %774, 0
  br i1 %775, label %815, label %776

776:                                              ; preds = %772
  %777 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 24
  %778 = load i32, i32* %777, align 4
  %779 = icmp eq i32 %778, 1
  br i1 %779, label %780, label %889

780:                                              ; preds = %776
  %781 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 23
  %782 = load i8, i8* %781, align 1, !range !3
  %783 = icmp eq i8 %782, 0
  %784 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 25
  br i1 %783, label %791, label %785

785:                                              ; preds = %780
  %786 = load i32, i32* %784, align 8
  %787 = add nsw i32 %786, 1
  %788 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 26
  %789 = load i32, i32* %788, align 4
  %790 = srem i32 %787, %789
  br label %791

791:                                              ; preds = %780, %785
  %792 = phi i32 [ %790, %785 ], [ 0, %780 ]
  store i32 %792, i32* %784, align 8
  %793 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %794 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %793, align 8
  %795 = add nsw i32 %792, 1
  %796 = bitcast %"class.ui::GestureListener"* %794 to i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, i32)***
  %797 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, i32)**, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, i32)*** %796, align 8
  %798 = getelementptr inbounds i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, i32)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, i32)** %797, i64 4
  %799 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, i32)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, i32)** %798, align 8
  %800 = tail call zeroext i1 %799(%"class.ui::GestureListener"* %794, %"class.ui::MotionEvent"* dereferenceable(8) %1, i32 %795) #11
  %801 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  %802 = load i8, i8* %801, align 1, !range !3
  %803 = icmp eq i8 %802, 0
  %804 = or i1 %803, %762
  br i1 %804, label %889, label %805

805:                                              ; preds = %791
  %806 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 2
  %807 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %806, align 8
  %808 = icmp eq %"class.ui::DoubleTapListener"* %807, null
  br i1 %808, label %889, label %809

809:                                              ; preds = %805
  %810 = bitcast %"class.ui::DoubleTapListener"* %807 to i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)***
  %811 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*** %810, align 8
  %812 = getelementptr inbounds i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %811, i64 2
  %813 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %812, align 8
  %814 = tail call zeroext i1 %813(%"class.ui::DoubleTapListener"* nonnull %807, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  br label %889

815:                                              ; preds = %772
  %816 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 25
  store i32 0, i32* %816, align 8
  %817 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %818 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %817, align 8
  %819 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %818, i64 6
  %820 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %819, align 8
  %821 = tail call i32 %820(%"class.ui::MotionEvent"* %1, i64 0) #11
  %822 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 8
  %823 = load float, float* %822, align 4
  tail call void @_ZN2ui20VelocityTrackerState22ComputeCurrentVelocityEif(%"class.ui::VelocityTrackerState"* %15, i32 1000, float %823) #11
  %824 = tail call float @_ZNK2ui20VelocityTrackerState12GetYVelocityEi(%"class.ui::VelocityTrackerState"* %15, i32 %821) #11
  %825 = tail call float @_ZNK2ui20VelocityTrackerState12GetXVelocityEi(%"class.ui::VelocityTrackerState"* %15, i32 %821) #11
  %826 = tail call float @llvm.fabs.f32(float %824) #11
  %827 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 7
  %828 = load float, float* %827, align 8
  %829 = fcmp ogt float %826, %828
  %830 = tail call float @llvm.fabs.f32(float %825) #11
  %831 = fcmp ogt float %830, %828
  %832 = or i1 %829, %831
  br i1 %832, label %833, label %844

833:                                              ; preds = %815
  %834 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %835 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %834, align 8
  %836 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %837 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %836, align 8
  %838 = bitcast %"class.ui::GestureListener"* %835 to i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)***
  %839 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)**, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*** %838, align 8
  %840 = getelementptr inbounds i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %839, i64 7
  %841 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %840, align 8
  %842 = tail call zeroext i1 %841(%"class.ui::GestureListener"* %835, %"class.ui::MotionEvent"* dereferenceable(8) %837, %"class.ui::MotionEvent"* dereferenceable(8) %1, float %825, float %824) #11
  %843 = zext i1 %842 to i32
  br label %844

844:                                              ; preds = %815, %833
  %845 = phi i32 [ %843, %833 ], [ 0, %815 ]
  %846 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 35
  %847 = load i8, i8* %846, align 4, !range !3
  %848 = icmp eq i8 %847, 0
  br i1 %848, label %885, label %849

849:                                              ; preds = %844
  %850 = fcmp une float %825, 0.000000e+00
  %851 = fcmp une float %824, 0.000000e+00
  %852 = or i1 %851, %850
  br i1 %852, label %853, label %885

853:                                              ; preds = %849
  %854 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 9
  %855 = load float, float* %854, align 8
  %856 = fcmp olt float %830, %855
  %857 = select i1 %856, float 0.000000e+00, float %830
  %858 = fcmp olt float %826, %855
  %859 = select i1 %858, float 0.000000e+00, float %826
  %860 = fcmp ogt float %857, %859
  %861 = select i1 %860, float %859, float %857
  %862 = select i1 %860, float %859, float %857
  %863 = select i1 %860, float %857, float %859
  %864 = fcmp olt float %861, 0x3F50624DE0000000
  %865 = select i1 %864, float 0x3F50624DE0000000, float %862
  %866 = fdiv float %863, %865
  %867 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 10
  %868 = load float, float* %867, align 4
  %869 = fcmp olt float %866, %868
  br i1 %869, label %885, label %870

870:                                              ; preds = %853
  %871 = select i1 %856, float 0.000000e+00, float %825
  %872 = select i1 %860, float %871, float 0.000000e+00
  %873 = or i1 %858, %860
  %874 = select i1 %873, float 0.000000e+00, float %824
  %875 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %876 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %875, align 8
  %877 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %878 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %877, align 8
  %879 = bitcast %"class.ui::GestureListener"* %876 to i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)***
  %880 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)**, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*** %879, align 8
  %881 = getelementptr inbounds i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %880, i64 8
  %882 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %881, align 8
  %883 = tail call zeroext i1 %882(%"class.ui::GestureListener"* %876, %"class.ui::MotionEvent"* dereferenceable(8) %878, %"class.ui::MotionEvent"* dereferenceable(8) %1, float %872, float %874) #11
  %884 = zext i1 %883 to i32
  br label %885

885:                                              ; preds = %844, %849, %853, %870
  %886 = phi i32 [ 0, %844 ], [ 0, %849 ], [ %884, %870 ], [ 0, %853 ]
  %887 = or i32 %886, %845
  %888 = icmp ne i32 %887, 0
  br label %889

889:                                              ; preds = %776, %791, %805, %809, %885, %764
  %890 = phi i1 [ %771, %764 ], [ %800, %809 ], [ %800, %805 ], [ %800, %791 ], [ %888, %885 ], [ false, %776 ]
  %891 = tail call %"class.ui::MotionEvent"* @_ZNK2ui11MotionEvent5CloneEv(%"class.ui::MotionEvent"* %1) #11
  %892 = ptrtoint %"class.ui::MotionEvent"* %891 to i64
  %893 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 20
  %894 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %893, i64 0, i32 0, i32 0, i32 0
  %895 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %894, align 8
  %896 = bitcast %"class.std::__1::unique_ptr.11"* %893 to i64*
  store i64 %892, i64* %896, align 8
  %897 = icmp eq %"class.ui::MotionEvent"* %895, null
  br i1 %897, label %903, label %898

898:                                              ; preds = %889
  %899 = bitcast %"class.ui::MotionEvent"* %895 to void (%"class.ui::MotionEvent"*)***
  %900 = load void (%"class.ui::MotionEvent"*)**, void (%"class.ui::MotionEvent"*)*** %899, align 8
  %901 = getelementptr inbounds void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %900, i64 1
  %902 = load void (%"class.ui::MotionEvent"*)*, void (%"class.ui::MotionEvent"*)** %901, align 8
  tail call void %902(%"class.ui::MotionEvent"* nonnull %895) #11
  br label %903

903:                                              ; preds = %898, %889
  tail call void @_ZN2ui20VelocityTrackerState5ClearEv(%"class.ui::VelocityTrackerState"* %15) #11
  store i8 0, i8* %759, align 8
  %904 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %904, align 1
  %905 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %906 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %905, align 8
  %907 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %906, i64 0, i32 1, i64 0, i32 0
  %908 = bitcast %"class.base::internal::TimerBase"* %907 to void (%"class.base::internal::TimerBase"*)***
  %909 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %908, align 8
  %910 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %909, i64 3
  %911 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %910, align 8
  tail call void %911(%"class.base::internal::TimerBase"* %907) #11
  %912 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %905, align 8
  %913 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %912, i64 0, i32 1, i64 1, i32 0
  %914 = bitcast %"class.base::internal::TimerBase"* %913 to void (%"class.base::internal::TimerBase"*)***
  %915 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %914, align 8
  %916 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %915, i64 3
  %917 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %916, align 8
  tail call void %917(%"class.base::internal::TimerBase"* %913) #11
  %918 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 24
  store i32 0, i32* %918, align 4
  br label %957

919:                                              ; preds = %35
  %920 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %921 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %920, align 8
  %922 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %921, i64 0, i32 1, i64 2, i32 0
  %923 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %922) #11
  br i1 %923, label %924, label %933

924:                                              ; preds = %919
  %925 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %926 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %925, align 8
  %927 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %928 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %927, align 8
  %929 = bitcast %"class.ui::GestureListener"* %926 to void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)***
  %930 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*** %929, align 8
  %931 = getelementptr inbounds void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %930, i64 10
  %932 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %931, align 8
  tail call void %932(%"class.ui::GestureListener"* %926, %"class.ui::MotionEvent"* dereferenceable(8) %928) #11
  br label %933

933:                                              ; preds = %919, %924
  %934 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %920, align 8
  %935 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %934, i64 0, i32 1, i64 0, i32 0
  %936 = bitcast %"class.base::internal::TimerBase"* %935 to void (%"class.base::internal::TimerBase"*)***
  %937 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %936, align 8
  %938 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %937, i64 3
  %939 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %938, align 8
  tail call void %939(%"class.base::internal::TimerBase"* %935) #11
  %940 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %934, i64 0, i32 1, i64 1, i32 0
  %941 = bitcast %"class.base::internal::TimerBase"* %940 to void (%"class.base::internal::TimerBase"*)***
  %942 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %941, align 8
  %943 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %942, i64 3
  %944 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %943, align 8
  tail call void %944(%"class.base::internal::TimerBase"* %940) #11
  %945 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %934, i64 0, i32 1, i64 2, i32 0
  %946 = bitcast %"class.base::internal::TimerBase"* %945 to void (%"class.base::internal::TimerBase"*)***
  %947 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %946, align 8
  %948 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %947, i64 3
  %949 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %948, align 8
  tail call void %949(%"class.base::internal::TimerBase"* %945) #11
  %950 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 22
  store i8 0, i8* %950, align 8
  %951 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 17
  store i8 0, i8* %951, align 1
  %952 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %952, align 1
  %953 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 23
  store i8 0, i8* %953, align 1
  %954 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 25
  store i32 0, i32* %954, align 8
  tail call void @_ZN2ui20VelocityTrackerState5ClearEv(%"class.ui::VelocityTrackerState"* %15) #11
  %955 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 16
  store i8 0, i8* %955, align 2
  %956 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 14
  store i8 0, i8* %956, align 8
  br label %957

957:                                              ; preds = %308, %532, %903, %933, %35, %119, %158, %166, %754, %756, %746
  %958 = phi i1 [ false, %35 ], [ false, %933 ], [ %890, %903 ], [ %540, %532 ], [ %309, %308 ], [ false, %119 ], [ false, %158 ], [ false, %166 ], [ %651, %754 ], [ %651, %756 ], [ %651, %746 ]
  ret i1 %958
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2ui20VelocityTrackerState11AddMovementERKNS_11MotionEventE(%"class.ui::VelocityTrackerState"*, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetector10CancelTapsEv(%"class.ui::GestureDetector"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %3, i64 0, i32 1, i64 0, i32 0
  %5 = bitcast %"class.base::internal::TimerBase"* %4 to void (%"class.base::internal::TimerBase"*)***
  %6 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %6, i64 3
  %8 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %7, align 8
  tail call void %8(%"class.base::internal::TimerBase"* %4) #11
  %9 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %3, i64 0, i32 1, i64 1, i32 0
  %10 = bitcast %"class.base::internal::TimerBase"* %9 to void (%"class.base::internal::TimerBase"*)***
  %11 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %11, i64 3
  %13 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::TimerBase"* %9) #11
  %14 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %3, i64 0, i32 1, i64 2, i32 0
  %15 = bitcast %"class.base::internal::TimerBase"* %14 to void (%"class.base::internal::TimerBase"*)***
  %16 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %16, i64 3
  %18 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %17, align 8
  tail call void %18(%"class.base::internal::TimerBase"* %14) #11
  %19 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 22
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 17
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 23
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 25
  store i32 0, i32* %23, align 8
  ret void
}

declare %"class.ui::MotionEvent"* @_ZNK2ui11MotionEvent5CloneEv(%"class.ui::MotionEvent"*) local_unnamed_addr #5

declare void @_ZN2ui20VelocityTrackerState22ComputeCurrentVelocityEif(%"class.ui::VelocityTrackerState"*, i32, float) local_unnamed_addr #5

declare float @_ZNK2ui20VelocityTrackerState12GetXVelocityEi(%"class.ui::VelocityTrackerState"*, i32) local_unnamed_addr #5

declare float @_ZNK2ui20VelocityTrackerState12GetYVelocityEi(%"class.ui::VelocityTrackerState"*, i32) local_unnamed_addr #5

declare void @_ZN2ui20VelocityTrackerState5ClearEv(%"class.ui::VelocityTrackerState"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui15GestureDetector19HandleSwipeIfNeededERKNS_11MotionEventEff(%"class.ui::GestureDetector"* nocapture readonly, %"class.ui::MotionEvent"* dereferenceable(8), float, float) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 35
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %45, label %8

8:                                                ; preds = %4
  %9 = fcmp une float %2, 0.000000e+00
  %10 = fcmp une float %3, 0.000000e+00
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %45

12:                                               ; preds = %8
  %13 = tail call float @llvm.fabs.f32(float %2) #11
  %14 = tail call float @llvm.fabs.f32(float %3) #11
  %15 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 9
  %16 = load float, float* %15, align 8
  %17 = fcmp olt float %13, %16
  %18 = select i1 %17, float 0.000000e+00, float %13
  %19 = fcmp olt float %14, %16
  %20 = select i1 %19, float 0.000000e+00, float %14
  %21 = fcmp ogt float %18, %20
  %22 = select i1 %21, float %20, float %18
  %23 = select i1 %21, float %20, float %18
  %24 = select i1 %21, float %18, float %20
  %25 = fcmp olt float %22, 0x3F50624DE0000000
  %26 = select i1 %25, float 0x3F50624DE0000000, float %23
  %27 = fdiv float %24, %26
  %28 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 10
  %29 = load float, float* %28, align 4
  %30 = fcmp olt float %27, %29
  br i1 %30, label %45, label %31

31:                                               ; preds = %12
  %32 = select i1 %17, float 0.000000e+00, float %2
  %33 = select i1 %21, float %32, float 0.000000e+00
  %34 = or i1 %19, %21
  %35 = select i1 %34, float 0.000000e+00, float %3
  %36 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %37 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %36, align 8
  %38 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %39 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %38, align 8
  %40 = bitcast %"class.ui::GestureListener"* %37 to i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)***
  %41 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)**, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %41, i64 8
  %43 = load i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)*, i1 (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"*, float, float)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.ui::GestureListener"* %37, %"class.ui::MotionEvent"* dereferenceable(8) %39, %"class.ui::MotionEvent"* dereferenceable(8) %1, float %33, float %35) #11
  br label %45

45:                                               ; preds = %31, %12, %8, %4
  %46 = phi i1 [ false, %4 ], [ false, %8 ], [ %44, %31 ], [ false, %12 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui15GestureDetector13IsRepeatedTapERKNS_11MotionEventES3_S3_b(%"class.ui::GestureDetector"* nocapture readonly, %"class.ui::MotionEvent"* dereferenceable(8), %"class.ui::MotionEvent"* dereferenceable(8), %"class.ui::MotionEvent"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 17
  %7 = load i8, i8* %6, align 1, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %64, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.ui::MotionEvent"* %3 to i64 (%"class.ui::MotionEvent"*)***
  %11 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %11, i64 22
  %13 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %12, align 8
  %14 = tail call i64 %13(%"class.ui::MotionEvent"* %3) #11
  %15 = bitcast %"class.ui::MotionEvent"* %2 to i64 (%"class.ui::MotionEvent"*)***
  %16 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %16, i64 22
  %18 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %17, align 8
  %19 = tail call i64 %18(%"class.ui::MotionEvent"* %2) #11
  %20 = sub nsw i64 %14, %19
  %21 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 11, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp sgt i64 %20, %22
  br i1 %23, label %64, label %24

24:                                               ; preds = %9
  br i1 %4, label %25, label %33

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 2
  %27 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %26, align 8
  %28 = icmp eq %"class.ui::DoubleTapListener"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 13, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp slt i64 %20, %31
  br i1 %32, label %64, label %33

33:                                               ; preds = %25, %29, %24
  %34 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %35 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %34, align 8
  %36 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %35, i64 7
  %37 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %36, align 8
  %38 = tail call float %37(%"class.ui::MotionEvent"* %1, i64 0) #11
  %39 = bitcast %"class.ui::MotionEvent"* %3 to float (%"class.ui::MotionEvent"*, i64)***
  %40 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %39, align 8
  %41 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %40, i64 7
  %42 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %41, align 8
  %43 = tail call float %42(%"class.ui::MotionEvent"* %3, i64 0) #11
  %44 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %34, align 8
  %45 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %44, i64 8
  %46 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %45, align 8
  %47 = tail call float %46(%"class.ui::MotionEvent"* %1, i64 0) #11
  %48 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %39, align 8
  %49 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %48, i64 8
  %50 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %49, align 8
  %51 = tail call float %50(%"class.ui::MotionEvent"* %3, i64 0) #11
  %52 = insertelement <2 x float> undef, float %38, i32 0
  %53 = insertelement <2 x float> %52, float %47, i32 1
  %54 = insertelement <2 x float> undef, float %43, i32 0
  %55 = insertelement <2 x float> %54, float %51, i32 1
  %56 = fsub <2 x float> %53, %55
  %57 = fmul <2 x float> %56, %56
  %58 = extractelement <2 x float> %57, i32 0
  %59 = extractelement <2 x float> %57, i32 1
  %60 = fadd float %58, %59
  %61 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 5
  %62 = load float, float* %61, align 8
  %63 = fcmp olt float %60, %62
  br label %64

64:                                               ; preds = %33, %9, %29, %5
  %65 = phi i1 [ false, %5 ], [ %63, %33 ], [ false, %9 ], [ false, %29 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui15GestureDetector17IsWithinTouchSlopERKNS_11MotionEventE(%"class.ui::GestureDetector"* nocapture readonly, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 24
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 2
  br i1 %5, label %100, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*)***
  %8 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %8, i64 5
  %10 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %9, align 8
  %11 = tail call i64 %10(%"class.ui::MotionEvent"* %1) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %100, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %15 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %17 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %18 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 3
  br label %25

19:                                               ; preds = %69
  %20 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %7, align 8
  %21 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %20, i64 5
  %22 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %21, align 8
  %23 = tail call i64 %22(%"class.ui::MotionEvent"* %1) #11
  %24 = icmp ult i64 %99, %23
  br i1 %24, label %25, label %100

25:                                               ; preds = %13, %19
  %26 = phi i64 [ 0, %13 ], [ %99, %19 ]
  %27 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %14, align 8
  %28 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %27, i64 6
  %29 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %28, align 8
  %30 = tail call i32 %29(%"class.ui::MotionEvent"* %1, i64 %26) #11
  %31 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %15, align 8
  %32 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %16, align 8
  %33 = bitcast %"class.ui::MotionEvent"* %31 to i32 (%"class.ui::MotionEvent"*, i64)***
  %34 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %34, i64 6
  %36 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %35, align 8
  %37 = tail call i32 %36(%"class.ui::MotionEvent"* %31, i64 0) #11
  %38 = icmp eq i32 %37, %30
  br i1 %38, label %63, label %39

39:                                               ; preds = %25
  %40 = icmp eq %"class.ui::MotionEvent"* %32, null
  br i1 %40, label %100, label %41

41:                                               ; preds = %39
  %42 = bitcast %"class.ui::MotionEvent"* %32 to i32 (%"class.ui::MotionEvent"*, i64)***
  %43 = bitcast %"class.ui::MotionEvent"* %32 to i64 (%"class.ui::MotionEvent"*)***
  %44 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %44, i64 5
  %46 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %45, align 8
  %47 = tail call i64 %46(%"class.ui::MotionEvent"* nonnull %32) #11
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %100, label %55

49:                                               ; preds = %55
  %50 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %43, align 8
  %51 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %50, i64 5
  %52 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %51, align 8
  %53 = tail call i64 %52(%"class.ui::MotionEvent"* nonnull %32) #11
  %54 = icmp ult i64 %62, %53
  br i1 %54, label %55, label %100

55:                                               ; preds = %41, %49
  %56 = phi i64 [ %62, %49 ], [ 0, %41 ]
  %57 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %42, align 8
  %58 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %57, i64 6
  %59 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %58, align 8
  %60 = tail call i32 %59(%"class.ui::MotionEvent"* nonnull %32, i64 %56) #11
  %61 = icmp eq i32 %60, %30
  %62 = add nuw i64 %56, 1
  br i1 %61, label %63, label %49

63:                                               ; preds = %55, %25
  %64 = phi %"class.ui::MotionEvent"* [ %31, %25 ], [ %32, %55 ]
  %65 = icmp eq %"class.ui::MotionEvent"* %64, null
  br i1 %65, label %100, label %66

66:                                               ; preds = %63
  %67 = tail call i32 @_ZNK2ui11MotionEvent20FindPointerIndexOfIdEi(%"class.ui::MotionEvent"* nonnull %64, i32 %30) #11
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %100, label %69

69:                                               ; preds = %66
  %70 = sext i32 %67 to i64
  %71 = bitcast %"class.ui::MotionEvent"* %64 to float (%"class.ui::MotionEvent"*, i64)***
  %72 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %71, align 8
  %73 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %72, i64 7
  %74 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %73, align 8
  %75 = tail call float %74(%"class.ui::MotionEvent"* nonnull %64, i64 %70) #11
  %76 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %17, align 8
  %77 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %76, i64 7
  %78 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %77, align 8
  %79 = tail call float %78(%"class.ui::MotionEvent"* %1, i64 %26) #11
  %80 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %71, align 8
  %81 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %80, i64 8
  %82 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %81, align 8
  %83 = tail call float %82(%"class.ui::MotionEvent"* nonnull %64, i64 %70) #11
  %84 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %17, align 8
  %85 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %84, i64 8
  %86 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %85, align 8
  %87 = tail call float %86(%"class.ui::MotionEvent"* %1, i64 %26) #11
  %88 = insertelement <2 x float> undef, float %75, i32 0
  %89 = insertelement <2 x float> %88, float %83, i32 1
  %90 = insertelement <2 x float> undef, float %79, i32 0
  %91 = insertelement <2 x float> %90, float %87, i32 1
  %92 = fsub <2 x float> %89, %91
  %93 = fmul <2 x float> %92, %92
  %94 = extractelement <2 x float> %93, i32 0
  %95 = extractelement <2 x float> %93, i32 1
  %96 = fadd float %94, %95
  %97 = load float, float* %18, align 8
  %98 = fcmp ogt float %96, %97
  %99 = add nuw i64 %26, 1
  br i1 %98, label %100, label %19

100:                                              ; preds = %63, %66, %19, %39, %41, %69, %49, %6, %2
  %101 = phi i1 [ false, %2 ], [ true, %6 ], [ false, %49 ], [ false, %63 ], [ false, %66 ], [ true, %19 ], [ false, %39 ], [ false, %41 ], [ false, %69 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetector24ActivateLongPressGestureERKNS_11MotionEventE(%"class.ui::GestureDetector"* nocapture, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %3, align 8
  %5 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %4, i64 0, i32 1, i64 0, i32 0
  %6 = bitcast %"class.base::internal::TimerBase"* %5 to void (%"class.base::internal::TimerBase"*)***
  %7 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %7, i64 3
  %9 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %8, align 8
  tail call void %9(%"class.base::internal::TimerBase"* %5) #11
  %10 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %4, i64 0, i32 1, i64 1, i32 0
  %11 = bitcast %"class.base::internal::TimerBase"* %10 to void (%"class.base::internal::TimerBase"*)***
  %12 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %12, i64 3
  %14 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %13, align 8
  tail call void %14(%"class.base::internal::TimerBase"* %10) #11
  %15 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %4, i64 0, i32 1, i64 2, i32 0
  %16 = bitcast %"class.base::internal::TimerBase"* %15 to void (%"class.base::internal::TimerBase"*)***
  %17 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %17, i64 3
  %19 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %18, align 8
  tail call void %19(%"class.base::internal::TimerBase"* %15) #11
  %20 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %22 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %21, align 8
  %23 = bitcast %"class.ui::GestureListener"* %22 to void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)***
  %24 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %24, i64 5
  %26 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %25, align 8
  tail call void %26(%"class.ui::GestureListener"* %22, %"class.ui::MotionEvent"* dereferenceable(8) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetector18OnLongPressTimeoutEv(%"class.ui::GestureDetector"* nocapture) #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %3 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %4, align 8
  %6 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %5, i64 0, i32 1, i64 0, i32 0
  %7 = bitcast %"class.base::internal::TimerBase"* %6 to void (%"class.base::internal::TimerBase"*)***
  %8 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %8, i64 3
  %10 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %9, align 8
  tail call void %10(%"class.base::internal::TimerBase"* %6) #11
  %11 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %5, i64 0, i32 1, i64 1, i32 0
  %12 = bitcast %"class.base::internal::TimerBase"* %11 to void (%"class.base::internal::TimerBase"*)***
  %13 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %13, i64 3
  %15 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %14, align 8
  tail call void %15(%"class.base::internal::TimerBase"* %11) #11
  %16 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %5, i64 0, i32 1, i64 2, i32 0
  %17 = bitcast %"class.base::internal::TimerBase"* %16 to void (%"class.base::internal::TimerBase"*)***
  %18 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %18, i64 3
  %20 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %19, align 8
  tail call void %20(%"class.base::internal::TimerBase"* %16) #11
  %21 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %23 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %22, align 8
  %24 = bitcast %"class.ui::GestureListener"* %23 to void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)***
  %25 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %25, i64 5
  %27 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %26, align 8
  tail call void %27(%"class.ui::GestureListener"* %23, %"class.ui::MotionEvent"* dereferenceable(8) %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetector6CancelEv(%"class.ui::GestureDetector"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %3, i64 0, i32 1, i64 2, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %4) #11
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %8 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %7, align 8
  %9 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %10 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %9, align 8
  %11 = bitcast %"class.ui::GestureListener"* %8 to void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)***
  %12 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %12, i64 10
  %14 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %13, align 8
  tail call void %14(%"class.ui::GestureListener"* %8, %"class.ui::MotionEvent"* dereferenceable(8) %10) #11
  br label %15

15:                                               ; preds = %6, %1
  %16 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %2, align 8
  %17 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %16, i64 0, i32 1, i64 0, i32 0
  %18 = bitcast %"class.base::internal::TimerBase"* %17 to void (%"class.base::internal::TimerBase"*)***
  %19 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %19, i64 3
  %21 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %20, align 8
  tail call void %21(%"class.base::internal::TimerBase"* %17) #11
  %22 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %16, i64 0, i32 1, i64 1, i32 0
  %23 = bitcast %"class.base::internal::TimerBase"* %22 to void (%"class.base::internal::TimerBase"*)***
  %24 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %24, i64 3
  %26 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %25, align 8
  tail call void %26(%"class.base::internal::TimerBase"* %22) #11
  %27 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %16, i64 0, i32 1, i64 2, i32 0
  %28 = bitcast %"class.base::internal::TimerBase"* %27 to void (%"class.base::internal::TimerBase"*)***
  %29 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %29, i64 3
  %31 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %30, align 8
  tail call void %31(%"class.base::internal::TimerBase"* %27) #11
  %32 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 22
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 17
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 23
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 25
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 37
  tail call void @_ZN2ui20VelocityTrackerState5ClearEv(%"class.ui::VelocityTrackerState"* %37) #11
  %38 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 16
  store i8 0, i8* %38, align 2
  %39 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 14
  store i8 0, i8* %39, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetector20SetDoubleTapListenerEPNS_17DoubleTapListenerE(%"class.ui::GestureDetector"* nocapture, %"class.ui::DoubleTapListener"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 2
  %5 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %4, align 8
  %6 = icmp eq %"class.ui::DoubleTapListener"* %5, %1
  br i1 %6, label %47, label %7

7:                                                ; preds = %2
  %8 = icmp eq %"class.ui::DoubleTapListener"* %1, null
  br i1 %8, label %9, label %46

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %10, align 8
  %12 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %11, i64 0, i32 1, i64 2, i32 0
  %13 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %12) #11
  br i1 %13, label %14, label %46

14:                                               ; preds = %9
  %15 = load %"class.ui::GestureDetector::TimeoutGestureHandler"*, %"class.ui::GestureDetector::TimeoutGestureHandler"** %10, align 8
  %16 = getelementptr inbounds %"class.ui::GestureDetector::TimeoutGestureHandler", %"class.ui::GestureDetector::TimeoutGestureHandler"* %15, i64 0, i32 1, i64 2, i32 0
  %17 = bitcast %"class.base::internal::TimerBase"* %16 to void (%"class.base::internal::TimerBase"*)***
  %18 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %18, i64 3
  %20 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %19, align 8
  tail call void %20(%"class.base::internal::TimerBase"* %16) #11
  %21 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %4, align 8
  %22 = icmp eq %"class.ui::DoubleTapListener"* %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 14
  %25 = load i8, i8* %24, align 8, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %44

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %29 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %28, align 8
  %30 = icmp eq %"class.ui::MotionEvent"* %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 516, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  %34 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %4, align 8
  %35 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %28, align 8
  br label %36

36:                                               ; preds = %31, %27
  %37 = phi %"class.ui::MotionEvent"* [ %29, %27 ], [ %35, %31 ]
  %38 = phi %"class.ui::DoubleTapListener"* [ %21, %27 ], [ %34, %31 ]
  %39 = bitcast %"class.ui::DoubleTapListener"* %38 to i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)***
  %40 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %40, i64 2
  %42 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %41, align 8
  %43 = call zeroext i1 %42(%"class.ui::DoubleTapListener"* %38, %"class.ui::MotionEvent"* dereferenceable(8) %37) #11
  br label %46

44:                                               ; preds = %23
  %45 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 1, i8* %45, align 1
  br label %46

46:                                               ; preds = %44, %36, %14, %7, %9
  store %"class.ui::DoubleTapListener"* %1, %"class.ui::DoubleTapListener"** %4, align 8
  br label %47

47:                                               ; preds = %2, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetector12OnTapTimeoutEv(%"class.ui::GestureDetector"* nocapture) #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 2
  %4 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %3, align 8
  %5 = icmp eq %"class.ui::DoubleTapListener"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 14
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %12 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %11, align 8
  %13 = icmp eq %"class.ui::MotionEvent"* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 516, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #11
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %17 = load %"class.ui::DoubleTapListener"*, %"class.ui::DoubleTapListener"** %3, align 8
  %18 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %11, align 8
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi %"class.ui::MotionEvent"* [ %12, %10 ], [ %18, %14 ]
  %21 = phi %"class.ui::DoubleTapListener"* [ %4, %10 ], [ %17, %14 ]
  %22 = bitcast %"class.ui::DoubleTapListener"* %21 to i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)***
  %23 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)**, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %23, i64 2
  %25 = load i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)*, i1 (%"class.ui::DoubleTapListener"*, %"class.ui::MotionEvent"*)** %24, align 8
  %26 = call zeroext i1 %25(%"class.ui::DoubleTapListener"* %21, %"class.ui::MotionEvent"* dereferenceable(8) %20) #11
  br label %29

27:                                               ; preds = %6
  %28 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 15
  store i8 1, i8* %28, align 1
  br label %29

29:                                               ; preds = %1, %27, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GestureDetector18OnShowPressTimeoutEv(%"class.ui::GestureDetector"* nocapture readonly) #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 1
  %3 = load %"class.ui::GestureListener"*, %"class.ui::GestureListener"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::GestureDetector", %"class.ui::GestureDetector"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %5 = load %"class.ui::MotionEvent"*, %"class.ui::MotionEvent"** %4, align 8
  %6 = bitcast %"class.ui::GestureListener"* %3 to void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)***
  %7 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)**, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %7, i64 3
  %9 = load void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)*, void (%"class.ui::GestureListener"*, %"class.ui::MotionEvent"*)** %8, align 8
  tail call void %9(%"class.ui::GestureListener"* %3, %"class.ui::MotionEvent"* dereferenceable(8) %5) #11
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::MotionEvent"* @_ZN2ui15GestureDetector25GetSourcePointerDownEventERKNS_11MotionEventEPS2_i(%"class.ui::GestureDetector"* nocapture readnone, %"class.ui::MotionEvent"* dereferenceable(8), %"class.ui::MotionEvent"*, i32) local_unnamed_addr #1 align 2 {
  %5 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %6 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %6, i64 6
  %8 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %7, align 8
  %9 = tail call i32 %8(%"class.ui::MotionEvent"* %1, i64 0) #11
  %10 = icmp eq i32 %9, %3
  br i1 %10, label %35, label %11

11:                                               ; preds = %4
  %12 = icmp eq %"class.ui::MotionEvent"* %2, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.ui::MotionEvent"* %2 to i32 (%"class.ui::MotionEvent"*, i64)***
  %15 = bitcast %"class.ui::MotionEvent"* %2 to i64 (%"class.ui::MotionEvent"*)***
  %16 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %16, i64 5
  %18 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %17, align 8
  %19 = tail call i64 %18(%"class.ui::MotionEvent"* nonnull %2) #11
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %35, label %27

21:                                               ; preds = %27
  %22 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %15, align 8
  %23 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %22, i64 5
  %24 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %23, align 8
  %25 = tail call i64 %24(%"class.ui::MotionEvent"* nonnull %2) #11
  %26 = icmp ult i64 %34, %25
  br i1 %26, label %27, label %35

27:                                               ; preds = %13, %21
  %28 = phi i64 [ %34, %21 ], [ 0, %13 ]
  %29 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %14, align 8
  %30 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %29, i64 6
  %31 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %30, align 8
  %32 = tail call i32 %31(%"class.ui::MotionEvent"* nonnull %2, i64 %28) #11
  %33 = icmp eq i32 %32, %3
  %34 = add nuw i64 %28, 1
  br i1 %33, label %35, label %21

35:                                               ; preds = %27, %21, %13, %4, %11
  %36 = phi %"class.ui::MotionEvent"* [ %1, %4 ], [ null, %11 ], [ null, %13 ], [ %2, %27 ], [ null, %21 ]
  ret %"class.ui::MotionEvent"* %36
}

declare i32 @_ZNK2ui11MotionEvent20FindPointerIndexOfIdEi(%"class.ui::MotionEvent"*, i32) local_unnamed_addr #5

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.ui::GestureDetector"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.ui::GestureDetector"*)**
  %21 = load void (%"class.ui::GestureDetector"*)*, void (%"class.ui::GestureDetector"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.ui::GestureDetector"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.ui::GestureDetector"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.ui::GestureDetector"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nofree nounwind
declare float @tanf(float) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIRMN2ui15GestureDetectorEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIRMN2ui15GestureDetectorEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIRMN2ui15GestureDetectorEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIRMN2ui15GestureDetectorEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN2ui15GestureDetectorEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIRMN2ui15GestureDetectorEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIRMN2ui15GestureDetectorEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
