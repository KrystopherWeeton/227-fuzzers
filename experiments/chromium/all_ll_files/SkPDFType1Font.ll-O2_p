; ModuleID = '../../third_party/skia/src/pdf/SkPDFType1Font.cpp'
source_filename = "../../third_party/skia/src/pdf/SkPDFType1Font.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkStrikeSpec = type <{ %class.SkAutoDescriptor, %class.sk_sp.232, %class.sk_sp.233, %class.sk_sp, float, [4 x i8] }>
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%class.sk_sp.232 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.233 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkPDFFont = type <{ %class.sk_sp, %class.SkPDFGlyphUse, %struct.SkPDFIndirectReference, i8, [3 x i8] }>
%class.SkPDFGlyphUse = type <{ %class.SkBitSet, i16, i16, [4 x i8] }>
%class.SkBitSet = type { i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%struct.SkPDFIndirectReference = type { i32 }
%class.SkPDFDocument = type { %class.SkDocument.base, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20, %class.SkTHashMap.29, %class.SkTHashMap.38, %class.SkTHashMap.47, %class.SkTHashMap.56, %class.SkTHashMap.56, %class.SkTHashMap.65, %class.SkTHashMap.74, %class.SkTHashMap.83, %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference, %"class.std::__1::vector", %"class.std::__1::vector.96", %class.SkPDFOffsetMap, %class.SkCanvas, %"class.std::__1::vector.152", %"class.std::__1::vector.172", %class.sk_sp.179, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %struct.SkUUID, %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference, %"struct.SkPDF::Metadata", float, float, %class.SkExecutor*, %class.SkPDFTagTree, %class.SkMutex, %class.SkSemaphore }
%class.SkDocument.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkWStream*, i32 }>
%class.SkWStream = type { i32 (...)** }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair, SkPDFGradientShader::Key, SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair, SkPDFGradientShader::Key, SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.29 = type { %class.SkTHashTable.30 }
%class.SkTHashTable.30 = type { i32, i32, %class.SkAutoTArray.31 }
%class.SkAutoTArray.31 = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.38 = type { %class.SkTHashTable.39 }
%class.SkTHashTable.39 = type { i32, i32, %class.SkAutoTArray.40 }
%class.SkAutoTArray.40 = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.291" }
%"struct.std::__1::pair.291" = type { i32, %"class.std::__1::vector.219" }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %class.SkString*, %class.SkString*, %"class.std::__1::__compressed_pair.221" }
%class.SkString = type { %class.sk_sp.180 }
%class.sk_sp.180 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %class.SkString* }
%class.SkTHashMap.47 = type { %class.SkTHashTable.48 }
%class.SkTHashTable.48 = type { i32, i32, %class.SkAutoTArray.49 }
%class.SkAutoTArray.49 = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.56 = type { %class.SkTHashTable.57 }
%class.SkTHashTable.57 = type { i32, i32, %class.SkAutoTArray.58 }
%class.SkAutoTArray.58 = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.292" }
%"struct.std::__1::pair.292" = type { i32, %struct.SkPDFIndirectReference }
%class.SkTHashMap.65 = type { %class.SkTHashTable.66 }
%class.SkTHashTable.66 = type { i32, i32, %class.SkAutoTArray.67 }
%class.SkAutoTArray.67 = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.SkTHashTable<SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair, unsigned long, SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair, unsigned long, SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.74 = type { %class.SkTHashTable.75 }
%class.SkTHashTable.75 = type { i32, i32, %class.SkAutoTArray.76 }
%class.SkAutoTArray.76 = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFStrokeGraphicState, SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFStrokeGraphicState, SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.83 = type { %class.SkTHashTable.84 }
%class.SkTHashTable.84 = type { i32, i32, %class.SkAutoTArray.85 }
%class.SkAutoTArray.85 = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFFillGraphicState, SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFFillGraphicState, SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.92"*, %"class.std::__1::unique_ptr.92"*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::unique_ptr.92" = type opaque
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::unique_ptr.92"* }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %struct.SkPDFNamedDestination*, %struct.SkPDFNamedDestination*, %"class.std::__1::__compressed_pair.99" }
%struct.SkPDFNamedDestination = type <{ %class.sk_sp.98, %struct.SkPoint, %struct.SkPDFIndirectReference, [4 x i8] }>
%class.sk_sp.98 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkPoint = type { float, float }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %struct.SkPDFNamedDestination* }
%class.SkPDFOffsetMap = type { %"class.std::__1::vector.104", i64 }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { i32*, i32*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i32* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.111, [384 x i64], %class.sk_sp.112, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.113", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.119" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.111 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.112 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector.125", %class.SkGlyphRunList, %"class.std::__1::vector.142" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.122" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %struct.SkPoint* }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.130" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.128, %class.SkSpan.129, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.127" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.127" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.128 = type { i32*, i64 }
%class.SkSpan.129 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.135, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.135 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.136, %struct.SkRect, i32, %"struct.std::__1::atomic.137" }
%class.SkNVRefCnt.136 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__cxx_atomic_impl.140" }
%"struct.std::__1::__cxx_atomic_impl.140" = type { %"struct.std::__1::__cxx_atomic_base_impl.141" }
%"struct.std::__1::__cxx_atomic_base_impl.141" = type { i32 }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { i16*, i16*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { i16* }
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { %"class.std::__1::unique_ptr.154"*, %"class.std::__1::unique_ptr.154"*, %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %class.SkPDFDict* }
%class.SkPDFDict = type { %class.SkPDFObject, %"class.std::__1::vector.157" }
%class.SkPDFObject = type { i32 (...)** }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.159" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.std::__1::unique_ptr.154"* }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference*, %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %struct.SkPDFIndirectReference* }
%class.sk_sp.179 = type { %class.SkPDFDevice* }
%class.SkPDFDevice = type opaque
%struct.SkUUID = type { [16 x i8] }
%"struct.SkPDF::Metadata" = type <{ %class.SkString, %class.SkString, %class.SkString, %class.SkString, %class.SkString, %class.SkString, %"struct.SkTime::DateTime", %"struct.SkTime::DateTime", float, i8, [3 x i8], i32, %"struct.SkPDF::StructureElementNode"*, %class.SkExecutor*, i32, [4 x i8] }>
%"struct.SkTime::DateTime" = type { i16, i16, i8, i8, i8, i8, i8, i8 }
%"struct.SkPDF::StructureElementNode" = type <{ %class.SkString, %"class.std::__1::vector.181", i32, [4 x i8], %"class.std::__1::vector.104", %"class.SkPDF::AttributeList", %class.SkString, %class.SkString, i32, [4 x i8] }>
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"class.std::__1::unique_ptr.183"*, %"class.std::__1::unique_ptr.183"*, %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::unique_ptr.183" = type opaque
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.std::__1::unique_ptr.183"* }
%"class.SkPDF::AttributeList" = type { %"class.std::__1::unique_ptr.189" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.SkPDFArray* }
%class.SkPDFArray = type { %class.SkPDFObject, %"class.std::__1::vector.192" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %class.SkPDFUnion*, %class.SkPDFUnion*, %"class.std::__1::__compressed_pair.194" }
%class.SkPDFUnion = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %class.SkPDFUnion* }
%class.SkExecutor = type opaque
%class.SkPDFTagTree = type { %class.SkArenaAlloc, %class.SkTHashMap.202, %struct.SkPDFTagNode*, %class.SkTArray, %"class.std::__1::vector.212", %"class.std::__1::vector.104" }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkTHashMap.202 = type { %class.SkTHashTable.203 }
%class.SkTHashTable.203 = type { i32, i32, %class.SkAutoTArray.204 }
%class.SkAutoTArray.204 = type { %"class.std::__1::unique_ptr.205" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.SkTHashTable<SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair, int, SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair, int, SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair>::Slot" = type opaque
%struct.SkPDFTagNode = type opaque
%class.SkTArray = type { %class.SkTArray.211*, i64 }
%class.SkTArray.211 = type opaque
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"struct.SkPDFTagTree::IDTreeEntry"*, %"struct.SkPDFTagTree::IDTreeEntry"*, %"class.std::__1::__compressed_pair.214" }
%"struct.SkPDFTagTree::IDTreeEntry" = type { i32, %struct.SkPDFIndirectReference }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.SkPDFTagTree::IDTreeEntry"* }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkBulkGlyphMetrics = type { %class.SkAutoSTArray, %class.sk_sp.243 }
%class.SkAutoSTArray = type { i32, %class.SkGlyph**, [160 x i8] }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.234, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.234 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.235, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.236, %class.SkTDArray.237, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.235 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.236 = type { i8*, i32, i32 }
%class.SkTDArray.237 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.238 }
%class.SkTDArray.238 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.239", [3 x i8] }
%"struct.std::__1::atomic.239" = type { %"struct.std::__1::__atomic_base.240" }
%"struct.std::__1::__atomic_base.240" = type { %"struct.std::__1::__cxx_atomic_impl.241" }
%"struct.std::__1::__cxx_atomic_impl.241" = type { %"struct.std::__1::__cxx_atomic_base_impl.242" }
%"struct.std::__1::__cxx_atomic_base_impl.242" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.sk_sp.243 = type { %"class.SkStrikeCache::Strike"* }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.275", i64, i8, [7 x i8] }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.244, i64, i64, i32, i32 }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkTHashTable.244 = type { i32, i32, %class.SkAutoTArray.245 }
%class.SkAutoTArray.245 = type { %"class.std::__1::unique_ptr.246" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr.252", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap.259, %"class.std::__1::vector.268", %class.SkArenaAlloc }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp, %class.sk_sp.233, %class.sk_sp.232, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.SkTMaskPreBlend = type { %class.sk_sp.255, i8*, i8*, i8* }
%class.sk_sp.255 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkTHashMap.259 = type { %class.SkTHashTable.260 }
%class.SkTHashTable.260 = type { i32, i32, %class.SkAutoTArray.261 }
%class.SkAutoTArray.261 = type { %"class.std::__1::unique_ptr.262" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.290" }
%"struct.std::__1::pair.290" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %class.SkGlyph** }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %class.SkPDFObject* }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.SkAdvancedTypefaceMetrics = type { %class.SkString, %class.SkString, i32, i8, i8, i16, i16, i16, i16, i16, %struct.SkIRect }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%class.SkMemoryStream = type { %class.SkStreamMemory, %class.sk_sp.98, i64 }
%class.SkStreamMemory = type { %class.SkStreamAsset }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN10SkTHashMapIjNSt3__16vectorI8SkStringNS0_9allocatorIS2_EEEE10SkGoodHashE3setEjS5_ = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIjNSt3__16vectorI8SkStringNS1_9allocatorIS3_EEEE10SkGoodHashE4PairEjS9_E6resizeEi = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIjNSt3__16vectorI8SkStringNS1_9allocatorIS3_EEEE10SkGoodHashE4PairEjS9_E12uncheckedSetEOS9_ = comdat any

$_ZN10SkTHashMapIj22SkPDFIndirectReference10SkGoodHashE3setEjS0_ = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIj22SkPDFIndirectReference10SkGoodHashE4PairEjS4_E6resizeEi = comdat any

@.str = private unnamed_addr constant [5 x i8] c"Font\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"FontDescriptor\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"Subtype\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"Type1\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"BaseFont\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"FirstChar\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"LastChar\00", align 1
@__const._Z18SkPDFEmitType1FontRK9SkPDFFontP13SkPDFDocument.strikeSpec = private unnamed_addr constant %class.SkStrikeSpec <{ %class.SkAutoDescriptor { %class.SkDescriptor* inttoptr (i64 -6148914691236517206 to %class.SkDescriptor*), [120 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.sk_sp.232 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.233 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.7 = private unnamed_addr constant [7 x i8] c"Widths\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"Encoding\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"Differences\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"Length1\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"Length2\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"Length3\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"FontFile\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"eexec\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"cleartomark\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"0123456789abcdefABCDEF\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z18SkPDFEmitType1FontRK9SkPDFFontP13SkPDFDocument(%class.SkPDFFont* nocapture readonly dereferenceable(40), %class.SkPDFDocument*) local_unnamed_addr #0 {
  %3 = alloca %class.sk_sp.98, align 8
  %4 = alloca %class.SkPDFDict, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.sk_sp.98, align 8
  %7 = alloca %class.sk_sp.98, align 8
  %8 = alloca %"class.std::__1::vector.219", align 8
  %9 = alloca %"class.std::__1::vector.219", align 8
  %10 = alloca %class.SkPDFDict, align 8
  %11 = alloca %class.SkString, align 8
  %12 = alloca i32, align 4
  %13 = alloca %class.SkStrikeSpec, align 8
  %14 = alloca %class.SkBulkGlyphMetrics, align 8
  %15 = alloca %"class.std::__1::unique_ptr.284", align 8
  %16 = alloca %class.SkString, align 8
  %17 = alloca %class.SkString, align 8
  %18 = alloca %class.SkString, align 8
  %19 = alloca %"class.std::__1::unique_ptr.284", align 8
  %20 = alloca %"class.std::__1::unique_ptr.284", align 8
  %21 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %0, i64 0, i32 0, i32 0
  %22 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  %23 = bitcast %"class.std::__1::vector.219"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23)
  %24 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %22, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 5
  %27 = lshr i32 %25, 16
  %28 = xor i32 %27, %25
  %29 = mul i32 %28, -2048144789
  %30 = lshr i32 %29, 13
  %31 = xor i32 %30, %29
  %32 = mul i32 %31, -1028477387
  %33 = lshr i32 %32, 16
  %34 = xor i32 %33, %32
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i32 1, i32 %34
  %37 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 5, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %69

40:                                               ; preds = %2
  %41 = add nsw i32 %38, -1
  %42 = and i32 %36, %41
  %43 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %43, align 8
  br label %45

45:                                               ; preds = %59, %40
  %46 = phi i32 [ 0, %40 ], [ %64, %59 ]
  %47 = phi i32 [ %42, %40 ], [ %63, %59 ]
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %44, i64 %48, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %69, label %52

52:                                               ; preds = %45
  %53 = icmp eq i32 %36, %50
  br i1 %53, label %54, label %59

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %44, i64 %48, i32 0
  %56 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %55, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %25, %57
  br i1 %58, label %66, label %59

59:                                               ; preds = %54, %52
  %60 = add nsw i32 %47, -1
  %61 = icmp slt i32 %47, 1
  %62 = select i1 %61, i32 %38, i32 0
  %63 = add nsw i32 %60, %62
  %64 = add nuw nsw i32 %46, 1
  %65 = icmp eq i32 %64, %38
  br i1 %65, label %69, label %45

66:                                               ; preds = %54
  %67 = icmp eq %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %55, null
  %68 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %44, i64 %48, i32 0, i32 0, i32 1
  br i1 %67, label %69, label %138

69:                                               ; preds = %59, %45, %2, %66
  %70 = bitcast %"class.std::__1::vector.219"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %8, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %8, i64 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = tail call i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface* %22) #11
  %75 = sext i32 %74 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 24, i1 false) #11
  %76 = icmp eq i32 %74, 0
  br i1 %76, label %95, label %77

77:                                               ; preds = %69
  %78 = icmp slt i32 %74, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = bitcast %"class.std::__1::vector.219"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %80) #12
  unreachable

81:                                               ; preds = %77
  %82 = shl nsw i64 %75, 3
  %83 = tail call i8* @_Znwm(i64 %82) #13
  %84 = bitcast i8* %83 to %class.SkString*
  %85 = bitcast %class.SkString** %72 to i8**
  store i8* %83, i8** %85, align 8
  %86 = bitcast %"class.std::__1::vector.219"* %8 to i8**
  store i8* %83, i8** %86, align 8
  %87 = getelementptr inbounds %class.SkString, %class.SkString* %84, i64 %75
  store %class.SkString* %87, %class.SkString** %73, align 8
  br label %88

88:                                               ; preds = %88, %81
  %89 = phi %class.SkString* [ %90, %88 ], [ %84, %81 ]
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %89) #11
  %90 = getelementptr inbounds %class.SkString, %class.SkString* %89, i64 1
  %91 = icmp eq %class.SkString* %90, %87
  br i1 %91, label %92, label %88

92:                                               ; preds = %88
  %93 = ptrtoint %class.SkString* %87 to i64
  %94 = bitcast %class.SkString** %72 to i64*
  store i64 %93, i64* %94, align 8
  br label %95

95:                                               ; preds = %92, %69
  %96 = phi i64 [ %93, %92 ], [ 0, %69 ]
  %97 = phi %class.SkString* [ %84, %92 ], [ null, %69 ]
  tail call void @_ZN9SkPDFFont18GetType1GlyphNamesERK10SkTypefaceP8SkString(%class.SkTypeface* dereferenceable(48) %22, %class.SkString* %97) #11
  %98 = ptrtoint %class.SkString* %97 to i64
  %99 = bitcast %"class.std::__1::vector.219"* %9 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %9, i64 0, i32 0, i32 1
  %101 = bitcast %class.SkString** %100 to i64*
  store i64 %96, i64* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast %class.SkString** %102 to i64*
  store i64 %96, i64* %103, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 24, i1 false) #11
  %104 = call %"class.std::__1::vector.219"* @_ZN10SkTHashMapIjNSt3__16vectorI8SkStringNS0_9allocatorIS2_EEEE10SkGoodHashE3setEjS5_(%class.SkTHashMap.38* %26, i32 %25, %"class.std::__1::vector.219"* nonnull %9) #11
  %105 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %9, i64 0, i32 0, i32 0
  %106 = load %class.SkString*, %class.SkString** %105, align 8
  %107 = icmp eq %class.SkString* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %95
  %109 = bitcast %class.SkString* %106 to i8*
  %110 = load %class.SkString*, %class.SkString** %100, align 8
  %111 = icmp eq %class.SkString* %110, %106
  br i1 %111, label %119, label %112

112:                                              ; preds = %108, %112
  %113 = phi %class.SkString* [ %114, %112 ], [ %110, %108 ]
  %114 = getelementptr inbounds %class.SkString, %class.SkString* %113, i64 -1
  call void @_ZN8SkStringD1Ev(%class.SkString* %114) #11
  %115 = icmp eq %class.SkString* %114, %106
  br i1 %115, label %116, label %112

116:                                              ; preds = %112
  %117 = bitcast %"class.std::__1::vector.219"* %9 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %108
  %120 = phi i8* [ %118, %116 ], [ %109, %108 ]
  store %class.SkString* %106, %class.SkString** %100, align 8
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %119, %95
  %122 = load %class.SkString*, %class.SkString** %71, align 8
  %123 = icmp eq %class.SkString* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %121
  %125 = bitcast %class.SkString* %122 to i8*
  %126 = load %class.SkString*, %class.SkString** %72, align 8
  %127 = icmp eq %class.SkString* %126, %122
  br i1 %127, label %135, label %128

128:                                              ; preds = %124, %128
  %129 = phi %class.SkString* [ %130, %128 ], [ %126, %124 ]
  %130 = getelementptr inbounds %class.SkString, %class.SkString* %129, i64 -1
  call void @_ZN8SkStringD1Ev(%class.SkString* %130) #11
  %131 = icmp eq %class.SkString* %130, %122
  br i1 %131, label %132, label %128

132:                                              ; preds = %128
  %133 = bitcast %"class.std::__1::vector.219"* %8 to i8**
  %134 = load i8*, i8** %133, align 8
  br label %135

135:                                              ; preds = %132, %124
  %136 = phi i8* [ %134, %132 ], [ %125, %124 ]
  store %class.SkString* %122, %class.SkString** %72, align 8
  call void @_ZdlPv(i8* %136) #13
  br label %137

137:                                              ; preds = %135, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #11
  br label %138

138:                                              ; preds = %66, %137
  %139 = phi %"class.std::__1::vector.219"* [ %68, %66 ], [ %104, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23)
  %140 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %0, i64 0, i32 1, i32 1
  %141 = load i16, i16* %140, align 8
  %142 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %0, i64 0, i32 1, i32 2
  %143 = load i16, i16* %142, align 2
  %144 = bitcast %class.SkPDFDict* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %144) #11
  %145 = bitcast %class.SkPDFDict* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 32, i1 false)
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #11
  %146 = load i32, i32* %24, align 8
  %147 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 7
  %148 = lshr i32 %146, 16
  %149 = xor i32 %148, %146
  %150 = mul i32 %149, -2048144789
  %151 = lshr i32 %150, 13
  %152 = xor i32 %151, %150
  %153 = mul i32 %152, -1028477387
  %154 = lshr i32 %153, 16
  %155 = xor i32 %154, %153
  %156 = icmp eq i32 %155, 0
  %157 = select i1 %156, i32 1, i32 %155
  %158 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 7, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %192

161:                                              ; preds = %138
  %162 = add nsw i32 %159, -1
  %163 = and i32 %157, %162
  %164 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %165 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %164, align 8
  br label %166

166:                                              ; preds = %180, %161
  %167 = phi i32 [ 0, %161 ], [ %185, %180 ]
  %168 = phi i32 [ %163, %161 ], [ %184, %180 ]
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %165, i64 %169, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = icmp eq i32 %157, %171
  br i1 %174, label %175, label %180

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %165, i64 %169, i32 0
  %177 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair"* %176, i64 0, i32 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %146, %178
  br i1 %179, label %187, label %180

180:                                              ; preds = %175, %173
  %181 = add nsw i32 %168, -1
  %182 = icmp slt i32 %168, 1
  %183 = select i1 %182, i32 %159, i32 0
  %184 = add nsw i32 %181, %183
  %185 = add nuw nsw i32 %167, 1
  %186 = icmp eq i32 %185, %159
  br i1 %186, label %192, label %166

187:                                              ; preds = %175
  %188 = icmp eq %"struct.SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair"* %176, null
  br i1 %188, label %192, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %165, i64 %169, i32 0, i32 0, i32 1, i32 0
  %191 = load i32, i32* %190, align 4
  br label %557

192:                                              ; preds = %180, %166, %187, %138
  %193 = call %struct.SkAdvancedTypefaceMetrics* @_ZN9SkPDFFont10GetMetricsEPK10SkTypefaceP13SkPDFDocument(%class.SkTypeface* %22, %class.SkPDFDocument* %1) #11
  %194 = bitcast %class.sk_sp.98* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #11
  %195 = bitcast %class.SkPDFDict* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %195) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 32, i1 false) #11
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  %196 = call i32 @_ZNK10SkTypeface13getUnitsPerEmEv(%class.SkTypeface* %22) #11
  %197 = icmp eq %struct.SkAdvancedTypefaceMetrics* %193, null
  br i1 %197, label %551, label %198

198:                                              ; preds = %192
  %199 = trunc i32 %196 to i16
  call void @_ZN9SkPDFFont28PopulateCommonFontDescriptorEP9SkPDFDictRK25SkAdvancedTypefaceMetricsts(%class.SkPDFDict* nonnull %4, %struct.SkAdvancedTypefaceMetrics* nonnull dereferenceable(48) %193, i16 zeroext %199, i16 signext 0) #11
  %200 = getelementptr inbounds %struct.SkAdvancedTypefaceMetrics, %struct.SkAdvancedTypefaceMetrics* %193, i64 0, i32 4
  %201 = load i8, i8* %200, align 1
  %202 = and i8 %201, 2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %551

204:                                              ; preds = %198
  %205 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %205) #11
  store i32 -1431655766, i32* %5, align 4
  %206 = call %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface* %22, i32* nonnull %5) #11
  %207 = bitcast %class.sk_sp.98* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #11
  %208 = getelementptr inbounds %class.sk_sp.98, %class.sk_sp.98* %6, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %208, align 8
  %209 = icmp eq %class.SkStreamAsset* %206, null
  br i1 %209, label %217, label %210

210:                                              ; preds = %204
  %211 = bitcast %class.SkStreamAsset* %206 to i64 (%class.SkStreamAsset*)***
  %212 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %211, align 8, !noalias !2
  %213 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %212, i64 11
  %214 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %213, align 8, !noalias !2
  %215 = call i64 %214(%class.SkStreamAsset* nonnull %206) #11, !noalias !2
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %210, %204
  store %class.SkData* null, %class.SkData** %208, align 8, !alias.scope !2
  br label %511

218:                                              ; preds = %210
  %219 = shl i64 %215, 32
  %220 = add i64 %219, 4294967296
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %226, label %222

222:                                              ; preds = %218
  %223 = ashr exact i64 %220, 32
  %224 = call i8* @_Z15sk_malloc_throwmm(i64 %223, i64 1) #11
  %225 = ptrtoint i8* %224 to i64
  br label %226

226:                                              ; preds = %222, %218
  %227 = phi i64 [ %225, %222 ], [ 0, %218 ]
  %228 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %206, i64 0, i32 0, i32 0, i32 0
  %229 = inttoptr i64 %227 to i8*
  %230 = bitcast %class.SkStreamAsset* %206 to i64 (%class.SkStream*, i8*, i64)***
  %231 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %230, align 8, !noalias !2
  %232 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %231, i64 2
  %233 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %232, align 8, !noalias !2
  %234 = call i64 %233(%class.SkStream* %228, i8* %229, i64 %215) #11, !noalias !2
  %235 = ashr exact i64 %219, 32
  %236 = getelementptr inbounds i8, i8* %229, i64 %235
  store i8 0, i8* %236, align 1, !noalias !2
  %237 = icmp ult i64 %215, 2
  br i1 %237, label %359, label %238

238:                                              ; preds = %226
  %239 = load i8, i8* %229, align 1, !noalias !2
  %240 = icmp eq i8 %239, -128
  br i1 %240, label %241, label %359

241:                                              ; preds = %238
  %242 = getelementptr inbounds i8, i8* %229, i64 1
  %243 = load i8, i8* %242, align 1, !noalias !2
  %244 = icmp ne i8 %243, 1
  %245 = icmp ult i64 %215, 6
  %246 = or i1 %245, %244
  br i1 %246, label %359, label %247

247:                                              ; preds = %241
  %248 = getelementptr inbounds i8, i8* %229, i64 2
  %249 = load i8, i8* %248, align 1, !noalias !2
  %250 = zext i8 %249 to i64
  %251 = getelementptr inbounds i8, i8* %229, i64 3
  %252 = load i8, i8* %251, align 1, !noalias !2
  %253 = zext i8 %252 to i64
  %254 = shl nuw nsw i64 %253, 8
  %255 = or i64 %254, %250
  %256 = getelementptr inbounds i8, i8* %229, i64 4
  %257 = load i8, i8* %256, align 1, !noalias !2
  %258 = zext i8 %257 to i64
  %259 = shl nuw nsw i64 %258, 16
  %260 = or i64 %255, %259
  %261 = getelementptr inbounds i8, i8* %229, i64 5
  %262 = load i8, i8* %261, align 1, !noalias !2
  %263 = zext i8 %262 to i64
  %264 = shl nuw nsw i64 %263, 24
  %265 = or i64 %260, %264
  %266 = add nuw nsw i64 %265, 6
  %267 = icmp ult i64 %215, %266
  br i1 %267, label %359, label %268

268:                                              ; preds = %247
  %269 = getelementptr inbounds i8, i8* %229, i64 %266
  %270 = sub i64 %215, %266
  %271 = icmp ult i64 %270, 2
  br i1 %271, label %359, label %272

272:                                              ; preds = %268
  %273 = load i8, i8* %269, align 1, !noalias !2
  %274 = icmp eq i8 %273, -128
  br i1 %274, label %275, label %359

275:                                              ; preds = %272
  %276 = getelementptr inbounds i8, i8* %269, i64 1
  %277 = load i8, i8* %276, align 1, !noalias !2
  %278 = icmp ne i8 %277, 2
  %279 = icmp ult i64 %270, 6
  %280 = or i1 %279, %278
  br i1 %280, label %359, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds i8, i8* %269, i64 2
  %283 = load i8, i8* %282, align 1, !noalias !2
  %284 = zext i8 %283 to i64
  %285 = getelementptr inbounds i8, i8* %269, i64 3
  %286 = load i8, i8* %285, align 1, !noalias !2
  %287 = zext i8 %286 to i64
  %288 = shl nuw nsw i64 %287, 8
  %289 = or i64 %288, %284
  %290 = getelementptr inbounds i8, i8* %269, i64 4
  %291 = load i8, i8* %290, align 1, !noalias !2
  %292 = zext i8 %291 to i64
  %293 = shl nuw nsw i64 %292, 16
  %294 = or i64 %289, %293
  %295 = getelementptr inbounds i8, i8* %269, i64 5
  %296 = load i8, i8* %295, align 1, !noalias !2
  %297 = zext i8 %296 to i64
  %298 = shl nuw nsw i64 %297, 24
  %299 = or i64 %294, %298
  %300 = add nuw nsw i64 %299, 6
  %301 = icmp ult i64 %270, %300
  br i1 %301, label %359, label %302

302:                                              ; preds = %281
  %303 = getelementptr inbounds i8, i8* %269, i64 %300
  %304 = sub i64 %270, %300
  %305 = icmp ult i64 %304, 2
  br i1 %305, label %359, label %306

306:                                              ; preds = %302
  %307 = load i8, i8* %303, align 1, !noalias !2
  %308 = icmp eq i8 %307, -128
  br i1 %308, label %309, label %359

309:                                              ; preds = %306
  %310 = getelementptr inbounds i8, i8* %303, i64 1
  %311 = load i8, i8* %310, align 1, !noalias !2
  %312 = icmp ne i8 %311, 1
  %313 = icmp ult i64 %304, 6
  %314 = or i1 %313, %312
  br i1 %314, label %359, label %315

315:                                              ; preds = %309
  %316 = getelementptr inbounds i8, i8* %303, i64 2
  %317 = load i8, i8* %316, align 1, !noalias !2
  %318 = zext i8 %317 to i64
  %319 = getelementptr inbounds i8, i8* %303, i64 3
  %320 = load i8, i8* %319, align 1, !noalias !2
  %321 = zext i8 %320 to i64
  %322 = shl nuw nsw i64 %321, 8
  %323 = or i64 %322, %318
  %324 = getelementptr inbounds i8, i8* %303, i64 4
  %325 = load i8, i8* %324, align 1, !noalias !2
  %326 = zext i8 %325 to i64
  %327 = shl nuw nsw i64 %326, 16
  %328 = or i64 %323, %327
  %329 = getelementptr inbounds i8, i8* %303, i64 5
  %330 = load i8, i8* %329, align 1, !noalias !2
  %331 = zext i8 %330 to i64
  %332 = shl nuw nsw i64 %331, 24
  %333 = or i64 %328, %332
  %334 = add nuw nsw i64 %333, 6
  %335 = icmp ult i64 %304, %334
  br i1 %335, label %359, label %336

336:                                              ; preds = %315
  %337 = getelementptr inbounds i8, i8* %303, i64 %334
  %338 = sub i64 %304, %334
  %339 = icmp ult i64 %338, 2
  br i1 %339, label %359, label %340

340:                                              ; preds = %336
  %341 = load i8, i8* %337, align 1, !noalias !2
  %342 = icmp eq i8 %341, -128
  br i1 %342, label %343, label %359

343:                                              ; preds = %340
  %344 = getelementptr inbounds i8, i8* %337, i64 1
  %345 = load i8, i8* %344, align 1, !noalias !2
  %346 = icmp eq i8 %345, 3
  br i1 %346, label %347, label %359

347:                                              ; preds = %343
  %348 = add nuw nsw i64 %299, %265
  %349 = add nuw nsw i64 %348, %333
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %208, align 8, !alias.scope !2
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.98* nonnull sret %6, i64 %349) #11
  %350 = getelementptr inbounds i8, i8* %229, i64 6
  %351 = getelementptr inbounds i8, i8* %350, i64 %265
  %352 = getelementptr inbounds i8, i8* %351, i64 6
  %353 = getelementptr inbounds i8, i8* %352, i64 %265
  %354 = load %class.SkData*, %class.SkData** %208, align 8, !alias.scope !2
  %355 = getelementptr inbounds %class.SkData, %class.SkData* %354, i64 0, i32 3
  %356 = load i8*, i8** %355, align 8
  %357 = getelementptr inbounds i8, i8* %356, i64 %265
  %358 = getelementptr inbounds i8, i8* %357, i64 %299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %356, i8* align 1 %350, i64 %265, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %357, i8* align 1 %352, i64 %299, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %358, i8* align 1 %353, i64 %333, i1 false) #11
  br label %505

359:                                              ; preds = %343, %340, %336, %315, %309, %306, %302, %281, %275, %272, %268, %247, %241, %238, %226
  %360 = phi i64 [ 0, %226 ], [ 0, %241 ], [ 0, %247 ], [ 0, %268 ], [ 0, %275 ], [ 0, %281 ], [ 0, %302 ], [ 0, %309 ], [ %333, %315 ], [ %333, %336 ], [ %333, %343 ], [ %333, %340 ], [ 0, %306 ], [ 0, %272 ], [ 0, %238 ]
  %361 = phi i64 [ 0, %226 ], [ 0, %241 ], [ 0, %247 ], [ 0, %268 ], [ 0, %275 ], [ %299, %281 ], [ %299, %302 ], [ %299, %309 ], [ %299, %315 ], [ %299, %336 ], [ %299, %343 ], [ %299, %340 ], [ %299, %306 ], [ 0, %272 ], [ 0, %238 ]
  %362 = phi i64 [ 0, %226 ], [ 0, %241 ], [ %265, %247 ], [ %265, %268 ], [ %265, %275 ], [ %265, %281 ], [ %265, %302 ], [ %265, %309 ], [ %265, %315 ], [ %265, %336 ], [ %265, %343 ], [ %265, %340 ], [ %265, %306 ], [ %265, %272 ], [ 0, %238 ]
  %363 = getelementptr inbounds i8, i8* %229, i64 %215
  %364 = call i8* @strstr(i8* %229, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0)) #14
  %365 = icmp eq i8* %364, null
  br i1 %365, label %427, label %366

366:                                              ; preds = %359
  %367 = getelementptr inbounds i8, i8* %364, i64 5
  br label %368

368:                                              ; preds = %373, %366
  %369 = phi i8* [ %367, %366 ], [ %374, %373 ]
  %370 = load i8, i8* %369, align 1
  switch i8 %370, label %375 [
    i8 10, label %371
    i8 13, label %371
    i8 32, label %371
  ]

371:                                              ; preds = %368, %368, %368
  %372 = icmp ult i8* %369, %363
  br i1 %372, label %373, label %375

373:                                              ; preds = %371
  %374 = getelementptr inbounds i8, i8* %369, i64 1
  br label %368

375:                                              ; preds = %371, %368
  %376 = ptrtoint i8* %369 to i64
  %377 = sub i64 %376, %227
  %378 = call i8* @strstr(i8* %369, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #14
  %379 = icmp eq i8* %378, null
  br i1 %379, label %427, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds i8, i8* %378, i64 -1
  %382 = icmp ugt i8* %381, %369
  br i1 %382, label %383, label %427

383:                                              ; preds = %380, %389
  %384 = phi i8* [ %391, %389 ], [ %381, %380 ]
  %385 = phi i32 [ %390, %389 ], [ 0, %380 ]
  %386 = load i8, i8* %384, align 1
  switch i8 %386, label %427 [
    i8 10, label %389
    i8 13, label %389
    i8 32, label %389
    i8 48, label %387
  ]

387:                                              ; preds = %383
  %388 = add nsw i32 %385, 1
  br label %389

389:                                              ; preds = %387, %383, %383, %383
  %390 = phi i32 [ %385, %383 ], [ %388, %387 ], [ %385, %383 ], [ %385, %383 ]
  %391 = getelementptr inbounds i8, i8* %384, i64 -1
  %392 = icmp ugt i8* %391, %369
  %393 = icmp slt i32 %390, 512
  %394 = and i1 %392, %393
  br i1 %394, label %383, label %395

395:                                              ; preds = %389
  %396 = icmp eq i32 %390, 512
  br i1 %396, label %397, label %427

397:                                              ; preds = %395
  %398 = ptrtoint i8* %391 to i64
  %399 = sub i64 %398, %227
  %400 = sub i64 %399, %377
  %401 = sub i64 %215, %377
  %402 = sub i64 %401, %400
  br i1 %392, label %403, label %430

403:                                              ; preds = %397
  %404 = tail call i16** @__ctype_b_loc() #15
  %405 = load i16*, i16** %404, align 8
  br label %406

406:                                              ; preds = %425, %403
  %407 = phi i8 [ %370, %403 ], [ %426, %425 ]
  %408 = phi i32 [ 0, %403 ], [ %422, %425 ]
  %409 = phi i8* [ %369, %403 ], [ %423, %425 ]
  %410 = sext i8 %407 to i64
  %411 = getelementptr inbounds i16, i16* %405, i64 %410
  %412 = load i16, i16* %411, align 2
  %413 = and i16 %412, 8192
  %414 = icmp eq i16 %413, 0
  br i1 %414, label %415, label %421

415:                                              ; preds = %406
  %416 = sext i8 %407 to i32
  %417 = call i8* @memchr(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i32 %416, i64 23) #11
  %418 = icmp eq i8* %417, null
  br i1 %418, label %427, label %419

419:                                              ; preds = %415
  %420 = add nsw i32 %408, 1
  br label %421

421:                                              ; preds = %419, %406
  %422 = phi i32 [ %408, %406 ], [ %420, %419 ]
  %423 = getelementptr inbounds i8, i8* %409, i64 1
  %424 = icmp eq i8* %423, %391
  br i1 %424, label %430, label %425

425:                                              ; preds = %421
  %426 = load i8, i8* %423, align 1
  br label %406

427:                                              ; preds = %383, %415, %395, %380, %375, %359
  %428 = phi i64 [ %360, %359 ], [ %360, %375 ], [ %360, %395 ], [ %360, %380 ], [ %402, %415 ], [ %360, %383 ]
  %429 = phi i64 [ %362, %359 ], [ %377, %375 ], [ %377, %395 ], [ %377, %380 ], [ %377, %415 ], [ %377, %383 ]
  store %class.SkData* null, %class.SkData** %208, align 8, !alias.scope !2
  br label %505

430:                                              ; preds = %421, %397
  %431 = phi i32 [ 0, %397 ], [ %422, %421 ]
  %432 = add nsw i32 %431, 1
  %433 = sdiv i32 %432, 2
  %434 = sext i32 %433 to i64
  %435 = add i64 %402, %377
  %436 = add i64 %435, %434
  %437 = bitcast %class.sk_sp.98* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %437) #11, !noalias !2
  %438 = getelementptr inbounds %class.sk_sp.98, %class.sk_sp.98* %3, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %438, align 8, !noalias !2
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.98* nonnull sret %3, i64 %436) #11
  %439 = load %class.SkData*, %class.SkData** %438, align 8, !noalias !2
  %440 = getelementptr inbounds %class.SkData, %class.SkData* %439, i64 0, i32 3
  %441 = load i8*, i8** %440, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %441, i8* align 1 %229, i64 %377, i1 false) #11
  %442 = getelementptr inbounds i8, i8* %441, i64 %377
  %443 = getelementptr inbounds i8, i8* %229, i64 %399
  %444 = icmp sgt i64 %400, 0
  br i1 %444, label %445, label %496

445:                                              ; preds = %430
  %446 = getelementptr inbounds i8, i8* %229, i64 %377
  %447 = tail call i16** @__ctype_b_loc() #15
  br label %448

448:                                              ; preds = %484, %445
  %449 = phi i8 [ 1, %445 ], [ %487, %484 ]
  %450 = phi i8 [ 0, %445 ], [ %486, %484 ]
  %451 = phi i64 [ 0, %445 ], [ %485, %484 ]
  %452 = phi i8* [ %446, %445 ], [ %488, %484 ]
  %453 = load i8, i8* %452, align 1
  %454 = load i16*, i16** %447, align 8
  %455 = zext i8 %453 to i64
  %456 = getelementptr inbounds i16, i16* %454, i64 %455
  %457 = load i16, i16* %456, align 2
  %458 = and i16 %457, 4096
  %459 = icmp eq i16 %458, 0
  br i1 %459, label %484, label %460

460:                                              ; preds = %448
  %461 = icmp ult i8 %453, 58
  br i1 %461, label %462, label %464

462:                                              ; preds = %460
  %463 = add nsw i8 %453, -48
  br label %471

464:                                              ; preds = %460
  %465 = icmp ult i8 %453, 71
  br i1 %465, label %466, label %468

466:                                              ; preds = %464
  %467 = add nsw i8 %453, -55
  br label %474

468:                                              ; preds = %464
  %469 = icmp ult i8 %453, 103
  %470 = add i8 %453, -87
  br i1 %469, label %471, label %484

471:                                              ; preds = %468, %462
  %472 = phi i8 [ %463, %462 ], [ %470, %468 ]
  %473 = icmp slt i8 %472, 0
  br i1 %473, label %484, label %474

474:                                              ; preds = %471, %466
  %475 = phi i8 [ %467, %466 ], [ %472, %471 ]
  %476 = and i8 %449, 1
  %477 = icmp eq i8 %476, 0
  br i1 %477, label %480, label %478

478:                                              ; preds = %474
  %479 = shl i8 %475, 4
  br label %484

480:                                              ; preds = %474
  %481 = or i8 %475, %450
  %482 = add i64 %451, 1
  %483 = getelementptr inbounds i8, i8* %442, i64 %451
  store i8 %481, i8* %483, align 1
  br label %484

484:                                              ; preds = %480, %478, %471, %468, %448
  %485 = phi i64 [ %451, %471 ], [ %451, %478 ], [ %482, %480 ], [ %451, %468 ], [ %451, %448 ]
  %486 = phi i8 [ %450, %471 ], [ %479, %478 ], [ %481, %480 ], [ %450, %468 ], [ %450, %448 ]
  %487 = phi i8 [ %449, %471 ], [ 0, %478 ], [ 1, %480 ], [ %449, %468 ], [ %449, %448 ]
  %488 = getelementptr inbounds i8, i8* %452, i64 1
  %489 = icmp ult i8* %488, %443
  br i1 %489, label %448, label %490

490:                                              ; preds = %484
  %491 = and i8 %487, 1
  %492 = icmp eq i8 %491, 0
  br i1 %492, label %493, label %496

493:                                              ; preds = %490
  %494 = add i64 %485, 1
  %495 = getelementptr inbounds i8, i8* %442, i64 %485
  store i8 %486, i8* %495, align 1
  br label %496

496:                                              ; preds = %493, %490, %430
  %497 = phi i64 [ %485, %490 ], [ %494, %493 ], [ 0, %430 ]
  %498 = add i64 %497, %377
  %499 = shl i64 %498, 32
  %500 = ashr exact i64 %499, 32
  %501 = getelementptr inbounds i8, i8* %441, i64 %500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %501, i8* align 1 %443, i64 %402, i1 false) #11
  %502 = bitcast %class.sk_sp.98* %3 to i64*
  %503 = load i64, i64* %502, align 8, !noalias !2
  %504 = bitcast %class.sk_sp.98* %6 to i64*
  store i64 %503, i64* %504, align 8, !alias.scope !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %437) #11, !noalias !2
  br label %505

505:                                              ; preds = %496, %427, %347
  %506 = phi i64 [ %428, %427 ], [ %402, %496 ], [ %333, %347 ]
  %507 = phi i64 [ %361, %427 ], [ %434, %496 ], [ %299, %347 ]
  %508 = phi i64 [ %429, %427 ], [ %377, %496 ], [ %265, %347 ]
  %509 = icmp eq i64 %227, 0
  br i1 %509, label %511, label %510

510:                                              ; preds = %505
  call void @_Z7sk_freePv(i8* nonnull %229) #11
  br label %511

511:                                              ; preds = %510, %505, %217
  %512 = phi i64 [ 0, %217 ], [ %506, %505 ], [ %506, %510 ]
  %513 = phi i64 [ 0, %217 ], [ %507, %505 ], [ %507, %510 ]
  %514 = phi i64 [ 0, %217 ], [ %508, %505 ], [ %508, %510 ]
  br i1 %209, label %520, label %515

515:                                              ; preds = %511
  %516 = bitcast %class.SkStreamAsset* %206 to void (%class.SkStreamAsset*)***
  %517 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %516, align 8, !noalias !2
  %518 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %517, i64 1
  %519 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %518, align 8
  call void %519(%class.SkStreamAsset* nonnull %206) #11
  br label %520

520:                                              ; preds = %515, %511
  %521 = load %class.SkData*, %class.SkData** %208, align 8
  %522 = icmp eq %class.SkData* %521, null
  br i1 %522, label %550, label %523

523:                                              ; preds = %520
  %524 = call i8* @_Znwm(i64 32) #13
  %525 = bitcast i8* %524 to %class.SkPDFDict*
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %525, i8* null) #11
  call void @_ZN9SkPDFDict9insertIntEPKcm(%class.SkPDFDict* nonnull %525, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i64 %514) #11
  call void @_ZN9SkPDFDict9insertIntEPKcm(%class.SkPDFDict* nonnull %525, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i64 %513) #11
  call void @_ZN9SkPDFDict9insertIntEPKcm(%class.SkPDFDict* nonnull %525, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i64 %512) #11
  %526 = bitcast %class.sk_sp.98* %6 to i64*
  %527 = load i64, i64* %526, align 8
  store %class.SkData* null, %class.SkData** %208, align 8
  %528 = bitcast %class.sk_sp.98* %7 to i64*
  store i64 %527, i64* %528, align 8
  %529 = call %class.SkMemoryStream* @_ZN14SkMemoryStream4MakeE5sk_spI6SkDataE(%class.sk_sp.98* nonnull %7) #11
  %530 = getelementptr inbounds %class.sk_sp.98, %class.sk_sp.98* %7, i64 0, i32 0
  %531 = load %class.SkData*, %class.SkData** %530, align 8
  %532 = icmp eq %class.SkData* %531, null
  br i1 %532, label %539, label %533

533:                                              ; preds = %523
  %534 = getelementptr inbounds %class.SkData, %class.SkData* %531, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %535 = atomicrmw add i32* %534, i32 -1 acq_rel
  %536 = icmp eq i32 %535, 1
  br i1 %536, label %537, label %539

537:                                              ; preds = %533
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %531) #11
  %538 = bitcast %class.SkData* %531 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %538) #11
  br label %539

539:                                              ; preds = %537, %533, %523
  %540 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %529, i64 0, i32 0, i32 0
  %541 = call i32 @_Z14SkPDFStreamOutNSt3__110unique_ptrI9SkPDFDictNS_14default_deleteIS1_EEEENS0_I13SkStreamAssetNS2_IS5_EEEEP13SkPDFDocumentb(%class.SkPDFDict* nonnull %525, %class.SkStreamAsset* %540, %class.SkPDFDocument* %1, i1 zeroext true) #11
  call void @_ZN9SkPDFDict9insertRefEPKc22SkPDFIndirectReference(%class.SkPDFDict* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i32 %541) #11
  %542 = load %class.SkData*, %class.SkData** %208, align 8
  %543 = icmp eq %class.SkData* %542, null
  br i1 %543, label %550, label %544

544:                                              ; preds = %539
  %545 = getelementptr inbounds %class.SkData, %class.SkData* %542, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = atomicrmw add i32* %545, i32 -1 acq_rel
  %547 = icmp eq i32 %546, 1
  br i1 %547, label %548, label %550

548:                                              ; preds = %544
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %542) #11
  %549 = bitcast %class.SkData* %542 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %549) #11
  br label %550

550:                                              ; preds = %548, %544, %539, %520
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %205) #11
  br label %551

551:                                              ; preds = %550, %198, %192
  %552 = getelementptr inbounds %class.SkPDFDict, %class.SkPDFDict* %4, i64 0, i32 0
  %553 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = atomicrmw add i32* %553, i32 1 seq_cst
  %555 = call i32 @_ZN13SkPDFDocument4emitERK11SkPDFObject22SkPDFIndirectReference(%class.SkPDFDocument* %1, %class.SkPDFObject* nonnull dereferenceable(8) %552, i32 %554) #11
  call void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %195) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #11
  %556 = call %struct.SkPDFIndirectReference* @_ZN10SkTHashMapIj22SkPDFIndirectReference10SkGoodHashE3setEjS0_(%class.SkTHashMap.56* %147, i32 %146, i32 %555) #11
  br label %557

557:                                              ; preds = %189, %551
  %558 = phi i32 [ %555, %551 ], [ %191, %189 ]
  call void @_ZN9SkPDFDict9insertRefEPKc22SkPDFIndirectReference(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 %558) #11
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #11
  %559 = call %struct.SkAdvancedTypefaceMetrics* @_ZN9SkPDFFont10GetMetricsEPK10SkTypefaceP13SkPDFDocument(%class.SkTypeface* %22, %class.SkPDFDocument* %1) #11
  %560 = icmp eq %struct.SkAdvancedTypefaceMetrics* %559, null
  br i1 %560, label %563, label %561

561:                                              ; preds = %557
  %562 = getelementptr inbounds %struct.SkAdvancedTypefaceMetrics, %struct.SkAdvancedTypefaceMetrics* %559, i64 0, i32 0
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %11, %class.SkString* dereferenceable(8) %562) #11
  call void @_ZN9SkPDFDict10insertNameEPKc8SkString(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), %class.SkString* nonnull %11) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #11
  br label %563

563:                                              ; preds = %557, %561
  %564 = zext i16 %143 to i32
  %565 = zext i16 %141 to i32
  %566 = sub nsw i32 1, %565
  %567 = add nsw i32 %566, %564
  call void @_ZN9SkPDFDict9insertIntEPKcm(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 0) #11
  %568 = zext i32 %567 to i64
  call void @_ZN9SkPDFDict9insertIntEPKcm(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 %568) #11
  %569 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %569) #11
  store i32 -1431655766, i32* %12, align 4
  %570 = call i8* @_Znwm(i64 32) #13
  %571 = bitcast i8* %570 to %class.SkPDFArray*
  call void @_ZN10SkPDFArrayC1Ev(%class.SkPDFArray* nonnull %571) #11
  call void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray* nonnull %571, i32 0) #11
  %572 = ptrtoint i8* %570 to i64
  %573 = sub nsw i32 %564, %565
  %574 = add nsw i32 %573, 2
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %584, label %576

576:                                              ; preds = %563
  %577 = sext i32 %574 to i64
  %578 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %577, i64 2) #11
  %579 = extractvalue { i64, i1 } %578, 1
  %580 = extractvalue { i64, i1 } %578, 0
  %581 = select i1 %579, i64 -1, i64 %580
  %582 = call i8* @_Znam(i64 %581) #13
  %583 = ptrtoint i8* %582 to i64
  br label %584

584:                                              ; preds = %563, %576
  %585 = phi i64 [ 0, %563 ], [ %583, %576 ]
  %586 = inttoptr i64 %585 to i16*
  store i16 0, i16* %586, align 2
  %587 = icmp ult i16 %143, %141
  br i1 %587, label %681, label %588

588:                                              ; preds = %584
  %589 = zext i16 %141 to i64
  %590 = add nuw nsw i32 %564, 1
  %591 = zext i32 %590 to i64
  %592 = sub nsw i64 %591, %589
  %593 = icmp ult i64 %592, 16
  br i1 %593, label %594, label %618

594:                                              ; preds = %679, %618, %588
  %595 = phi i64 [ %589, %618 ], [ %589, %588 ], [ %628, %679 ]
  %596 = phi i32 [ %565, %618 ], [ %565, %588 ], [ %630, %679 ]
  %597 = sub nsw i64 %591, %595
  %598 = xor i64 %595, -1
  %599 = add nsw i64 %598, %591
  %600 = and i64 %597, 3
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %614, label %602

602:                                              ; preds = %594, %602
  %603 = phi i64 [ %610, %602 ], [ %595, %594 ]
  %604 = phi i32 [ %611, %602 ], [ %596, %594 ]
  %605 = phi i64 [ %612, %602 ], [ %600, %594 ]
  %606 = trunc i64 %603 to i16
  %607 = add i32 %566, %604
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds i16, i16* %586, i64 %608
  store i16 %606, i16* %609, align 2
  %610 = add nuw nsw i64 %603, 1
  %611 = add nuw nsw i32 %604, 1
  %612 = add i64 %605, -1
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %614, label %602, !llvm.loop !5

614:                                              ; preds = %602, %594
  %615 = phi i64 [ %595, %594 ], [ %610, %602 ]
  %616 = phi i32 [ %596, %594 ], [ %611, %602 ]
  %617 = icmp ult i64 %599, 3
  br i1 %617, label %681, label %692

618:                                              ; preds = %588
  %619 = xor i64 %589, -1
  %620 = add nsw i64 %619, %591
  %621 = trunc i64 %620 to i32
  %622 = add i32 %621, 1
  %623 = icmp slt i32 %622, 1
  %624 = icmp ugt i64 %620, 4294967295
  %625 = or i1 %623, %624
  br i1 %625, label %594, label %626

626:                                              ; preds = %618
  %627 = and i64 %592, -16
  %628 = add nsw i64 %627, %589
  %629 = trunc i64 %627 to i32
  %630 = add i32 %565, %629
  %631 = insertelement <8 x i16> undef, i16 %141, i32 0
  %632 = shufflevector <8 x i16> %631, <8 x i16> undef, <8 x i32> zeroinitializer
  %633 = add <8 x i16> %632, <i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7>
  %634 = add nsw i64 %627, -16
  %635 = lshr exact i64 %634, 4
  %636 = add nuw nsw i64 %635, 1
  %637 = and i64 %636, 1
  %638 = icmp eq i64 %634, 0
  br i1 %638, label %666, label %639

639:                                              ; preds = %626
  %640 = sub nuw nsw i64 %636, %637
  br label %641

641:                                              ; preds = %641, %639
  %642 = phi i64 [ 0, %639 ], [ %662, %641 ]
  %643 = phi <8 x i16> [ %633, %639 ], [ %663, %641 ]
  %644 = phi i64 [ %640, %639 ], [ %664, %641 ]
  %645 = add <8 x i16> %643, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %646 = shl i64 %642, 32
  %647 = ashr exact i64 %646, 32
  %648 = or i64 %647, 1
  %649 = getelementptr inbounds i16, i16* %586, i64 %648
  %650 = bitcast i16* %649 to <8 x i16>*
  store <8 x i16> %643, <8 x i16>* %650, align 2
  %651 = getelementptr inbounds i16, i16* %649, i64 8
  %652 = bitcast i16* %651 to <8 x i16>*
  store <8 x i16> %645, <8 x i16>* %652, align 2
  %653 = add <8 x i16> %643, <i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16, i16 16>
  %654 = add <8 x i16> %643, <i16 24, i16 24, i16 24, i16 24, i16 24, i16 24, i16 24, i16 24>
  %655 = shl i64 %642, 32
  %656 = ashr exact i64 %655, 32
  %657 = or i64 %656, 17
  %658 = getelementptr inbounds i16, i16* %586, i64 %657
  %659 = bitcast i16* %658 to <8 x i16>*
  store <8 x i16> %653, <8 x i16>* %659, align 2
  %660 = getelementptr inbounds i16, i16* %658, i64 8
  %661 = bitcast i16* %660 to <8 x i16>*
  store <8 x i16> %654, <8 x i16>* %661, align 2
  %662 = add i64 %642, 32
  %663 = add <8 x i16> %643, <i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32>
  %664 = add i64 %644, -2
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %641, !llvm.loop !7

666:                                              ; preds = %641, %626
  %667 = phi i64 [ 0, %626 ], [ %662, %641 ]
  %668 = phi <8 x i16> [ %633, %626 ], [ %663, %641 ]
  %669 = icmp eq i64 %637, 0
  br i1 %669, label %679, label %670

670:                                              ; preds = %666
  %671 = add <8 x i16> %668, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %672 = shl i64 %667, 32
  %673 = ashr exact i64 %672, 32
  %674 = or i64 %673, 1
  %675 = getelementptr inbounds i16, i16* %586, i64 %674
  %676 = bitcast i16* %675 to <8 x i16>*
  store <8 x i16> %668, <8 x i16>* %676, align 2
  %677 = getelementptr inbounds i16, i16* %675, i64 8
  %678 = bitcast i16* %677 to <8 x i16>*
  store <8 x i16> %671, <8 x i16>* %678, align 2
  br label %679

679:                                              ; preds = %666, %670
  %680 = icmp eq i64 %592, %627
  br i1 %680, label %681, label %594

681:                                              ; preds = %614, %692, %679, %584
  %682 = bitcast %class.SkStrikeSpec* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %682) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %682, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._Z18SkPDFEmitType1FontRK9SkPDFFontP13SkPDFDocument.strikeSpec to i8*), i64 160, i1 false)
  call void @_ZN12SkStrikeSpec13MakePDFVectorERK10SkTypefacePi(%class.SkStrikeSpec* nonnull sret %13, %class.SkTypeface* dereferenceable(48) %22, i32* nonnull %12) #11
  %683 = bitcast %class.SkBulkGlyphMetrics* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %683) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %683, i8 -86, i64 184, i1 false)
  call void @_ZN18SkBulkGlyphMetricsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetrics* nonnull %14, %class.SkStrikeSpec* nonnull dereferenceable(160) %13) #11
  %684 = sext i32 %574 to i64
  %685 = call { %class.SkGlyph**, i64 } @_ZN18SkBulkGlyphMetrics6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetrics* nonnull %14, i16* %586, i64 %684) #11
  %686 = extractvalue { %class.SkGlyph**, i64 } %685, 0
  %687 = icmp sgt i32 %574, 0
  br i1 %687, label %688, label %720

688:                                              ; preds = %681
  %689 = add nuw nsw i32 %564, 2
  %690 = sub nsw i32 %689, %565
  %691 = zext i32 %690 to i64
  br label %828

692:                                              ; preds = %614, %692
  %693 = phi i64 [ %717, %692 ], [ %615, %614 ]
  %694 = phi i32 [ %718, %692 ], [ %616, %614 ]
  %695 = trunc i64 %693 to i16
  %696 = add i32 %566, %694
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds i16, i16* %586, i64 %697
  store i16 %695, i16* %698, align 2
  %699 = add nuw nsw i32 %694, 1
  %700 = trunc i64 %693 to i16
  %701 = add i16 %700, 1
  %702 = add i32 %566, %699
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds i16, i16* %586, i64 %703
  store i16 %701, i16* %704, align 2
  %705 = add nuw nsw i32 %694, 2
  %706 = trunc i64 %693 to i16
  %707 = add i16 %706, 2
  %708 = add i32 %566, %705
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds i16, i16* %586, i64 %709
  store i16 %707, i16* %710, align 2
  %711 = add nuw nsw i32 %694, 3
  %712 = trunc i64 %693 to i16
  %713 = add i16 %712, 3
  %714 = add i32 %566, %711
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds i16, i16* %586, i64 %715
  store i16 %713, i16* %716, align 2
  %717 = add nuw nsw i64 %693, 4
  %718 = add nuw nsw i32 %694, 4
  %719 = icmp eq i64 %717, %591
  br i1 %719, label %681, label %692, !llvm.loop !9

720:                                              ; preds = %841, %681
  %721 = bitcast %"class.std::__1::unique_ptr.284"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %721) #11
  %722 = bitcast %"class.std::__1::unique_ptr.284"* %15 to i64*
  store i64 %572, i64* %722, align 8
  call void @_ZN9SkPDFDict12insertObjectEPKcONSt3__110unique_ptrI11SkPDFObjectNS2_14default_deleteIS4_EEEE(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::unique_ptr.284"* nonnull dereferenceable(8) %15) #11
  %723 = getelementptr inbounds %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.284"* %15, i64 0, i32 0, i32 0, i32 0
  %724 = load %class.SkPDFObject*, %class.SkPDFObject** %723, align 8
  store %class.SkPDFObject* null, %class.SkPDFObject** %723, align 8
  %725 = icmp eq %class.SkPDFObject* %724, null
  br i1 %725, label %731, label %726

726:                                              ; preds = %720
  %727 = bitcast %class.SkPDFObject* %724 to void (%class.SkPDFObject*)***
  %728 = load void (%class.SkPDFObject*)**, void (%class.SkPDFObject*)*** %727, align 8
  %729 = getelementptr inbounds void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %728, i64 2
  %730 = load void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %729, align 8
  call void %730(%class.SkPDFObject* nonnull %724) #11
  br label %731

731:                                              ; preds = %720, %726
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %721) #11
  %732 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %14, i64 0, i32 1, i32 0
  %733 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %732, align 8
  %734 = icmp eq %"class.SkStrikeCache::Strike"* %733, null
  br i1 %734, label %745, label %735

735:                                              ; preds = %731
  %736 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %733, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %737 = atomicrmw add i32* %736, i32 -1 acq_rel
  %738 = icmp eq i32 %737, 1
  br i1 %738, label %739, label %745

739:                                              ; preds = %735
  %740 = bitcast %"class.SkStrikeCache::Strike"* %733 to %class.SkRefCntBase*
  %741 = bitcast %"class.SkStrikeCache::Strike"* %733 to void (%class.SkRefCntBase*)***
  %742 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %741, align 8
  %743 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %742, i64 2
  %744 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %743, align 8
  call void %744(%class.SkRefCntBase* nonnull %740) #11
  br label %745

745:                                              ; preds = %739, %735, %731
  %746 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %14, i64 0, i32 0, i32 1
  %747 = load %class.SkGlyph**, %class.SkGlyph*** %746, align 8
  %748 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %14, i64 0, i32 0, i32 0
  %749 = load i32, i32* %748, align 8
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %747, i64 %750
  br label %752

752:                                              ; preds = %752, %745
  %753 = phi %class.SkGlyph** [ %751, %745 ], [ %755, %752 ]
  %754 = icmp ugt %class.SkGlyph** %753, %747
  %755 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %753, i64 -1
  br i1 %754, label %752, label %756

756:                                              ; preds = %752
  %757 = bitcast %class.SkGlyph** %747 to i8*
  %758 = icmp eq i32 %749, 0
  br i1 %758, label %763, label %759

759:                                              ; preds = %756
  %760 = icmp sgt i32 %749, 20
  br i1 %760, label %761, label %762

761:                                              ; preds = %759
  call void @_Z7sk_freePv(i8* %757) #11
  br label %762

762:                                              ; preds = %761, %759
  store %class.SkGlyph** null, %class.SkGlyph*** %746, align 8
  store i32 0, i32* %748, align 8
  br label %763

763:                                              ; preds = %756, %762
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %683) #11
  %764 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %13, i64 0, i32 3, i32 0
  %765 = load %class.SkTypeface*, %class.SkTypeface** %764, align 8
  %766 = icmp eq %class.SkTypeface* %765, null
  br i1 %766, label %777, label %767

767:                                              ; preds = %763
  %768 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %765, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = atomicrmw add i32* %768, i32 -1 acq_rel
  %770 = icmp eq i32 %769, 1
  br i1 %770, label %771, label %777

771:                                              ; preds = %767
  %772 = bitcast %class.SkTypeface* %765 to %class.SkRefCntBase*
  %773 = bitcast %class.SkTypeface* %765 to void (%class.SkRefCntBase*)***
  %774 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %773, align 8
  %775 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %774, i64 2
  %776 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %775, align 8
  call void %776(%class.SkRefCntBase* nonnull %772) #11
  br label %777

777:                                              ; preds = %771, %767, %763
  %778 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %13, i64 0, i32 2, i32 0
  %779 = load %class.SkPathEffect*, %class.SkPathEffect** %778, align 8
  %780 = icmp eq %class.SkPathEffect* %779, null
  br i1 %780, label %791, label %781

781:                                              ; preds = %777
  %782 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %779, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %783 = atomicrmw add i32* %782, i32 -1 acq_rel
  %784 = icmp eq i32 %783, 1
  br i1 %784, label %785, label %791

785:                                              ; preds = %781
  %786 = bitcast %class.SkPathEffect* %779 to %class.SkRefCntBase*
  %787 = bitcast %class.SkPathEffect* %779 to void (%class.SkRefCntBase*)***
  %788 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %787, align 8
  %789 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %788, i64 2
  %790 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %789, align 8
  call void %790(%class.SkRefCntBase* nonnull %786) #11
  br label %791

791:                                              ; preds = %785, %781, %777
  %792 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %13, i64 0, i32 1, i32 0
  %793 = load %class.SkMaskFilter*, %class.SkMaskFilter** %792, align 8
  %794 = icmp eq %class.SkMaskFilter* %793, null
  br i1 %794, label %805, label %795

795:                                              ; preds = %791
  %796 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %793, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %797 = atomicrmw add i32* %796, i32 -1 acq_rel
  %798 = icmp eq i32 %797, 1
  br i1 %798, label %799, label %805

799:                                              ; preds = %795
  %800 = bitcast %class.SkMaskFilter* %793 to %class.SkRefCntBase*
  %801 = bitcast %class.SkMaskFilter* %793 to void (%class.SkRefCntBase*)***
  %802 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %801, align 8
  %803 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %802, i64 2
  %804 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %803, align 8
  call void %804(%class.SkRefCntBase* nonnull %800) #11
  br label %805

805:                                              ; preds = %791, %795, %799
  %806 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %13, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %806) #11
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %682) #11
  %807 = icmp eq i64 %585, 0
  br i1 %807, label %810, label %808

808:                                              ; preds = %805
  %809 = inttoptr i64 %585 to i8*
  call void @_ZdaPv(i8* %809) #13
  br label %810

810:                                              ; preds = %808, %805
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %569) #11
  %811 = call i8* @_Znwm(i64 32) #13
  %812 = bitcast i8* %811 to %class.SkPDFArray*
  call void @_ZN10SkPDFArrayC1Ev(%class.SkPDFArray* nonnull %812) #11
  call void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray* nonnull %812, i32 0) #11
  %813 = ptrtoint i8* %811 to i64
  %814 = add nsw i32 %573, 3
  call void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray* nonnull %812, i32 %814) #11
  call void @_ZN10SkPDFArray9appendIntEi(%class.SkPDFArray* nonnull %812, i32 0) #11
  %815 = bitcast %class.SkString* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %815) #11
  %816 = getelementptr inbounds %class.SkString, %class.SkString* %16, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %816, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)) #11
  %817 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %139, i64 0, i32 0, i32 0
  %818 = load %class.SkString*, %class.SkString** %817, align 8
  %819 = getelementptr inbounds %class.SkString, %class.SkString* %818, i64 0, i32 0, i32 0
  %820 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %819, align 8
  %821 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %820, i64 0, i32 0
  %822 = load i32, i32* %821, align 4
  %823 = icmp eq i32 %822, 0
  %824 = select i1 %823, %class.SkString* %16, %class.SkString* %818
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %17, %class.SkString* dereferenceable(8) %824) #11
  call void @_ZN10SkPDFArray10appendNameE8SkString(%class.SkPDFArray* nonnull %812, %class.SkString* nonnull %17) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %17) #11
  br i1 %587, label %845, label %825

825:                                              ; preds = %810
  %826 = zext i16 %141 to i64
  %827 = zext i16 %143 to i64
  br label %875

828:                                              ; preds = %841, %688
  %829 = phi i64 [ 0, %688 ], [ %843, %841 ]
  %830 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %686, i64 %829
  %831 = load %class.SkGlyph*, %class.SkGlyph** %830, align 8
  %832 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %831, i64 0, i32 6
  %833 = load float, float* %832, align 8
  %834 = load i32, i32* %12, align 4
  %835 = trunc i32 %834 to i16
  %836 = icmp eq i16 %835, 1000
  br i1 %836, label %841, label %837

837:                                              ; preds = %828
  %838 = fmul float %833, 1.000000e+03
  %839 = uitofp i16 %835 to float
  %840 = fdiv float %838, %839
  br label %841

841:                                              ; preds = %828, %837
  %842 = phi float [ %840, %837 ], [ %833, %828 ]
  call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %571, float %842) #11
  %843 = add nuw nsw i64 %829, 1
  %844 = icmp eq i64 %843, %691
  br i1 %844, label %720, label %828

845:                                              ; preds = %875, %810
  %846 = call i8* @_Znwm(i64 32) #13
  %847 = bitcast i8* %846 to %class.SkPDFDict*
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %847, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0)) #11
  %848 = ptrtoint i8* %846 to i64
  %849 = bitcast %"class.std::__1::unique_ptr.284"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %849) #11
  %850 = bitcast %"class.std::__1::unique_ptr.284"* %19 to i64*
  store i64 %813, i64* %850, align 8
  call void @_ZN9SkPDFDict12insertObjectEPKcONSt3__110unique_ptrI11SkPDFObjectNS2_14default_deleteIS4_EEEE(%class.SkPDFDict* nonnull %847, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), %"class.std::__1::unique_ptr.284"* nonnull dereferenceable(8) %19) #11
  %851 = getelementptr inbounds %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.284"* %19, i64 0, i32 0, i32 0, i32 0
  %852 = load %class.SkPDFObject*, %class.SkPDFObject** %851, align 8
  store %class.SkPDFObject* null, %class.SkPDFObject** %851, align 8
  %853 = icmp eq %class.SkPDFObject* %852, null
  br i1 %853, label %859, label %854

854:                                              ; preds = %845
  %855 = bitcast %class.SkPDFObject* %852 to void (%class.SkPDFObject*)***
  %856 = load void (%class.SkPDFObject*)**, void (%class.SkPDFObject*)*** %855, align 8
  %857 = getelementptr inbounds void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %856, i64 2
  %858 = load void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %857, align 8
  call void %858(%class.SkPDFObject* nonnull %852) #11
  br label %859

859:                                              ; preds = %845, %854
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %849) #11
  %860 = bitcast %"class.std::__1::unique_ptr.284"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %860) #11
  %861 = bitcast %"class.std::__1::unique_ptr.284"* %20 to i64*
  store i64 %848, i64* %861, align 8
  call void @_ZN9SkPDFDict12insertObjectEPKcONSt3__110unique_ptrI11SkPDFObjectNS2_14default_deleteIS4_EEEE(%class.SkPDFDict* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), %"class.std::__1::unique_ptr.284"* nonnull dereferenceable(8) %20) #11
  %862 = getelementptr inbounds %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.284"* %20, i64 0, i32 0, i32 0, i32 0
  %863 = load %class.SkPDFObject*, %class.SkPDFObject** %862, align 8
  store %class.SkPDFObject* null, %class.SkPDFObject** %862, align 8
  %864 = icmp eq %class.SkPDFObject* %863, null
  br i1 %864, label %870, label %865

865:                                              ; preds = %859
  %866 = bitcast %class.SkPDFObject* %863 to void (%class.SkPDFObject*)***
  %867 = load void (%class.SkPDFObject*)**, void (%class.SkPDFObject*)*** %866, align 8
  %868 = getelementptr inbounds void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %867, i64 2
  %869 = load void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %868, align 8
  call void %869(%class.SkPDFObject* nonnull %863) #11
  br label %870

870:                                              ; preds = %859, %865
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %860) #11
  %871 = getelementptr inbounds %class.SkPDFDict, %class.SkPDFDict* %10, i64 0, i32 0
  %872 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %0, i64 0, i32 2, i32 0
  %873 = load i32, i32* %872, align 8
  %874 = call i32 @_ZN13SkPDFDocument4emitERK11SkPDFObject22SkPDFIndirectReference(%class.SkPDFDocument* %1, %class.SkPDFObject* nonnull dereferenceable(8) %871, i32 %873) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %815) #11
  call void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %144) #11
  ret void

875:                                              ; preds = %825, %875
  %876 = phi i64 [ %826, %825 ], [ %885, %875 ]
  %877 = load %class.SkString*, %class.SkString** %817, align 8
  %878 = getelementptr inbounds %class.SkString, %class.SkString* %877, i64 %876
  %879 = getelementptr inbounds %class.SkString, %class.SkString* %878, i64 0, i32 0, i32 0
  %880 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %879, align 8
  %881 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %880, i64 0, i32 0
  %882 = load i32, i32* %881, align 4
  %883 = icmp eq i32 %882, 0
  %884 = select i1 %883, %class.SkString* %16, %class.SkString* %878
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %18, %class.SkString* dereferenceable(8) %884) #11
  call void @_ZN10SkPDFArray10appendNameE8SkString(%class.SkPDFArray* nonnull %812, %class.SkString* nonnull %18) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %18) #11
  %885 = add nuw nsw i64 %876, 1
  %886 = icmp ult i64 %876, %827
  br i1 %886, label %875, label %845
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict*, i8*) unnamed_addr #2

declare void @_ZN9SkPDFDict9insertRefEPKc22SkPDFIndirectReference(%class.SkPDFDict*, i8*, i32) local_unnamed_addr #2

declare void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict*, i8*, i8*) local_unnamed_addr #2

declare %struct.SkAdvancedTypefaceMetrics* @_ZN9SkPDFFont10GetMetricsEPK10SkTypefaceP13SkPDFDocument(%class.SkTypeface*, %class.SkPDFDocument*) local_unnamed_addr #2

declare void @_ZN9SkPDFDict10insertNameEPKc8SkString(%class.SkPDFDict*, i8*, %class.SkString*) local_unnamed_addr #2

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN9SkPDFDict9insertIntEPKcm(%class.SkPDFDict*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN12SkStrikeSpec13MakePDFVectorERK10SkTypefacePi(%class.SkStrikeSpec* sret, %class.SkTypeface* dereferenceable(48), i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN18SkBulkGlyphMetricsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetrics*, %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #2

declare { %class.SkGlyph**, i64 } @_ZN18SkBulkGlyphMetrics6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetrics*, i16*, i64) local_unnamed_addr #2

declare void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray*, float) local_unnamed_addr #2

declare void @_ZN9SkPDFDict12insertObjectEPKcONSt3__110unique_ptrI11SkPDFObjectNS2_14default_deleteIS4_EEEE(%class.SkPDFDict*, i8*, %"class.std::__1::unique_ptr.284"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray*, i32) local_unnamed_addr #2

declare void @_ZN10SkPDFArray9appendIntEi(%class.SkPDFArray*, i32) local_unnamed_addr #2

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

declare void @_ZN10SkPDFArray10appendNameE8SkString(%class.SkPDFArray*, %class.SkString*) local_unnamed_addr #2

declare i32 @_ZN13SkPDFDocument4emitERK11SkPDFObject22SkPDFIndirectReference(%class.SkPDFDocument*, %class.SkPDFObject* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict*) unnamed_addr #3

declare i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface*) local_unnamed_addr #2

declare void @_ZN9SkPDFFont18GetType1GlyphNamesERK10SkTypefaceP8SkString(%class.SkTypeface* dereferenceable(48), %class.SkString*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::vector.219"* @_ZN10SkTHashMapIjNSt3__16vectorI8SkStringNS0_9allocatorIS2_EEEE10SkGoodHashE3setEjS5_(%class.SkTHashMap.38*, i32, %"class.std::__1::vector.219"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", align 8
  %5 = getelementptr inbounds %class.SkTHashMap.38, %class.SkTHashMap.38* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector.219"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector.219"* %7 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %class.SkString** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.SkString** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.std::__1::vector.219"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %class.SkTHashMap.38, %class.SkTHashMap.38* %0, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = shl nsw i32 %19, 2
  %21 = getelementptr inbounds %class.SkTHashMap.38, %class.SkTHashMap.38* %0, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = mul nsw i32 %22, 3
  %24 = icmp slt i32 %20, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %3
  %26 = icmp sgt i32 %22, 0
  %27 = shl nsw i32 %22, 1
  %28 = select i1 %26, i32 %27, i32 4
  tail call void @_ZN12SkTHashTableIN10SkTHashMapIjNSt3__16vectorI8SkStringNS1_9allocatorIS3_EEEE10SkGoodHashE4PairEjS9_E6resizeEi(%class.SkTHashTable.39* %5, i32 %28) #11
  br label %29

29:                                               ; preds = %3, %25
  %30 = call %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapIjNSt3__16vectorI8SkStringNS1_9allocatorIS3_EEEE10SkGoodHashE4PairEjS9_E12uncheckedSetEOS9_(%class.SkTHashTable.39* %5, %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* nonnull dereferenceable(32) %4) #11
  %31 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %7, i64 0, i32 0, i32 0
  %32 = load %class.SkString*, %class.SkString** %31, align 8
  %33 = icmp eq %class.SkString* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = bitcast %class.SkString* %32 to i8*
  %36 = load %class.SkString*, %class.SkString** %10, align 8
  %37 = icmp eq %class.SkString* %36, %32
  br i1 %37, label %45, label %38

38:                                               ; preds = %34, %38
  %39 = phi %class.SkString* [ %40, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %class.SkString, %class.SkString* %39, i64 -1
  call void @_ZN8SkStringD1Ev(%class.SkString* %40) #11
  %41 = icmp eq %class.SkString* %40, %32
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  %43 = bitcast %"class.std::__1::vector.219"* %7 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %34
  %46 = phi i8* [ %44, %42 ], [ %35, %34 ]
  store %class.SkString* %32, %class.SkString** %10, align 8
  call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %29, %45
  %48 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %30, i64 0, i32 0, i32 1
  ret %"class.std::__1::vector.219"* %48
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapIjNSt3__16vectorI8SkStringNS1_9allocatorIS3_EEEE10SkGoodHashE4PairEjS9_E6resizeEi(%class.SkTHashTable.39*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkAutoTArray.40, align 8
  %4 = getelementptr inbounds %class.SkTHashTable.39, %class.SkTHashTable.39* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.39, %class.SkTHashTable.39* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  store i32 %1, i32* %4, align 4
  %7 = getelementptr inbounds %class.SkTHashTable.39, %class.SkTHashTable.39* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkAutoTArray.40, %class.SkAutoTArray.40* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %class.SkAutoTArray.40* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %8, align 8
  %11 = bitcast %class.SkAutoTArray.40* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = bitcast %class.SkAutoTArray.40* %3 to i64*
  store i64 0, i64* %12, align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkAutoTArray.40, %class.SkAutoTArray.40* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %15, align 8
  store i64 0, i64* %9, align 8
  br label %73

16:                                               ; preds = %2
  %17 = sext i32 %1 to i64
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %17, i64 40) #11
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 8) #11
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = or i1 %19, %22
  %24 = extractvalue { i64, i1 } %21, 0
  %25 = select i1 %23, i64 -1, i64 %24
  %26 = tail call i8* @_Znam(i64 %25) #13
  %27 = bitcast i8* %26 to i64*
  store i64 %17, i64* %27, align 16
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast i8* %28 to %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"*
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %29, i64 %17
  br label %31

31:                                               ; preds = %31, %16
  %32 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* [ %29, %16 ], [ %34, %31 ]
  %33 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 36, i1 false) #11
  %34 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %32, i64 1
  %35 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %34, %30
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %8, align 8
  %39 = getelementptr inbounds %class.SkAutoTArray.40, %class.SkAutoTArray.40* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %39, align 8
  store i64 %37, i64* %9, align 8
  %40 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %38, null
  br i1 %40, label %73, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %38, i64 -1, i32 1
  %43 = bitcast i32* %42 to i8*
  %44 = bitcast i32* %42 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %41
  tail call void @_ZdaPv(i8* %43) #13
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %39, align 8
  br label %110

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %38, i64 %45
  br label %50

50:                                               ; preds = %71, %48
  %51 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* [ %52, %71 ], [ %49, %48 ]
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %51, i64 -1
  %53 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %51, i64 -1, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %53, i64 0, i32 0, i32 0
  %55 = load %class.SkString*, %class.SkString** %54, align 8
  %56 = icmp eq %class.SkString* %55, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %50
  %58 = bitcast %class.SkString* %55 to i8*
  %59 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %51, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 1
  %60 = load %class.SkString*, %class.SkString** %59, align 8
  %61 = icmp eq %class.SkString* %60, %55
  br i1 %61, label %69, label %62

62:                                               ; preds = %57, %62
  %63 = phi %class.SkString* [ %64, %62 ], [ %60, %57 ]
  %64 = getelementptr inbounds %class.SkString, %class.SkString* %63, i64 -1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %64) #11
  %65 = icmp eq %class.SkString* %64, %55
  br i1 %65, label %66, label %62

66:                                               ; preds = %62
  %67 = bitcast %"class.std::__1::vector.219"* %53 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %57
  %70 = phi i8* [ %68, %66 ], [ %58, %57 ]
  store %class.SkString* %55, %class.SkString** %59, align 8
  tail call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %69, %50
  %72 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %52, %38
  br i1 %72, label %75, label %50

73:                                               ; preds = %36, %14
  %74 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** [ %15, %14 ], [ %39, %36 ]
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %74, align 8
  br label %110

75:                                               ; preds = %71
  %76 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %39, align 8
  tail call void @_ZdaPv(i8* %43) #13
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %39, align 8
  %77 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %76, null
  br i1 %77, label %110, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %76, i64 -1, i32 1
  %80 = bitcast i32* %79 to i8*
  %81 = bitcast i32* %79 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %109, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %76, i64 %82
  br label %86

86:                                               ; preds = %107, %84
  %87 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* [ %88, %107 ], [ %85, %84 ]
  %88 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %87, i64 -1
  %89 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %87, i64 -1, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %89, i64 0, i32 0, i32 0
  %91 = load %class.SkString*, %class.SkString** %90, align 8
  %92 = icmp eq %class.SkString* %91, null
  br i1 %92, label %107, label %93

93:                                               ; preds = %86
  %94 = bitcast %class.SkString* %91 to i8*
  %95 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %87, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 1
  %96 = load %class.SkString*, %class.SkString** %95, align 8
  %97 = icmp eq %class.SkString* %96, %91
  br i1 %97, label %105, label %98

98:                                               ; preds = %93, %98
  %99 = phi %class.SkString* [ %100, %98 ], [ %96, %93 ]
  %100 = getelementptr inbounds %class.SkString, %class.SkString* %99, i64 -1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %100) #11
  %101 = icmp eq %class.SkString* %100, %91
  br i1 %101, label %102, label %98

102:                                              ; preds = %98
  %103 = bitcast %"class.std::__1::vector.219"* %89 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %105

105:                                              ; preds = %102, %93
  %106 = phi i8* [ %104, %102 ], [ %94, %93 ]
  store %class.SkString* %91, %class.SkString** %95, align 8
  tail call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %105, %86
  %108 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %88, %76
  br i1 %108, label %109, label %86

109:                                              ; preds = %107, %78
  tail call void @_ZdaPv(i8* %80) #13
  br label %110

110:                                              ; preds = %47, %73, %75, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %111 = icmp sgt i32 %5, 0
  %112 = inttoptr i64 %10 to %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"*
  br i1 %111, label %113, label %115

113:                                              ; preds = %110
  %114 = zext i32 %5 to i64
  br label %150

115:                                              ; preds = %158, %110
  %116 = icmp eq i64 %10, 0
  br i1 %116, label %149, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %112, i64 -1, i32 1
  %119 = bitcast i32* %118 to i8*
  %120 = bitcast i32* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %148, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %112, i64 %121
  br label %125

125:                                              ; preds = %146, %123
  %126 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* [ %127, %146 ], [ %124, %123 ]
  %127 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %126, i64 -1
  %128 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %126, i64 -1, i32 0, i32 0, i32 1
  %129 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %128, i64 0, i32 0, i32 0
  %130 = load %class.SkString*, %class.SkString** %129, align 8
  %131 = icmp eq %class.SkString* %130, null
  br i1 %131, label %146, label %132

132:                                              ; preds = %125
  %133 = bitcast %class.SkString* %130 to i8*
  %134 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %126, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 1
  %135 = load %class.SkString*, %class.SkString** %134, align 8
  %136 = icmp eq %class.SkString* %135, %130
  br i1 %136, label %144, label %137

137:                                              ; preds = %132, %137
  %138 = phi %class.SkString* [ %139, %137 ], [ %135, %132 ]
  %139 = getelementptr inbounds %class.SkString, %class.SkString* %138, i64 -1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %139) #11
  %140 = icmp eq %class.SkString* %139, %130
  br i1 %140, label %141, label %137

141:                                              ; preds = %137
  %142 = bitcast %"class.std::__1::vector.219"* %128 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %132
  %145 = phi i8* [ %143, %141 ], [ %133, %132 ]
  store %class.SkString* %130, %class.SkString** %134, align 8
  tail call void @_ZdlPv(i8* %145) #13
  br label %146

146:                                              ; preds = %144, %125
  %147 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %127, %112
  br i1 %147, label %148, label %125

148:                                              ; preds = %146, %117
  tail call void @_ZdaPv(i8* %119) #13
  br label %149

149:                                              ; preds = %115, %148
  ret void

150:                                              ; preds = %158, %113
  %151 = phi i64 [ 0, %113 ], [ %159, %158 ]
  %152 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %112, i64 %151, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %112, i64 %151, i32 0
  %157 = tail call %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapIjNSt3__16vectorI8SkStringNS1_9allocatorIS3_EEEE10SkGoodHashE4PairEjS9_E12uncheckedSetEOS9_(%class.SkTHashTable.39* %0, %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* dereferenceable(32) %156)
  br label %158

158:                                              ; preds = %155, %150
  %159 = add nuw nsw i64 %151, 1
  %160 = icmp eq i64 %159, %114
  br i1 %160, label %115, label %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapIjNSt3__16vectorI8SkStringNS1_9allocatorIS3_EEEE10SkGoodHashE4PairEjS9_E12uncheckedSetEOS9_(%class.SkTHashTable.39*, %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = lshr i32 %4, 16
  %6 = xor i32 %5, %4
  %7 = mul i32 %6, -2048144789
  %8 = lshr i32 %7, 13
  %9 = xor i32 %8, %7
  %10 = mul i32 %9, -1028477387
  %11 = lshr i32 %10, 16
  %12 = xor i32 %11, %10
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 1, i32 %12
  %15 = getelementptr inbounds %class.SkTHashTable.39, %class.SkTHashTable.39* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %123

18:                                               ; preds = %2
  %19 = add nsw i32 %16, -1
  %20 = and i32 %14, %19
  %21 = getelementptr inbounds %class.SkTHashTable.39, %class.SkTHashTable.39* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"** %21, align 8
  br label %23

23:                                               ; preds = %18, %116
  %24 = phi i32 [ 0, %18 ], [ %121, %116 ]
  %25 = phi i32 [ %20, %18 ], [ %120, %116 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26
  %28 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %72

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0, i32 0, i32 0
  store i32 %4, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %35, i64 0, i32 0, i32 0
  %37 = load %class.SkString*, %class.SkString** %36, align 8
  %38 = icmp eq %class.SkString* %37, null
  br i1 %38, label %54, label %39

39:                                               ; preds = %31
  %40 = bitcast %class.SkString* %37 to i8*
  %41 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1, i32 0, i32 1
  %42 = load %class.SkString*, %class.SkString** %41, align 8
  %43 = icmp eq %class.SkString* %42, %37
  br i1 %43, label %51, label %44

44:                                               ; preds = %39, %44
  %45 = phi %class.SkString* [ %46, %44 ], [ %42, %39 ]
  %46 = getelementptr inbounds %class.SkString, %class.SkString* %45, i64 -1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %46) #11
  %47 = icmp eq %class.SkString* %46, %37
  br i1 %47, label %48, label %44

48:                                               ; preds = %44
  %49 = bitcast %"class.std::__1::vector.219"* %35 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %39
  %52 = phi i8* [ %50, %48 ], [ %40, %39 ]
  store %class.SkString* %37, %class.SkString** %41, align 8
  tail call void @_ZdlPv(i8* %52) #13
  %53 = bitcast %"class.std::__1::vector.219"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11
  br label %54

54:                                               ; preds = %31, %51
  %55 = bitcast %"class.std::__1::vector.219"* %34 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.219"* %35 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %59 = bitcast %class.SkString** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1, i32 0, i32 1
  %62 = bitcast %class.SkString** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast %class.SkString** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %class.SkString** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast %"class.std::__1::vector.219"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #11
  store i32 %14, i32* %28, align 8
  %69 = getelementptr inbounds %class.SkTHashTable.39, %class.SkTHashTable.39* %0, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %69, align 8
  br label %123

72:                                               ; preds = %23
  %73 = icmp eq i32 %14, %29
  br i1 %73, label %74, label %116

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %4, %76
  br i1 %77, label %78, label %116

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0
  store i32 %4, i32* %79, align 8
  %81 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1
  %83 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %82, i64 0, i32 0, i32 0
  %84 = load %class.SkString*, %class.SkString** %83, align 8
  %85 = icmp eq %class.SkString* %84, null
  br i1 %85, label %101, label %86

86:                                               ; preds = %78
  %87 = bitcast %class.SkString* %84 to i8*
  %88 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1, i32 0, i32 1
  %89 = load %class.SkString*, %class.SkString** %88, align 8
  %90 = icmp eq %class.SkString* %89, %84
  br i1 %90, label %98, label %91

91:                                               ; preds = %86, %91
  %92 = phi %class.SkString* [ %93, %91 ], [ %89, %86 ]
  %93 = getelementptr inbounds %class.SkString, %class.SkString* %92, i64 -1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %93) #11
  %94 = icmp eq %class.SkString* %93, %84
  br i1 %94, label %95, label %91

95:                                               ; preds = %91
  %96 = bitcast %"class.std::__1::vector.219"* %82 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %86
  %99 = phi i8* [ %97, %95 ], [ %87, %86 ]
  store %class.SkString* %84, %class.SkString** %88, align 8
  tail call void @_ZdlPv(i8* %99) #13
  %100 = bitcast %"class.std::__1::vector.219"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #11
  br label %101

101:                                              ; preds = %78, %98
  %102 = bitcast %"class.std::__1::vector.219"* %81 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::vector.219"* %82 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %106 = bitcast %class.SkString** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1, i32 0, i32 1
  %109 = bitcast %class.SkString** %108 to i64*
  store i64 %107, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %class.SkString** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %114 = bitcast %class.SkString** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = bitcast %"class.std::__1::vector.219"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #11
  br label %123

116:                                              ; preds = %74, %72
  %117 = add nsw i32 %25, -1
  %118 = icmp slt i32 %25, 1
  %119 = select i1 %118, i32 %16, i32 0
  %120 = add nsw i32 %117, %119
  %121 = add nuw nsw i32 %24, 1
  %122 = icmp slt i32 %121, %16
  br i1 %122, label %23, label %123

123:                                              ; preds = %116, %2, %101, %54
  %124 = phi %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* [ %80, %101 ], [ %32, %54 ], [ null, %2 ], [ null, %116 ]
  ret %"struct.SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair"* %124
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.SkPDFIndirectReference* @_ZN10SkTHashMapIj22SkPDFIndirectReference10SkGoodHashE3setEjS0_(%class.SkTHashMap.56*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTHashMap.56, %class.SkTHashMap.56* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = shl nsw i32 %5, 2
  %7 = getelementptr inbounds %class.SkTHashMap.56, %class.SkTHashMap.56* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = mul nsw i32 %8, 3
  %10 = icmp slt i32 %6, %9
  br i1 %10, label %17, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkTHashMap.56, %class.SkTHashMap.56* %0, i64 0, i32 0
  %13 = icmp sgt i32 %8, 0
  %14 = shl nsw i32 %8, 1
  %15 = select i1 %13, i32 %14, i32 4
  tail call void @_ZN12SkTHashTableIN10SkTHashMapIj22SkPDFIndirectReference10SkGoodHashE4PairEjS4_E6resizeEi(%class.SkTHashTable.57* %12, i32 %15) #11
  %16 = load i32, i32* %7, align 4
  br label %17

17:                                               ; preds = %3, %11
  %18 = phi i32 [ %8, %3 ], [ %16, %11 ]
  %19 = lshr i32 %1, 16
  %20 = xor i32 %19, %1
  %21 = mul i32 %20, -2048144789
  %22 = lshr i32 %21, 13
  %23 = xor i32 %22, %21
  %24 = mul i32 %23, -1028477387
  %25 = lshr i32 %24, 16
  %26 = xor i32 %25, %24
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i32 1, i32 %26
  %29 = icmp sgt i32 %18, 0
  br i1 %29, label %30, label %66

30:                                               ; preds = %17
  %31 = add nsw i32 %18, -1
  %32 = and i32 %31, %28
  %33 = getelementptr inbounds %class.SkTHashMap.56, %class.SkTHashMap.56* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %33, align 8
  br label %35

35:                                               ; preds = %59, %30
  %36 = phi i32 [ 0, %30 ], [ %64, %59 ]
  %37 = phi i32 [ %32, %30 ], [ %63, %59 ]
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %34, i64 %38
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %34, i64 %38, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %39, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %39, i64 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %34, i64 %38, i32 0, i32 0, i32 1, i32 0
  store i32 %2, i32* %46, align 4
  store i32 %28, i32* %40, align 4
  %47 = load i32, i32* %4, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %4, align 8
  br label %66

49:                                               ; preds = %35
  %50 = icmp eq i32 %28, %41
  br i1 %50, label %51, label %59

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %39, i64 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %39, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %39, i64 0, i32 0
  store i32 %1, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %34, i64 %38, i32 0, i32 0, i32 1, i32 0
  store i32 %2, i32* %58, align 4
  br label %66

59:                                               ; preds = %51, %49
  %60 = add nsw i32 %37, -1
  %61 = icmp slt i32 %37, 1
  %62 = select i1 %61, i32 %18, i32 0
  %63 = add nsw i32 %60, %62
  %64 = add nuw nsw i32 %36, 1
  %65 = icmp eq i32 %64, %18
  br i1 %65, label %66, label %35

66:                                               ; preds = %59, %17, %43, %55
  %67 = phi %"struct.SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair"* [ %57, %55 ], [ %44, %43 ], [ null, %17 ], [ null, %59 ]
  %68 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair"* %67, i64 0, i32 0, i32 1
  ret %struct.SkPDFIndirectReference* %68
}

declare i32 @_ZNK10SkTypeface13getUnitsPerEmEv(%class.SkTypeface*) local_unnamed_addr #2

declare void @_ZN9SkPDFFont28PopulateCommonFontDescriptorEP9SkPDFDictRK25SkAdvancedTypefaceMetricsts(%class.SkPDFDict*, %struct.SkAdvancedTypefaceMetrics* dereferenceable(48), i16 zeroext, i16 signext) local_unnamed_addr #2

declare %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface*, i32*) local_unnamed_addr #2

declare %class.SkMemoryStream* @_ZN14SkMemoryStream4MakeE5sk_spI6SkDataE(%class.sk_sp.98*) local_unnamed_addr #2

declare i32 @_Z14SkPDFStreamOutNSt3__110unique_ptrI9SkPDFDictNS_14default_deleteIS1_EEEENS0_I13SkStreamAssetNS2_IS5_EEEEP13SkPDFDocumentb(%class.SkPDFDict*, %class.SkStreamAsset*, %class.SkPDFDocument*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.98* sret, i64) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #9

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapIj22SkPDFIndirectReference10SkGoodHashE4PairEjS4_E6resizeEi(%class.SkTHashTable.57*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.57, %class.SkTHashTable.57* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable.57, %class.SkTHashTable.57* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.57, %class.SkTHashTable.57* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray.58, %class.SkAutoTArray.58* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray.58* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %33

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 12) #11
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #13
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %19, i64 %13
  br label %21

21:                                               ; preds = %21, %12
  %22 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* [ %19, %12 ], [ %25, %21 ]
  %23 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22 to i64*
  store i64 -4294967296, i64* %23, align 4
  %24 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22, i64 0, i32 1
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22, i64 1
  %26 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %25, %20
  br i1 %26, label %27, label %21

27:                                               ; preds = %21
  %28 = ptrtoint i8* %18 to i64
  %29 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %7, align 8
  %30 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %29, null
  store i64 %28, i64* %8, align 8
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %29 to i8*
  tail call void @_ZdaPv(i8* %32) #13
  br label %33

33:                                               ; preds = %31, %27, %11
  %34 = icmp sgt i32 %4, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %33
  %36 = inttoptr i64 %9 to %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*
  %37 = getelementptr inbounds %class.SkTHashTable.57, %class.SkTHashTable.57* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %38 = zext i32 %4 to i64
  br label %44

39:                                               ; preds = %101, %33
  %40 = icmp eq i64 %9, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %42) #13
  br label %43

43:                                               ; preds = %39, %41
  ret void

44:                                               ; preds = %101, %35
  %45 = phi i64 [ 0, %35 ], [ %102, %101 ]
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %36, i64 %45, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %101, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %36, i64 %45, i32 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = lshr i32 %51, 16
  %53 = xor i32 %52, %51
  %54 = mul i32 %53, -2048144789
  %55 = lshr i32 %54, 13
  %56 = xor i32 %55, %54
  %57 = mul i32 %56, -1028477387
  %58 = lshr i32 %57, 16
  %59 = xor i32 %58, %57
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, i32 1, i32 %59
  %62 = load i32, i32* %3, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %101

64:                                               ; preds = %49
  %65 = add nsw i32 %62, -1
  %66 = and i32 %61, %65
  %67 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %37, align 8
  br label %68

68:                                               ; preds = %94, %64
  %69 = phi i32 [ 0, %64 ], [ %99, %94 ]
  %70 = phi i32 [ %66, %64 ], [ %98, %94 ]
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %67, i64 %71
  %73 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %67, i64 %71, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %72, i64 0, i32 0, i32 0, i32 0
  store i32 %51, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %36, i64 %45, i32 0, i32 0, i32 1, i32 0
  %79 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %67, i64 %71, i32 0, i32 0, i32 1, i32 0
  %80 = load i32, i32* %78, align 4
  store i32 %80, i32* %79, align 4
  store i32 %61, i32* %73, align 4
  %81 = load i32, i32* %5, align 8
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %5, align 8
  br label %101

83:                                               ; preds = %68
  %84 = icmp eq i32 %61, %74
  br i1 %84, label %85, label %94

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %72, i64 0, i32 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %51, %87
  br i1 %88, label %89, label %94

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %72, i64 0, i32 0, i32 0, i32 0
  store i32 %51, i32* %90, align 4
  %91 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %36, i64 %45, i32 0, i32 0, i32 1, i32 0
  %92 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %67, i64 %71, i32 0, i32 0, i32 1, i32 0
  %93 = load i32, i32* %91, align 4
  store i32 %93, i32* %92, align 4
  br label %101

94:                                               ; preds = %85, %83
  %95 = add nsw i32 %70, -1
  %96 = icmp slt i32 %70, 1
  %97 = select i1 %96, i32 %62, i32 0
  %98 = add nsw i32 %95, %97
  %99 = add nuw nsw i32 %69, 1
  %100 = icmp eq i32 %99, %62
  br i1 %100, label %101, label %68

101:                                              ; preds = %94, %89, %76, %49, %44
  %102 = add nuw nsw i64 %45, 1
  %103 = icmp eq i64 %102, %38
  br i1 %103, label %39, label %44
}

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #3

declare void @_ZN10SkPDFArrayC1Ev(%class.SkPDFArray*) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL25convert_type1_font_streamNSt3__110unique_ptrI13SkStreamAssetNS_14default_deleteIS1_EEEEPmS5_S5_: argument 0"}
!4 = distinct !{!4, !"_ZL25convert_type1_font_streamNSt3__110unique_ptrI13SkStreamAssetNS_14default_deleteIS1_EEEEPmS5_S5_"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
