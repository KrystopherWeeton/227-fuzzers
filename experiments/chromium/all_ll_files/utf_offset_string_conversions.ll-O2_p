; ModuleID = '../../base/strings/utf_offset_string_conversions.cc'
source_filename = "../../base/strings/utf_offset_string_conversions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.base::OffsetAdjuster::Adjustment" = type { i64, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.base::OffsetAdjuster::Adjustment"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i64*, i64*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::basic_string.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.19 }
%union.anon.19 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece.15" = type { i16*, i64 }

$_ZNSt3__16vectorIN4base14OffsetAdjuster10AdjustmentENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPKS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueENS8_IPS3_EEE4typeESB_SD_SD_ = comdat any

$_ZN4base14ConvertUnicodeIcNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEbPKT_mPT0_PNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS5_ISF_EEEE = comdat any

$_ZN4base14ConvertUnicodeIDsNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEbPKT_mPT0_PNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS5_ISF_EEEE = comdat any

@_ZN4base14OffsetAdjuster10AdjustmentC1Emmm = hidden unnamed_addr alias void (%"struct.base::OffsetAdjuster::Adjustment"*, i64, i64, i64), void (%"struct.base::OffsetAdjuster::Adjustment"*, i64, i64, i64)* @_ZN4base14OffsetAdjuster10AdjustmentC2Emmm

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base14OffsetAdjuster10AdjustmentC2Emmm(%"struct.base::OffsetAdjuster::Adjustment"* nocapture, i64, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %0, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %0, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %0, i64 0, i32 2
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14OffsetAdjuster13AdjustOffsetsERKNSt3__16vectorINS0_10AdjustmentENS1_9allocatorIS3_EEEEPNS2_ImNS4_ImEEEEm(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.1"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  br label %13

12:                                               ; preds = %48, %3
  ret void

13:                                               ; preds = %9, %48
  %14 = phi i64* [ %5, %9 ], [ %49, %48 ]
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, -1
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %10, align 8
  %19 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %11, align 8
  %20 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %18, %19
  br i1 %20, label %40, label %21

21:                                               ; preds = %17, %32
  %22 = phi i32 [ %37, %32 ], [ 0, %17 ]
  %23 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %38, %32 ], [ %18, %17 ]
  %24 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %23, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %15, %25
  br i1 %26, label %27, label %40

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %23, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %25
  %31 = icmp ult i64 %15, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %23, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %29, %34
  %36 = trunc i64 %35 to i32
  %37 = add nsw i32 %22, %36
  %38 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %23, i64 1
  %39 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %38, %19
  br i1 %39, label %40, label %21

40:                                               ; preds = %32, %21, %17
  %41 = phi i32 [ 0, %17 ], [ %22, %21 ], [ %37, %32 ]
  %42 = sext i32 %41 to i64
  %43 = sub i64 %15, %42
  %44 = icmp ugt i64 %43, %2
  %45 = select i1 %44, i64 -1, i64 %43
  br label %46

46:                                               ; preds = %27, %40
  %47 = phi i64 [ %45, %40 ], [ -1, %27 ]
  store i64 %47, i64* %14, align 8
  br label %48

48:                                               ; preds = %46, %13
  %49 = getelementptr inbounds i64, i64* %14, i64 1
  %50 = icmp eq i64* %49, %7
  br i1 %50, label %12, label %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14OffsetAdjuster12AdjustOffsetERKNSt3__16vectorINS0_10AdjustmentENS1_9allocatorIS3_EEEEPmm(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64* nocapture, i64) local_unnamed_addr #1 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = icmp eq i64 %4, -1
  br i1 %5, label %39, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %9, align 8
  %11 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %8, %10
  br i1 %11, label %31, label %12

12:                                               ; preds = %6, %23
  %13 = phi i32 [ %28, %23 ], [ 0, %6 ]
  %14 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %29, %23 ], [ %8, %6 ]
  %15 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %14, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %4, %16
  br i1 %17, label %18, label %31

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %14, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %16
  %22 = icmp ult i64 %4, %21
  br i1 %22, label %37, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %14, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %20, %25
  %27 = trunc i64 %26 to i32
  %28 = add nsw i32 %13, %27
  %29 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %14, i64 1
  %30 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %29, %10
  br i1 %30, label %31, label %12

31:                                               ; preds = %12, %23, %6
  %32 = phi i32 [ 0, %6 ], [ %28, %23 ], [ %13, %12 ]
  %33 = sext i32 %32 to i64
  %34 = sub i64 %4, %33
  %35 = icmp ugt i64 %34, %2
  %36 = select i1 %35, i64 -1, i64 %34
  br label %37

37:                                               ; preds = %18, %31
  %38 = phi i64 [ %36, %31 ], [ -1, %18 ]
  store i64 %38, i64* %1, align 8
  br label %39

39:                                               ; preds = %37, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14OffsetAdjuster15UnadjustOffsetsERKNSt3__16vectorINS0_10AdjustmentENS1_9allocatorIS3_EEEEPNS2_ImNS4_ImEEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.1"* readonly) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.std::__1::vector.1"* %1, null
  br i1 %3, label %56, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %7, align 8
  %9 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %6, %8
  br i1 %9, label %56, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %12, %14
  br i1 %15, label %56, label %16

16:                                               ; preds = %10, %53
  %17 = phi i64* [ %54, %53 ], [ %12, %10 ]
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, -1
  br i1 %19, label %53, label %20

20:                                               ; preds = %16
  %21 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %5, align 8
  %22 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %7, align 8
  %23 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %21, %22
  br i1 %23, label %47, label %26

24:                                               ; preds = %34
  %25 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %46, %22
  br i1 %25, label %47, label %26

26:                                               ; preds = %20, %24
  %27 = phi i32 [ %41, %24 ], [ 0, %20 ]
  %28 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %46, %24 ], [ %21, %20 ]
  %29 = sext i32 %27 to i64
  %30 = add i64 %18, %29
  %31 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %28, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %30, %32
  br i1 %33, label %34, label %47

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %28, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %28, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = trunc i64 %39 to i32
  %41 = add nsw i32 %27, %40
  %42 = sext i32 %41 to i64
  %43 = add i64 %18, %42
  %44 = add i64 %36, %32
  %45 = icmp ult i64 %43, %44
  %46 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %28, i64 1
  br i1 %45, label %51, label %24

47:                                               ; preds = %26, %24, %20
  %48 = phi i32 [ 0, %20 ], [ %27, %26 ], [ %41, %24 ]
  %49 = sext i32 %48 to i64
  %50 = add i64 %18, %49
  br label %51

51:                                               ; preds = %34, %47
  %52 = phi i64 [ %50, %47 ], [ -1, %34 ]
  store i64 %52, i64* %17, align 8
  br label %53

53:                                               ; preds = %51, %16
  %54 = getelementptr inbounds i64, i64* %17, i64 1
  %55 = icmp eq i64* %54, %14
  br i1 %55, label %56, label %16

56:                                               ; preds = %53, %10, %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14OffsetAdjuster14UnadjustOffsetERKNSt3__16vectorINS0_10AdjustmentENS1_9allocatorIS3_EEEEPm(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64* nocapture) local_unnamed_addr #1 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = icmp eq i64 %3, -1
  br i1 %4, label %40, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %8, align 8
  %10 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %7, %9
  br i1 %10, label %34, label %13

11:                                               ; preds = %21
  %12 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %33, %9
  br i1 %12, label %34, label %13

13:                                               ; preds = %5, %11
  %14 = phi i32 [ %28, %11 ], [ 0, %5 ]
  %15 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %33, %11 ], [ %7, %5 ]
  %16 = sext i32 %14 to i64
  %17 = add i64 %3, %16
  %18 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %15, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %17, %19
  br i1 %20, label %21, label %34

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %15, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %15, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = trunc i64 %26 to i32
  %28 = add nsw i32 %14, %27
  %29 = sext i32 %28 to i64
  %30 = add i64 %3, %29
  %31 = add i64 %23, %19
  %32 = icmp ult i64 %30, %31
  %33 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %15, i64 1
  br i1 %32, label %38, label %11

34:                                               ; preds = %13, %11, %5
  %35 = phi i32 [ 0, %5 ], [ %28, %11 ], [ %14, %13 ]
  %36 = sext i32 %35 to i64
  %37 = add i64 %3, %36
  br label %38

38:                                               ; preds = %21, %34
  %39 = phi i64 [ %37, %34 ], [ -1, %21 ]
  store i64 %39, i64* %1, align 8
  br label %40

40:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14OffsetAdjuster26MergeSequentialAdjustmentsERKNSt3__16vectorINS0_10AdjustmentENS1_9allocatorIS3_EEEEPS6_(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %5 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #7
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %12 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %11, align 8
  %13 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %5, %12
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %15 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %14, align 8
  %16 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %7, %15
  br i1 %13, label %174, label %17

17:                                               ; preds = %2
  %18 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %9 to i64*
  %19 = bitcast %"class.std::__1::vector"* %3 to i64*
  %20 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %10 to i64*
  br label %21

21:                                               ; preds = %17, %165
  %22 = phi i1 [ %16, %17 ], [ %173, %165 ]
  %23 = phi i64 [ 0, %17 ], [ %169, %165 ]
  %24 = phi i64 [ 0, %17 ], [ %168, %165 ]
  %25 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %5, %17 ], [ %167, %165 ]
  %26 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %7, %17 ], [ %166, %165 ]
  %27 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %25, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %23
  br i1 %22, label %37, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %25, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %29, %32
  %34 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %26, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %33, %35
  br i1 %36, label %95, label %37

37:                                               ; preds = %21, %30
  %38 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %25, i64 0, i32 0
  store i64 %29, i64* %38, align 8
  %39 = add i64 %23, %24
  %40 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %9, align 8
  %41 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %10, align 8
  %42 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %40, %41
  %43 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %41 to i64
  br i1 %42, label %49, label %44

44:                                               ; preds = %37
  %45 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %40 to i8*
  %46 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #7
  %47 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %40, i64 1
  %48 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %47 to i64
  store i64 %48, i64* %18, align 8
  br label %93

49:                                               ; preds = %37
  %50 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %40 to i64
  %51 = load i64, i64* %19, align 8
  %52 = sub i64 %50, %51
  %53 = sdiv exact i64 %52, 24
  %54 = add nsw i64 %53, 1
  %55 = icmp ugt i64 %54, 768614336404564650
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %57) #8
  unreachable

58:                                               ; preds = %49
  %59 = sub i64 %43, %51
  %60 = sdiv exact i64 %59, 24
  %61 = icmp ult i64 %60, 384307168202282325
  br i1 %61, label %62, label %67

62:                                               ; preds = %58
  %63 = shl nsw i64 %60, 1
  %64 = icmp ult i64 %63, %54
  %65 = select i1 %64, i64 %54, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %62, %58
  %68 = phi i64 [ %65, %62 ], [ 768614336404564650, %58 ]
  %69 = mul i64 %68, 24
  %70 = tail call i8* @_Znwm(i64 %69) #9
  %71 = bitcast i8* %70 to %"struct.base::OffsetAdjuster::Adjustment"*
  br label %72

72:                                               ; preds = %67, %62
  %73 = phi i64 [ %68, %67 ], [ 0, %62 ]
  %74 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %71, %67 ], [ null, %62 ]
  %75 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %74, i64 %53
  %76 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %74, i64 %73
  %77 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %76 to i64
  %78 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %75 to i8*
  %79 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #7
  %80 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %75, i64 1
  %81 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %80 to i64
  %82 = sdiv exact i64 %52, -24
  %83 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %75, i64 %82
  %84 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %83 to i64
  %85 = icmp sgt i64 %52, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %72
  %87 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %83 to i8*
  %88 = inttoptr i64 %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 %52, i1 false) #7
  br label %89

89:                                               ; preds = %86, %72
  store i64 %84, i64* %19, align 8
  store i64 %81, i64* %18, align 8
  store i64 %77, i64* %20, align 8
  %90 = icmp eq i64 %51, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %51 to i8*
  tail call void @_ZdlPv(i8* %92) #9
  br label %93

93:                                               ; preds = %44, %89, %91
  %94 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %25, i64 1
  br label %165

95:                                               ; preds = %30
  %96 = icmp ugt i64 %29, %35
  %97 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %26, i64 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %26, i64 0, i32 2
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %98, %100
  br i1 %96, label %102, label %159

102:                                              ; preds = %95
  %103 = add i64 %101, %23
  %104 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %9, align 8
  %105 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %10, align 8
  %106 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %104, %105
  %107 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %105 to i64
  br i1 %106, label %113, label %108

108:                                              ; preds = %102
  %109 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %104 to i8*
  %110 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 24, i1 false) #7
  %111 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %104, i64 1
  %112 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %111 to i64
  store i64 %112, i64* %18, align 8
  br label %157

113:                                              ; preds = %102
  %114 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %104 to i64
  %115 = load i64, i64* %19, align 8
  %116 = sub i64 %114, %115
  %117 = sdiv exact i64 %116, 24
  %118 = add nsw i64 %117, 1
  %119 = icmp ugt i64 %118, 768614336404564650
  br i1 %119, label %120, label %122

120:                                              ; preds = %113
  %121 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %121) #8
  unreachable

122:                                              ; preds = %113
  %123 = sub i64 %107, %115
  %124 = sdiv exact i64 %123, 24
  %125 = icmp ult i64 %124, 384307168202282325
  br i1 %125, label %126, label %131

126:                                              ; preds = %122
  %127 = shl nsw i64 %124, 1
  %128 = icmp ult i64 %127, %118
  %129 = select i1 %128, i64 %118, i64 %127
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %136, label %131

131:                                              ; preds = %126, %122
  %132 = phi i64 [ %129, %126 ], [ 768614336404564650, %122 ]
  %133 = mul i64 %132, 24
  %134 = tail call i8* @_Znwm(i64 %133) #9
  %135 = bitcast i8* %134 to %"struct.base::OffsetAdjuster::Adjustment"*
  br label %136

136:                                              ; preds = %131, %126
  %137 = phi i64 [ %132, %131 ], [ 0, %126 ]
  %138 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %135, %131 ], [ null, %126 ]
  %139 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %138, i64 %117
  %140 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %138, i64 %137
  %141 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %140 to i64
  %142 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %139 to i8*
  %143 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 24, i1 false) #7
  %144 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %139, i64 1
  %145 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %144 to i64
  %146 = sdiv exact i64 %116, -24
  %147 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %139, i64 %146
  %148 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %147 to i64
  %149 = icmp sgt i64 %116, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %136
  %151 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %147 to i8*
  %152 = inttoptr i64 %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %116, i1 false) #7
  br label %153

153:                                              ; preds = %150, %136
  store i64 %148, i64* %19, align 8
  store i64 %145, i64* %18, align 8
  store i64 %141, i64* %20, align 8
  %154 = icmp eq i64 %115, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %153
  %156 = inttoptr i64 %115 to i8*
  tail call void @_ZdlPv(i8* %156) #9
  br label %157

157:                                              ; preds = %108, %153, %155
  %158 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %26, i64 1
  br label %165

159:                                              ; preds = %95
  %160 = shl i64 %101, 32
  %161 = ashr exact i64 %160, 32
  %162 = add i64 %161, %32
  store i64 %162, i64* %31, align 8
  %163 = add i64 %161, %24
  %164 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %26, i64 1
  br label %165

165:                                              ; preds = %157, %159, %93
  %166 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %26, %93 ], [ %158, %157 ], [ %164, %159 ]
  %167 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %94, %93 ], [ %25, %157 ], [ %25, %159 ]
  %168 = phi i64 [ 0, %93 ], [ %24, %157 ], [ %163, %159 ]
  %169 = phi i64 [ %39, %93 ], [ %103, %157 ], [ %23, %159 ]
  %170 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %11, align 8
  %171 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %167, %170
  %172 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %14, align 8
  %173 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %166, %172
  br i1 %171, label %174, label %21

174:                                              ; preds = %165, %2
  %175 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %7, %2 ], [ %166, %165 ]
  %176 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %15, %2 ], [ %172, %165 ]
  %177 = phi i1 [ %16, %2 ], [ %173, %165 ]
  br i1 %177, label %181, label %178

178:                                              ; preds = %174
  %179 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %9, align 8
  %180 = call %"struct.base::OffsetAdjuster::Adjustment"* @_ZNSt3__16vectorIN4base14OffsetAdjuster10AdjustmentENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPKS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueENS8_IPS3_EEE4typeESB_SD_SD_(%"class.std::__1::vector"* nonnull %3, %"struct.base::OffsetAdjuster::Adjustment"* %179, %"struct.base::OffsetAdjuster::Adjustment"* %175, %"struct.base::OffsetAdjuster::Adjustment"* %176)
  br label %181

181:                                              ; preds = %174, %178
  %182 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %4, align 8
  %183 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %182, null
  br i1 %183, label %184, label %186

184:                                              ; preds = %181
  %185 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %11 to i64*
  br label %191

186:                                              ; preds = %181
  %187 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %182 to i64
  %188 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %11 to i64*
  store i64 %187, i64* %188, align 8
  %189 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %182 to i8*
  call void @_ZdlPv(i8* %189) #9
  %190 = bitcast %"class.std::__1::vector"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 24, i1 false) #7
  br label %191

191:                                              ; preds = %186, %184
  %192 = phi i64* [ %185, %184 ], [ %188, %186 ]
  %193 = bitcast %"class.std::__1::vector"* %3 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.std::__1::vector"* %1 to i64*
  store i64 %194, i64* %195, align 8
  %196 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %9 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %192, align 8
  %198 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %10 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %201 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %200 to i64*
  store i64 %199, i64* %201, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::OffsetAdjuster::Adjustment"* @_ZNSt3__16vectorIN4base14OffsetAdjuster10AdjustmentENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPKS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueENS8_IPS3_EEE4typeESB_SD_SD_(%"class.std::__1::vector"*, %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %2 to i64
  %8 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 24
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %154

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %16, align 8
  %18 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %16 to i64*
  br i1 %21, label %80, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 24
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %45

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %2, i64 %25
  %29 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %28, %3
  br i1 %29, label %40, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %36, %30 ], [ %17, %27 ]
  %32 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %35, %30 ], [ %28, %27 ]
  %33 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %31 to i8*
  %34 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #7
  %35 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %32, i64 1
  %36 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %31, i64 1
  %37 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %35, %3
  br i1 %37, label %38, label %30

38:                                               ; preds = %30
  %39 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %36 to i64
  br label %40

40:                                               ; preds = %38, %27
  %41 = phi i64 [ %18, %27 ], [ %39, %38 ]
  store i64 %41, i64* %22, align 8
  %42 = icmp sgt i64 %24, 0
  br i1 %42, label %43, label %154

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to %"struct.base::OffsetAdjuster::Adjustment"*
  br label %45

45:                                               ; preds = %43, %23
  %46 = phi i64 [ %41, %43 ], [ %18, %23 ]
  %47 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %44, %43 ], [ %17, %23 ]
  %48 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %28, %43 ], [ %3, %23 ]
  %49 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %1, i64 %10
  %50 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %49 to i64
  %51 = sub i64 %46, %50
  %52 = sdiv exact i64 %51, 24
  %53 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %1, i64 %52
  %54 = icmp ult %"struct.base::OffsetAdjuster::Adjustment"* %53, %17
  br i1 %54, label %65, label %57

55:                                               ; preds = %65
  %56 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %71 to i64
  br label %57

57:                                               ; preds = %55, %45
  %58 = phi i64 [ %56, %55 ], [ %46, %45 ]
  store i64 %58, i64* %22, align 8
  %59 = icmp eq i64 %51, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %57
  %61 = sdiv exact i64 %51, -24
  %62 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %47, i64 %61
  %63 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %62 to i8*
  %64 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 %51, i1 false) #7
  br label %73

65:                                               ; preds = %45, %65
  %66 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %71, %65 ], [ %47, %45 ]
  %67 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %70, %65 ], [ %53, %45 ]
  %68 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %66 to i8*
  %69 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false) #7
  %70 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %67, i64 1
  %71 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %66, i64 1
  %72 = icmp ult %"struct.base::OffsetAdjuster::Adjustment"* %70, %17
  br i1 %72, label %65, label %55

73:                                               ; preds = %57, %60
  %74 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %48 to i64
  %75 = sub i64 %74, %7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %154, label %77

77:                                               ; preds = %73
  %78 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %1 to i8*
  %79 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %75, i1 false) #7
  br label %154

80:                                               ; preds = %12
  %81 = bitcast %"class.std::__1::vector"* %0 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %18, %82
  %84 = sdiv exact i64 %83, 24
  %85 = add nsw i64 %84, %10
  %86 = icmp ugt i64 %85, 768614336404564650
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %88) #8
  unreachable

89:                                               ; preds = %80
  %90 = sub i64 %15, %82
  %91 = sdiv exact i64 %90, 24
  %92 = icmp ult i64 %91, 384307168202282325
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = sub i64 %5, %82
  %95 = sdiv exact i64 %94, 24
  br label %103

96:                                               ; preds = %89
  %97 = shl nsw i64 %91, 1
  %98 = icmp ult i64 %97, %85
  %99 = select i1 %98, i64 %85, i64 %97
  %100 = sub i64 %5, %82
  %101 = sdiv exact i64 %100, 24
  %102 = icmp eq i64 %99, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %96, %93
  %104 = phi i64 [ %95, %93 ], [ %101, %96 ]
  %105 = phi i64 [ 768614336404564650, %93 ], [ %99, %96 ]
  %106 = mul i64 %105, 24
  %107 = tail call i8* @_Znwm(i64 %106) #9
  %108 = bitcast i8* %107 to %"struct.base::OffsetAdjuster::Adjustment"*
  br label %109

109:                                              ; preds = %103, %96
  %110 = phi i64 [ %104, %103 ], [ %101, %96 ]
  %111 = phi i64 [ %105, %103 ], [ 0, %96 ]
  %112 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %108, %103 ], [ null, %96 ]
  %113 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %112, i64 %110
  %114 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %112, i64 %111
  %115 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %114 to i64
  %116 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %113, i64 %10
  br label %117

117:                                              ; preds = %109, %117
  %118 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %122, %117 ], [ %113, %109 ]
  %119 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %123, %117 ], [ %2, %109 ]
  %120 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %118 to i8*
  %121 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 24, i1 false) #7
  %122 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %118, i64 1
  %123 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %119, i64 1
  %124 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %116, %122
  br i1 %124, label %125, label %117

125:                                              ; preds = %117
  %126 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %6, align 8
  %127 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %126 to i64
  %128 = sub i64 %5, %127
  %129 = sdiv exact i64 %128, -24
  %130 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %113, i64 %129
  %131 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %130 to i64
  %132 = icmp sgt i64 %128, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %125
  %134 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %130 to i8*
  %135 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 %128, i1 false) #7
  br label %136

136:                                              ; preds = %133, %125
  %137 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %16, align 8
  %138 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %137, %1
  br i1 %138, label %147, label %139

139:                                              ; preds = %136, %139
  %140 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %145, %139 ], [ %116, %136 ]
  %141 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %144, %139 ], [ %1, %136 ]
  %142 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %140 to i8*
  %143 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 24, i1 false) #7
  %144 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %141, i64 1
  %145 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %140, i64 1
  %146 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %144, %137
  br i1 %146, label %147, label %139

147:                                              ; preds = %139, %136
  %148 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %116, %136 ], [ %145, %139 ]
  %149 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %148 to i64
  %150 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %6, align 8
  store i64 %131, i64* %81, align 8
  store i64 %149, i64* %22, align 8
  store i64 %115, i64* %14, align 8
  %151 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %147
  %153 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %150 to i8*
  tail call void @_ZdlPv(i8* %153) #9
  br label %154

154:                                              ; preds = %152, %147, %40, %73, %77, %4
  %155 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %1, %4 ], [ %1, %77 ], [ %1, %73 ], [ %1, %40 ], [ %113, %147 ], [ %113, %152 ]
  ret %"struct.base::OffsetAdjuster::Adjustment"* %155
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base26UTF8ToUTF16WithAdjustmentsEPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPNS2_6vectorINS_14OffsetAdjuster10AdjustmentENS6_ISC_EEEE(i8*, i64, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*) local_unnamed_addr #1 {
  tail call void @_ZN4base25PrepareForUTF16Or32OutputINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEvPKcmPT_(i8* %0, i64 %1, %"class.std::__1::basic_string"* %2) #7
  %5 = tail call zeroext i1 @_ZN4base14ConvertUnicodeIcNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEbPKT_mPT0_PNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS5_ISF_EEEE(i8* %0, i64 %1, %"class.std::__1::basic_string"* %2, %"class.std::__1::vector"* %3)
  ret i1 %5
}

declare void @_ZN4base25PrepareForUTF16Or32OutputINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEvPKcmPT_(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base14ConvertUnicodeIcNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEbPKT_mPT0_PNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS5_ISF_EEEE(i8*, i64, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*) local_unnamed_addr #1 comdat {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = icmp ne %"class.std::__1::vector"* %3, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::vector"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %11 to i64*
  store i64 %10, i64* %12, align 8
  br label %13

13:                                               ; preds = %8, %4
  %14 = trunc i64 %1 to i32
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #7
  store i32 0, i32* %5, align 4
  %16 = icmp sgt i32 %14, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  %18 = bitcast i32* %6 to i8*
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %19 to i64*
  %22 = bitcast %"class.std::__1::vector"* %3 to i64*
  %23 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %20 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  br label %30

25:                                               ; preds = %107
  %26 = and i8 %37, 1
  %27 = icmp ne i8 %26, 0
  br label %28

28:                                               ; preds = %25, %13
  %29 = phi i1 [ true, %13 ], [ %27, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #7
  ret i1 %29

30:                                               ; preds = %17, %107
  %31 = phi i8 [ 1, %17 ], [ %37, %107 ]
  %32 = phi i32 [ 0, %17 ], [ %109, %107 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #7
  store i32 -1431655766, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = call zeroext i1 @_ZN4base20ReadUnicodeCharacterEPKciPiPj(i8* %0, i32 %14, i32* nonnull %5, i32* nonnull %6) #7
  %35 = load i32, i32* %6, align 4
  %36 = select i1 %34, i32 %35, i32 65533
  %37 = select i1 %34, i8 %31, i8 0
  %38 = call i64 @_ZN4base21WriteUnicodeCharacterEjPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(i32 %36, %"class.std::__1::basic_string"* %2) #7
  br i1 %7, label %39, label %107

39:                                               ; preds = %30
  %40 = load i32, i32* %5, align 4
  %41 = sext i32 %40 to i64
  %42 = sub nsw i64 %41, %33
  %43 = add nsw i64 %42, 1
  %44 = icmp eq i64 %43, %38
  br i1 %44, label %107, label %45

45:                                               ; preds = %39
  %46 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %19, align 8
  %47 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %20, align 8
  %48 = icmp ult %"struct.base::OffsetAdjuster::Adjustment"* %46, %47
  %49 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %47 to i64
  br i1 %48, label %50, label %56

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %46, i64 0, i32 0
  store i64 %33, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %46, i64 0, i32 1
  store i64 %43, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %46, i64 0, i32 2
  store i64 %38, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %46, i64 1
  %55 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %54 to i64
  store i64 %55, i64* %21, align 8
  br label %107

56:                                               ; preds = %45
  %57 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %46 to i64
  %58 = load i64, i64* %22, align 8
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, 24
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 768614336404564650
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %64) #8
  unreachable

65:                                               ; preds = %56
  %66 = sub i64 %49, %58
  %67 = sdiv exact i64 %66, 24
  %68 = icmp ult i64 %67, 384307168202282325
  br i1 %68, label %69, label %74

69:                                               ; preds = %65
  %70 = shl nsw i64 %67, 1
  %71 = icmp ult i64 %70, %61
  %72 = select i1 %71, i64 %61, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %69, %65
  %75 = phi i64 [ %72, %69 ], [ 768614336404564650, %65 ]
  %76 = mul i64 %75, 24
  %77 = call i8* @_Znwm(i64 %76) #9
  %78 = bitcast i8* %77 to %"struct.base::OffsetAdjuster::Adjustment"*
  br label %79

79:                                               ; preds = %74, %69
  %80 = phi i64 [ %75, %74 ], [ 0, %69 ]
  %81 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %78, %74 ], [ null, %69 ]
  %82 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %81, i64 %60
  %83 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %81, i64 %80
  %84 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %83 to i64
  %85 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %82, i64 0, i32 0
  store i64 %33, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %81, i64 %60, i32 1
  store i64 %43, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %81, i64 %60, i32 2
  store i64 %38, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %82, i64 1
  %89 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %88 to i64
  %90 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %24, align 8
  %91 = load i64, i64* %21, align 8
  %92 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %90 to i64
  %93 = sub i64 %91, %92
  %94 = sdiv exact i64 %93, -24
  %95 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %82, i64 %94
  %96 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %95 to i64
  %97 = icmp sgt i64 %93, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %79
  %99 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %95 to i8*
  %100 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 %93, i1 false) #7
  %101 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %24, align 8
  br label %102

102:                                              ; preds = %98, %79
  %103 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %90, %79 ], [ %101, %98 ]
  store i64 %96, i64* %22, align 8
  store i64 %89, i64* %21, align 8
  store i64 %84, i64* %23, align 8
  %104 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %103 to i8*
  call void @_ZdlPv(i8* %106) #9
  br label %107

107:                                              ; preds = %105, %102, %50, %39, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #7
  %108 = load i32, i32* %5, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %5, align 4
  %110 = icmp slt i32 %109, %14
  br i1 %110, label %30, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26UTF8ToUTF16WithAdjustmentsERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS1_9allocatorIS9_EEEE(%"class.std::__1::basic_string"* noalias sret, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) local_unnamed_addr #1 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4base25PrepareForUTF16Or32OutputINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEvPKcmPT_(i8* %6, i64 %8, %"class.std::__1::basic_string"* %0) #7
  %9 = tail call zeroext i1 @_ZN4base14ConvertUnicodeIcNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEbPKT_mPT0_PNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS5_ISF_EEEE(i8* %6, i64 %8, %"class.std::__1::basic_string"* %0, %"class.std::__1::vector"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27UTF8ToUTF16AndAdjustOffsetsERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_6vectorImNS1_9allocatorImEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::vector.1"* nocapture readonly) local_unnamed_addr #1 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = icmp eq i64* %6, %8
  br i1 %9, label %34, label %10

10:                                               ; preds = %3
  %11 = ptrtoint i64* %6 to i64
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %13 = getelementptr i64, i64* %8, i64 -1
  %14 = ptrtoint i64* %13 to i64
  %15 = sub i64 %14, %11
  %16 = lshr i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %18 = and i64 %17, 3
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %10, %27
  %21 = phi i64* [ %28, %27 ], [ %6, %10 ]
  %22 = phi i64 [ %29, %27 ], [ %18, %10 ]
  %23 = load i64, i64* %21, align 8
  %24 = load i64, i64* %12, align 8
  %25 = icmp ugt i64 %23, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  store i64 -1, i64* %21, align 8
  br label %27

27:                                               ; preds = %26, %20
  %28 = getelementptr inbounds i64, i64* %21, i64 1
  %29 = add i64 %22, -1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %20, !llvm.loop !2

31:                                               ; preds = %27, %10
  %32 = phi i64* [ %6, %10 ], [ %28, %27 ]
  %33 = icmp ult i64 %15, 24
  br i1 %33, label %34, label %91

34:                                               ; preds = %31, %115, %3
  %35 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #7
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #7
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #7, !alias.scope !4
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8, !noalias !4
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %42 = load i64, i64* %41, align 8, !noalias !4
  tail call void @_ZN4base25PrepareForUTF16Or32OutputINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEvPKcmPT_(i8* %40, i64 %42, %"class.std::__1::basic_string"* %0) #7
  %43 = call zeroext i1 @_ZN4base14ConvertUnicodeIcNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEbPKT_mPT0_PNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS5_ISF_EEEE(i8* %40, i64 %42, %"class.std::__1::basic_string"* %0, %"class.std::__1::vector"* nonnull %4) #7
  %44 = load i64*, i64** %5, align 8
  %45 = load i64*, i64** %7, align 8
  %46 = icmp eq i64* %44, %45
  br i1 %46, label %83, label %47

47:                                               ; preds = %34, %80
  %48 = phi i64* [ %81, %80 ], [ %44, %34 ]
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, -1
  br i1 %50, label %80, label %51

51:                                               ; preds = %47
  %52 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %36, align 8
  %53 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %37, align 8
  %54 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %52, %53
  br i1 %54, label %74, label %55

55:                                               ; preds = %51, %66
  %56 = phi i32 [ %71, %66 ], [ 0, %51 ]
  %57 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %72, %66 ], [ %52, %51 ]
  %58 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %57, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp ugt i64 %49, %59
  br i1 %60, label %61, label %74

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %57, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, %59
  %65 = icmp ult i64 %49, %64
  br i1 %65, label %78, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %57, i64 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %63, %68
  %70 = trunc i64 %69 to i32
  %71 = add nsw i32 %56, %70
  %72 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %57, i64 1
  %73 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %72, %53
  br i1 %73, label %74, label %55

74:                                               ; preds = %66, %55, %51
  %75 = phi i32 [ 0, %51 ], [ %71, %66 ], [ %56, %55 ]
  %76 = sext i32 %75 to i64
  %77 = sub i64 %49, %76
  br label %78

78:                                               ; preds = %61, %74
  %79 = phi i64 [ %77, %74 ], [ -1, %61 ]
  store i64 %79, i64* %48, align 8
  br label %80

80:                                               ; preds = %78, %47
  %81 = getelementptr inbounds i64, i64* %48, i64 1
  %82 = icmp eq i64* %81, %45
  br i1 %82, label %83, label %47

83:                                               ; preds = %80, %34
  %84 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %36, align 8
  %85 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %83
  %87 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %84 to i64
  %88 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %37 to i64*
  store i64 %87, i64* %88, align 8
  %89 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %84 to i8*
  call void @_ZdlPv(i8* %89) #9
  br label %90

90:                                               ; preds = %83, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #7
  ret void

91:                                               ; preds = %31, %115
  %92 = phi i64* [ %116, %115 ], [ %32, %31 ]
  %93 = load i64, i64* %92, align 8
  %94 = load i64, i64* %12, align 8
  %95 = icmp ugt i64 %93, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %91
  store i64 -1, i64* %92, align 8
  br label %97

97:                                               ; preds = %96, %91
  %98 = getelementptr inbounds i64, i64* %92, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = load i64, i64* %12, align 8
  %101 = icmp ugt i64 %99, %100
  br i1 %101, label %102, label %103

102:                                              ; preds = %97
  store i64 -1, i64* %98, align 8
  br label %103

103:                                              ; preds = %102, %97
  %104 = getelementptr inbounds i64, i64* %92, i64 2
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %12, align 8
  %107 = icmp ugt i64 %105, %106
  br i1 %107, label %108, label %109

108:                                              ; preds = %103
  store i64 -1, i64* %104, align 8
  br label %109

109:                                              ; preds = %108, %103
  %110 = getelementptr inbounds i64, i64* %92, i64 3
  %111 = load i64, i64* %110, align 8
  %112 = load i64, i64* %12, align 8
  %113 = icmp ugt i64 %111, %112
  br i1 %113, label %114, label %115

114:                                              ; preds = %109
  store i64 -1, i64* %110, align 8
  br label %115

115:                                              ; preds = %114, %109
  %116 = getelementptr inbounds i64, i64* %92, i64 4
  %117 = icmp eq i64* %116, %8
  br i1 %117, label %34, label %91
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27UTF16ToUTF8AndAdjustOffsetsERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPNS1_6vectorImNS1_9allocatorImEEEE(%"class.std::__1::basic_string.16"* noalias sret, %"class.base::BasicStringPiece.15"* nocapture readonly dereferenceable(16), %"class.std::__1::vector.1"* nocapture readonly) local_unnamed_addr #1 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = icmp eq i64* %6, %8
  br i1 %9, label %34, label %10

10:                                               ; preds = %3
  %11 = ptrtoint i64* %6 to i64
  %12 = getelementptr inbounds %"class.base::BasicStringPiece.15", %"class.base::BasicStringPiece.15"* %1, i64 0, i32 1
  %13 = getelementptr i64, i64* %8, i64 -1
  %14 = ptrtoint i64* %13 to i64
  %15 = sub i64 %14, %11
  %16 = lshr i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %18 = and i64 %17, 3
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %10, %27
  %21 = phi i64* [ %28, %27 ], [ %6, %10 ]
  %22 = phi i64 [ %29, %27 ], [ %18, %10 ]
  %23 = load i64, i64* %21, align 8
  %24 = load i64, i64* %12, align 8
  %25 = icmp ugt i64 %23, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  store i64 -1, i64* %21, align 8
  br label %27

27:                                               ; preds = %26, %20
  %28 = getelementptr inbounds i64, i64* %21, i64 1
  %29 = add i64 %22, -1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %20, !llvm.loop !7

31:                                               ; preds = %27, %10
  %32 = phi i64* [ %6, %10 ], [ %28, %27 ]
  %33 = icmp ult i64 %15, 24
  br i1 %33, label %34, label %93

34:                                               ; preds = %31, %117, %3
  %35 = bitcast %"class.std::__1::basic_string.16"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #7
  %36 = getelementptr inbounds %"class.base::BasicStringPiece.15", %"class.base::BasicStringPiece.15"* %1, i64 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = getelementptr inbounds %"class.base::BasicStringPiece.15", %"class.base::BasicStringPiece.15"* %1, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  tail call void @_ZN4base20PrepareForUTF8OutputIDsEEvPKT_mPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i16* %37, i64 %39, %"class.std::__1::basic_string.16"* %0) #7
  %40 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #7
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #7
  %43 = load i16*, i16** %36, align 8
  %44 = load i64, i64* %38, align 8
  %45 = call zeroext i1 @_ZN4base14ConvertUnicodeIDsNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEbPKT_mPT0_PNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS5_ISF_EEEE(i16* %43, i64 %44, %"class.std::__1::basic_string.16"* %0, %"class.std::__1::vector"* nonnull %4)
  %46 = load i64*, i64** %5, align 8
  %47 = load i64*, i64** %7, align 8
  %48 = icmp eq i64* %46, %47
  br i1 %48, label %85, label %49

49:                                               ; preds = %34, %82
  %50 = phi i64* [ %83, %82 ], [ %46, %34 ]
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, -1
  br i1 %52, label %82, label %53

53:                                               ; preds = %49
  %54 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %41, align 8
  %55 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %42, align 8
  %56 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %54, %55
  br i1 %56, label %76, label %57

57:                                               ; preds = %53, %68
  %58 = phi i32 [ %73, %68 ], [ 0, %53 ]
  %59 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %74, %68 ], [ %54, %53 ]
  %60 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %59, i64 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp ugt i64 %51, %61
  br i1 %62, label %63, label %76

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %59, i64 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, %61
  %67 = icmp ult i64 %51, %66
  br i1 %67, label %80, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %59, i64 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %65, %70
  %72 = trunc i64 %71 to i32
  %73 = add nsw i32 %58, %72
  %74 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %59, i64 1
  %75 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %74, %55
  br i1 %75, label %76, label %57

76:                                               ; preds = %68, %57, %53
  %77 = phi i32 [ 0, %53 ], [ %73, %68 ], [ %58, %57 ]
  %78 = sext i32 %77 to i64
  %79 = sub i64 %51, %78
  br label %80

80:                                               ; preds = %63, %76
  %81 = phi i64 [ %79, %76 ], [ -1, %63 ]
  store i64 %81, i64* %50, align 8
  br label %82

82:                                               ; preds = %80, %49
  %83 = getelementptr inbounds i64, i64* %50, i64 1
  %84 = icmp eq i64* %83, %47
  br i1 %84, label %85, label %49

85:                                               ; preds = %82, %34
  %86 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %41, align 8
  %87 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %86 to i64
  %90 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %42 to i64*
  store i64 %89, i64* %90, align 8
  %91 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %86 to i8*
  call void @_ZdlPv(i8* %91) #9
  br label %92

92:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #7
  ret void

93:                                               ; preds = %31, %117
  %94 = phi i64* [ %118, %117 ], [ %32, %31 ]
  %95 = load i64, i64* %94, align 8
  %96 = load i64, i64* %12, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  store i64 -1, i64* %94, align 8
  br label %99

99:                                               ; preds = %98, %93
  %100 = getelementptr inbounds i64, i64* %94, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = load i64, i64* %12, align 8
  %103 = icmp ugt i64 %101, %102
  br i1 %103, label %104, label %105

104:                                              ; preds = %99
  store i64 -1, i64* %100, align 8
  br label %105

105:                                              ; preds = %104, %99
  %106 = getelementptr inbounds i64, i64* %94, i64 2
  %107 = load i64, i64* %106, align 8
  %108 = load i64, i64* %12, align 8
  %109 = icmp ugt i64 %107, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %105
  store i64 -1, i64* %106, align 8
  br label %111

111:                                              ; preds = %110, %105
  %112 = getelementptr inbounds i64, i64* %94, i64 3
  %113 = load i64, i64* %112, align 8
  %114 = load i64, i64* %12, align 8
  %115 = icmp ugt i64 %113, %114
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  store i64 -1, i64* %112, align 8
  br label %117

117:                                              ; preds = %116, %111
  %118 = getelementptr inbounds i64, i64* %94, i64 4
  %119 = icmp eq i64* %118, %8
  br i1 %119, label %34, label %93
}

declare void @_ZN4base20PrepareForUTF8OutputIDsEEvPKT_mPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i16*, i64, %"class.std::__1::basic_string.16"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base14ConvertUnicodeIDsNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEbPKT_mPT0_PNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS5_ISF_EEEE(i16*, i64, %"class.std::__1::basic_string.16"*, %"class.std::__1::vector"*) local_unnamed_addr #1 comdat {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = icmp ne %"class.std::__1::vector"* %3, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::vector"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %11 to i64*
  store i64 %10, i64* %12, align 8
  br label %13

13:                                               ; preds = %8, %4
  %14 = trunc i64 %1 to i32
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #7
  store i32 0, i32* %5, align 4
  %16 = icmp sgt i32 %14, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  %18 = bitcast i32* %6 to i8*
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %19 to i64*
  %22 = bitcast %"class.std::__1::vector"* %3 to i64*
  %23 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %20 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  br label %30

25:                                               ; preds = %107
  %26 = and i8 %37, 1
  %27 = icmp ne i8 %26, 0
  br label %28

28:                                               ; preds = %25, %13
  %29 = phi i1 [ true, %13 ], [ %27, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #7
  ret i1 %29

30:                                               ; preds = %17, %107
  %31 = phi i8 [ 1, %17 ], [ %37, %107 ]
  %32 = phi i32 [ 0, %17 ], [ %109, %107 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #7
  store i32 -1431655766, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = call zeroext i1 @_ZN4base20ReadUnicodeCharacterEPKDsiPiPj(i16* %0, i32 %14, i32* nonnull %5, i32* nonnull %6) #7
  %35 = load i32, i32* %6, align 4
  %36 = select i1 %34, i32 %35, i32 65533
  %37 = select i1 %34, i8 %31, i8 0
  %38 = call i64 @_ZN4base21WriteUnicodeCharacterEjPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(i32 %36, %"class.std::__1::basic_string.16"* %2) #7
  br i1 %7, label %39, label %107

39:                                               ; preds = %30
  %40 = load i32, i32* %5, align 4
  %41 = sext i32 %40 to i64
  %42 = sub nsw i64 %41, %33
  %43 = add nsw i64 %42, 1
  %44 = icmp eq i64 %43, %38
  br i1 %44, label %107, label %45

45:                                               ; preds = %39
  %46 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %19, align 8
  %47 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %20, align 8
  %48 = icmp ult %"struct.base::OffsetAdjuster::Adjustment"* %46, %47
  %49 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %47 to i64
  br i1 %48, label %50, label %56

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %46, i64 0, i32 0
  store i64 %33, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %46, i64 0, i32 1
  store i64 %43, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %46, i64 0, i32 2
  store i64 %38, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %46, i64 1
  %55 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %54 to i64
  store i64 %55, i64* %21, align 8
  br label %107

56:                                               ; preds = %45
  %57 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %46 to i64
  %58 = load i64, i64* %22, align 8
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, 24
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 768614336404564650
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %64) #8
  unreachable

65:                                               ; preds = %56
  %66 = sub i64 %49, %58
  %67 = sdiv exact i64 %66, 24
  %68 = icmp ult i64 %67, 384307168202282325
  br i1 %68, label %69, label %74

69:                                               ; preds = %65
  %70 = shl nsw i64 %67, 1
  %71 = icmp ult i64 %70, %61
  %72 = select i1 %71, i64 %61, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %69, %65
  %75 = phi i64 [ %72, %69 ], [ 768614336404564650, %65 ]
  %76 = mul i64 %75, 24
  %77 = call i8* @_Znwm(i64 %76) #9
  %78 = bitcast i8* %77 to %"struct.base::OffsetAdjuster::Adjustment"*
  br label %79

79:                                               ; preds = %74, %69
  %80 = phi i64 [ %75, %74 ], [ 0, %69 ]
  %81 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %78, %74 ], [ null, %69 ]
  %82 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %81, i64 %60
  %83 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %81, i64 %80
  %84 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %83 to i64
  %85 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %82, i64 0, i32 0
  store i64 %33, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %81, i64 %60, i32 1
  store i64 %43, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %81, i64 %60, i32 2
  store i64 %38, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %82, i64 1
  %89 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %88 to i64
  %90 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %24, align 8
  %91 = load i64, i64* %21, align 8
  %92 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %90 to i64
  %93 = sub i64 %91, %92
  %94 = sdiv exact i64 %93, -24
  %95 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %82, i64 %94
  %96 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %95 to i64
  %97 = icmp sgt i64 %93, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %79
  %99 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %95 to i8*
  %100 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 %93, i1 false) #7
  %101 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %24, align 8
  br label %102

102:                                              ; preds = %98, %79
  %103 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %90, %79 ], [ %101, %98 ]
  store i64 %96, i64* %22, align 8
  store i64 %89, i64* %21, align 8
  store i64 %84, i64* %23, align 8
  %104 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %103 to i8*
  call void @_ZdlPv(i8* %106) #9
  br label %107

107:                                              ; preds = %105, %102, %50, %39, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #7
  %108 = load i32, i32* %5, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %5, align 4
  %110 = icmp slt i32 %109, %14
  br i1 %110, label %30, label %25
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base20ReadUnicodeCharacterEPKciPiPj(i8*, i32, i32*, i32*) local_unnamed_addr #3

declare i64 @_ZN4base21WriteUnicodeCharacterEjPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(i32, %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base20ReadUnicodeCharacterEPKDsiPiPj(i16*, i32, i32*, i32*) local_unnamed_addr #3

declare i64 @_ZN4base21WriteUnicodeCharacterEjPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(i32, %"class.std::__1::basic_string.16"*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4base26UTF8ToUTF16WithAdjustmentsERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS1_9allocatorIS9_EEEE: argument 0"}
!6 = distinct !{!6, !"_ZN4base26UTF8ToUTF16WithAdjustmentsERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS1_9allocatorIS9_EEEE"}
!7 = distinct !{!7, !3}
