; ModuleID = '../../third_party/angle/src/libANGLE/renderer/gl/egl/DisplayEGL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/gl/egl/DisplayEGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gl::Version" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.rx::DisplayEGL" = type <{ %"class.rx::DisplayGL", %"class.std::__1::shared_ptr.744", %"class.rx::FunctionsEGLDL"*, i8*, %"class.egl::AttributeMap", %"class.std::__1::vector.191", %"class.absl::flat_hash_map.773", %"class.std::__1::map.782", i8, i8, [6 x i8] }>
%"class.rx::DisplayGL" = type { %"class.rx::DisplayImpl" }
%"class.rx::DisplayImpl" = type { %"class.rx::EGLImplFactory", %"class.angle::Subject", %"struct.egl::DisplayState"*, i8, %"struct.egl::DisplayExtensions", i8, %"struct.egl::Caps", %"class.egl::BlobCache"* }
%"class.rx::EGLImplFactory" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"struct.egl::DisplayExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Caps" = type { i8, i8 }
%"class.egl::BlobCache" = type { %"class.std::__1::mutex", %"class.angle::SizedMRUCache", void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.angle::SizedMRUCache" = type { i64, i64, %"class.angle::base::HashingMRUCache" }
%"class.angle::base::HashingMRUCache" = type { %"class.angle::base::MRUCacheBase" }
%"class.angle::base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.626" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.630", %"class.std::__1::__compressed_pair.638", %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.645", [4 x i8] }>
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632", %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { float }
%"class.std::__1::shared_ptr.744" = type { %"class.rx::RendererEGL"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::RendererEGL" = type <{ %"class.rx::RendererGL.base", [7 x i8], %"class.rx::DisplayEGL"*, i8*, %"class.std::__1::vector.191", i8, [7 x i8] }>
%"class.rx::RendererGL.base" = type <{ i32 (...)**, %"struct.gl::Version", %"class.std::__1::unique_ptr.745", %"class.rx::StateManagerGL"*, %"class.rx::BlitGL"*, %"class.rx::ClearMultiviewGL"*, i8, i8, [6 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", i32, [4 x i8], %"class.absl::flat_hash_map.751", %"class.std::__1::list.766", %"class.std::__1::mutex", i8, [7 x i8], %"struct.angle::FeaturesGL", i8 }>
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.rx::FunctionsGL"* }
%"class.rx::FunctionsGL" = type { %"class.rx::DispatchTableGL", %"struct.gl::Version", i32, i32, %"class.std::__1::vector.136" }
%"class.rx::DispatchTableGL" = type { i32 (...)**, void (i32, i32)*, void (i32)*, void (float, float, float, float)*, void (double)*, void (i32)*, void (i8, i8, i8, i8)*, void (i32)*, void (i32)*, void (i8)*, void (double, double)*, void (i32)*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32)*, void (i32, i8*)*, void (i32, double*)*, i32 ()*, void (i32, float*)*, void (i32, i32*)*, i8* (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32)*, i8 (i32)*, void (float)*, void (i32)*, void (i32, float)*, void (i32, i32)*, void (float)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i8*)*, void (i32, i32*)*, i8 (i32)*, void (float, float)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (float, float, float, float)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32)*, i8 (i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (float, i8)*, void (i32, i32, i32, i32)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, i8 (i32)*, i8* (i32, i32)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32)*, i32 ()*, i32 (i32)*, void (i32)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i8 (i32)*, i8 (i32)*, void (i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32)*, void (i32)*, void (i32, double)*, void (i32, double*)*, void (i32, float)*, void (i32, float*)*, void (i32, i16)*, void (i32, i16*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, i16, i16)*, void (i32, i16*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8, i8, i8, i8)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32*)*, void (i32, i16, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32)*, void (i32, i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i8, i8, i8, i8)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void ()*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8* (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8* (i32, i64, i64, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8**, i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8**, i32*)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, i32 (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)*, %struct.__GLsync* (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i64*)*, void (i32, i32, float*)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, i8 (%struct.__GLsync*)*, void (i32, i32*, i32, i8**, i32, i32*)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32, i8*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, double*)*, i8 (i32)*, void (float)*, void (i32, float*)*, void (i32, i32)*, void ()*, void ()*, void (i32, double)*, void (i32, i32, double*)*, void (i32, double, double)*, void (i32, i32, double*)*, void (i32, double, double, double)*, void (i32, i32, double*)*, void (i32, double, double, double, double)*, void (i32, i32, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32)*, void (float)*, i32 (i32, i32, i8**)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, double, double)*, void (float, float)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, double*)*, i8 (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void ()*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32)*, void (i32, double)*, void (i32, double*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i64, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, void (i32)*, void (i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i8*, i32, i32)*, void (i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void ()*, void (i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i64*, i32*)*, void (i32, i64, i8*, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, float, i32)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i64*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i32*, i64*, i32*)*, void ()*, void (float, float, float, float, float, float, float, float)*, void (i32)*, void (i32, i8*)*, void ()*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i32, i64)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8*)*, void (i32, i8*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32, i64, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i8*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i64*)*, i8 (i32)*, void (i32, i32, i64*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32)* }
%struct.__GLsync = type opaque
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::basic_string"* }
%"class.rx::StateManagerGL" = type opaque
%"class.rx::BlitGL" = type opaque
%"class.rx::ClearMultiviewGL" = type opaque
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.39", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.41", %"struct.std::__1::array.41", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.37", i32 }
%"struct.std::__1::array.37" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.38" }
%"struct.std::__1::array.38" = type { [6 x i32] }
%"class.angle::PackedEnumMap.39" = type { %"struct.std::__1::array.40" }
%"struct.std::__1::array.40" = type { [6 x i64] }
%"struct.std::__1::array.41" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.42" }
%"class.angle::PackedEnumMap.42" = type { %"struct.std::__1::array.43" }
%"struct.std::__1::array.43" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.44" }
%"class.std::__1::set.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::flat_hash_map.751" = type { %"class.absl::container_internal::raw_hash_map.752" }
%"class.absl::container_internal::raw_hash_map.752" = type { %"class.absl::container_internal::raw_hash_set.753" }
%"class.absl::container_internal::raw_hash_set.753" = type { i8*, %"union.absl::container_internal::map_slot_type.754"*, i64, i64, %"class.absl::container_internal::CompressedTuple.755" }
%"union.absl::container_internal::map_slot_type.754" = type opaque
%"class.absl::container_internal::CompressedTuple.755" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.756" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.756" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::list.766" = type { %"class.std::__1::__list_imp.767" }
%"class.std::__1::__list_imp.767" = type { %"struct.std::__1::__list_node_base.768", %"class.std::__1::__compressed_pair.769" }
%"struct.std::__1::__list_node_base.768" = type { %"struct.std::__1::__list_node_base.768"*, %"struct.std::__1::__list_node_base.768"* }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.angle::FeaturesGL" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.707" }
%"class.std::__1::map.707" = type { %"class.std::__1::__tree.708" }
%"class.std::__1::__tree.708" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::FunctionsEGLDL" = type { %"class.rx::FunctionsEGL", void ()* (i8*)* }
%"class.rx::FunctionsEGL" = type { i32 (...)**, i32, i32, %"struct.rx::FunctionsEGL::EGLDispatchTable"*, i8*, %"class.std::__1::vector.136" }
%"struct.rx::FunctionsEGL::EGLDispatchTable" = type opaque
%"class.egl::AttributeMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { i32*, i32*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { i32* }
%"class.absl::flat_hash_map.773" = type { %"class.absl::container_internal::raw_hash_map.774" }
%"class.absl::container_internal::raw_hash_map.774" = type { %"class.absl::container_internal::raw_hash_set.775" }
%"class.absl::container_internal::raw_hash_set.775" = type { i8*, %"union.absl::container_internal::map_slot_type.776"*, i64, i64, %"class.absl::container_internal::CompressedTuple.777" }
%"union.absl::container_internal::map_slot_type.776" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::__thread_id", %"struct.rx::DisplayEGL::CurrentNativeContext" }
%"class.std::__1::__thread_id" = type { i64 }
%"struct.rx::DisplayEGL::CurrentNativeContext" = type <{ i8*, i8*, i8, [7 x i8] }>
%"class.absl::container_internal::CompressedTuple.777" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.778" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.778" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::map.782" = type { %"class.std::__1::__tree.783" }
%"class.std::__1::__tree.783" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.784", %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.egl::DisplayState" = type { i8*, %"class.std::__1::set.656", %"class.std::__1::vector.136", %"class.std::__1::vector.136", i8, i64 }
%"class.std::__1::set.656" = type { %"class.std::__1::__tree.657" }
%"class.std::__1::__tree.657" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.658", %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__tree_node.845" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.846", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.846" = type { %"struct.std::__1::pair.847" }
%"struct.std::__1::pair.847" = type { i32, i32 }
%"class.rx::ImageImpl" = type { i32 (...)**, %"struct.egl::ImageState"* }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.14", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.13", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.13" = type { i32 (...)**, i64 }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.std::__1::set.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.548", [4 x i8], %"class.std::__1::unique_ptr.549", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.555", %"class.gl::ResourceMap.557", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.567", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.577", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.587", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.597", i8*, %"class.std::__1::vector.597", %"class.std::__1::unique_ptr.604", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.547", %"class.gl::StateCache", %"class.angle::BitSetT.179", %"class.angle::BitSetT.179", %"class.angle::BitSetT.547", %"class.angle::BitSetT.179", %"class.angle::BitSetT.547", %"class.angle::BitSetT.179", %"class.angle::BitSetT.547", %"class.angle::BitSetT.179", %"class.angle::BitSetT.547", %"class.angle::BitSetT.179", %"class.angle::BitSetT.547", %"class.angle::BitSetT.179", %"class.angle::BitSetT.547", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.348", %"class.std::__1::vector.348", %"class.std::__1::vector.348", %struct.Optional.618, %struct.Optional.618, %"class.std::__1::shared_ptr.619", %"class.std::__1::unique_ptr.620", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.384", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.385", %"class.gl::Program"*, %"class.gl::BindingPointer.387", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.389", %"class.gl::VertexArray"*, %"class.angle::BitSetT.159", i64, %"class.angle::PackedEnumMap.417", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.348", %"class.angle::BitSetArray", %"class.std::__1::vector.429", %"class.std::__1::vector.438", %"class.angle::PackedEnumMap.445", %"class.angle::PackedEnumMap.449", %"class.std::__1::vector.451", %"class.std::__1::vector.451", %"class.std::__1::vector.451", %"class.angle::BitSetArray.458", %"class.angle::BitSetT.459", %"class.angle::BitSetT.179", %"class.gl::BindingPointer.460", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.487", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.179", %"class.angle::BitSetT.546", [4 x i8], %"class.angle::BitSetT.547", %"class.angle::BitSetT.177", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.158", %"class.angle::BitSetT.158", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"class.egl::ShareGroup" = type { i64, %"class.rx::ShareGroupImpl"*, %"class.rx::SerialFactoryBase", %"class.std::__1::unique_ptr.650" }
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.angle::FrameCaptureShared"* }
%"class.angle::FrameCaptureShared" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.62", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.62" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map.63" }
%"class.std::__1::map.63" = type { %"class.std::__1::__tree.64" }
%"class.std::__1::__tree.64" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.819" }
%"struct.std::__1::pair.819" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.80", %"class.gl::ResourceMap.133" }
%"class.gl::ResourceMap.80" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.124" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.96", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.118", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.81", %"class.std::__1::vector.81", %"class.std::__1::vector.81", %"class.std::__1::vector.88", %"class.std::__1::vector.88", %"class.std::__1::vector.81", %"class.std::__1::vector.81", %"class.std::__1::vector.81", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.95, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.90" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.81" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.83" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.81", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.95 = type { i8, i32 }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.124" = type { %"class.absl::container_internal::raw_hash_map.125" }
%"class.absl::container_internal::raw_hash_map.125" = type { %"class.absl::container_internal::raw_hash_set.126" }
%"class.absl::container_internal::raw_hash_set.126" = type { i8*, %"union.absl::container_internal::map_slot_type.127"*, i64, i64, %"class.absl::container_internal::CompressedTuple.128" }
%"union.absl::container_internal::map_slot_type.127" = type opaque
%"class.absl::container_internal::CompressedTuple.128" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.129" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.129" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.133" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.252" }
%"class.absl::flat_hash_map.252" = type { %"class.absl::container_internal::raw_hash_map.253" }
%"class.absl::container_internal::raw_hash_map.253" = type { %"class.absl::container_internal::raw_hash_set.254" }
%"class.absl::container_internal::raw_hash_set.254" = type { i8*, %"union.absl::container_internal::map_slot_type.255"*, i64, i64, %"class.absl::container_internal::CompressedTuple.256" }
%"union.absl::container_internal::map_slot_type.255" = type { %"struct.std::__1::pair.821" }
%"struct.std::__1::pair.821" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.256" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.257" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.257" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.261" }
%"class.gl::TypedResourceManager.261" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.262" }
%"class.gl::ResourceMap.262" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.264", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.277", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.279", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.264" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.268", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.265, i8, [3 x i8] }>
%union.anon.265 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.270" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.275", i64, i64 }
%"class.gl::BindingPointer.275" = type { %"class.angle::BindingPointer.276" }
%"class.angle::BindingPointer.276" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.277" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.278", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.278" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.279" = type { %"struct.std::__1::array.280", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.280" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.823" }
%"struct.std::__1::pair.823" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.292" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.292" = type { %"class.absl::container_internal::raw_hash_map.293" }
%"class.absl::container_internal::raw_hash_map.293" = type { %"class.absl::container_internal::raw_hash_set.294" }
%"class.absl::container_internal::raw_hash_set.294" = type { i8*, %"union.absl::container_internal::map_slot_type.295"*, i64, i64, %"class.absl::container_internal::CompressedTuple.296" }
%"union.absl::container_internal::map_slot_type.295" = type { %"struct.std::__1::pair.825" }
%"struct.std::__1::pair.825" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.296" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.297" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.297" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.301" }
%"class.gl::TypedResourceManager.301" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.302" }
%"class.gl::ResourceMap.302" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.304", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.304" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type { %"struct.std::__1::pair.827" }
%"struct.std::__1::pair.827" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.316" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type opaque
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.327" }
%"class.absl::flat_hash_map.327" = type { %"class.absl::container_internal::raw_hash_map.328" }
%"class.absl::container_internal::raw_hash_map.328" = type { %"class.absl::container_internal::raw_hash_set.329" }
%"class.absl::container_internal::raw_hash_set.329" = type { i8*, %"union.absl::container_internal::map_slot_type.330"*, i64, i64, %"class.absl::container_internal::CompressedTuple.331" }
%"union.absl::container_internal::map_slot_type.330" = type { %"struct.std::__1::pair.829" }
%"struct.std::__1::pair.829" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.331" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.332" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.332" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.336" }
%"class.gl::TypedResourceManager.336" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.337" }
%"class.gl::ResourceMap.337" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.355" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.339", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.340", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.348", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.339" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.346", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.346" = type { %"struct.std::__1::array.347" }
%"struct.std::__1::array.347" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.355" = type { %"class.absl::container_internal::raw_hash_map.356" }
%"class.absl::container_internal::raw_hash_map.356" = type { %"class.absl::container_internal::raw_hash_set.357" }
%"class.absl::container_internal::raw_hash_set.357" = type { i8*, %"union.absl::container_internal::map_slot_type.358"*, i64, i64, %"class.absl::container_internal::CompressedTuple.359" }
%"union.absl::container_internal::map_slot_type.358" = type { %"struct.std::__1::pair.831" }
%"struct.std::__1::pair.831" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.360" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.360" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.364" }
%"class.gl::ResourceMap.364" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.365" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.365" = type { %"class.absl::container_internal::raw_hash_map.366" }
%"class.absl::container_internal::raw_hash_map.366" = type { %"class.absl::container_internal::raw_hash_set.367" }
%"class.absl::container_internal::raw_hash_set.367" = type { i8*, %"union.absl::container_internal::map_slot_type.368"*, i64, i64, %"class.absl::container_internal::CompressedTuple.369" }
%"union.absl::container_internal::map_slot_type.368" = type opaque
%"class.absl::container_internal::CompressedTuple.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.370" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.370" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.374" }
%"class.gl::ResourceMap.374" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.375" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.375" = type { %"class.absl::container_internal::raw_hash_map.376" }
%"class.absl::container_internal::raw_hash_map.376" = type { %"class.absl::container_internal::raw_hash_set.377" }
%"class.absl::container_internal::raw_hash_set.377" = type { i8*, %"union.absl::container_internal::map_slot_type.378"*, i64, i64, %"class.absl::container_internal::CompressedTuple.379" }
%"union.absl::container_internal::map_slot_type.378" = type opaque
%"class.absl::container_internal::CompressedTuple.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.158", %"class.angle::BitSetT.158", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.384" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.741, %"class.std::__1::vector.348", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.742", %"class.angle::BitSetT.158", %struct.Optional.743 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.734", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.158", %"class.std::__1::vector", i32, %"class.angle::BitSetT.158", %"class.angle::BitSetT.159", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.547", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.734" = type { %"class.std::__1::__vector_base.735" }
%"class.std::__1::__vector_base.735" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.741 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.742" = type { i64 }
%struct.Optional.743 = type { i8, %"class.angle::BitSetT.742" }
%"class.gl::BindingPointer.385" = type { %"class.angle::BindingPointer.386" }
%"class.angle::BindingPointer.386" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.246", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.212" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.134", i32, %"class.std::__1::vector.136", %"class.std::__1::vector.143", %"class.std::__1::vector.150", %"class.gl::Range", %"class.angle::BitSetT.158", %"class.std::__1::vector", %"class.angle::BitSetT.159", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.134" = type { %"struct.std::__1::array.135" }
%"struct.std::__1::array.135" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.145" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.153" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.152" }>
%"class.angle::BitSetT.152" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.237" }
%"class.absl::flat_hash_map.237" = type { %"class.absl::container_internal::raw_hash_map.238" }
%"class.absl::container_internal::raw_hash_map.238" = type { %"class.absl::container_internal::raw_hash_set.239" }
%"class.absl::container_internal::raw_hash_set.239" = type { i8*, %"union.absl::container_internal::map_slot_type.240"*, i64, i64, %"class.absl::container_internal::CompressedTuple.241" }
%"union.absl::container_internal::map_slot_type.240" = type opaque
%"class.absl::container_internal::CompressedTuple.241" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.242" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.242" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.160" }
%"class.absl::flat_hash_map.160" = type { %"class.absl::container_internal::raw_hash_map.161" }
%"class.absl::container_internal::raw_hash_map.161" = type { %"class.absl::container_internal::raw_hash_set.162" }
%"class.absl::container_internal::raw_hash_set.162" = type { i8*, %"union.absl::container_internal::map_slot_type.163"*, i64, i64, %"class.absl::container_internal::CompressedTuple.164" }
%"union.absl::container_internal::map_slot_type.163" = type opaque
%"class.absl::container_internal::CompressedTuple.164" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.165" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.165" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.212" = type { i64 }
%"class.gl::BindingPointer.387" = type { %"class.angle::BindingPointer.388" }
%"class.angle::BindingPointer.388" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.152", %"class.angle::BitSetT.152", [6 x i8], %"class.angle::BitSetT.177", i32, [4 x i8], %"class.angle::BitSetT.159", %"class.angle::BitSetT.177", %"class.angle::BitSetArray", %"struct.std::__1::array.180", %"struct.std::__1::array.181", %"class.angle::BitSetArray", %"struct.std::__1::array.182", %"struct.std::__1::array.183", %"class.angle::BitSetArray", %"struct.std::__1::array.183", i8, [7 x i8], %"class.std::__1::vector.81", %"class.std::__1::vector.143", %"class.std::__1::vector.143", i8, [7 x i8], %"class.std::__1::vector.81", %"class.std::__1::vector.184", %"class.std::__1::vector.191", i32, [4 x i8], %"class.std::__1::vector.198", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.205", %"class.angle::BitSetT.212", %"class.std::__1::vector.213", %"class.gl::Range", %"class.std::__1::vector.205", %"class.std::__1::vector.205", %"class.gl::Range", %"class.std::__1::vector.220", %"class.std::__1::vector.227", %"class.std::__1::vector.227", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.234", %"class.angle::PackedEnumMap.234", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.236, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.180" = type { [96 x i32] }
%"struct.std::__1::array.181" = type { [96 x i8] }
%"struct.std::__1::array.182" = type { [96 x i8] }
%"struct.std::__1::array.183" = type { [96 x %"class.angle::BitSetT.152"] }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.186" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.200" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.215" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.207" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.222" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.229" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.234" = type { %"struct.std::__1::array.235" }
%"struct.std::__1::array.235" = type { [6 x %"class.std::__1::vector.81"] }
%struct.Optional.236 = type { i8, i8 }
%"class.std::__1::vector.389" = type { %"class.std::__1::__vector_base.390" }
%"class.std::__1::__vector_base.390" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.392" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.391, i32 }
%union.anon.391 = type { [4 x float] }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.411", %"struct.std::__1::array.412", %"struct.std::__1::array.414", %struct.Optional.416, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.348", %"class.angle::BitSetT.177", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.397", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.404", %"class.angle::BitSetT.177", %"class.angle::BitSetT.159", %"class.angle::BitSetT.177", %"class.angle::BitSetT.177", %"class.angle::BitSetT.177", %"class.angle::BitSetT.177", %"class.angle::BitSetT.177" }
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.399" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.275", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.406" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.275", %"class.angle::BitSetT.177" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.411" = type { i64 }
%"struct.std::__1::array.412" = type { [16 x %"class.angle::BitSetT.413"] }
%"class.angle::BitSetT.413" = type { i64 }
%"struct.std::__1::array.414" = type { [16 x %"class.angle::BitSetT.415"] }
%"class.angle::BitSetT.415" = type { i64 }
%struct.Optional.416 = type { i8, %"class.angle::BitSetT.411" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.159" = type { i64 }
%"class.angle::PackedEnumMap.417" = type { %"struct.std::__1::array.418" }
%"struct.std::__1::array.418" = type { [11 x %"class.std::__1::vector.419"] }
%"class.std::__1::vector.419" = type { %"class.std::__1::__vector_base.420" }
%"class.std::__1::__vector_base.420" = type { %"class.gl::BindingPointer.421"*, %"class.gl::BindingPointer.421"*, %"class.std::__1::__compressed_pair.423" }
%"class.gl::BindingPointer.421" = type { %"class.angle::BindingPointer.422" }
%"class.angle::BindingPointer.422" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.gl::BindingPointer.421"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.428" }
%"struct.std::__1::array.428" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.429" = type { %"class.std::__1::__vector_base.430" }
%"class.std::__1::__vector_base.430" = type { %"class.gl::BindingPointer.431"*, %"class.gl::BindingPointer.431"*, %"class.std::__1::__compressed_pair.433" }
%"class.gl::BindingPointer.431" = type { %"class.angle::BindingPointer.432" }
%"class.angle::BindingPointer.432" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.gl::BindingPointer.431"* }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.440" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.421", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.445" = type { %"struct.std::__1::array.446" }
%"struct.std::__1::array.446" = type { [7 x %"class.gl::BindingPointer.447"] }
%"class.gl::BindingPointer.447" = type { %"class.angle::BindingPointer.448" }
%"class.angle::BindingPointer.448" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.449" = type { %"struct.std::__1::array.450" }
%"struct.std::__1::array.450" = type { [13 x %"class.gl::BindingPointer.275"] }
%"class.std::__1::vector.451" = type { %"class.std::__1::__vector_base.452" }
%"class.std::__1::__vector_base.452" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.458" = type { %"struct.std::__1::array.178" }
%"struct.std::__1::array.178" = type { [2 x %"class.angle::BitSetT.179"] }
%"class.angle::BitSetT.459" = type { i64 }
%"class.gl::BindingPointer.460" = type { %"class.angle::BindingPointer.461" }
%"class.angle::BindingPointer.461" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.463", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.463" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.451" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.473" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.469" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.464" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.473" = type { %"class.std::__1::__vector_base.474" }
%"class.std::__1::__vector_base.474" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.482" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.475" }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.477" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.487" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.177", %"class.std::__1::vector.488", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.496", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.501", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.516", %"class.std::__1::vector.523", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.530", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.539", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.488" = type { %"class.std::__1::__vector_base.489" }
%"class.std::__1::__vector_base.489" = type { %"class.angle::BitSetT.490"*, %"class.angle::BitSetT.490"*, %"class.std::__1::__compressed_pair.491" }
%"class.angle::BitSetT.490" = type opaque
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.angle::BitSetT.490"* }
%"class.std::__1::vector.496" = type { i64*, i64, %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.501" = type { %"class.std::__1::__vector_base.502" }
%"class.std::__1::__vector_base.502" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.503" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.508", i64 }
%"struct.std::__1::array.508" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.509", i32, i32 }
%"class.std::__1::vector.509" = type { %"class.std::__1::__vector_base.510" }
%"class.std::__1::__vector_base.510" = type { float*, float*, %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { float* }
%"class.std::__1::vector.516" = type { %"class.std::__1::__vector_base.517" }
%"class.std::__1::__vector_base.517" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.523" = type { %"class.std::__1::__vector_base.524" }
%"class.std::__1::__vector_base.524" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.525" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.534" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.532", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.532" = type { %"class.angle::VectorBase.533" }
%"class.angle::VectorBase.533" = type { [4 x float] }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.539" = type { %"class.std::__1::__vector_base.540" }
%"class.std::__1::__vector_base.540" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.541" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.532" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.546" = type { i32 }
%"class.angle::BitSetT.177" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.178" }
%"class.angle::BitSetT.158" = type { i8 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.44" }
%"class.angle::BitSetT.548" = type { i32 }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.102" }
%"class.angle::BindingPointer.102" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.103", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.109" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.41", %"struct.std::__1::array.41", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.109" = type { %"struct.std::__1::array.110" }
%"struct.std::__1::array.110" = type { [6 x %"class.std::__1::vector.111"] }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.113" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.555" = type { %"struct.std::__1::array.556" }
%"struct.std::__1::array.556" = type { [11 x %"class.gl::BindingPointer.421"] }
%"class.gl::ResourceMap.557" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.558" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.558" = type { %"class.absl::container_internal::raw_hash_map.559" }
%"class.absl::container_internal::raw_hash_map.559" = type { %"class.absl::container_internal::raw_hash_set.560" }
%"class.absl::container_internal::raw_hash_set.560" = type { i8*, %"union.absl::container_internal::map_slot_type.561"*, i64, i64, %"class.absl::container_internal::CompressedTuple.562" }
%"union.absl::container_internal::map_slot_type.561" = type opaque
%"class.absl::container_internal::CompressedTuple.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.563" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.563" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.567" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.568" }
%"class.absl::flat_hash_map.568" = type { %"class.absl::container_internal::raw_hash_map.569" }
%"class.absl::container_internal::raw_hash_map.569" = type { %"class.absl::container_internal::raw_hash_set.570" }
%"class.absl::container_internal::raw_hash_set.570" = type { i8*, %"union.absl::container_internal::map_slot_type.571"*, i64, i64, %"class.absl::container_internal::CompressedTuple.572" }
%"union.absl::container_internal::map_slot_type.571" = type opaque
%"class.absl::container_internal::CompressedTuple.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.573" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.573" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.577" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.578" }
%"class.absl::flat_hash_map.578" = type { %"class.absl::container_internal::raw_hash_map.579" }
%"class.absl::container_internal::raw_hash_map.579" = type { %"class.absl::container_internal::raw_hash_set.580" }
%"class.absl::container_internal::raw_hash_set.580" = type { i8*, %"union.absl::container_internal::map_slot_type.581"*, i64, i64, %"class.absl::container_internal::CompressedTuple.582" }
%"union.absl::container_internal::map_slot_type.581" = type opaque
%"class.absl::container_internal::CompressedTuple.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.583" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.583" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.587" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.588" }
%"class.absl::flat_hash_map.588" = type { %"class.absl::container_internal::raw_hash_map.589" }
%"class.absl::container_internal::raw_hash_map.589" = type { %"class.absl::container_internal::raw_hash_set.590" }
%"class.absl::container_internal::raw_hash_set.590" = type { i8*, %"union.absl::container_internal::map_slot_type.591"*, i64, i64, %"class.absl::container_internal::CompressedTuple.592" }
%"union.absl::container_internal::map_slot_type.591" = type opaque
%"class.absl::container_internal::CompressedTuple.592" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.593" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.593" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.54", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.56" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.597" = type { %"class.std::__1::__vector_base.598" }
%"class.std::__1::__vector_base.598" = type { i8**, i8**, %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { i8** }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type { %"class.egl::LabeledObject", %"class.gl::FramebufferAttachmentObject", %"struct.egl::SurfaceState", %"class.rx::SurfaceImpl"*, i32, i8, i32, i32, i8, i8, i8, i32, i32, i32, i8, i32, i32, i32, i32, i8, i64, i64, i8, i8, i32, i32, i32, i32, i32, %"class.gl::Texture"*, %"struct.gl::Format", %"struct.gl::Format", %"struct.gl::Offset", i32, %"class.angle::ObserverBinding" }
%"struct.egl::SurfaceState" = type <{ i8*, %"struct.egl::Config"*, %"class.egl::AttributeMap", i8, [3 x i8], %"class.angle::BitSetT.732", %"class.angle::BitSetT.733", i8, [3 x i8] }>
%"class.angle::BitSetT.732" = type { i32 }
%"class.angle::BitSetT.733" = type { i32 }
%"class.rx::SurfaceImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"struct.egl::SurfaceState"* }
%"class.egl::Display" = type { %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"struct.egl::DisplayState", %"class.rx::DisplayImpl"*, %"class.angle::ObserverBinding", %"class.egl::AttributeMap", %"class.egl::ConfigSet", %"class.std::__1::set.677", %"class.std::__1::set", %"class.std::__1::set.687", %"class.std::__1::set.697", i8, i8, %"struct.egl::Caps", %"struct.egl::DisplayExtensions", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.egl::Device"*, %"class.egl::Surface"*, i32, %"class.angle::LoggingAnnotator", %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.egl::BlobCache", %"class.gl::MemoryProgramCache", i64, i64, %"struct.angle::FrontendFeatures", %"class.std::__1::vector.718", %"class.std::__1::mutex", %"class.std::__1::vector.725", %"class.std::__1::vector.725", %"class.std::__1::mutex", %"class.std::__1::mutex" }
%"class.egl::ConfigSet" = type { %"class.std::__1::map.666" }
%"class.std::__1::map.666" = type { %"class.std::__1::__tree.667" }
%"class.std::__1::__tree.667" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.668", %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.677" = type { %"class.std::__1::__tree.678" }
%"class.std::__1::__tree.678" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.679", %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.687" = type { %"class.std::__1::__tree.688" }
%"class.std::__1::__tree.688" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.689", %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.697" = type { %"class.std::__1::__tree.698" }
%"class.std::__1::__tree.698" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.699", %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.egl::Device" = type opaque
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.gl::MemoryProgramCache" = type <{ %"class.egl::BlobCache"*, i32, [4 x i8] }>
%"struct.angle::FrontendFeatures" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"class.std::__1::vector.718" = type { %"class.std::__1::__vector_base.719" }
%"class.std::__1::__vector_base.719" = type { %"struct.angle::Feature"**, %"struct.angle::Feature"**, %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"struct.angle::Feature"** }
%"class.std::__1::vector.725" = type { %"class.std::__1::__vector_base.726" }
%"class.std::__1::__vector_base.726" = type { %"class.angle::ScratchBuffer"*, %"class.angle::ScratchBuffer"*, %"class.std::__1::__compressed_pair.727" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.angle::ScratchBuffer"* }
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.177", %"class.angle::BitSetT.177", %"class.angle::BitSetT.177", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.179", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.610", %"class.angle::PackedEnumMap.612", %"class.angle::PackedEnumMap.614", %"class.angle::PackedEnumMap.616", %"class.angle::PackedEnumMap.616", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.610" = type { %"struct.std::__1::array.611" }
%"struct.std::__1::array.611" = type { [16 x i8] }
%"class.angle::PackedEnumMap.612" = type { %"struct.std::__1::array.613" }
%"struct.std::__1::array.613" = type { [12 x i8] }
%"class.angle::PackedEnumMap.614" = type { %"struct.std::__1::array.615" }
%"struct.std::__1::array.615" = type { [4 x i8] }
%"class.angle::PackedEnumMap.616" = type { %"struct.std::__1::array.617" }
%"struct.std::__1::array.617" = type { [19 x i32] }
%"class.angle::BitSetT.179" = type { i64 }
%"class.angle::BitSetT.547" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.618 = type { i8, %"class.angle::ScratchBuffer" }
%"class.std::__1::shared_ptr.619" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.rx::ImageEGL" = type { %"class.rx::ImageGL", %"class.rx::FunctionsEGL"*, i8*, i32, i8, i32, i8* }
%"class.rx::ImageGL" = type { %"class.rx::ImageImpl" }
%"class.rx::EGLSyncImpl" = type { i32 (...)** }
%"class.rx::SyncEGL" = type { %"class.rx::EGLSyncImpl", %"class.rx::FunctionsEGL"*, i32, i8* }
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.791" }
%"class.std::__1::unique_ptr.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.std::__1::vector.796" = type { %"class.std::__1::__vector_base.797" }
%"class.std::__1::__vector_base.797" = type { %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"*, %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.std::__1::vector.191"* }
%"class.angle::ErrorStreamBase" = type { i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.angle::ErrorStreamBase.803" = type { i32, %"class.std::__1::basic_ostringstream" }
%"class.rx::RendererGL" = type <{ i32 (...)**, %"struct.gl::Version", %"class.std::__1::unique_ptr.745", %"class.rx::StateManagerGL"*, %"class.rx::BlitGL"*, %"class.rx::ClearMultiviewGL"*, i8, i8, [6 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", i32, [4 x i8], %"class.absl::flat_hash_map.751", %"class.std::__1::list.766", %"class.std::__1::mutex", i8, [7 x i8], %"struct.angle::FeaturesGL", i8, [7 x i8] }>
%"class.gl::LogMessage" = type { i8*, i8*, i32, i32, %"class.std::__1::basic_ostringstream" }
%"class.rx::WindowSurfaceEGL" = type { %"class.rx::SurfaceEGL.base", i64 }
%"class.rx::SurfaceEGL.base" = type <{ %"class.rx::SurfaceGL", %"class.rx::FunctionsEGL"*, i8*, i8*, i8 }>
%"class.rx::SurfaceGL" = type { %"class.rx::SurfaceImpl" }
%"class.rx::PbufferSurfaceEGL" = type { %"class.rx::SurfaceEGL.base", [7 x i8] }
%"class.rx::ContextEGL" = type { %"class.rx::ContextGL.base", %"class.std::__1::shared_ptr.744", %"class.std::__1::unique_ptr.805" }
%"class.rx::ContextGL.base" = type <{ %"class.rx::ContextImpl", %"class.std::__1::shared_ptr.804", i32 }>
%"class.std::__1::shared_ptr.804" = type { %"class.rx::RendererGL"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"struct.rx::ExternalContextState"* }
%"struct.rx::ExternalContextState" = type opaque
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { i8**, i8**, %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { i8** }
%"class.rx::SurfaceEGL" = type <{ %"class.rx::SurfaceGL", %"class.rx::FunctionsEGL"*, i8*, i8*, i8, [7 x i8] }>
%"class.rx::WorkerContext" = type { i32 (...)** }
%"class.rx::ExternalImageSiblingImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl" }
%"class.rx::DmaBufImageSiblingEGL" = type <{ %"class.rx::ExternalImageSiblingEGL", %"class.egl::AttributeMap", %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i8, [7 x i8] }>
%"class.rx::ExternalImageSiblingEGL" = type { %"class.rx::ExternalImageSiblingImpl" }
%"class.rx::DeviceImpl" = type opaque
%"class.(anonymous namespace)::WorkerContextEGL" = type { %"class.rx::WorkerContext", i8*, %"class.rx::FunctionsEGL"*, i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.rx::RendererEGL"* }
%"class.std::type_info" = type { i32 (...)**, i8* }

$_ZNK5angle14FeatureSetBase19populateFeatureListEPNSt3__16vectorIPKNS_7FeatureENS1_9allocatorIS5_EEEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE22find_or_prepare_insertIS4_EENSF_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE = comdat any

@_ZTVN2rx10DisplayEGLE = hidden unnamed_addr constant { [45 x i8*], [4 x i8*] } { [45 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DisplayEGL"*)* @_ZN2rx10DisplayEGLD2Ev to i8*), i8* bitcast (void (%"class.rx::DisplayEGL"*)* @_ZN2rx10DisplayEGLD0Ev to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayEGL"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)* @_ZN2rx10DisplayEGL19createWindowSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayEGL"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)* @_ZN2rx10DisplayEGL20createPbufferSurfaceERKN3egl12SurfaceStateERKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayEGL"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZN2rx10DisplayEGL29createPbufferFromClientBufferERKN3egl12SurfaceStateEjPvRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayEGL"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)* @_ZN2rx10DisplayEGL19createPixmapSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::ImageImpl"* (%"class.rx::DisplayEGL"*, %"struct.egl::ImageState"*, %"class.gl::Context"*, i32, %"class.egl::AttributeMap"*)* @_ZN2rx10DisplayEGL11createImageERKN3egl10ImageStateEPKN2gl7ContextEjRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::ContextImpl"* (%"class.rx::DisplayEGL"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)* @_ZN2rx10DisplayEGL13createContextERKN2gl5StateEPNS1_8ErrorSetEPKN3egl6ConfigEPKNS1_7ContextERKNS7_12AttributeMapE to i8*), i8* bitcast (%"class.rx::StreamProducerImpl"* (%"class.rx::DisplayGL"*, i32, %"class.egl::AttributeMap"*)* @_ZN2rx9DisplayGL30createStreamProducerD3DTextureEN3egl6Stream12ConsumerTypeERKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::ExternalImageSiblingImpl"* (%"class.rx::DisplayEGL"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZN2rx10DisplayEGL26createExternalImageSiblingEPKN2gl7ContextEjPvRKN3egl12AttributeMapE to i8*), i8* bitcast (%"class.rx::EGLSyncImpl"* (%"class.rx::DisplayEGL"*, %"class.egl::AttributeMap"*)* @_ZN2rx10DisplayEGL10createSyncERKN3egl12AttributeMapE to i8*), i8* bitcast (%"class.rx::ShareGroupImpl"* (%"class.rx::DisplayGL"*)* @_ZN2rx9DisplayGL16createShareGroupEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayEGL"*, %"class.egl::Display"*)* @_ZN2rx10DisplayEGL10initializeEPN3egl7DisplayE to i8*), i8* bitcast (void (%"class.rx::DisplayEGL"*)* @_ZN2rx10DisplayEGL9terminateEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl14prepareForCallEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl13releaseThreadEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayEGL"*, %"class.egl::Display"*, %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.gl::Context"*)* @_ZN2rx10DisplayEGL11makeCurrentEPN3egl7DisplayEPNS1_7SurfaceES5_PN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::ConfigSet"*, %"class.rx::DisplayEGL"*)* @_ZN2rx10DisplayEGL15generateConfigsEv to i8*), i8* bitcast (i1 (%"class.rx::DisplayEGL"*)* @_ZN2rx10DisplayEGL14testDeviceLostEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayEGL"*, %"class.egl::Display"*)* @_ZN2rx10DisplayEGL17restoreLostDeviceEPKN3egl7DisplayE to i8*), i8* bitcast (i1 (%"class.rx::DisplayEGL"*, i64)* @_ZNK2rx10DisplayEGL19isValidNativeWindowEl to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZNK2rx11DisplayImpl20validateClientBufferEPKN3egl6ConfigEjPvRKNS1_12AttributeMapE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayEGL"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZNK2rx10DisplayEGL25validateImageClientBufferEPKN2gl7ContextEjPvRKN3egl12AttributeMapE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"*)* @_ZNK2rx11DisplayImpl14validatePixmapEPKN3egl6ConfigElRKNS1_12AttributeMapE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::DisplayGL"*)* @_ZN2rx9DisplayGL22getRendererDescriptionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::DisplayGL"*)* @_ZN2rx9DisplayGL15getVendorStringEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::DisplayGL"*)* @_ZN2rx9DisplayGL16getVersionStringEv to i8*), i8* bitcast (%"class.rx::DeviceImpl"* (%"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl12createDeviceEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayEGL"*, %"class.gl::Context"*)* @_ZN2rx10DisplayEGL10waitClientEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayEGL"*, %"class.gl::Context"*, i32)* @_ZN2rx10DisplayEGL10waitNativeEPKN2gl7ContextEi to i8*), i8* bitcast (i64 (%"class.rx::DisplayEGL"*)* @_ZNK2rx10DisplayEGL24getMaxSupportedESVersionEv to i8*), i8* bitcast (i64 (%"class.rx::DisplayGL"*)* @_ZNK2rx9DisplayGL25getMaxConformantESVersionEv to i8*), i8* bitcast (void (%"class.rx::DisplayEGL"*, void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*)* @_ZN2rx10DisplayEGL17setBlobCacheFuncsEPFvPKvlS2_lEPFlS2_lPvlE to i8*), i8* bitcast (void (%"class.rx::DisplayEGL"*, %"struct.angle::FrontendFeatures"*)* @_ZNK2rx10DisplayEGL26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE to i8*), i8* bitcast (void (%"class.rx::DisplayEGL"*, %"class.std::__1::vector.718"*)* @_ZN2rx10DisplayEGL19populateFeatureListEPNSt3__16vectorIPKN5angle7FeatureENS1_9allocatorIS6_EEEE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl15handleGPUSwitchEv to i8*), i8* bitcast (void (%"class.rx::DisplayEGL"*, %"struct.egl::DisplayExtensions"*)* @_ZNK2rx10DisplayEGL18generateExtensionsEPN3egl17DisplayExtensionsE to i8*), i8* bitcast (void (%"class.rx::DisplayEGL"*, %"struct.egl::Caps"*)* @_ZNK2rx10DisplayEGL12generateCapsEPN3egl4CapsE to i8*), i8* bitcast (%"class.rx::RendererGL"* (%"class.rx::DisplayEGL"*)* @_ZNK2rx10DisplayEGL11getRendererEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayEGL"*, %"class.gl::Context"*)* @_ZN2rx10DisplayEGL22makeCurrentSurfacelessEPN2gl7ContextE to i8*), i8* bitcast (void (%"class.rx::DisplayEGL"*, i8*)* @_ZN2rx10DisplayEGL20destroyNativeContextEPv to i8*), i8* bitcast (%"class.rx::WorkerContext"* (%"class.rx::DisplayEGL"*, %"class.std::__1::basic_string"*, i8*, %"class.std::__1::vector.191"*)* @_ZN2rx10DisplayEGL19createWorkerContextEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPvNS1_6vectorIiNS5_IiEEEE to i8*), i8* bitcast (i32 (%"class.rx::DisplayEGL"*, i32)* @_ZNK2rx10DisplayEGL14fixSurfaceTypeEi to i8*)], [4 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.rx::DisplayEGL"*)* @_ZThn8_N2rx10DisplayEGLD1Ev to i8*), i8* bitcast (void (%"class.rx::DisplayEGL"*)* @_ZThn8_N2rx10DisplayEGLD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"EGL_KHR_create_context\00", align 1
@constinit = private unnamed_addr constant [4 x %"struct.gl::Version"] [%"struct.gl::Version" { i32 3, i32 2 }, %"struct.gl::Version" { i32 3, i32 1 }, %"struct.gl::Version" { i32 3, i32 0 }, %"struct.gl::Version" { i32 2, i32 0 }], align 4
@.str.1 = private unnamed_addr constant [38 x i8] c"Unsupported requested context version\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"eglCreateContext failed\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"libEGL.so.1\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"EGL >= 1.4 is required\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"EGL_KHR_no_config_context\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"EGL_KHR_surfaceless_context\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"need \00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"EGL_EXT_create_context_robustness\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"EGL_NV_robustness_video_memory_purge\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"No matching ES Bit\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"Could not make context current.\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"OpenGL ES 2.0 is not supportable.\00", align 1
@.str.13 = private unnamed_addr constant [68 x i8] c"../../third_party/angle/src/libANGLE/renderer/gl/egl/DisplayEGL.cpp\00", align 1
@__FUNCTION__._ZN2rx10DisplayEGL9terminateEv = private unnamed_addr constant [10 x i8] c"terminate\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"eglMakeCurrent error \00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"eglTerminate error \00", align 1
@__FUNCTION__._ZN2rx10DisplayEGL13createContextERKN2gl5StateEPNS1_8ErrorSetEPKN3egl6ConfigEPKNS1_7ContextERKNS7_12AttributeMapE = private unnamed_addr constant [14 x i8] c"createContext\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"Failed to create a shared renderer: \00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"EGL_EXT_pixel_format_float\00", align 1
@__FUNCTION__._ZN2rx10DisplayEGL15generateConfigsEv = private unnamed_addr constant [16 x i8] c"generateConfigs\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"RGBA(\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c") not handled\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"eglMakeCurrent failed\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"EGL_ANDROID_presentation_time\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"EGL_KHR_image\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"EGL_KHR_image_base\00", align 1
@.str.25 = private unnamed_addr constant [28 x i8] c"EGL_KHR_gl_texture_2D_image\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"EGL_KHR_gl_texture_cubemap_image\00", align 1
@.str.27 = private unnamed_addr constant [28 x i8] c"EGL_KHR_gl_texture_3D_image\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"EGL_KHR_gl_renderbuffer_image\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"EGL_KHR_gl_colorspace\00", align 1
@.str.30 = private unnamed_addr constant [40 x i8] c"EGL_EXT_gl_colorspace_display_p3_linear\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"EGL_EXT_gl_colorspace_display_p3\00", align 1
@.str.32 = private unnamed_addr constant [28 x i8] c"EGL_EXT_gl_colorspace_scrgb\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"EGL_EXT_gl_colorspace_scrgb_linear\00", align 1
@.str.34 = private unnamed_addr constant [45 x i8] c"EGL_EXT_gl_colorspace_display_p3_passthrough\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"EGL_EXT_image_gl_colorspace\00", align 1
@.str.36 = private unnamed_addr constant [32 x i8] c"EGL_ANDROID_image_native_buffer\00", align 1
@.str.37 = private unnamed_addr constant [33 x i8] c"EGL_ANDROID_get_frame_timestamps\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"EGL_KHR_fence_sync\00", align 1
@.str.39 = private unnamed_addr constant [18 x i8] c"EGL_KHR_wait_sync\00", align 1
@.str.40 = private unnamed_addr constant [37 x i8] c"EGL_ANDROID_get_native_client_buffer\00", align 1
@.str.41 = private unnamed_addr constant [40 x i8] c"EGL_ANDROID_create_native_client_buffer\00", align 1
@.str.42 = private unnamed_addr constant [30 x i8] c"EGL_ANDROID_native_fence_sync\00", align 1
@.str.43 = private unnamed_addr constant [31 x i8] c"EGL_ANDROID_framebuffer_target\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"EGL_EXT_image_dma_buf_import\00", align 1
@.str.45 = private unnamed_addr constant [39 x i8] c"EGL_EXT_image_dma_buf_import_modifiers\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"EGL_EXT_buffer_age\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c"EGL_ANDROID_blob_cache\00", align 1
@.str.48 = private unnamed_addr constant [28 x i8] c"eglMakeCurrent failed with \00", align 1
@.str.49 = private unnamed_addr constant [34 x i8] c"Unable to create the EGL context.\00", align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVN12_GLOBAL__N_116WorkerContextEGLE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::WorkerContextEGL"*)* @_ZN12_GLOBAL__N_116WorkerContextEGLD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::WorkerContextEGL"*)* @_ZN12_GLOBAL__N_116WorkerContextEGLD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::WorkerContextEGL"*)* @_ZN12_GLOBAL__N_116WorkerContextEGL11makeCurrentEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::WorkerContextEGL"*)* @_ZN12_GLOBAL__N_116WorkerContextEGL13unmakeCurrentEv to i8*)] }, align 8
@__FUNCTION__._ZN12_GLOBAL__N_116WorkerContextEGL11makeCurrentEv = private unnamed_addr constant [12 x i8] c"makeCurrent\00", align 1
@.str.50 = private unnamed_addr constant [40 x i8] c"Unable to make the EGL context current.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN2rx10DisplayEGLC1ERKN3egl12DisplayStateE = hidden unnamed_addr alias void (%"class.rx::DisplayEGL"*, %"struct.egl::DisplayState"*), void (%"class.rx::DisplayEGL"*, %"struct.egl::DisplayState"*)* @_ZN2rx10DisplayEGLC2ERKN3egl12DisplayStateE
@_ZN2rx10DisplayEGLD1Ev = hidden unnamed_addr alias void (%"class.rx::DisplayEGL"*), void (%"class.rx::DisplayEGL"*)* @_ZN2rx10DisplayEGLD2Ev

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGLC2ERKN3egl12DisplayStateE(%"class.rx::DisplayEGL"*, %"struct.egl::DisplayState"* dereferenceable(96)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 0
  tail call void @_ZN2rx9DisplayGLC2ERKN3egl12DisplayStateE(%"class.rx::DisplayGL"* %3, %"struct.egl::DisplayState"* dereferenceable(96) %1) #17
  %4 = bitcast %"class.rx::DisplayEGL"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [45 x i8*], [4 x i8*] }, { [45 x i8*], [4 x i8*] }* @_ZTVN2rx10DisplayEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [45 x i8*], [4 x i8*] }, { [45 x i8*], [4 x i8*] }* @_ZTVN2rx10DisplayEGLE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::shared_ptr.744"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  tail call void @_ZN3egl12AttributeMapC1Ev(%"class.egl::AttributeMap"* %6) #17
  %8 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 5
  %9 = bitcast %"class.std::__1::vector.191"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #17
  %10 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %10, align 8
  %11 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %12 = bitcast %"union.absl::container_internal::map_slot_type.776"** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #17
  %13 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node_base"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 8
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 9
  store i8 0, i8* %18, align 1
  ret void
}

declare void @_ZN2rx9DisplayGLC2ERKN3egl12DisplayStateE(%"class.rx::DisplayGL"*, %"struct.egl::DisplayState"* dereferenceable(96)) unnamed_addr #2

declare void @_ZN3egl12AttributeMapC1Ev(%"class.egl::AttributeMap"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGLD2Ev(%"class.rx::DisplayEGL"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::DisplayEGL"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [45 x i8*], [4 x i8*] }, { [45 x i8*], [4 x i8*] }* @_ZTVN2rx10DisplayEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [45 x i8*], [4 x i8*] }, { [45 x i8*], [4 x i8*] }* @_ZTVN2rx10DisplayEGLE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.845"**
  %6 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.783"* %3, %"class.std::__1::__tree_node.845"* %6) #17
  %7 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #19
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %12, align 8
  %14 = bitcast %"union.absl::container_internal::map_slot_type.776"** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #17
  br label %15

15:                                               ; preds = %1, %10
  %16 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = icmp eq i32* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = ptrtoint i32* %17 to i64
  %21 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 5, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast i32* %17 to i8*
  tail call void @_ZdlPv(i8* %23) #19
  br label %24

24:                                               ; preds = %15, %19
  %25 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 4
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %25) #17
  %26 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 1, i32 1
  %27 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %26, align 8
  %28 = icmp eq %"class.std::__1::__shared_weak_count"* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0, i32 1
  %31 = atomicrmw add i64* %30, i64 -1 acq_rel
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0
  %35 = bitcast %"class.std::__1::__shared_weak_count"* %27 to void (%"class.std::__1::__shared_count"*)***
  %36 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %36, i64 2
  %38 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %37, align 8
  tail call void %38(%"class.std::__1::__shared_count"* %34) #17
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %27) #17
  br label %39

39:                                               ; preds = %24, %29, %33
  %40 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 0
  tail call void @_ZN2rx9DisplayGLD2Ev(%"class.rx::DisplayGL"* %40) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2rx9DisplayGLD2Ev(%"class.rx::DisplayGL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2rx10DisplayEGLD1Ev(%"class.rx::DisplayEGL"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 -1, i32 8
  %3 = bitcast i8* %2 to %"class.rx::DisplayEGL"*
  tail call void @_ZN2rx10DisplayEGLD2Ev(%"class.rx::DisplayEGL"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGLD0Ev(%"class.rx::DisplayEGL"*) unnamed_addr #1 align 2 {
  tail call void @_ZN2rx10DisplayEGLD2Ev(%"class.rx::DisplayEGL"* %0) #17
  %2 = bitcast %"class.rx::DisplayEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2rx10DisplayEGLD0Ev(%"class.rx::DisplayEGL"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 -1, i32 8
  %3 = bitcast i8* %2 to %"class.rx::DisplayEGL"*
  tail call void @_ZN2rx10DisplayEGLD2Ev(%"class.rx::DisplayEGL"* %3) #17
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::ImageImpl"* @_ZN2rx10DisplayEGL11createImageERKN3egl10ImageStateEPKN2gl7ContextEjRKNS1_12AttributeMapE(%"class.rx::DisplayEGL"* nocapture readonly, %"struct.egl::ImageState"* dereferenceable(104), %"class.gl::Context"*, i32, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %6 = tail call i8* @_Znwm(i64 56) #19
  %7 = bitcast i8* %6 to %"class.rx::ImageEGL"*
  %8 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 2
  %9 = bitcast %"class.rx::FunctionsEGLDL"** %8 to %"class.rx::FunctionsEGL"**
  %10 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %9, align 8
  tail call void @_ZN2rx8ImageEGLC1ERKN3egl10ImageStateEPKN2gl7ContextEjRKNS1_12AttributeMapEPKNS_12FunctionsEGLE(%"class.rx::ImageEGL"* nonnull %7, %"struct.egl::ImageState"* dereferenceable(104) %1, %"class.gl::Context"* %2, i32 %3, %"class.egl::AttributeMap"* dereferenceable(24) %4, %"class.rx::FunctionsEGL"* %10) #17
  %11 = bitcast i8* %6 to %"class.rx::ImageImpl"*
  ret %"class.rx::ImageImpl"* %11
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN2rx8ImageEGLC1ERKN3egl10ImageStateEPKN2gl7ContextEjRKNS1_12AttributeMapEPKNS_12FunctionsEGLE(%"class.rx::ImageEGL"*, %"struct.egl::ImageState"* dereferenceable(104), %"class.gl::Context"*, i32, %"class.egl::AttributeMap"* dereferenceable(24), %"class.rx::FunctionsEGL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::EGLSyncImpl"* @_ZN2rx10DisplayEGL10createSyncERKN3egl12AttributeMapE(%"class.rx::DisplayEGL"* nocapture readonly, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #19
  %4 = bitcast i8* %3 to %"class.rx::SyncEGL"*
  %5 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 2
  %6 = bitcast %"class.rx::FunctionsEGLDL"** %5 to %"class.rx::FunctionsEGL"**
  %7 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %6, align 8
  tail call void @_ZN2rx7SyncEGLC1ERKN3egl12AttributeMapEPKNS_12FunctionsEGLE(%"class.rx::SyncEGL"* nonnull %4, %"class.egl::AttributeMap"* dereferenceable(24) %1, %"class.rx::FunctionsEGL"* %7) #17
  %8 = bitcast i8* %3 to %"class.rx::EGLSyncImpl"*
  ret %"class.rx::EGLSyncImpl"* %8
}

declare void @_ZN2rx7SyncEGLC1ERKN3egl12AttributeMapEPKNS_12FunctionsEGLE(%"class.rx::SyncEGL"*, %"class.egl::AttributeMap"* dereferenceable(24), %"class.rx::FunctionsEGL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx10DisplayEGL17initializeContextEPvRKN3egl12AttributeMapEPS1_PNSt3__16vectorIiNS7_9allocatorIiEEEE(%"class.egl::Error"* noalias sret, %"class.rx::DisplayEGL"* nocapture readonly, i8*, %"class.egl::AttributeMap"* dereferenceable(24), i8** nocapture, %"class.std::__1::vector.191"*) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector.796", align 8
  %9 = alloca %"class.std::__1::vector.191", align 8
  %10 = alloca [4 x %"struct.gl::Version"], align 16
  %11 = alloca %"class.std::__1::vector.191", align 8
  %12 = alloca %"class.angle::ErrorStreamBase", align 8
  %13 = alloca %"class.std::__1::vector.191", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 2
  %16 = bitcast %"class.rx::FunctionsEGLDL"** %15 to %"class.rx::FunctionsEGL"**
  %17 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %16, align 8
  %18 = getelementptr inbounds %"class.rx::FunctionsEGL", %"class.rx::FunctionsEGL"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.rx::FunctionsEGL", %"class.rx::FunctionsEGL"* %17, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = tail call i32 @_ZNK3egl12AttributeMap8getAsIntEli(%"class.egl::AttributeMap"* %3, i64 12804, i32 -1) #17
  %23 = tail call i32 @_ZNK3egl12AttributeMap8getAsIntEli(%"class.egl::AttributeMap"* %3, i64 12805, i32 -1) #17
  %24 = icmp ne i32 %22, -1
  %25 = icmp ne i32 %23, -1
  %26 = and i1 %24, %25
  %27 = bitcast %"class.std::__1::vector.796"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17
  %28 = getelementptr inbounds %"class.std::__1::vector.796", %"class.std::__1::vector.796"* %8, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::vector.796", %"class.std::__1::vector.796"* %8, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::vector.796", %"class.std::__1::vector.796"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #17
  %31 = icmp eq i32 %19, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %6
  %33 = icmp ne i32 %19, 1
  %34 = icmp ugt i32 %21, 4
  %35 = or i1 %33, %34
  br i1 %35, label %39, label %36

36:                                               ; preds = %32, %6
  %37 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %16, align 8
  %38 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %37, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)) #17
  br i1 %38, label %39, label %123

39:                                               ; preds = %32, %36
  br i1 %26, label %40, label %64

40:                                               ; preds = %39
  %41 = bitcast %"class.std::__1::vector.191"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #17
  %42 = tail call i8* @_Znwm(i64 16) #19
  %43 = bitcast i8* %42 to i32*
  %44 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %9, i64 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::vector.191"* %9 to i8**
  store i8* %42, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %42, i64 16
  %47 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast i32** %47 to i8**
  store i8* %46, i8** %48, align 8
  %49 = bitcast i32** %44 to i64*
  store i32 12440, i32* %43, align 4
  %50 = getelementptr inbounds i8, i8* %42, i64 4
  %51 = bitcast i8* %50 to i32*
  store i32 %22, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %42, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 12539, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %42, i64 12
  %55 = bitcast i8* %54 to i32*
  store i32 %23, i32* %55, align 4
  %56 = ptrtoint i8* %46 to i64
  store i64 %56, i64* %49, align 8
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.796"* nonnull %8, %"class.std::__1::vector.191"* nonnull dereferenceable(24) %9) #17
  %57 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %9, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %40
  %61 = bitcast i32* %58 to i8*
  %62 = ptrtoint i32* %58 to i64
  store i64 %62, i64* %49, align 8
  call void @_ZdlPv(i8* %61) #19
  br label %63

63:                                               ; preds = %40, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #17
  br label %210

64:                                               ; preds = %39
  %65 = bitcast [4 x %"struct.gl::Version"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #17
  %66 = getelementptr inbounds [4 x %"struct.gl::Version"], [4 x %"struct.gl::Version"]* %10, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %65, i8* align 4 bitcast ([4 x %"struct.gl::Version"]* @constinit to i8*), i64 32, i1 false)
  %67 = getelementptr inbounds [4 x %"struct.gl::Version"], [4 x %"struct.gl::Version"]* %10, i64 0, i64 4
  %68 = bitcast %"class.std::__1::vector.191"* %11 to i8*
  %69 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %11, i64 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::vector.191"* %11 to i8**
  %71 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast i32** %71 to i8**
  %73 = bitcast i32** %69 to i64*
  %74 = bitcast %"class.std::__1::vector.191"* %11 to i64*
  %75 = bitcast i32** %71 to i64*
  %76 = bitcast %"class.std::__1::vector.191"** %29 to i64*
  %77 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %11, i64 0, i32 0, i32 0
  br label %79

78:                                               ; preds = %116
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #17
  br label %210

79:                                               ; preds = %119, %64
  %80 = phi %"class.std::__1::vector.191"* [ null, %64 ], [ %122, %119 ]
  %81 = phi i8* [ null, %64 ], [ %121, %119 ]
  %82 = phi %"class.std::__1::vector.191"* [ null, %64 ], [ %120, %119 ]
  %83 = phi %"struct.gl::Version"* [ %66, %64 ], [ %117, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #17
  %84 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %83, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = call i8* @_Znwm(i64 16) #19
  %89 = bitcast i8* %88 to i32*
  store i8* %88, i8** %70, align 8
  %90 = getelementptr inbounds i8, i8* %88, i64 16
  store i8* %90, i8** %72, align 8
  store i32 12440, i32* %89, align 4
  %91 = getelementptr inbounds i8, i8* %88, i64 4
  %92 = bitcast i8* %91 to i32*
  store i32 %85, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %88, i64 8
  %94 = bitcast i8* %93 to i32*
  store i32 12539, i32* %94, align 4
  %95 = getelementptr inbounds i8, i8* %88, i64 12
  %96 = bitcast i8* %95 to i32*
  store i32 %87, i32* %96, align 4
  %97 = ptrtoint i8* %90 to i64
  store i64 %97, i64* %73, align 8
  %98 = icmp ult %"class.std::__1::vector.191"* %82, %80
  br i1 %98, label %99, label %110

99:                                               ; preds = %79
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #17
  %100 = load i64, i64* %74, align 8
  %101 = bitcast %"class.std::__1::vector.191"* %82 to i64*
  store i64 %100, i64* %101, align 8
  %102 = load i64, i64* %73, align 8
  %103 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %82, i64 0, i32 0, i32 1
  %104 = bitcast i32** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = load i64, i64* %75, align 8
  %106 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %82, i64 0, i32 0, i32 2, i32 0, i32 0
  %107 = bitcast i32** %106 to i64*
  store i64 %105, i64* %107, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 24, i1 false) #17
  %108 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %82, i64 1
  %109 = ptrtoint %"class.std::__1::vector.191"* %108 to i64
  store i64 %109, i64* %76, align 8
  br label %116

110:                                              ; preds = %79
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.796"* nonnull %8, %"class.std::__1::vector.191"* nonnull dereferenceable(24) %11) #17
  %111 = load i32*, i32** %77, align 8
  %112 = icmp eq i32* %111, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %110
  %114 = bitcast i32* %111 to i8*
  %115 = ptrtoint i32* %111 to i64
  store i64 %115, i64* %73, align 8
  call void @_ZdlPv(i8* %114) #19
  br label %116

116:                                              ; preds = %99, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #17
  %117 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %83, i64 1
  %118 = icmp eq %"struct.gl::Version"* %117, %67
  br i1 %118, label %78, label %119

119:                                              ; preds = %116
  %120 = load %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"** %29, align 8
  %121 = bitcast %"class.std::__1::vector.191"* %120 to i8*
  %122 = load %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"** %30, align 8
  br label %79

123:                                              ; preds = %36
  br i1 %26, label %124, label %192

124:                                              ; preds = %123
  %125 = icmp ne i32 %22, 2
  %126 = icmp ne i32 %23, 0
  %127 = or i1 %125, %126
  br i1 %127, label %128, label %192

128:                                              ; preds = %124
  %129 = bitcast %"class.angle::ErrorStreamBase"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %129) #17
  %130 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %12, i64 0, i32 0
  store i32 12292, i32* %130, align 8
  %131 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %12, i64 0, i32 1
  %132 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %12, i64 0, i32 1, i32 2, i32 0, i32 0
  %133 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %131, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %132, align 8
  %134 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %12, i64 0, i32 1, i32 1
  %135 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %134, i64 0, i32 0
  %136 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %137 = bitcast %"class.std::__1::basic_ostringstream"* %131 to i64*
  store i64 %136, i64* %137, align 8
  %138 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %139 = bitcast %"class.std::__1::basic_ostringstream"* %131 to i8**
  %140 = inttoptr i64 %136 to i8*
  %141 = getelementptr i8, i8* %140, i64 -24
  %142 = bitcast i8* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.std::__1::basic_ostringstream"* %131 to i8*
  %145 = getelementptr inbounds i8, i8* %144, i64 %143
  %146 = bitcast i8* %145 to i64*
  store i64 %138, i64* %146, align 8
  %147 = load i8*, i8** %139, align 8
  %148 = getelementptr i8, i8* %147, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds i8, i8* %144, i64 %150
  %152 = bitcast i8* %151 to %"class.std::__1::ios_base"*
  %153 = bitcast %"class.std::__1::basic_stringbuf"* %134 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %152, i8* %153) #17
  %154 = getelementptr inbounds i8, i8* %151, i64 136
  %155 = bitcast i8* %154 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %155, align 8
  %156 = getelementptr inbounds i8, i8* %151, i64 144
  %157 = bitcast i8* %156 to i32*
  store i32 -1, i32* %157, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %133, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %132, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %135) #17
  %158 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %134, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %159 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %12, i64 0, i32 1, i32 1, i32 1
  %160 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %12, i64 0, i32 1, i32 1, i32 3
  %161 = bitcast %"class.std::__1::basic_string"* %159 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 32, i1 false) #17
  store i32 16, i32* %160, align 8
  %162 = bitcast %"class.std::__1::basic_ostringstream"* %131 to %"class.std::__1::basic_ostream"*
  %163 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %162, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37) #17
  %164 = load i32, i32* %130, align 8, !noalias !2
  %165 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #17, !noalias !2
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %134) #17, !noalias !2
  call void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 12292, i32 %164, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #17
  %166 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = load i8, i8* %167, align 1, !noalias !2
  %169 = icmp slt i8 %168, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %128
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i8*, i8** %171, align 8, !noalias !2
  call void @_ZdlPv(i8* %172) #19
  br label %173

173:                                              ; preds = %128, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #17, !noalias !2
  %174 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %174, i64* %137, align 8
  %175 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %176 = inttoptr i64 %174 to i8*
  %177 = getelementptr i8, i8* %176, i64 -24
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds i8, i8* %144, i64 %179
  %181 = bitcast i8* %180 to i64*
  store i64 %175, i64* %181, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %182 = bitcast %"class.std::__1::basic_string"* %159 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %173
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %188) #19
  br label %189

189:                                              ; preds = %173, %186
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %135) #17
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %162, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %190 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %12, i64 0, i32 1, i32 2
  %191 = bitcast %"class.std::__1::basic_ios.base"* %190 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %191) #17
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %129) #17
  br label %593

192:                                              ; preds = %124, %123
  %193 = bitcast %"class.std::__1::vector.191"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #17
  %194 = tail call i8* @_Znwm(i64 8) #19
  %195 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %13, i64 0, i32 0, i32 1
  %196 = bitcast %"class.std::__1::vector.191"* %13 to i8**
  store i8* %194, i8** %196, align 8
  %197 = getelementptr inbounds i8, i8* %194, i64 8
  %198 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %199 = bitcast i32** %198 to i8**
  store i8* %197, i8** %199, align 8
  %200 = bitcast i32** %195 to i64*
  %201 = bitcast i8* %194 to i64*
  store i64 8589947032, i64* %201, align 4
  %202 = ptrtoint i8* %197 to i64
  store i64 %202, i64* %200, align 8
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.796"* nonnull %8, %"class.std::__1::vector.191"* nonnull dereferenceable(24) %13) #17
  %203 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %13, i64 0, i32 0, i32 0
  %204 = load i32*, i32** %203, align 8
  %205 = icmp eq i32* %204, null
  br i1 %205, label %209, label %206

206:                                              ; preds = %192
  %207 = bitcast i32* %204 to i8*
  %208 = ptrtoint i32* %204 to i64
  store i64 %208, i64* %200, align 8
  call void @_ZdlPv(i8* %207) #19
  br label %209

209:                                              ; preds = %192, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #17
  br label %210

210:                                              ; preds = %63, %78, %209
  %211 = load %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"** %28, align 8
  %212 = load %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"** %29, align 8
  %213 = icmp eq %"class.std::__1::vector.191"* %211, %212
  br i1 %213, label %577, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 8
  %216 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 9
  %217 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 3
  br label %218

218:                                              ; preds = %214, %569
  %219 = phi %"class.std::__1::vector.191"* [ %211, %214 ], [ %570, %569 ]
  %220 = load i8, i8* %215, align 8, !range !5
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %489, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 1
  %224 = load i32*, i32** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 2, i32 0, i32 0
  %226 = load i32*, i32** %225, align 8
  %227 = icmp ult i32* %224, %226
  %228 = ptrtoint i32* %226 to i64
  br i1 %227, label %229, label %233

229:                                              ; preds = %222
  store i32 12733, i32* %224, align 4
  %230 = getelementptr inbounds i32, i32* %224, i64 1
  %231 = ptrtoint i32* %230 to i64
  %232 = bitcast i32** %223 to i64*
  store i64 %231, i64* %232, align 8
  br label %290

233:                                              ; preds = %222
  %234 = ptrtoint i32* %224 to i64
  %235 = bitcast i32** %223 to i64*
  %236 = bitcast %"class.std::__1::vector.191"* %219 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = sub i64 %234, %237
  %239 = ashr exact i64 %238, 2
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 4611686018427387903
  br i1 %241, label %242, label %244

242:                                              ; preds = %233
  %243 = bitcast %"class.std::__1::vector.191"* %219 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #20
  unreachable

244:                                              ; preds = %233
  %245 = bitcast i32** %225 to i64*
  %246 = sub i64 %228, %237
  %247 = ashr exact i64 %246, 2
  %248 = icmp ult i64 %247, 2305843009213693951
  br i1 %248, label %249, label %257

249:                                              ; preds = %244
  %250 = ashr exact i64 %246, 1
  %251 = icmp ult i64 %250, %240
  %252 = select i1 %251, i64 %240, i64 %250
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %262, label %254

254:                                              ; preds = %249
  %255 = icmp ugt i64 %252, 4611686018427387903
  br i1 %255, label %256, label %257

256:                                              ; preds = %254
  call void @abort() #20
  unreachable

257:                                              ; preds = %254, %244
  %258 = phi i64 [ %252, %254 ], [ 4611686018427387903, %244 ]
  %259 = shl i64 %258, 2
  %260 = call i8* @_Znwm(i64 %259) #19
  %261 = bitcast i8* %260 to i32*
  br label %262

262:                                              ; preds = %257, %249
  %263 = phi i64 [ %258, %257 ], [ 0, %249 ]
  %264 = phi i32* [ %261, %257 ], [ null, %249 ]
  %265 = getelementptr inbounds i32, i32* %264, i64 %239
  %266 = getelementptr inbounds i32, i32* %264, i64 %263
  %267 = ptrtoint i32* %266 to i64
  store i32 12733, i32* %265, align 4
  %268 = getelementptr inbounds i32, i32* %265, i64 1
  %269 = ptrtoint i32* %268 to i64
  %270 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 0
  %271 = load i32*, i32** %270, align 8
  %272 = load i64, i64* %235, align 8
  %273 = ptrtoint i32* %271 to i64
  %274 = sub i64 %272, %273
  %275 = ashr exact i64 %274, 2
  %276 = sub nsw i64 0, %275
  %277 = getelementptr inbounds i32, i32* %265, i64 %276
  %278 = ptrtoint i32* %277 to i64
  %279 = icmp sgt i64 %274, 0
  br i1 %279, label %280, label %284

280:                                              ; preds = %262
  %281 = bitcast i32* %277 to i8*
  %282 = bitcast i32* %271 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %281, i8* align 4 %282, i64 %274, i1 false) #17
  %283 = load i32*, i32** %270, align 8
  br label %284

284:                                              ; preds = %280, %262
  %285 = phi i32* [ %271, %262 ], [ %283, %280 ]
  store i64 %278, i64* %236, align 8
  store i64 %269, i64* %235, align 8
  store i64 %267, i64* %245, align 8
  %286 = icmp eq i32* %285, null
  br i1 %286, label %290, label %287

287:                                              ; preds = %284
  %288 = bitcast i32* %285 to i8*
  call void @_ZdlPv(i8* %288) #19
  %289 = load i32*, i32** %223, align 8
  br label %290

290:                                              ; preds = %229, %284, %287
  %291 = phi i32* [ %230, %229 ], [ %268, %284 ], [ %289, %287 ]
  %292 = load i32*, i32** %225, align 8
  %293 = icmp ult i32* %291, %292
  %294 = ptrtoint i32* %292 to i64
  br i1 %293, label %295, label %299

295:                                              ; preds = %290
  store i32 12735, i32* %291, align 4
  %296 = getelementptr inbounds i32, i32* %291, i64 1
  %297 = ptrtoint i32* %296 to i64
  %298 = bitcast i32** %223 to i64*
  store i64 %297, i64* %298, align 8
  br label %355

299:                                              ; preds = %290
  %300 = ptrtoint i32* %291 to i64
  %301 = bitcast i32** %223 to i64*
  %302 = bitcast %"class.std::__1::vector.191"* %219 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = sub i64 %300, %303
  %305 = ashr exact i64 %304, 2
  %306 = add nsw i64 %305, 1
  %307 = icmp ugt i64 %306, 4611686018427387903
  br i1 %307, label %308, label %310

308:                                              ; preds = %299
  %309 = bitcast %"class.std::__1::vector.191"* %219 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %309) #20
  unreachable

310:                                              ; preds = %299
  %311 = bitcast i32** %225 to i64*
  %312 = sub i64 %294, %303
  %313 = ashr exact i64 %312, 2
  %314 = icmp ult i64 %313, 2305843009213693951
  br i1 %314, label %315, label %323

315:                                              ; preds = %310
  %316 = ashr exact i64 %312, 1
  %317 = icmp ult i64 %316, %306
  %318 = select i1 %317, i64 %306, i64 %316
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %328, label %320

320:                                              ; preds = %315
  %321 = icmp ugt i64 %318, 4611686018427387903
  br i1 %321, label %322, label %323

322:                                              ; preds = %320
  call void @abort() #20
  unreachable

323:                                              ; preds = %320, %310
  %324 = phi i64 [ %318, %320 ], [ 4611686018427387903, %310 ]
  %325 = shl i64 %324, 2
  %326 = call i8* @_Znwm(i64 %325) #19
  %327 = bitcast i8* %326 to i32*
  br label %328

328:                                              ; preds = %323, %315
  %329 = phi i64 [ %324, %323 ], [ 0, %315 ]
  %330 = phi i32* [ %327, %323 ], [ null, %315 ]
  %331 = getelementptr inbounds i32, i32* %330, i64 %305
  %332 = getelementptr inbounds i32, i32* %330, i64 %329
  %333 = ptrtoint i32* %332 to i64
  store i32 12735, i32* %331, align 4
  %334 = getelementptr inbounds i32, i32* %331, i64 1
  %335 = ptrtoint i32* %334 to i64
  %336 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 0
  %337 = load i32*, i32** %336, align 8
  %338 = load i64, i64* %301, align 8
  %339 = ptrtoint i32* %337 to i64
  %340 = sub i64 %338, %339
  %341 = ashr exact i64 %340, 2
  %342 = sub nsw i64 0, %341
  %343 = getelementptr inbounds i32, i32* %331, i64 %342
  %344 = ptrtoint i32* %343 to i64
  %345 = icmp sgt i64 %340, 0
  br i1 %345, label %346, label %350

346:                                              ; preds = %328
  %347 = bitcast i32* %343 to i8*
  %348 = bitcast i32* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %347, i8* align 4 %348, i64 %340, i1 false) #17
  %349 = load i32*, i32** %336, align 8
  br label %350

350:                                              ; preds = %346, %328
  %351 = phi i32* [ %337, %328 ], [ %349, %346 ]
  store i64 %344, i64* %302, align 8
  store i64 %335, i64* %301, align 8
  store i64 %333, i64* %311, align 8
  %352 = icmp eq i32* %351, null
  br i1 %352, label %355, label %353

353:                                              ; preds = %350
  %354 = bitcast i32* %351 to i8*
  call void @_ZdlPv(i8* %354) #19
  br label %355

355:                                              ; preds = %295, %350, %353
  %356 = load i8, i8* %216, align 1, !range !5
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %489, label %358

358:                                              ; preds = %355
  %359 = load i32*, i32** %223, align 8
  %360 = load i32*, i32** %225, align 8
  %361 = icmp ult i32* %359, %360
  %362 = ptrtoint i32* %360 to i64
  br i1 %361, label %363, label %367

363:                                              ; preds = %358
  store i32 13132, i32* %359, align 4
  %364 = getelementptr inbounds i32, i32* %359, i64 1
  %365 = ptrtoint i32* %364 to i64
  %366 = bitcast i32** %223 to i64*
  store i64 %365, i64* %366, align 8
  br label %424

367:                                              ; preds = %358
  %368 = ptrtoint i32* %359 to i64
  %369 = bitcast i32** %223 to i64*
  %370 = bitcast %"class.std::__1::vector.191"* %219 to i64*
  %371 = load i64, i64* %370, align 8
  %372 = sub i64 %368, %371
  %373 = ashr exact i64 %372, 2
  %374 = add nsw i64 %373, 1
  %375 = icmp ugt i64 %374, 4611686018427387903
  br i1 %375, label %376, label %378

376:                                              ; preds = %367
  %377 = bitcast %"class.std::__1::vector.191"* %219 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %377) #20
  unreachable

378:                                              ; preds = %367
  %379 = bitcast i32** %225 to i64*
  %380 = sub i64 %362, %371
  %381 = ashr exact i64 %380, 2
  %382 = icmp ult i64 %381, 2305843009213693951
  br i1 %382, label %383, label %391

383:                                              ; preds = %378
  %384 = ashr exact i64 %380, 1
  %385 = icmp ult i64 %384, %374
  %386 = select i1 %385, i64 %374, i64 %384
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %396, label %388

388:                                              ; preds = %383
  %389 = icmp ugt i64 %386, 4611686018427387903
  br i1 %389, label %390, label %391

390:                                              ; preds = %388
  call void @abort() #20
  unreachable

391:                                              ; preds = %388, %378
  %392 = phi i64 [ %386, %388 ], [ 4611686018427387903, %378 ]
  %393 = shl i64 %392, 2
  %394 = call i8* @_Znwm(i64 %393) #19
  %395 = bitcast i8* %394 to i32*
  br label %396

396:                                              ; preds = %391, %383
  %397 = phi i64 [ %392, %391 ], [ 0, %383 ]
  %398 = phi i32* [ %395, %391 ], [ null, %383 ]
  %399 = getelementptr inbounds i32, i32* %398, i64 %373
  %400 = getelementptr inbounds i32, i32* %398, i64 %397
  %401 = ptrtoint i32* %400 to i64
  store i32 13132, i32* %399, align 4
  %402 = getelementptr inbounds i32, i32* %399, i64 1
  %403 = ptrtoint i32* %402 to i64
  %404 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 0
  %405 = load i32*, i32** %404, align 8
  %406 = load i64, i64* %369, align 8
  %407 = ptrtoint i32* %405 to i64
  %408 = sub i64 %406, %407
  %409 = ashr exact i64 %408, 2
  %410 = sub nsw i64 0, %409
  %411 = getelementptr inbounds i32, i32* %399, i64 %410
  %412 = ptrtoint i32* %411 to i64
  %413 = icmp sgt i64 %408, 0
  br i1 %413, label %414, label %418

414:                                              ; preds = %396
  %415 = bitcast i32* %411 to i8*
  %416 = bitcast i32* %405 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %415, i8* align 4 %416, i64 %408, i1 false) #17
  %417 = load i32*, i32** %404, align 8
  br label %418

418:                                              ; preds = %414, %396
  %419 = phi i32* [ %405, %396 ], [ %417, %414 ]
  store i64 %412, i64* %370, align 8
  store i64 %403, i64* %369, align 8
  store i64 %401, i64* %379, align 8
  %420 = icmp eq i32* %419, null
  br i1 %420, label %424, label %421

421:                                              ; preds = %418
  %422 = bitcast i32* %419 to i8*
  call void @_ZdlPv(i8* %422) #19
  %423 = load i32*, i32** %223, align 8
  br label %424

424:                                              ; preds = %363, %418, %421
  %425 = phi i32* [ %364, %363 ], [ %402, %418 ], [ %423, %421 ]
  %426 = load i32*, i32** %225, align 8
  %427 = icmp ult i32* %425, %426
  %428 = ptrtoint i32* %426 to i64
  br i1 %427, label %429, label %433

429:                                              ; preds = %424
  store i32 1, i32* %425, align 4
  %430 = getelementptr inbounds i32, i32* %425, i64 1
  %431 = ptrtoint i32* %430 to i64
  %432 = bitcast i32** %223 to i64*
  store i64 %431, i64* %432, align 8
  br label %489

433:                                              ; preds = %424
  %434 = ptrtoint i32* %425 to i64
  %435 = bitcast i32** %223 to i64*
  %436 = bitcast %"class.std::__1::vector.191"* %219 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = sub i64 %434, %437
  %439 = ashr exact i64 %438, 2
  %440 = add nsw i64 %439, 1
  %441 = icmp ugt i64 %440, 4611686018427387903
  br i1 %441, label %442, label %444

442:                                              ; preds = %433
  %443 = bitcast %"class.std::__1::vector.191"* %219 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %443) #20
  unreachable

444:                                              ; preds = %433
  %445 = bitcast i32** %225 to i64*
  %446 = sub i64 %428, %437
  %447 = ashr exact i64 %446, 2
  %448 = icmp ult i64 %447, 2305843009213693951
  br i1 %448, label %449, label %457

449:                                              ; preds = %444
  %450 = ashr exact i64 %446, 1
  %451 = icmp ult i64 %450, %440
  %452 = select i1 %451, i64 %440, i64 %450
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %462, label %454

454:                                              ; preds = %449
  %455 = icmp ugt i64 %452, 4611686018427387903
  br i1 %455, label %456, label %457

456:                                              ; preds = %454
  call void @abort() #20
  unreachable

457:                                              ; preds = %454, %444
  %458 = phi i64 [ %452, %454 ], [ 4611686018427387903, %444 ]
  %459 = shl i64 %458, 2
  %460 = call i8* @_Znwm(i64 %459) #19
  %461 = bitcast i8* %460 to i32*
  br label %462

462:                                              ; preds = %457, %449
  %463 = phi i64 [ %458, %457 ], [ 0, %449 ]
  %464 = phi i32* [ %461, %457 ], [ null, %449 ]
  %465 = getelementptr inbounds i32, i32* %464, i64 %439
  %466 = getelementptr inbounds i32, i32* %464, i64 %463
  %467 = ptrtoint i32* %466 to i64
  store i32 1, i32* %465, align 4
  %468 = getelementptr inbounds i32, i32* %465, i64 1
  %469 = ptrtoint i32* %468 to i64
  %470 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 0
  %471 = load i32*, i32** %470, align 8
  %472 = load i64, i64* %435, align 8
  %473 = ptrtoint i32* %471 to i64
  %474 = sub i64 %472, %473
  %475 = ashr exact i64 %474, 2
  %476 = sub nsw i64 0, %475
  %477 = getelementptr inbounds i32, i32* %465, i64 %476
  %478 = ptrtoint i32* %477 to i64
  %479 = icmp sgt i64 %474, 0
  br i1 %479, label %480, label %484

480:                                              ; preds = %462
  %481 = bitcast i32* %477 to i8*
  %482 = bitcast i32* %471 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %481, i8* align 4 %482, i64 %474, i1 false) #17
  %483 = load i32*, i32** %470, align 8
  br label %484

484:                                              ; preds = %480, %462
  %485 = phi i32* [ %471, %462 ], [ %483, %480 ]
  store i64 %478, i64* %436, align 8
  store i64 %469, i64* %435, align 8
  store i64 %467, i64* %445, align 8
  %486 = icmp eq i32* %485, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %484
  %488 = bitcast i32* %485 to i8*
  call void @_ZdlPv(i8* %488) #19
  br label %489

489:                                              ; preds = %487, %484, %429, %355, %218
  %490 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 1
  %491 = load i32*, i32** %490, align 8
  %492 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 2, i32 0, i32 0
  %493 = load i32*, i32** %492, align 8
  %494 = icmp ult i32* %491, %493
  %495 = ptrtoint i32* %493 to i64
  br i1 %494, label %496, label %500

496:                                              ; preds = %489
  store i32 12344, i32* %491, align 4
  %497 = getelementptr inbounds i32, i32* %491, i64 1
  %498 = ptrtoint i32* %497 to i64
  %499 = bitcast i32** %490 to i64*
  store i64 %498, i64* %499, align 8
  br label %556

500:                                              ; preds = %489
  %501 = ptrtoint i32* %491 to i64
  %502 = bitcast i32** %490 to i64*
  %503 = bitcast %"class.std::__1::vector.191"* %219 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = sub i64 %501, %504
  %506 = ashr exact i64 %505, 2
  %507 = add nsw i64 %506, 1
  %508 = icmp ugt i64 %507, 4611686018427387903
  br i1 %508, label %509, label %511

509:                                              ; preds = %500
  %510 = bitcast %"class.std::__1::vector.191"* %219 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %510) #20
  unreachable

511:                                              ; preds = %500
  %512 = bitcast i32** %492 to i64*
  %513 = sub i64 %495, %504
  %514 = ashr exact i64 %513, 2
  %515 = icmp ult i64 %514, 2305843009213693951
  br i1 %515, label %516, label %524

516:                                              ; preds = %511
  %517 = ashr exact i64 %513, 1
  %518 = icmp ult i64 %517, %507
  %519 = select i1 %518, i64 %507, i64 %517
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %529, label %521

521:                                              ; preds = %516
  %522 = icmp ugt i64 %519, 4611686018427387903
  br i1 %522, label %523, label %524

523:                                              ; preds = %521
  call void @abort() #20
  unreachable

524:                                              ; preds = %521, %511
  %525 = phi i64 [ %519, %521 ], [ 4611686018427387903, %511 ]
  %526 = shl i64 %525, 2
  %527 = call i8* @_Znwm(i64 %526) #19
  %528 = bitcast i8* %527 to i32*
  br label %529

529:                                              ; preds = %524, %516
  %530 = phi i64 [ %525, %524 ], [ 0, %516 ]
  %531 = phi i32* [ %528, %524 ], [ null, %516 ]
  %532 = getelementptr inbounds i32, i32* %531, i64 %506
  %533 = getelementptr inbounds i32, i32* %531, i64 %530
  %534 = ptrtoint i32* %533 to i64
  store i32 12344, i32* %532, align 4
  %535 = getelementptr inbounds i32, i32* %532, i64 1
  %536 = ptrtoint i32* %535 to i64
  %537 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 0
  %538 = load i32*, i32** %537, align 8
  %539 = load i64, i64* %502, align 8
  %540 = ptrtoint i32* %538 to i64
  %541 = sub i64 %539, %540
  %542 = ashr exact i64 %541, 2
  %543 = sub nsw i64 0, %542
  %544 = getelementptr inbounds i32, i32* %532, i64 %543
  %545 = ptrtoint i32* %544 to i64
  %546 = icmp sgt i64 %541, 0
  br i1 %546, label %547, label %551

547:                                              ; preds = %529
  %548 = bitcast i32* %544 to i8*
  %549 = bitcast i32* %538 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %548, i8* align 4 %549, i64 %541, i1 false) #17
  %550 = load i32*, i32** %537, align 8
  br label %551

551:                                              ; preds = %547, %529
  %552 = phi i32* [ %538, %529 ], [ %550, %547 ]
  store i64 %545, i64* %503, align 8
  store i64 %536, i64* %502, align 8
  store i64 %534, i64* %512, align 8
  %553 = icmp eq i32* %552, null
  br i1 %553, label %556, label %554

554:                                              ; preds = %551
  %555 = bitcast i32* %552 to i8*
  call void @_ZdlPv(i8* %555) #19
  br label %556

556:                                              ; preds = %496, %551, %554
  %557 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %16, align 8
  %558 = load i8*, i8** %217, align 8
  %559 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 0
  %560 = load i32*, i32** %559, align 8
  %561 = call i8* @_ZNK2rx12FunctionsEGL13createContextEPvS1_PKi(%"class.rx::FunctionsEGL"* %557, i8* %558, i8* %2, i32* %560) #17
  %562 = icmp eq i8* %561, null
  br i1 %562, label %569, label %563

563:                                              ; preds = %556
  store i8* %561, i8** %4, align 8
  %564 = icmp eq %"class.std::__1::vector.191"* %219, %5
  br i1 %564, label %572, label %565

565:                                              ; preds = %563
  %566 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 0, i32 0, i32 0
  %567 = load i32*, i32** %566, align 8
  %568 = load i32*, i32** %490, align 8
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.191"* %5, i32* %567, i32* %568) #17
  br label %572

569:                                              ; preds = %556
  %570 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %219, i64 1
  %571 = icmp eq %"class.std::__1::vector.191"* %570, %212
  br i1 %571, label %577, label %218

572:                                              ; preds = %563, %565
  %573 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %573, align 8, !alias.scope !6
  %574 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %574, align 4, !alias.scope !6
  %575 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %576 = bitcast %"class.std::__1::unique_ptr.791"* %575 to i64*
  store i64 0, i64* %576, align 8, !alias.scope !6
  br label %593

577:                                              ; preds = %569, %210
  %578 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %16, align 8
  %579 = call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %578) #17
  %580 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %580) #17
  %581 = call i8* @_Znwm(i64 32) #19
  %582 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %581, i8** %582, align 8
  %583 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %584 = bitcast i64* %583 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %584, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %581, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i64 23, i1 false) #17
  %585 = getelementptr inbounds i8, i8* %581, i64 23
  store i8 0, i8* %585, align 1
  call void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 %579, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #17
  %586 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %587 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %586, i64 0, i32 1, i32 0
  %588 = load i8, i8* %587, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %592

590:                                              ; preds = %577
  %591 = load i8*, i8** %582, align 8
  call void @_ZdlPv(i8* %591) #19
  br label %592

592:                                              ; preds = %577, %590
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %580) #17
  br label %593

593:                                              ; preds = %572, %592, %189
  %594 = load %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"** %28, align 8
  %595 = icmp eq %"class.std::__1::vector.191"* %594, null
  br i1 %595, label %618, label %596

596:                                              ; preds = %593
  %597 = bitcast %"class.std::__1::vector.191"* %594 to i8*
  %598 = load %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"** %29, align 8
  %599 = icmp eq %"class.std::__1::vector.191"* %598, %594
  br i1 %599, label %616, label %600

600:                                              ; preds = %596, %611
  %601 = phi %"class.std::__1::vector.191"* [ %602, %611 ], [ %598, %596 ]
  %602 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %601, i64 -1
  %603 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %602, i64 0, i32 0, i32 0
  %604 = load i32*, i32** %603, align 8
  %605 = icmp eq i32* %604, null
  br i1 %605, label %611, label %606

606:                                              ; preds = %600
  %607 = ptrtoint i32* %604 to i64
  %608 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %601, i64 -1, i32 0, i32 1
  %609 = bitcast i32** %608 to i64*
  store i64 %607, i64* %609, align 8
  %610 = bitcast i32* %604 to i8*
  call void @_ZdlPv(i8* %610) #19
  br label %611

611:                                              ; preds = %606, %600
  %612 = icmp eq %"class.std::__1::vector.191"* %602, %594
  br i1 %612, label %613, label %600

613:                                              ; preds = %611
  %614 = bitcast %"class.std::__1::vector.796"* %8 to i8**
  %615 = load i8*, i8** %614, align 8
  br label %616

616:                                              ; preds = %613, %596
  %617 = phi i8* [ %615, %613 ], [ %597, %596 ]
  store %"class.std::__1::vector.191"* %594, %"class.std::__1::vector.191"** %29, align 8
  call void @_ZdlPv(i8* %617) #19
  br label %618

618:                                              ; preds = %593, %616
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare i32 @_ZNK3egl12AttributeMap8getAsIntEli(%"class.egl::AttributeMap"*, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare i8* @_ZNK2rx12FunctionsEGL13createContextEPvS1_PKi(%"class.rx::FunctionsEGL"*, i8*, i8*, i32*) local_unnamed_addr #2

declare i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"*) local_unnamed_addr #2

declare void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGL10initializeEPN3egl7DisplayE(%"class.egl::Error"* noalias sret, %"class.rx::DisplayEGL"*, %"class.egl::Display"*) unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.angle::ErrorStreamBase.803", align 8
  %10 = alloca %"class.angle::ErrorStreamBase.803", align 8
  %11 = alloca %"class.angle::ErrorStreamBase.803", align 8
  %12 = alloca %"class.std::__1::vector.191", align 8
  %13 = alloca i8*, align 8
  %14 = alloca %"class.std::__1::vector.191", align 8
  %15 = alloca %"class.angle::ErrorStreamBase.803", align 8
  %16 = alloca %"class.std::__1::vector.191", align 8
  %17 = alloca %"class.angle::ErrorStreamBase.803", align 8
  %18 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %2, i64 0, i32 5
  %19 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 4
  %20 = tail call dereferenceable(24) %"class.egl::AttributeMap"* @_ZN3egl12AttributeMapaSERKS0_(%"class.egl::AttributeMap"* %19, %"class.egl::AttributeMap"* dereferenceable(24) %18) #17
  %21 = tail call i8* @_Znwm(i64 64) #19
  %22 = bitcast i8* %21 to %"class.rx::FunctionsEGLDL"*
  tail call void @_ZN2rx14FunctionsEGLDLC1Ev(%"class.rx::FunctionsEGLDL"* nonnull %22) #17
  %23 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 2
  %24 = bitcast %"class.rx::FunctionsEGLDL"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %19, i64 13440, i64 0) #17
  %26 = inttoptr i64 %25 to i8*
  %27 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %28 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 -86, i64 16, i1 false)
  %31 = load %"class.rx::FunctionsEGLDL"*, %"class.rx::FunctionsEGLDL"** %23, align 8
  %32 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %2, i64 0, i32 2, i32 5
  %33 = load i64, i64* %32, align 8
  tail call void @_ZN2rx14FunctionsEGLDL10initializeElPKcPv(%"class.egl::Error"* sret %0, %"class.rx::FunctionsEGLDL"* %31, i64 %33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8* %26) #17
  %34 = load i32, i32* %27, align 8
  %35 = icmp eq i32 %34, 12288
  br i1 %35, label %36, label %567

36:                                               ; preds = %3
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %29, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #19
  br label %47

47:                                               ; preds = %44, %39
  %48 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  tail call void @_ZdlPv(i8* %48) #19
  br label %49

49:                                               ; preds = %36, %47
  %50 = bitcast %"class.rx::FunctionsEGLDL"** %23 to %"class.rx::FunctionsEGL"**
  %51 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %50, align 8
  %52 = getelementptr inbounds %"class.rx::FunctionsEGL", %"class.rx::FunctionsEGL"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.rx::FunctionsEGL", %"class.rx::FunctionsEGL"* %51, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %53, 1
  %59 = icmp ult i32 %57, 4
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %125

61:                                               ; preds = %55, %49
  %62 = bitcast %"class.angle::ErrorStreamBase.803"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %62) #17
  %63 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %9, i64 0, i32 0
  store i32 12289, i32* %63, align 8
  %64 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %9, i64 0, i32 1
  %65 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %9, i64 0, i32 1, i32 2, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %64, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %65, align 8
  %67 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %9, i64 0, i32 1, i32 1
  %68 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %67, i64 0, i32 0
  %69 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %70 = bitcast %"class.std::__1::basic_ostringstream"* %64 to i64*
  store i64 %69, i64* %70, align 8
  %71 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %72 = bitcast %"class.std::__1::basic_ostringstream"* %64 to i8**
  %73 = inttoptr i64 %69 to i8*
  %74 = getelementptr i8, i8* %73, i64 -24
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::basic_ostringstream"* %64 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %76
  %79 = bitcast i8* %78 to i64*
  store i64 %71, i64* %79, align 8
  %80 = load i8*, i8** %72, align 8
  %81 = getelementptr i8, i8* %80, i64 -24
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds i8, i8* %77, i64 %83
  %85 = bitcast i8* %84 to %"class.std::__1::ios_base"*
  %86 = bitcast %"class.std::__1::basic_stringbuf"* %67 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %85, i8* %86) #17
  %87 = getelementptr inbounds i8, i8* %84, i64 136
  %88 = bitcast i8* %87 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %88, align 8
  %89 = getelementptr inbounds i8, i8* %84, i64 144
  %90 = bitcast i8* %89 to i32*
  store i32 -1, i32* %90, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %66, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %65, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %68) #17
  %91 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %67, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %9, i64 0, i32 1, i32 1, i32 1
  %93 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %9, i64 0, i32 1, i32 1, i32 3
  %94 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 32, i1 false) #17
  store i32 16, i32* %93, align 8
  %95 = bitcast %"class.std::__1::basic_ostringstream"* %64 to %"class.std::__1::basic_ostream"*
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %95, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i64 22) #17
  %97 = load i32, i32* %63, align 8, !noalias !11
  %98 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #17, !noalias !11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.std::__1::basic_stringbuf"* %67) #17, !noalias !11
  call void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 12289, i32 %97, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #17
  %99 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1, !noalias !11
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %61
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8, !noalias !11
  call void @_ZdlPv(i8* %105) #19
  br label %106

106:                                              ; preds = %61, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #17, !noalias !11
  %107 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %107, i64* %70, align 8
  %108 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %109 = inttoptr i64 %107 to i8*
  %110 = getelementptr i8, i8* %109, i64 -24
  %111 = bitcast i8* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds i8, i8* %77, i64 %112
  %114 = bitcast i8* %113 to i64*
  store i64 %108, i64* %114, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %115 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #19
  br label %122

122:                                              ; preds = %106, %119
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %68) #17
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %95, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %123 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %9, i64 0, i32 1, i32 2
  %124 = bitcast %"class.std::__1::basic_ios.base"* %123 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %124) #17
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %62) #17
  br label %567

125:                                              ; preds = %55
  %126 = call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %51, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #17
  br i1 %126, label %127, label %130

127:                                              ; preds = %125
  %128 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %50, align 8
  %129 = call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %128, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0)) #17
  br i1 %129, label %568, label %130

130:                                              ; preds = %127, %125
  %131 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), %125 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), %127 ]
  %132 = bitcast %"class.angle::ErrorStreamBase.803"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %132) #17
  %133 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %10, i64 0, i32 0
  store i32 12289, i32* %133, align 8
  %134 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %10, i64 0, i32 1
  %135 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %10, i64 0, i32 1, i32 2, i32 0, i32 0
  %136 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %134, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %135, align 8
  %137 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %10, i64 0, i32 1, i32 1
  %138 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %137, i64 0, i32 0
  %139 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %140 = bitcast %"class.std::__1::basic_ostringstream"* %134 to i64*
  store i64 %139, i64* %140, align 8
  %141 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %142 = bitcast %"class.std::__1::basic_ostringstream"* %134 to i8**
  %143 = inttoptr i64 %139 to i8*
  %144 = getelementptr i8, i8* %143, i64 -24
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.std::__1::basic_ostringstream"* %134 to i8*
  %148 = getelementptr inbounds i8, i8* %147, i64 %146
  %149 = bitcast i8* %148 to i64*
  store i64 %141, i64* %149, align 8
  %150 = load i8*, i8** %142, align 8
  %151 = getelementptr i8, i8* %150, i64 -24
  %152 = bitcast i8* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds i8, i8* %147, i64 %153
  %155 = bitcast i8* %154 to %"class.std::__1::ios_base"*
  %156 = bitcast %"class.std::__1::basic_stringbuf"* %137 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %155, i8* %156) #17
  %157 = getelementptr inbounds i8, i8* %154, i64 136
  %158 = bitcast i8* %157 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %158, align 8
  %159 = getelementptr inbounds i8, i8* %154, i64 144
  %160 = bitcast i8* %159 to i32*
  store i32 -1, i32* %160, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %136, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %135, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %138) #17
  %161 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %137, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %10, i64 0, i32 1, i32 1, i32 1
  %163 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %10, i64 0, i32 1, i32 1, i32 3
  %164 = bitcast %"class.std::__1::basic_string"* %162 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 32, i1 false) #17
  store i32 16, i32* %163, align 8
  %165 = bitcast %"class.std::__1::basic_ostringstream"* %134 to %"class.std::__1::basic_ostream"*
  %166 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %165, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64 5) #17
  %167 = call i64 @strlen(i8* nonnull %131) #17
  %168 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %165, i8* nonnull %131, i64 %167) #17
  %169 = load i32, i32* %133, align 8, !noalias !14
  %170 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #17, !noalias !14
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %137) #17, !noalias !14
  call void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 12289, i32 %169, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #17
  %171 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1, !noalias !14
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %130
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8, !noalias !14
  call void @_ZdlPv(i8* %177) #19
  br label %178

178:                                              ; preds = %130, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #17, !noalias !14
  %179 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %179, i64* %140, align 8
  %180 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %181 = inttoptr i64 %179 to i8*
  %182 = getelementptr i8, i8* %181, i64 -24
  %183 = bitcast i8* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds i8, i8* %147, i64 %184
  %186 = bitcast i8* %185 to i64*
  store i64 %180, i64* %186, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %187 = bitcast %"class.std::__1::basic_string"* %162 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %178
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  call void @_ZdlPv(i8* %193) #19
  br label %194

194:                                              ; preds = %178, %191
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %138) #17
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %165, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %195 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %10, i64 0, i32 1, i32 2
  %196 = bitcast %"class.std::__1::basic_ios.base"* %195 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %196) #17
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %132) #17
  br label %567

197:                                              ; preds = %568
  %198 = getelementptr inbounds %"class.rx::FunctionsEGL", %"class.rx::FunctionsEGL"* %578, i64 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %207, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.rx::FunctionsEGL", %"class.rx::FunctionsEGL"* %578, i64 0, i32 2
  %203 = load i32, i32* %202, align 4
  %204 = icmp ne i32 %199, 1
  %205 = icmp ugt i32 %203, 4
  %206 = or i1 %204, %205
  br i1 %206, label %274, label %207

207:                                              ; preds = %201, %197
  %208 = call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %578, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)) #17
  %209 = select i1 %208, i32 64, i32 4
  br label %274

210:                                              ; preds = %568
  %211 = bitcast %"class.angle::ErrorStreamBase.803"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %211) #17
  %212 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %11, i64 0, i32 0
  store i32 12289, i32* %212, align 8
  %213 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %11, i64 0, i32 1
  %214 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %11, i64 0, i32 1, i32 2, i32 0, i32 0
  %215 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %213, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %214, align 8
  %216 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %11, i64 0, i32 1, i32 1
  %217 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %216, i64 0, i32 0
  %218 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %219 = bitcast %"class.std::__1::basic_ostringstream"* %213 to i64*
  store i64 %218, i64* %219, align 8
  %220 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %221 = bitcast %"class.std::__1::basic_ostringstream"* %213 to i8**
  %222 = inttoptr i64 %218 to i8*
  %223 = getelementptr i8, i8* %222, i64 -24
  %224 = bitcast i8* %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.std::__1::basic_ostringstream"* %213 to i8*
  %227 = getelementptr inbounds i8, i8* %226, i64 %225
  %228 = bitcast i8* %227 to i64*
  store i64 %220, i64* %228, align 8
  %229 = load i8*, i8** %221, align 8
  %230 = getelementptr i8, i8* %229, i64 -24
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds i8, i8* %226, i64 %232
  %234 = bitcast i8* %233 to %"class.std::__1::ios_base"*
  %235 = bitcast %"class.std::__1::basic_stringbuf"* %216 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %234, i8* %235) #17
  %236 = getelementptr inbounds i8, i8* %233, i64 136
  %237 = bitcast i8* %236 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %237, align 8
  %238 = getelementptr inbounds i8, i8* %233, i64 144
  %239 = bitcast i8* %238 to i32*
  store i32 -1, i32* %239, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %215, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %214, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %217) #17
  %240 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %216, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %240, align 8
  %241 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %11, i64 0, i32 1, i32 1, i32 1
  %242 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %11, i64 0, i32 1, i32 1, i32 3
  %243 = bitcast %"class.std::__1::basic_string"* %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 32, i1 false) #17
  store i32 16, i32* %242, align 8
  %244 = bitcast %"class.std::__1::basic_ostringstream"* %213 to %"class.std::__1::basic_ostream"*
  %245 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %244, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i64 18) #17
  %246 = load i32, i32* %212, align 8, !noalias !17
  %247 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %247) #17, !noalias !17
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_stringbuf"* %216) #17, !noalias !17
  call void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 12289, i32 %246, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #17
  %248 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %250 = load i8, i8* %249, align 1, !noalias !17
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %210
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8, !noalias !17
  call void @_ZdlPv(i8* %254) #19
  br label %255

255:                                              ; preds = %210, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %247) #17, !noalias !17
  %256 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %256, i64* %219, align 8
  %257 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %258 = inttoptr i64 %256 to i8*
  %259 = getelementptr i8, i8* %258, i64 -24
  %260 = bitcast i8* %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds i8, i8* %226, i64 %261
  %263 = bitcast i8* %262 to i64*
  store i64 %257, i64* %263, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %240, align 8
  %264 = bitcast %"class.std::__1::basic_string"* %241 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %264, i64 0, i32 1, i32 0
  %266 = load i8, i8* %265, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %271

268:                                              ; preds = %255
  %269 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load i8*, i8** %269, align 8
  call void @_ZdlPv(i8* %270) #19
  br label %271

271:                                              ; preds = %255, %268
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %217) #17
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %244, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %272 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %11, i64 0, i32 1, i32 2
  %273 = bitcast %"class.std::__1::basic_ios.base"* %272 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %273) #17
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %211) #17
  br label %567

274:                                              ; preds = %568, %207, %201
  %275 = phi i32 [ 64, %201 ], [ %209, %207 ], [ 8, %568 ]
  %276 = bitcast %"class.std::__1::vector.191"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %276) #17
  %277 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %12, i64 0, i32 0, i32 0
  %278 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %12, i64 0, i32 0, i32 1
  %279 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %280 = call i8* @_Znwm(i64 44) #19
  %281 = bitcast i8* %280 to i32*
  %282 = bitcast %"class.std::__1::vector.191"* %12 to i8**
  store i8* %280, i8** %282, align 8
  %283 = getelementptr inbounds i8, i8* %280, i64 44
  %284 = bitcast i32** %279 to i8**
  store i8* %283, i8** %284, align 8
  %285 = bitcast i32** %278 to i64*
  %286 = bitcast i8* %280 to <4 x i32>*
  store <4 x i32> <i32 12351, i32 12430, i32 12339, i32 5>, <4 x i32>* %286, align 4
  %287 = getelementptr inbounds i8, i8* %280, i64 16
  %288 = bitcast i8* %287 to i32*
  store i32 12327, i32* %288, align 4
  %289 = getelementptr inbounds i8, i8* %280, i64 20
  %290 = bitcast i8* %289 to i32*
  store i32 12344, i32* %290, align 4
  %291 = getelementptr inbounds i8, i8* %280, i64 24
  %292 = bitcast i8* %291 to i32*
  store i32 12354, i32* %292, align 4
  %293 = getelementptr inbounds i8, i8* %280, i64 28
  %294 = bitcast i8* %293 to i32*
  store i32 %275, i32* %294, align 4
  %295 = getelementptr inbounds i8, i8* %280, i64 32
  %296 = bitcast i8* %295 to i32*
  store i32 12352, i32* %296, align 4
  %297 = getelementptr inbounds i8, i8* %280, i64 36
  %298 = bitcast i8* %297 to i32*
  store i32 %275, i32* %298, align 4
  %299 = getelementptr inbounds i8, i8* %280, i64 40
  %300 = bitcast i8* %299 to i32*
  store i32 12344, i32* %300, align 4
  %301 = ptrtoint i8* %283 to i64
  store i64 %301, i64* %285, align 8
  %302 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 5
  %303 = bitcast i8* %283 to i32*
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.191"* %302, i32* nonnull %281, i32* %303) #17
  %304 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #17
  store i8* null, i8** %13, align 8
  %305 = bitcast %"class.std::__1::vector.191"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %305) #17
  %306 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %14, i64 0, i32 0, i32 0
  %307 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %14, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %305, i8 0, i64 24, i1 false) #17
  %308 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %308, i8 -86, i64 16, i1 false)
  call void @_ZNK2rx10DisplayEGL17initializeContextEPvRKN3egl12AttributeMapEPS1_PNSt3__16vectorIiNS7_9allocatorIiEEEE(%"class.egl::Error"* sret %0, %"class.rx::DisplayEGL"* %1, i8* null, %"class.egl::AttributeMap"* dereferenceable(24) %19, i8** nonnull %13, %"class.std::__1::vector.191"* nonnull %14)
  %309 = load i32, i32* %27, align 8
  %310 = icmp eq i32 %309, 12288
  br i1 %310, label %311, label %553

311:                                              ; preds = %274
  %312 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %29, align 8
  %313 = icmp eq %"class.std::__1::basic_string"* %312, null
  br i1 %313, label %324, label %314

314:                                              ; preds = %311
  %315 = bitcast %"class.std::__1::basic_string"* %312 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %315, i64 0, i32 1, i32 0
  %317 = load i8, i8* %316, align 1
  %318 = icmp slt i8 %317, 0
  br i1 %318, label %319, label %322

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load i8*, i8** %320, align 8
  call void @_ZdlPv(i8* %321) #19
  br label %322

322:                                              ; preds = %319, %314
  %323 = bitcast %"class.std::__1::basic_string"* %312 to i8*
  call void @_ZdlPv(i8* %323) #19
  br label %324

324:                                              ; preds = %311, %322
  %325 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %50, align 8
  %326 = load i8*, i8** %13, align 8
  %327 = call i32 @_ZNK2rx12FunctionsEGL11makeCurrentEPvS1_(%"class.rx::FunctionsEGL"* %325, i8* null, i8* %326) #17
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %393

329:                                              ; preds = %324
  %330 = bitcast %"class.angle::ErrorStreamBase.803"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %330) #17
  %331 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %15, i64 0, i32 0
  store i32 12289, i32* %331, align 8
  %332 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %15, i64 0, i32 1
  %333 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %15, i64 0, i32 1, i32 2, i32 0, i32 0
  %334 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %332, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %333, align 8
  %335 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %15, i64 0, i32 1, i32 1
  %336 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %335, i64 0, i32 0
  %337 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %338 = bitcast %"class.std::__1::basic_ostringstream"* %332 to i64*
  store i64 %337, i64* %338, align 8
  %339 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %340 = bitcast %"class.std::__1::basic_ostringstream"* %332 to i8**
  %341 = inttoptr i64 %337 to i8*
  %342 = getelementptr i8, i8* %341, i64 -24
  %343 = bitcast i8* %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = bitcast %"class.std::__1::basic_ostringstream"* %332 to i8*
  %346 = getelementptr inbounds i8, i8* %345, i64 %344
  %347 = bitcast i8* %346 to i64*
  store i64 %339, i64* %347, align 8
  %348 = load i8*, i8** %340, align 8
  %349 = getelementptr i8, i8* %348, i64 -24
  %350 = bitcast i8* %349 to i64*
  %351 = load i64, i64* %350, align 8
  %352 = getelementptr inbounds i8, i8* %345, i64 %351
  %353 = bitcast i8* %352 to %"class.std::__1::ios_base"*
  %354 = bitcast %"class.std::__1::basic_stringbuf"* %335 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %353, i8* %354) #17
  %355 = getelementptr inbounds i8, i8* %352, i64 136
  %356 = bitcast i8* %355 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %356, align 8
  %357 = getelementptr inbounds i8, i8* %352, i64 144
  %358 = bitcast i8* %357 to i32*
  store i32 -1, i32* %358, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %334, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %333, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %336) #17
  %359 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %335, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %359, align 8
  %360 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %15, i64 0, i32 1, i32 1, i32 1
  %361 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %15, i64 0, i32 1, i32 1, i32 3
  %362 = bitcast %"class.std::__1::basic_string"* %360 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %362, i8 0, i64 32, i1 false) #17
  store i32 16, i32* %361, align 8
  %363 = bitcast %"class.std::__1::basic_ostringstream"* %332 to %"class.std::__1::basic_ostream"*
  %364 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %363, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0), i64 31) #17
  %365 = load i32, i32* %331, align 8, !noalias !20
  %366 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %366) #17, !noalias !20
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_stringbuf"* %335) #17, !noalias !20
  call void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 12289, i32 %365, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %367 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %368 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %367, i64 0, i32 1, i32 0
  %369 = load i8, i8* %368, align 1, !noalias !20
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %329
  %372 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load i8*, i8** %372, align 8, !noalias !20
  call void @_ZdlPv(i8* %373) #19
  br label %374

374:                                              ; preds = %329, %371
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %366) #17, !noalias !20
  %375 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %375, i64* %338, align 8
  %376 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %377 = inttoptr i64 %375 to i8*
  %378 = getelementptr i8, i8* %377, i64 -24
  %379 = bitcast i8* %378 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = getelementptr inbounds i8, i8* %345, i64 %380
  %382 = bitcast i8* %381 to i64*
  store i64 %376, i64* %382, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %359, align 8
  %383 = bitcast %"class.std::__1::basic_string"* %360 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %384 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %383, i64 0, i32 1, i32 0
  %385 = load i8, i8* %384, align 1
  %386 = icmp slt i8 %385, 0
  br i1 %386, label %387, label %390

387:                                              ; preds = %374
  %388 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %360, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = load i8*, i8** %388, align 8
  call void @_ZdlPv(i8* %389) #19
  br label %390

390:                                              ; preds = %374, %387
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %336) #17
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %363, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %391 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %15, i64 0, i32 1, i32 2
  %392 = bitcast %"class.std::__1::basic_ios.base"* %391 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %392) #17
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %330) #17
  br label %553

393:                                              ; preds = %324
  %394 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %50, align 8
  %395 = call %"class.rx::FunctionsGL"* @_ZNK2rx12FunctionsEGL15makeFunctionsGLEv(%"class.rx::FunctionsEGL"* %394) #17
  call void @_ZN2rx11FunctionsGL10initializeERKN3egl12AttributeMapE(%"class.rx::FunctionsGL"* %395, %"class.egl::AttributeMap"* dereferenceable(24) %19) #17
  %396 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 1
  %397 = call i8* @_Znwm(i64 12184) #19
  %398 = bitcast i8* %397 to %"class.rx::RendererEGL"*
  %399 = bitcast %"class.std::__1::vector.191"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 0, i64 24, i1 false) #17
  %400 = bitcast i32** %307 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = bitcast %"class.std::__1::vector.191"* %14 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = sub i64 %401, %403
  %405 = ashr exact i64 %404, 2
  %406 = icmp eq i64 %404, 0
  br i1 %406, label %429, label %407

407:                                              ; preds = %393
  %408 = icmp ugt i64 %405, 4611686018427387903
  br i1 %408, label %409, label %411

409:                                              ; preds = %407
  %410 = bitcast %"class.std::__1::vector.191"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %410) #20
  unreachable

411:                                              ; preds = %407
  %412 = call i8* @_Znwm(i64 %404) #19
  %413 = bitcast i8* %412 to i32*
  %414 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %16, i64 0, i32 0, i32 1
  %415 = bitcast i32** %414 to i8**
  store i8* %412, i8** %415, align 8
  %416 = bitcast %"class.std::__1::vector.191"* %16 to i8**
  store i8* %412, i8** %416, align 8
  %417 = getelementptr inbounds i32, i32* %413, i64 %405
  %418 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %417, i32** %418, align 8
  %419 = bitcast i32** %414 to i64*
  %420 = ptrtoint i8* %412 to i64
  %421 = icmp sgt i64 %404, 0
  br i1 %421, label %422, label %427

422:                                              ; preds = %411
  %423 = lshr exact i64 %404, 2
  %424 = inttoptr i64 %403 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %412, i8* align 4 %424, i64 %404, i1 false) #17
  %425 = getelementptr inbounds i32, i32* %413, i64 %423
  %426 = ptrtoint i32* %425 to i64
  br label %427

427:                                              ; preds = %422, %411
  %428 = phi i64 [ %426, %422 ], [ %420, %411 ]
  store i64 %428, i64* %419, align 8
  br label %429

429:                                              ; preds = %393, %427
  call void @_ZN2rx11RendererEGLC1ENSt3__110unique_ptrINS_11FunctionsGLENS1_14default_deleteIS3_EEEERKN3egl12AttributeMapEPNS_10DisplayEGLEPvNS1_6vectorIiNS1_9allocatorIiEEEEb(%"class.rx::RendererEGL"* nonnull %398, %"class.rx::FunctionsGL"* %395, %"class.egl::AttributeMap"* dereferenceable(24) %19, %"class.rx::DisplayEGL"* %1, i8* %326, %"class.std::__1::vector.191"* nonnull %16, i1 zeroext false) #17
  %430 = ptrtoint i8* %397 to i64
  %431 = call i8* @_Znwm(i64 32) #19
  %432 = bitcast i8* %431 to i32 (...)***
  %433 = getelementptr inbounds i8, i8* %431, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %433, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %432, align 8
  %434 = getelementptr inbounds i8, i8* %431, i64 24
  %435 = bitcast i8* %434 to i64*
  store i64 %430, i64* %435, align 8
  %436 = ptrtoint i8* %431 to i64
  %437 = bitcast %"class.std::__1::shared_ptr.744"* %396 to i64*
  store i64 %430, i64* %437, align 8
  %438 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 1, i32 1
  %439 = bitcast %"class.std::__1::__shared_weak_count"** %438 to i64*
  %440 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %438, align 8
  store i64 %436, i64* %439, align 8
  %441 = icmp eq %"class.std::__1::__shared_weak_count"* %440, null
  br i1 %441, label %452, label %442

442:                                              ; preds = %429
  %443 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %440, i64 0, i32 0, i32 1
  %444 = atomicrmw add i64* %443, i64 -1 acq_rel
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %446, label %452

446:                                              ; preds = %442
  %447 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %440, i64 0, i32 0
  %448 = bitcast %"class.std::__1::__shared_weak_count"* %440 to void (%"class.std::__1::__shared_count"*)***
  %449 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %448, align 8
  %450 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %449, i64 2
  %451 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %450, align 8
  call void %451(%"class.std::__1::__shared_count"* %447) #17
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %440) #17
  br label %452

452:                                              ; preds = %429, %442, %446
  %453 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %16, i64 0, i32 0, i32 0
  %454 = load i32*, i32** %453, align 8
  %455 = icmp eq i32* %454, null
  br i1 %455, label %461, label %456

456:                                              ; preds = %452
  %457 = ptrtoint i32* %454 to i64
  %458 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %16, i64 0, i32 0, i32 1
  %459 = bitcast i32** %458 to i64*
  store i64 %457, i64* %459, align 8
  %460 = bitcast i32* %454 to i8*
  call void @_ZdlPv(i8* %460) #19
  br label %461

461:                                              ; preds = %452, %456
  %462 = bitcast %"class.std::__1::shared_ptr.744"* %396 to %"class.rx::RendererGL"**
  %463 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %462, align 8
  %464 = call dereferenceable(8) %"struct.gl::Version"* @_ZNK2rx10RendererGL24getMaxSupportedESVersionEv(%"class.rx::RendererGL"* %463) #17
  %465 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %464, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  %467 = icmp ult i32 %466, 2
  br i1 %467, label %473, label %468

468:                                              ; preds = %461
  %469 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 0
  %470 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %470, i8 -86, i64 16, i1 false)
  call void @_ZN2rx9DisplayGL10initializeEPN3egl7DisplayE(%"class.egl::Error"* sret %0, %"class.rx::DisplayGL"* %469, %"class.egl::Display"* %2) #17
  %471 = load i32, i32* %27, align 8
  %472 = icmp eq i32 %471, 12288
  br i1 %472, label %537, label %553

473:                                              ; preds = %461
  %474 = bitcast %"class.angle::ErrorStreamBase.803"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %474) #17
  %475 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %17, i64 0, i32 0
  store i32 12289, i32* %475, align 8
  %476 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %17, i64 0, i32 1
  %477 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %17, i64 0, i32 1, i32 2, i32 0, i32 0
  %478 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %476, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %477, align 8
  %479 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %17, i64 0, i32 1, i32 1
  %480 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %479, i64 0, i32 0
  %481 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %482 = bitcast %"class.std::__1::basic_ostringstream"* %476 to i64*
  store i64 %481, i64* %482, align 8
  %483 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %484 = bitcast %"class.std::__1::basic_ostringstream"* %476 to i8**
  %485 = inttoptr i64 %481 to i8*
  %486 = getelementptr i8, i8* %485, i64 -24
  %487 = bitcast i8* %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = bitcast %"class.std::__1::basic_ostringstream"* %476 to i8*
  %490 = getelementptr inbounds i8, i8* %489, i64 %488
  %491 = bitcast i8* %490 to i64*
  store i64 %483, i64* %491, align 8
  %492 = load i8*, i8** %484, align 8
  %493 = getelementptr i8, i8* %492, i64 -24
  %494 = bitcast i8* %493 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = getelementptr inbounds i8, i8* %489, i64 %495
  %497 = bitcast i8* %496 to %"class.std::__1::ios_base"*
  %498 = bitcast %"class.std::__1::basic_stringbuf"* %479 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %497, i8* %498) #17
  %499 = getelementptr inbounds i8, i8* %496, i64 136
  %500 = bitcast i8* %499 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %500, align 8
  %501 = getelementptr inbounds i8, i8* %496, i64 144
  %502 = bitcast i8* %501 to i32*
  store i32 -1, i32* %502, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %478, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %477, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %480) #17
  %503 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %479, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %503, align 8
  %504 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %17, i64 0, i32 1, i32 1, i32 1
  %505 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %17, i64 0, i32 1, i32 1, i32 3
  %506 = bitcast %"class.std::__1::basic_string"* %504 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %506, i8 0, i64 32, i1 false) #17
  store i32 16, i32* %505, align 8
  %507 = bitcast %"class.std::__1::basic_ostringstream"* %476 to %"class.std::__1::basic_ostream"*
  %508 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %507, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0), i64 33) #17
  %509 = load i32, i32* %475, align 8, !noalias !23
  %510 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %510) #17, !noalias !23
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_stringbuf"* %479) #17, !noalias !23
  call void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 12289, i32 %509, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  %511 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %512 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %511, i64 0, i32 1, i32 0
  %513 = load i8, i8* %512, align 1, !noalias !23
  %514 = icmp slt i8 %513, 0
  br i1 %514, label %515, label %518

515:                                              ; preds = %473
  %516 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load i8*, i8** %516, align 8, !noalias !23
  call void @_ZdlPv(i8* %517) #19
  br label %518

518:                                              ; preds = %473, %515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %510) #17, !noalias !23
  %519 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %519, i64* %482, align 8
  %520 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %521 = inttoptr i64 %519 to i8*
  %522 = getelementptr i8, i8* %521, i64 -24
  %523 = bitcast i8* %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = getelementptr inbounds i8, i8* %489, i64 %524
  %526 = bitcast i8* %525 to i64*
  store i64 %520, i64* %526, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %503, align 8
  %527 = bitcast %"class.std::__1::basic_string"* %504 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %528 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %527, i64 0, i32 1, i32 0
  %529 = load i8, i8* %528, align 1
  %530 = icmp slt i8 %529, 0
  br i1 %530, label %531, label %534

531:                                              ; preds = %518
  %532 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %504, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load i8*, i8** %532, align 8
  call void @_ZdlPv(i8* %533) #19
  br label %534

534:                                              ; preds = %518, %531
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %480) #17
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %507, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %535 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %17, i64 0, i32 1, i32 2
  %536 = bitcast %"class.std::__1::basic_ios.base"* %535 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %536) #17
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %474) #17
  br label %553

537:                                              ; preds = %468
  %538 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %29, align 8
  %539 = icmp eq %"class.std::__1::basic_string"* %538, null
  br i1 %539, label %550, label %540

540:                                              ; preds = %537
  %541 = bitcast %"class.std::__1::basic_string"* %538 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %542 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %541, i64 0, i32 1, i32 0
  %543 = load i8, i8* %542, align 1
  %544 = icmp slt i8 %543, 0
  br i1 %544, label %545, label %548

545:                                              ; preds = %540
  %546 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %538, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load i8*, i8** %546, align 8
  call void @_ZdlPv(i8* %547) #19
  br label %548

548:                                              ; preds = %545, %540
  %549 = bitcast %"class.std::__1::basic_string"* %538 to i8*
  call void @_ZdlPv(i8* %549) #19
  br label %550

550:                                              ; preds = %537, %548
  store i32 12288, i32* %27, align 8, !alias.scope !26
  store i32 0, i32* %28, align 4, !alias.scope !26
  %551 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %552 = bitcast %"class.std::__1::unique_ptr.791"* %551 to i64*
  store i64 0, i64* %552, align 8, !alias.scope !26
  br label %553

553:                                              ; preds = %468, %274, %550, %534, %390
  %554 = load i32*, i32** %306, align 8
  %555 = icmp eq i32* %554, null
  br i1 %555, label %560, label %556

556:                                              ; preds = %553
  %557 = ptrtoint i32* %554 to i64
  %558 = bitcast i32** %307 to i64*
  store i64 %557, i64* %558, align 8
  %559 = bitcast i32* %554 to i8*
  call void @_ZdlPv(i8* %559) #19
  br label %560

560:                                              ; preds = %553, %556
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %305) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #17
  %561 = load i32*, i32** %277, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %566, label %563

563:                                              ; preds = %560
  %564 = ptrtoint i32* %561 to i64
  store i64 %564, i64* %285, align 8
  %565 = bitcast i32* %561 to i8*
  call void @_ZdlPv(i8* %565) #19
  br label %566

566:                                              ; preds = %560, %563
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #17
  br label %567

567:                                              ; preds = %566, %271, %194, %3, %122
  ret void

568:                                              ; preds = %127
  %569 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %50, align 8
  %570 = call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %569, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #17
  %571 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 8
  %572 = zext i1 %570 to i8
  store i8 %572, i8* %571, align 8
  %573 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %50, align 8
  %574 = call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %573, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #17
  %575 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 9
  %576 = zext i1 %574 to i8
  store i8 %576, i8* %575, align 1
  %577 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %19, i64 12803, i64 0) #17
  %578 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %50, align 8
  switch i64 %577, label %210 [
    i64 12813, label %274
    i64 12814, label %197
  ]
}

declare dereferenceable(24) %"class.egl::AttributeMap"* @_ZN3egl12AttributeMapaSERKS0_(%"class.egl::AttributeMap"*, %"class.egl::AttributeMap"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2rx14FunctionsEGLDLC1Ev(%"class.rx::FunctionsEGLDL"*) unnamed_addr #2

declare i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"*, i64, i64) local_unnamed_addr #2

declare void @_ZN2rx14FunctionsEGLDL10initializeElPKcPv(%"class.egl::Error"* sret, %"class.rx::FunctionsEGLDL"*, i64, i8*, i8*) local_unnamed_addr #2

declare i32 @_ZNK2rx12FunctionsEGL11makeCurrentEPvS1_(%"class.rx::FunctionsEGL"*, i8*, i8*) local_unnamed_addr #2

declare %"class.rx::FunctionsGL"* @_ZNK2rx12FunctionsEGL15makeFunctionsGLEv(%"class.rx::FunctionsEGL"*) local_unnamed_addr #2

declare void @_ZN2rx11FunctionsGL10initializeERKN3egl12AttributeMapE(%"class.rx::FunctionsGL"*, %"class.egl::AttributeMap"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2rx11RendererEGLC1ENSt3__110unique_ptrINS_11FunctionsGLENS1_14default_deleteIS3_EEEERKN3egl12AttributeMapEPNS_10DisplayEGLEPvNS1_6vectorIiNS1_9allocatorIiEEEEb(%"class.rx::RendererEGL"*, %"class.rx::FunctionsGL"*, %"class.egl::AttributeMap"* dereferenceable(24), %"class.rx::DisplayEGL"*, i8*, %"class.std::__1::vector.191"*, i1 zeroext) unnamed_addr #2

declare dereferenceable(8) %"struct.gl::Version"* @_ZNK2rx10RendererGL24getMaxSupportedESVersionEv(%"class.rx::RendererGL"*) local_unnamed_addr #2

declare void @_ZN2rx9DisplayGL10initializeEPN3egl7DisplayE(%"class.egl::Error"* sret, %"class.rx::DisplayGL"*, %"class.egl::Display"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGL9terminateEv(%"class.rx::DisplayEGL"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.gl::LogMessage", align 8
  %3 = alloca %"class.egl::Error", align 8
  %4 = alloca %"class.egl::Error", align 8
  %5 = alloca %"class.gl::LogMessage", align 8
  %6 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 0
  tail call void @_ZN2rx9DisplayGL9terminateEv(%"class.rx::DisplayGL"* %6) #17
  %7 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 2
  %8 = bitcast %"class.rx::FunctionsEGLDL"** %7 to %"class.rx::FunctionsEGL"**
  %9 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %8, align 8
  %10 = tail call i32 @_ZNK2rx12FunctionsEGL11makeCurrentEPvS1_(%"class.rx::FunctionsEGL"* %9, i8* null, i8* null) #17
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %41

12:                                               ; preds = %1
  %13 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 3) #17
  br i1 %13, label %14, label %41

14:                                               ; preds = %12
  %15 = bitcast %"class.gl::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %15) #17
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__._ZN2rx10DisplayEGL9terminateEv, i64 0, i64 0), i32 295, i32 3) #17
  %16 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %2, i64 0, i32 4
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i64 21) #17
  %19 = bitcast %"class.egl::Error"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #17
  %20 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %8, align 8
  %21 = call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %20) #17
  %22 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %3, i64 0, i32 0
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %3, i64 0, i32 1
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %3, i64 0, i32 2
  %25 = bitcast %"class.std::__1::unique_ptr.791"* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3egllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_5ErrorE(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, %"class.egl::Error"* nonnull dereferenceable(16) %3) #17
  %27 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %27, align 8
  %29 = icmp eq %"class.std::__1::basic_string"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %14
  %31 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #19
  br label %38

38:                                               ; preds = %35, %30
  %39 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @_ZdlPv(i8* %39) #19
  br label %40

40:                                               ; preds = %14, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #17
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %15) #17
  br label %41

41:                                               ; preds = %40, %12, %1
  %42 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 1, i32 1
  %44 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %43, align 8
  %45 = bitcast %"class.std::__1::shared_ptr.744"* %42 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %45, align 8
  %46 = icmp eq %"class.std::__1::__shared_weak_count"* %44, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %44, i64 0, i32 0, i32 1
  %49 = atomicrmw add i64* %48, i64 -1 acq_rel
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %44, i64 0, i32 0
  %53 = bitcast %"class.std::__1::__shared_weak_count"* %44 to void (%"class.std::__1::__shared_count"*)***
  %54 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, i64 2
  %56 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %55, align 8
  call void %56(%"class.std::__1::__shared_count"* %52) #17
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %44) #17
  br label %57

57:                                               ; preds = %41, %47, %51
  %58 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0
  %59 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 3
  %60 = load i64, i64* %59, align 8
  %61 = icmp ugt i64 %60, 127
  br i1 %61, label %62, label %67

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %58, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #19
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %64, align 8
  %66 = bitcast %"union.absl::container_internal::map_slot_type.776"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 32, i1 false) #17
  br label %83

67:                                               ; preds = %57
  %68 = icmp eq i64 %60, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  store i64 0, i64* %70, align 8
  %71 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %58, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = add nuw nsw i64 %60, 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %72, i8 -128, i64 %73, i1 false) #17
  %74 = load i8*, i8** %71, align 8
  %75 = load i64, i64* %59, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  store i8 -1, i8* %76, align 1
  %77 = load i64, i64* %59, align 8
  %78 = lshr i64 %77, 3
  %79 = sub i64 %77, %78
  %80 = load i64, i64* %70, align 8
  %81 = sub i64 %79, %80
  %82 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %81, i64* %82, align 8
  br label %83

83:                                               ; preds = %62, %67, %69
  %84 = bitcast %"class.egl::Error"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #17
  %85 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %4, i64 0, i32 0
  %86 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %87 = bitcast %"class.egl::Error"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false)
  %88 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %8, align 8
  call void @_ZN2rx12FunctionsEGL9terminateEv(%"class.egl::Error"* nonnull sret %4, %"class.rx::FunctionsEGL"* %88) #17
  %89 = load i32, i32* %85, align 8
  %90 = icmp eq i32 %89, 12288
  br i1 %90, label %99, label %91

91:                                               ; preds = %83
  %92 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 3) #17
  br i1 %92, label %93, label %99

93:                                               ; preds = %91
  %94 = bitcast %"class.gl::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %94) #17
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %5, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__._ZN2rx10DisplayEGL9terminateEv, i64 0, i64 0), i32 305, i32 3) #17
  %95 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %5, i64 0, i32 4
  %96 = bitcast %"class.std::__1::basic_ostringstream"* %95 to %"class.std::__1::basic_ostream"*
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %96, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0), i64 19) #17
  %98 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3egllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_5ErrorE(%"class.std::__1::basic_ostream"* dereferenceable(160) %97, %"class.egl::Error"* nonnull dereferenceable(16) %4) #17
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %94) #17
  br label %99

99:                                               ; preds = %83, %93, %91
  %100 = load %"class.rx::FunctionsEGLDL"*, %"class.rx::FunctionsEGLDL"** %7, align 8
  %101 = icmp eq %"class.rx::FunctionsEGLDL"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %99
  %103 = bitcast %"class.rx::FunctionsEGLDL"* %100 to void (%"class.rx::FunctionsEGLDL"*)***
  %104 = load void (%"class.rx::FunctionsEGLDL"*)**, void (%"class.rx::FunctionsEGLDL"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.rx::FunctionsEGLDL"*)*, void (%"class.rx::FunctionsEGLDL"*)** %104, i64 1
  %106 = load void (%"class.rx::FunctionsEGLDL"*)*, void (%"class.rx::FunctionsEGLDL"*)** %105, align 8
  call void %106(%"class.rx::FunctionsEGLDL"* nonnull %100) #17
  br label %107

107:                                              ; preds = %99, %102
  store %"class.rx::FunctionsEGLDL"* null, %"class.rx::FunctionsEGLDL"** %7, align 8
  %108 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %86, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %86, align 8
  %109 = icmp eq %"class.std::__1::basic_string"* %108, null
  br i1 %109, label %120, label %110

110:                                              ; preds = %107
  %111 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #19
  br label %118

118:                                              ; preds = %115, %110
  %119 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  call void @_ZdlPv(i8* %119) #19
  br label %120

120:                                              ; preds = %107, %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #17
  ret void
}

declare void @_ZN2rx9DisplayGL9terminateEv(%"class.rx::DisplayGL"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3egllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_5ErrorE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.egl::Error"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"*, i8*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"*) unnamed_addr #3

declare void @_ZN2rx12FunctionsEGL9terminateEv(%"class.egl::Error"* sret, %"class.rx::FunctionsEGL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SurfaceImpl"* @_ZN2rx10DisplayEGL19createWindowSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE(%"class.rx::DisplayEGL"*, %"struct.egl::SurfaceState"* dereferenceable(56), i64, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [3 x i32], align 4
  %8 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17
  store i32 -1431655766, i32* %6, align 4
  %10 = bitcast [3 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #17
  %11 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 0
  %12 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 1
  store i32 -1431655766, i32* %12, align 4
  %13 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 2
  store i32 -1431655766, i32* %13, align 4
  store i32 12328, i32* %11, align 4
  %14 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7
  %15 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %1, i64 0, i32 1
  %16 = load %"struct.egl::Config"*, %"struct.egl::Config"** %15, align 8
  %17 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %16, i64 0, i32 14
  %18 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node.845"**
  %20 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node.845"* %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i32, i32* %17, align 4
  br label %25

25:                                               ; preds = %47, %22
  %26 = phi %"class.std::__1::__tree_node.845"* [ %50, %47 ], [ %20, %22 ]
  %27 = phi %"class.std::__1::__tree_node_base"** [ %49, %47 ], [ %23, %22 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %26, i64 0, i32 1, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %24, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %26, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %47

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %26, i64 0, i32 0, i32 0
  br label %53

37:                                               ; preds = %25
  %38 = icmp slt i32 %29, %24
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %26, i64 0, i32 0, i32 1
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %26, i64 0, i32 0, i32 0
  br label %53

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %26, i64 0, i32 0, i32 0
  br label %53

47:                                               ; preds = %39, %31
  %48 = phi %"class.std::__1::__tree_node_base"* [ %33, %31 ], [ %41, %39 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %32, %31 ], [ %40, %39 ]
  %50 = bitcast %"class.std::__1::__tree_node_base"* %48 to %"class.std::__1::__tree_node.845"*
  br label %25

51:                                               ; preds = %4
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 0, i32 0
  br label %53

53:                                               ; preds = %51, %45, %43, %35
  %54 = phi %"class.std::__1::__tree_end_node"* [ %18, %51 ], [ %36, %35 ], [ %44, %43 ], [ %46, %45 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %52, %51 ], [ %32, %35 ], [ %40, %43 ], [ %27, %45 ]
  %56 = bitcast %"class.std::__1::__tree_node_base"** %55 to %"class.std::__1::__tree_node.845"**
  %57 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node.845"* %57, null
  br i1 %58, label %59, label %87

59:                                               ; preds = %53
  %60 = tail call i8* @_Znwm(i64 40) #19, !noalias !31
  %61 = getelementptr inbounds i8, i8* %60, i64 28
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %17, align 4, !noalias !31
  store i32 %63, i32* %62, align 4, !noalias !31
  %64 = getelementptr inbounds i8, i8* %60, i64 32
  %65 = bitcast i8* %64 to i32*
  store i32 0, i32* %65, align 4, !noalias !31
  %66 = bitcast i8* %60 to %"class.std::__1::__tree_node.845"*
  %67 = bitcast i8* %60 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds i8, i8* %60, i64 16
  %69 = bitcast i8* %68 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %54, %"class.std::__1::__tree_end_node"** %69, align 8
  %70 = bitcast %"class.std::__1::__tree_node_base"** %55 to i8**
  store i8* %60, i8** %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::map.782", %"class.std::__1::map.782"* %14, i64 0, i32 0, i32 0
  %72 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %59
  %77 = ptrtoint %"class.std::__1::__tree_node_base"* %74 to i64
  %78 = bitcast %"class.std::__1::map.782"* %14 to i64*
  store i64 %77, i64* %78, align 8
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  br label %80

80:                                               ; preds = %76, %59
  %81 = phi %"class.std::__1::__tree_node_base"* [ %67, %59 ], [ %79, %76 ]
  %82 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %83, %"class.std::__1::__tree_node_base"* %81) #17
  %84 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  br label %87

87:                                               ; preds = %53, %80
  %88 = phi %"class.std::__1::__tree_node.845"* [ %66, %80 ], [ %57, %53 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %88, i64 0, i32 1, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %12, align 4
  store i32 12344, i32* %13, align 4
  %91 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 2
  %92 = bitcast %"class.rx::FunctionsEGLDL"** %91 to %"class.rx::FunctionsEGL"**
  %93 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %92, align 8
  %94 = call i32 @_ZNK2rx12FunctionsEGL12chooseConfigEPKiPPviPi(%"class.rx::FunctionsEGL"* %93, i32* nonnull %11, i8** nonnull %5, i32 1, i32* nonnull %6) #17
  %95 = call i8* @_Znwm(i64 144) #19
  %96 = bitcast i8* %95 to %"class.rx::WindowSurfaceEGL"*
  %97 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %92, align 8
  %98 = load i8*, i8** %5, align 8
  call void @_ZN2rx16WindowSurfaceEGLC1ERKN3egl12SurfaceStateEPKNS_12FunctionsEGLEPvl(%"class.rx::WindowSurfaceEGL"* nonnull %96, %"struct.egl::SurfaceState"* dereferenceable(56) %1, %"class.rx::FunctionsEGL"* %97, i8* %98, i64 %2) #17
  %99 = bitcast i8* %95 to %"class.rx::SurfaceImpl"*
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  ret %"class.rx::SurfaceImpl"* %99
}

declare i32 @_ZNK2rx12FunctionsEGL12chooseConfigEPKiPPviPi(%"class.rx::FunctionsEGL"*, i32*, i8**, i32, i32*) local_unnamed_addr #2

declare void @_ZN2rx16WindowSurfaceEGLC1ERKN3egl12SurfaceStateEPKNS_12FunctionsEGLEPvl(%"class.rx::WindowSurfaceEGL"*, %"struct.egl::SurfaceState"* dereferenceable(56), %"class.rx::FunctionsEGL"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SurfaceImpl"* @_ZN2rx10DisplayEGL20createPbufferSurfaceERKN3egl12SurfaceStateERKNS1_12AttributeMapE(%"class.rx::DisplayEGL"*, %"struct.egl::SurfaceState"* dereferenceable(56), %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [3 x i32], align 4
  %7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17
  store i32 -1431655766, i32* %5, align 4
  %9 = bitcast [3 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #17
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 0
  %11 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  store i32 -1431655766, i32* %11, align 4
  %12 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  store i32 -1431655766, i32* %12, align 4
  store i32 12328, i32* %10, align 4
  %13 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7
  %14 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %1, i64 0, i32 1
  %15 = load %"struct.egl::Config"*, %"struct.egl::Config"** %14, align 8
  %16 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %15, i64 0, i32 14
  %17 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node.845"**
  %19 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node.845"* %19, null
  br i1 %20, label %50, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = load i32, i32* %16, align 4
  br label %24

24:                                               ; preds = %46, %21
  %25 = phi %"class.std::__1::__tree_node.845"* [ %49, %46 ], [ %19, %21 ]
  %26 = phi %"class.std::__1::__tree_node_base"** [ %48, %46 ], [ %22, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %25, i64 0, i32 1, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %23, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %25, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %25, i64 0, i32 0, i32 0
  br label %52

36:                                               ; preds = %24
  %37 = icmp slt i32 %28, %23
  br i1 %37, label %38, label %44

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %25, i64 0, i32 0, i32 1
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %25, i64 0, i32 0, i32 0
  br label %52

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %25, i64 0, i32 0, i32 0
  br label %52

46:                                               ; preds = %38, %30
  %47 = phi %"class.std::__1::__tree_node_base"* [ %32, %30 ], [ %40, %38 ]
  %48 = phi %"class.std::__1::__tree_node_base"** [ %31, %30 ], [ %39, %38 ]
  %49 = bitcast %"class.std::__1::__tree_node_base"* %47 to %"class.std::__1::__tree_node.845"*
  br label %24

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  br label %52

52:                                               ; preds = %50, %44, %42, %34
  %53 = phi %"class.std::__1::__tree_end_node"* [ %17, %50 ], [ %35, %34 ], [ %43, %42 ], [ %45, %44 ]
  %54 = phi %"class.std::__1::__tree_node_base"** [ %51, %50 ], [ %31, %34 ], [ %39, %42 ], [ %26, %44 ]
  %55 = bitcast %"class.std::__1::__tree_node_base"** %54 to %"class.std::__1::__tree_node.845"**
  %56 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node.845"* %56, null
  br i1 %57, label %58, label %86

58:                                               ; preds = %52
  %59 = tail call i8* @_Znwm(i64 40) #19, !noalias !34
  %60 = getelementptr inbounds i8, i8* %59, i64 28
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %16, align 4, !noalias !34
  store i32 %62, i32* %61, align 4, !noalias !34
  %63 = getelementptr inbounds i8, i8* %59, i64 32
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !34
  %65 = bitcast i8* %59 to %"class.std::__1::__tree_node.845"*
  %66 = bitcast i8* %59 to %"class.std::__1::__tree_node_base"*
  %67 = getelementptr inbounds i8, i8* %59, i64 16
  %68 = bitcast i8* %67 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %68, align 8
  %69 = bitcast %"class.std::__1::__tree_node_base"** %54 to i8**
  store i8* %59, i8** %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::map.782", %"class.std::__1::map.782"* %13, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %58
  %76 = ptrtoint %"class.std::__1::__tree_node_base"* %73 to i64
  %77 = bitcast %"class.std::__1::map.782"* %13 to i64*
  store i64 %76, i64* %77, align 8
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  br label %79

79:                                               ; preds = %75, %58
  %80 = phi %"class.std::__1::__tree_node_base"* [ %66, %58 ], [ %78, %75 ]
  %81 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %82, %"class.std::__1::__tree_node_base"* %80) #17
  %83 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %83, align 8
  br label %86

86:                                               ; preds = %52, %79
  %87 = phi %"class.std::__1::__tree_node.845"* [ %65, %79 ], [ %56, %52 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %87, i64 0, i32 1, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %11, align 4
  store i32 12344, i32* %12, align 4
  %90 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 2
  %91 = bitcast %"class.rx::FunctionsEGLDL"** %90 to %"class.rx::FunctionsEGL"**
  %92 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %91, align 8
  %93 = call i32 @_ZNK2rx12FunctionsEGL12chooseConfigEPKiPPviPi(%"class.rx::FunctionsEGL"* %92, i32* nonnull %10, i8** nonnull %4, i32 1, i32* nonnull %5) #17
  %94 = call i8* @_Znwm(i64 136) #19
  %95 = bitcast i8* %94 to %"class.rx::PbufferSurfaceEGL"*
  %96 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %91, align 8
  %97 = load i8*, i8** %4, align 8
  call void @_ZN2rx17PbufferSurfaceEGLC1ERKN3egl12SurfaceStateEPKNS_12FunctionsEGLEPv(%"class.rx::PbufferSurfaceEGL"* nonnull %95, %"struct.egl::SurfaceState"* dereferenceable(56) %1, %"class.rx::FunctionsEGL"* %96, i8* %97) #17
  %98 = bitcast i8* %94 to %"class.rx::SurfaceImpl"*
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret %"class.rx::SurfaceImpl"* %98
}

declare void @_ZN2rx17PbufferSurfaceEGLC1ERKN3egl12SurfaceStateEPKNS_12FunctionsEGLEPv(%"class.rx::PbufferSurfaceEGL"*, %"struct.egl::SurfaceState"* dereferenceable(56), %"class.rx::FunctionsEGL"*, i8*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.rx::SurfaceImpl"* @_ZN2rx10DisplayEGL29createPbufferFromClientBufferERKN3egl12SurfaceStateEjPvRKNS1_12AttributeMapE(%"class.rx::DisplayEGL"* nocapture readnone, %"struct.egl::SurfaceState"* nocapture readnone dereferenceable(56), i32, i8* nocapture readnone, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #7 align 2 {
  ret %"class.rx::SurfaceImpl"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.rx::SurfaceImpl"* @_ZN2rx10DisplayEGL19createPixmapSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE(%"class.rx::DisplayEGL"* nocapture readnone, %"struct.egl::SurfaceState"* nocapture readnone dereferenceable(56), i64, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #7 align 2 {
  ret %"class.rx::SurfaceImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.rx::ContextImpl"* @_ZN2rx10DisplayEGL13createContextERKN2gl5StateEPNS1_8ErrorSetEPKN3egl6ConfigEPKNS1_7ContextERKNS7_12AttributeMapE(%"class.rx::DisplayEGL"*, %"class.gl::State"* dereferenceable(12296), %"class.gl::ErrorSet"*, %"struct.egl::Config"* nocapture readnone, %"class.gl::Context"* readonly, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::shared_ptr.744", align 8
  %8 = alloca %"class.egl::Error", align 8
  %9 = alloca %"class.gl::LogMessage", align 8
  %10 = bitcast %"class.std::__1::shared_ptr.744"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.std::__1::shared_ptr.744", %"class.std::__1::shared_ptr.744"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #17
  %12 = icmp eq %"class.gl::Context"* %4, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %4, i64 0, i32 11, i32 0, i32 0, i32 0
  %15 = bitcast %"class.rx::ContextImpl"** %14 to %"class.rx::ContextEGL"**
  %16 = load %"class.rx::ContextEGL"*, %"class.rx::ContextEGL"** %15, align 8
  %17 = tail call i8* @_ZNK2rx10ContextEGL10getContextEv(%"class.rx::ContextEGL"* %16) #17
  br label %18

18:                                               ; preds = %6, %13
  %19 = phi i8* [ %17, %13 ], [ null, %6 ]
  %20 = bitcast %"class.egl::Error"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %8, i64 0, i32 0
  %22 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = bitcast %"class.egl::Error"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @_ZN2rx10DisplayEGL14createRendererEPvPNSt3__110shared_ptrINS_11RendererEGLEEE(%"class.egl::Error"* nonnull sret %8, %"class.rx::DisplayEGL"* %0, i8* %19, %"class.std::__1::shared_ptr.744"* nonnull %7)
  %24 = load i32, i32* %21, align 8
  %25 = icmp eq i32 %24, 12288
  br i1 %25, label %47, label %26

26:                                               ; preds = %18
  %27 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 3) #17
  br i1 %27, label %28, label %53

28:                                               ; preds = %26
  %29 = bitcast %"class.gl::LogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %29) #17
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %9, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__._ZN2rx10DisplayEGL13createContextERKN2gl5StateEPNS1_8ErrorSetEPKN3egl6ConfigEPKNS1_7ContextERKNS7_12AttributeMapE, i64 0, i64 0), i32 374, i32 3) #17
  %30 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %9, i64 0, i32 4
  %31 = bitcast %"class.std::__1::basic_ostringstream"* %30 to %"class.std::__1::basic_ostream"*
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0), i64 36) #17
  %33 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3egl5Error10getMessageEv(%"class.egl::Error"* nonnull %8) #17
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %43 = zext i8 %36 to i64
  %44 = select i1 %37, i8* %39, i8* %42
  %45 = select i1 %37, i64 %41, i64 %43
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* %44, i64 %45) #17
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %29) #17
  br label %53

47:                                               ; preds = %18
  %48 = call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %5, i64 13132, i64 0) #17
  %49 = trunc i64 %48 to i32
  %50 = call i8* @_Znwm(i64 88) #19
  %51 = bitcast i8* %50 to %"class.rx::ContextEGL"*
  call void @_ZN2rx10ContextEGLC1ERKN2gl5StateEPNS1_8ErrorSetERKNSt3__110shared_ptrINS_11RendererEGLEEENS_32RobustnessVideoMemoryPurgeStatusE(%"class.rx::ContextEGL"* nonnull %51, %"class.gl::State"* dereferenceable(12296) %1, %"class.gl::ErrorSet"* %2, %"class.std::__1::shared_ptr.744"* nonnull dereferenceable(16) %7, i32 %49) #17
  %52 = bitcast i8* %50 to %"class.rx::ContextImpl"*
  br label %53

53:                                               ; preds = %28, %26, %47
  %54 = phi %"class.rx::ContextImpl"* [ %52, %47 ], [ null, %26 ], [ null, %28 ]
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %22, align 8
  %56 = icmp eq %"class.std::__1::basic_string"* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #19
  br label %65

65:                                               ; preds = %62, %57
  %66 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  call void @_ZdlPv(i8* %66) #19
  br label %67

67:                                               ; preds = %53, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #17
  %68 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %11, align 8
  %69 = icmp eq %"class.std::__1::__shared_weak_count"* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %68, i64 0, i32 0, i32 1
  %72 = atomicrmw add i64* %71, i64 -1 acq_rel
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %68, i64 0, i32 0
  %76 = bitcast %"class.std::__1::__shared_weak_count"* %68 to void (%"class.std::__1::__shared_count"*)***
  %77 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %77, i64 2
  %79 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %78, align 8
  call void %79(%"class.std::__1::__shared_count"* %75) #17
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %68) #17
  br label %80

80:                                               ; preds = %67, %70, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #17
  ret %"class.rx::ContextImpl"* %54
}

declare i8* @_ZNK2rx10ContextEGL10getContextEv(%"class.rx::ContextEGL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGL14createRendererEPvPNSt3__110shared_ptrINS_11RendererEGLEEE(%"class.egl::Error"* noalias sret, %"class.rx::DisplayEGL"*, i8*, %"class.std::__1::shared_ptr.744"* nocapture) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.std::__1::vector.191", align 8
  %8 = alloca %"class.angle::ErrorStreamBase.803", align 8
  %9 = alloca %"class.egl::Error", align 8
  %10 = alloca %"class.std::__1::__thread_id", align 8
  %11 = alloca %"class.std::__1::vector.191", align 8
  %12 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  store i8* null, i8** %6, align 8
  %13 = bitcast %"class.std::__1::vector.191"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %7, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #17
  %16 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 4
  %20 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 -86, i64 16, i1 false)
  call void @_ZNK2rx10DisplayEGL17initializeContextEPvRKN3egl12AttributeMapEPS1_PNSt3__16vectorIiNS7_9allocatorIiEEEE(%"class.egl::Error"* sret %0, %"class.rx::DisplayEGL"* %1, i8* %2, %"class.egl::AttributeMap"* dereferenceable(24) %19, i8** nonnull %6, %"class.std::__1::vector.191"* nonnull %7)
  %21 = load i32, i32* %16, align 8
  %22 = icmp eq i32 %21, 12288
  br i1 %22, label %23, label %230

23:                                               ; preds = %4
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %18, align 8
  %25 = icmp eq %"class.std::__1::basic_string"* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #19
  br label %34

34:                                               ; preds = %31, %26
  %35 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @_ZdlPv(i8* %35) #19
  br label %36

36:                                               ; preds = %23, %34
  %37 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 2
  %38 = bitcast %"class.rx::FunctionsEGLDL"** %37 to %"class.rx::FunctionsEGL"**
  %39 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %38, align 8
  %40 = load i8*, i8** %6, align 8
  %41 = call i32 @_ZNK2rx12FunctionsEGL11makeCurrentEPvS1_(%"class.rx::FunctionsEGL"* %39, i8* null, i8* %40) #17
  %42 = icmp eq i32 %41, 0
  %43 = ptrtoint i8* %40 to i64
  br i1 %42, label %44, label %129

44:                                               ; preds = %36
  %45 = bitcast %"class.angle::ErrorStreamBase.803"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %45) #17
  %46 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %8, i64 0, i32 0
  store i32 12289, i32* %46, align 8
  %47 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %8, i64 0, i32 1
  %48 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %8, i64 0, i32 1, i32 2, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %47, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %48, align 8
  %50 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %8, i64 0, i32 1, i32 1
  %51 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %50, i64 0, i32 0
  %52 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %53 = bitcast %"class.std::__1::basic_ostringstream"* %47 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %55 = bitcast %"class.std::__1::basic_ostringstream"* %47 to i8**
  %56 = inttoptr i64 %52 to i8*
  %57 = getelementptr i8, i8* %56, i64 -24
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_ostringstream"* %47 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  %62 = bitcast i8* %61 to i64*
  store i64 %54, i64* %62, align 8
  %63 = load i8*, i8** %55, align 8
  %64 = getelementptr i8, i8* %63, i64 -24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %60, i64 %66
  %68 = bitcast i8* %67 to %"class.std::__1::ios_base"*
  %69 = bitcast %"class.std::__1::basic_stringbuf"* %50 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %68, i8* %69) #17
  %70 = getelementptr inbounds i8, i8* %67, i64 136
  %71 = bitcast i8* %70 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %71, align 8
  %72 = getelementptr inbounds i8, i8* %67, i64 144
  %73 = bitcast i8* %72 to i32*
  store i32 -1, i32* %73, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %49, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %48, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %51) #17
  %74 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %50, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %8, i64 0, i32 1, i32 1, i32 1
  %76 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %8, i64 0, i32 1, i32 1, i32 3
  %77 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 32, i1 false) #17
  store i32 16, i32* %76, align 8
  %78 = bitcast %"class.std::__1::basic_ostringstream"* %47 to %"class.std::__1::basic_ostream"*
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %78, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i64 27) #17
  %80 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %38, align 8
  %81 = call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %80) #17
  %82 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %9, i64 0, i32 0
  store i32 %81, i32* %82, align 8
  %83 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %9, i64 0, i32 1
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %9, i64 0, i32 2
  %85 = bitcast %"class.std::__1::unique_ptr.791"* %84 to i64*
  store i64 0, i64* %85, align 8
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3egllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_5ErrorE(%"class.std::__1::basic_ostream"* dereferenceable(160) %78, %"class.egl::Error"* nonnull dereferenceable(16) %9) #17
  %87 = load i32, i32* %46, align 8, !noalias !37
  %88 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #17, !noalias !37
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_stringbuf"* %50) #17, !noalias !37
  call void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 12289, i32 %87, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %89 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1, !noalias !37
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %44
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8, !noalias !37
  call void @_ZdlPv(i8* %95) #19
  br label %96

96:                                               ; preds = %44, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #17, !noalias !37
  %97 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %98 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %97, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %97, align 8
  %99 = icmp eq %"class.std::__1::basic_string"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %96
  %101 = bitcast %"class.std::__1::basic_string"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #19
  br label %108

108:                                              ; preds = %105, %100
  %109 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  call void @_ZdlPv(i8* %109) #19
  br label %110

110:                                              ; preds = %96, %108
  %111 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %111, i64* %53, align 8
  %112 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %113 = inttoptr i64 %111 to i8*
  %114 = getelementptr i8, i8* %113, i64 -24
  %115 = bitcast i8* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds i8, i8* %60, i64 %116
  %118 = bitcast i8* %117 to i64*
  store i64 %112, i64* %118, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %119 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %110
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %125) #19
  br label %126

126:                                              ; preds = %110, %123
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %51) #17
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %78, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %127 = getelementptr inbounds %"class.angle::ErrorStreamBase.803", %"class.angle::ErrorStreamBase.803"* %8, i64 0, i32 1, i32 2
  %128 = bitcast %"class.std::__1::basic_ios.base"* %127 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %128) #17
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %45) #17
  br label %230

129:                                              ; preds = %36
  %130 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 6, i32 0
  %131 = bitcast %"class.std::__1::__thread_id"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #17
  %132 = tail call i64 @pthread_self() #21
  %133 = getelementptr inbounds %"class.std::__1::__thread_id", %"class.std::__1::__thread_id"* %10, i64 0, i32 0
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.774", %"class.absl::container_internal::raw_hash_map.774"* %130, i64 0, i32 0
  %135 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE22find_or_prepare_insertIS4_EENSF_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.775"* %134, %"class.std::__1::__thread_id"* nonnull dereferenceable(8) %10) #17, !noalias !40
  %136 = extractvalue { i64, i8 } %135, 0
  %137 = extractvalue { i64, i8 } %135, 1
  %138 = and i8 %137, 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %147, label %140

140:                                              ; preds = %129
  %141 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %142 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %141, align 8, !noalias !40
  %143 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %142, i64 %136, i32 0, i32 0, i32 0
  %144 = load i64, i64* %133, align 8, !noalias !40
  store i64 %144, i64* %143, align 8, !noalias !40
  %145 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %142, i64 %136, i32 0, i32 1
  %146 = bitcast %"struct.rx::DisplayEGL::CurrentNativeContext"* %145 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 24, i1 false) #17, !noalias !40
  br label %147

147:                                              ; preds = %140, %129
  %148 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.774", %"class.absl::container_internal::raw_hash_map.774"* %130, i64 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8, !noalias !40
  %150 = getelementptr inbounds i8, i8* %149, i64 %136
  %151 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %152 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %151, align 8, !noalias !40
  %153 = icmp ne i8* %150, null
  call void @llvm.assume(i1 %153) #17, !noalias !40
  %154 = load i8, i8* %150, align 1
  %155 = icmp sgt i8 %154, -1
  br i1 %155, label %157, label %156, !prof !45

156:                                              ; preds = %147
  call void @llvm.trap() #17
  unreachable

157:                                              ; preds = %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #17
  %158 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %152, i64 %136, i32 0, i32 1, i32 0
  store i8* null, i8** %158, align 8
  %159 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %152, i64 %136, i32 0, i32 1, i32 1
  %160 = bitcast i8** %159 to i64*
  store i64 %43, i64* %160, align 8
  %161 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %38, align 8
  %162 = call %"class.rx::FunctionsGL"* @_ZNK2rx12FunctionsEGL15makeFunctionsGLEv(%"class.rx::FunctionsEGL"* %161) #17
  call void @_ZN2rx11FunctionsGL10initializeERKN3egl12AttributeMapE(%"class.rx::FunctionsGL"* %162, %"class.egl::AttributeMap"* dereferenceable(24) %19) #17
  %163 = call i8* @_Znwm(i64 12184) #19
  %164 = bitcast i8* %163 to %"class.rx::RendererEGL"*
  %165 = bitcast %"class.std::__1::vector.191"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 24, i1 false) #17
  %166 = bitcast i32** %15 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.std::__1::vector.191"* %7 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %167, %169
  %171 = ashr exact i64 %170, 2
  %172 = icmp eq i64 %170, 0
  br i1 %172, label %195, label %173

173:                                              ; preds = %157
  %174 = icmp ugt i64 %171, 4611686018427387903
  br i1 %174, label %175, label %177

175:                                              ; preds = %173
  %176 = bitcast %"class.std::__1::vector.191"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %176) #20
  unreachable

177:                                              ; preds = %173
  %178 = call i8* @_Znwm(i64 %170) #19
  %179 = bitcast i8* %178 to i32*
  %180 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %11, i64 0, i32 0, i32 1
  %181 = bitcast i32** %180 to i8**
  store i8* %178, i8** %181, align 8
  %182 = bitcast %"class.std::__1::vector.191"* %11 to i8**
  store i8* %178, i8** %182, align 8
  %183 = getelementptr inbounds i32, i32* %179, i64 %171
  %184 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %183, i32** %184, align 8
  %185 = bitcast i32** %180 to i64*
  %186 = ptrtoint i8* %178 to i64
  %187 = icmp sgt i64 %170, 0
  br i1 %187, label %188, label %193

188:                                              ; preds = %177
  %189 = lshr exact i64 %170, 2
  %190 = inttoptr i64 %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %178, i8* align 4 %190, i64 %170, i1 false) #17
  %191 = getelementptr inbounds i32, i32* %179, i64 %189
  %192 = ptrtoint i32* %191 to i64
  br label %193

193:                                              ; preds = %188, %177
  %194 = phi i64 [ %192, %188 ], [ %186, %177 ]
  store i64 %194, i64* %185, align 8
  br label %195

195:                                              ; preds = %157, %193
  call void @_ZN2rx11RendererEGLC1ENSt3__110unique_ptrINS_11FunctionsGLENS1_14default_deleteIS3_EEEERKN3egl12AttributeMapEPNS_10DisplayEGLEPvNS1_6vectorIiNS1_9allocatorIiEEEEb(%"class.rx::RendererEGL"* nonnull %164, %"class.rx::FunctionsGL"* %162, %"class.egl::AttributeMap"* dereferenceable(24) %19, %"class.rx::DisplayEGL"* %1, i8* %40, %"class.std::__1::vector.191"* nonnull %11, i1 zeroext false) #17
  %196 = ptrtoint i8* %163 to i64
  %197 = call i8* @_Znwm(i64 32) #19
  %198 = bitcast i8* %197 to i32 (...)***
  %199 = getelementptr inbounds i8, i8* %197, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %199, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %198, align 8
  %200 = getelementptr inbounds i8, i8* %197, i64 24
  %201 = bitcast i8* %200 to i64*
  store i64 %196, i64* %201, align 8
  %202 = ptrtoint i8* %197 to i64
  %203 = bitcast %"class.std::__1::shared_ptr.744"* %3 to i64*
  store i64 %196, i64* %203, align 8
  %204 = getelementptr inbounds %"class.std::__1::shared_ptr.744", %"class.std::__1::shared_ptr.744"* %3, i64 0, i32 1
  %205 = bitcast %"class.std::__1::__shared_weak_count"** %204 to i64*
  %206 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %204, align 8
  store i64 %202, i64* %205, align 8
  %207 = icmp eq %"class.std::__1::__shared_weak_count"* %206, null
  br i1 %207, label %218, label %208

208:                                              ; preds = %195
  %209 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %206, i64 0, i32 0, i32 1
  %210 = atomicrmw add i64* %209, i64 -1 acq_rel
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %218

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %206, i64 0, i32 0
  %214 = bitcast %"class.std::__1::__shared_weak_count"* %206 to void (%"class.std::__1::__shared_count"*)***
  %215 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %215, i64 2
  %217 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %216, align 8
  call void %217(%"class.std::__1::__shared_count"* %213) #17
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %206) #17
  br label %218

218:                                              ; preds = %195, %208, %212
  %219 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %11, i64 0, i32 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = icmp eq i32* %220, null
  br i1 %221, label %227, label %222

222:                                              ; preds = %218
  %223 = ptrtoint i32* %220 to i64
  %224 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %11, i64 0, i32 0, i32 1
  %225 = bitcast i32** %224 to i64*
  store i64 %223, i64* %225, align 8
  %226 = bitcast i32* %220 to i8*
  call void @_ZdlPv(i8* %226) #19
  br label %227

227:                                              ; preds = %222, %218
  store i32 12288, i32* %16, align 8, !alias.scope !46
  store i32 0, i32* %17, align 4, !alias.scope !46
  %228 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %229 = bitcast %"class.std::__1::unique_ptr.791"* %228 to i64*
  store i64 0, i64* %229, align 8, !alias.scope !46
  br label %230

230:                                              ; preds = %4, %227, %126
  %231 = load i32*, i32** %14, align 8
  %232 = icmp eq i32* %231, null
  br i1 %232, label %237, label %233

233:                                              ; preds = %230
  %234 = ptrtoint i32* %231 to i64
  %235 = bitcast i32** %15 to i64*
  store i64 %234, i64* %235, align 8
  %236 = bitcast i32* %231 to i8*
  call void @_ZdlPv(i8* %236) #19
  br label %237

237:                                              ; preds = %230, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3egl5Error10getMessageEv(%"class.egl::Error"*) local_unnamed_addr #2

declare void @_ZN2rx10ContextEGLC1ERKN2gl5StateEPNS1_8ErrorSetERKNSt3__110shared_ptrINS_11RendererEGLEEENS_32RobustnessVideoMemoryPurgeStatusE(%"class.rx::ContextEGL"*, %"class.gl::State"* dereferenceable(12296), %"class.gl::ErrorSet"*, %"class.std::__1::shared_ptr.744"* dereferenceable(16), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGL15generateConfigsEv(%"class.egl::ConfigSet"* noalias sret, %"class.rx::DisplayEGL"*) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %"class.std::__1::vector.811", align 8
  %38 = alloca i32, align 4
  %39 = alloca %"struct.egl::Config", align 4
  %40 = alloca %"class.gl::LogMessage", align 8
  %41 = bitcast %"class.egl::ConfigSet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 -86, i64 24, i1 false)
  tail call void @_ZN3egl9ConfigSetC1Ev(%"class.egl::ConfigSet"* %0) #17
  %42 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 7
  %43 = getelementptr inbounds %"class.std::__1::map.782", %"class.std::__1::map.782"* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node.845"**
  %46 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %45, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.783"* %43, %"class.std::__1::__tree_node.845"* %46) #17
  %47 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::map.782", %"class.std::__1::map.782"* %42, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #17
  store i32 -1431655766, i32* %36, align 4
  %51 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 2
  %52 = bitcast %"class.rx::FunctionsEGLDL"** %51 to %"class.rx::FunctionsEGL"**
  %53 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %54 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 5, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = call i32 @_ZNK2rx12FunctionsEGL12chooseConfigEPKiPPviPi(%"class.rx::FunctionsEGL"* %53, i32* %55, i8** null, i32 0, i32* nonnull %36) #17
  %57 = bitcast %"class.std::__1::vector.811"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #17
  %58 = getelementptr inbounds %"class.std::__1::vector.811", %"class.std::__1::vector.811"* %37, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::vector.811", %"class.std::__1::vector.811"* %37, i64 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.std::__1::vector.811", %"class.std::__1::vector.811"* %37, i64 0, i32 0, i32 2, i32 0, i32 0
  %61 = load i32, i32* %36, align 4
  %62 = sext i32 %61 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 24, i1 false) #17
  %63 = icmp eq i32 %61, 0
  br i1 %63, label %83, label %64

64:                                               ; preds = %2
  %65 = icmp slt i32 %61, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %64
  %67 = bitcast %"class.std::__1::vector.811"* %37 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %67) #20
  unreachable

68:                                               ; preds = %64
  %69 = shl nsw i64 %62, 3
  %70 = call i8* @_Znwm(i64 %69) #19
  %71 = bitcast i8* %70 to i8**
  %72 = bitcast %"class.std::__1::vector.811"* %37 to i8**
  store i8* %70, i8** %72, align 8
  %73 = getelementptr inbounds i8*, i8** %71, i64 %62
  store i8** %73, i8*** %60, align 8
  %74 = bitcast i8*** %59 to i64*
  %75 = ptrtoint i8* %70 to i64
  %76 = add nsw i64 %62, -1
  %77 = getelementptr i8*, i8** %71, i64 %76
  %78 = ptrtoint i8** %77 to i64
  %79 = sub i64 8, %75
  %80 = add i64 %79, %78
  %81 = and i64 %80, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 %81, i1 false) #17
  %82 = ptrtoint i8** %73 to i64
  store i64 %82, i64* %74, align 8
  br label %83

83:                                               ; preds = %2, %68
  %84 = phi i8** [ null, %2 ], [ %71, %68 ]
  %85 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #17
  store i32 -1431655766, i32* %38, align 4
  %86 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %87 = load i32*, i32** %54, align 8
  %88 = call i32 @_ZNK2rx12FunctionsEGL12chooseConfigEPKiPPviPi(%"class.rx::FunctionsEGL"* %86, i32* %87, i8** %84, i32 %61, i32* nonnull %38) #17
  %89 = load i32, i32* %36, align 4
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %169

91:                                               ; preds = %83
  %92 = bitcast %"struct.egl::Config"* %39 to i8*
  %93 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 2
  %94 = bitcast i32* %35 to i8*
  %95 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 3
  %96 = bitcast i32* %34 to i8*
  %97 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 4
  %98 = bitcast i32* %33 to i8*
  %99 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 5
  %100 = bitcast i32* %32 to i8*
  %101 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 6
  %102 = bitcast i32* %31 to i8*
  %103 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 7
  %104 = bitcast i32* %30 to i8*
  %105 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 8
  %106 = bitcast i32* %29 to i8*
  %107 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 9
  %108 = bitcast i32* %28 to i8*
  %109 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 10
  %110 = bitcast i32* %27 to i8*
  %111 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 12
  %112 = bitcast i32* %26 to i8*
  %113 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 13
  %114 = bitcast i32* %25 to i8*
  %115 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 14
  %116 = bitcast i32* %23 to i8*
  %117 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 15
  %118 = bitcast i32* %22 to i8*
  %119 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 16
  %120 = bitcast i32* %20 to i8*
  %121 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 17
  %122 = bitcast i32* %18 to i8*
  %123 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 19
  %124 = bitcast i32* %16 to i8*
  %125 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 20
  %126 = bitcast i32* %14 to i8*
  %127 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 21
  %128 = bitcast i32* %12 to i8*
  %129 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 22
  %130 = bitcast i32* %10 to i8*
  %131 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 23
  %132 = bitcast i32* %8 to i8*
  %133 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 24
  %134 = bitcast i32* %6 to i8*
  %135 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 25
  %136 = bitcast i32* %4 to i8*
  %137 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 26
  %138 = bitcast i32* %3 to i8*
  %139 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 27
  %140 = bitcast i32* %5 to i8*
  %141 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 28
  %142 = bitcast i32* %7 to i8*
  %143 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 29
  %144 = bitcast i32* %9 to i8*
  %145 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 30
  %146 = bitcast i32* %11 to i8*
  %147 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 31
  %148 = bitcast i32* %13 to i8*
  %149 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 32
  %150 = bitcast i32* %15 to i8*
  %151 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 33
  %152 = bitcast i32* %17 to i8*
  %153 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 34
  %154 = bitcast i32* %19 to i8*
  %155 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 35
  %156 = bitcast i32* %21 to i8*
  %157 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 37
  %158 = bitcast i32* %24 to i8*
  %159 = bitcast %"class.rx::DisplayEGL"* %1 to i32 (%"class.rx::DisplayEGL"*, i32)***
  %160 = bitcast %"class.gl::LogMessage"* %40 to i8*
  %161 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %40, i64 0, i32 4
  %162 = bitcast %"class.std::__1::basic_ostringstream"* %161 to %"class.std::__1::basic_ostream"*
  %163 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 0
  %164 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 1
  %165 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 18
  %166 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %39, i64 0, i32 36
  %167 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %168 = bitcast %"class.std::__1::map.782"* %42 to i64*
  br label %177

169:                                              ; preds = %532, %83
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #17
  %170 = load i8**, i8*** %58, align 8
  %171 = icmp eq i8** %170, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %169
  %173 = ptrtoint i8** %170 to i64
  %174 = bitcast i8*** %59 to i64*
  store i64 %173, i64* %174, align 8
  %175 = bitcast i8** %170 to i8*
  call void @_ZdlPv(i8* %175) #19
  br label %176

176:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #17
  ret void

177:                                              ; preds = %91, %532
  %178 = phi i64 [ 0, %91 ], [ %533, %532 ]
  call void @llvm.lifetime.start.p0i8(i64 164, i8* nonnull %92) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %92, i8 -86, i64 164, i1 false)
  call void @_ZN3egl6ConfigC1Ev(%"struct.egl::Config"* nonnull %39) #17
  %179 = load i8**, i8*** %58, align 8
  %180 = getelementptr inbounds i8*, i8** %179, i64 %178
  %181 = load i8*, i8** %180, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #17
  store i32 -1431655766, i32* %35, align 4
  %182 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %183 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %182, i8* %181, i32 12320, i32* nonnull %35) #17
  %184 = load i32, i32* %35, align 4
  store i32 %184, i32* %93, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #17
  %185 = load i8**, i8*** %58, align 8
  %186 = getelementptr inbounds i8*, i8** %185, i64 %178
  %187 = load i8*, i8** %186, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #17
  store i32 -1431655766, i32* %34, align 4
  %188 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %189 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %188, i8* %187, i32 12324, i32* nonnull %34) #17
  %190 = load i32, i32* %34, align 4
  store i32 %190, i32* %95, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #17
  %191 = load i8**, i8*** %58, align 8
  %192 = getelementptr inbounds i8*, i8** %191, i64 %178
  %193 = load i8*, i8** %192, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #17
  store i32 -1431655766, i32* %33, align 4
  %194 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %195 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %194, i8* %193, i32 12323, i32* nonnull %33) #17
  %196 = load i32, i32* %33, align 4
  store i32 %196, i32* %97, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #17
  %197 = load i8**, i8*** %58, align 8
  %198 = getelementptr inbounds i8*, i8** %197, i64 %178
  %199 = load i8*, i8** %198, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #17
  store i32 -1431655766, i32* %32, align 4
  %200 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %201 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %200, i8* %199, i32 12322, i32* nonnull %32) #17
  %202 = load i32, i32* %32, align 4
  store i32 %202, i32* %99, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #17
  %203 = load i8**, i8*** %58, align 8
  %204 = getelementptr inbounds i8*, i8** %203, i64 %178
  %205 = load i8*, i8** %204, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #17
  store i32 -1431655766, i32* %31, align 4
  %206 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %207 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %206, i8* %205, i32 12349, i32* nonnull %31) #17
  %208 = load i32, i32* %31, align 4
  store i32 %208, i32* %101, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #17
  %209 = load i8**, i8*** %58, align 8
  %210 = getelementptr inbounds i8*, i8** %209, i64 %178
  %211 = load i8*, i8** %210, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #17
  store i32 -1431655766, i32* %30, align 4
  %212 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %213 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %212, i8* %211, i32 12321, i32* nonnull %30) #17
  %214 = load i32, i32* %30, align 4
  store i32 %214, i32* %103, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #17
  %215 = load i8**, i8*** %58, align 8
  %216 = getelementptr inbounds i8*, i8** %215, i64 %178
  %217 = load i8*, i8** %216, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #17
  store i32 -1431655766, i32* %29, align 4
  %218 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %219 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %218, i8* %217, i32 12350, i32* nonnull %29) #17
  %220 = load i32, i32* %29, align 4
  store i32 %220, i32* %105, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #17
  %221 = load i8**, i8*** %58, align 8
  %222 = getelementptr inbounds i8*, i8** %221, i64 %178
  %223 = load i8*, i8** %222, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #17
  store i32 -1431655766, i32* %28, align 4
  %224 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %225 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %224, i8* %223, i32 12345, i32* nonnull %28) #17
  %226 = load i32, i32* %28, align 4
  store i32 %226, i32* %107, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #17
  %227 = load i8**, i8*** %58, align 8
  %228 = getelementptr inbounds i8*, i8** %227, i64 %178
  %229 = load i8*, i8** %228, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #17
  store i32 -1431655766, i32* %27, align 4
  %230 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %231 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %230, i8* %229, i32 12346, i32* nonnull %27) #17
  %232 = load i32, i32* %27, align 4
  store i32 %232, i32* %109, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #17
  %233 = load i8**, i8*** %58, align 8
  %234 = getelementptr inbounds i8*, i8** %233, i64 %178
  %235 = load i8*, i8** %234, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #17
  store i32 -1431655766, i32* %26, align 4
  %236 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %237 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %236, i8* %235, i32 12351, i32* nonnull %26) #17
  %238 = load i32, i32* %26, align 4
  store i32 %238, i32* %111, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #17
  %239 = load i8**, i8*** %58, align 8
  %240 = getelementptr inbounds i8*, i8** %239, i64 %178
  %241 = load i8*, i8** %240, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #17
  store i32 -1431655766, i32* %25, align 4
  %242 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %243 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %242, i8* %241, i32 12327, i32* nonnull %25) #17
  %244 = load i32, i32* %25, align 4
  store i32 %244, i32* %113, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #17
  %245 = load i8**, i8*** %58, align 8
  %246 = getelementptr inbounds i8*, i8** %245, i64 %178
  %247 = load i8*, i8** %246, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116) #17
  store i32 -1431655766, i32* %23, align 4
  %248 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %249 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %248, i8* %247, i32 12328, i32* nonnull %23) #17
  %250 = load i32, i32* %23, align 4
  store i32 %250, i32* %115, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116) #17
  %251 = load i8**, i8*** %58, align 8
  %252 = getelementptr inbounds i8*, i8** %251, i64 %178
  %253 = load i8*, i8** %252, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #17
  store i32 -1431655766, i32* %22, align 4
  %254 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %255 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %254, i8* %253, i32 12354, i32* nonnull %22) #17
  %256 = load i32, i32* %22, align 4
  store i32 %256, i32* %117, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #17
  %257 = load i8**, i8*** %58, align 8
  %258 = getelementptr inbounds i8*, i8** %257, i64 %178
  %259 = load i8*, i8** %258, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120) #17
  store i32 -1431655766, i32* %20, align 4
  %260 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %261 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %260, i8* %259, i32 12325, i32* nonnull %20) #17
  %262 = load i32, i32* %20, align 4
  store i32 %262, i32* %119, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120) #17
  %263 = load i8**, i8*** %58, align 8
  %264 = getelementptr inbounds i8*, i8** %263, i64 %178
  %265 = load i8*, i8** %264, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #17
  store i32 -1431655766, i32* %18, align 4
  %266 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %267 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %266, i8* %265, i32 12329, i32* nonnull %18) #17
  %268 = load i32, i32* %18, align 4
  store i32 %268, i32* %121, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #17
  %269 = load i8**, i8*** %58, align 8
  %270 = getelementptr inbounds i8*, i8** %269, i64 %178
  %271 = load i8*, i8** %270, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124) #17
  store i32 -1431655766, i32* %16, align 4
  %272 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %273 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %272, i8* %271, i32 12332, i32* nonnull %16) #17
  %274 = load i32, i32* %16, align 4
  store i32 %274, i32* %123, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124) #17
  %275 = load i8**, i8*** %58, align 8
  %276 = getelementptr inbounds i8*, i8** %275, i64 %178
  %277 = load i8*, i8** %276, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #17
  store i32 -1431655766, i32* %14, align 4
  %278 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %279 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %278, i8* %277, i32 12330, i32* nonnull %14) #17
  %280 = load i32, i32* %14, align 4
  store i32 %280, i32* %125, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #17
  %281 = load i8**, i8*** %58, align 8
  %282 = getelementptr inbounds i8*, i8** %281, i64 %178
  %283 = load i8*, i8** %282, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #17
  store i32 -1431655766, i32* %12, align 4
  %284 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %285 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %284, i8* %283, i32 12331, i32* nonnull %12) #17
  %286 = load i32, i32* %12, align 4
  store i32 %286, i32* %127, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #17
  %287 = load i8**, i8*** %58, align 8
  %288 = getelementptr inbounds i8*, i8** %287, i64 %178
  %289 = load i8*, i8** %288, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #17
  store i32 -1431655766, i32* %10, align 4
  %290 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %291 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %290, i8* %289, i32 12348, i32* nonnull %10) #17
  %292 = load i32, i32* %10, align 4
  store i32 %292, i32* %129, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #17
  %293 = load i8**, i8*** %58, align 8
  %294 = getelementptr inbounds i8*, i8** %293, i64 %178
  %295 = load i8*, i8** %294, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %132) #17
  store i32 -1431655766, i32* %8, align 4
  %296 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %297 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %296, i8* %295, i32 12347, i32* nonnull %8) #17
  %298 = load i32, i32* %8, align 4
  store i32 %298, i32* %131, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %132) #17
  %299 = load i8**, i8*** %58, align 8
  %300 = getelementptr inbounds i8*, i8** %299, i64 %178
  %301 = load i8*, i8** %300, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #17
  store i32 -1431655766, i32* %6, align 4
  %302 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %303 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %302, i8* %301, i32 12333, i32* nonnull %6) #17
  %304 = load i32, i32* %6, align 4
  store i32 %304, i32* %133, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #17
  %305 = load i8**, i8*** %58, align 8
  %306 = getelementptr inbounds i8*, i8** %305, i64 %178
  %307 = load i8*, i8** %306, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136) #17
  store i32 -1431655766, i32* %4, align 4
  %308 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %309 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %308, i8* %307, i32 12334, i32* nonnull %4) #17
  %310 = load i32, i32* %4, align 4
  store i32 %310, i32* %135, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136) #17
  %311 = load i8**, i8*** %58, align 8
  %312 = getelementptr inbounds i8*, i8** %311, i64 %178
  %313 = load i8*, i8** %312, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #17
  store i32 -1431655766, i32* %3, align 4
  %314 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %315 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %314, i8* %313, i32 12335, i32* nonnull %3) #17
  %316 = load i32, i32* %3, align 4
  store i32 %316, i32* %137, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #17
  %317 = load i8**, i8*** %58, align 8
  %318 = getelementptr inbounds i8*, i8** %317, i64 %178
  %319 = load i8*, i8** %318, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #17
  store i32 -1431655766, i32* %5, align 4
  %320 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %321 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %320, i8* %319, i32 12352, i32* nonnull %5) #17
  %322 = load i32, i32* %5, align 4
  store i32 %322, i32* %139, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #17
  %323 = load i8**, i8*** %58, align 8
  %324 = getelementptr inbounds i8*, i8** %323, i64 %178
  %325 = load i8*, i8** %324, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142) #17
  store i32 -1431655766, i32* %7, align 4
  %326 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %327 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %326, i8* %325, i32 12338, i32* nonnull %7) #17
  %328 = load i32, i32* %7, align 4
  store i32 %328, i32* %141, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142) #17
  %329 = load i8**, i8*** %58, align 8
  %330 = getelementptr inbounds i8*, i8** %329, i64 %178
  %331 = load i8*, i8** %330, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #17
  store i32 -1431655766, i32* %9, align 4
  %332 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %333 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %332, i8* %331, i32 12337, i32* nonnull %9) #17
  %334 = load i32, i32* %9, align 4
  store i32 %334, i32* %143, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #17
  %335 = load i8**, i8*** %58, align 8
  %336 = getelementptr inbounds i8*, i8** %335, i64 %178
  %337 = load i8*, i8** %336, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #17
  store i32 -1431655766, i32* %11, align 4
  %338 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %339 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %338, i8* %337, i32 12326, i32* nonnull %11) #17
  %340 = load i32, i32* %11, align 4
  store i32 %340, i32* %145, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #17
  %341 = load i8**, i8*** %58, align 8
  %342 = getelementptr inbounds i8*, i8** %341, i64 %178
  %343 = load i8*, i8** %342, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #17
  store i32 -1431655766, i32* %13, align 4
  %344 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %345 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %344, i8* %343, i32 12339, i32* nonnull %13) #17
  %346 = load i32, i32* %13, align 4
  store i32 %346, i32* %147, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #17
  %347 = load i8**, i8*** %58, align 8
  %348 = getelementptr inbounds i8*, i8** %347, i64 %178
  %349 = load i8*, i8** %348, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #17
  store i32 -1431655766, i32* %15, align 4
  %350 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %351 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %350, i8* %349, i32 12340, i32* nonnull %15) #17
  %352 = load i32, i32* %15, align 4
  store i32 %352, i32* %149, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #17
  %353 = load i8**, i8*** %58, align 8
  %354 = getelementptr inbounds i8*, i8** %353, i64 %178
  %355 = load i8*, i8** %354, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152) #17
  store i32 -1431655766, i32* %17, align 4
  %356 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %357 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %356, i8* %355, i32 12343, i32* nonnull %17) #17
  %358 = load i32, i32* %17, align 4
  store i32 %358, i32* %151, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152) #17
  %359 = load i8**, i8*** %58, align 8
  %360 = getelementptr inbounds i8*, i8** %359, i64 %178
  %361 = load i8*, i8** %360, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154) #17
  store i32 -1431655766, i32* %19, align 4
  %362 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %363 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %362, i8* %361, i32 12342, i32* nonnull %19) #17
  %364 = load i32, i32* %19, align 4
  store i32 %364, i32* %153, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #17
  %365 = load i8**, i8*** %58, align 8
  %366 = getelementptr inbounds i8*, i8** %365, i64 %178
  %367 = load i8*, i8** %366, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %156) #17
  store i32 -1431655766, i32* %21, align 4
  %368 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %369 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %368, i8* %367, i32 12341, i32* nonnull %21) #17
  %370 = load i32, i32* %21, align 4
  store i32 %370, i32* %155, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %156) #17
  %371 = load i8**, i8*** %58, align 8
  %372 = getelementptr inbounds i8*, i8** %371, i64 %178
  %373 = load i8*, i8** %372, align 8
  %374 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %375 = call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %374, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0)) #17
  br i1 %375, label %376, label %380

376:                                              ; preds = %177
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #17
  store i32 -1431655766, i32* %24, align 4
  %377 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %52, align 8
  %378 = call i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"* %377, i8* %373, i32 13113, i32* nonnull %24) #17
  %379 = load i32, i32* %24, align 4
  store i32 %379, i32* %157, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #17
  br label %381

380:                                              ; preds = %177
  store i32 13114, i32* %157, align 4
  br label %381

381:                                              ; preds = %376, %380
  %382 = load i32, i32* %147, align 4
  %383 = load i32 (%"class.rx::DisplayEGL"*, i32)**, i32 (%"class.rx::DisplayEGL"*, i32)*** %159, align 8
  %384 = getelementptr inbounds i32 (%"class.rx::DisplayEGL"*, i32)*, i32 (%"class.rx::DisplayEGL"*, i32)** %383, i64 42
  %385 = load i32 (%"class.rx::DisplayEGL"*, i32)*, i32 (%"class.rx::DisplayEGL"*, i32)** %384, align 8
  %386 = call i32 %385(%"class.rx::DisplayEGL"* %1, i32 %382) #17
  store i32 %386, i32* %147, align 4
  %387 = load i32, i32* %111, align 4
  %388 = icmp eq i32 %387, 12430
  br i1 %388, label %389, label %532

389:                                              ; preds = %381
  %390 = load i32, i32* %95, align 4
  %391 = icmp eq i32 %390, 8
  %392 = load i32, i32* %97, align 4
  %393 = icmp eq i32 %392, 8
  %394 = and i1 %391, %393
  %395 = load i32, i32* %99, align 4
  %396 = icmp eq i32 %395, 8
  %397 = and i1 %394, %396
  %398 = load i32, i32* %103, align 4
  %399 = icmp eq i32 %398, 8
  %400 = and i1 %397, %399
  br i1 %400, label %449, label %401

401:                                              ; preds = %389
  %402 = icmp eq i32 %398, 0
  %403 = and i1 %397, %402
  br i1 %403, label %449, label %404

404:                                              ; preds = %401
  %405 = icmp eq i32 %390, 5
  %406 = icmp eq i32 %392, 6
  %407 = and i1 %405, %406
  %408 = icmp eq i32 %395, 5
  %409 = and i1 %407, %408
  %410 = and i1 %409, %402
  br i1 %410, label %449, label %411

411:                                              ; preds = %404
  %412 = icmp eq i32 %392, 5
  %413 = and i1 %405, %412
  %414 = and i1 %413, %408
  %415 = icmp eq i32 %398, 1
  %416 = and i1 %414, %415
  br i1 %416, label %449, label %417

417:                                              ; preds = %411
  %418 = icmp eq i32 %390, 4
  %419 = icmp eq i32 %392, 4
  %420 = and i1 %418, %419
  %421 = icmp eq i32 %395, 4
  %422 = and i1 %420, %421
  %423 = icmp eq i32 %398, 4
  %424 = and i1 %422, %423
  br i1 %424, label %449, label %425

425:                                              ; preds = %417
  %426 = icmp eq i32 %390, 10
  %427 = icmp eq i32 %392, 10
  %428 = and i1 %426, %427
  %429 = icmp eq i32 %395, 10
  %430 = and i1 %428, %429
  %431 = icmp eq i32 %398, 2
  %432 = and i1 %430, %431
  br i1 %432, label %449, label %433

433:                                              ; preds = %425
  %434 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 3) #17
  br i1 %434, label %435, label %532

435:                                              ; preds = %433
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %160) #17
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %40, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__._ZN2rx10DisplayEGL15generateConfigsEv, i64 0, i64 0), i32 501, i32 3) #17
  %436 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %162, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 5) #17
  %437 = load i32, i32* %95, align 4
  %438 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %436, i32 %437) #17
  %439 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %438, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1) #17
  %440 = load i32, i32* %97, align 4
  %441 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %439, i32 %440) #17
  %442 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %441, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1) #17
  %443 = load i32, i32* %99, align 4
  %444 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %442, i32 %443) #17
  %445 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %444, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1) #17
  %446 = load i32, i32* %103, align 4
  %447 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %445, i32 %446) #17
  %448 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %447, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), i64 13) #17
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %40) #17
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %160) #17
  br label %532

449:                                              ; preds = %425, %417, %411, %404, %401, %389
  %450 = phi i32 [ 32856, %389 ], [ 32849, %401 ], [ 36194, %404 ], [ 32855, %411 ], [ 32854, %417 ], [ 32857, %425 ]
  store i32 %450, i32* %163, align 4
  %451 = load i32, i32* %119, align 4
  %452 = icmp eq i32 %451, 0
  %453 = load i32, i32* %145, align 4
  %454 = icmp eq i32 %453, 0
  %455 = or i32 %453, %451
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %468, label %457

457:                                              ; preds = %449
  %458 = icmp eq i32 %451, 16
  %459 = and i1 %458, %454
  br i1 %459, label %468, label %460

460:                                              ; preds = %457
  %461 = icmp eq i32 %451, 24
  %462 = and i1 %461, %454
  br i1 %462, label %468, label %463

463:                                              ; preds = %460
  %464 = icmp eq i32 %453, 8
  %465 = and i1 %461, %464
  br i1 %465, label %468, label %466

466:                                              ; preds = %463
  %467 = and i1 %452, %464
  br i1 %467, label %468, label %532

468:                                              ; preds = %466, %463, %460, %457, %449
  %469 = phi i32 [ 0, %449 ], [ 33189, %457 ], [ 33190, %460 ], [ 35056, %463 ], [ 36168, %466 ]
  store i32 %469, i32* %164, align 4
  store i32 12344, i32* %165, align 4
  store i32 0, i32* %166, align 4
  %470 = call i32 @_ZN3egl9ConfigSet3addERKNS_6ConfigE(%"class.egl::ConfigSet"* %0, %"struct.egl::Config"* nonnull dereferenceable(164) %39) #17
  %471 = load i32, i32* %115, align 4
  %472 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %45, align 8
  %473 = icmp eq %"class.std::__1::__tree_node.845"* %472, null
  br i1 %473, label %500, label %474

474:                                              ; preds = %468, %496
  %475 = phi %"class.std::__1::__tree_node.845"* [ %499, %496 ], [ %472, %468 ]
  %476 = phi %"class.std::__1::__tree_node_base"** [ %498, %496 ], [ %167, %468 ]
  %477 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %475, i64 0, i32 1, i32 0, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = icmp slt i32 %470, %478
  br i1 %479, label %480, label %486

480:                                              ; preds = %474
  %481 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %475, i64 0, i32 0, i32 0, i32 0
  %482 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %481, align 8
  %483 = icmp eq %"class.std::__1::__tree_node_base"* %482, null
  br i1 %483, label %484, label %496

484:                                              ; preds = %480
  %485 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %475, i64 0, i32 0, i32 0
  br label %500

486:                                              ; preds = %474
  %487 = icmp slt i32 %478, %470
  br i1 %487, label %488, label %494

488:                                              ; preds = %486
  %489 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %475, i64 0, i32 0, i32 1
  %490 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %489, align 8
  %491 = icmp eq %"class.std::__1::__tree_node_base"* %490, null
  br i1 %491, label %492, label %496

492:                                              ; preds = %488
  %493 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %475, i64 0, i32 0, i32 0
  br label %500

494:                                              ; preds = %486
  %495 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %475, i64 0, i32 0, i32 0
  br label %500

496:                                              ; preds = %488, %480
  %497 = phi %"class.std::__1::__tree_node_base"* [ %482, %480 ], [ %490, %488 ]
  %498 = phi %"class.std::__1::__tree_node_base"** [ %481, %480 ], [ %489, %488 ]
  %499 = bitcast %"class.std::__1::__tree_node_base"* %497 to %"class.std::__1::__tree_node.845"*
  br label %474

500:                                              ; preds = %468, %494, %492, %484
  %501 = phi %"class.std::__1::__tree_end_node"* [ %485, %484 ], [ %493, %492 ], [ %495, %494 ], [ %44, %468 ]
  %502 = phi %"class.std::__1::__tree_node_base"** [ %481, %484 ], [ %489, %492 ], [ %476, %494 ], [ %49, %468 ]
  %503 = bitcast %"class.std::__1::__tree_node_base"** %502 to %"class.std::__1::__tree_node.845"**
  %504 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %503, align 8
  %505 = icmp eq %"class.std::__1::__tree_node.845"* %504, null
  br i1 %505, label %506, label %529

506:                                              ; preds = %500
  %507 = call i8* @_Znwm(i64 40) #19, !noalias !51
  %508 = getelementptr inbounds i8, i8* %507, i64 28
  %509 = bitcast i8* %508 to i32*
  store i32 %470, i32* %509, align 4, !noalias !51
  %510 = getelementptr inbounds i8, i8* %507, i64 32
  %511 = bitcast i8* %510 to i32*
  store i32 0, i32* %511, align 4, !noalias !51
  %512 = bitcast i8* %507 to %"class.std::__1::__tree_node.845"*
  %513 = bitcast i8* %507 to %"class.std::__1::__tree_node_base"*
  %514 = getelementptr inbounds i8, i8* %507, i64 16
  %515 = bitcast i8* %514 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %507, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %501, %"class.std::__1::__tree_end_node"** %515, align 8
  %516 = bitcast %"class.std::__1::__tree_node_base"** %502 to i8**
  store i8* %507, i8** %516, align 8
  %517 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %518 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %517, i64 0, i32 0
  %519 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %518, align 8
  %520 = icmp eq %"class.std::__1::__tree_node_base"* %519, null
  br i1 %520, label %524, label %521

521:                                              ; preds = %506
  %522 = ptrtoint %"class.std::__1::__tree_node_base"* %519 to i64
  store i64 %522, i64* %168, align 8
  %523 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %502, align 8
  br label %524

524:                                              ; preds = %521, %506
  %525 = phi %"class.std::__1::__tree_node_base"* [ %513, %506 ], [ %523, %521 ]
  %526 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %526, %"class.std::__1::__tree_node_base"* %525) #17
  %527 = load i64, i64* %47, align 8
  %528 = add i64 %527, 1
  store i64 %528, i64* %47, align 8
  br label %529

529:                                              ; preds = %500, %524
  %530 = phi %"class.std::__1::__tree_node.845"* [ %512, %524 ], [ %504, %500 ]
  %531 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %530, i64 0, i32 1, i32 0, i32 1
  store i32 %471, i32* %531, align 4
  br label %532

532:                                              ; preds = %435, %433, %466, %381, %529
  call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 164, i8* nonnull %92) #17
  %533 = add nuw nsw i64 %178, 1
  %534 = load i32, i32* %36, align 4
  %535 = sext i32 %534 to i64
  %536 = icmp slt i64 %533, %535
  br i1 %536, label %177, label %169
}

declare void @_ZN3egl9ConfigSetC1Ev(%"class.egl::ConfigSet"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN3egl6ConfigC1Ev(%"struct.egl::Config"*) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare i32 @_ZN3egl9ConfigSet3addERKNS_6ConfigE(%"class.egl::ConfigSet"*, %"struct.egl::Config"* dereferenceable(164)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2rx10DisplayEGL14testDeviceLostEv(%"class.rx::DisplayEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx10DisplayEGL17restoreLostDeviceEPKN3egl7DisplayE(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DisplayEGL"* nocapture readnone, %"class.egl::Display"* nocapture readnone) unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %4, align 8, !alias.scope !54
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4, !alias.scope !54
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr.791"* %6 to i64*
  store i64 0, i64* %7, align 8, !alias.scope !54
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2rx10DisplayEGL19isValidNativeWindowEl(%"class.rx::DisplayEGL"* nocapture readnone, i64) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx10DisplayEGL10waitClientEPKN2gl7ContextE(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DisplayEGL"* nocapture readnone, %"class.gl::Context"* nocapture readnone) unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %4, align 8, !alias.scope !59
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4, !alias.scope !59
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr.791"* %6 to i64*
  store i64 0, i64* %7, align 8, !alias.scope !59
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx10DisplayEGL10waitNativeEPKN2gl7ContextEi(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DisplayEGL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32) unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %5, align 8, !alias.scope !64
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 4, !alias.scope !64
  %7 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::unique_ptr.791"* %7 to i64*
  store i64 0, i64* %8, align 8, !alias.scope !64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGL11makeCurrentEPN3egl7DisplayEPNS1_7SurfaceES5_PN2gl7ContextE(%"class.egl::Error"* noalias sret, %"class.rx::DisplayEGL"*, %"class.egl::Display"*, %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.gl::Context"*) unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::__thread_id", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 6, i32 0
  %10 = bitcast %"class.std::__1::__thread_id"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = tail call i64 @pthread_self() #21
  %12 = getelementptr inbounds %"class.std::__1::__thread_id", %"class.std::__1::__thread_id"* %7, i64 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.774", %"class.absl::container_internal::raw_hash_map.774"* %9, i64 0, i32 0
  %14 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE22find_or_prepare_insertIS4_EENSF_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.775"* %13, %"class.std::__1::__thread_id"* nonnull dereferenceable(8) %7) #17, !noalias !69
  %15 = extractvalue { i64, i8 } %14, 0
  %16 = extractvalue { i64, i8 } %14, 1
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %21 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %20, align 8, !noalias !69
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %21, i64 %15, i32 0, i32 0, i32 0
  %23 = load i64, i64* %12, align 8, !noalias !69
  store i64 %23, i64* %22, align 8, !noalias !69
  %24 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %21, i64 %15, i32 0, i32 1
  %25 = bitcast %"struct.rx::DisplayEGL::CurrentNativeContext"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #17, !noalias !69
  br label %26

26:                                               ; preds = %19, %6
  %27 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.774", %"class.absl::container_internal::raw_hash_map.774"* %9, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !69
  %29 = getelementptr inbounds i8, i8* %28, i64 %15
  %30 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %31 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %30, align 8, !noalias !69
  %32 = icmp ne i8* %29, null
  call void @llvm.assume(i1 %32) #17, !noalias !69
  %33 = load i8, i8* %29, align 1
  %34 = icmp sgt i8 %33, -1
  br i1 %34, label %36, label %35, !prof !45

35:                                               ; preds = %26
  call void @llvm.trap() #17
  unreachable

36:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  %37 = icmp eq %"class.egl::Surface"* %3, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %3, i64 0, i32 3
  %40 = bitcast %"class.rx::SurfaceImpl"** %39 to %"class.rx::SurfaceEGL"**
  %41 = load %"class.rx::SurfaceEGL"*, %"class.rx::SurfaceEGL"** %40, align 8
  %42 = call i8* @_ZNK2rx10SurfaceEGL10getSurfaceEv(%"class.rx::SurfaceEGL"* %41) #17
  br label %43

43:                                               ; preds = %36, %38
  %44 = phi i8* [ %42, %38 ], [ null, %36 ]
  %45 = icmp eq %"class.gl::Context"* %5, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %5, i64 0, i32 11, i32 0, i32 0, i32 0
  %48 = bitcast %"class.rx::ContextImpl"** %47 to %"class.rx::ContextEGL"**
  %49 = load %"class.rx::ContextEGL"*, %"class.rx::ContextEGL"** %48, align 8
  %50 = call i8* @_ZNK2rx10ContextEGL10getContextEv(%"class.rx::ContextEGL"* %49) #17
  br label %51

51:                                               ; preds = %43, %46
  %52 = phi i8* [ %50, %46 ], [ null, %43 ]
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %31, i64 %15, i32 0, i32 1, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %44, %54
  br i1 %55, label %56, label %60

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %31, i64 %15, i32 0, i32 1, i32 1
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %52, %58
  br i1 %59, label %81, label %60

60:                                               ; preds = %56, %51
  %61 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 2
  %62 = bitcast %"class.rx::FunctionsEGLDL"** %61 to %"class.rx::FunctionsEGL"**
  %63 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %62, align 8
  %64 = call i32 @_ZNK2rx12FunctionsEGL11makeCurrentEPvS1_(%"class.rx::FunctionsEGL"* %63, i8* %44, i8* %52) #17
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %79

66:                                               ; preds = %60
  %67 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %62, align 8
  %68 = call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %67) #17
  %69 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #17
  %70 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 21, i8* %71, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0), i64 21, i1 false) #17
  %72 = getelementptr inbounds i8, i8* %69, i64 21
  store i8 0, i8* %72, align 1
  call void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 %68, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #17
  %73 = load i8, i8* %71, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #19
  br label %78

78:                                               ; preds = %66, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #17
  br label %83

79:                                               ; preds = %60
  store i8* %44, i8** %53, align 8
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %31, i64 %15, i32 0, i32 1, i32 1
  store i8* %52, i8** %80, align 8
  br label %81

81:                                               ; preds = %56, %79
  %82 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 0
  call void @_ZN2rx9DisplayGL11makeCurrentEPN3egl7DisplayEPNS1_7SurfaceES5_PN2gl7ContextE(%"class.egl::Error"* sret %0, %"class.rx::DisplayGL"* %82, %"class.egl::Display"* %2, %"class.egl::Surface"* %3, %"class.egl::Surface"* %4, %"class.gl::Context"* %5) #17
  br label %83

83:                                               ; preds = %81, %78
  ret void
}

declare i8* @_ZNK2rx10SurfaceEGL10getSurfaceEv(%"class.rx::SurfaceEGL"*) local_unnamed_addr #2

declare void @_ZN2rx9DisplayGL11makeCurrentEPN3egl7DisplayEPNS1_7SurfaceES5_PN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::DisplayGL"*, %"class.egl::Display"*, %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.gl::Context"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx10DisplayEGL24getMaxSupportedESVersionEv(%"class.rx::DisplayEGL"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 1, i32 0
  %3 = bitcast %"class.rx::RendererEGL"** %2 to %"class.rx::RendererGL"**
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = tail call dereferenceable(8) %"struct.gl::Version"* @_ZNK2rx10RendererGL24getMaxSupportedESVersionEv(%"class.rx::RendererGL"* %4) #17
  %6 = bitcast %"struct.gl::Version"* %5 to i64*
  %7 = load i64, i64* %6, align 4
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGL20destroyNativeContextEPv(%"class.rx::DisplayEGL"* nocapture readonly, i8*) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %5, align 8
  %7 = icmp ne i8* %4, null
  tail call void @llvm.assume(i1 %7) #17
  %8 = load i8, i8* %4, align 1
  %9 = icmp slt i8 %8, -1
  br i1 %9, label %10, label %25

10:                                               ; preds = %2, %10
  %11 = phi %"union.absl::container_internal::map_slot_type.776"* [ %22, %10 ], [ %6, %2 ]
  %12 = phi i8* [ %21, %10 ], [ %4, %2 ]
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = zext i16 %16 to i32
  %18 = add nuw nsw i32 %17, 1
  %19 = tail call i32 @llvm.cttz.i32(i32 %18, i1 true) #17, !range !74
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %12, i64 %20
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %11, i64 %20
  %23 = load i8, i8* %21, align 1
  %24 = icmp slt i8 %23, -1
  br i1 %24, label %10, label %25

25:                                               ; preds = %10, %2
  %26 = phi %"union.absl::container_internal::map_slot_type.776"* [ %6, %2 ], [ %22, %10 ]
  %27 = phi i8* [ %4, %2 ], [ %21, %10 ]
  %28 = phi i8 [ %8, %2 ], [ %23, %10 ]
  %29 = icmp eq i8 %28, -1
  %30 = icmp eq i8* %27, null
  %31 = or i1 %29, %30
  br i1 %31, label %38, label %32

32:                                               ; preds = %25, %73
  %33 = phi %"union.absl::container_internal::map_slot_type.776"* [ %75, %73 ], [ %26, %25 ]
  %34 = phi i8* [ %78, %73 ], [ %27, %25 ]
  %35 = load i8, i8* %34, align 1
  %36 = icmp sgt i8 %35, -1
  br i1 %36, label %43, label %37, !prof !45

37:                                               ; preds = %32
  tail call void @llvm.trap() #17
  unreachable

38:                                               ; preds = %73, %25
  %39 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 2
  %40 = bitcast %"class.rx::FunctionsEGLDL"** %39 to %"class.rx::FunctionsEGL"**
  %41 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %40, align 8
  %42 = tail call i32 @_ZNK2rx12FunctionsEGL14destroyContextEPv(%"class.rx::FunctionsEGL"* %41, i8* %1) #17
  ret void

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %33, i64 0, i32 0, i32 1, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, %1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %33, i64 0, i32 0, i32 1, i32 0
  %49 = bitcast i8** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false)
  %50 = load i8, i8* %34, align 1
  %51 = icmp sgt i8 %50, -1
  br i1 %51, label %53, label %52, !prof !45

52:                                               ; preds = %47
  tail call void @llvm.trap() #17
  unreachable

53:                                               ; preds = %43, %47
  %54 = getelementptr inbounds i8, i8* %34, i64 1
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %33, i64 1
  %56 = load i8, i8* %54, align 1
  %57 = icmp slt i8 %56, -1
  br i1 %57, label %58, label %73

58:                                               ; preds = %53, %58
  %59 = phi %"union.absl::container_internal::map_slot_type.776"* [ %70, %58 ], [ %55, %53 ]
  %60 = phi i8* [ %69, %58 ], [ %54, %53 ]
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1
  %63 = icmp slt <16 x i8> %62, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = zext i16 %64 to i32
  %66 = add nuw nsw i32 %65, 1
  %67 = tail call i32 @llvm.cttz.i32(i32 %66, i1 true) #17, !range !74
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %60, i64 %68
  %70 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %59, i64 %68
  %71 = load i8, i8* %69, align 1
  %72 = icmp slt i8 %71, -1
  br i1 %72, label %58, label %73

73:                                               ; preds = %58, %53
  %74 = phi i8* [ %54, %53 ], [ %69, %58 ]
  %75 = phi %"union.absl::container_internal::map_slot_type.776"* [ %55, %53 ], [ %70, %58 ]
  %76 = phi i8 [ %56, %53 ], [ %71, %58 ]
  %77 = icmp eq i8 %76, -1
  %78 = select i1 %77, i8* null, i8* %74, !prof !75
  %79 = icmp eq i8* %78, null
  br i1 %79, label %38, label %32
}

declare i32 @_ZNK2rx12FunctionsEGL14destroyContextEPv(%"class.rx::FunctionsEGL"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx10DisplayEGL18generateExtensionsEPN3egl17DisplayExtensionsE(%"class.rx::DisplayEGL"*, %"struct.egl::DisplayExtensions"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 2
  %4 = bitcast %"class.rx::FunctionsEGLDL"** %3 to %"class.rx::FunctionsEGL"**
  %5 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::FunctionsEGL", %"class.rx::FunctionsEGL"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.rx::FunctionsEGL", %"class.rx::FunctionsEGL"* %5, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #17
  %11 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 0
  %12 = zext i1 %10 to i8
  store i8 %12, i8* %11, align 1
  %13 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 8
  store i8 0, i8* %13, align 1
  %14 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %15 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0)) #17
  %16 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 43
  %17 = zext i1 %15 to i8
  store i8 %17, i8* %16, align 1
  %18 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 35
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 36
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 32
  store i8 1, i8* %20, align 1
  %21 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %22 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %21, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0)) #17
  %23 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 10
  %24 = zext i1 %22 to i8
  store i8 %24, i8* %23, align 1
  %25 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %26 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %25, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0)) #17
  %27 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 11
  %28 = zext i1 %26 to i8
  store i8 %28, i8* %27, align 1
  %29 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %30 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %29, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.25, i64 0, i64 0)) #17
  %31 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 13
  %32 = zext i1 %30 to i8
  store i8 %32, i8* %31, align 1
  %33 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %34 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %33, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0)) #17
  %35 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 14
  %36 = zext i1 %34 to i8
  store i8 %36, i8* %35, align 1
  %37 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %38 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %37, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i64 0, i64 0)) #17
  %39 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 15
  %40 = zext i1 %38 to i8
  store i8 %40, i8* %39, align 1
  %41 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %42 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %41, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0)) #17
  %43 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 16
  %44 = zext i1 %42 to i8
  store i8 %44, i8* %43, align 1
  %45 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %46 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %45, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0)) #17
  %47 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 33
  %48 = zext i1 %46 to i8
  store i8 %48, i8* %47, align 1
  %49 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %50 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %49, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0)) #17
  %51 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 58
  %52 = zext i1 %50 to i8
  store i8 %52, i8* %51, align 1
  br i1 %50, label %53, label %78

53:                                               ; preds = %2
  %54 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %55 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %54, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30, i64 0, i64 0)) #17
  %56 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 59
  %57 = zext i1 %55 to i8
  store i8 %57, i8* %56, align 1
  %58 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %59 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %58, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0)) #17
  %60 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 60
  %61 = zext i1 %59 to i8
  store i8 %61, i8* %60, align 1
  %62 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %63 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %62, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i64 0, i64 0)) #17
  %64 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 61
  %65 = zext i1 %63 to i8
  store i8 %65, i8* %64, align 1
  %66 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %67 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %66, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0)) #17
  %68 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 62
  %69 = zext i1 %67 to i8
  store i8 %69, i8* %68, align 1
  %70 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %71 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %70, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.34, i64 0, i64 0)) #17
  %72 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 63
  %73 = zext i1 %71 to i8
  store i8 %73, i8* %72, align 1
  %74 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %75 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %74, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0)) #17
  %76 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 65
  %77 = zext i1 %75 to i8
  store i8 %77, i8* %76, align 1
  br label %78

78:                                               ; preds = %53, %2
  %79 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %80 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %79, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0)) #17
  %81 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 45
  %82 = zext i1 %80 to i8
  store i8 %82, i8* %81, align 1
  %83 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %84 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %83, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i64 0, i64 0)) #17
  %85 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 46
  %86 = zext i1 %84 to i8
  store i8 %86, i8* %85, align 1
  %87 = icmp eq i32 %7, 0
  br i1 %87, label %101, label %88

88:                                               ; preds = %78
  %89 = icmp ne i32 %7, 1
  %90 = icmp ugt i32 %9, 4
  %91 = or i1 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %94 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %93, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0)) #17
  %95 = zext i1 %94 to i8
  br label %96

96:                                               ; preds = %88, %92
  %97 = phi i8 [ %95, %92 ], [ 1, %88 ]
  %98 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 26
  store i8 %97, i8* %98, align 1
  %99 = icmp ugt i32 %7, 1
  %100 = or i1 %99, %90
  br i1 %100, label %110, label %106

101:                                              ; preds = %78
  %102 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %103 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %102, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0)) #17
  %104 = zext i1 %103 to i8
  %105 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 26
  store i8 %104, i8* %105, align 1
  br label %106

106:                                              ; preds = %96, %101
  %107 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %108 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %107, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i64 0, i64 0)) #17
  %109 = zext i1 %108 to i8
  br label %110

110:                                              ; preds = %96, %106
  %111 = phi i8 [ %109, %106 ], [ 1, %96 ]
  %112 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 27
  store i8 %111, i8* %112, align 1
  %113 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %114 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %113, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.40, i64 0, i64 0)) #17
  %115 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 50
  %116 = zext i1 %114 to i8
  store i8 %116, i8* %115, align 1
  %117 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %118 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %117, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.41, i64 0, i64 0)) #17
  %119 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 51
  %120 = zext i1 %118 to i8
  store i8 %120, i8* %119, align 1
  %121 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %122 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %121, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.42, i64 0, i64 0)) #17
  %123 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 52
  %124 = zext i1 %122 to i8
  store i8 %124, i8* %123, align 1
  %125 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %126 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %125, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0)) #17
  %127 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 54
  %128 = zext i1 %126 to i8
  store i8 %128, i8* %127, align 1
  %129 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %130 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %129, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0)) #17
  %131 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 34
  %132 = zext i1 %130 to i8
  store i8 %132, i8* %131, align 1
  %133 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %134 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %133, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.43, i64 0, i64 0)) #17
  %135 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 64
  %136 = zext i1 %134 to i8
  store i8 %136, i8* %135, align 1
  %137 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %138 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %137, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0)) #17
  %139 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 66
  %140 = zext i1 %138 to i8
  store i8 %140, i8* %139, align 1
  %141 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %142 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %141, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.45, i64 0, i64 0)) #17
  %143 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 67
  %144 = zext i1 %142 to i8
  store i8 %144, i8* %143, align 1
  %145 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 9
  %146 = load i8, i8* %145, align 1, !range !5
  %147 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 69
  store i8 %146, i8* %147, align 1
  %148 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %4, align 8
  %149 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %148, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i64 0, i64 0)) #17
  %150 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 72
  %151 = zext i1 %149 to i8
  store i8 %151, i8* %150, align 1
  %152 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 0
  tail call void @_ZNK2rx9DisplayGL18generateExtensionsEPN3egl17DisplayExtensionsE(%"class.rx::DisplayGL"* %152, %"struct.egl::DisplayExtensions"* %1) #17
  ret void
}

declare void @_ZNK2rx9DisplayGL18generateExtensionsEPN3egl17DisplayExtensionsE(%"class.rx::DisplayGL"*, %"struct.egl::DisplayExtensions"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK2rx10DisplayEGL12generateCapsEPN3egl4CapsE(%"class.rx::DisplayEGL"* nocapture readnone, %"struct.egl::Caps"* nocapture) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"struct.egl::Caps", %"struct.egl::Caps"* %1, i64 0, i32 0
  store i8 1, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGL17setBlobCacheFuncsEPFvPKvlS2_lEPFlS2_lPvlE(%"class.rx::DisplayEGL"* nocapture readonly, void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 2
  %5 = bitcast %"class.rx::FunctionsEGLDL"** %4 to %"class.rx::FunctionsEGL"**
  %6 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK2rx12FunctionsEGL12hasExtensionEPKc(%"class.rx::FunctionsEGL"* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i64 0, i64 0)) #17
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %5, align 8
  tail call void @_ZNK2rx12FunctionsEGL24setBlobCacheFuncsANDROIDEPFvPKvlS2_lEPFlS2_lPvlE(%"class.rx::FunctionsEGL"* %9, void (i8*, i64, i8*, i64)* %1, i64 (i8*, i64, i8*, i64)* %2) #17
  br label %10

10:                                               ; preds = %8, %3
  ret void
}

declare void @_ZNK2rx12FunctionsEGL24setBlobCacheFuncsANDROIDEPFvPKvlS2_lEPFlS2_lPvlE(%"class.rx::FunctionsEGL"*, void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx10DisplayEGL22makeCurrentSurfacelessEPN2gl7ContextE(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DisplayEGL"* nocapture readnone, %"class.gl::Context"* nocapture readnone) unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %4, align 8, !alias.scope !76
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4, !alias.scope !76
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr.791"* %6 to i64*
  store i64 0, i64* %7, align 8, !alias.scope !76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.rx::WorkerContext"* @_ZN2rx10DisplayEGL19createWorkerContextEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPvNS1_6vectorIiNS5_IiEEEE(%"class.rx::DisplayEGL"* nocapture readonly, %"class.std::__1::basic_string"*, i8*, %"class.std::__1::vector.191"* nocapture readonly) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 2
  %6 = bitcast %"class.rx::FunctionsEGLDL"** %5 to %"class.rx::FunctionsEGL"**
  %7 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %3, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = tail call i8* @_ZNK2rx12FunctionsEGL13createContextEPvS1_PKi(%"class.rx::FunctionsEGL"* %7, i8* %9, i8* %2, i32* %11) #17
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.49, i64 0, i64 0)) #17
  br label %28

16:                                               ; preds = %4
  %17 = tail call i8* @_Znwm(i64 32) #19
  %18 = bitcast %"class.rx::FunctionsEGLDL"** %5 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_116WorkerContextEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to i8**
  store i8* %12, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %23 to i64*
  store i64 %19, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 24
  %26 = bitcast i8* %25 to i8**
  store i8* null, i8** %26, align 8
  %27 = bitcast i8* %17 to %"class.rx::WorkerContext"*
  br label %28

28:                                               ; preds = %16, %14
  %29 = phi %"class.rx::WorkerContext"* [ null, %14 ], [ %27, %16 ]
  ret %"class.rx::WorkerContext"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx10DisplayEGL26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE(%"class.rx::DisplayEGL"* nocapture readonly, %"struct.angle::FrontendFeatures"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.rx::RendererEGL"** %3 to %"class.rx::RendererGL"**
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  tail call void @_ZNK2rx10RendererGL26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE(%"class.rx::RendererGL"* %5, %"struct.angle::FrontendFeatures"* %1) #17
  ret void
}

declare void @_ZNK2rx10RendererGL26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE(%"class.rx::RendererGL"*, %"struct.angle::FrontendFeatures"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10DisplayEGL19populateFeatureListEPNSt3__16vectorIPKN5angle7FeatureENS1_9allocatorIS6_EEEE(%"class.rx::DisplayEGL"* nocapture readonly, %"class.std::__1::vector.718"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.rx::RendererEGL"** %3 to %"class.rx::RendererGL"**
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 20, i32 0
  tail call void @_ZNK5angle14FeatureSetBase19populateFeatureListEPNSt3__16vectorIPKNS_7FeatureENS1_9allocatorIS5_EEEE(%"struct.angle::FeatureSetBase"* %6, %"class.std::__1::vector.718"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5angle14FeatureSetBase19populateFeatureListEPNSt3__16vectorIPKNS_7FeatureENS1_9allocatorIS5_EEEE(%"struct.angle::FeatureSetBase"*, %"class.std::__1::vector.718"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.angle::FeatureSetBase", %"struct.angle::FeatureSetBase"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"struct.angle::FeatureSetBase", %"struct.angle::FeatureSetBase"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::vector.718", %"class.std::__1::vector.718"* %1, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.718", %"class.std::__1::vector.718"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"struct.angle::Feature"*** %8 to i64*
  %11 = bitcast %"class.std::__1::vector.718"* %1 to i64*
  %12 = bitcast %"struct.angle::Feature"*** %9 to i64*
  %13 = getelementptr inbounds %"class.std::__1::vector.718", %"class.std::__1::vector.718"* %1, i64 0, i32 0, i32 0
  br label %15

14:                                               ; preds = %109, %2
  ret void

15:                                               ; preds = %7, %109
  %16 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %110, %109 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 7
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = load %"struct.angle::Feature"**, %"struct.angle::Feature"*** %8, align 8
  %21 = load %"struct.angle::Feature"**, %"struct.angle::Feature"*** %9, align 8
  %22 = icmp ult %"struct.angle::Feature"** %20, %21
  %23 = ptrtoint %"struct.angle::Feature"** %21 to i64
  br i1 %22, label %24, label %28

24:                                               ; preds = %15
  %25 = bitcast %"struct.angle::Feature"** %20 to i64*
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.angle::Feature"*, %"struct.angle::Feature"** %20, i64 1
  %27 = ptrtoint %"struct.angle::Feature"** %26 to i64
  store i64 %27, i64* %10, align 8
  br label %81

28:                                               ; preds = %15
  %29 = ptrtoint %"struct.angle::Feature"** %20 to i64
  %30 = load i64, i64* %11, align 8
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 3
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 2305843009213693951
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.718"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #20
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %23, %30
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #20
  unreachable

49:                                               ; preds = %46, %37
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %37 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #19
  %53 = bitcast i8* %52 to %"struct.angle::Feature"**
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"struct.angle::Feature"** [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"struct.angle::Feature"*, %"struct.angle::Feature"** %56, i64 %32
  %58 = getelementptr inbounds %"struct.angle::Feature"*, %"struct.angle::Feature"** %56, i64 %55
  %59 = ptrtoint %"struct.angle::Feature"** %58 to i64
  %60 = bitcast %"struct.angle::Feature"** %57 to i64*
  store i64 %19, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.angle::Feature"*, %"struct.angle::Feature"** %57, i64 1
  %62 = ptrtoint %"struct.angle::Feature"** %61 to i64
  %63 = load %"struct.angle::Feature"**, %"struct.angle::Feature"*** %13, align 8
  %64 = load i64, i64* %10, align 8
  %65 = ptrtoint %"struct.angle::Feature"** %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.angle::Feature"*, %"struct.angle::Feature"** %57, i64 %68
  %70 = ptrtoint %"struct.angle::Feature"** %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %54
  %73 = bitcast %"struct.angle::Feature"** %69 to i8*
  %74 = bitcast %"struct.angle::Feature"** %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #17
  %75 = load %"struct.angle::Feature"**, %"struct.angle::Feature"*** %13, align 8
  br label %76

76:                                               ; preds = %72, %54
  %77 = phi %"struct.angle::Feature"** [ %63, %54 ], [ %75, %72 ]
  store i64 %70, i64* %11, align 8
  store i64 %62, i64* %10, align 8
  store i64 %59, i64* %12, align 8
  %78 = icmp eq %"struct.angle::Feature"** %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast %"struct.angle::Feature"** %77 to i8*
  tail call void @_ZdlPv(i8* %80) #19
  br label %81

81:                                               ; preds = %24, %76, %79
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, null
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 2
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to %"class.std::__1::__tree_end_node"**
  %89 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %88, align 8
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, %86
  br i1 %92, label %109, label %100

93:                                               ; preds = %81, %93
  %94 = phi %"class.std::__1::__tree_node_base"* [ %96, %93 ], [ %83, %81 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %94, i64 0, i32 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, null
  br i1 %97, label %98, label %93

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %94, i64 0, i32 0
  br label %109

100:                                              ; preds = %85, %100
  %101 = phi %"class.std::__1::__tree_end_node"** [ %104, %100 ], [ %88, %85 ]
  %102 = bitcast %"class.std::__1::__tree_end_node"** %101 to %"class.std::__1::__tree_node_base"**
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  %105 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %104, align 8
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, %103
  br i1 %108, label %109, label %100

109:                                              ; preds = %100, %85, %98
  %110 = phi %"class.std::__1::__tree_end_node"* [ %99, %98 ], [ %89, %85 ], [ %105, %100 ]
  %111 = icmp eq %"class.std::__1::__tree_end_node"* %110, %5
  br i1 %111, label %14, label %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::RendererGL"* @_ZNK2rx10DisplayEGL11getRendererEv(%"class.rx::DisplayEGL"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %0, i64 0, i32 1, i32 0
  %3 = bitcast %"class.rx::RendererEGL"** %2 to %"class.rx::RendererGL"**
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  ret %"class.rx::RendererGL"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx10DisplayEGL25validateImageClientBufferEPKN2gl7ContextEjPvRKN3egl12AttributeMapE(%"class.egl::Error"* noalias sret, %"class.rx::DisplayEGL"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %7 = icmp eq i32 %3, 12912
  br i1 %7, label %8, label %13

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %9, align 8, !alias.scope !81
  %10 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %10, align 4, !alias.scope !81
  %11 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::unique_ptr.791"* %11 to i64*
  store i64 0, i64* %12, align 8, !alias.scope !81
  br label %15

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.rx::DisplayEGL", %"class.rx::DisplayEGL"* %1, i64 0, i32 0, i32 0
  tail call void @_ZNK2rx11DisplayImpl25validateImageClientBufferEPKN2gl7ContextEjPvRKN3egl12AttributeMapE(%"class.egl::Error"* sret %0, %"class.rx::DisplayImpl"* %14, %"class.gl::Context"* %2, i32 %3, i8* %4, %"class.egl::AttributeMap"* dereferenceable(24) %5) #17
  br label %15

15:                                               ; preds = %13, %8
  ret void
}

declare void @_ZNK2rx11DisplayImpl25validateImageClientBufferEPKN2gl7ContextEjPvRKN3egl12AttributeMapE(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.rx::ExternalImageSiblingImpl"* @_ZN2rx10DisplayEGL26createExternalImageSiblingEPKN2gl7ContextEjPvRKN3egl12AttributeMapE(%"class.rx::DisplayEGL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32, i8* nocapture readnone, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %6 = icmp eq i32 %2, 12912
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = tail call i8* @_Znwm(i64 152) #19
  %9 = bitcast i8* %8 to %"class.rx::DmaBufImageSiblingEGL"*
  tail call void @_ZN2rx21DmaBufImageSiblingEGLC1ERKN3egl12AttributeMapE(%"class.rx::DmaBufImageSiblingEGL"* nonnull %9, %"class.egl::AttributeMap"* dereferenceable(24) %4) #17
  %10 = bitcast i8* %8 to %"class.rx::ExternalImageSiblingImpl"*
  br label %11

11:                                               ; preds = %5, %7
  %12 = phi %"class.rx::ExternalImageSiblingImpl"* [ %10, %7 ], [ null, %5 ]
  ret %"class.rx::ExternalImageSiblingImpl"* %12
}

declare void @_ZN2rx21DmaBufImageSiblingEGLC1ERKN3egl12AttributeMapE(%"class.rx::DmaBufImageSiblingEGL"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2rx10DisplayEGL14fixSurfaceTypeEi(%"class.rx::DisplayEGL"* nocapture readnone, i32) unnamed_addr #7 align 2 {
  %3 = and i32 %1, -3
  ret i32 %3
}

declare %"class.rx::StreamProducerImpl"* @_ZN2rx9DisplayGL30createStreamProducerD3DTextureEN3egl6Stream12ConsumerTypeERKNS1_12AttributeMapE(%"class.rx::DisplayGL"*, i32, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare %"class.rx::ShareGroupImpl"* @_ZN2rx9DisplayGL16createShareGroupEv(%"class.rx::DisplayGL"*) unnamed_addr #2

declare void @_ZN2rx11DisplayImpl14prepareForCallEv(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*) unnamed_addr #2

declare void @_ZN2rx11DisplayImpl13releaseThreadEv(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*) unnamed_addr #2

declare void @_ZNK2rx11DisplayImpl20validateClientBufferEPKN3egl6ConfigEjPvRKNS1_12AttributeMapE(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare void @_ZNK2rx11DisplayImpl14validatePixmapEPKN3egl6ConfigElRKNS1_12AttributeMapE(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN2rx9DisplayGL22getRendererDescriptionEv(%"class.std::__1::basic_string"* sret, %"class.rx::DisplayGL"*) unnamed_addr #2

declare void @_ZN2rx9DisplayGL15getVendorStringEv(%"class.std::__1::basic_string"* sret, %"class.rx::DisplayGL"*) unnamed_addr #2

declare void @_ZN2rx9DisplayGL16getVersionStringEv(%"class.std::__1::basic_string"* sret, %"class.rx::DisplayGL"*) unnamed_addr #2

declare %"class.rx::DeviceImpl"* @_ZN2rx11DisplayImpl12createDeviceEv(%"class.rx::DisplayImpl"*) unnamed_addr #2

declare i64 @_ZNK2rx9DisplayGL25getMaxConformantESVersionEv(%"class.rx::DisplayGL"*) unnamed_addr #2

declare void @_ZN2rx11DisplayImpl15handleGPUSwitchEv(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nounwind readnone
declare i64 @pthread_self() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_116WorkerContextEGLD2Ev(%"class.(anonymous namespace)::WorkerContextEGL"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_116WorkerContextEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 2
  %4 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @_ZNK2rx12FunctionsEGL14destroyContextEPv(%"class.rx::FunctionsEGL"* %4, i8* %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_116WorkerContextEGLD0Ev(%"class.(anonymous namespace)::WorkerContextEGL"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_116WorkerContextEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 2
  %4 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @_ZNK2rx12FunctionsEGL14destroyContextEPv(%"class.rx::FunctionsEGL"* %4, i8* %6) #17
  %8 = bitcast %"class.(anonymous namespace)::WorkerContextEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_116WorkerContextEGL11makeCurrentEv(%"class.(anonymous namespace)::WorkerContextEGL"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = alloca %"class.gl::LogMessage", align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 2
  %4 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i32 @_ZNK2rx12FunctionsEGL11makeCurrentEPvS1_(%"class.rx::FunctionsEGL"* %4, i8* %6, i8* %8) #17
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 3) #17
  br i1 %12, label %13, label %18

13:                                               ; preds = %11
  %14 = bitcast %"class.gl::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %14) #17
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__._ZN12_GLOBAL__N_116WorkerContextEGL11makeCurrentEv, i64 0, i64 0), i32 95, i32 3) #17
  %15 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %2, i64 0, i32 4
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %15 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.50, i64 0, i64 0), i64 39) #17
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %14) #17
  br label %18

18:                                               ; preds = %13, %11, %1
  %19 = phi i1 [ true, %1 ], [ false, %11 ], [ false, %13 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_116WorkerContextEGL13unmakeCurrentEv(%"class.(anonymous namespace)::WorkerContextEGL"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::WorkerContextEGL", %"class.(anonymous namespace)::WorkerContextEGL"* %0, i64 0, i32 2
  %3 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %2, align 8
  %4 = tail call i32 @_ZNK2rx12FunctionsEGL11makeCurrentEPvS1_(%"class.rx::FunctionsEGL"* %3, i8* null, i8* null) #17
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #19
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.783"*, %"class.std::__1::__tree_node.845"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.845"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.845"* %1 to %"class.std::__1::__tree_node.845"**
  %6 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.783"* %0, %"class.std::__1::__tree_node.845"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.845", %"class.std::__1::__tree_node.845"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.845"**
  %9 = load %"class.std::__1::__tree_node.845"*, %"class.std::__1::__tree_node.845"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.783"* %0, %"class.std::__1::__tree_node.845"* %9) #17
  %10 = bitcast %"class.std::__1::__tree_node.845"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.796"*, %"class.std::__1::vector.191"* dereferenceable(24)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.796", %"class.std::__1::vector.796"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector.191"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.796"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.796"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.796", %"class.std::__1::vector.796"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.191"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #19
  %30 = bitcast i8* %29 to %"class.std::__1::vector.191"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::vector.191"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::vector.191"* %35 to i64
  %37 = bitcast %"class.std::__1::vector.191"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #17
  %38 = bitcast %"class.std::__1::vector.191"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.191"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %1, i64 0, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %33, i64 %9, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast i32** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast i32** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector.191"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #17
  %52 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %34, i64 1
  %53 = ptrtoint %"class.std::__1::vector.191"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.796", %"class.std::__1::vector.796"* %0, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"** %54, align 8
  %56 = load %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"** %3, align 8
  %57 = icmp eq %"class.std::__1::vector.191"* %56, %55
  br i1 %57, label %58, label %60

58:                                               ; preds = %31
  %59 = ptrtoint %"class.std::__1::vector.191"* %55 to i64
  br label %84

60:                                               ; preds = %31, %60
  %61 = phi %"class.std::__1::vector.191"* [ %63, %60 ], [ %34, %31 ]
  %62 = phi %"class.std::__1::vector.191"* [ %64, %60 ], [ %56, %31 ]
  %63 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %61, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %62, i64 -1
  %65 = bitcast %"class.std::__1::vector.191"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #17
  %66 = bitcast %"class.std::__1::vector.191"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.191"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %62, i64 -1, i32 0, i32 1
  %70 = bitcast i32** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %61, i64 -1, i32 0, i32 1
  %73 = bitcast i32** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %62, i64 -1, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast i32** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %61, i64 -1, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"class.std::__1::vector.191"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #17
  %80 = icmp eq %"class.std::__1::vector.191"* %64, %55
  br i1 %80, label %81, label %60

81:                                               ; preds = %60
  %82 = load i64, i64* %6, align 8
  %83 = load %"class.std::__1::vector.191"*, %"class.std::__1::vector.191"** %3, align 8
  br label %84

84:                                               ; preds = %58, %81
  %85 = phi %"class.std::__1::vector.191"* [ %55, %58 ], [ %83, %81 ]
  %86 = phi %"class.std::__1::vector.191"* [ %34, %58 ], [ %63, %81 ]
  %87 = phi i64 [ %59, %58 ], [ %82, %81 ]
  %88 = ptrtoint %"class.std::__1::vector.191"* %86 to i64
  store i64 %88, i64* %6, align 8
  store i64 %53, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %89 = inttoptr i64 %87 to %"class.std::__1::vector.191"*
  %90 = icmp eq %"class.std::__1::vector.191"* %85, %89
  br i1 %90, label %104, label %91

91:                                               ; preds = %84, %102
  %92 = phi %"class.std::__1::vector.191"* [ %93, %102 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %92, i64 -1
  %94 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %93, i64 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = icmp eq i32* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = ptrtoint i32* %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %92, i64 -1, i32 0, i32 1
  %100 = bitcast i32** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast i32* %95 to i8*
  tail call void @_ZdlPv(i8* %101) #19
  br label %102

102:                                              ; preds = %97, %91
  %103 = icmp eq %"class.std::__1::vector.191"* %93, %89
  br i1 %103, label %104, label %91

104:                                              ; preds = %102, %84
  %105 = icmp eq i64 %87, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %107) #19
  br label %108

108:                                              ; preds = %104, %106
  ret void
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.191"*, i32*, i32*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.191"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #17
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #17
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #19
  %55 = bitcast %"class.std::__1::vector.191"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #17
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.191"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #20
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.191"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #20
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #19
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.191", %"class.std::__1::vector.191"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.191"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #17
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #15 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #17
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.rx::RendererEGL"*, %"class.rx::RendererEGL"** %2, align 8
  %4 = icmp eq %"class.rx::RendererEGL"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.rx::RendererEGL"* %3 to void (%"class.rx::RendererEGL"*)***
  %7 = load void (%"class.rx::RendererEGL"*)**, void (%"class.rx::RendererEGL"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.rx::RendererEGL"*)*, void (%"class.rx::RendererEGL"*)** %7, i64 1
  %9 = load void (%"class.rx::RendererEGL"*)*, void (%"class.rx::RendererEGL"*)** %8, align 8
  tail call void %9(%"class.rx::RendererEGL"* nonnull %3) #17
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2rx11RendererEGLENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare i32 @_ZNK2rx12FunctionsEGL15getConfigAttribEPviPi(%"class.rx::FunctionsEGL"*, i8*, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE22find_or_prepare_insertIS4_EENSF_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.775"*, %"class.std::__1::__thread_id"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = getelementptr inbounds %"class.std::__1::__thread_id", %"class.std::__1::__thread_id"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %3
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 1
  %25 = icmp eq i64 %5, 0
  br label %26

26:                                               ; preds = %61, %2
  %27 = phi i64 [ %19, %2 ], [ %63, %61 ]
  %28 = phi i64 [ 0, %2 ], [ %62, %61 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %13, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %23, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %26
  %37 = zext i16 %34 to i32
  %38 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %24, align 8
  br label %39

39:                                               ; preds = %36, %53
  %40 = phi i32 [ %37, %36 ], [ %55, %53 ]
  %41 = tail call i32 @llvm.cttz.i32(i32 %40, i1 false) #17, !range !74
  %42 = zext i32 %41 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %38, i64 %44, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  %48 = or i1 %25, %47
  %49 = or i64 %46, %5
  %50 = icmp eq i64 %49, 0
  %51 = icmp eq i64 %46, %5
  %52 = select i1 %48, i1 %50, i1 %51
  br i1 %52, label %66, label %53, !prof !45

53:                                               ; preds = %39
  %54 = add i32 %40, -1
  %55 = and i32 %54, %40
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %39

57:                                               ; preds = %53, %26
  %58 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %64, !prof !75

61:                                               ; preds = %57
  %62 = add i64 %28, 16
  %63 = add i64 %62, %29
  br label %26

64:                                               ; preds = %57
  %65 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.775"* %0, i64 %11)
  br label %66

66:                                               ; preds = %39, %64
  %67 = phi i64 [ %65, %64 ], [ %44, %39 ]
  %68 = phi i8 [ 1, %64 ], [ 0, %39 ]
  %69 = insertvalue { i64, i8 } undef, i64 %67, 0
  %70 = insertvalue { i64, i8 } %69, i8 %68, 1
  ret { i64, i8 } %70
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.775"*, i64) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #17, !range !74
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !45

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.775"* %0, i64 1) #17
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.775"* %0) #17
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.775"* %0, i64 %58) #17
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #17, !range !74
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #17

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #18

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.775"*, i64) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 5
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #19
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.776"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %94, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %90
  br i1 %24, label %94, label %93

28:                                               ; preds = %25, %90
  %29 = phi i64 [ 0, %25 ], [ %91, %90 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %90

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %26
  %38 = zext i64 %37 to i128
  %39 = mul nuw i128 %38, 11376068507788127593
  %40 = lshr i128 %39, 64
  %41 = xor i128 %40, %39
  %42 = trunc i128 %41 to i64
  %43 = load i8*, i8** %3, align 8
  %44 = load i64, i64* %7, align 8
  %45 = lshr i64 %42, 7
  %46 = ptrtoint i8* %43 to i64
  %47 = lshr i64 %46, 12
  %48 = xor i64 %45, %47
  %49 = and i64 %48, %44
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp slt <16 x i8> %52, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %33, %56
  %57 = phi i64 [ %61, %56 ], [ %49, %33 ]
  %58 = phi i64 [ %59, %56 ], [ 0, %33 ]
  %59 = add i64 %58, 16
  %60 = add i64 %59, %57
  %61 = and i64 %60, %44
  %62 = getelementptr inbounds i8, i8* %43, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp slt <16 x i8> %64, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %56, label %68

68:                                               ; preds = %56, %33
  %69 = phi i64 [ %49, %33 ], [ %61, %56 ]
  %70 = phi i16 [ %54, %33 ], [ %66, %56 ]
  %71 = zext i16 %70 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 false) #17, !range !74
  %73 = zext i32 %72 to i64
  %74 = add i64 %69, %73
  %75 = and i64 %74, %44
  %76 = trunc i128 %41 to i8
  %77 = and i8 %76, 127
  %78 = getelementptr inbounds i8, i8* %43, i64 %75
  store i8 %77, i8* %78, align 1
  %79 = load i8*, i8** %3, align 8
  %80 = add i64 %75, -15
  %81 = load i64, i64* %7, align 8
  %82 = and i64 %80, %81
  %83 = and i64 %81, 15
  %84 = add i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  store i8 %77, i8* %85, align 1
  %86 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %5, align 8
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %86, i64 %75
  %88 = bitcast %"union.absl::container_internal::map_slot_type.776"* %87 to i8*
  %89 = bitcast %"union.absl::container_internal::map_slot_type.776"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 32, i1 false) #17
  br label %90

90:                                               ; preds = %28, %68
  %91 = add nuw i64 %29, 1
  %92 = icmp eq i64 %91, %8
  br i1 %92, label %27, label %28

93:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #19
  br label %94

94:                                               ; preds = %2, %27, %93
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.775"*) local_unnamed_addr #16 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #17
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %126, %1
  %12 = phi i64 [ 0, %1 ], [ %128, %126 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.775", %"class.absl::container_internal::raw_hash_set.775"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %126
  %20 = phi i64 [ %6, %8 ], [ %129, %126 ]
  %21 = phi i64 [ 0, %8 ], [ %128, %126 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %126

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %28, i64 %21, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %10
  %32 = zext i64 %31 to i128
  %33 = mul nuw i128 %32, 11376068507788127593
  %34 = lshr i128 %33, 64
  %35 = xor i128 %34, %33
  %36 = trunc i128 %35 to i64
  %37 = lshr i64 %36, 7
  %38 = lshr i64 %27, 12
  %39 = xor i64 %37, %38
  %40 = and i64 %39, %20
  %41 = getelementptr inbounds i8, i8* %22, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp slt <16 x i8> %43, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %26, %47
  %48 = phi i64 [ %52, %47 ], [ %40, %26 ]
  %49 = phi i64 [ %50, %47 ], [ 0, %26 ]
  %50 = add i64 %49, 16
  %51 = add i64 %50, %48
  %52 = and i64 %51, %20
  %53 = getelementptr inbounds i8, i8* %22, i64 %52
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = icmp slt <16 x i8> %55, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %47, label %59

59:                                               ; preds = %47, %26
  %60 = phi i64 [ %40, %26 ], [ %52, %47 ]
  %61 = phi i16 [ %45, %26 ], [ %57, %47 ]
  %62 = zext i16 %61 to i32
  %63 = tail call i32 @llvm.cttz.i32(i32 %62, i1 false) #17, !range !74
  %64 = zext i32 %63 to i64
  %65 = add i64 %60, %64
  %66 = and i64 %65, %20
  %67 = sub i64 %66, %40
  %68 = sub i64 %21, %40
  %69 = xor i64 %67, %68
  %70 = and i64 %69, %20
  %71 = icmp ult i64 %70, 16
  br i1 %71, label %72, label %82, !prof !45

72:                                               ; preds = %59
  %73 = trunc i128 %35 to i8
  %74 = and i8 %73, 127
  store i8 %74, i8* %23, align 1
  %75 = load i8*, i8** %2, align 8
  %76 = add i64 %21, -15
  %77 = load i64, i64* %4, align 8
  %78 = and i64 %77, %76
  %79 = and i64 %77, 15
  %80 = add i64 %78, %79
  %81 = getelementptr inbounds i8, i8* %75, i64 %80
  store i8 %74, i8* %81, align 1
  br label %126

82:                                               ; preds = %59
  %83 = getelementptr inbounds i8, i8* %22, i64 %66
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, -128
  %86 = trunc i128 %35 to i8
  %87 = and i8 %86, 127
  store i8 %87, i8* %83, align 1
  %88 = load i8*, i8** %2, align 8
  %89 = add i64 %66, -15
  %90 = load i64, i64* %4, align 8
  %91 = and i64 %90, %89
  %92 = and i64 %90, 15
  %93 = add i64 %91, %92
  %94 = getelementptr inbounds i8, i8* %88, i64 %93
  store i8 %87, i8* %94, align 1
  %95 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %9, align 8
  br i1 %85, label %96, label %110

96:                                               ; preds = %82
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %95, i64 %66
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %95, i64 %21
  %99 = bitcast %"union.absl::container_internal::map_slot_type.776"* %97 to i8*
  %100 = bitcast %"union.absl::container_internal::map_slot_type.776"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 32, i1 false) #17
  %101 = load i8*, i8** %2, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %21
  store i8 -128, i8* %102, align 1
  %103 = load i8*, i8** %2, align 8
  %104 = add i64 %21, -15
  %105 = load i64, i64* %4, align 8
  %106 = and i64 %105, %104
  %107 = and i64 %105, 15
  %108 = add i64 %106, %107
  %109 = getelementptr inbounds i8, i8* %103, i64 %108
  store i8 -128, i8* %109, align 1
  br label %126

110:                                              ; preds = %82
  %111 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %95, i64 %21
  %112 = bitcast %"union.absl::container_internal::map_slot_type.776"* %111 to i8*
  %113 = bitcast %"union.absl::container_internal::map_slot_type.776"* %111 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 8
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %95, i64 %21, i32 0, i32 1, i32 1
  %116 = bitcast i8** %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 8
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %95, i64 %66
  %119 = bitcast %"union.absl::container_internal::map_slot_type.776"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %119, i64 32, i1 false) #17
  %120 = load %"union.absl::container_internal::map_slot_type.776"*, %"union.absl::container_internal::map_slot_type.776"** %9, align 8
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %120, i64 %66
  %122 = bitcast %"union.absl::container_internal::map_slot_type.776"* %121 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %122, align 8
  %123 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.776", %"union.absl::container_internal::map_slot_type.776"* %120, i64 %66, i32 0, i32 1, i32 1
  %124 = bitcast i8** %123 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %124, align 8
  %125 = add i64 %21, -1
  br label %126

126:                                              ; preds = %72, %110, %96, %19
  %127 = phi i64 [ %21, %19 ], [ %21, %72 ], [ %21, %96 ], [ %125, %110 ]
  %128 = add i64 %127, 1
  %129 = load i64, i64* %4, align 8
  %130 = icmp eq i64 %128, %129
  br i1 %130, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

attributes #0 = { cold noreturn nounwind }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { nounwind readnone speculatable }
attributes #19 = { builtin nounwind }
attributes #20 = { noreturn nounwind }
attributes #21 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12292EEcvS2_Ev: argument 0"}
!4 = distinct !{!4, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12292EEcvS2_Ev"}
!5 = !{i8 0, i8 2}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!8 = distinct !{!8, !"_ZN3egl5Error7NoErrorEv"}
!9 = distinct !{!9, !10, !"_ZN3egl7NoErrorEv: argument 0"}
!10 = distinct !{!10, !"_ZN3egl7NoErrorEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev: argument 0"}
!13 = distinct !{!13, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev: argument 0"}
!16 = distinct !{!16, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev: argument 0"}
!19 = distinct !{!19, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev: argument 0"}
!22 = distinct !{!22, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev: argument 0"}
!25 = distinct !{!25, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!28 = distinct !{!28, !"_ZN3egl5Error7NoErrorEv"}
!29 = distinct !{!29, !30, !"_ZN3egl7NoErrorEv: argument 0"}
!30 = distinct !{!30, !"_ZN3egl7NoErrorEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev: argument 0"}
!39 = distinct !{!39, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12289EEcvS2_Ev"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE16try_emplace_implIS4_JEEENSF_INS0_12raw_hash_setIS8_SB_SD_SI_E8iteratorEbEEOT_DpOT0_: argument 0"}
!42 = distinct !{!42, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE16try_emplace_implIS4_JEEENSF_INS0_12raw_hash_setIS8_SB_SD_SI_E8iteratorEbEEOT_DpOT0_"}
!43 = distinct !{!43, !44, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE11try_emplaceIS4_JELi0ELPS4_0EEENSF_INS0_12raw_hash_setIS8_SB_SD_SI_E8iteratorEbEEOS4_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE11try_emplaceIS4_JELi0ELPS4_0EEENSF_INS0_12raw_hash_setIS8_SB_SD_SI_E8iteratorEbEEOS4_DpOT0_"}
!45 = !{!"branch_weights", i32 2000, i32 1}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!48 = distinct !{!48, !"_ZN3egl5Error7NoErrorEv"}
!49 = distinct !{!49, !50, !"_ZN3egl7NoErrorEv: argument 0"}
!50 = distinct !{!50, !"_ZN3egl7NoErrorEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!56 = distinct !{!56, !"_ZN3egl5Error7NoErrorEv"}
!57 = distinct !{!57, !58, !"_ZN3egl7NoErrorEv: argument 0"}
!58 = distinct !{!58, !"_ZN3egl7NoErrorEv"}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!61 = distinct !{!61, !"_ZN3egl5Error7NoErrorEv"}
!62 = distinct !{!62, !63, !"_ZN3egl7NoErrorEv: argument 0"}
!63 = distinct !{!63, !"_ZN3egl7NoErrorEv"}
!64 = !{!65, !67}
!65 = distinct !{!65, !66, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!66 = distinct !{!66, !"_ZN3egl5Error7NoErrorEv"}
!67 = distinct !{!67, !68, !"_ZN3egl7NoErrorEv: argument 0"}
!68 = distinct !{!68, !"_ZN3egl7NoErrorEv"}
!69 = !{!70, !72}
!70 = distinct !{!70, !71, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE16try_emplace_implIS4_JEEENSF_INS0_12raw_hash_setIS8_SB_SD_SI_E8iteratorEbEEOT_DpOT0_: argument 0"}
!71 = distinct !{!71, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE16try_emplace_implIS4_JEEENSF_INS0_12raw_hash_setIS8_SB_SD_SI_E8iteratorEbEEOT_DpOT0_"}
!72 = distinct !{!72, !73, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE11try_emplaceIS4_JELi0ELPS4_0EEENSF_INS0_12raw_hash_setIS8_SB_SD_SI_E8iteratorEbEEOS4_DpOT0_: argument 0"}
!73 = distinct !{!73, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__111__thread_idEN2rx10DisplayEGL20CurrentNativeContextEEENS_13hash_internal4HashIS4_EENS3_8equal_toIS4_EENS3_9allocatorINS3_4pairIKS4_S7_EEEEE11try_emplaceIS4_JELi0ELPS4_0EEENSF_INS0_12raw_hash_setIS8_SB_SD_SI_E8iteratorEbEEOS4_DpOT0_"}
!74 = !{i32 0, i32 33}
!75 = !{!"branch_weights", i32 1, i32 2000}
!76 = !{!77, !79}
!77 = distinct !{!77, !78, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!78 = distinct !{!78, !"_ZN3egl5Error7NoErrorEv"}
!79 = distinct !{!79, !80, !"_ZN3egl7NoErrorEv: argument 0"}
!80 = distinct !{!80, !"_ZN3egl7NoErrorEv"}
!81 = !{!82, !84}
!82 = distinct !{!82, !83, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!83 = distinct !{!83, !"_ZN3egl5Error7NoErrorEv"}
!84 = distinct !{!84, !85, !"_ZN3egl7NoErrorEv: argument 0"}
!85 = distinct !{!85, !"_ZN3egl7NoErrorEv"}
