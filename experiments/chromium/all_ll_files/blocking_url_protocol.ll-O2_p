; ModuleID = '../../media/filters/blocking_url_protocol.cc'
source_filename = "../../media/filters/blocking_url_protocol.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::BlockingUrlProtocol" = type { %"class.media::FFmpegURLProtocol", %"class.base::Lock", %"class.media::DataSource"*, %"class.base::RepeatingCallback", i8, [7 x i8], %"class.base::WaitableEvent", %"class.base::WaitableEvent", i32, i64 }
%"class.media::FFmpegURLProtocol" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1, i8, [7 x i8] }>
%class.scoped_refptr.1 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.media::DataSource" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }

$_ZN4base8internal7InvokerINS0_9BindStateIMN5media19BlockingUrlProtocolEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN5media19BlockingUrlProtocolEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN5media19BlockingUrlProtocolE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.media::BlockingUrlProtocol"*, i32, i8*)* @_ZN5media19BlockingUrlProtocol4ReadEiPh to i8*), i8* bitcast (i1 (%"class.media::BlockingUrlProtocol"*, i64*)* @_ZN5media19BlockingUrlProtocol11GetPositionEPl to i8*), i8* bitcast (i1 (%"class.media::BlockingUrlProtocol"*, i64)* @_ZN5media19BlockingUrlProtocol11SetPositionEl to i8*), i8* bitcast (i1 (%"class.media::BlockingUrlProtocol"*, i64*)* @_ZN5media19BlockingUrlProtocol7GetSizeEPl to i8*), i8* bitcast (i1 (%"class.media::BlockingUrlProtocol"*)* @_ZN5media19BlockingUrlProtocol11IsStreamingEv to i8*), i8* bitcast (void (%"class.media::BlockingUrlProtocol"*)* @_ZN5media19BlockingUrlProtocolD2Ev to i8*), i8* bitcast (void (%"class.media::BlockingUrlProtocol"*)* @_ZN5media19BlockingUrlProtocolD0Ev to i8*)] }, align 8

@_ZN5media19BlockingUrlProtocolC1EPNS_10DataSourceERKN4base17RepeatingCallbackIFvvEEE = hidden unnamed_addr alias void (%"class.media::BlockingUrlProtocol"*, %"class.media::DataSource"*, %"class.base::RepeatingCallback"*), void (%"class.media::BlockingUrlProtocol"*, %"class.media::DataSource"*, %"class.base::RepeatingCallback"*)* @_ZN5media19BlockingUrlProtocolC2EPNS_10DataSourceERKN4base17RepeatingCallbackIFvvEEE
@_ZN5media19BlockingUrlProtocolD1Ev = hidden unnamed_addr alias void (%"class.media::BlockingUrlProtocol"*), void (%"class.media::BlockingUrlProtocol"*)* @_ZN5media19BlockingUrlProtocolD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19BlockingUrlProtocolC2EPNS_10DataSourceERKN4base17RepeatingCallbackIFvvEEE(%"class.media::BlockingUrlProtocol"*, %"class.media::DataSource"*, %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5media19BlockingUrlProtocolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %5) #8
  %6 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 2
  store %"class.media::DataSource"* %1, %"class.media::DataSource"** %6, align 8
  %7 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %7, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %8) #8
  %9 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 4
  %10 = load %"class.media::DataSource"*, %"class.media::DataSource"** %6, align 8
  %11 = bitcast %"class.media::DataSource"* %10 to i1 (%"class.media::DataSource"*)***
  %12 = load i1 (%"class.media::DataSource"*)**, i1 (%"class.media::DataSource"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.media::DataSource"*)*, i1 (%"class.media::DataSource"*)** %12, i64 6
  %14 = load i1 (%"class.media::DataSource"*)*, i1 (%"class.media::DataSource"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.media::DataSource"* %10) #8
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %9, align 8
  %17 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 6
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %17, i32 0, i32 1) #8
  %18 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 7
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %18, i32 1, i32 1) #8
  %19 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 8
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 9
  store i64 0, i64* %20, align 8
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19BlockingUrlProtocolD2Ev(%"class.media::BlockingUrlProtocol"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5media19BlockingUrlProtocolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 7
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %3) #8
  %4 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 6
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %4) #8
  %5 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %6) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19BlockingUrlProtocolD0Ev(%"class.media::BlockingUrlProtocol"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5media19BlockingUrlProtocolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 7
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %3) #8
  %4 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 6
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %4) #8
  %5 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %6) #8
  %7 = bitcast %"class.media::BlockingUrlProtocol"* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19BlockingUrlProtocol5AbortEv(%"class.media::BlockingUrlProtocol"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 6
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %2) #8
  %3 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 2
  store %"class.media::DataSource"* null, %"class.media::DataSource"** %10, align 8
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #8
  ret void
}

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media19BlockingUrlProtocol4ReadEiPh(%"class.media::BlockingUrlProtocol"*, i32, i8*) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca [2 x %"class.base::WaitableEvent"*], align 16
  %7 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #8
  br label %13

13:                                               ; preds = %3, %11
  %14 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 2
  %15 = load %"class.media::DataSource"*, %"class.media::DataSource"** %14, align 8
  %16 = icmp eq %"class.media::DataSource"* %15, null
  %17 = icmp slt i32 %1, 0
  %18 = or i1 %17, %16
  br i1 %18, label %60, label %19

19:                                               ; preds = %13
  %20 = icmp eq i32 %1, 0
  br i1 %20, label %60, label %21

21:                                               ; preds = %19
  %22 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i64 -6148914691236517206, i64* %4, align 8
  %23 = bitcast %"class.media::DataSource"* %15 to i1 (%"class.media::DataSource"*, i64*)***
  %24 = load i1 (%"class.media::DataSource"*, i64*)**, i1 (%"class.media::DataSource"*, i64*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.media::DataSource"*, i64*)*, i1 (%"class.media::DataSource"*, i64*)** %24, i64 5
  %26 = load i1 (%"class.media::DataSource"*, i64*)*, i1 (%"class.media::DataSource"*, i64*)** %25, align 8
  %27 = call zeroext i1 %26(%"class.media::DataSource"* nonnull %15, i64* nonnull %4) #8
  %28 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 9
  %29 = load i64, i64* %28, align 8
  %30 = xor i1 %27, true
  %31 = load i64, i64* %4, align 8
  %32 = icmp slt i64 %29, %31
  %33 = or i1 %32, %30
  br i1 %33, label %34, label %63

34:                                               ; preds = %21
  %35 = load %"class.media::DataSource"*, %"class.media::DataSource"** %14, align 8
  %36 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 9
  %37 = ptrtoint %"class.media::BlockingUrlProtocol"* %0 to i64
  %38 = call i8* @_Znwm(i64 56) #9, !noalias !3
  %39 = bitcast i8* %38 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %39, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5media19BlockingUrlProtocolEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5media19BlockingUrlProtocolEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !3
  %40 = getelementptr inbounds i8, i8* %38, i64 32
  %41 = bitcast i8* %40 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.media::BlockingUrlProtocol"*, i32)* @_ZN5media19BlockingUrlProtocol19SignalReadCompletedEi to i64), i64 0>, <2 x i64>* %41, align 8, !noalias !3
  %42 = getelementptr inbounds i8, i8* %38, i64 48
  %43 = bitcast i8* %42 to i64*
  store i64 %37, i64* %43, align 8, !noalias !3
  %44 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %38, i8** %44, align 8, !alias.scope !3
  %45 = bitcast %"class.media::DataSource"* %35 to void (%"class.media::DataSource"*, i64, i32, i8*, %"class.base::OnceCallback"*)***
  %46 = load void (%"class.media::DataSource"*, i64, i32, i8*, %"class.base::OnceCallback"*)**, void (%"class.media::DataSource"*, i64, i32, i8*, %"class.base::OnceCallback"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.media::DataSource"*, i64, i32, i8*, %"class.base::OnceCallback"*)*, void (%"class.media::DataSource"*, i64, i32, i8*, %"class.base::OnceCallback"*)** %46, i64 2
  %48 = load void (%"class.media::DataSource"*, i64, i32, i8*, %"class.base::OnceCallback"*)*, void (%"class.media::DataSource"*, i64, i32, i8*, %"class.base::OnceCallback"*)** %47, align 8
  call void %48(%"class.media::DataSource"* %35, i64 %29, i32 %1, i8* %2, %"class.base::OnceCallback"* nonnull %5) #8
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  %50 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #8
  %51 = bitcast [2 x %"class.base::WaitableEvent"*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8
  %52 = getelementptr inbounds [2 x %"class.base::WaitableEvent"*], [2 x %"class.base::WaitableEvent"*]* %6, i64 0, i64 0
  %53 = getelementptr inbounds [2 x %"class.base::WaitableEvent"*], [2 x %"class.base::WaitableEvent"*]* %6, i64 0, i64 1
  %54 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 6
  store %"class.base::WaitableEvent"* %54, %"class.base::WaitableEvent"** %52, align 16
  %55 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 7
  store %"class.base::WaitableEvent"* %55, %"class.base::WaitableEvent"** %53, align 8
  %56 = notail call i64 @_ZN4base13WaitableEvent8WaitManyEPPS0_m(%"class.base::WaitableEvent"** nonnull %52, i64 2) #8
  %57 = getelementptr inbounds [2 x %"class.base::WaitableEvent"*], [2 x %"class.base::WaitableEvent"*]* %6, i64 0, i64 %56
  %58 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %57, align 8
  %59 = icmp eq %"class.base::WaitableEvent"* %58, %54
  br i1 %59, label %78, label %65

60:                                               ; preds = %13, %19
  %61 = phi i32 [ 0, %19 ], [ -5, %13 ]
  %62 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #8
  br label %80

63:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  %64 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #8
  br label %80

65:                                               ; preds = %34
  %66 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 8
  %67 = load i32, i32* %66, align 8
  switch i32 %67, label %74 [
    i32 -1, label %68
    i32 -2, label %78
  ]

68:                                               ; preds = %65
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %54) #8
  %69 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %69, align 8
  %71 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %70, i64 0, i32 1
  %72 = bitcast void ()** %71 to void (%"class.base::internal::BindStateBase"*)**
  %73 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %72, align 8
  call void %73(%"class.base::internal::BindStateBase"* %70) #8
  br label %78

74:                                               ; preds = %65
  %75 = sext i32 %67 to i64
  %76 = load i64, i64* %36, align 8
  %77 = add nsw i64 %76, %75
  store i64 %77, i64* %36, align 8
  br label %78

78:                                               ; preds = %65, %34, %74, %68
  %79 = phi i32 [ -5, %68 ], [ %67, %74 ], [ -5, %34 ], [ -5, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8
  br label %80

80:                                               ; preds = %63, %60, %78
  %81 = phi i32 [ %79, %78 ], [ -541478725, %63 ], [ %61, %60 ]
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19BlockingUrlProtocol19SignalReadCompletedEi(%"class.media::BlockingUrlProtocol"*, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 8
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 7
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare i64 @_ZN4base13WaitableEvent8WaitManyEPPS0_m(%"class.base::WaitableEvent"**, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media19BlockingUrlProtocol11GetPositionEPl(%"class.media::BlockingUrlProtocol"* nocapture readonly, i64* nocapture) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 9
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %1, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media19BlockingUrlProtocol11SetPositionEl(%"class.media::BlockingUrlProtocol"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #8
  br label %10

10:                                               ; preds = %2, %8
  %11 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  store i64 -6148914691236517206, i64* %3, align 8
  %12 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 2
  %13 = load %"class.media::DataSource"*, %"class.media::DataSource"** %12, align 8
  %14 = icmp eq %"class.media::DataSource"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.media::DataSource"* %13 to i1 (%"class.media::DataSource"*, i64*)***
  %17 = load i1 (%"class.media::DataSource"*, i64*)**, i1 (%"class.media::DataSource"*, i64*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.media::DataSource"*, i64*)*, i1 (%"class.media::DataSource"*, i64*)** %17, i64 5
  %19 = load i1 (%"class.media::DataSource"*, i64*)*, i1 (%"class.media::DataSource"*, i64*)** %18, align 8
  %20 = call zeroext i1 %19(%"class.media::DataSource"* nonnull %13, i64* nonnull %3) #8
  %21 = load i64, i64* %3, align 8
  %22 = icmp slt i64 %21, %1
  %23 = and i1 %20, %22
  %24 = icmp slt i64 %1, 0
  %25 = or i1 %24, %23
  br i1 %25, label %28, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 9
  store i64 %1, i64* %27, align 8
  br label %28

28:                                               ; preds = %10, %15, %26
  %29 = phi i1 [ true, %26 ], [ false, %15 ], [ false, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %30 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #8
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media19BlockingUrlProtocol7GetSizeEPl(%"class.media::BlockingUrlProtocol"*, i64*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 2
  %11 = load %"class.media::DataSource"*, %"class.media::DataSource"** %10, align 8
  %12 = icmp eq %"class.media::DataSource"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.media::DataSource"* %11 to i1 (%"class.media::DataSource"*, i64*)***
  %15 = load i1 (%"class.media::DataSource"*, i64*)**, i1 (%"class.media::DataSource"*, i64*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.media::DataSource"*, i64*)*, i1 (%"class.media::DataSource"*, i64*)** %15, i64 5
  %17 = load i1 (%"class.media::DataSource"*, i64*)*, i1 (%"class.media::DataSource"*, i64*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.media::DataSource"* nonnull %11, i64* %1) #8
  br label %19

19:                                               ; preds = %9, %13
  %20 = phi i1 [ %18, %13 ], [ false, %9 ]
  %21 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #8
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5media19BlockingUrlProtocol11IsStreamingEv(%"class.media::BlockingUrlProtocol"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5media19BlockingUrlProtocolEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.media::BlockingUrlProtocol"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.media::BlockingUrlProtocol"*, i32)**
  %22 = load void (%"class.media::BlockingUrlProtocol"*, i32)*, void (%"class.media::BlockingUrlProtocol"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.media::BlockingUrlProtocol"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.media::BlockingUrlProtocol"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.media::BlockingUrlProtocol"* %13, i32 %1) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5media19BlockingUrlProtocolEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media19BlockingUrlProtocolEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media19BlockingUrlProtocolEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIMN5media19BlockingUrlProtocolEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIMN5media19BlockingUrlProtocolEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!8 = !{i8 0, i8 2}
