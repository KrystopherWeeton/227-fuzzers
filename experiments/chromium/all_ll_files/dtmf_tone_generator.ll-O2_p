; ModuleID = '../../third_party/webrtc/modules/audio_coding/neteq/dtmf_tone_generator.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/neteq/dtmf_tone_generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::DtmfToneGenerator" = type { i32 (...)**, i8, i32, i32, i32, [2 x i16], [2 x i16] }
%"class.webrtc::AudioMultiVector" = type { i32 (...)**, %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::AudioVector"**, %"class.webrtc::AudioVector"**, %"class.std::__1::__compressed_pair.1" }
%"class.webrtc::AudioVector" = type { i32 (...)**, %"class.std::__1::unique_ptr", i64, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webrtc::AudioVector"** }

$_ZN6webrtc17DtmfToneGeneratorD2Ev = comdat any

$_ZN6webrtc17DtmfToneGeneratorD0Ev = comdat any

@_ZN6webrtc17DtmfToneGenerator7kCoeff1E = hidden local_unnamed_addr constant [4 x [16 x i32]] [[16 x i32] [i32 24219, i32 27980, i32 27980, i32 27980, i32 26956, i32 26956, i32 26956, i32 25701, i32 25701, i32 25701, i32 24219, i32 24219, i32 27980, i32 26956, i32 25701, i32 24219], [16 x i32] [i32 30556, i32 31548, i32 31548, i32 31548, i32 31281, i32 31281, i32 31281, i32 30951, i32 30951, i32 30951, i32 30556, i32 30556, i32 31548, i32 31281, i32 30951, i32 30556], [16 x i32] [i32 32210, i32 32462, i32 32462, i32 32462, i32 32394, i32 32394, i32 32394, i32 32311, i32 32311, i32 32311, i32 32210, i32 32210, i32 32462, i32 32394, i32 32311, i32 32210], [16 x i32] [i32 32520, i32 32632, i32 32632, i32 32632, i32 32602, i32 32602, i32 32602, i32 32564, i32 32564, i32 32564, i32 32520, i32 32520, i32 32632, i32 32602, i32 32564, i32 32520]], align 16
@_ZN6webrtc17DtmfToneGenerator7kCoeff2E = hidden local_unnamed_addr constant [4 x [16 x i32]] [[16 x i32] [i32 16325, i32 19073, i32 16325, i32 13085, i32 19073, i32 16325, i32 13085, i32 19073, i32 16325, i32 13085, i32 19073, i32 13085, i32 9315, i32 9315, i32 9315, i32 9315], [16 x i32] [i32 28361, i32 29144, i32 28361, i32 27409, i32 29144, i32 28361, i32 27409, i32 29144, i32 28361, i32 27409, i32 29144, i32 27409, i32 26258, i32 26258, i32 26258, i32 26258], [16 x i32] [i32 31647, i32 31849, i32 31647, i32 31400, i32 31849, i32 31647, i32 31400, i32 31849, i32 31647, i32 31400, i32 31849, i32 31400, i32 31098, i32 31098, i32 31098, i32 31098], [16 x i32] [i32 32268, i32 32359, i32 32268, i32 32157, i32 32359, i32 32268, i32 32157, i32 32359, i32 32268, i32 32157, i32 32359, i32 32157, i32 32022, i32 32022, i32 32022, i32 32022]], align 16
@_ZN6webrtc17DtmfToneGenerator11kInitValue1E = hidden local_unnamed_addr constant [4 x [16 x i32]] [[16 x i32] [i32 11036, i32 8528, i32 8528, i32 8528, i32 9315, i32 9315, i32 9315, i32 10163, i32 10163, i32 10163, i32 11036, i32 11036, i32 8528, i32 9315, i32 10163, i32 11036], [16 x i32] [i32 5918, i32 4429, i32 4429, i32 4429, i32 4879, i32 4879, i32 4879, i32 5380, i32 5380, i32 5380, i32 5918, i32 5918, i32 4429, i32 4879, i32 5380, i32 5918], [16 x i32] [i32 3010, i32 2235, i32 2235, i32 2235, i32 2468, i32 2468, i32 2468, i32 2728, i32 2728, i32 2728, i32 3010, i32 3010, i32 2235, i32 2468, i32 2728, i32 3010], [16 x i32] [i32 2013, i32 1493, i32 1493, i32 1493, i32 1649, i32 1649, i32 1649, i32 1823, i32 1823, i32 1823, i32 2013, i32 2013, i32 1493, i32 1649, i32 1823, i32 2013]], align 16
@_ZN6webrtc17DtmfToneGenerator11kInitValue2E = hidden local_unnamed_addr constant [4 x [16 x i32]] [[16 x i32] [i32 14206, i32 13323, i32 14206, i32 15021, i32 13323, i32 14206, i32 15021, i32 13323, i32 14206, i32 15021, i32 13323, i32 15021, i32 15708, i32 15708, i32 15708, i32 15708], [16 x i32] [i32 8207, i32 7490, i32 8207, i32 8979, i32 7490, i32 8207, i32 8979, i32 7490, i32 8207, i32 8979, i32 7490, i32 8979, i32 9801, i32 9801, i32 9801, i32 9801], [16 x i32] [i32 4249, i32 3853, i32 4249, i32 4685, i32 3853, i32 4249, i32 4685, i32 3853, i32 4249, i32 4685, i32 3853, i32 4685, i32 5164, i32 5164, i32 5164, i32 5164], [16 x i32] [i32 2851, i32 2582, i32 2851, i32 3148, i32 2582, i32 2851, i32 3148, i32 2582, i32 2851, i32 3148, i32 2582, i32 3148, i32 3476, i32 3476, i32 3476, i32 3476]], align 16
@_ZN6webrtc17DtmfToneGenerator10kAmplitudeE = hidden local_unnamed_addr constant [64 x i32] [i32 16141, i32 14386, i32 12821, i32 11427, i32 10184, i32 9077, i32 8090, i32 7210, i32 6426, i32 5727, i32 5104, i32 4549, i32 4054, i32 3614, i32 3221, i32 2870, i32 2558, i32 2280, i32 2032, i32 1811, i32 1614, i32 1439, i32 1282, i32 1143, i32 1018, i32 908, i32 809, i32 721, i32 643, i32 573, i32 510, i32 455, i32 405, i32 361, i32 322, i32 287, i32 256, i32 228, i32 203, i32 181, i32 161, i32 144, i32 128, i32 114, i32 102, i32 91, i32 81, i32 72, i32 64, i32 57, i32 51, i32 45, i32 41, i32 36, i32 32, i32 29, i32 26, i32 23, i32 20, i32 18, i32 16, i32 14, i32 13, i32 11], align 16
@_ZTVN6webrtc17DtmfToneGeneratorE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::DtmfToneGenerator"*)* @_ZN6webrtc17DtmfToneGeneratorD2Ev to i8*), i8* bitcast (void (%"class.webrtc::DtmfToneGenerator"*)* @_ZN6webrtc17DtmfToneGeneratorD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::DtmfToneGenerator"*, i32, i32, i32)* @_ZN6webrtc17DtmfToneGenerator4InitEiii to i8*), i8* bitcast (void (%"class.webrtc::DtmfToneGenerator"*)* @_ZN6webrtc17DtmfToneGenerator5ResetEv to i8*), i8* bitcast (i32 (%"class.webrtc::DtmfToneGenerator"*, i64, %"class.webrtc::AudioMultiVector"*)* @_ZN6webrtc17DtmfToneGenerator8GenerateEmPNS_16AudioMultiVectorE to i8*), i8* bitcast (i1 (%"class.webrtc::DtmfToneGenerator"*)* @_ZNK6webrtc17DtmfToneGenerator11initializedEv to i8*)] }, align 8

@_ZN6webrtc17DtmfToneGeneratorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::DtmfToneGenerator"*), void (%"class.webrtc::DtmfToneGenerator"*)* @_ZN6webrtc17DtmfToneGeneratorC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc17DtmfToneGeneratorC2Ev(%"class.webrtc::DtmfToneGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6webrtc17DtmfToneGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 3
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 4
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6webrtc17DtmfToneGenerator4InitEiii(%"class.webrtc::DtmfToneGenerator"* nocapture, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  switch i32 %1, label %9 [
    i32 8000, label %10
    i32 16000, label %6
    i32 32000, label %7
    i32 48000, label %8
  ]

6:                                                ; preds = %4
  br label %10

7:                                                ; preds = %4
  br label %10

8:                                                ; preds = %4
  br label %10

9:                                                ; preds = %4
  br label %10

10:                                               ; preds = %4, %6, %8, %9, %7
  %11 = phi i64 [ 1, %6 ], [ 2, %7 ], [ 3, %8 ], [ 1, %9 ], [ 0, %4 ]
  %12 = icmp ugt i32 %2, 15
  %13 = icmp ugt i32 %3, 63
  %14 = or i1 %12, %13
  br i1 %14, label %37, label %15

15:                                               ; preds = %10
  %16 = sext i32 %2 to i64
  %17 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* @_ZN6webrtc17DtmfToneGenerator7kCoeff1E, i64 0, i64 %11, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 2
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* @_ZN6webrtc17DtmfToneGenerator7kCoeff2E, i64 0, i64 %11, i64 %16
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 3
  store i32 %21, i32* %22, align 8
  %23 = sext i32 %3 to i64
  %24 = getelementptr inbounds [64 x i32], [64 x i32]* @_ZN6webrtc17DtmfToneGenerator10kAmplitudeE, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 4
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* @_ZN6webrtc17DtmfToneGenerator11kInitValue1E, i64 0, i64 %11, i64 %16
  %28 = load i32, i32* %27, align 4
  %29 = trunc i32 %28 to i16
  %30 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 5, i64 0
  store i16 %29, i16* %30, align 8
  %31 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 5, i64 1
  store i16 0, i16* %31, align 2
  %32 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]* @_ZN6webrtc17DtmfToneGenerator11kInitValue2E, i64 0, i64 %11, i64 %16
  %33 = load i32, i32* %32, align 4
  %34 = trunc i32 %33 to i16
  %35 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 6, i64 0
  store i16 %34, i16* %35, align 4
  %36 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 6, i64 1
  store i16 0, i16* %36, align 2
  store i8 1, i8* %5, align 8
  br label %37

37:                                               ; preds = %10, %15
  %38 = phi i32 [ 0, %15 ], [ -2, %10 ]
  ret i32 %38
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc17DtmfToneGenerator5ResetEv(%"class.webrtc::DtmfToneGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc17DtmfToneGenerator8GenerateEmPNS_16AudioMultiVectorE(%"class.webrtc::DtmfToneGenerator"* nocapture, i64, %"class.webrtc::AudioMultiVector"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %91, label %7

7:                                                ; preds = %3
  %8 = icmp eq %"class.webrtc::AudioMultiVector"* %2, null
  br i1 %8, label %91, label %9

9:                                                ; preds = %7
  %10 = bitcast %"class.webrtc::AudioMultiVector"* %2 to void (%"class.webrtc::AudioMultiVector"*, i64)***
  %11 = load void (%"class.webrtc::AudioMultiVector"*, i64)**, void (%"class.webrtc::AudioMultiVector"*, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %11, i64 16
  %13 = load void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %12, align 8
  tail call void %13(%"class.webrtc::AudioMultiVector"* nonnull %2, i64 %1) #5
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 5, i64 1
  %18 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 5, i64 0
  %19 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 6, i64 1
  %21 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 6, i64 0
  %22 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 4
  br label %32

23:                                               ; preds = %32, %9
  %24 = bitcast %"class.webrtc::AudioMultiVector"* %2 to i64 (%"class.webrtc::AudioMultiVector"*)***
  %25 = load i64 (%"class.webrtc::AudioMultiVector"*)**, i64 (%"class.webrtc::AudioMultiVector"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %25, i64 14
  %27 = load i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %26, align 8
  %28 = tail call i64 %27(%"class.webrtc::AudioMultiVector"* nonnull %2) #5
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %30, label %78

30:                                               ; preds = %23
  %31 = bitcast %"class.webrtc::AudioMultiVector"* %2 to void (%"class.webrtc::AudioMultiVector"*, i64, i64)***
  br label %80

32:                                               ; preds = %32, %15
  %33 = phi i64 [ 0, %15 ], [ %76, %32 ]
  %34 = load i32, i32* %16, align 4
  %35 = load i16, i16* %17, align 2
  %36 = sext i16 %35 to i32
  %37 = mul nsw i32 %34, %36
  %38 = add nsw i32 %37, 8192
  %39 = lshr i32 %38, 14
  %40 = load i16, i16* %18, align 8
  %41 = trunc i32 %39 to i16
  %42 = sub i16 %41, %40
  %43 = load i32, i32* %19, align 8
  %44 = load i16, i16* %20, align 2
  %45 = sext i16 %44 to i32
  %46 = mul nsw i32 %43, %45
  %47 = add nsw i32 %46, 8192
  %48 = lshr i32 %47, 14
  %49 = load i16, i16* %21, align 4
  %50 = trunc i32 %48 to i16
  %51 = sub i16 %50, %49
  store i16 %35, i16* %18, align 8
  store i16 %42, i16* %17, align 2
  store i16 %44, i16* %21, align 4
  store i16 %51, i16* %20, align 2
  %52 = sext i16 %42 to i32
  %53 = mul nsw i32 %52, 23171
  %54 = sext i16 %51 to i32
  %55 = shl nsw i32 %54, 15
  %56 = add nsw i32 %53, 16384
  %57 = add i32 %56, %55
  %58 = ashr i32 %57, 15
  %59 = load i32, i32* %22, align 4
  %60 = mul nsw i32 %58, %59
  %61 = add nsw i32 %60, 8192
  %62 = lshr i32 %61, 14
  %63 = trunc i32 %62 to i16
  %64 = tail call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* nonnull %2, i64 0) #5
  %65 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %64, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %64, i64 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %66, %33
  %70 = icmp ult i64 %69, %68
  %71 = select i1 %70, i64 0, i64 %68
  %72 = sub i64 %69, %71
  %73 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %64, i64 0, i32 1, i32 0, i32 0, i32 0
  %74 = load i16*, i16** %73, align 8
  %75 = getelementptr inbounds i16, i16* %74, i64 %72
  store i16 %63, i16* %75, align 2
  %76 = add nuw i64 %33, 1
  %77 = icmp eq i64 %76, %1
  br i1 %77, label %23, label %32

78:                                               ; preds = %80, %23
  %79 = trunc i64 %1 to i32
  br label %91

80:                                               ; preds = %30, %80
  %81 = phi i64 [ 1, %30 ], [ %85, %80 ]
  %82 = load void (%"class.webrtc::AudioMultiVector"*, i64, i64)**, void (%"class.webrtc::AudioMultiVector"*, i64, i64)*** %31, align 8
  %83 = getelementptr inbounds void (%"class.webrtc::AudioMultiVector"*, i64, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64, i64)** %82, i64 18
  %84 = load void (%"class.webrtc::AudioMultiVector"*, i64, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64, i64)** %83, align 8
  tail call void %84(%"class.webrtc::AudioMultiVector"* nonnull %2, i64 0, i64 %81) #5
  %85 = add nuw i64 %81, 1
  %86 = load i64 (%"class.webrtc::AudioMultiVector"*)**, i64 (%"class.webrtc::AudioMultiVector"*)*** %24, align 8
  %87 = getelementptr inbounds i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %86, i64 14
  %88 = load i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %87, align 8
  %89 = tail call i64 %88(%"class.webrtc::AudioMultiVector"* nonnull %2) #5
  %90 = icmp ult i64 %85, %89
  br i1 %90, label %80, label %78

91:                                               ; preds = %7, %3, %78
  %92 = phi i32 [ %79, %78 ], [ -1, %3 ], [ -2, %7 ]
  ret i32 %92
}

declare dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"*, i64) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc17DtmfToneGenerator11initializedEv(%"class.webrtc::DtmfToneGenerator"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::DtmfToneGenerator", %"class.webrtc::DtmfToneGenerator"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc17DtmfToneGeneratorD2Ev(%"class.webrtc::DtmfToneGenerator"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc17DtmfToneGeneratorD0Ev(%"class.webrtc::DtmfToneGenerator"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.webrtc::DtmfToneGenerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
