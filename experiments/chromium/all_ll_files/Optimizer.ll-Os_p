; ModuleID = '../../third_party/swiftshader/src/Reactor/Optimizer.cpp'
source_filename = "../../third_party/swiftshader/src/Reactor/Optimizer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.196", i32, [4 x i8], %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.138", %"class.std::__1::vector.243", %"class.Ice::CfgNode"*, %"class.std::__1::vector.249", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.0" = type <{ %"class.llvm::SmallVectorImpl.1", %"struct.llvm::SmallVectorStorage.6", [7 x i8] }>
%"class.llvm::SmallVectorImpl.1" = type { %"class.llvm::SmallVectorTemplateBase.2" }
%"class.llvm::SmallVectorTemplateBase.2" = type { %"class.llvm::SmallVectorTemplateCommon.3" }
%"class.llvm::SmallVectorTemplateCommon.3" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.4" }
%"struct.llvm::AlignedCharArrayUnion.4" = type { %"struct.llvm::AlignedCharArray.5" }
%"struct.llvm::AlignedCharArray.5" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.6" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.12", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.26", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.51", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.57", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.118", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.134", %"class.std::__1::unique_ptr.171", i8, %"class.std::__1::unique_ptr.177", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.183", %"class.llvm::SmallVector.189", %"class.llvm::SmallVector.189" }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.std::__1::vector.19" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.9" }
%"class.Ice::VariableDeclaration" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.66" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID", %"class.Ice::StringID", i32, %"class.std::__1::vector.59" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { i64*, i64*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { i64* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.113" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.85", %"class.std::__1::vector.92", %"class.std::__1::vector.106", %"class.std::__1::vector.94", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.101" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.94", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { double*, double*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { double* }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { i64*, i64*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64* }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.124"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.130, %union.anon.132, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.130 = type { i64 }
%union.anon.132 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.134" = type <{ [128 x %"class.std::__1::unique_ptr.135"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8, [6 x i8] }>
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID.278", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::StringID.278" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.Ice::LiveRange" = type { %"class.std::__1::vector.279", %"class.std::__1::unordered_map.285", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.281" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.Ice::sz_allocator.284" }
%"struct.Ice::sz_allocator.284" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unordered_map.285" = type { %"class.std::__1::__hash_table.286" }
%"class.std::__1::__hash_table.286" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.305", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.290"** }
%"struct.std::__1::__hash_node_base.290" = type { %"struct.std::__1::__hash_node_base.290"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator.292" }
%"class.std::__1::__bucket_list_deallocator.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.Ice::sz_allocator.295" }
%"struct.Ice::sz_allocator.295" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297", %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__hash_node_base.290" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.Ice::sz_allocator.299" }
%"struct.Ice::sz_allocator.299" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"class.llvm::SmallVector.183" = type { %"class.llvm::SmallVectorImpl.184", %"struct.llvm::SmallVectorStorage.188" }
%"class.llvm::SmallVectorImpl.184" = type { %"class.llvm::SmallVectorTemplateBase.185" }
%"class.llvm::SmallVectorTemplateBase.185" = type { %"class.llvm::SmallVectorTemplateCommon.186" }
%"class.llvm::SmallVectorTemplateCommon.186" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.187" }
%"struct.llvm::AlignedCharArrayUnion.187" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.188" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.187"] }
%"class.llvm::SmallVector.189" = type { %"class.llvm::SmallVectorImpl.190", %"struct.llvm::SmallVectorStorage.194" }
%"class.llvm::SmallVectorImpl.190" = type { %"class.llvm::SmallVectorTemplateBase.191" }
%"class.llvm::SmallVectorTemplateBase.191" = type { %"class.llvm::SmallVectorTemplateCommon.192" }
%"class.llvm::SmallVectorTemplateCommon.192" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.193" }
%"struct.llvm::AlignedCharArrayUnion.193" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.194" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.193"] }
%"class.Ice::StringID" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199", %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204", %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.Ice::sz_allocator.206" }
%"struct.Ice::sz_allocator.206" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.Ice::TargetLowering"* }
%"class.Ice::TargetLowering" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.222" }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.236" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.224", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.Ice::sz_allocator.235" }
%"struct.Ice::sz_allocator.235" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.226", i32, [4 x i8] }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.Ice::sz_allocator.231" }
%"struct.Ice::sz_allocator.231" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.Ice::sz_allocator.239" }
%"struct.Ice::sz_allocator.239" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.147", %"class.Ice::StringID", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.147" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.150", i8, [7 x i8] }>
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.153" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.152 }
%union.anon.152 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.245" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID", %"class.Ice::StringID" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.226", i32 }>
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.Ice::sz_allocator.248" }
%"struct.Ice::sz_allocator.248" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.195", i32, i8, i8, i8, i32, %"class.std::__1::vector.196", %"class.std::__1::vector.196", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::StringID.195" = type { i64 }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::vector.249" = type { %"class.std::__1::__vector_base.250" }
%"class.std::__1::__vector_base.250" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.274" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.251" }
%"class.std::__1::__hash_table.251" = type <{ %"class.std::__1::unique_ptr.252", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254", %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.255"** }
%"struct.std::__1::__hash_node_base.255" = type { %"struct.std::__1::__hash_node_base.255"* }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.std::__1::__bucket_list_deallocator.257" }
%"class.std::__1::__bucket_list_deallocator.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.Ice::sz_allocator.260" }
%"struct.Ice::sz_allocator.260" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.255" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.Ice::sz_allocator.264" }
%"struct.Ice::sz_allocator.264" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275", %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.Ice::sz_allocator.277" }
%"struct.Ice::sz_allocator.277" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"struct.rr::Nucleus::OptimizerReport" = type { i32, i32, i32 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.394", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.Ice::InstAlloca" = type <{ %"class.Ice::InstHighLevel.base", i32, i8, [7 x i8] }>
%"class.std::__1::vector.334" = type { %"class.std::__1::__vector_base.335" }
%"class.std::__1::__vector_base.335" = type { %"class.Ice::InstAlloca"**, %"class.Ice::InstAlloca"**, %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.Ice::InstAlloca"** }
%"class.std::__1::vector.341" = type { %"class.std::__1::__vector_base.342" }
%"class.std::__1::__vector_base.342" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.(anonymous namespace)::Optimizer::Uses" = type { %"class.std::__1::vector.318", %"class.std::__1::vector.318", %"class.std::__1::vector.318" }
%"class.std::__1::vector.318" = type { %"class.std::__1::__vector_base.319" }
%"class.std::__1::__vector_base.319" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.Ice::Inst"** }
%"class.(anonymous namespace)::Optimizer" = type { %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, %"class.std::__1::vector.311", %"struct.rr::Nucleus::OptimizerReport"* }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.Ice::ConstantPrimitive" = type { %"class.Ice::Constant.base", i32 }
%"class.Ice::Constant.base" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.Ice::InstIntrinsic" = type { %"class.Ice::InstHighLevel.base", %"struct.Ice::Intrinsics::IntrinsicInfo" }
%"struct.Ice::Intrinsics::IntrinsicInfo" = type { i32 }
%"struct.std::__1::__split_buffer.350" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.std::__1::allocator.17"* }
%"class.std::__1::allocator.17" = type { i8 }
%"class.llvm::raw_string_ostream" = type { %"class.llvm::raw_ostream.base", %"class.std::__1::basic_string"* }
%"class.llvm::raw_ostream.base" = type <{ i32 (...)**, i8*, i8*, i8*, i32 }>
%"class.llvm::FormattedNumber" = type <{ i64, i64, i32, i8, i8, i8, i8 }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::pair.348" = type { i8*, i64 }
%"class.Ice::LockedPtr.353" = type { %"class.Ice::StringPool"*, %"class.std::__1::mutex"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.362" = type { i8 }
%"struct.std::__1::default_delete.357" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.359" }
%"struct.std::__1::pair.359" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.354" }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.41"*, i8, [7 x i8] }>
%"class.std::__1::allocator.41" = type { i8 }

$_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_ = comdat any

$_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEE11__vallocateEm = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS_9allocatorIS3_EEEC2Em = comdat any

$_ZN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE6createEPNS_13GlobalContextENS_4TypeEi = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS_9allocatorIS3_EEE11__vallocateEm = comdat any

$_ZN3Ice13GlobalContext8allocateINS_17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EEEEEPNSt3__19enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES8_E4typeEv = comdat any

$_ZN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE8initNameEPNS_13GlobalContextE = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS6_17ConstantPrimitiveIiLNS6_7Operand11OperandKindE1EEEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESE_E4typeEvEUlvE_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEEC2EmmS6_ = comdat any

$_ZNSt3__16vectorINS_8functionIFvvEEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE = comdat any

$_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEED2Ev = comdat any

$_ZNK3Ice8Constant4emitEPKNS_3CfgE = comdat any

$_ZNK3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE4dumpEPKNS_3CfgERN4llvm11raw_ostreamE = comdat any

$_ZN3Ice7OperandD2Ev = comdat any

$_ZN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EED0Ev = comdat any

$_ZN3Ice7Operand9asBooleanEv = comdat any

$_ZNK3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE9hashValueEv = comdat any

$_ZN4llvm11raw_ostreamlsEPKc = comdat any

$_ZN4llvm11raw_ostreamlsENS_9StringRefE = comdat any

$_ZN3Ice8StringIDINS_22GlobalStringPoolTraitsEEC2EPKNS_13GlobalContextERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE = comdat any

$_ZN3Ice10StringPool14getOrAddStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS8_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISY_EEEEEEmOT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm = comdat any

$_ZNKSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEclEPS6_ = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS4_17ConstantPrimitiveIiLNS4_7Operand11OperandKindE1EEEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESC_E4typeEvEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EEE = comdat any

@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS4_17ConstantPrimitiveIiLNS4_7Operand11OperandKindE1EEEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESC_E4typeEvEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EEE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::Constant"*, %"class.Ice::Cfg"*)* @_ZNK3Ice8Constant4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::ConstantPrimitive"*, %"class.Ice::Cfg"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE4dumpEPKNS_3CfgERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::Operand"*)* @_ZN3Ice7OperandD2Ev to i8*), i8* bitcast (void (%"class.Ice::ConstantPrimitive"*)* @_ZN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EED0Ev to i8*), i8* bitcast (%"class.Ice::Variable"* (%"class.Ice::Operand"*)* @_ZN3Ice7Operand9asBooleanEv to i8*), i8* bitcast (i32 (%"class.Ice::ConstantPrimitive"*)* @_ZNK3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE9hashValueEv to i8*), i8* bitcast (void (%"class.Ice::ConstantPrimitive"*, %"class.Ice::TargetLowering"*)* @_ZNK3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE4emitEPNS_14TargetLoweringE to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [3 x i8] c"$F\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"$D\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c".L$\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@_ZTVN4llvm18raw_string_ostreamE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2rr8optimizeEPN3Ice3CfgEPNS_7Nucleus15OptimizerReportE(%"class.Ice::Cfg"*, %"struct.rr::Nucleus::OptimizerReport"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::unordered_map.372", align 8
  %4 = alloca %"class.Ice::InstAlloca"*, align 8
  %5 = alloca %"class.Ice::InstAlloca"*, align 8
  %6 = alloca %"class.std::__1::vector.334", align 8
  %7 = alloca %"class.std::__1::vector.341", align 8
  %8 = alloca %"struct.(anonymous namespace)::Optimizer::Uses", align 8
  %9 = alloca %"struct.(anonymous namespace)::Optimizer::Uses", align 8
  %10 = alloca %"struct.(anonymous namespace)::Optimizer::Uses", align 8
  %11 = alloca %"class.(anonymous namespace)::Optimizer", align 8
  %12 = bitcast %"class.(anonymous namespace)::Optimizer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %11, i64 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %11, i64 0, i32 2, i32 0, i32 1
  %17 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %11, i64 0, i32 3
  %18 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %11, i64 0, i32 2
  %19 = bitcast %"class.std::__1::vector.311"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #15
  store %"struct.rr::Nucleus::OptimizerReport"* %1, %"struct.rr::Nucleus::OptimizerReport"** %17, align 8
  store %"class.Ice::Cfg"* %0, %"class.Ice::Cfg"** %13, align 8
  %20 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %0, i64 0, i32 1
  %21 = bitcast %"class.Ice::GlobalContext"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.Ice::GlobalContext"** %14 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %0, i64 0, i32 14, i32 0, i32 0
  %25 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %24, align 8
  %26 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %0, i64 0, i32 14, i32 0, i32 1
  %27 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %26, align 8
  %28 = icmp eq %"class.Ice::CfgNode"** %25, %27
  br i1 %28, label %111, label %29

29:                                               ; preds = %2, %37
  %30 = phi %"class.Ice::CfgNode"** [ %38, %37 ], [ %25, %2 ]
  %31 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %30, align 8
  %32 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %31, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %31, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.llvm::ilist_node_base"** %32 to %"class.llvm::ilist_node_impl"**
  %35 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %34, align 8
  %36 = icmp eq %"class.llvm::ilist_node_impl"* %35, %33
  br i1 %36, label %37, label %40

37:                                               ; preds = %106, %29
  %38 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %30, i64 1
  %39 = icmp eq %"class.Ice::CfgNode"** %38, %27
  br i1 %39, label %111, label %29

40:                                               ; preds = %29, %106
  %41 = phi %"class.llvm::ilist_node_impl"* [ %109, %106 ], [ %35, %29 ]
  %42 = icmp eq %"class.llvm::ilist_node_impl"* %41, null
  %43 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %41, i64 -1, i32 0, i32 1
  %44 = bitcast %"class.llvm::ilist_node_base"** %43 to %"class.Ice::Inst"*
  %45 = select i1 %42, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %44
  %46 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %45, i64 0, i32 4
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %106

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %45, i64 0, i32 10
  %51 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %50, align 8
  %52 = icmp eq %"class.Ice::Variable"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %51, i64 0, i32 15
  %55 = bitcast i8** %54 to %"class.Ice::Inst"**
  store %"class.Ice::Inst"* %45, %"class.Ice::Inst"** %55, align 8
  br label %56

56:                                               ; preds = %53, %49
  %57 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %45, i64 0, i32 13
  %58 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %45, i64 0, i32 13, i32 0, i32 1
  %59 = bitcast %"class.Ice::Operand"*** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::vector.226"* %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = lshr exact i64 %63, 3
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %106, label %67

67:                                               ; preds = %56, %98
  %68 = phi i64 [ %99, %98 ], [ %62, %56 ]
  %69 = phi i64 [ %100, %98 ], [ %60, %56 ]
  %70 = phi i64 [ %101, %98 ], [ 0, %56 ]
  %71 = inttoptr i64 %68 to %"class.Ice::Operand"**
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %88, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %71, i64 %70
  %75 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %74, align 8
  br label %76

76:                                               ; preds = %82, %73
  %77 = phi i64 [ 0, %73 ], [ %83, %82 ]
  %78 = phi i32 [ 0, %73 ], [ %84, %82 ]
  %79 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %71, i64 %77
  %80 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %79, align 8
  %81 = icmp eq %"class.Ice::Operand"* %75, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = add nuw nsw i64 %77, 1
  %84 = add nuw i32 %78, 1
  %85 = icmp eq i64 %83, %70
  br i1 %85, label %88, label %76

86:                                               ; preds = %76
  %87 = trunc i64 %77 to i32
  br label %88

88:                                               ; preds = %82, %86, %67
  %89 = phi i32 [ 0, %67 ], [ %87, %86 ], [ %84, %82 ]
  %90 = zext i32 %89 to i64
  %91 = icmp eq i64 %70, %90
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %71, i64 %70
  %94 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %93, align 8
  %95 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* %94) #16
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer4Uses6insertEPN3Ice7OperandEPNS2_4InstE(%"struct.(anonymous namespace)::Optimizer::Uses"* %95, %"class.Ice::Operand"* %94, %"class.Ice::Inst"* %45) #16
  %96 = load i64, i64* %59, align 8
  %97 = load i64, i64* %61, align 8
  br label %98

98:                                               ; preds = %92, %88
  %99 = phi i64 [ %97, %92 ], [ %68, %88 ]
  %100 = phi i64 [ %96, %92 ], [ %69, %88 ]
  %101 = add nuw nsw i64 %70, 1
  %102 = sub i64 %100, %99
  %103 = lshr exact i64 %102, 3
  %104 = and i64 %103, 4294967295
  %105 = icmp ult i64 %101, %104
  br i1 %105, label %67, label %106

106:                                              ; preds = %98, %56, %40
  %107 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %41, i64 0, i32 0, i32 1
  %108 = bitcast %"class.llvm::ilist_node_base"** %107 to %"class.llvm::ilist_node_impl"**
  %109 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %108, align 8
  %110 = icmp eq %"class.llvm::ilist_node_impl"* %109, %33
  br i1 %110, label %37, label %40

111:                                              ; preds = %37, %2
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer17eliminateDeadCodeEv(%"class.(anonymous namespace)::Optimizer"* nonnull %11) #16
  %112 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %13, align 8
  %113 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %112, i64 0, i32 13
  %114 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %113, align 8
  %115 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %114, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %114, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %117 = bitcast %"class.llvm::ilist_node_base"** %115 to %"class.llvm::ilist_node_impl"**
  %118 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %117, align 8
  %119 = icmp eq %"class.llvm::ilist_node_impl"* %118, %116
  br i1 %119, label %254, label %120

120:                                              ; preds = %111, %242
  %121 = phi %"class.llvm::ilist_node_impl"* [ %245, %242 ], [ %118, %111 ]
  %122 = icmp eq %"class.llvm::ilist_node_impl"* %121, null
  %123 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %121, i64 -1, i32 0, i32 1
  %124 = bitcast %"class.llvm::ilist_node_base"** %123 to %"class.Ice::Inst"*
  %125 = select i1 %122, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %124
  %126 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %125, i64 0, i32 4
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %242

129:                                              ; preds = %120
  %130 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %125, i64 0, i32 2
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %247

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %125, i64 0, i32 10
  %135 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %134, align 8
  %136 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %135, i64 0, i32 0
  %137 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %135, i64 0, i32 0, i32 5
  %138 = load i8*, i8** %137, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %242, label %140

140:                                              ; preds = %133
  %141 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* %136) #16
  %142 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %141, i64 0, i32 0, i32 0, i32 1
  %143 = bitcast %"class.Ice::Inst"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %141 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %144, %146
  %148 = ashr exact i64 %147, 3
  %149 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %141, i64 0, i32 1
  %150 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %141, i64 0, i32 1, i32 0, i32 1
  %151 = bitcast %"class.Ice::Inst"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.std::__1::vector.318"* %149 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = sub i64 %152, %154
  %156 = ashr exact i64 %155, 3
  %157 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %141, i64 0, i32 2
  %158 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %141, i64 0, i32 2, i32 0, i32 1
  %159 = bitcast %"class.Ice::Inst"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.std::__1::vector.318"* %157 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 %160, %162
  %164 = ashr exact i64 %163, 3
  %165 = add nsw i64 %164, %156
  %166 = icmp eq i64 %148, %165
  %167 = inttoptr i64 %154 to %"class.Ice::Inst"**
  %168 = inttoptr i64 %152 to %"class.Ice::Inst"**
  br i1 %166, label %169, label %242

169:                                              ; preds = %140
  %170 = inttoptr i64 %160 to %"class.Ice::Inst"**
  %171 = inttoptr i64 %162 to %"class.Ice::Inst"**
  %172 = icmp eq %"class.Ice::Inst"** %171, %170
  br i1 %172, label %173, label %242

173:                                              ; preds = %169
  %174 = icmp eq %"class.Ice::Inst"** %167, %168
  br i1 %174, label %175, label %176

175:                                              ; preds = %238, %173
  store i8 1, i8* %126, align 8
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer7setUsesEPN3Ice7OperandEPNS0_4UsesE(%"class.Ice::Operand"* %136, %"struct.(anonymous namespace)::Optimizer::Uses"* null) #16
  br label %242

176:                                              ; preds = %173, %238
  %177 = phi %"class.Ice::Inst"** [ %240, %238 ], [ %167, %173 ]
  %178 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %177, align 8
  %179 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %178, i64 0, i32 10
  %180 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %179, align 8
  %181 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %180, i64 0, i32 0
  %182 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %180, i64 0, i32 0, i32 5
  %183 = load i8*, i8** %182, align 8
  %184 = icmp eq i8* %183, null
  br i1 %184, label %238, label %185

185:                                              ; preds = %176
  %186 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* %181) #16
  %187 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %186, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %187, align 8
  %189 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %186, i64 0, i32 0, i32 0, i32 1
  %190 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %189, align 8
  %191 = icmp eq %"class.Ice::Inst"** %188, %190
  br i1 %191, label %194, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %180, i64 0, i32 0, i32 1
  br label %195

194:                                              ; preds = %210, %185
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer7setUsesEPN3Ice7OperandEPNS0_4UsesE(%"class.Ice::Operand"* %181, %"struct.(anonymous namespace)::Optimizer::Uses"* null) #16
  br label %238

195:                                              ; preds = %210, %192
  %196 = phi %"class.Ice::Inst"** [ %188, %192 ], [ %211, %210 ]
  %197 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %196, align 8
  %198 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %197, i64 0, i32 13
  %199 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %197, i64 0, i32 13, i32 0, i32 1
  %200 = bitcast %"class.Ice::Operand"*** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.std::__1::vector.226"* %198 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = sub i64 %201, %203
  %205 = lshr exact i64 %204, 3
  %206 = trunc i64 %205 to i32
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %210, label %208

208:                                              ; preds = %195
  %209 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %197, i64 0, i32 13, i32 0, i32 0
  br label %213

210:                                              ; preds = %230, %195
  %211 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %196, i64 1
  %212 = icmp eq %"class.Ice::Inst"** %211, %190
  br i1 %212, label %194, label %195

213:                                              ; preds = %230, %208
  %214 = phi i64 [ %203, %208 ], [ %231, %230 ]
  %215 = phi i64 [ %201, %208 ], [ %232, %230 ]
  %216 = phi i64 [ 0, %208 ], [ %233, %230 ]
  %217 = inttoptr i64 %214 to %"class.Ice::Operand"**
  %218 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %217, i64 %216
  %219 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %218, align 8
  %220 = icmp eq %"class.Ice::Operand"* %219, %181
  br i1 %220, label %221, label %230

221:                                              ; preds = %213
  %222 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %14, align 8
  %223 = load i32, i32* %193, align 8
  %224 = call %"class.Ice::Constant"* @_ZN3Ice13GlobalContext16getConstantUndefENS_4TypeE(%"class.Ice::GlobalContext"* %222, i32 %223) #16
  %225 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %224, i64 0, i32 0
  %226 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %209, align 8
  %227 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %226, i64 %216
  store %"class.Ice::Operand"* %225, %"class.Ice::Operand"** %227, align 8
  %228 = load i64, i64* %200, align 8
  %229 = load i64, i64* %202, align 8
  br label %230

230:                                              ; preds = %221, %213
  %231 = phi i64 [ %214, %213 ], [ %229, %221 ]
  %232 = phi i64 [ %215, %213 ], [ %228, %221 ]
  %233 = add nuw nsw i64 %216, 1
  %234 = sub i64 %232, %231
  %235 = lshr exact i64 %234, 3
  %236 = and i64 %235, 4294967295
  %237 = icmp ult i64 %233, %236
  br i1 %237, label %213, label %210

238:                                              ; preds = %194, %176
  %239 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %178, i64 0, i32 4
  store i8 1, i8* %239, align 8
  %240 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %177, i64 1
  %241 = icmp eq %"class.Ice::Inst"** %240, %168
  br i1 %241, label %175, label %176

242:                                              ; preds = %175, %169, %140, %133, %120
  %243 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %121, i64 0, i32 0, i32 1
  %244 = bitcast %"class.llvm::ilist_node_base"** %243 to %"class.llvm::ilist_node_impl"**
  %245 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %244, align 8
  %246 = icmp eq %"class.llvm::ilist_node_impl"* %245, %116
  br i1 %246, label %247, label %120

247:                                              ; preds = %242, %129
  %248 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %13, align 8
  %249 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %248, i64 0, i32 13
  %250 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %249, align 8
  %251 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %250, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %252 = bitcast %"class.llvm::ilist_node_base"** %251 to %"class.llvm::ilist_node_impl"**
  %253 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %252, align 8
  br label %254

254:                                              ; preds = %247, %111
  %255 = phi %"class.llvm::ilist_node_impl"** [ %252, %247 ], [ %117, %111 ]
  %256 = phi %"class.llvm::ilist_node_impl"* [ %253, %247 ], [ %116, %111 ]
  %257 = phi %"class.Ice::CfgNode"* [ %250, %247 ], [ %114, %111 ]
  %258 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %257, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %259 = icmp eq %"class.llvm::ilist_node_impl"* %256, %258
  br i1 %259, label %439, label %260

260:                                              ; preds = %254
  %261 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %9 to i8*
  %262 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %9, i64 0, i32 0
  %263 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %9, i64 0, i32 1
  %264 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %9, i64 0, i32 2
  %265 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %9, i64 0, i32 0, i32 0, i32 0
  %266 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %9, i64 0, i32 0, i32 0, i32 1
  %267 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %10 to i8*
  %268 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %10, i64 0, i32 0
  %269 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %10, i64 0, i32 1
  %270 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %10, i64 0, i32 2
  %271 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %10, i64 0, i32 2, i32 0, i32 1
  %272 = bitcast %"class.Ice::Inst"*** %271 to i64*
  %273 = bitcast %"class.std::__1::vector.318"* %270 to i64*
  %274 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %10, i64 0, i32 1, i32 0, i32 1
  %275 = bitcast %"class.Ice::Inst"*** %274 to i64*
  %276 = bitcast %"class.std::__1::vector.318"* %269 to i64*
  %277 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %10, i64 0, i32 0, i32 0, i32 1
  %278 = bitcast %"class.Ice::Inst"*** %277 to i64*
  %279 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %10 to i64*
  %280 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %10, i64 0, i32 2, i32 0, i32 0
  %281 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %10, i64 0, i32 1, i32 0, i32 0
  %282 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %10, i64 0, i32 0, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %9, i64 0, i32 2, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %9, i64 0, i32 2, i32 0, i32 1
  %285 = bitcast %"class.Ice::Inst"*** %284 to i64*
  %286 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %9, i64 0, i32 1, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %9, i64 0, i32 1, i32 0, i32 1
  %288 = bitcast %"class.Ice::Inst"*** %287 to i64*
  %289 = bitcast %"class.Ice::Inst"*** %266 to i64*
  br label %290

290:                                              ; preds = %427, %260
  %291 = phi %"class.llvm::ilist_node_impl"* [ %256, %260 ], [ %430, %427 ]
  %292 = icmp eq %"class.llvm::ilist_node_impl"* %291, null
  %293 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %291, i64 -1, i32 0, i32 1
  %294 = bitcast %"class.llvm::ilist_node_base"** %293 to %"class.Ice::Inst"*
  %295 = select i1 %292, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %294
  %296 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %295, i64 0, i32 4
  %297 = load i8, i8* %296, align 8, !range !2
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %427

299:                                              ; preds = %290
  %300 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %295, i64 0, i32 2
  %301 = load i32, i32* %300, align 8
  %302 = icmp ne i32 %301, 1
  %303 = or i1 %292, %302
  br i1 %303, label %432, label %304

304:                                              ; preds = %299
  %305 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %295, i64 0, i32 10
  %306 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %305, align 8
  %307 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %306, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %261) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 -86, i64 72, i1 false) #15
  %308 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* %307) #16
  %309 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %308, i64 0, i32 0
  call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"* nonnull %262, %"class.std::__1::vector.318"* dereferenceable(24) %309) #16
  %310 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %308, i64 0, i32 1
  call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"* %263, %"class.std::__1::vector.318"* dereferenceable(24) %310) #16
  %311 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %308, i64 0, i32 2
  call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"* %264, %"class.std::__1::vector.318"* dereferenceable(24) %311) #16
  %312 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %265, align 8
  %313 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %266, align 8
  %314 = icmp eq %"class.Ice::Inst"** %312, %313
  br i1 %314, label %315, label %333

315:                                              ; preds = %423, %304
  %316 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %283, align 8
  %317 = icmp eq %"class.Ice::Inst"** %316, null
  br i1 %317, label %321, label %318

318:                                              ; preds = %315
  %319 = ptrtoint %"class.Ice::Inst"** %316 to i64
  store i64 %319, i64* %285, align 8
  %320 = bitcast %"class.Ice::Inst"** %316 to i8*
  call void @_ZdlPv(i8* %320) #17
  br label %321

321:                                              ; preds = %318, %315
  %322 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %286, align 8
  %323 = icmp eq %"class.Ice::Inst"** %322, null
  br i1 %323, label %327, label %324

324:                                              ; preds = %321
  %325 = ptrtoint %"class.Ice::Inst"** %322 to i64
  store i64 %325, i64* %288, align 8
  %326 = bitcast %"class.Ice::Inst"** %322 to i8*
  call void @_ZdlPv(i8* %326) #17
  br label %327

327:                                              ; preds = %324, %321
  %328 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %265, align 8
  %329 = icmp eq %"class.Ice::Inst"** %328, null
  br i1 %329, label %426, label %330

330:                                              ; preds = %327
  %331 = ptrtoint %"class.Ice::Inst"** %328 to i64
  store i64 %331, i64* %289, align 8
  %332 = bitcast %"class.Ice::Inst"** %328 to i8*
  call void @_ZdlPv(i8* %332) #17
  br label %426

333:                                              ; preds = %304, %423
  %334 = phi %"class.Ice::Inst"** [ %424, %423 ], [ %312, %304 ]
  %335 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %334, align 8
  %336 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %335, i64 0, i32 2
  %337 = load i32, i32* %336, align 8
  %338 = icmp eq i32 %337, 15
  br i1 %338, label %349, label %339

339:                                              ; preds = %333
  %340 = icmp ne i32 %337, 9
  %341 = icmp eq %"class.Ice::Inst"* %335, null
  %342 = or i1 %341, %340
  br i1 %342, label %423, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %335, i64 0, i32 15
  %345 = bitcast [4 x i8]* %344 to i32*
  %346 = load i32, i32* %345, align 4
  %347 = and i32 %346, 536870911
  %348 = icmp eq i32 %347, 32
  br i1 %348, label %349, label %423

349:                                              ; preds = %343, %333
  %350 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %335, i64 0, i32 13, i32 0, i32 0
  %351 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %350, align 8
  %352 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %351, align 8
  %353 = icmp eq %"class.Ice::Operand"* %352, %307
  br i1 %353, label %354, label %423

354:                                              ; preds = %349
  %355 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %351, i64 1
  %356 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %355, align 8
  %357 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %356, i64 0, i32 2
  %358 = load i32, i32* %357, align 4
  %359 = add i32 %358, -18
  %360 = icmp ugt i32 %359, 14
  %361 = icmp eq %"class.Ice::Operand"* %356, null
  %362 = or i1 %361, %360
  br i1 %362, label %423, label %363

363:                                              ; preds = %354
  %364 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %356, i64 4, i32 5
  %365 = bitcast i8** %364 to %"class.Ice::Inst"**
  %366 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %365, align 8
  %367 = icmp eq %"class.Ice::Inst"* %366, null
  br i1 %367, label %423, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %366, i64 0, i32 2
  %370 = load i32, i32* %369, align 8
  %371 = icmp eq i32 %370, 1
  br i1 %371, label %372, label %423

372:                                              ; preds = %368
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %267) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %267, i8 -86, i64 72, i1 false) #15
  %373 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* nonnull %356) #16
  %374 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %373, i64 0, i32 0
  call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"* nonnull %268, %"class.std::__1::vector.318"* dereferenceable(24) %374) #16
  %375 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %373, i64 0, i32 1
  call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"* %269, %"class.std::__1::vector.318"* dereferenceable(24) %375) #16
  %376 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %373, i64 0, i32 2
  call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"* %270, %"class.std::__1::vector.318"* dereferenceable(24) %376) #16
  %377 = load i64, i64* %272, align 8
  %378 = load i64, i64* %273, align 8
  %379 = sub i64 %377, %378
  %380 = icmp eq i64 %379, 8
  %381 = inttoptr i64 %378 to %"class.Ice::Inst"**
  br i1 %380, label %382, label %404

382:                                              ; preds = %372
  %383 = load i64, i64* %275, align 8
  %384 = load i64, i64* %276, align 8
  %385 = sub i64 %383, %384
  %386 = ashr exact i64 %385, 3
  %387 = load i64, i64* %278, align 8
  %388 = load i64, i64* %279, align 8
  %389 = sub i64 %387, %388
  %390 = ashr exact i64 %389, 3
  %391 = add nsw i64 %390, -1
  %392 = icmp eq i64 %386, %391
  %393 = inttoptr i64 %384 to %"class.Ice::Inst"**
  %394 = inttoptr i64 %383 to %"class.Ice::Inst"**
  br i1 %392, label %395, label %404

395:                                              ; preds = %382
  %396 = icmp eq %"class.Ice::Inst"** %393, %394
  br i1 %396, label %397, label %399

397:                                              ; preds = %399, %395
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer17deleteInstructionEPN3Ice4InstE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Inst"* %335) #16
  %398 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %280, align 8
  br label %404

399:                                              ; preds = %395, %399
  %400 = phi %"class.Ice::Inst"** [ %402, %399 ], [ %393, %395 ]
  %401 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %400, align 8
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer7replaceEPN3Ice4InstEPNS1_7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Inst"* %401, %"class.Ice::Operand"* %307) #16
  %402 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %400, i64 1
  %403 = icmp eq %"class.Ice::Inst"** %402, %394
  br i1 %403, label %397, label %399

404:                                              ; preds = %397, %382, %372
  %405 = phi %"class.Ice::Inst"** [ %398, %397 ], [ %381, %382 ], [ %381, %372 ]
  %406 = icmp eq %"class.Ice::Inst"** %405, null
  br i1 %406, label %410, label %407

407:                                              ; preds = %404
  %408 = ptrtoint %"class.Ice::Inst"** %405 to i64
  store i64 %408, i64* %272, align 8
  %409 = bitcast %"class.Ice::Inst"** %405 to i8*
  call void @_ZdlPv(i8* %409) #17
  br label %410

410:                                              ; preds = %407, %404
  %411 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %281, align 8
  %412 = icmp eq %"class.Ice::Inst"** %411, null
  br i1 %412, label %416, label %413

413:                                              ; preds = %410
  %414 = ptrtoint %"class.Ice::Inst"** %411 to i64
  store i64 %414, i64* %275, align 8
  %415 = bitcast %"class.Ice::Inst"** %411 to i8*
  call void @_ZdlPv(i8* %415) #17
  br label %416

416:                                              ; preds = %413, %410
  %417 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %282, align 8
  %418 = icmp eq %"class.Ice::Inst"** %417, null
  br i1 %418, label %422, label %419

419:                                              ; preds = %416
  %420 = ptrtoint %"class.Ice::Inst"** %417 to i64
  store i64 %420, i64* %278, align 8
  %421 = bitcast %"class.Ice::Inst"** %417 to i8*
  call void @_ZdlPv(i8* %421) #17
  br label %422

422:                                              ; preds = %419, %416
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %267) #15
  br label %423

423:                                              ; preds = %422, %368, %363, %354, %349, %343, %339
  %424 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %334, i64 1
  %425 = icmp eq %"class.Ice::Inst"** %424, %313
  br i1 %425, label %315, label %333

426:                                              ; preds = %330, %327
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %261) #15
  br label %427

427:                                              ; preds = %426, %290
  %428 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %291, i64 0, i32 0, i32 1
  %429 = bitcast %"class.llvm::ilist_node_base"** %428 to %"class.llvm::ilist_node_impl"**
  %430 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %429, align 8
  %431 = icmp eq %"class.llvm::ilist_node_impl"* %430, %258
  br i1 %431, label %432, label %290

432:                                              ; preds = %427, %299
  %433 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %13, align 8
  %434 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %433, i64 0, i32 13
  %435 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %434, align 8
  %436 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %435, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %437 = bitcast %"class.llvm::ilist_node_base"** %436 to %"class.llvm::ilist_node_impl"**
  %438 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %437, align 8
  br label %439

439:                                              ; preds = %432, %254
  %440 = phi %"class.llvm::ilist_node_impl"** [ %437, %432 ], [ %255, %254 ]
  %441 = phi %"class.llvm::ilist_node_impl"* [ %438, %432 ], [ %256, %254 ]
  %442 = phi %"class.Ice::CfgNode"* [ %435, %432 ], [ %257, %254 ]
  %443 = bitcast %"class.std::__1::vector.334"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %443) #15
  %444 = getelementptr inbounds %"class.std::__1::vector.334", %"class.std::__1::vector.334"* %6, i64 0, i32 0, i32 0
  %445 = getelementptr inbounds %"class.std::__1::vector.334", %"class.std::__1::vector.334"* %6, i64 0, i32 0, i32 1
  %446 = getelementptr inbounds %"class.std::__1::vector.334", %"class.std::__1::vector.334"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %443, i8 0, i64 24, i1 false) #15
  %447 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %442, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %448 = icmp eq %"class.llvm::ilist_node_impl"* %441, %447
  br i1 %448, label %449, label %451

449:                                              ; preds = %439
  %450 = bitcast %"class.Ice::InstAlloca"*** %445 to i64*
  br label %763

451:                                              ; preds = %439
  %452 = bitcast %"class.std::__1::vector.341"* %7 to i8*
  %453 = getelementptr inbounds %"class.std::__1::vector.341", %"class.std::__1::vector.341"* %7, i64 0, i32 0, i32 0
  %454 = getelementptr inbounds %"class.std::__1::vector.341", %"class.std::__1::vector.341"* %7, i64 0, i32 0, i32 1
  %455 = bitcast %"class.Ice::InstAlloca"*** %445 to i64*
  %456 = bitcast %"class.std::__1::vector.334"* %6 to i64*
  %457 = bitcast %"class.Ice::InstAlloca"*** %446 to i64*
  %458 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %8 to i8*
  %459 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %8, i64 0, i32 0
  %460 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %8, i64 0, i32 1
  %461 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %8, i64 0, i32 2
  %462 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %8, i64 0, i32 0, i32 0, i32 0
  %463 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %8, i64 0, i32 0, i32 0, i32 1
  %464 = bitcast %"class.std::__1::vector.341"* %7 to i64**
  %465 = bitcast %"class.std::__1::vector.341"* %7 to %"class.Ice::Operand"***
  %466 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %8, i64 0, i32 2, i32 0, i32 0
  %467 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %8, i64 0, i32 2, i32 0, i32 1
  %468 = bitcast %"class.Ice::Inst"*** %467 to i64*
  %469 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %8, i64 0, i32 1, i32 0, i32 0
  %470 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %8, i64 0, i32 1, i32 0, i32 1
  %471 = bitcast %"class.Ice::Inst"*** %470 to i64*
  %472 = bitcast %"class.Ice::Inst"*** %463 to i64*
  %473 = bitcast %"class.Ice::Variable"*** %454 to i64*
  br label %474

474:                                              ; preds = %755, %451
  %475 = phi %"class.llvm::ilist_node_impl"* [ %441, %451 ], [ %758, %755 ]
  %476 = icmp eq %"class.llvm::ilist_node_impl"* %475, null
  %477 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %475, i64 -1, i32 0, i32 1
  %478 = bitcast %"class.llvm::ilist_node_base"** %477 to %"class.Ice::Inst"*
  %479 = select i1 %476, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %478
  %480 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %479, i64 0, i32 4
  %481 = load i8, i8* %480, align 8, !range !2
  %482 = icmp eq i8 %481, 0
  br i1 %482, label %483, label %755

483:                                              ; preds = %474
  %484 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %479, i64 0, i32 2
  %485 = load i32, i32* %484, align 8
  %486 = icmp ne i32 %485, 1
  %487 = or i1 %476, %486
  br i1 %487, label %760, label %488

488:                                              ; preds = %483
  %489 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %479, i64 0, i32 13, i32 0, i32 0
  %490 = bitcast %"class.Ice::Operand"*** %489 to %"class.Ice::ConstantPrimitive"***
  %491 = load %"class.Ice::ConstantPrimitive"**, %"class.Ice::ConstantPrimitive"*** %490, align 8
  %492 = load %"class.Ice::ConstantPrimitive"*, %"class.Ice::ConstantPrimitive"** %491, align 8
  %493 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %492, i64 0, i32 1
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %479, i64 0, i32 15
  %496 = bitcast [4 x i8]* %495 to i32*
  %497 = load i32, i32* %496, align 4
  %498 = udiv i32 %494, %497
  %499 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %479, i64 0, i32 10
  %500 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %499, align 8
  %501 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %500, i64 0, i32 0
  %502 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* %501) #16
  %503 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %502, i64 0, i32 0, i32 0, i32 0
  %504 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %503, align 8
  %505 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %502, i64 0, i32 0, i32 0, i32 1
  %506 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %505, align 8
  %507 = icmp eq %"class.Ice::Inst"** %504, %506
  br i1 %507, label %566, label %508

508:                                              ; preds = %488, %563
  %509 = phi %"class.Ice::Inst"** [ %564, %563 ], [ %504, %488 ]
  %510 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %509, align 8
  %511 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %510, i64 0, i32 2
  %512 = load i32, i32* %511, align 8
  %513 = icmp eq i32 %512, 11
  br i1 %513, label %524, label %514

514:                                              ; preds = %508
  %515 = icmp ne i32 %512, 9
  %516 = icmp eq %"class.Ice::Inst"* %510, null
  %517 = or i1 %516, %515
  br i1 %517, label %529, label %518

518:                                              ; preds = %514
  %519 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %510, i64 0, i32 15
  %520 = bitcast [4 x i8]* %519 to i32*
  %521 = load i32, i32* %520, align 4
  %522 = and i32 %521, 536870911
  %523 = icmp eq i32 %522, 25
  br i1 %523, label %524, label %531

524:                                              ; preds = %518, %508
  %525 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %510, i64 0, i32 13, i32 0, i32 0
  %526 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %525, align 8
  %527 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %526, align 8
  %528 = icmp eq %"class.Ice::Operand"* %527, %501
  br i1 %528, label %563, label %531

529:                                              ; preds = %514
  %530 = icmp eq i32 %512, 15
  br i1 %530, label %541, label %531

531:                                              ; preds = %524, %529, %518
  %532 = icmp ne i32 %512, 9
  %533 = icmp eq %"class.Ice::Inst"* %510, null
  %534 = or i1 %533, %532
  br i1 %534, label %547, label %535

535:                                              ; preds = %531
  %536 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %510, i64 0, i32 15
  %537 = bitcast [4 x i8]* %536 to i32*
  %538 = load i32, i32* %537, align 4
  %539 = and i32 %538, 536870911
  %540 = icmp eq i32 %539, 32
  br i1 %540, label %541, label %755

541:                                              ; preds = %535, %529
  %542 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %510, i64 0, i32 13, i32 0, i32 0
  %543 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %542, align 8
  %544 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %543, i64 1
  %545 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %544, align 8
  %546 = icmp eq %"class.Ice::Operand"* %545, %501
  br i1 %546, label %563, label %755

547:                                              ; preds = %531
  %548 = icmp ne i32 %512, 2
  %549 = or i1 %533, %548
  br i1 %549, label %755, label %550

550:                                              ; preds = %547
  %551 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %510, i64 0, i32 15
  %552 = bitcast [4 x i8]* %551 to i32*
  %553 = load i32, i32* %552, align 4
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %755

555:                                              ; preds = %550
  %556 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %510, i64 0, i32 13, i32 0, i32 0
  %557 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %556, align 8
  %558 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %557, i64 1
  %559 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %558, align 8
  %560 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %559, i64 0, i32 2
  %561 = load i32, i32* %560, align 4
  %562 = icmp ugt i32 %561, 17
  br i1 %562, label %755, label %563

563:                                              ; preds = %555, %541, %524
  %564 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %509, i64 1
  %565 = icmp eq %"class.Ice::Inst"** %564, %506
  br i1 %565, label %566, label %508

566:                                              ; preds = %563, %488
  store i8 1, i8* %480, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %452) #15
  %567 = zext i32 %498 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %452, i8 -86, i64 24, i1 false) #15
  call void @_ZNSt3__16vectorIPN3Ice8VariableENS_9allocatorIS3_EEEC2Em(%"class.std::__1::vector.341"* nonnull %7, i64 %567) #16
  %568 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %14, align 8
  %569 = call %"class.Ice::ConstantPrimitive"* @_ZN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE6createEPNS_13GlobalContextENS_4TypeEi(%"class.Ice::GlobalContext"* %568, i32 4, i32 %497) #16
  %570 = icmp ugt i32 %497, %494
  br i1 %570, label %573, label %571

571:                                              ; preds = %566
  %572 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %569, i64 0, i32 0, i32 0
  br label %581

573:                                              ; preds = %652, %566
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %458) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %458, i8 -86, i64 72, i1 false) #15
  %574 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* %501) #16
  %575 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %574, i64 0, i32 0
  call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"* nonnull %459, %"class.std::__1::vector.318"* dereferenceable(24) %575) #16
  %576 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %574, i64 0, i32 1
  call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"* %460, %"class.std::__1::vector.318"* dereferenceable(24) %576) #16
  %577 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %574, i64 0, i32 2
  call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"* %461, %"class.std::__1::vector.318"* dereferenceable(24) %577) #16
  %578 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %462, align 8
  %579 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %463, align 8
  %580 = icmp eq %"class.Ice::Inst"** %578, %579
  br i1 %580, label %655, label %680

581:                                              ; preds = %652, %571
  %582 = phi i64 [ 0, %571 ], [ %653, %652 ]
  %583 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %13, align 8
  %584 = call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %583, i32 5) #16
  %585 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %453, align 8
  %586 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %585, i64 %582
  store %"class.Ice::Variable"* %584, %"class.Ice::Variable"** %586, align 8
  %587 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %13, align 8
  %588 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %453, align 8
  %589 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %588, i64 %582
  %590 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %589, align 8
  %591 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %587, i64 0, i32 0, i32 0, i32 0, i32 0
  %592 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %591, align 8
  %593 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %592, i64 112, i64 8) #16
  %594 = bitcast i8* %593 to %"class.Ice::InstAlloca"*
  call void @_ZN3Ice10InstAllocaC1EPNS_3CfgEPNS_8VariableEPNS_7OperandEj(%"class.Ice::InstAlloca"* %594, %"class.Ice::Cfg"* %587, %"class.Ice::Variable"* %590, %"class.Ice::Operand"* %572, i32 %497) #16
  %595 = ptrtoint i8* %593 to i64
  %596 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %453, align 8
  %597 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %596, i64 %582
  %598 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %597, align 8
  %599 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %598, i64 0, i32 15
  store i8* %593, i8** %599, align 8
  %600 = load %"class.Ice::InstAlloca"**, %"class.Ice::InstAlloca"*** %445, align 8
  %601 = load %"class.Ice::InstAlloca"**, %"class.Ice::InstAlloca"*** %446, align 8
  %602 = icmp eq %"class.Ice::InstAlloca"** %600, %601
  %603 = ptrtoint %"class.Ice::InstAlloca"** %601 to i64
  br i1 %602, label %608, label %604

604:                                              ; preds = %581
  %605 = bitcast %"class.Ice::InstAlloca"** %600 to i64*
  store i64 %595, i64* %605, align 8
  %606 = getelementptr inbounds %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %600, i64 1
  %607 = ptrtoint %"class.Ice::InstAlloca"** %606 to i64
  store i64 %607, i64* %455, align 8
  br label %652

608:                                              ; preds = %581
  %609 = ptrtoint %"class.Ice::InstAlloca"** %600 to i64
  %610 = load i64, i64* %456, align 8
  %611 = sub i64 %609, %610
  %612 = ashr exact i64 %611, 3
  %613 = add nsw i64 %612, 1
  %614 = icmp ugt i64 %613, 2305843009213693951
  br i1 %614, label %615, label %617

615:                                              ; preds = %608
  %616 = bitcast %"class.std::__1::vector.334"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %616) #18
  unreachable

617:                                              ; preds = %608
  %618 = sub i64 %603, %610
  %619 = ashr exact i64 %618, 3
  %620 = icmp ult i64 %619, 1152921504606846975
  br i1 %620, label %621, label %629

621:                                              ; preds = %617
  %622 = ashr exact i64 %618, 2
  %623 = icmp ult i64 %622, %613
  %624 = select i1 %623, i64 %613, i64 %622
  %625 = icmp eq i64 %624, 0
  br i1 %625, label %634, label %626

626:                                              ; preds = %621
  %627 = icmp ugt i64 %624, 2305843009213693951
  br i1 %627, label %628, label %629

628:                                              ; preds = %626
  call void @abort() #18
  unreachable

629:                                              ; preds = %626, %617
  %630 = phi i64 [ %624, %626 ], [ 2305843009213693951, %617 ]
  %631 = shl i64 %630, 3
  %632 = call i8* @_Znwm(i64 %631) #17
  %633 = bitcast i8* %632 to %"class.Ice::InstAlloca"**
  br label %634

634:                                              ; preds = %629, %621
  %635 = phi i64 [ %630, %629 ], [ 0, %621 ]
  %636 = phi i8* [ %632, %629 ], [ null, %621 ]
  %637 = phi %"class.Ice::InstAlloca"** [ %633, %629 ], [ null, %621 ]
  %638 = getelementptr inbounds %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %637, i64 %612
  %639 = getelementptr inbounds %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %637, i64 %635
  %640 = ptrtoint %"class.Ice::InstAlloca"** %639 to i64
  %641 = bitcast %"class.Ice::InstAlloca"** %638 to i64*
  store i64 %595, i64* %641, align 8
  %642 = getelementptr inbounds %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %638, i64 1
  %643 = ptrtoint %"class.Ice::InstAlloca"** %642 to i64
  %644 = ptrtoint %"class.Ice::InstAlloca"** %637 to i64
  %645 = icmp sgt i64 %611, 0
  br i1 %645, label %646, label %648

646:                                              ; preds = %634
  %647 = inttoptr i64 %610 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %636, i8* align 8 %647, i64 %611, i1 false) #15
  br label %648

648:                                              ; preds = %646, %634
  store i64 %644, i64* %456, align 8
  store i64 %643, i64* %455, align 8
  store i64 %640, i64* %457, align 8
  %649 = icmp eq i64 %610, 0
  br i1 %649, label %652, label %650

650:                                              ; preds = %648
  %651 = inttoptr i64 %610 to i8*
  call void @_ZdlPv(i8* %651) #17
  br label %652

652:                                              ; preds = %650, %648, %604
  %653 = add nuw nsw i64 %582, 1
  %654 = icmp ult i64 %653, %567
  br i1 %654, label %581, label %573

655:                                              ; preds = %752, %573
  %656 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %466, align 8
  %657 = icmp eq %"class.Ice::Inst"** %656, null
  br i1 %657, label %661, label %658

658:                                              ; preds = %655
  %659 = ptrtoint %"class.Ice::Inst"** %656 to i64
  store i64 %659, i64* %468, align 8
  %660 = bitcast %"class.Ice::Inst"** %656 to i8*
  call void @_ZdlPv(i8* %660) #17
  br label %661

661:                                              ; preds = %658, %655
  %662 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %469, align 8
  %663 = icmp eq %"class.Ice::Inst"** %662, null
  br i1 %663, label %667, label %664

664:                                              ; preds = %661
  %665 = ptrtoint %"class.Ice::Inst"** %662 to i64
  store i64 %665, i64* %471, align 8
  %666 = bitcast %"class.Ice::Inst"** %662 to i8*
  call void @_ZdlPv(i8* %666) #17
  br label %667

667:                                              ; preds = %664, %661
  %668 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %462, align 8
  %669 = icmp eq %"class.Ice::Inst"** %668, null
  br i1 %669, label %673, label %670

670:                                              ; preds = %667
  %671 = ptrtoint %"class.Ice::Inst"** %668 to i64
  store i64 %671, i64* %472, align 8
  %672 = bitcast %"class.Ice::Inst"** %668 to i8*
  call void @_ZdlPv(i8* %672) #17
  br label %673

673:                                              ; preds = %670, %667
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %458) #15
  %674 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %453, align 8
  %675 = icmp eq %"class.Ice::Variable"** %674, null
  br i1 %675, label %679, label %676

676:                                              ; preds = %673
  %677 = ptrtoint %"class.Ice::Variable"** %674 to i64
  store i64 %677, i64* %473, align 8
  %678 = bitcast %"class.Ice::Variable"** %674 to i8*
  call void @_ZdlPv(i8* %678) #17
  br label %679

679:                                              ; preds = %676, %673
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #15
  br label %755

680:                                              ; preds = %573, %752
  %681 = phi %"class.Ice::Inst"** [ %753, %752 ], [ %578, %573 ]
  %682 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %681, align 8
  %683 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %682, i64 0, i32 2
  %684 = load i32, i32* %683, align 8
  %685 = icmp eq i32 %684, 11
  br i1 %685, label %697, label %686

686:                                              ; preds = %680
  %687 = icmp ne i32 %684, 9
  %688 = icmp eq %"class.Ice::Inst"* %682, null
  %689 = or i1 %688, %687
  br i1 %689, label %712, label %690

690:                                              ; preds = %686
  %691 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %682, i64 0, i32 15
  %692 = bitcast [4 x i8]* %691 to i32*
  %693 = load i32, i32* %692, align 4
  %694 = and i32 %693, 536870911
  switch i32 %694, label %735 [
    i32 25, label %695
    i32 32, label %718
  ]

695:                                              ; preds = %690
  %696 = bitcast %"class.Ice::Inst"* %682 to %"class.Ice::InstIntrinsic"*
  br label %697

697:                                              ; preds = %695, %680
  %698 = phi %"class.Ice::InstIntrinsic"* [ %696, %695 ], [ null, %680 ]
  %699 = icmp ne %"class.Ice::InstIntrinsic"* %698, null
  %700 = load i64*, i64** %464, align 8
  %701 = load i64, i64* %700, align 8
  %702 = zext i1 %699 to i64
  %703 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %682, i64 0, i32 13, i32 0, i32 0
  %704 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %703, align 8
  %705 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %704, i64 %702
  %706 = bitcast %"class.Ice::Operand"** %705 to i64*
  store i64 %701, i64* %706, align 8
  %707 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %465, align 8
  %708 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %707, align 8
  %709 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* %708) #16
  %710 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %465, align 8
  %711 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %710, align 8
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer4Uses6insertEPN3Ice7OperandEPNS2_4InstE(%"struct.(anonymous namespace)::Optimizer::Uses"* %709, %"class.Ice::Operand"* %711, %"class.Ice::Inst"* %682) #16
  br label %752

712:                                              ; preds = %686
  %713 = icmp eq i32 %684, 15
  br i1 %713, label %720, label %714

714:                                              ; preds = %712
  %715 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %682, i64 0, i32 15
  %716 = bitcast [4 x i8]* %715 to i32*
  %717 = load i32, i32* %716, align 4
  br label %735

718:                                              ; preds = %690
  %719 = bitcast %"class.Ice::Inst"* %682 to %"class.Ice::InstIntrinsic"*
  br label %720

720:                                              ; preds = %718, %712
  %721 = phi %"class.Ice::InstIntrinsic"* [ %719, %718 ], [ null, %712 ]
  %722 = icmp eq %"class.Ice::InstIntrinsic"* %721, null
  %723 = load i64*, i64** %464, align 8
  %724 = load i64, i64* %723, align 8
  %725 = select i1 %722, i64 1, i64 2
  %726 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %682, i64 0, i32 13, i32 0, i32 0
  %727 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %726, align 8
  %728 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %727, i64 %725
  %729 = bitcast %"class.Ice::Operand"** %728 to i64*
  store i64 %724, i64* %729, align 8
  %730 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %465, align 8
  %731 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %730, align 8
  %732 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* %731) #16
  %733 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %465, align 8
  %734 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %733, align 8
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer4Uses6insertEPN3Ice7OperandEPNS2_4InstE(%"struct.(anonymous namespace)::Optimizer::Uses"* %732, %"class.Ice::Operand"* %734, %"class.Ice::Inst"* %682) #16
  br label %752

735:                                              ; preds = %714, %690
  %736 = phi i32 [ %717, %714 ], [ %693, %690 ]
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %752

738:                                              ; preds = %735
  %739 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %682, i64 0, i32 13, i32 0, i32 0
  %740 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %739, align 8
  %741 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %740, i64 1
  %742 = bitcast %"class.Ice::Operand"** %741 to %"class.Ice::ConstantPrimitive"**
  %743 = load %"class.Ice::ConstantPrimitive"*, %"class.Ice::ConstantPrimitive"** %742, align 8
  %744 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %743, i64 0, i32 1
  %745 = load i32, i32* %744, align 4
  %746 = udiv i32 %745, %497
  %747 = sext i32 %746 to i64
  %748 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %453, align 8
  %749 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %748, i64 %747
  %750 = bitcast %"class.Ice::Variable"** %749 to %"class.Ice::Operand"**
  %751 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %750, align 8
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer7replaceEPN3Ice4InstEPNS1_7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Inst"* %682, %"class.Ice::Operand"* %751) #16
  br label %752

752:                                              ; preds = %738, %735, %720, %697
  %753 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %681, i64 1
  %754 = icmp eq %"class.Ice::Inst"** %753, %579
  br i1 %754, label %655, label %680

755:                                              ; preds = %555, %550, %547, %541, %535, %679, %474
  %756 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %475, i64 0, i32 0, i32 1
  %757 = bitcast %"class.llvm::ilist_node_base"** %756 to %"class.llvm::ilist_node_impl"**
  %758 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %757, align 8
  %759 = icmp eq %"class.llvm::ilist_node_impl"* %758, %447
  br i1 %759, label %760, label %474

760:                                              ; preds = %755, %483
  %761 = load i64, i64* %455, align 8
  %762 = load i64, i64* %456, align 8
  br label %763

763:                                              ; preds = %760, %449
  %764 = phi i64* [ %450, %449 ], [ %455, %760 ]
  %765 = phi i64 [ 0, %449 ], [ %762, %760 ]
  %766 = phi i64 [ 0, %449 ], [ %761, %760 ]
  %767 = sub i64 %766, %765
  %768 = icmp eq i64 %767, 0
  %769 = inttoptr i64 %765 to %"class.Ice::InstAlloca"**
  br i1 %768, label %772, label %770

770:                                              ; preds = %763
  %771 = ashr exact i64 %767, 3
  br label %778

772:                                              ; preds = %802, %763
  %773 = phi %"class.Ice::InstAlloca"** [ %769, %763 ], [ %804, %802 ]
  %774 = icmp eq %"class.Ice::InstAlloca"** %773, null
  br i1 %774, label %805, label %775

775:                                              ; preds = %772
  %776 = ptrtoint %"class.Ice::InstAlloca"** %773 to i64
  store i64 %776, i64* %764, align 8
  %777 = bitcast %"class.Ice::InstAlloca"** %773 to i8*
  call void @_ZdlPv(i8* %777) #17
  br label %805

778:                                              ; preds = %802, %770
  %779 = phi %"class.Ice::InstAlloca"** [ %769, %770 ], [ %804, %802 ]
  %780 = phi i64 [ %771, %770 ], [ %781, %802 ]
  %781 = add i64 %780, -1
  %782 = getelementptr inbounds %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %779, i64 %781
  %783 = bitcast %"class.Ice::InstAlloca"** %782 to %"class.Ice::Inst"**
  %784 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %783, align 8
  %785 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_19Optimizer6isDeadEPN3Ice4InstE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Inst"* %784) #16
  br i1 %785, label %802, label %786

786:                                              ; preds = %778
  %787 = load %"class.Ice::InstAlloca"**, %"class.Ice::InstAlloca"*** %444, align 8
  %788 = getelementptr inbounds %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %787, i64 %781
  %789 = bitcast %"class.Ice::InstAlloca"** %788 to %"class.Ice::Inst"**
  %790 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %789, align 8
  %791 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %440, align 8
  %792 = icmp eq %"class.Ice::Inst"* %790, null
  %793 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %790, i64 0, i32 1, i32 0
  %794 = select i1 %792, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %793
  %795 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %791, i64 0, i32 0
  %796 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %794, i64 0, i32 0
  %797 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %791, i64 0, i32 0, i32 0
  %798 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %797, align 8
  %799 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %794, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %795, %"class.llvm::ilist_node_base"** %799, align 8
  %800 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %794, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %798, %"class.llvm::ilist_node_base"** %800, align 8
  %801 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %798, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %796, %"class.llvm::ilist_node_base"** %801, align 8
  store %"class.llvm::ilist_node_base"* %796, %"class.llvm::ilist_node_base"** %797, align 8
  br label %802

802:                                              ; preds = %786, %778
  %803 = icmp eq i64 %781, 0
  %804 = load %"class.Ice::InstAlloca"**, %"class.Ice::InstAlloca"*** %444, align 8
  br i1 %803, label %772, label %778

805:                                              ; preds = %775, %772
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %443) #15
  %806 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %13, align 8
  %807 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %806, i64 0, i32 14, i32 0, i32 0
  %808 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %807, align 8
  %809 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %806, i64 0, i32 14, i32 0, i32 1
  %810 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %809, align 8
  %811 = icmp eq %"class.Ice::CfgNode"** %808, %810
  br i1 %811, label %1252, label %812

812:                                              ; preds = %805
  %813 = bitcast %"class.std::__1::unordered_map.372"* %3 to i8*
  %814 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %815 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %816 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %817 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %818 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %819 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %3, i64 0, i32 0, i32 4, i64 0
  %820 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %3, i64 0, i32 0, i32 3
  %821 = bitcast %"class.std::__1::__compressed_pair.394"* %820 to i32*
  %822 = bitcast %"class.Ice::InstAlloca"** %5 to i8*
  %823 = bitcast %"class.Ice::InstAlloca"** %5 to %"class.Ice::Inst"**
  %824 = bitcast %"class.Ice::InstAlloca"** %4 to i8*
  %825 = bitcast %"class.Ice::InstAlloca"** %4 to %"class.Ice::Inst"**
  %826 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %3, i64 0, i32 0
  %827 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %828 = bitcast %"struct.std::__1::__hash_node_base.377"* %827 to i64*
  %829 = bitcast %"struct.std::__1::__hash_node_base.377"* %827 to i8**
  %830 = bitcast i8* %819 to i32*
  br label %831

831:                                              ; preds = %853, %812
  %832 = phi %"class.Ice::CfgNode"** [ %808, %812 ], [ %854, %853 ]
  %833 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %832, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %813) #15
  store i32 -1431655766, i32* %830, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %813, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %821, align 8
  %834 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %833, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %835 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %833, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %836 = bitcast %"class.llvm::ilist_node_base"** %834 to %"class.llvm::ilist_node_impl"**
  %837 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %836, align 8
  %838 = icmp eq %"class.llvm::ilist_node_impl"* %837, %835
  br i1 %838, label %848, label %856

839:                                              ; preds = %1247
  %840 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %816, align 8
  %841 = icmp eq %"struct.std::__1::__hash_node_base.377"* %840, null
  br i1 %841, label %848, label %842

842:                                              ; preds = %839, %842
  %843 = phi %"struct.std::__1::__hash_node_base.377"* [ %845, %842 ], [ %840, %839 ]
  %844 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %843, i64 0, i32 0
  %845 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %844, align 8
  %846 = bitcast %"struct.std::__1::__hash_node_base.377"* %843 to i8*
  call void @_ZdlPv(i8* %846) #17
  %847 = icmp eq %"struct.std::__1::__hash_node_base.377"* %845, null
  br i1 %847, label %848, label %842

848:                                              ; preds = %842, %839, %831
  %849 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %814, align 8
  store %"struct.std::__1::__hash_node_base.377"** null, %"struct.std::__1::__hash_node_base.377"*** %814, align 8
  %850 = icmp eq %"struct.std::__1::__hash_node_base.377"** %849, null
  br i1 %850, label %853, label %851

851:                                              ; preds = %848
  %852 = bitcast %"struct.std::__1::__hash_node_base.377"** %849 to i8*
  call void @_ZdlPv(i8* %852) #17
  br label %853

853:                                              ; preds = %851, %848
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %813) #15
  %854 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %832, i64 1
  %855 = icmp eq %"class.Ice::CfgNode"** %854, %810
  br i1 %855, label %1252, label %831

856:                                              ; preds = %831, %1247
  %857 = phi %"class.llvm::ilist_node_impl"* [ %1250, %1247 ], [ %837, %831 ]
  %858 = icmp eq %"class.llvm::ilist_node_impl"* %857, null
  %859 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %857, i64 -1, i32 0, i32 1
  %860 = bitcast %"class.llvm::ilist_node_base"** %859 to %"class.Ice::Inst"*
  %861 = select i1 %858, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %860
  %862 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %861, i64 0, i32 4
  %863 = load i8, i8* %862, align 8, !range !2
  %864 = icmp eq i8 %863, 0
  br i1 %864, label %865, label %1247

865:                                              ; preds = %856
  %866 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %861, i64 0, i32 2
  %867 = load i32, i32* %866, align 8
  %868 = icmp eq i32 %867, 15
  br i1 %868, label %877, label %869

869:                                              ; preds = %865
  %870 = icmp ne i32 %867, 9
  %871 = or i1 %858, %870
  br i1 %871, label %1171, label %872

872:                                              ; preds = %869
  %873 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %861, i64 0, i32 15
  %874 = bitcast [4 x i8]* %873 to i32*
  %875 = load i32, i32* %874, align 4
  %876 = and i32 %875, 536870911
  switch i32 %876, label %1247 [
    i32 32, label %877
    i32 25, label %1173
  ]

877:                                              ; preds = %872, %865
  %878 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %861, i64 0, i32 13, i32 0, i32 0
  %879 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %878, align 8
  %880 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %879, i64 1
  %881 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %880, align 8
  %882 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %881, i64 0, i32 2
  %883 = load i32, i32* %882, align 4
  %884 = add i32 %883, -18
  %885 = icmp ugt i32 %884, 14
  %886 = icmp eq %"class.Ice::Operand"* %881, null
  %887 = or i1 %886, %885
  br i1 %887, label %1247, label %888

888:                                              ; preds = %877
  %889 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %881, i64 4, i32 5
  %890 = bitcast i8** %889 to %"class.Ice::Inst"**
  %891 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %890, align 8
  %892 = icmp eq %"class.Ice::Inst"* %891, null
  br i1 %892, label %1247, label %893

893:                                              ; preds = %888
  %894 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %891, i64 0, i32 2
  %895 = load i32, i32* %894, align 8
  %896 = icmp eq i32 %895, 1
  %897 = bitcast %"class.Ice::Inst"* %891 to %"class.Ice::InstAlloca"*
  br i1 %896, label %898, label %1247

898:                                              ; preds = %893
  %899 = call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Operand"* nonnull %881) #16
  %900 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %899, i64 0, i32 0, i32 0, i32 1
  %901 = bitcast %"class.Ice::Inst"*** %900 to i64*
  %902 = load i64, i64* %901, align 8
  %903 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %899 to i64*
  %904 = load i64, i64* %903, align 8
  %905 = sub i64 %902, %904
  %906 = ashr exact i64 %905, 3
  %907 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %899, i64 0, i32 1
  %908 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %899, i64 0, i32 1, i32 0, i32 1
  %909 = bitcast %"class.Ice::Inst"*** %908 to i64*
  %910 = load i64, i64* %909, align 8
  %911 = bitcast %"class.std::__1::vector.318"* %907 to i64*
  %912 = load i64, i64* %911, align 8
  %913 = sub i64 %910, %912
  %914 = ashr exact i64 %913, 3
  %915 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %899, i64 0, i32 2
  %916 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %899, i64 0, i32 2, i32 0, i32 1
  %917 = bitcast %"class.Ice::Inst"*** %916 to i64*
  %918 = load i64, i64* %917, align 8
  %919 = bitcast %"class.std::__1::vector.318"* %915 to i64*
  %920 = load i64, i64* %919, align 8
  %921 = sub i64 %918, %920
  %922 = ashr exact i64 %921, 3
  %923 = add nsw i64 %922, %914
  %924 = icmp eq i64 %906, %923
  br i1 %924, label %925, label %1247

925:                                              ; preds = %898
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %824) #15
  store %"class.Ice::Inst"* %891, %"class.Ice::Inst"** %825, align 8
  %926 = call fastcc %"struct.std::__1::__hash_node_base.377"* @_ZNSt3__113unordered_mapIPKN3Ice10InstAllocaEZN12_GLOBAL__N_19Optimizer35optimizeSingleBasicBlockLoadsStoresEvE9LastStoreNS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S7_EEEEE4findERSE_(%"class.std::__1::unordered_map.372"* nonnull %3, %"class.Ice::InstAlloca"** nonnull dereferenceable(8) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %824) #15
  %927 = icmp eq %"struct.std::__1::__hash_node_base.377"* %926, null
  br i1 %927, label %982, label %928

928:                                              ; preds = %925
  %929 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %926, i64 3
  %930 = bitcast %"struct.std::__1::__hash_node_base.377"* %929 to %"class.Ice::Inst"**
  %931 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %930, align 8
  %932 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %878, align 8
  %933 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %932, align 8
  %934 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %933, i64 0, i32 1
  %935 = load i32, i32* %934, align 8
  %936 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %931, i64 0, i32 13, i32 0, i32 0
  %937 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %936, align 8
  %938 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %937, align 8
  %939 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %938, i64 0, i32 1
  %940 = load i32, i32* %939, align 8
  %941 = icmp eq i32 %935, %940
  br i1 %941, label %942, label %982

942:                                              ; preds = %928
  %943 = load i32, i32* %866, align 8
  %944 = icmp ne i32 %943, 9
  %945 = or i1 %858, %944
  br i1 %945, label %976, label %946

946:                                              ; preds = %942
  %947 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %861, i64 0, i32 15
  %948 = bitcast [4 x i8]* %947 to i32*
  %949 = load i32, i32* %948, align 4
  %950 = and i32 %949, 536870911
  %951 = icmp eq i32 %950, 32
  br i1 %951, label %952, label %976

952:                                              ; preds = %946
  %953 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %931, i64 0, i32 2
  %954 = load i32, i32* %953, align 8
  %955 = icmp ne i32 %954, 9
  %956 = icmp eq %"class.Ice::Inst"* %931, null
  %957 = or i1 %956, %955
  br i1 %957, label %976, label %958

958:                                              ; preds = %952
  %959 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %931, i64 0, i32 15
  %960 = bitcast [4 x i8]* %959 to i32*
  %961 = load i32, i32* %960, align 4
  %962 = and i32 %961, 536870911
  %963 = icmp eq i32 %962, 32
  br i1 %963, label %964, label %976

964:                                              ; preds = %958
  %965 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %932, i64 2
  %966 = bitcast %"class.Ice::Operand"** %965 to %"class.Ice::ConstantPrimitive"**
  %967 = load %"class.Ice::ConstantPrimitive"*, %"class.Ice::ConstantPrimitive"** %966, align 8
  %968 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %967, i64 0, i32 1
  %969 = load i32, i32* %968, align 4
  %970 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %937, i64 2
  %971 = bitcast %"class.Ice::Operand"** %970 to %"class.Ice::ConstantPrimitive"**
  %972 = load %"class.Ice::ConstantPrimitive"*, %"class.Ice::ConstantPrimitive"** %971, align 8
  %973 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %972, i64 0, i32 1
  %974 = load i32, i32* %973, align 4
  %975 = icmp eq i32 %969, %974
  br i1 %975, label %976, label %982

976:                                              ; preds = %964, %958, %952, %946, %942
  %977 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %926, i64 4
  %978 = bitcast %"struct.std::__1::__hash_node_base.377"* %977 to i8*
  %979 = load i8, i8* %978, align 8, !range !2
  %980 = icmp eq i8 %979, 0
  br i1 %980, label %982, label %981

981:                                              ; preds = %976
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer17deleteInstructionEPN3Ice4InstE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Inst"* %931) #16
  br label %982

982:                                              ; preds = %981, %976, %964, %928, %925
  %983 = ptrtoint %"class.Ice::Inst"* %891 to i64
  %984 = lshr i64 %983, 32
  %985 = shl i64 %983, 3
  %986 = and i64 %985, 4294967288
  %987 = add nuw nsw i64 %986, 8
  %988 = xor i64 %987, %984
  %989 = mul i64 %988, -7070675565921424023
  %990 = lshr i64 %989, 47
  %991 = xor i64 %989, %984
  %992 = xor i64 %991, %990
  %993 = mul i64 %992, -7070675565921424023
  %994 = lshr i64 %993, 47
  %995 = xor i64 %994, %993
  %996 = mul i64 %995, -7070675565921424023
  %997 = load i64, i64* %815, align 8
  %998 = icmp eq i64 %997, 0
  br i1 %998, label %1042, label %999

999:                                              ; preds = %982
  %1000 = call i64 @llvm.ctpop.i64(i64 %997) #15, !range !3
  %1001 = icmp ugt i64 %1000, 1
  br i1 %1001, label %1005, label %1002

1002:                                             ; preds = %999
  %1003 = add i64 %997, -1
  %1004 = and i64 %1003, %996
  br label %1009

1005:                                             ; preds = %999
  %1006 = icmp ult i64 %996, %997
  br i1 %1006, label %1009, label %1007

1007:                                             ; preds = %1005
  %1008 = urem i64 %996, %997
  br label %1009

1009:                                             ; preds = %1007, %1005, %1002
  %1010 = phi i64 [ %1004, %1002 ], [ %1008, %1007 ], [ %996, %1005 ]
  %1011 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %814, align 8
  %1012 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %1011, i64 %1010
  %1013 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %1012, align 8
  %1014 = icmp eq %"struct.std::__1::__hash_node_base.377"* %1013, null
  br i1 %1014, label %1042, label %1015

1015:                                             ; preds = %1009
  %1016 = add i64 %997, -1
  br label %1017

1017:                                             ; preds = %1037, %1015
  %1018 = phi %"struct.std::__1::__hash_node_base.377"* [ %1020, %1037 ], [ %1013, %1015 ]
  %1019 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %1018, i64 0, i32 0
  %1020 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %1019, align 8
  %1021 = icmp eq %"struct.std::__1::__hash_node_base.377"* %1020, null
  br i1 %1021, label %1042, label %1022

1022:                                             ; preds = %1017
  %1023 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %1020, i64 1
  %1024 = bitcast %"struct.std::__1::__hash_node_base.377"* %1023 to i64*
  %1025 = load i64, i64* %1024, align 8
  %1026 = icmp eq i64 %1025, %996
  br i1 %1026, label %1037, label %1027

1027:                                             ; preds = %1022
  br i1 %1001, label %1030, label %1028

1028:                                             ; preds = %1027
  %1029 = and i64 %1025, %1016
  br label %1034

1030:                                             ; preds = %1027
  %1031 = icmp ult i64 %1025, %997
  br i1 %1031, label %1034, label %1032

1032:                                             ; preds = %1030
  %1033 = urem i64 %1025, %997
  br label %1034

1034:                                             ; preds = %1032, %1030, %1028
  %1035 = phi i64 [ %1029, %1028 ], [ %1033, %1032 ], [ %1025, %1030 ]
  %1036 = icmp eq i64 %1035, %1010
  br i1 %1036, label %1037, label %1042

1037:                                             ; preds = %1034, %1022
  %1038 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %1020, i64 2
  %1039 = bitcast %"struct.std::__1::__hash_node_base.377"* %1038 to %"class.Ice::InstAlloca"**
  %1040 = load %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %1039, align 8
  %1041 = icmp eq %"class.Ice::InstAlloca"* %1040, %897
  br i1 %1041, label %1165, label %1017

1042:                                             ; preds = %1034, %1017, %1009, %982
  %1043 = phi i64 [ %1010, %1009 ], [ -6148914691236517206, %982 ], [ %1010, %1017 ], [ %1010, %1034 ]
  %1044 = call i8* @_Znwm(i64 40) #17, !noalias !4
  %1045 = getelementptr inbounds i8, i8* %1044, i64 16
  %1046 = bitcast i8* %1045 to i64*
  store i64 %983, i64* %1046, align 8, !noalias !4
  %1047 = getelementptr inbounds i8, i8* %1044, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %1047, i8 0, i64 16, i1 false) #15, !noalias !4
  %1048 = getelementptr inbounds i8, i8* %1044, i64 32
  store i8 1, i8* %1048, align 8, !noalias !4
  %1049 = getelementptr inbounds i8, i8* %1044, i64 8
  %1050 = bitcast i8* %1049 to i64*
  store i64 %996, i64* %1050, align 8, !noalias !4
  %1051 = bitcast i8* %1044 to %"struct.std::__1::__hash_node_base.377"**
  store %"struct.std::__1::__hash_node_base.377"* null, %"struct.std::__1::__hash_node_base.377"** %1051, align 8, !noalias !4
  %1052 = load i64, i64* %817, align 8
  %1053 = add i64 %1052, 1
  %1054 = uitofp i64 %1053 to float
  %1055 = uitofp i64 %997 to float
  %1056 = load float, float* %818, align 8
  %1057 = fmul float %1056, %1055
  %1058 = fcmp olt float %1057, %1054
  %1059 = or i1 %998, %1058
  br i1 %1059, label %1060, label %1124

1060:                                             ; preds = %1042
  %1061 = shl i64 %997, 1
  %1062 = icmp ult i64 %997, 3
  %1063 = call i64 @llvm.ctpop.i64(i64 %997) #15, !range !3
  %1064 = icmp ugt i64 %1063, 1
  %1065 = or i1 %1062, %1064
  %1066 = zext i1 %1065 to i64
  %1067 = or i64 %1061, %1066
  %1068 = fdiv float %1054, %1056
  %1069 = call float @llvm.ceil.f32(float %1068) #15
  %1070 = fptoui float %1069 to i64
  %1071 = icmp ult i64 %1067, %1070
  %1072 = select i1 %1071, i64 %1070, i64 %1067
  %1073 = icmp eq i64 %1072, 1
  br i1 %1073, label %1080, label %1074

1074:                                             ; preds = %1060
  %1075 = call i64 @llvm.ctpop.i64(i64 %1072) #15, !range !3
  %1076 = icmp ugt i64 %1075, 1
  br i1 %1076, label %1077, label %1080

1077:                                             ; preds = %1074
  %1078 = call i64 @_ZNSt3__112__next_primeEm(i64 %1072) #16
  %1079 = load i64, i64* %815, align 8
  br label %1080

1080:                                             ; preds = %1077, %1074, %1060
  %1081 = phi i64 [ %1079, %1077 ], [ %997, %1074 ], [ %997, %1060 ]
  %1082 = phi i64 [ %1078, %1077 ], [ %1072, %1074 ], [ 2, %1060 ]
  %1083 = icmp ugt i64 %1082, %1081
  br i1 %1083, label %1084, label %1085

1084:                                             ; preds = %1080
  call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3Ice10InstAllocaEZN12_GLOBAL__N_19Optimizer35optimizeSingleBasicBlockLoadsStoresEvE9LastStoreEENS_22__unordered_map_hasherIS5_S9_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.373"* nonnull %826, i64 %1082) #16
  br label %1113

1085:                                             ; preds = %1080
  %1086 = icmp ult i64 %1082, %1081
  br i1 %1086, label %1087, label %1113

1087:                                             ; preds = %1085
  %1088 = icmp ugt i64 %1081, 2
  %1089 = call i64 @llvm.ctpop.i64(i64 %1081) #15, !range !3
  %1090 = icmp ult i64 %1089, 2
  %1091 = and i1 %1088, %1090
  %1092 = load i64, i64* %817, align 8
  %1093 = uitofp i64 %1092 to float
  %1094 = load float, float* %818, align 8
  %1095 = fdiv float %1093, %1094
  %1096 = call float @llvm.ceil.f32(float %1095) #15
  %1097 = fptoui float %1096 to i64
  br i1 %1091, label %1098, label %1105

1098:                                             ; preds = %1087
  %1099 = icmp ult i64 %1097, 2
  br i1 %1099, label %1107, label %1100

1100:                                             ; preds = %1098
  %1101 = add i64 %1097, -1
  %1102 = call i64 @llvm.ctlz.i64(i64 %1101, i1 true) #15, !range !3
  %1103 = sub nuw nsw i64 64, %1102
  %1104 = shl i64 1, %1103
  br label %1107

1105:                                             ; preds = %1087
  %1106 = call i64 @_ZNSt3__112__next_primeEm(i64 %1097) #16
  br label %1107

1107:                                             ; preds = %1105, %1100, %1098
  %1108 = phi i64 [ %1106, %1105 ], [ %1104, %1100 ], [ %1097, %1098 ]
  %1109 = icmp ult i64 %1082, %1108
  %1110 = select i1 %1109, i64 %1108, i64 %1082
  %1111 = icmp ult i64 %1110, %1081
  br i1 %1111, label %1112, label %1113

1112:                                             ; preds = %1107
  call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3Ice10InstAllocaEZN12_GLOBAL__N_19Optimizer35optimizeSingleBasicBlockLoadsStoresEvE9LastStoreEENS_22__unordered_map_hasherIS5_S9_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.373"* nonnull %826, i64 %1110) #16
  br label %1113

1113:                                             ; preds = %1112, %1107, %1085, %1084
  %1114 = load i64, i64* %815, align 8
  %1115 = call i64 @llvm.ctpop.i64(i64 %1114) #15, !range !3
  %1116 = icmp ugt i64 %1115, 1
  br i1 %1116, label %1120, label %1117

1117:                                             ; preds = %1113
  %1118 = add i64 %1114, -1
  %1119 = and i64 %1118, %996
  br label %1124

1120:                                             ; preds = %1113
  %1121 = icmp ult i64 %996, %1114
  br i1 %1121, label %1124, label %1122

1122:                                             ; preds = %1120
  %1123 = urem i64 %996, %1114
  br label %1124

1124:                                             ; preds = %1122, %1120, %1117, %1042
  %1125 = phi i64 [ %997, %1042 ], [ %1114, %1117 ], [ %1114, %1120 ], [ %1114, %1122 ]
  %1126 = phi i64 [ %1043, %1042 ], [ %1119, %1117 ], [ %996, %1120 ], [ %1123, %1122 ]
  %1127 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %814, align 8
  %1128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %1127, i64 %1126
  %1129 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %1128, align 8
  %1130 = icmp eq %"struct.std::__1::__hash_node_base.377"* %1129, null
  br i1 %1130, label %1131, label %1154

1131:                                             ; preds = %1124
  %1132 = load i64, i64* %828, align 8
  %1133 = bitcast i8* %1044 to i64*
  store i64 %1132, i64* %1133, align 8
  store i8* %1044, i8** %829, align 8
  store %"struct.std::__1::__hash_node_base.377"* %827, %"struct.std::__1::__hash_node_base.377"** %1128, align 8
  %1134 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %1051, align 8
  %1135 = icmp eq %"struct.std::__1::__hash_node_base.377"* %1134, null
  br i1 %1135, label %1161, label %1136

1136:                                             ; preds = %1131
  %1137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %1134, i64 1
  %1138 = bitcast %"struct.std::__1::__hash_node_base.377"* %1137 to i64*
  %1139 = load i64, i64* %1138, align 8
  %1140 = call i64 @llvm.ctpop.i64(i64 %1125) #15, !range !3
  %1141 = icmp ugt i64 %1140, 1
  br i1 %1141, label %1145, label %1142

1142:                                             ; preds = %1136
  %1143 = add i64 %1125, -1
  %1144 = and i64 %1139, %1143
  br label %1149

1145:                                             ; preds = %1136
  %1146 = icmp ult i64 %1139, %1125
  br i1 %1146, label %1149, label %1147

1147:                                             ; preds = %1145
  %1148 = urem i64 %1139, %1125
  br label %1149

1149:                                             ; preds = %1147, %1145, %1142
  %1150 = phi i64 [ %1144, %1142 ], [ %1148, %1147 ], [ %1139, %1145 ]
  %1151 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %814, align 8
  %1152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %1151, i64 %1150
  %1153 = bitcast %"struct.std::__1::__hash_node_base.377"** %1152 to i8**
  br label %1159

1154:                                             ; preds = %1124
  %1155 = bitcast %"struct.std::__1::__hash_node_base.377"* %1129 to i64*
  %1156 = load i64, i64* %1155, align 8
  %1157 = bitcast i8* %1044 to i64*
  store i64 %1156, i64* %1157, align 8
  %1158 = bitcast %"struct.std::__1::__hash_node_base.377"* %1129 to i8**
  br label %1159

1159:                                             ; preds = %1149, %1154
  %1160 = phi i8** [ %1158, %1154 ], [ %1153, %1149 ]
  store i8* %1044, i8** %1160, align 8
  br label %1161

1161:                                             ; preds = %1159, %1131
  %1162 = bitcast i8* %1044 to %"struct.std::__1::__hash_node_base.377"*
  %1163 = load i64, i64* %817, align 8
  %1164 = add i64 %1163, 1
  store i64 %1164, i64* %817, align 8
  br label %1165

1165:                                             ; preds = %1037, %1161
  %1166 = phi %"struct.std::__1::__hash_node_base.377"* [ %1162, %1161 ], [ %1020, %1037 ]
  %1167 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %1166, i64 3
  %1168 = bitcast %"struct.std::__1::__hash_node_base.377"* %1167 to %"class.Ice::Inst"**
  store %"class.Ice::Inst"* %861, %"class.Ice::Inst"** %1168, align 8
  %1169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %1166, i64 4
  %1170 = bitcast %"struct.std::__1::__hash_node_base.377"* %1169 to i8*
  store i8 1, i8* %1170, align 8
  br label %1247

1171:                                             ; preds = %869
  %1172 = icmp eq i32 %867, 11
  br i1 %1172, label %1173, label %1247

1173:                                             ; preds = %1171, %872
  %1174 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %861, i64 0, i32 13, i32 0, i32 0
  %1175 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %1174, align 8
  %1176 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %1175, align 8
  %1177 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %1176, i64 0, i32 2
  %1178 = load i32, i32* %1177, align 4
  %1179 = add i32 %1178, -18
  %1180 = icmp ugt i32 %1179, 14
  %1181 = icmp eq %"class.Ice::Operand"* %1176, null
  %1182 = or i1 %1181, %1180
  br i1 %1182, label %1247, label %1183

1183:                                             ; preds = %1173
  %1184 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %1176, i64 4, i32 5
  %1185 = bitcast i8** %1184 to %"class.Ice::Inst"**
  %1186 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %1185, align 8
  %1187 = icmp eq %"class.Ice::Inst"* %1186, null
  br i1 %1187, label %1247, label %1188

1188:                                             ; preds = %1183
  %1189 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1186, i64 0, i32 2
  %1190 = load i32, i32* %1189, align 8
  %1191 = icmp eq i32 %1190, 1
  br i1 %1191, label %1192, label %1247

1192:                                             ; preds = %1188
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %822) #15
  store %"class.Ice::Inst"* %1186, %"class.Ice::Inst"** %823, align 8
  %1193 = call fastcc %"struct.std::__1::__hash_node_base.377"* @_ZNSt3__113unordered_mapIPKN3Ice10InstAllocaEZN12_GLOBAL__N_19Optimizer35optimizeSingleBasicBlockLoadsStoresEvE9LastStoreNS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S7_EEEEE4findERSE_(%"class.std::__1::unordered_map.372"* nonnull %3, %"class.Ice::InstAlloca"** nonnull dereferenceable(8) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %822) #15
  %1194 = icmp eq %"struct.std::__1::__hash_node_base.377"* %1193, null
  br i1 %1194, label %1247, label %1195

1195:                                             ; preds = %1192
  %1196 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %1193, i64 3
  %1197 = bitcast %"struct.std::__1::__hash_node_base.377"* %1196 to %"class.Ice::Inst"**
  %1198 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %1197, align 8
  %1199 = icmp ne %"class.Ice::Inst"* %861, null
  %1200 = icmp ne %"class.Ice::Inst"* %1198, null
  %1201 = and i1 %1199, %1200
  br i1 %1201, label %1202, label %1244

1202:                                             ; preds = %1195
  %1203 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1198, i64 0, i32 13, i32 0, i32 0
  %1204 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %1203, align 8
  %1205 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %1204, align 8
  %1206 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %1205, i64 0, i32 1
  %1207 = load i32, i32* %1206, align 8
  %1208 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %861, i64 0, i32 10
  %1209 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1208, align 8
  %1210 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1209, i64 0, i32 0, i32 1
  %1211 = load i32, i32* %1210, align 8
  %1212 = icmp eq i32 %1207, %1211
  br i1 %1212, label %1213, label %1244

1213:                                             ; preds = %1202
  %1214 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1198, i64 0, i32 2
  %1215 = load i32, i32* %1214, align 8
  %1216 = icmp eq i32 %1215, 9
  br i1 %1216, label %1217, label %1243

1217:                                             ; preds = %1213
  %1218 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1198, i64 0, i32 15
  %1219 = bitcast [4 x i8]* %1218 to i32*
  %1220 = load i32, i32* %1219, align 4
  %1221 = and i32 %1220, 536870911
  %1222 = icmp eq i32 %1221, 32
  %1223 = icmp eq i32 %867, 9
  %1224 = and i1 %1223, %1222
  br i1 %1224, label %1225, label %1243

1225:                                             ; preds = %1217
  %1226 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %861, i64 0, i32 15
  %1227 = bitcast [4 x i8]* %1226 to i32*
  %1228 = load i32, i32* %1227, align 4
  %1229 = and i32 %1228, 536870911
  %1230 = icmp eq i32 %1229, 25
  br i1 %1230, label %1231, label %1243

1231:                                             ; preds = %1225
  %1232 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %1204, i64 2
  %1233 = bitcast %"class.Ice::Operand"** %1232 to %"class.Ice::ConstantPrimitive"**
  %1234 = load %"class.Ice::ConstantPrimitive"*, %"class.Ice::ConstantPrimitive"** %1233, align 8
  %1235 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %1234, i64 0, i32 1
  %1236 = load i32, i32* %1235, align 4
  %1237 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %1175, i64 1
  %1238 = bitcast %"class.Ice::Operand"** %1237 to %"class.Ice::ConstantPrimitive"**
  %1239 = load %"class.Ice::ConstantPrimitive"*, %"class.Ice::ConstantPrimitive"** %1238, align 8
  %1240 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %1239, i64 0, i32 1
  %1241 = load i32, i32* %1240, align 4
  %1242 = icmp eq i32 %1236, %1241
  br i1 %1242, label %1243, label %1244

1243:                                             ; preds = %1231, %1225, %1217, %1213
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer7replaceEPN3Ice4InstEPNS1_7OperandE(%"class.(anonymous namespace)::Optimizer"* nonnull %11, %"class.Ice::Inst"* nonnull %861, %"class.Ice::Operand"* %1205) #16
  br label %1247

1244:                                             ; preds = %1231, %1202, %1195
  %1245 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %1193, i64 4
  %1246 = bitcast %"struct.std::__1::__hash_node_base.377"* %1245 to i8*
  store i8 0, i8* %1246, align 8
  br label %1247

1247:                                             ; preds = %1244, %1243, %1192, %1188, %1183, %1173, %1171, %1165, %898, %893, %888, %877, %872, %856
  %1248 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %857, i64 0, i32 0, i32 1
  %1249 = bitcast %"class.llvm::ilist_node_base"** %1248 to %"class.llvm::ilist_node_impl"**
  %1250 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %1249, align 8
  %1251 = icmp eq %"class.llvm::ilist_node_impl"* %1250, %835
  br i1 %1251, label %839, label %856

1252:                                             ; preds = %853, %805
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer17eliminateDeadCodeEv(%"class.(anonymous namespace)::Optimizer"* nonnull %11) #16
  %1253 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %18, i64 0, i32 0, i32 0
  %1254 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %1253, align 8
  %1255 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %16, align 8
  %1256 = icmp eq %"class.Ice::Operand"** %1254, %1255
  br i1 %1256, label %1257, label %1330

1257:                                             ; preds = %1252
  %1258 = ptrtoint %"class.Ice::Operand"** %1254 to i64
  br label %1262

1259:                                             ; preds = %1330
  %1260 = bitcast %"class.std::__1::vector.311"* %18 to i64*
  %1261 = load i64, i64* %1260, align 8
  br label %1262

1262:                                             ; preds = %1259, %1257
  %1263 = phi i64 [ %1261, %1259 ], [ %1258, %1257 ]
  %1264 = bitcast %"class.Ice::Operand"*** %16 to i64*
  store i64 %1263, i64* %1264, align 8
  %1265 = load %"struct.rr::Nucleus::OptimizerReport"*, %"struct.rr::Nucleus::OptimizerReport"** %17, align 8
  %1266 = icmp eq %"struct.rr::Nucleus::OptimizerReport"* %1265, null
  br i1 %1266, label %1335, label %1267

1267:                                             ; preds = %1262
  %1268 = getelementptr inbounds %"struct.rr::Nucleus::OptimizerReport", %"struct.rr::Nucleus::OptimizerReport"* %1265, i64 0, i32 0
  store i32 0, i32* %1268, align 4
  %1269 = getelementptr inbounds %"struct.rr::Nucleus::OptimizerReport", %"struct.rr::Nucleus::OptimizerReport"* %1265, i64 0, i32 1
  store i32 0, i32* %1269, align 4
  %1270 = getelementptr inbounds %"struct.rr::Nucleus::OptimizerReport", %"struct.rr::Nucleus::OptimizerReport"* %1265, i64 0, i32 2
  store i32 0, i32* %1270, align 4
  %1271 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %13, align 8
  %1272 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1271, i64 0, i32 14, i32 0, i32 0
  %1273 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %1272, align 8
  %1274 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1271, i64 0, i32 14, i32 0, i32 1
  %1275 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %1274, align 8
  %1276 = icmp eq %"class.Ice::CfgNode"** %1273, %1275
  br i1 %1276, label %1335, label %1277

1277:                                             ; preds = %1267, %1285
  %1278 = phi %"class.Ice::CfgNode"** [ %1286, %1285 ], [ %1273, %1267 ]
  %1279 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1278, align 8
  %1280 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1279, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1281 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1279, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %1282 = bitcast %"class.llvm::ilist_node_base"** %1280 to %"class.llvm::ilist_node_impl"**
  %1283 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %1282, align 8
  %1284 = icmp eq %"class.llvm::ilist_node_impl"* %1283, %1281
  br i1 %1284, label %1285, label %1288

1285:                                             ; preds = %1325, %1277
  %1286 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1278, i64 1
  %1287 = icmp eq %"class.Ice::CfgNode"** %1286, %1275
  br i1 %1287, label %1335, label %1277

1288:                                             ; preds = %1277, %1325
  %1289 = phi %"class.llvm::ilist_node_impl"* [ %1328, %1325 ], [ %1283, %1277 ]
  %1290 = icmp eq %"class.llvm::ilist_node_impl"* %1289, null
  %1291 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %1289, i64 -1, i32 0, i32 1
  %1292 = bitcast %"class.llvm::ilist_node_base"** %1291 to %"class.Ice::Inst"*
  %1293 = select i1 %1290, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %1292
  %1294 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1293, i64 0, i32 4
  %1295 = load i8, i8* %1294, align 8, !range !2
  %1296 = icmp eq i8 %1295, 0
  br i1 %1296, label %1297, label %1325

1297:                                             ; preds = %1288
  %1298 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1293, i64 0, i32 2
  %1299 = load i32, i32* %1298, align 8
  switch i32 %1299, label %1305 [
    i32 1, label %1300
    i32 11, label %1313
  ]

1300:                                             ; preds = %1297
  %1301 = load %"struct.rr::Nucleus::OptimizerReport"*, %"struct.rr::Nucleus::OptimizerReport"** %17, align 8
  %1302 = getelementptr inbounds %"struct.rr::Nucleus::OptimizerReport", %"struct.rr::Nucleus::OptimizerReport"* %1301, i64 0, i32 0
  %1303 = load i32, i32* %1302, align 4
  %1304 = add nsw i32 %1303, 1
  store i32 %1304, i32* %1302, align 4
  br label %1325

1305:                                             ; preds = %1297
  %1306 = icmp ne i32 %1299, 9
  %1307 = or i1 %1290, %1306
  br i1 %1307, label %1318, label %1308

1308:                                             ; preds = %1305
  %1309 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1293, i64 0, i32 15
  %1310 = bitcast [4 x i8]* %1309 to i32*
  %1311 = load i32, i32* %1310, align 4
  %1312 = and i32 %1311, 536870911
  switch i32 %1312, label %1325 [
    i32 25, label %1313
    i32 32, label %1320
  ]

1313:                                             ; preds = %1308, %1297
  %1314 = load %"struct.rr::Nucleus::OptimizerReport"*, %"struct.rr::Nucleus::OptimizerReport"** %17, align 8
  %1315 = getelementptr inbounds %"struct.rr::Nucleus::OptimizerReport", %"struct.rr::Nucleus::OptimizerReport"* %1314, i64 0, i32 1
  %1316 = load i32, i32* %1315, align 4
  %1317 = add nsw i32 %1316, 1
  store i32 %1317, i32* %1315, align 4
  br label %1325

1318:                                             ; preds = %1305
  %1319 = icmp eq i32 %1299, 15
  br i1 %1319, label %1320, label %1325

1320:                                             ; preds = %1318, %1308
  %1321 = load %"struct.rr::Nucleus::OptimizerReport"*, %"struct.rr::Nucleus::OptimizerReport"** %17, align 8
  %1322 = getelementptr inbounds %"struct.rr::Nucleus::OptimizerReport", %"struct.rr::Nucleus::OptimizerReport"* %1321, i64 0, i32 2
  %1323 = load i32, i32* %1322, align 4
  %1324 = add nsw i32 %1323, 1
  store i32 %1324, i32* %1322, align 4
  br label %1325

1325:                                             ; preds = %1320, %1318, %1313, %1308, %1300, %1288
  %1326 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %1289, i64 0, i32 0, i32 1
  %1327 = bitcast %"class.llvm::ilist_node_base"** %1326 to %"class.llvm::ilist_node_impl"**
  %1328 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %1327, align 8
  %1329 = icmp eq %"class.llvm::ilist_node_impl"* %1328, %1281
  br i1 %1329, label %1285, label %1288

1330:                                             ; preds = %1252, %1330
  %1331 = phi %"class.Ice::Operand"** [ %1333, %1330 ], [ %1254, %1252 ]
  %1332 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %1331, align 8
  call fastcc void @_ZN12_GLOBAL__N_19Optimizer7setUsesEPN3Ice7OperandEPNS0_4UsesE(%"class.Ice::Operand"* %1332, %"struct.(anonymous namespace)::Optimizer::Uses"* null) #16
  %1333 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %1331, i64 1
  %1334 = icmp eq %"class.Ice::Operand"** %1333, %1255
  br i1 %1334, label %1259, label %1330

1335:                                             ; preds = %1285, %1262, %1267
  %1336 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %15, align 8
  %1337 = icmp eq %"class.Ice::Operand"** %1336, null
  br i1 %1337, label %1341, label %1338

1338:                                             ; preds = %1335
  %1339 = ptrtoint %"class.Ice::Operand"** %1336 to i64
  store i64 %1339, i64* %1264, align 8
  %1340 = bitcast %"class.Ice::Operand"** %1336 to i8*
  call void @_ZdlPv(i8* %1340) #17
  br label %1341

1341:                                             ; preds = %1335, %1338
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_19Optimizer17eliminateDeadCodeEv(%"class.(anonymous namespace)::Optimizer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %0, i64 0, i32 0
  br label %3

3:                                                ; preds = %10, %1
  %4 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %5 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %4, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %5, align 8
  %7 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %4, i64 0, i32 14, i32 0, i32 1
  %8 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %7, align 8
  %9 = icmp eq %"class.Ice::CfgNode"** %6, %8
  br i1 %9, label %47, label %13

10:                                               ; preds = %23
  %11 = and i8 %24, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %47, label %3

13:                                               ; preds = %3, %23
  %14 = phi i8 [ %24, %23 ], [ 0, %3 ]
  %15 = phi %"class.Ice::CfgNode"** [ %25, %23 ], [ %6, %3 ]
  %16 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %15, align 8
  %17 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %16, i64 0, i32 12
  %18 = bitcast %"class.llvm::iplist"* %17 to i64*
  %19 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %18, align 8
  %21 = inttoptr i64 %20 to %"class.llvm::ilist_node_impl"*
  %22 = icmp eq %"class.llvm::ilist_node_impl"* %19, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %41, %13
  %24 = phi i8 [ %14, %13 ], [ %42, %41 ]
  %25 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %15, i64 1
  %26 = icmp eq %"class.Ice::CfgNode"** %25, %8
  br i1 %26, label %10, label %13

27:                                               ; preds = %13, %41
  %28 = phi %"class.llvm::ilist_node_impl"* [ %45, %41 ], [ %21, %13 ]
  %29 = phi i64 [ %44, %41 ], [ %20, %13 ]
  %30 = phi i8 [ %42, %41 ], [ %14, %13 ]
  %31 = icmp eq i64 %29, 0
  %32 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %28, i64 -1, i32 0, i32 1
  %33 = bitcast %"class.llvm::ilist_node_base"** %32 to %"class.Ice::Inst"*
  %34 = select i1 %31, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %33
  %35 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %34, i64 0, i32 4
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_19Optimizer6isDeadEPN3Ice4InstE(%"class.(anonymous namespace)::Optimizer"* %0, %"class.Ice::Inst"* %34) #19
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call fastcc void @_ZN12_GLOBAL__N_19Optimizer17deleteInstructionEPN3Ice4InstE(%"class.(anonymous namespace)::Optimizer"* %0, %"class.Ice::Inst"* %34) #19
  br label %41

41:                                               ; preds = %27, %38, %40
  %42 = phi i8 [ %30, %27 ], [ 1, %40 ], [ %30, %38 ]
  %43 = inttoptr i64 %29 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = inttoptr i64 %44 to %"class.llvm::ilist_node_impl"*
  %46 = icmp eq %"class.llvm::ilist_node_impl"* %19, %45
  br i1 %46, label %23, label %27

47:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_19Optimizer7setUsesEPN3Ice7OperandEPNS0_4UsesE(%"class.Ice::Operand"* nocapture, %"struct.(anonymous namespace)::Optimizer::Uses"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %0, i64 0, i32 5
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %4, i64 48
  %8 = bitcast i8* %7 to %"class.Ice::Inst"***
  %9 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %8, align 8
  %10 = icmp eq %"class.Ice::Inst"** %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = ptrtoint %"class.Ice::Inst"** %9 to i64
  %13 = getelementptr inbounds i8, i8* %4, i64 56
  %14 = bitcast i8* %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast %"class.Ice::Inst"** %9 to i8*
  tail call void @_ZdlPv(i8* %15) #17
  br label %16

16:                                               ; preds = %11, %6
  %17 = getelementptr inbounds i8, i8* %4, i64 24
  %18 = bitcast i8* %17 to %"class.Ice::Inst"***
  %19 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %18, align 8
  %20 = icmp eq %"class.Ice::Inst"** %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = ptrtoint %"class.Ice::Inst"** %19 to i64
  %23 = getelementptr inbounds i8, i8* %4, i64 32
  %24 = bitcast i8* %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.Ice::Inst"** %19 to i8*
  tail call void @_ZdlPv(i8* %25) #17
  br label %26

26:                                               ; preds = %21, %16
  %27 = bitcast i8* %4 to %"class.Ice::Inst"***
  %28 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %27, align 8
  %29 = icmp eq %"class.Ice::Inst"** %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint %"class.Ice::Inst"** %28 to i64
  %32 = getelementptr inbounds i8, i8* %4, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.Ice::Inst"** %28 to i8*
  tail call void @_ZdlPv(i8* %34) #17
  br label %35

35:                                               ; preds = %26, %30
  tail call void @_ZdlPv(i8* nonnull %4) #17
  br label %36

36:                                               ; preds = %2, %35
  %37 = bitcast i8** %3 to %"struct.(anonymous namespace)::Optimizer::Uses"**
  store %"struct.(anonymous namespace)::Optimizer::Uses"* %1, %"struct.(anonymous namespace)::Optimizer::Uses"** %37, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.Ice::Operand"* %1 to i64
  %4 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %1, i64 0, i32 5
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %"struct.(anonymous namespace)::Optimizer::Uses"*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %8, label %80

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 72) #17
  %10 = bitcast i8* %9 to %"struct.(anonymous namespace)::Optimizer::Uses"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 72, i1 false) #15
  tail call fastcc void @_ZN12_GLOBAL__N_19Optimizer7setUsesEPN3Ice7OperandEPNS0_4UsesE(%"class.Ice::Operand"* %1, %"struct.(anonymous namespace)::Optimizer::Uses"* nonnull %10) #19
  %11 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %12, align 8
  %14 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %15 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %14, align 8
  %16 = icmp eq %"class.Ice::Operand"** %13, %15
  %17 = ptrtoint %"class.Ice::Operand"** %15 to i64
  br i1 %16, label %23, label %18

18:                                               ; preds = %8
  %19 = bitcast %"class.Ice::Operand"** %13 to i64*
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %13, i64 1
  %21 = ptrtoint %"class.Ice::Operand"** %20 to i64
  %22 = bitcast %"class.Ice::Operand"*** %12 to i64*
  store i64 %21, i64* %22, align 8
  br label %80

23:                                               ; preds = %8
  %24 = ptrtoint %"class.Ice::Operand"** %13 to i64
  %25 = bitcast %"class.Ice::Operand"*** %12 to i64*
  %26 = bitcast %"class.std::__1::vector.311"* %11 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.311"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #18
  unreachable

34:                                               ; preds = %23
  %35 = bitcast %"class.Ice::Operand"*** %14 to i64*
  %36 = sub i64 %17, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #18
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #17
  %51 = bitcast i8* %50 to %"class.Ice::Operand"**
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi %"class.Ice::Operand"** [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %54, i64 %29
  %56 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %54, i64 %53
  %57 = ptrtoint %"class.Ice::Operand"** %56 to i64
  %58 = bitcast %"class.Ice::Operand"** %55 to i64*
  store i64 %3, i64* %58, align 8
  %59 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %55, i64 1
  %60 = ptrtoint %"class.Ice::Operand"** %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %11, i64 0, i32 0, i32 0
  %62 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %61, align 8
  %63 = load i64, i64* %25, align 8
  %64 = ptrtoint %"class.Ice::Operand"** %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %55, i64 %67
  %69 = ptrtoint %"class.Ice::Operand"** %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %52
  %72 = bitcast %"class.Ice::Operand"** %68 to i8*
  %73 = bitcast %"class.Ice::Operand"** %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #15
  %74 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %61, align 8
  br label %75

75:                                               ; preds = %71, %52
  %76 = phi %"class.Ice::Operand"** [ %62, %52 ], [ %74, %71 ]
  store i64 %69, i64* %26, align 8
  store i64 %60, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %77 = icmp eq %"class.Ice::Operand"** %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.Ice::Operand"** %76 to i8*
  tail call void @_ZdlPv(i8* %79) #17
  br label %80

80:                                               ; preds = %78, %75, %18, %2
  %81 = phi %"struct.(anonymous namespace)::Optimizer::Uses"* [ %6, %2 ], [ %10, %18 ], [ %10, %75 ], [ %10, %78 ]
  ret %"struct.(anonymous namespace)::Optimizer::Uses"* %81
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_19Optimizer4Uses6insertEPN3Ice7OperandEPNS2_4InstE(%"struct.(anonymous namespace)::Optimizer::Uses"*, %"class.Ice::Operand"* readnone, %"class.Ice::Inst"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.Ice::Inst"* %2 to i64
  %5 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %5, align 8
  %7 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %7, align 8
  %9 = icmp eq %"class.Ice::Inst"** %6, %8
  %10 = ptrtoint %"class.Ice::Inst"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.Ice::Inst"** %6 to i64*
  store i64 %4, i64* %12, align 8
  %13 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %6, i64 1
  %14 = ptrtoint %"class.Ice::Inst"** %13 to i64
  %15 = bitcast %"class.Ice::Inst"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %3
  %17 = ptrtoint %"class.Ice::Inst"** %6 to i64
  %18 = bitcast %"class.Ice::Inst"*** %5 to i64*
  %19 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #18
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.Ice::Inst"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #18
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #17
  %44 = bitcast i8* %43 to %"class.Ice::Inst"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.Ice::Inst"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %47, i64 %22
  %49 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %47, i64 %46
  %50 = ptrtoint %"class.Ice::Inst"** %49 to i64
  %51 = bitcast %"class.Ice::Inst"** %48 to i64*
  store i64 %4, i64* %51, align 8
  %52 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %48, i64 1
  %53 = ptrtoint %"class.Ice::Inst"** %52 to i64
  %54 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.Ice::Inst"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %48, i64 %60
  %62 = ptrtoint %"class.Ice::Inst"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.Ice::Inst"** %61 to i8*
  %66 = bitcast %"class.Ice::Inst"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #15
  %67 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.Ice::Inst"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.Ice::Inst"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.Ice::Inst"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #17
  br label %73

73:                                               ; preds = %11, %68, %71
  %74 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 11
  br i1 %76, label %87, label %77

77:                                               ; preds = %73
  %78 = icmp ne i32 %75, 9
  %79 = icmp eq %"class.Ice::Inst"* %2, null
  %80 = or i1 %79, %78
  br i1 %80, label %162, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 15
  %83 = bitcast [4 x i8]* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 536870911
  %86 = icmp eq i32 %85, 25
  br i1 %86, label %87, label %164

87:                                               ; preds = %81, %73
  %88 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 13, i32 0, i32 0
  %89 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %88, align 8
  %90 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %89, align 8
  %91 = icmp eq %"class.Ice::Operand"* %90, %1
  br i1 %91, label %92, label %246

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %0, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %0, i64 0, i32 1, i32 0, i32 1
  %95 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %94, align 8
  %96 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %97 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %96, align 8
  %98 = icmp eq %"class.Ice::Inst"** %95, %97
  %99 = ptrtoint %"class.Ice::Inst"** %97 to i64
  br i1 %98, label %105, label %100

100:                                              ; preds = %92
  %101 = bitcast %"class.Ice::Inst"** %95 to i64*
  store i64 %4, i64* %101, align 8
  %102 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %95, i64 1
  %103 = ptrtoint %"class.Ice::Inst"** %102 to i64
  %104 = bitcast %"class.Ice::Inst"*** %94 to i64*
  store i64 %103, i64* %104, align 8
  br label %246

105:                                              ; preds = %92
  %106 = ptrtoint %"class.Ice::Inst"** %95 to i64
  %107 = bitcast %"class.Ice::Inst"*** %94 to i64*
  %108 = bitcast %"class.std::__1::vector.318"* %93 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %106, %109
  %111 = ashr exact i64 %110, 3
  %112 = add nsw i64 %111, 1
  %113 = icmp ugt i64 %112, 2305843009213693951
  br i1 %113, label %114, label %116

114:                                              ; preds = %105
  %115 = bitcast %"class.std::__1::vector.318"* %93 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %115) #18
  unreachable

116:                                              ; preds = %105
  %117 = bitcast %"class.Ice::Inst"*** %96 to i64*
  %118 = sub i64 %99, %109
  %119 = ashr exact i64 %118, 3
  %120 = icmp ult i64 %119, 1152921504606846975
  br i1 %120, label %121, label %129

121:                                              ; preds = %116
  %122 = ashr exact i64 %118, 2
  %123 = icmp ult i64 %122, %112
  %124 = select i1 %123, i64 %112, i64 %122
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %134, label %126

126:                                              ; preds = %121
  %127 = icmp ugt i64 %124, 2305843009213693951
  br i1 %127, label %128, label %129

128:                                              ; preds = %126
  tail call void @abort() #18
  unreachable

129:                                              ; preds = %126, %116
  %130 = phi i64 [ %124, %126 ], [ 2305843009213693951, %116 ]
  %131 = shl i64 %130, 3
  %132 = tail call i8* @_Znwm(i64 %131) #17
  %133 = bitcast i8* %132 to %"class.Ice::Inst"**
  br label %134

134:                                              ; preds = %129, %121
  %135 = phi i64 [ %130, %129 ], [ 0, %121 ]
  %136 = phi %"class.Ice::Inst"** [ %133, %129 ], [ null, %121 ]
  %137 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %136, i64 %111
  %138 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %136, i64 %135
  %139 = ptrtoint %"class.Ice::Inst"** %138 to i64
  %140 = bitcast %"class.Ice::Inst"** %137 to i64*
  store i64 %4, i64* %140, align 8
  %141 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %137, i64 1
  %142 = ptrtoint %"class.Ice::Inst"** %141 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.318", %"class.std::__1::vector.318"* %93, i64 0, i32 0, i32 0
  %144 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %143, align 8
  %145 = load i64, i64* %107, align 8
  %146 = ptrtoint %"class.Ice::Inst"** %144 to i64
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 3
  %149 = sub nsw i64 0, %148
  %150 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %137, i64 %149
  %151 = ptrtoint %"class.Ice::Inst"** %150 to i64
  %152 = icmp sgt i64 %147, 0
  br i1 %152, label %153, label %157

153:                                              ; preds = %134
  %154 = bitcast %"class.Ice::Inst"** %150 to i8*
  %155 = bitcast %"class.Ice::Inst"** %144 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 %147, i1 false) #15
  %156 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %143, align 8
  br label %157

157:                                              ; preds = %153, %134
  %158 = phi %"class.Ice::Inst"** [ %144, %134 ], [ %156, %153 ]
  store i64 %151, i64* %108, align 8
  store i64 %142, i64* %107, align 8
  store i64 %139, i64* %117, align 8
  %159 = icmp eq %"class.Ice::Inst"** %158, null
  br i1 %159, label %246, label %160

160:                                              ; preds = %157
  %161 = bitcast %"class.Ice::Inst"** %158 to i8*
  tail call void @_ZdlPv(i8* %161) #17
  br label %246

162:                                              ; preds = %77
  %163 = icmp eq i32 %75, 15
  br i1 %163, label %170, label %246

164:                                              ; preds = %81
  %165 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 15
  %166 = bitcast [4 x i8]* %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = and i32 %167, 536870911
  %169 = icmp eq i32 %168, 32
  br i1 %169, label %170, label %246

170:                                              ; preds = %164, %162
  %171 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 13, i32 0, i32 0
  %172 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %171, align 8
  %173 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %172, i64 1
  %174 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %173, align 8
  %175 = icmp eq %"class.Ice::Operand"* %174, %1
  br i1 %175, label %176, label %246

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %0, i64 0, i32 2
  %178 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %0, i64 0, i32 2, i32 0, i32 1
  %179 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %178, align 8
  %180 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %181 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %180, align 8
  %182 = icmp eq %"class.Ice::Inst"** %179, %181
  %183 = ptrtoint %"class.Ice::Inst"** %181 to i64
  br i1 %182, label %189, label %184

184:                                              ; preds = %176
  %185 = bitcast %"class.Ice::Inst"** %179 to i64*
  store i64 %4, i64* %185, align 8
  %186 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %179, i64 1
  %187 = ptrtoint %"class.Ice::Inst"** %186 to i64
  %188 = bitcast %"class.Ice::Inst"*** %178 to i64*
  store i64 %187, i64* %188, align 8
  br label %246

189:                                              ; preds = %176
  %190 = ptrtoint %"class.Ice::Inst"** %179 to i64
  %191 = bitcast %"class.Ice::Inst"*** %178 to i64*
  %192 = bitcast %"class.std::__1::vector.318"* %177 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %190, %193
  %195 = ashr exact i64 %194, 3
  %196 = add nsw i64 %195, 1
  %197 = icmp ugt i64 %196, 2305843009213693951
  br i1 %197, label %198, label %200

198:                                              ; preds = %189
  %199 = bitcast %"class.std::__1::vector.318"* %177 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %199) #18
  unreachable

200:                                              ; preds = %189
  %201 = bitcast %"class.Ice::Inst"*** %180 to i64*
  %202 = sub i64 %183, %193
  %203 = ashr exact i64 %202, 3
  %204 = icmp ult i64 %203, 1152921504606846975
  br i1 %204, label %205, label %213

205:                                              ; preds = %200
  %206 = ashr exact i64 %202, 2
  %207 = icmp ult i64 %206, %196
  %208 = select i1 %207, i64 %196, i64 %206
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %218, label %210

210:                                              ; preds = %205
  %211 = icmp ugt i64 %208, 2305843009213693951
  br i1 %211, label %212, label %213

212:                                              ; preds = %210
  tail call void @abort() #18
  unreachable

213:                                              ; preds = %210, %200
  %214 = phi i64 [ %208, %210 ], [ 2305843009213693951, %200 ]
  %215 = shl i64 %214, 3
  %216 = tail call i8* @_Znwm(i64 %215) #17
  %217 = bitcast i8* %216 to %"class.Ice::Inst"**
  br label %218

218:                                              ; preds = %213, %205
  %219 = phi i64 [ %214, %213 ], [ 0, %205 ]
  %220 = phi %"class.Ice::Inst"** [ %217, %213 ], [ null, %205 ]
  %221 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %220, i64 %195
  %222 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %220, i64 %219
  %223 = ptrtoint %"class.Ice::Inst"** %222 to i64
  %224 = bitcast %"class.Ice::Inst"** %221 to i64*
  store i64 %4, i64* %224, align 8
  %225 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %221, i64 1
  %226 = ptrtoint %"class.Ice::Inst"** %225 to i64
  %227 = getelementptr inbounds %"class.std::__1::vector.318", %"class.std::__1::vector.318"* %177, i64 0, i32 0, i32 0
  %228 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %227, align 8
  %229 = load i64, i64* %191, align 8
  %230 = ptrtoint %"class.Ice::Inst"** %228 to i64
  %231 = sub i64 %229, %230
  %232 = ashr exact i64 %231, 3
  %233 = sub nsw i64 0, %232
  %234 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %221, i64 %233
  %235 = ptrtoint %"class.Ice::Inst"** %234 to i64
  %236 = icmp sgt i64 %231, 0
  br i1 %236, label %237, label %241

237:                                              ; preds = %218
  %238 = bitcast %"class.Ice::Inst"** %234 to i8*
  %239 = bitcast %"class.Ice::Inst"** %228 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %238, i8* align 8 %239, i64 %231, i1 false) #15
  %240 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %227, align 8
  br label %241

241:                                              ; preds = %237, %218
  %242 = phi %"class.Ice::Inst"** [ %228, %218 ], [ %240, %237 ]
  store i64 %235, i64* %192, align 8
  store i64 %226, i64* %191, align 8
  store i64 %223, i64* %201, align 8
  %243 = icmp eq %"class.Ice::Inst"** %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %241
  %245 = bitcast %"class.Ice::Inst"** %242 to i8*
  tail call void @_ZdlPv(i8* %245) #17
  br label %246

246:                                              ; preds = %162, %164, %244, %241, %184, %160, %157, %100, %170, %87
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_19Optimizer6isDeadEPN3Ice4InstE(%"class.(anonymous namespace)::Optimizer"*, %"class.Ice::Inst"* readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 10
  %4 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, align 8
  %5 = icmp eq %"class.Ice::Variable"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %4, i64 0, i32 0, i32 5
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %4, i64 0, i32 0
  %12 = tail call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* %0, %"class.Ice::Operand"* %11) #19
  %13 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %13, align 8
  %15 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %12, i64 0, i32 0, i32 0, i32 1
  %16 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %15, align 8
  %17 = icmp eq %"class.Ice::Inst"** %14, %16
  br i1 %17, label %18, label %76

18:                                               ; preds = %6, %10
  %19 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 6
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = icmp eq i8 %20, 0
  br label %76

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 15
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = icmp ne i32 %24, 9
  %28 = icmp eq %"class.Ice::Inst"* %1, null
  %29 = or i1 %28, %27
  br i1 %29, label %76, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 15
  %32 = bitcast [4 x i8]* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 536870911
  %35 = icmp eq i32 %34, 32
  br i1 %35, label %36, label %76

36:                                               ; preds = %30, %22
  %37 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 13, i32 0, i32 0
  %38 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %37, align 8
  %39 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %38, i64 1
  %40 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %39, align 8
  %41 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %40, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, -18
  %44 = icmp ugt i32 %43, 14
  %45 = icmp eq %"class.Ice::Operand"* %40, null
  %46 = or i1 %45, %44
  br i1 %46, label %76, label %47

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %40, i64 4, i32 5
  %49 = bitcast i8** %48 to %"class.Ice::Inst"**
  %50 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %49, align 8
  %51 = icmp eq %"class.Ice::Inst"* %50, null
  br i1 %51, label %76, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %50, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %76

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %40, i64 0, i32 5
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %76, label %60

60:                                               ; preds = %56
  %61 = tail call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* %0, %"class.Ice::Operand"* nonnull %40) #19
  %62 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %61, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.Ice::Inst"*** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %61 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %61, i64 0, i32 2
  %69 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %61, i64 0, i32 2, i32 0, i32 1
  %70 = bitcast %"class.Ice::Inst"*** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.318"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = icmp eq i64 %67, %74
  br label %76

76:                                               ; preds = %56, %52, %47, %36, %30, %26, %60, %10, %18
  %77 = phi i1 [ false, %10 ], [ %21, %18 ], [ %75, %60 ], [ true, %56 ], [ false, %26 ], [ false, %30 ], [ false, %36 ], [ false, %47 ], [ false, %52 ]
  ret i1 %77
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_19Optimizer17deleteInstructionEPN3Ice4InstE(%"class.(anonymous namespace)::Optimizer"*, %"class.Ice::Inst"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.Ice::Inst"* %1, null
  br i1 %3, label %138, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %138

8:                                                ; preds = %4
  store i8 1, i8* %5, align 8
  %9 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 13
  %10 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 13, i32 0, i32 1
  %11 = bitcast %"class.Ice::Operand"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.226"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = lshr exact i64 %15, 3
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %138, label %19

19:                                               ; preds = %8, %130
  %20 = phi i64 [ %133, %130 ], [ %14, %8 ]
  %21 = phi i64 [ %131, %130 ], [ 0, %8 ]
  %22 = inttoptr i64 %20 to %"class.Ice::Operand"**
  %23 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %22, i64 %21
  %24 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %23, align 8
  %25 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %24, i64 0, i32 5
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %130, label %28

28:                                               ; preds = %19
  %29 = tail call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* %0, %"class.Ice::Operand"* %24) #19
  %30 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %29, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.Ice::Inst"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.(anonymous namespace)::Optimizer::Uses"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %32, %34
  %36 = inttoptr i64 %34 to %"class.Ice::Inst"**
  %37 = inttoptr i64 %32 to %"class.Ice::Inst"**
  br i1 %35, label %114, label %38

38:                                               ; preds = %28
  %39 = sub i64 %32, %34
  %40 = ashr exact i64 %39, 3
  br label %43

41:                                               ; preds = %43
  %42 = icmp ult i64 %48, %40
  br i1 %42, label %43, label %114

43:                                               ; preds = %41, %38
  %44 = phi i64 [ 0, %38 ], [ %48, %41 ]
  %45 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %36, i64 %44
  %46 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %45, align 8
  %47 = icmp eq %"class.Ice::Inst"* %46, %1
  %48 = add nuw i64 %44, 1
  br i1 %47, label %49, label %41

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %36, i64 %44
  %51 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %37, i64 -1
  %52 = bitcast %"class.Ice::Inst"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.Ice::Inst"** %50 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %30, align 8
  %56 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %55, i64 -1
  store %"class.Ice::Inst"** %56, %"class.Ice::Inst"*** %30, align 8
  %57 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %29, i64 0, i32 1
  %58 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %29, i64 0, i32 1, i32 0, i32 1
  %59 = bitcast %"class.Ice::Inst"*** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::vector.318"* %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %60, %62
  %64 = inttoptr i64 %62 to %"class.Ice::Inst"**
  %65 = inttoptr i64 %60 to %"class.Ice::Inst"**
  br i1 %63, label %85, label %66

66:                                               ; preds = %49
  %67 = sub i64 %60, %62
  %68 = ashr exact i64 %67, 3
  br label %71

69:                                               ; preds = %71
  %70 = icmp ult i64 %76, %68
  br i1 %70, label %71, label %85

71:                                               ; preds = %69, %66
  %72 = phi i64 [ 0, %66 ], [ %76, %69 ]
  %73 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %64, i64 %72
  %74 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %73, align 8
  %75 = icmp eq %"class.Ice::Inst"* %74, %1
  %76 = add nuw i64 %72, 1
  br i1 %75, label %77, label %69

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %64, i64 %72
  %79 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %65, i64 -1
  %80 = bitcast %"class.Ice::Inst"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.Ice::Inst"** %78 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %58, align 8
  %84 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %83, i64 -1
  store %"class.Ice::Inst"** %84, %"class.Ice::Inst"*** %58, align 8
  br label %85

85:                                               ; preds = %69, %77, %49
  %86 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %29, i64 0, i32 2
  %87 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %29, i64 0, i32 2, i32 0, i32 1
  %88 = bitcast %"class.Ice::Inst"*** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.318"* %86 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %89, %91
  %93 = inttoptr i64 %91 to %"class.Ice::Inst"**
  %94 = inttoptr i64 %89 to %"class.Ice::Inst"**
  br i1 %92, label %114, label %95

95:                                               ; preds = %85
  %96 = sub i64 %89, %91
  %97 = ashr exact i64 %96, 3
  br label %100

98:                                               ; preds = %100
  %99 = icmp ult i64 %105, %97
  br i1 %99, label %100, label %114

100:                                              ; preds = %98, %95
  %101 = phi i64 [ 0, %95 ], [ %105, %98 ]
  %102 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %93, i64 %101
  %103 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %102, align 8
  %104 = icmp eq %"class.Ice::Inst"* %103, %1
  %105 = add nuw i64 %101, 1
  br i1 %104, label %106, label %98

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %93, i64 %101
  %108 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %94, i64 -1
  %109 = bitcast %"class.Ice::Inst"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.Ice::Inst"** %107 to i64*
  store i64 %110, i64* %111, align 8
  %112 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %87, align 8
  %113 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %112, i64 -1
  store %"class.Ice::Inst"** %113, %"class.Ice::Inst"*** %87, align 8
  br label %114

114:                                              ; preds = %41, %98, %28, %85, %106
  %115 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %29, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %115, align 8
  %117 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %30, align 8
  %118 = icmp eq %"class.Ice::Inst"** %116, %117
  br i1 %118, label %119, label %130

119:                                              ; preds = %114
  tail call fastcc void @_ZN12_GLOBAL__N_19Optimizer7setUsesEPN3Ice7OperandEPNS0_4UsesE(%"class.Ice::Operand"* %24, %"struct.(anonymous namespace)::Optimizer::Uses"* null) #19
  %120 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %24, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, -18
  %123 = icmp ugt i32 %122, 14
  %124 = icmp eq %"class.Ice::Operand"* %24, null
  %125 = or i1 %124, %123
  br i1 %125, label %130, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %24, i64 4, i32 5
  %128 = bitcast i8** %127 to %"class.Ice::Inst"**
  %129 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %128, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_19Optimizer17deleteInstructionEPN3Ice4InstE(%"class.(anonymous namespace)::Optimizer"* %0, %"class.Ice::Inst"* %129) #19
  br label %130

130:                                              ; preds = %19, %114, %119, %126
  %131 = add nuw nsw i64 %21, 1
  %132 = load i64, i64* %11, align 8
  %133 = load i64, i64* %13, align 8
  %134 = sub i64 %132, %133
  %135 = lshr exact i64 %134, 3
  %136 = and i64 %135, 4294967295
  %137 = icmp ult i64 %131, %136
  br i1 %137, label %19, label %138

138:                                              ; preds = %130, %8, %4, %2
  ret void
}

; Function Attrs: optsize
declare %"class.Ice::Constant"* @_ZN3Ice13GlobalContext16getConstantUndefENS_4TypeE(%"class.Ice::GlobalContext"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_19Optimizer7replaceEPN3Ice4InstEPNS1_7OperandE(%"class.(anonymous namespace)::Optimizer"*, %"class.Ice::Inst"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 10
  %5 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %4, align 8
  %6 = icmp eq %"class.Ice::Operand"* %2, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::Optimizer", %"class.(anonymous namespace)::Optimizer"* %0, i64 0, i32 1
  %9 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %8, align 8
  %10 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %5, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = tail call %"class.Ice::Constant"* @_ZN3Ice13GlobalContext16getConstantUndefENS_4TypeE(%"class.Ice::GlobalContext"* %9, i32 %11) #16
  %13 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %12, i64 0, i32 0
  br label %14

14:                                               ; preds = %3, %7
  %15 = phi %"class.Ice::Operand"* [ %2, %3 ], [ %13, %7 ]
  %16 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %5, i64 0, i32 0, i32 5
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %64, label %20

20:                                               ; preds = %14
  %21 = tail call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* %0, %"class.Ice::Operand"* %16) #19
  %22 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %22, align 8
  %24 = getelementptr inbounds %"struct.(anonymous namespace)::Optimizer::Uses", %"struct.(anonymous namespace)::Optimizer::Uses"* %21, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %24, align 8
  %26 = icmp eq %"class.Ice::Inst"** %23, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %41, %20
  tail call fastcc void @_ZN12_GLOBAL__N_19Optimizer7setUsesEPN3Ice7OperandEPNS0_4UsesE(%"class.Ice::Operand"* %16, %"struct.(anonymous namespace)::Optimizer::Uses"* null) #19
  br label %64

28:                                               ; preds = %20, %41
  %29 = phi %"class.Ice::Inst"** [ %43, %41 ], [ %23, %20 ]
  %30 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %29, align 8
  %31 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %30, i64 0, i32 13
  %32 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %30, i64 0, i32 13, i32 0, i32 1
  %33 = bitcast %"class.Ice::Operand"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.226"* %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = lshr exact i64 %37, 3
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %56, %28
  %42 = tail call fastcc %"struct.(anonymous namespace)::Optimizer::Uses"* @_ZN12_GLOBAL__N_19Optimizer7getUsesEPN3Ice7OperandE(%"class.(anonymous namespace)::Optimizer"* %0, %"class.Ice::Operand"* %15) #19
  tail call fastcc void @_ZN12_GLOBAL__N_19Optimizer4Uses6insertEPN3Ice7OperandEPNS2_4InstE(%"struct.(anonymous namespace)::Optimizer::Uses"* %42, %"class.Ice::Operand"* %15, %"class.Ice::Inst"* %30) #19
  %43 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %29, i64 1
  %44 = icmp eq %"class.Ice::Inst"** %43, %25
  br i1 %44, label %27, label %28

45:                                               ; preds = %28, %56
  %46 = phi i64 [ %57, %56 ], [ %36, %28 ]
  %47 = phi i64 [ %58, %56 ], [ %34, %28 ]
  %48 = phi i64 [ %59, %56 ], [ 0, %28 ]
  %49 = inttoptr i64 %46 to %"class.Ice::Operand"**
  %50 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %49, i64 %48
  %51 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %50, align 8
  %52 = icmp eq %"class.Ice::Operand"* %51, %16
  br i1 %52, label %53, label %56

53:                                               ; preds = %45
  store %"class.Ice::Operand"* %15, %"class.Ice::Operand"** %50, align 8
  %54 = load i64, i64* %33, align 8
  %55 = load i64, i64* %35, align 8
  br label %56

56:                                               ; preds = %45, %53
  %57 = phi i64 [ %46, %45 ], [ %55, %53 ]
  %58 = phi i64 [ %47, %45 ], [ %54, %53 ]
  %59 = add nuw nsw i64 %48, 1
  %60 = sub i64 %58, %57
  %61 = lshr exact i64 %60, 3
  %62 = and i64 %61, 4294967295
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %45, label %41

64:                                               ; preds = %14, %27
  tail call fastcc void @_ZN12_GLOBAL__N_19Optimizer17deleteInstructionEPN3Ice4InstE(%"class.(anonymous namespace)::Optimizer"* %0, %"class.Ice::Inst"* %1) #19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.318"*, %"class.std::__1::vector.318"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.318"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  %4 = getelementptr inbounds %"class.std::__1::vector.318", %"class.std::__1::vector.318"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.Ice::Inst"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.318"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %2
  %12 = ashr exact i64 %9, 3
  tail call void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEE11__vallocateEm(%"class.std::__1::vector.318"* %0, i64 %12) #19
  %13 = getelementptr inbounds %"class.std::__1::vector.318", %"class.std::__1::vector.318"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %13, align 8
  %15 = load i64, i64* %5, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.318", %"class.std::__1::vector.318"* %0, i64 0, i32 0, i32 1
  %17 = bitcast %"class.Ice::Inst"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint %"class.Ice::Inst"** %14 to i64
  %20 = sub i64 %15, %19
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %11
  %23 = lshr exact i64 %20, 3
  %24 = inttoptr i64 %18 to i8*
  %25 = bitcast %"class.Ice::Inst"** %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 %20, i1 false) #15
  %26 = inttoptr i64 %18 to %"class.Ice::Inst"**
  %27 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %26, i64 %23
  %28 = ptrtoint %"class.Ice::Inst"** %27 to i64
  br label %29

29:                                               ; preds = %11, %22
  %30 = phi i64 [ %28, %22 ], [ %18, %11 ]
  store i64 %30, i64* %17, align 8
  br label %31

31:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice4InstENS_9allocatorIS3_EEE11__vallocateEm(%"class.std::__1::vector.318"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.318"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #18
  unreachable

6:                                                ; preds = %2
  %7 = shl i64 %1, 3
  %8 = tail call i8* @_Znwm(i64 %7) #17
  %9 = bitcast i8* %8 to %"class.Ice::Inst"**
  %10 = getelementptr inbounds %"class.std::__1::vector.318", %"class.std::__1::vector.318"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.Ice::Inst"*** %10 to i8**
  store i8* %8, i8** %11, align 8
  %12 = bitcast %"class.std::__1::vector.318"* %0 to i8**
  store i8* %8, i8** %12, align 8
  %13 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %9, i64 %1
  %14 = getelementptr inbounds %"class.std::__1::vector.318", %"class.std::__1::vector.318"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.Ice::Inst"** %13, %"class.Ice::Inst"*** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS_9allocatorIS3_EEEC2Em(%"class.std::__1::vector.341"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.341"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS_9allocatorIS3_EEE11__vallocateEm(%"class.std::__1::vector.341"* %0, i64 %1) #19
  %6 = getelementptr inbounds %"class.std::__1::vector.341", %"class.std::__1::vector.341"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.Ice::Variable"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = inttoptr i64 %8 to %"class.Ice::Variable"**
  %10 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, i64 %1
  %11 = inttoptr i64 %8 to i8*
  %12 = add i64 %1, -1
  %13 = getelementptr %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, i64 %12
  %14 = bitcast %"class.Ice::Variable"** %13 to i8*
  %15 = sub i64 0, %8
  %16 = getelementptr i8, i8* %14, i64 %15
  %17 = ptrtoint i8* %16 to i64
  %18 = add i64 %17, 8
  %19 = and i64 %18, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 %19, i1 false) #15
  %20 = ptrtoint %"class.Ice::Variable"** %10 to i64
  store i64 %20, i64* %7, align 8
  br label %21

21:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::ConstantPrimitive"* @_ZN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE6createEPNS_13GlobalContextENS_4TypeEi(%"class.Ice::GlobalContext"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.Ice::ConstantPrimitive"* @_ZN3Ice13GlobalContext8allocateINS_17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EEEEEPNSt3__19enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES8_E4typeEv(%"class.Ice::GlobalContext"* %0) #19
  %5 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %4, i64 0, i32 0, i32 0, i32 3
  %9 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %4, i64 0, i32 0, i32 0, i32 4
  %10 = getelementptr inbounds %"class.Ice::Variable"**, %"class.Ice::Variable"*** %9, i64 1
  %11 = bitcast %"class.Ice::Variable"*** %10 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %4, i64 0, i32 0, i32 2
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %4, i64 0, i32 0, i32 3
  store i8 0, i8* %13, align 1
  store %"class.Ice::Variable"** null, %"class.Ice::Variable"*** %9, align 8
  store i32 0, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %14 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %4, i64 0, i32 1
  store i32 %2, i32* %14, align 4
  %15 = bitcast %"class.Ice::ConstantPrimitive"* %4 to %"class.Ice::Constant"*
  tail call void @_ZN3Ice8Constant18initShouldBePooledEv(%"class.Ice::Constant"* %15) #16
  %16 = load i8, i8* %12, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %3
  tail call void @_ZN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE8initNameEPNS_13GlobalContextE(%"class.Ice::ConstantPrimitive"* %4, %"class.Ice::GlobalContext"* %0) #19
  br label %19

19:                                               ; preds = %3, %18
  ret %"class.Ice::ConstantPrimitive"* %4
}

; Function Attrs: optsize
declare %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS_9allocatorIS3_EEE11__vallocateEm(%"class.std::__1::vector.341"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.341"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #18
  unreachable

6:                                                ; preds = %2
  %7 = shl i64 %1, 3
  %8 = tail call i8* @_Znwm(i64 %7) #17
  %9 = bitcast i8* %8 to %"class.Ice::Variable"**
  %10 = getelementptr inbounds %"class.std::__1::vector.341", %"class.std::__1::vector.341"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.Ice::Variable"*** %10 to i8**
  store i8* %8, i8** %11, align 8
  %12 = bitcast %"class.std::__1::vector.341"* %0 to i8**
  store i8* %8, i8** %12, align 8
  %13 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, i64 %1
  %14 = getelementptr inbounds %"class.std::__1::vector.341", %"class.std::__1::vector.341"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.Ice::Variable"** %13, %"class.Ice::Variable"*** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::ConstantPrimitive"* @_ZN3Ice13GlobalContext8allocateINS_17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EEEEEPNSt3__19enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES8_E4typeEv(%"class.Ice::GlobalContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::__split_buffer.350", align 8
  %3 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %4) #16, !noalias !7
  %5 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %3, i64 56, i64 8) #16
  %6 = bitcast i8* %5 to %"class.Ice::ConstantPrimitive"*
  %7 = icmp eq %"class.Ice::GlobalContext"* %0, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* nonnull %4) #16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 6
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %11) #16, !noalias !10
  %12 = ptrtoint i8* %5 to i64
  %13 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 7, i32 0, i32 1
  %14 = load %"class.std::__1::function"*, %"class.std::__1::function"** %13, align 8
  %15 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.std::__1::function"*, %"class.std::__1::function"** %15, align 8
  %17 = icmp ult %"class.std::__1::function"* %14, %16
  %18 = ptrtoint %"class.std::__1::function"* %16 to i64
  br i1 %17, label %19, label %26

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %14, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %14, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS6_17ConstantPrimitiveIiLNS6_7Operand11OperandKindE1EEEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESE_E4typeEvEUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %20, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS4_17ConstantPrimitiveIiLNS4_7Operand11OperandKindE1EEEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESC_E4typeEvEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %21, align 8
  %22 = bitcast %"class.std::__1::function"* %14 to i64*
  store i64 %12, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %14, i64 1
  %24 = ptrtoint %"class.std::__1::function"* %23 to i64
  %25 = bitcast %"class.std::__1::function"** %13 to i64*
  store i64 %24, i64* %25, align 8
  br label %56

26:                                               ; preds = %9
  %27 = ptrtoint %"class.std::__1::function"* %14 to i64
  %28 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 7, i32 0, i32 2
  %29 = bitcast %"class.std::__1::__compressed_pair.14"* %28 to %"class.std::__1::allocator.17"*
  %30 = bitcast %"struct.std::__1::__split_buffer.350"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #15
  %31 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %2, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 40, i1 false) #15
  %32 = bitcast %"class.std::__1::vector.12"* %10 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %27, %33
  %35 = ashr exact i64 %34, 5
  %36 = add nsw i64 %35, 1
  %37 = icmp ugt i64 %36, 576460752303423487
  br i1 %37, label %38, label %40

38:                                               ; preds = %26
  %39 = bitcast %"class.std::__1::vector.12"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #18
  unreachable

40:                                               ; preds = %26
  %41 = sub i64 %18, %33
  %42 = ashr exact i64 %41, 5
  %43 = icmp ult i64 %42, 288230376151711743
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = ashr exact i64 %41, 4
  %46 = icmp ult i64 %45, %36
  %47 = select i1 %46, i64 %36, i64 %45
  br label %48

48:                                               ; preds = %44, %40
  %49 = phi i64 [ %47, %44 ], [ 576460752303423487, %40 ]
  call void @_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEEC2EmmS6_(%"struct.std::__1::__split_buffer.350"* nonnull %2, i64 %49, i64 %35, %"class.std::__1::allocator.17"* dereferenceable(1) %29) #16
  %50 = load %"class.std::__1::function"*, %"class.std::__1::function"** %31, align 8
  %51 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 0, i32 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS6_17ConstantPrimitiveIiLNS6_7Operand11OperandKindE1EEEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESE_E4typeEvEUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %51, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS4_17ConstantPrimitiveIiLNS4_7Operand11OperandKindE1EEEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESC_E4typeEvEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %52, align 8
  %53 = bitcast %"class.std::__1::function"* %50 to i64*
  store i64 %12, i64* %53, align 8
  %54 = load %"class.std::__1::function"*, %"class.std::__1::function"** %31, align 8
  %55 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %54, i64 1
  store %"class.std::__1::function"* %55, %"class.std::__1::function"** %31, align 8
  call void @_ZNSt3__16vectorINS_8functionIFvvEEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(%"class.std::__1::vector.12"* %10, %"struct.std::__1::__split_buffer.350"* nonnull dereferenceable(40) %2) #16
  call void @_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.350"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #15
  br label %56

56:                                               ; preds = %19, %48
  %57 = icmp eq %"class.std::__1::mutex"* %11, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %56
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* nonnull %11) #16
  br label %59

59:                                               ; preds = %56, %58
  ret %"class.Ice::ConstantPrimitive"* %6
}

; Function Attrs: optsize
declare void @_ZN3Ice8Constant18initShouldBePooledEv(%"class.Ice::Constant"*) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE8initNameEPNS_13GlobalContextE(%"class.Ice::ConstantPrimitive"*, %"class.Ice::GlobalContext"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.Ice::StringID", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.llvm::raw_string_ostream", align 8
  %6 = alloca %"class.llvm::FormattedNumber", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #15
  %9 = bitcast %"class.llvm::raw_string_ostream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  %10 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 0, i32 4
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 1
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %14, align 8
  %15 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %23 [
    i32 6, label %17
    i32 7, label %20
  ]

17:                                               ; preds = %2
  %18 = bitcast %"class.llvm::raw_string_ostream"* %5 to %"class.llvm::raw_ostream"*
  %19 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* nonnull %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #16
  br label %30

20:                                               ; preds = %2
  %21 = bitcast %"class.llvm::raw_string_ostream"* %5 to %"class.llvm::raw_ostream"*
  %22 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* nonnull %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #16
  br label %30

23:                                               ; preds = %2
  %24 = bitcast %"class.llvm::raw_string_ostream"* %5 to %"class.llvm::raw_ostream"*
  %25 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* nonnull %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #16
  %26 = load i32, i32* %15, align 8
  %27 = call i8* @_ZN3Ice10typeStringENS_4TypeE(i32 %26) #16
  %28 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %25, i8* %27) #16
  %29 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #16
  br label %30

30:                                               ; preds = %23, %20, %17
  %31 = phi %"class.llvm::raw_ostream"* [ %24, %23 ], [ %21, %20 ], [ %18, %17 ]
  %32 = bitcast %"class.llvm::FormattedNumber"* %6 to i8*
  %33 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %0, i64 0, i32 1
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds %"class.llvm::FormattedNumber", %"class.llvm::FormattedNumber"* %6, i64 0, i32 0
  %36 = getelementptr inbounds %"class.llvm::FormattedNumber", %"class.llvm::FormattedNumber"* %6, i64 0, i32 1
  %37 = getelementptr inbounds %"class.llvm::FormattedNumber", %"class.llvm::FormattedNumber"* %6, i64 0, i32 2
  %38 = getelementptr inbounds %"class.llvm::FormattedNumber", %"class.llvm::FormattedNumber"* %6, i64 0, i32 3
  %39 = getelementptr inbounds %"class.llvm::FormattedNumber", %"class.llvm::FormattedNumber"* %6, i64 0, i32 4
  %40 = getelementptr inbounds %"class.llvm::FormattedNumber", %"class.llvm::FormattedNumber"* %6, i64 0, i32 5
  br label %60

41:                                               ; preds = %60
  %42 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 0, i32 3
  %43 = load i8*, i8** %42, align 8
  %44 = load i8*, i8** %12, align 8
  %45 = icmp eq i8* %43, %44
  br i1 %45, label %47, label %46

46:                                               ; preds = %41
  call void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"* nonnull %31) #16
  br label %47

47:                                               ; preds = %41, %46
  %48 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %49 = bitcast %"class.Ice::StringID"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  call void @_ZN3Ice8StringIDINS_22GlobalStringPoolTraitsEEC2EPKNS_13GlobalContextERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.Ice::StringID"* nonnull %3, %"class.Ice::GlobalContext"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %48) #16
  %50 = getelementptr inbounds %"class.Ice::StringID", %"class.Ice::StringID"* %3, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  %52 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %51, i64* %52, align 8
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #15
  %53 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %47
  %58 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %58) #17
  br label %59

59:                                               ; preds = %47, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void

60:                                               ; preds = %60, %30
  %61 = phi i64 [ 0, %30 ], [ %67, %60 ]
  %62 = sub nuw nsw i64 3, %61
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #15
  %63 = getelementptr inbounds i8, i8* %34, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i64
  store i64 %65, i64* %35, align 8, !alias.scope !13
  store i64 0, i64* %36, align 8, !alias.scope !13
  store i32 2, i32* %37, align 8, !alias.scope !13
  store i8 1, i8* %38, align 4, !alias.scope !13
  store i8 0, i8* %39, align 1, !alias.scope !13
  store i8 0, i8* %40, align 2, !alias.scope !13
  %66 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE(%"class.llvm::raw_ostream"* nonnull %31, %"class.llvm::FormattedNumber"* nonnull dereferenceable(24) %6) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #15
  %67 = add nuw nsw i64 %61, 1
  %68 = icmp eq i64 %67, 4
  br i1 %68, label %41, label %60
}

; Function Attrs: optsize
declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.348", align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = add i64 %2, -1
  %12 = add i64 %11, %10
  %13 = sub i64 0, %2
  %14 = and i64 %12, %13
  %15 = sub i64 %14, %10
  %16 = add i64 %15, %1
  %17 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp ugt i64 %16, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %9, i64 %15
  %24 = getelementptr inbounds i8, i8* %23, i64 %1
  store i8* %24, i8** %8, align 8
  br label %45

25:                                               ; preds = %3
  %26 = add i64 %11, %1
  %27 = icmp ugt i64 %26, 1048576
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call noalias i8* @malloc(i64 %26) #16
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair.348"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"struct.std::__1::pair.348", %"struct.std::__1::pair.348"* %4, i64 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.348", %"struct.std::__1::pair.348"* %4, i64 0, i32 1
  store i64 %26, i64* %33, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"* %30, %"struct.std::__1::pair.348"* nonnull dereferenceable(16) %4) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #15
  %34 = ptrtoint i8* %29 to i64
  %35 = add i64 %11, %34
  %36 = and i64 %35, %13
  %37 = inttoptr i64 %36 to i8*
  br label %45

38:                                               ; preds = %25
  tail call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"* %0) #19
  %39 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %11
  %42 = and i64 %41, %13
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %1
  store i8* %44, i8** %8, align 8
  br label %45

45:                                               ; preds = %28, %38, %22
  %46 = phi i8* [ %23, %22 ], [ %37, %28 ], [ %43, %38 ]
  ret i8* %46
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"*, %"struct.std::__1::pair.348"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #16
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.348"**
  %15 = bitcast %"struct.std::__1::pair.348"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.348"*, %"struct.std::__1::pair.348"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.348", %"struct.std::__1::pair.348"* %16, i64 1
  store %"struct.std::__1::pair.348"* %17, %"struct.std::__1::pair.348"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr i64 %9, 10
  %11 = and i64 %10, 33554431
  %12 = icmp ult i64 %11, 30
  %13 = select i1 %12, i64 %11, i64 30
  %14 = shl i64 1048576, %13
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  %16 = tail call noalias i8* @malloc(i64 %14) #16
  store i8* %16, i8** %2, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %3, i64 0, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* %17, i8** nonnull dereferenceable(8) %2) #19
  %18 = bitcast i8** %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %14
  %23 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !16

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #16
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #20
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #9 comdat {
  tail call void @abort() #18
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS6_17ConstantPrimitiveIiLNS6_7Operand11OperandKindE1EEEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESE_E4typeEvEUlvE_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.Ice::ConstantPrimitive"**
  %3 = load %"class.Ice::ConstantPrimitive"*, %"class.Ice::ConstantPrimitive"** %2, align 8
  %4 = bitcast %"class.Ice::ConstantPrimitive"* %3 to void (%"class.Ice::ConstantPrimitive"*)***
  %5 = load void (%"class.Ice::ConstantPrimitive"*)**, void (%"class.Ice::ConstantPrimitive"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.Ice::ConstantPrimitive"*)*, void (%"class.Ice::ConstantPrimitive"*)** %5, i64 2
  %7 = load void (%"class.Ice::ConstantPrimitive"*)*, void (%"class.Ice::ConstantPrimitive"*)** %6, align 8
  tail call void %7(%"class.Ice::ConstantPrimitive"* %3) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEEC2EmmS6_(%"struct.std::__1::__split_buffer.350"*, i64, i64, %"class.std::__1::allocator.17"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.std::__1::function"* null, %"class.std::__1::function"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.17"* %3, %"class.std::__1::allocator.17"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 576460752303423487
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #18
  unreachable

11:                                               ; preds = %8
  %12 = shl i64 %1, 5
  %13 = tail call i8* @_Znwm(i64 %12) #17
  %14 = bitcast i8* %13 to %"class.std::__1::function"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"class.std::__1::function"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 0
  store %"class.std::__1::function"* %16, %"class.std::__1::function"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 2
  store %"class.std::__1::function"* %18, %"class.std::__1::function"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 1
  store %"class.std::__1::function"* %18, %"class.std::__1::function"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %16, i64 %1
  store %"class.std::__1::function"* %21, %"class.std::__1::function"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_8functionIFvvEEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(%"class.std::__1::vector.12"*, %"struct.std::__1::__split_buffer.350"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::function"*, %"class.std::__1::function"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::function"*, %"class.std::__1::function"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %1, i64 0, i32 1
  %8 = icmp eq %"class.std::__1::function"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"class.std::__1::function"* %4 to i64
  %11 = bitcast %"class.std::__1::function"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  br label %44

14:                                               ; preds = %2
  %15 = load %"class.std::__1::function"*, %"class.std::__1::function"** %7, align 8
  br label %16

16:                                               ; preds = %35, %14
  %17 = phi %"class.std::__1::function"* [ %37, %35 ], [ %15, %14 ]
  %18 = phi %"class.std::__1::function"* [ %20, %35 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 -1
  %21 = bitcast %"class.std::__1::function"* %19 to i8*
  %22 = bitcast %"class.std::__1::function"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false) #15
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 -1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 -1, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::__function::__policy_invoker"* %24 to i64*
  %26 = bitcast %"struct.std::__1::__function::__policy_invoker"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 -1, i32 0, i32 2
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 -1, i32 0, i32 2
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8
  store %"struct.std::__1::__function::__policy"* %30, %"struct.std::__1::__function::__policy"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %32 = load void (i8*)*, void (i8*)** %31, align 8
  %33 = icmp eq void (i8*)* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %16
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %29, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %25, align 8
  br label %35

35:                                               ; preds = %34, %16
  %36 = load %"class.std::__1::function"*, %"class.std::__1::function"** %7, align 8
  %37 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %36, i64 -1
  store %"class.std::__1::function"* %37, %"class.std::__1::function"** %7, align 8
  %38 = icmp eq %"class.std::__1::function"* %20, %4
  br i1 %38, label %39, label %16

39:                                               ; preds = %35
  %40 = ptrtoint %"class.std::__1::function"* %37 to i64
  %41 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::function"** %7 to i64*
  br label %44

44:                                               ; preds = %9, %39
  %45 = phi i64* [ %11, %9 ], [ %43, %39 ]
  %46 = phi i64* [ %13, %9 ], [ %41, %39 ]
  %47 = phi i64 [ %12, %9 ], [ %40, %39 ]
  %48 = phi i64 [ %10, %9 ], [ %42, %39 ]
  store i64 %47, i64* %46, align 8
  store i64 %48, i64* %45, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %1, i64 0, i32 2
  %50 = bitcast %"class.std::__1::function"** %5 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::function"** %49 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %50, align 8
  store i64 %51, i64* %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %1, i64 0, i32 3, i32 0, i32 0
  %56 = bitcast %"class.std::__1::function"** %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::function"** %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  store i64 %57, i64* %58, align 8
  %60 = load i64, i64* %45, align 8
  %61 = bitcast %"struct.std::__1::__split_buffer.350"* %1 to i64*
  store i64 %60, i64* %61, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.350"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::function"*, %"class.std::__1::function"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 2
  %5 = load %"class.std::__1::function"*, %"class.std::__1::function"** %4, align 8
  %6 = icmp eq %"class.std::__1::function"* %5, %3
  br i1 %6, label %22, label %7

7:                                                ; preds = %1, %19
  %8 = phi %"class.std::__1::function"* [ %20, %19 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 -1
  store %"class.std::__1::function"* %9, %"class.std::__1::function"** %4, align 8
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 -1, i32 0, i32 2
  %11 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 1
  %13 = load void (i8*)*, void (i8*)** %12, align 8
  %14 = icmp eq void (i8*)* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void %13(i8* %17) #16
  %18 = load %"class.std::__1::function"*, %"class.std::__1::function"** %4, align 8
  br label %19

19:                                               ; preds = %15, %7
  %20 = phi %"class.std::__1::function"* [ %9, %7 ], [ %18, %15 ]
  %21 = icmp eq %"class.std::__1::function"* %20, %3
  br i1 %21, label %22, label %7

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %"struct.std::__1::__split_buffer.350", %"struct.std::__1::__split_buffer.350"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::function"*, %"class.std::__1::function"** %23, align 8
  %25 = icmp eq %"class.std::__1::function"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::function"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #17
  br label %28

28:                                               ; preds = %22, %26
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice8Constant4emitEPKNS_3CfgE(%"class.Ice::Constant"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 23, i32 0, i32 0, i32 0
  %4 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %3, align 8
  %5 = bitcast %"class.Ice::Constant"* %0 to void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)***
  %6 = load void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)**, void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)*, void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)** %6, i64 6
  %8 = load void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)*, void (%"class.Ice::Constant"*, %"class.Ice::TargetLowering"*)** %7, align 8
  tail call void %8(%"class.Ice::Constant"* %0, %"class.Ice::TargetLowering"* %4) #16
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE4dumpEPKNS_3CfgERN4llvm11raw_ostreamE(%"class.Ice::ConstantPrimitive"*, %"class.Ice::Cfg"*, %"class.llvm::raw_ostream"* dereferenceable(40)) unnamed_addr #10 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice7OperandD2Ev(%"class.Ice::Operand"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EED0Ev(%"class.Ice::ConstantPrimitive"*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %"class.Ice::ConstantPrimitive"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Variable"* @_ZN3Ice7Operand9asBooleanEv(%"class.Ice::Operand"*) unnamed_addr #0 comdat align 2 {
  ret %"class.Ice::Variable"* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE9hashValueEv(%"class.Ice::ConstantPrimitive"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::ConstantPrimitive", %"class.Ice::ConstantPrimitive"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: optsize
declare void @_ZNK3Ice17ConstantPrimitiveIiLNS_7Operand11OperandKindE1EE4emitEPNS_14TargetLoweringE(%"class.Ice::ConstantPrimitive"*, %"class.Ice::TargetLowering"*) unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #21
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %5, %4 ], [ 0, %2 ]
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %7) #19
  ret %"class.llvm::raw_ostream"* %8
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE(%"class.llvm::raw_ostream"*, %"class.llvm::FormattedNumber"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind optsize
declare void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"*) unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %2) #16
  br label %19

14:                                               ; preds = %3
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %1, i64 %2, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %2
  store i8* %18, i8** %7, align 8
  br label %19

19:                                               ; preds = %16, %14, %12
  %20 = phi %"class.llvm::raw_ostream"* [ %13, %12 ], [ %0, %14 ], [ %0, %16 ]
  ret %"class.llvm::raw_ostream"* %20
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: optsize
declare i8* @_ZN3Ice10typeStringENS_4TypeE(i32) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8StringIDINS_22GlobalStringPoolTraitsEEC2EPKNS_13GlobalContextERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.Ice::StringID"*, %"class.Ice::GlobalContext"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.Ice::LockedPtr.353", align 8
  %5 = getelementptr inbounds %"class.Ice::StringID", %"class.Ice::StringID"* %0, i64 0, i32 0
  %6 = bitcast %"class.Ice::LockedPtr.353"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @_ZN3Ice22GlobalStringPoolTraits10getStringsEPKNS_13GlobalContextE(%"class.Ice::LockedPtr.353"* nonnull sret %4, %"class.Ice::GlobalContext"* %1) #16
  %7 = getelementptr inbounds %"class.Ice::LockedPtr.353", %"class.Ice::LockedPtr.353"* %4, i64 0, i32 0
  %8 = load %"class.Ice::StringPool"*, %"class.Ice::StringPool"** %7, align 8
  %9 = call i64 @_ZN3Ice10StringPool14getOrAddStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::StringPool"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %2) #19
  %10 = getelementptr inbounds %"class.Ice::LockedPtr.353", %"class.Ice::LockedPtr.353"* %4, i64 0, i32 1
  %11 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %10, align 8
  %12 = icmp eq %"class.std::__1::mutex"* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* nonnull %11) #16
  br label %14

14:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  store i64 %9, i64* %5, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice22GlobalStringPoolTraits10getStringsEPKNS_13GlobalContextE(%"class.Ice::LockedPtr.353"* sret, %"class.Ice::GlobalContext"*) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZN3Ice10StringPool14getOrAddStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::StringPool"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.362", align 1
  %5 = getelementptr inbounds %"class.Ice::StringPool", %"class.Ice::StringPool"* %0, i64 0, i32 1, i32 0
  %6 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %7 = icmp eq %"struct.std::__1::__hash_node_base"* %6, null
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 24) #17
  %10 = bitcast i8* %9 to %"class.std::__1::basic_string"*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %16, i64 24, i1 false) #15
  br label %22

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %19, i64 %21) #16
  br label %22

22:                                               ; preds = %15, %17
  %23 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::tuple.362", %"class.std::__1::tuple.362"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #15
  %26 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.362"* nonnull dereferenceable(1) %4) #16
  %27 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %26, 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %27, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  %29 = bitcast %"struct.std::__1::__hash_node_base"* %28 to %"class.std::__1::basic_string"**
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = bitcast %"struct.std::__1::__hash_node_base"* %28 to i8**
  store i8* %9, i8** %31, align 8
  %32 = icmp eq %"class.std::__1::basic_string"* %30, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %22
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %28 to %"struct.std::__1::default_delete.357"*
  call void @_ZNKSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEclEPS6_(%"struct.std::__1::default_delete.357"* %34, %"class.std::__1::basic_string"* nonnull %30) #16
  br label %39

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 5
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to %"class.std::__1::basic_string"**
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  br label %39

39:                                               ; preds = %33, %22, %35
  %40 = phi %"class.std::__1::basic_string"* [ %38, %35 ], [ %10, %22 ], [ %10, %33 ]
  %41 = ptrtoint %"class.std::__1::basic_string"* %40 to i64
  ret i64 %41
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #15
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #15
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #15, !range !3
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #15
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #10 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2) #19
  br label %212

9:                                                ; preds = %5
  %10 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8* %1, i64 %2) #19
  br label %212

11:                                               ; preds = %3
  %12 = icmp ult i64 %2, 65
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8* %1, i64 %2) #19
  br label %212

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -40
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = getelementptr inbounds i8, i8* %16, i64 -16
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = getelementptr inbounds i8, i8* %16, i64 -56
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 1
  %26 = add i64 %25, %22
  %27 = getelementptr inbounds i8, i8* %16, i64 -48
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 1
  %30 = add i64 %29, %2
  %31 = getelementptr inbounds i8, i8* %16, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 1
  %34 = xor i64 %33, %30
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  %43 = getelementptr inbounds i8, i8* %16, i64 -64
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %2
  %47 = add i64 %19, %46
  %48 = add i64 %47, %42
  %49 = lshr i64 %48, 21
  %50 = shl i64 %48, 43
  %51 = or i64 %50, %49
  %52 = add i64 %46, %25
  %53 = add i64 %52, %29
  %54 = lshr i64 %53, 44
  %55 = shl i64 %53, 20
  %56 = or i64 %55, %54
  %57 = add i64 %53, %19
  %58 = add i64 %56, %46
  %59 = add i64 %58, %51
  %60 = getelementptr inbounds i8, i8* %16, i64 -32
  %61 = add i64 %26, -5435081209227447693
  %62 = bitcast i8* %60 to i64*
  %63 = load i64, i64* %62, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 1
  %67 = add i64 %61, %63
  %68 = add i64 %67, %19
  %69 = add i64 %68, %66
  %70 = lshr i64 %69, 21
  %71 = shl i64 %69, 43
  %72 = or i64 %71, %70
  %73 = add i64 %67, %33
  %74 = add i64 %73, %22
  %75 = lshr i64 %74, 44
  %76 = shl i64 %74, 20
  %77 = or i64 %76, %75
  %78 = add i64 %74, %66
  %79 = add i64 %77, %67
  %80 = add i64 %79, %72
  %81 = mul i64 %19, -5435081209227447693
  %82 = bitcast i8* %1 to i64*
  %83 = load i64, i64* %82, align 1
  %84 = add i64 %83, %81
  %85 = add i64 %2, -1
  %86 = and i64 %85, -64
  br label %87

87:                                               ; preds = %175, %15
  %88 = phi i64 [ %83, %15 ], [ %177, %175 ]
  %89 = phi i64 [ %80, %15 ], [ %171, %175 ]
  %90 = phi i64 [ %78, %15 ], [ %169, %175 ]
  %91 = phi i64 [ %57, %15 ], [ %147, %175 ]
  %92 = phi i64 [ %59, %15 ], [ %149, %175 ]
  %93 = phi i64 [ %42, %15 ], [ %117, %175 ]
  %94 = phi i64 [ %84, %15 ], [ %127, %175 ]
  %95 = phi i64 [ %86, %15 ], [ %173, %175 ]
  %96 = phi i8* [ %1, %15 ], [ %172, %175 ]
  %97 = phi i64 [ %26, %15 ], [ %122, %175 ]
  %98 = getelementptr inbounds i8, i8* %96, i64 8
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 1
  %101 = add i64 %94, %91
  %102 = add i64 %101, %97
  %103 = add i64 %102, %100
  %104 = lshr i64 %103, 37
  %105 = shl i64 %103, 27
  %106 = or i64 %105, %104
  %107 = mul i64 %106, -5435081209227447693
  %108 = add i64 %97, %92
  %109 = getelementptr inbounds i8, i8* %96, i64 48
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 1
  %112 = add i64 %108, %111
  %113 = lshr i64 %112, 42
  %114 = shl i64 %112, 22
  %115 = or i64 %114, %113
  %116 = mul i64 %115, -5435081209227447693
  %117 = xor i64 %107, %89
  %118 = getelementptr inbounds i8, i8* %96, i64 40
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = add i64 %120, %91
  %122 = add i64 %121, %116
  %123 = add i64 %93, %90
  %124 = lshr i64 %123, 33
  %125 = shl i64 %123, 31
  %126 = or i64 %125, %124
  %127 = mul i64 %126, -5435081209227447693
  %128 = mul i64 %92, -5435081209227447693
  %129 = getelementptr inbounds i8, i8* %96, i64 16
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 1
  %132 = getelementptr inbounds i8, i8* %96, i64 24
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 1
  %135 = add i64 %88, %128
  %136 = add i64 %135, %90
  %137 = add i64 %136, %134
  %138 = add i64 %137, %117
  %139 = lshr i64 %138, 21
  %140 = shl i64 %138, 43
  %141 = or i64 %140, %139
  %142 = add i64 %135, %100
  %143 = add i64 %142, %131
  %144 = lshr i64 %143, 44
  %145 = shl i64 %143, 20
  %146 = or i64 %145, %144
  %147 = add i64 %143, %134
  %148 = add i64 %146, %135
  %149 = add i64 %148, %141
  %150 = getelementptr inbounds i8, i8* %96, i64 32
  %151 = add i64 %127, %89
  %152 = add i64 %122, %131
  %153 = bitcast i8* %150 to i64*
  %154 = load i64, i64* %153, align 1
  %155 = getelementptr inbounds i8, i8* %96, i64 56
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 1
  %158 = add i64 %151, %154
  %159 = add i64 %152, %158
  %160 = add i64 %159, %157
  %161 = lshr i64 %160, 21
  %162 = shl i64 %160, 43
  %163 = or i64 %162, %161
  %164 = add i64 %158, %120
  %165 = add i64 %164, %111
  %166 = lshr i64 %165, 44
  %167 = shl i64 %165, 20
  %168 = or i64 %167, %166
  %169 = add i64 %165, %157
  %170 = add i64 %168, %158
  %171 = add i64 %170, %163
  %172 = getelementptr inbounds i8, i8* %96, i64 64
  %173 = add i64 %95, -64
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %87
  %176 = bitcast i8* %172 to i64*
  %177 = load i64, i64* %176, align 1
  br label %87

178:                                              ; preds = %87
  %179 = xor i64 %169, %147
  %180 = mul i64 %179, -7070675565921424023
  %181 = lshr i64 %180, 47
  %182 = xor i64 %180, %169
  %183 = xor i64 %182, %181
  %184 = mul i64 %183, -7070675565921424023
  %185 = lshr i64 %184, 47
  %186 = xor i64 %185, %184
  %187 = mul i64 %186, -7070675565921424023
  %188 = lshr i64 %122, 47
  %189 = xor i64 %188, %122
  %190 = mul i64 %189, -5435081209227447693
  %191 = add i64 %190, %117
  %192 = add i64 %191, %187
  %193 = xor i64 %171, %149
  %194 = mul i64 %193, -7070675565921424023
  %195 = lshr i64 %194, 47
  %196 = xor i64 %194, %171
  %197 = xor i64 %196, %195
  %198 = mul i64 %197, -7070675565921424023
  %199 = lshr i64 %198, 47
  %200 = xor i64 %199, %198
  %201 = mul i64 %200, -7070675565921424023
  %202 = add i64 %201, %127
  %203 = xor i64 %202, %192
  %204 = mul i64 %203, -7070675565921424023
  %205 = lshr i64 %204, 47
  %206 = xor i64 %204, %202
  %207 = xor i64 %206, %205
  %208 = mul i64 %207, -7070675565921424023
  %209 = lshr i64 %208, 47
  %210 = xor i64 %209, %208
  %211 = mul i64 %210, -7070675565921424023
  br label %212

212:                                              ; preds = %178, %13, %9, %7
  %213 = phi i64 [ %8, %7 ], [ %10, %9 ], [ %14, %13 ], [ %211, %178 ]
  ret i64 %213
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to i64*
  %4 = load i64, i64* %3, align 1
  %5 = mul i64 %4, -5435081209227447693
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 1
  %9 = getelementptr inbounds i8, i8* %0, i64 %1
  %10 = getelementptr inbounds i8, i8* %9, i64 -8
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = mul i64 %12, -7286425919675154353
  %14 = getelementptr inbounds i8, i8* %9, i64 -16
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = mul i64 %16, -4348849565147123417
  %18 = sub i64 %5, %8
  %19 = lshr i64 %18, 43
  %20 = shl i64 %18, 21
  %21 = or i64 %20, %19
  %22 = lshr i64 %13, 30
  %23 = mul i64 %12, -4737503975807385600
  %24 = or i64 %22, %23
  %25 = add i64 %17, %21
  %26 = add i64 %25, %24
  %27 = xor i64 %8, -3942382747735136937
  %28 = lshr i64 %27, 20
  %29 = shl i64 %27, 44
  %30 = or i64 %29, %28
  %31 = add i64 %5, %1
  %32 = sub i64 %31, %13
  %33 = add i64 %32, %30
  %34 = xor i64 %33, %26
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  ret i64 %42
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %0, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 1
  %6 = bitcast i8* %0 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %0, i64 %1
  %9 = getelementptr inbounds i8, i8* %8, i64 -16
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = add i64 %11, %1
  %13 = mul i64 %12, -4348849565147123417
  %14 = add i64 %13, %7
  %15 = add i64 %14, %5
  %16 = lshr i64 %15, 52
  %17 = shl i64 %15, 12
  %18 = or i64 %17, %16
  %19 = lshr i64 %14, 37
  %20 = shl i64 %14, 27
  %21 = or i64 %20, %19
  %22 = getelementptr inbounds i8, i8* %0, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = add i64 %14, %24
  %26 = lshr i64 %25, 7
  %27 = shl i64 %25, 57
  %28 = or i64 %27, %26
  %29 = getelementptr inbounds i8, i8* %0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 1
  %32 = add i64 %25, %31
  %33 = lshr i64 %32, 31
  %34 = shl i64 %32, 33
  %35 = or i64 %34, %33
  %36 = add i64 %28, %21
  %37 = add i64 %36, %18
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds i8, i8* %8, i64 -32
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 1
  %42 = add i64 %41, %31
  %43 = getelementptr inbounds i8, i8* %8, i64 -8
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %5
  %47 = add i64 %46, %42
  %48 = lshr i64 %47, 52
  %49 = shl i64 %47, 12
  %50 = or i64 %49, %48
  %51 = lshr i64 %42, 37
  %52 = shl i64 %42, 27
  %53 = or i64 %52, %51
  %54 = getelementptr inbounds i8, i8* %8, i64 -24
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 1
  %57 = add i64 %56, %42
  %58 = lshr i64 %57, 7
  %59 = shl i64 %57, 57
  %60 = or i64 %59, %58
  %61 = add i64 %57, %11
  %62 = add i64 %61, %46
  %63 = lshr i64 %61, 31
  %64 = shl i64 %61, 33
  %65 = or i64 %64, %63
  %66 = add i64 %32, %5
  %67 = add i64 %66, %53
  %68 = add i64 %67, %60
  %69 = add i64 %68, %50
  %70 = add i64 %69, %65
  %71 = mul i64 %70, -7286425919675154353
  %72 = add i64 %62, %38
  %73 = mul i64 %72, -4348849565147123417
  %74 = add i64 %71, %73
  %75 = lshr i64 %74, 47
  %76 = xor i64 %75, %74
  %77 = mul i64 %76, -4348849565147123417
  %78 = add i64 %77, %38
  %79 = lshr i64 %78, 47
  %80 = xor i64 %79, %78
  %81 = mul i64 %80, -7286425919675154353
  ret i64 %81
}

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.362"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = alloca %"class.std::__1::unique_ptr.363", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = zext i8 %10 to i64
  %18 = select i1 %11, i8* %13, i8* %16
  %19 = select i1 %11, i64 %15, i64 %17
  %20 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #15
  %21 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %18, i64 %19) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #15
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %115, label %25

25:                                               ; preds = %5
  %26 = call i64 @llvm.ctpop.i64(i64 %23) #15, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, -1
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %21, %23
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %115, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %115, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  %48 = load i8, i8* %9, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %14, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = load i8*, i8** %12, align 8
  %54 = select i1 %49, i8* %53, i8* %16
  %55 = icmp eq i64 %52, 0
  br label %56

56:                                               ; preds = %46, %99
  %57 = phi %"struct.std::__1::__hash_node_base"* [ %44, %46 ], [ %101, %99 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %21
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %27, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %47
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %23
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %23
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %36
  br i1 %71, label %72, label %115

72:                                               ; preds = %56, %69
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 3
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  %83 = icmp eq i64 %82, %52
  br i1 %83, label %84, label %99

84:                                               ; preds = %72
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i8*
  %88 = select i1 %77, i8* %86, i8* %87
  br i1 %77, label %95, label %89

89:                                               ; preds = %84
  br i1 %55, label %207, label %90

90:                                               ; preds = %89
  %91 = ptrtoint i8* %86 to i64
  %92 = trunc i64 %91 to i8
  %93 = load i8, i8* %54, align 1
  %94 = icmp eq i8 %93, %92
  br i1 %94, label %103, label %99

95:                                               ; preds = %84
  br i1 %55, label %207, label %96

96:                                               ; preds = %95
  %97 = call i32 @bcmp(i8* %88, i8* %54, i64 %52) #15
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %207, label %99

99:                                               ; preds = %110, %90, %72, %96
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base"* %101, null
  br i1 %102, label %115, label %56

103:                                              ; preds = %90, %110
  %104 = phi i64 [ %107, %110 ], [ %81, %90 ]
  %105 = phi i8* [ %108, %110 ], [ %87, %90 ]
  %106 = phi i8* [ %111, %110 ], [ %54, %90 ]
  %107 = add i64 %104, -1
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %207, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds i8, i8* %106, i64 1
  %112 = load i8, i8* %108, align 1
  %113 = load i8, i8* %111, align 1
  %114 = icmp eq i8 %112, %113
  br i1 %114, label %103, label %99

115:                                              ; preds = %69, %99, %42, %35, %5
  %116 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %42 ], [ %36, %99 ], [ %36, %69 ]
  %117 = bitcast %"class.std::__1::unique_ptr.363"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #15
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.363"* %7, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr.363"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS8_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISY_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.363"* nonnull sret %7, %"class.std::__1::__hash_table"* %0, i64 %21, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1) %2, %"class.std::__1::tuple"* dereferenceable(8) %3, %"class.std::__1::tuple.362"* dereferenceable(1) %4) #19
  %120 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 1
  %123 = uitofp i64 %122 to float
  %124 = uitofp i64 %23 to float
  %125 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %126 = load float, float* %125, align 4
  %127 = fmul float %126, %124
  %128 = fcmp olt float %127, %123
  %129 = or i1 %24, %128
  br i1 %129, label %130, label %153

130:                                              ; preds = %115
  %131 = shl i64 %23, 1
  %132 = icmp ult i64 %23, 3
  %133 = call i64 @llvm.ctpop.i64(i64 %23) #15, !range !3
  %134 = icmp ugt i64 %133, 1
  %135 = or i1 %132, %134
  %136 = zext i1 %135 to i64
  %137 = or i64 %131, %136
  %138 = fdiv float %123, %126
  %139 = call float @llvm.ceil.f32(float %138) #15
  %140 = fptoui float %139 to i64
  %141 = icmp ult i64 %137, %140
  %142 = select i1 %141, i64 %140, i64 %137
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %142) #19
  %143 = load i64, i64* %22, align 8
  %144 = call i64 @llvm.ctpop.i64(i64 %143) #15, !range !3
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %130
  %147 = add i64 %143, -1
  %148 = and i64 %147, %21
  br label %153

149:                                              ; preds = %130
  %150 = icmp ult i64 %21, %143
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %21, %143
  br label %153

153:                                              ; preds = %151, %149, %146, %115
  %154 = phi i64 [ %23, %115 ], [ %143, %146 ], [ %143, %149 ], [ %143, %151 ]
  %155 = phi i64 [ %116, %115 ], [ %148, %146 ], [ %21, %149 ], [ %152, %151 ]
  %156 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %156, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %157, i64 %155
  %159 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base"* %159, null
  br i1 %160, label %161, label %194

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %162, i64 0, i32 0
  %164 = bitcast %"struct.std::__1::__hash_node_base"* %162 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.std::__1::unique_ptr.363"* %7 to i64**
  %167 = load i64*, i64** %166, align 8
  store i64 %165, i64* %167, align 8
  %168 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %168, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %169, %"struct.std::__1::__hash_node_base"** %163, align 8
  %170 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %156, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, i64 %155
  store %"struct.std::__1::__hash_node_base"* %162, %"struct.std::__1::__hash_node_base"** %171, align 8
  %172 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %172, i64 0, i32 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base"* %174, null
  br i1 %175, label %202, label %176

176:                                              ; preds = %161
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %172, i64 0, i32 0
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 1
  %179 = bitcast %"struct.std::__1::__hash_node_base"* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = call i64 @llvm.ctpop.i64(i64 %154) #15, !range !3
  %182 = icmp ugt i64 %181, 1
  br i1 %182, label %186, label %183

183:                                              ; preds = %176
  %184 = add i64 %154, -1
  %185 = and i64 %180, %184
  br label %190

186:                                              ; preds = %176
  %187 = icmp ult i64 %180, %154
  br i1 %187, label %190, label %188

188:                                              ; preds = %186
  %189 = urem i64 %180, %154
  br label %190

190:                                              ; preds = %183, %186, %188
  %191 = phi i64 [ %185, %183 ], [ %189, %188 ], [ %180, %186 ]
  %192 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %156, align 8
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %192, i64 %191
  store %"struct.std::__1::__hash_node_base"* %177, %"struct.std::__1::__hash_node_base"** %193, align 8
  br label %202

194:                                              ; preds = %153
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %159, i64 0, i32 0
  %196 = bitcast %"struct.std::__1::__hash_node_base"* %159 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.std::__1::unique_ptr.363"* %7 to i64**
  %199 = load i64*, i64** %198, align 8
  store i64 %197, i64* %199, align 8
  %200 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %200, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %201, %"struct.std::__1::__hash_node_base"** %195, align 8
  br label %202

202:                                              ; preds = %194, %190, %161
  %203 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %203, i64 0, i32 0
  %205 = load i64, i64* %120, align 8
  %206 = add i64 %205, 1
  store i64 %206, i64* %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #15
  br label %207

207:                                              ; preds = %89, %95, %96, %103, %202
  %208 = phi i8 [ 1, %202 ], [ 0, %103 ], [ 0, %96 ], [ 0, %95 ], [ 0, %89 ]
  %209 = phi %"struct.std::__1::__hash_node_base"* [ %204, %202 ], [ %57, %103 ], [ %57, %96 ], [ %57, %95 ], [ %57, %89 ]
  %210 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %209, 0
  %211 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %210, i8 %208, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %211
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS8_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISY_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.363"* noalias sret, %"class.std::__1::__hash_table"*, i64, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.362"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.363"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.363"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.363"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 24, i1 false)
  %11 = tail call i8* @_Znwm(i64 48) #17
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.363"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast %"class.std::__1::allocator.41"** %8 to %"class.std::__1::__compressed_pair.38"**
  store %"class.std::__1::__compressed_pair.38"* %7, %"class.std::__1::__compressed_pair.38"** %14, align 8
  store i8 0, i8* %9, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %6
  %23 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %23, i64 24, i1 false) #15
  br label %30

24:                                               ; preds = %6
  %25 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %25, i8* %27, i64 %29) #16
  br label %30

30:                                               ; preds = %22, %24
  %31 = getelementptr inbounds i8, i8* %11, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 8
  store i8 1, i8* %9, align 8
  %33 = getelementptr inbounds i8, i8* %11, i64 8
  %34 = bitcast i8* %33 to i64*
  store i64 %2, i64* %34, align 8
  %35 = bitcast i8* %11 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %35, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10) #19
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42) #19
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: optsize
declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %159, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  br label %24

19:                                               ; preds = %24
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %167, label %30

24:                                               ; preds = %24, %17
  %25 = phi i64 [ %28, %24 ], [ 0, %17 ]
  %26 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %27, align 8
  %28 = add nuw i64 %25, 1
  %29 = icmp eq i64 %28, %1
  br i1 %29, label %19, label %24

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !3
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = add i64 %1, -1
  %38 = and i64 %33, %37
  br label %43

39:                                               ; preds = %30
  %40 = icmp ult i64 %33, %1
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %33, %1
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %33, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base"* %20, %"struct.std::__1::__hash_node_base"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %48, null
  br i1 %49, label %167, label %50

50:                                               ; preds = %43
  %51 = add i64 %1, -1
  br label %52

52:                                               ; preds = %50, %153
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %48, %50 ], [ %157, %153 ]
  %54 = phi i64 [ %44, %50 ], [ %155, %153 ]
  %55 = phi %"struct.std::__1::__hash_node_base"* [ %22, %50 ], [ %154, %153 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  br i1 %35, label %61, label %59

59:                                               ; preds = %52
  %60 = and i64 %58, %51
  br label %65

61:                                               ; preds = %52
  %62 = icmp ult i64 %58, %1
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %58, %1
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %58, %61 ]
  %67 = icmp eq i64 %66, %54
  br i1 %67, label %153, label %68

68:                                               ; preds = %65
  %69 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, i64 %66
  %71 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base"* %71, null
  br i1 %72, label %91, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %139, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %81 to i64
  %87 = select i1 %82, i64 %85, i64 %86
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i8**
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i8*
  %90 = icmp eq i64 %87, 0
  br label %92

91:                                               ; preds = %68
  store %"struct.std::__1::__hash_node_base"* %55, %"struct.std::__1::__hash_node_base"** %70, align 8
  br label %153

92:                                               ; preds = %77, %135
  %93 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %137, %135 ]
  %94 = phi %"struct.std::__1::__hash_node_base"* [ %53, %77 ], [ %93, %135 ]
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 3
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  %105 = icmp eq i64 %87, %104
  br i1 %105, label %106, label %139

106:                                              ; preds = %92
  %107 = load i8*, i8** %88, align 8
  %108 = select i1 %82, i8* %107, i8* %89
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i8*
  %112 = select i1 %99, i8* %110, i8* %111
  br i1 %82, label %119, label %113

113:                                              ; preds = %106
  br i1 %90, label %135, label %114

114:                                              ; preds = %113
  %115 = ptrtoint i8* %107 to i64
  %116 = trunc i64 %115 to i8
  %117 = load i8, i8* %112, align 1
  %118 = icmp eq i8 %117, %116
  br i1 %118, label %120, label %139

119:                                              ; preds = %106
  br i1 %90, label %135, label %132

120:                                              ; preds = %114, %127
  %121 = phi i64 [ %124, %127 ], [ %86, %114 ]
  %122 = phi i8* [ %125, %127 ], [ %89, %114 ]
  %123 = phi i8* [ %128, %127 ], [ %112, %114 ]
  %124 = add i64 %121, -1
  %125 = getelementptr inbounds i8, i8* %122, i64 1
  %126 = icmp eq i64 %124, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = load i8, i8* %125, align 1
  %130 = load i8, i8* %128, align 1
  %131 = icmp eq i8 %129, %130
  br i1 %131, label %120, label %139

132:                                              ; preds = %119
  %133 = tail call i32 @bcmp(i8* %108, i8* %112, i64 %87) #15
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %120, %113, %119, %132
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base"* %137, null
  br i1 %138, label %139, label %92

139:                                              ; preds = %132, %135, %92, %114, %127, %73
  %140 = phi %"struct.std::__1::__hash_node_base"* [ %53, %73 ], [ %94, %127 ], [ %94, %132 ], [ %93, %135 ], [ %94, %92 ], [ %94, %114 ]
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  store i64 %142, i64* %143, align 8
  %144 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %144, i64 %66
  %146 = bitcast %"struct.std::__1::__hash_node_base"** %145 to i64**
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %141, align 8
  %149 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %149, i64 %66
  %151 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %150, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %151, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %53, %"struct.std::__1::__hash_node_base"** %152, align 8
  br label %153

153:                                              ; preds = %65, %139, %91
  %154 = phi %"struct.std::__1::__hash_node_base"* [ %53, %91 ], [ %55, %139 ], [ %53, %65 ]
  %155 = phi i64 [ %66, %91 ], [ %54, %139 ], [ %54, %65 ]
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %154, i64 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base"* %157, null
  br i1 %158, label %167, label %52

159:                                              ; preds = %2
  %160 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %160, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base"** %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.std::__1::__hash_node_base"** %161 to i8*
  tail call void @_ZdlPv(i8* %164) #17
  br label %165

165:                                              ; preds = %159, %163
  %166 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %166, align 8
  br label %167

167:                                              ; preds = %153, %43, %19, %165
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEclEPS6_(%"struct.std::__1::default_delete.357"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::basic_string"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #17
  br label %12

12:                                               ; preds = %4, %9
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @_ZdlPv(i8* %13) #17
  br label %14

14:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN3Ice10InstAllocaC1EPNS_3CfgEPNS_8VariableEPNS_7OperandEj(%"class.Ice::InstAlloca"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, i32) unnamed_addr #6

; Function Attrs: nounwind optsize readonly ssp uwtable
define internal fastcc %"struct.std::__1::__hash_node_base.377"* @_ZNSt3__113unordered_mapIPKN3Ice10InstAllocaEZN12_GLOBAL__N_19Optimizer35optimizeSingleBasicBlockLoadsStoresEvE9LastStoreNS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S7_EEEEE4findERSE_(%"class.std::__1::unordered_map.372"* nocapture readonly, %"class.Ice::InstAlloca"** nocapture readonly dereferenceable(8)) unnamed_addr #13 align 2 {
  %3 = bitcast %"class.Ice::InstAlloca"** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to %"class.Ice::InstAlloca"*
  br i1 %20, label %70, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #15, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %30, %28, %25
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::unordered_map.372", %"class.std::__1::unordered_map.372"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.377"* %37, null
  br i1 %38, label %70, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.377"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br label %45

45:                                               ; preds = %66, %43
  %46 = phi %"struct.std::__1::__hash_node_base.377"* [ %41, %43 ], [ %68, %66 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.377"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %17
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %44
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %19
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %19
  br label %58

58:                                               ; preds = %56, %54, %52
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %66, label %70

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.377"* %62 to %"class.Ice::InstAlloca"**
  %64 = load %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %63, align 8
  %65 = icmp eq %"class.Ice::InstAlloca"* %64, %21
  br i1 %65, label %70, label %66

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %46, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.377"* %68, null
  br i1 %69, label %70, label %45

70:                                               ; preds = %58, %61, %66, %2, %32, %39
  %71 = phi %"struct.std::__1::__hash_node_base.377"* [ null, %32 ], [ null, %2 ], [ null, %39 ], [ null, %58 ], [ null, %66 ], [ %46, %61 ]
  ret %"struct.std::__1::__hash_node_base.377"* %71
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3Ice10InstAllocaEZN12_GLOBAL__N_19Optimizer35optimizeSingleBasicBlockLoadsStoresEvE9LastStoreEENS_22__unordered_map_hasherIS5_S9_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table.373"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %106, label %4

4:                                                ; preds = %2
  %5 = icmp ugt i64 %1, 2305843009213693951
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @abort() #18
  unreachable

7:                                                ; preds = %4
  %8 = shl i64 %1, 3
  %9 = tail call i8* @_Znwm(i64 %8) #17
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.373", %"class.std::__1::__hash_table.373"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %10, align 8
  %12 = bitcast %"class.std::__1::__hash_table.373"* %0 to i8**
  store i8* %9, i8** %12, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.377"** %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = bitcast %"struct.std::__1::__hash_node_base.377"** %11 to i8*
  tail call void @_ZdlPv(i8* %15) #17
  br label %16

16:                                               ; preds = %14, %7
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.373", %"class.std::__1::__hash_table.373"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %17, align 8
  br label %23

18:                                               ; preds = %23
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.373", %"class.std::__1::__hash_table.373"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.377"* %21, null
  br i1 %22, label %114, label %29

23:                                               ; preds = %23, %16
  %24 = phi i64 [ %27, %23 ], [ 0, %16 ]
  %25 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %10, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %25, i64 %24
  store %"struct.std::__1::__hash_node_base.377"* null, %"struct.std::__1::__hash_node_base.377"** %26, align 8
  %27 = add nuw i64 %24, 1
  %28 = icmp eq i64 %27, %1
  br i1 %28, label %18, label %23

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %21, i64 1
  %31 = bitcast %"struct.std::__1::__hash_node_base.377"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !3
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = add i64 %1, -1
  %37 = and i64 %32, %36
  br label %42

38:                                               ; preds = %29
  %39 = icmp ult i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %32, %1
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %32, %38 ]
  %44 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %10, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %44, i64 %43
  store %"struct.std::__1::__hash_node_base.377"* %19, %"struct.std::__1::__hash_node_base.377"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %21, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.377"* %47, null
  br i1 %48, label %114, label %49

49:                                               ; preds = %42
  %50 = add i64 %1, -1
  br label %51

51:                                               ; preds = %49, %100
  %52 = phi %"struct.std::__1::__hash_node_base.377"* [ %47, %49 ], [ %104, %100 ]
  %53 = phi i64 [ %43, %49 ], [ %102, %100 ]
  %54 = phi %"struct.std::__1::__hash_node_base.377"* [ %21, %49 ], [ %101, %100 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %52, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.377"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  br i1 %34, label %60, label %58

58:                                               ; preds = %51
  %59 = and i64 %57, %50
  br label %64

60:                                               ; preds = %51
  %61 = icmp ult i64 %57, %1
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = urem i64 %57, %1
  br label %64

64:                                               ; preds = %58, %60, %62
  %65 = phi i64 [ %59, %58 ], [ %63, %62 ], [ %57, %60 ]
  %66 = icmp eq i64 %65, %53
  br i1 %66, label %100, label %67

67:                                               ; preds = %64
  %68 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %10, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %68, i64 %65
  %70 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.377"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %52, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.377"* %73 to %"class.Ice::InstAlloca"**
  br label %76

75:                                               ; preds = %67
  store %"struct.std::__1::__hash_node_base.377"* %54, %"struct.std::__1::__hash_node_base.377"** %69, align 8
  br label %100

76:                                               ; preds = %72, %81
  %77 = phi %"struct.std::__1::__hash_node_base.377"* [ %79, %81 ], [ %52, %72 ]
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %77, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.377"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %79, i64 2
  %83 = bitcast %"struct.std::__1::__hash_node_base.377"* %82 to %"class.Ice::InstAlloca"**
  %84 = load %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %74, align 8
  %85 = load %"class.Ice::InstAlloca"*, %"class.Ice::InstAlloca"** %83, align 8
  %86 = icmp eq %"class.Ice::InstAlloca"* %84, %85
  br i1 %86, label %76, label %87

87:                                               ; preds = %76, %81
  %88 = ptrtoint %"struct.std::__1::__hash_node_base.377"* %79 to i64
  %89 = bitcast %"struct.std::__1::__hash_node_base.377"* %77 to i64*
  %90 = bitcast %"struct.std::__1::__hash_node_base.377"* %54 to i64*
  store i64 %88, i64* %90, align 8
  %91 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %10, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %91, i64 %65
  %93 = bitcast %"struct.std::__1::__hash_node_base.377"** %92 to i64**
  %94 = load i64*, i64** %93, align 8
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %89, align 8
  %96 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %10, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %96, i64 %65
  %98 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %98, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.377"* %52, %"struct.std::__1::__hash_node_base.377"** %99, align 8
  br label %100

100:                                              ; preds = %64, %87, %75
  %101 = phi %"struct.std::__1::__hash_node_base.377"* [ %52, %75 ], [ %54, %87 ], [ %52, %64 ]
  %102 = phi i64 [ %65, %75 ], [ %53, %87 ], [ %53, %64 ]
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.377", %"struct.std::__1::__hash_node_base.377"* %101, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.377"*, %"struct.std::__1::__hash_node_base.377"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.377"* %104, null
  br i1 %105, label %114, label %51

106:                                              ; preds = %2
  %107 = getelementptr inbounds %"class.std::__1::__hash_table.373", %"class.std::__1::__hash_table.373"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %"struct.std::__1::__hash_node_base.377"**, %"struct.std::__1::__hash_node_base.377"*** %107, align 8
  store %"struct.std::__1::__hash_node_base.377"** null, %"struct.std::__1::__hash_node_base.377"*** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.377"** %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  %111 = bitcast %"struct.std::__1::__hash_node_base.377"** %108 to i8*
  tail call void @_ZdlPv(i8* %111) #17
  br label %112

112:                                              ; preds = %106, %110
  %113 = getelementptr inbounds %"class.std::__1::__hash_table.373", %"class.std::__1::__hash_table.373"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %100, %42, %18, %112
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint noreturn nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { nounwind optsize }
attributes #17 = { builtin nounwind optsize }
attributes #18 = { noreturn nounwind optsize }
attributes #19 = { optsize }
attributes #20 = { noreturn optsize }
attributes #21 = { nounwind optsize readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3Ice10InstAllocaEZN12_GLOBAL__N_19Optimizer35optimizeSingleBasicBlockLoadsStoresEvE9LastStoreEENS_22__unordered_map_hasherIS5_S9_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN3Ice10InstAllocaEZN12_GLOBAL__N_19Optimizer35optimizeSingleBasicBlockLoadsStoresEvE9LastStoreEENS_22__unordered_map_hasherIS5_S9_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISW_EEEEEEmOT_DpOT0_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3Ice13GlobalContext12getAllocatorEv: argument 0"}
!9 = distinct !{!9, !"_ZN3Ice13GlobalContext12getAllocatorEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3Ice13GlobalContext14getDestructorsEv: argument 0"}
!12 = distinct !{!12, !"_ZN3Ice13GlobalContext14getDestructorsEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4llvm20format_hex_no_prefixEmjb: argument 0"}
!15 = distinct !{!15, !"_ZN4llvm20format_hex_no_prefixEmjb"}
!16 = !{!"branch_weights", i32 2000, i32 1}
