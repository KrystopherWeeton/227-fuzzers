; ModuleID = '../../third_party/pdfium/fpdfsdk/cpdfsdk_annot.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/cpdfsdk_annot.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDFSDK_Annot = type { i32 (...)**, %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDFSDK_PageView* }
%class.CPDFSDK_PageView = type <{ %"class.CPDF_Page::View", %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.4", %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.13", %"class.fxcrt::ObservedPtr", %"class.fxcrt::RetainPtr", i8, i8, i8, i8, [4 x i8] }>
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::UnownedPtr.4" = type { %class.IPDF_Page* }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.CPDF_AnnotList* }
%class.CPDF_AnnotList = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CPDFSDK_Annot**, %class.CPDFSDK_Annot**, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.CPDFSDK_Annot** }
%"class.fxcrt::UnownedPtr.13" = type { %class.CPDFSDK_FormFillEnvironment* }
%class.CPDFSDK_FormFillEnvironment = type opaque
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %class.CPDFSDK_Annot* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CPDF_Page* }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.59", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.fxcrt::ObservedPtr.105" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr.17", %"class.fxcrt::RetainPtr.17", %"class.std::__1::map.37", %"class.std::__1::map.48", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr.17", %"class.fxcrt::UnownedPtr.59", %"class.std::__1::vector.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set.83" }
%"class.std::__1::map.37" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.48" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.fxcrt::RetainPtr.17" = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.21" }
%"class.fxcrt::RetainPtr.21" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.120" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.123", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.138", [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.26" }
%"class.std::__1::__tree.26" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.79" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.73"**, %"class.std::__1::unique_ptr.73"**, %"class.std::__1::unique_ptr.73"**, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type opaque
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::unique_ptr.73"** }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.83" = type { %"class.std::__1::__tree.84" }
%"class.std::__1::__tree.84" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFX_STemplate = type { float, float }
%"class.fxcrt::UnownedPtr.59" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr.105" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%class.CPDFSDK_BAAnnot = type opaque
%class.CPDFXFA_Widget = type opaque
%class.CPDF_Annot = type <{ %"class.fxcrt::RetainPtr.17", %"class.fxcrt::UnownedPtr.59", i32, [4 x i8], %"class.std::__1::map.108", %"class.fxcrt::UnownedPtr.119", i8, i8, i8, [5 x i8] }>
%"class.std::__1::map.108" = type { %"class.std::__1::__tree.109" }
%"class.std::__1::__tree.109" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::UnownedPtr.119" = type { %class.CPDF_Annot* }

@_ZTV13CPDFSDK_Annot = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDFSDK_Annot*)* @_ZN13CPDFSDK_AnnotD2Ev to i8*), i8* bitcast (void (%class.CPDFSDK_Annot*)* @_ZN13CPDFSDK_AnnotD0Ev to i8*), i8* bitcast (%class.CPDFSDK_BAAnnot* (%class.CPDFSDK_Annot*)* @_ZN13CPDFSDK_Annot9AsBAAnnotEv to i8*), i8* bitcast (%class.CPDFXFA_Widget* (%class.CPDFSDK_Annot*)* @_ZN13CPDFSDK_Annot11AsXFAWidgetEv to i8*), i8* bitcast (i32 (%class.CPDFSDK_Annot*)* @_ZNK13CPDFSDK_Annot14GetLayoutOrderEv to i8*), i8* bitcast (%class.CPDF_Annot* (%class.CPDFSDK_Annot*)* @_ZNK13CPDFSDK_Annot11GetPDFAnnotEv to i8*), i8* bitcast (i32 (%class.CPDFSDK_Annot*)* @_ZNK13CPDFSDK_Annot15GetAnnotSubtypeEv to i8*), i8* bitcast (i1 (%class.CPDFSDK_Annot*)* @_ZNK13CPDFSDK_Annot17IsSignatureWidgetEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPDFSDK_Annot*)* @_ZNK13CPDFSDK_Annot7GetRectEv to i8*), i8* bitcast (void (%class.CPDFSDK_Annot*, %class.CFX_FloatRect*)* @_ZN13CPDFSDK_Annot7SetRectERK13CFX_FloatRect to i8*)] }, align 8

@_ZN13CPDFSDK_AnnotC1EP16CPDFSDK_PageView = hidden unnamed_addr alias void (%class.CPDFSDK_Annot*, %class.CPDFSDK_PageView*), void (%class.CPDFSDK_Annot*, %class.CPDFSDK_PageView*)* @_ZN13CPDFSDK_AnnotC2EP16CPDFSDK_PageView
@_ZN13CPDFSDK_AnnotD1Ev = hidden unnamed_addr alias void (%class.CPDFSDK_Annot*), void (%class.CPDFSDK_Annot*)* @_ZN13CPDFSDK_AnnotD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPDFSDK_AnnotC2EP16CPDFSDK_PageView(%class.CPDFSDK_Annot*, %class.CPDFSDK_PageView*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %3) #6
  %4 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV13CPDFSDK_Annot, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 2, i32 0
  store %class.CPDFSDK_PageView* %1, %class.CPDFSDK_PageView** %5, align 8
  ret void
}

declare void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPDFSDK_AnnotD2Ev(%class.CPDFSDK_Annot*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV13CPDFSDK_Annot, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %3) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPDFSDK_AnnotD0Ev(%class.CPDFSDK_Annot*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV13CPDFSDK_Annot, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %3) #6
  %4 = bitcast %class.CPDFSDK_Annot* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDFSDK_BAAnnot* @_ZN13CPDFSDK_Annot9AsBAAnnotEv(%class.CPDFSDK_Annot* nocapture readnone) unnamed_addr #4 align 2 {
  ret %class.CPDFSDK_BAAnnot* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDFXFA_Widget* @_ZN13CPDFSDK_Annot11AsXFAWidgetEv(%class.CPDFSDK_Annot* nocapture readnone) unnamed_addr #4 align 2 {
  ret %class.CPDFXFA_Widget* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.IPDF_Page* @_ZN13CPDFSDK_Annot10GetXFAPageEv(%class.CPDFSDK_Annot* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 2, i32 0
  %3 = load %class.CPDFSDK_PageView*, %class.CPDFSDK_PageView** %2, align 8
  %4 = tail call %class.IPDF_Page* @_ZN16CPDFSDK_PageView10GetXFAPageEv(%class.CPDFSDK_PageView* %3) #6
  ret %class.IPDF_Page* %4
}

declare %class.IPDF_Page* @_ZN16CPDFSDK_PageView10GetXFAPageEv(%class.CPDFSDK_PageView*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK13CPDFSDK_Annot14GetLayoutOrderEv(%class.CPDFSDK_Annot* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_Annot* @_ZNK13CPDFSDK_Annot11GetPDFAnnotEv(%class.CPDFSDK_Annot* nocapture readnone) unnamed_addr #4 align 2 {
  ret %class.CPDF_Annot* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK13CPDFSDK_Annot15GetAnnotSubtypeEv(%class.CPDFSDK_Annot* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK13CPDFSDK_Annot17IsSignatureWidgetEv(%class.CPDFSDK_Annot* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13CPDFSDK_Annot7SetRectERK13CFX_FloatRect(%class.CPDFSDK_Annot* nocapture, %class.CFX_FloatRect* nocapture dereferenceable(16)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPDFSDK_Annot7GetRectEv(%class.CPDFSDK_Annot* nocapture readnone) unnamed_addr #5 align 2 {
  ret { <2 x float>, <2 x float> } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.IPDF_Page* @_ZN13CPDFSDK_Annot7GetPageEv(%class.CPDFSDK_Annot* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 2, i32 0
  %3 = load %class.CPDFSDK_PageView*, %class.CPDFSDK_PageView** %2, align 8
  %4 = tail call %class.IPDF_Page* @_ZN16CPDFSDK_PageView10GetXFAPageEv(%class.CPDFSDK_PageView* %3) #6
  %5 = icmp eq %class.IPDF_Page* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = load %class.CPDFSDK_PageView*, %class.CPDFSDK_PageView** %2, align 8
  %8 = tail call %class.CPDF_Page* @_ZNK16CPDFSDK_PageView10GetPDFPageEv(%class.CPDFSDK_PageView* %7) #6
  %9 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %8, i64 0, i32 0
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi %class.IPDF_Page* [ %9, %6 ], [ %4, %1 ]
  ret %class.IPDF_Page* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_Page* @_ZN13CPDFSDK_Annot10GetPDFPageEv(%class.CPDFSDK_Annot* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDFSDK_Annot, %class.CPDFSDK_Annot* %0, i64 0, i32 2, i32 0
  %3 = load %class.CPDFSDK_PageView*, %class.CPDFSDK_PageView** %2, align 8
  %4 = tail call %class.CPDF_Page* @_ZNK16CPDFSDK_PageView10GetPDFPageEv(%class.CPDFSDK_PageView* %3) #6
  ret %class.CPDF_Page* %4
}

declare %class.CPDF_Page* @_ZNK16CPDFSDK_PageView10GetPDFPageEv(%class.CPDFSDK_PageView*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
