; ModuleID = '../../cc/trees/damage_tracker.cc'
source_filename = "../../cc/trees/damage_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::DamageTracker" = type { %"class.std::__1::vector", %"class.std::__1::vector.3", i32, %"class.cc::DamageTracker::DamageAccumulator", i8, %"class.cc::DamageTracker::DamageAccumulator", %"class.std::__1::vector.10" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"*, %"class.std::__1::__compressed_pair.0" }
%"struct.cc::DamageTracker::LayerRectMapData" = type { i32, i32, %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.cc::DamageTracker::LayerRectMapData"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"class.std::__1::__compressed_pair.5" }
%"struct.cc::DamageTracker::SurfaceRectMapData" = type <{ i64, i32, %"class.gfx::Rect", [4 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.cc::DamageTracker::SurfaceRectMapData"* }
%"class.cc::DamageTracker::DamageAccumulator" = type { i8, i32, i32, i32, i32 }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.cc::DamageTracker::SurfaceWithRect"*, %"struct.cc::DamageTracker::SurfaceWithRect"*, %"class.std::__1::__compressed_pair.12" }
%"struct.cc::DamageTracker::SurfaceWithRect" = type { %"class.cc::RenderSurfaceImpl"*, %"class.gfx::Rect" }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr" }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.1071", %class.scoped_refptr.1072, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.1078, %"class.std::__1::vector.1082", %"class.std::__1::unordered_map.1095", %"class.base::internal::flat_tree.1119", %"class.std::__1::unordered_map.1127", %"class.std::__1::unordered_map.1151", %"class.std::__1::unordered_map.1175", %"class.std::__1::unordered_map.1175", %"class.base::flat_map.1199", %"class.std::__1::vector.1209", %"class.base::internal::flat_tree.1298", %"class.base::internal::flat_tree.632", %"class.std::__1::vector.1299", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.141", %"class.std::__1::vector.141", %"class.std::__1::vector.1306", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1313, %class.scoped_refptr.1313, %"class.std::__1::unique_ptr.1318", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.667", %"class.std::__1::vector.790", %"class.std::__1::unique_ptr.1324", %"class.std::__1::vector.1330" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.129", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.gfx::Vector2dF", %"class.std::__1::vector.141", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.433", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.483", %"class.std::__1::unique_ptr.490", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.509", %"class.std::__1::set.515", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.525", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.566", %"class.base::RepeatingCallback.355", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.572", i8, i8, i8, i32, %"class.std::__1::unique_ptr.582", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.588", %"class.std::__1::vector.594", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.614", %"class.std::__1::unique_ptr.626", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.632", %"class.absl::optional.645", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.109", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.720", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.798", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.841", %"class.base::WeakPtrFactory.848" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.38" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.43", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.59", [4 x i8] }>
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.69, %class.scoped_refptr.70, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.71", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.69 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.70 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.78", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.78" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i8 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.109", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.117" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.99"*, i64 }
%"class.std::__1::unique_ptr.99" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.117" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.124" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.124" = type { %"class.base::internal::VectorBuffer.125", i64, i64 }
%"class.base::internal::VectorBuffer.125" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.cc::LayerTreeImpl"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.149", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.155", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.382", %"class.std::__1::vector.237", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.420", %"class.base::WeakPtrFactory.420" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.155" = type { %"class.std::__1::__hash_table.156" }
%"class.std::__1::__hash_table.156" = type <{ %"class.std::__1::unique_ptr.157", %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.177", [4 x i8] }>
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159", %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base.160"** }
%"struct.std::__1::__hash_node_base.160" = type { %"struct.std::__1::__hash_node_base.160"* }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.std::__1::__bucket_list_deallocator.162" }
%"class.std::__1::__bucket_list_deallocator.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base.160" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.182, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.184", %"class.base::flat_map.214", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.224", %"class.std::__1::map.224", i8, %"class.std::__1::vector.233", %"class.base::WeakPtrFactory.249" }
%class.scoped_refptr.182 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.209" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.204", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.187, %"class.gfx::Rect", i32, %class.sk_sp.192, %class.sk_sp.200, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.201 }
%class.sk_sp.187 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.188", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { i8* }
%class.sk_sp.192 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.193" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.186, i32, i32 }
%class.sk_sp.186 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.79" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.195" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.200 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.201 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.202", [4 x i8] }>
%"class.base::RefCountedThreadSafe.202" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.203 }
%union.anon.203 = type { i64 }
%"class.absl::optional.204" = type { %"class.absl::optional_internal::optional_data.205" }
%"class.absl::optional_internal::optional_data.205" = type { %"class.absl::optional_internal::optional_data_base.206" }
%"class.absl::optional_internal::optional_data_base.206" = type { %"class.absl::optional_internal::optional_data_dtor_base.207" }
%"class.absl::optional_internal::optional_data_dtor_base.207" = type { i8, %union.anon.208 }
%union.anon.208 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.214" = type { %"class.base::internal::flat_tree.215" }
%"class.base::internal::flat_tree.215" = type { %"class.std::__1::vector.216" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.std::__1::pair.218"*, %"struct.std::__1::pair.218"*, %"class.std::__1::__compressed_pair.219" }
%"struct.std::__1::pair.218" = type opaque
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::pair.218"* }
%"class.std::__1::map.224" = type { %"class.std::__1::__tree.225" }
%"class.std::__1::__tree.225" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.226", %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.244" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.235, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.112 }
%class.scoped_refptr.112 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.113", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.113" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.235 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.237", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.236", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.236" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.249" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.250", i8, %class.scoped_refptr.182, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.260" }
%"class.base::flat_map.250" = type { %"class.base::internal::flat_tree.251" }
%"class.base::internal::flat_tree.251" = type { %"class.std::__1::vector.252" }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"struct.std::__1::pair.254"*, %"struct.std::__1::pair.254"*, %"class.std::__1::__compressed_pair.255" }
%"struct.std::__1::pair.254" = type { i32, %"class.std::__1::unique_ptr.1359" }
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::pair.254"* }
%"class.base::WeakPtrFactory.260" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.261", %"class.base::internal::flat_tree.261", %"class.std::__1::vector.269", i32, %"class.absl::optional.276", %"class.std::__1::unordered_map.281", %"class.std::__1::unordered_map.305", %"class.base::flat_map.329", %"class.base::WeakPtrFactory.339" }
%"class.base::internal::flat_tree.261" = type { %"class.std::__1::vector.262" }
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { i32*, i32*, %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { i32* }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.271" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.276" = type { %"class.absl::optional_internal::optional_data.277" }
%"class.absl::optional_internal::optional_data.277" = type { %"class.absl::optional_internal::optional_data_base.278" }
%"class.absl::optional_internal::optional_data_base.278" = type { %"class.absl::optional_internal::optional_data_dtor_base.279" }
%"class.absl::optional_internal::optional_data_dtor_base.279" = type { i8, %union.anon.280 }
%union.anon.280 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.281" = type { %"class.std::__1::__hash_table.282" }
%"class.std::__1::__hash_table.282" = type <{ %"class.std::__1::unique_ptr.283", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", %"class.std::__1::__compressed_pair.301", [4 x i8] }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285", %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base.286"** }
%"struct.std::__1::__hash_node_base.286" = type { %"struct.std::__1::__hash_node_base.286"* }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.std::__1::__bucket_list_deallocator.288" }
%"class.std::__1::__bucket_list_deallocator.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base.286" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.305" = type { %"class.std::__1::__hash_table.306" }
%"class.std::__1::__hash_table.306" = type <{ %"class.std::__1::unique_ptr.307", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.325", [4 x i8] }>
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309", %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.std::__1::__hash_node_base.310"** }
%"struct.std::__1::__hash_node_base.310" = type { %"struct.std::__1::__hash_node_base.310"* }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.std::__1::__bucket_list_deallocator.312" }
%"class.std::__1::__bucket_list_deallocator.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::__hash_node_base.310" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::flat_map.329" = type { %"class.base::internal::flat_tree.330" }
%"class.base::internal::flat_tree.330" = type { %"class.std::__1::vector.331" }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"struct.std::__1::pair.333"*, %"struct.std::__1::pair.333"*, %"class.std::__1::__compressed_pair.334" }
%"struct.std::__1::pair.333" = type { i32, i32 }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::pair.333"* }
%"class.base::WeakPtrFactory.339" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.340", %"class.std::__1::vector.348" }
%"class.std::__1::vector.340" = type { %"class.std::__1::__vector_base.341" }
%"class.std::__1::__vector_base.341" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.343" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.342, i16, i16, i32 }
%class.scoped_refptr.342 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.350" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.355", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.356" }
%"class.base::WeakPtrFactory.356" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.357" }
%"class.std::__1::__hash_table.357" = type <{ %"class.std::__1::unique_ptr.358", %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.377", [4 x i8] }>
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360", %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"struct.std::__1::__hash_node_base.361"** }
%"struct.std::__1::__hash_node_base.361" = type { %"struct.std::__1::__hash_node_base.361"* }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.std::__1::__bucket_list_deallocator.363" }
%"class.std::__1::__bucket_list_deallocator.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.std::__1::__hash_node_base.361" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.382" = type { %"class.std::__1::__hash_table.383" }
%"class.std::__1::__hash_table.383" = type <{ %"class.std::__1::unique_ptr.384", %"class.std::__1::__compressed_pair.394", %"class.std::__1::__compressed_pair.399", %"class.std::__1::__compressed_pair.402", [4 x i8] }>
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386", %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.387"** }
%"struct.std::__1::__hash_node_base.387" = type { %"struct.std::__1::__hash_node_base.387"* }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.std::__1::__bucket_list_deallocator.389" }
%"class.std::__1::__bucket_list_deallocator.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node_base.387" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { %class.scoped_refptr.235*, %class.scoped_refptr.235*, %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %class.scoped_refptr.235* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.406" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.412", %"class.base::WeakPtrFactory.413" }
%"class.base::OnceCallback.412" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.413" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.414, i8, [7 x i8] }>
%class.scoped_refptr.414 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.415", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.415" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.416" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.base::WeakPtrFactory.420" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.424", %"class.absl::optional.424", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.424" = type { %"class.absl::optional_internal::optional_data.425" }
%"class.absl::optional_internal::optional_data.425" = type { %"class.absl::optional_internal::optional_data_base.426" }
%"class.absl::optional_internal::optional_data_base.426" = type { %"class.absl::optional_internal::optional_data_dtor_base.427" }
%"class.absl::optional_internal::optional_data_dtor_base.427" = type { i8, %union.anon.428 }
%union.anon.428 = type { %"struct.std::__1::pair.429" }
%"struct.std::__1::pair.429" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.449", %"class.absl::optional.449", %"class.absl::optional.449", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.468, %"class.absl::optional.469", %"class.std::__1::map.474" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.445" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.439"**, %"struct.std::__1::pair.439"**, %"struct.std::__1::pair.439"**, %"class.std::__1::__compressed_pair.440" }
%"struct.std::__1::pair.439" = type opaque
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.std::__1::pair.439"** }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.449" = type { %"class.absl::optional_internal::optional_data.450" }
%"class.absl::optional_internal::optional_data.450" = type { %"class.absl::optional_internal::optional_data_base.451" }
%"class.absl::optional_internal::optional_data_base.451" = type { %"class.absl::optional_internal::optional_data_dtor_base.452" }
%"class.absl::optional_internal::optional_data_dtor_base.452" = type { i8, %union.anon.453 }
%union.anon.453 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.454", %"class.base::circular_deque.455", %"class.std::__1::map.457", %"class.absl::optional" }
%"class.base::RepeatingCallback.454" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.455" = type { %"class.base::internal::VectorBuffer.456", i64, i64 }
%"class.base::internal::VectorBuffer.456" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.457" = type { %"class.std::__1::__tree.458" }
%"class.std::__1::__tree.458" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.459", %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%struct.anon.468 = type { double, double }
%"class.absl::optional.469" = type { %"class.absl::optional_internal::optional_data.470" }
%"class.absl::optional_internal::optional_data.470" = type { %"class.absl::optional_internal::optional_data_base.471" }
%"class.absl::optional_internal::optional_data_base.471" = type { %"class.absl::optional_internal::optional_data_dtor_base.472" }
%"class.absl::optional_internal::optional_data_dtor_base.472" = type { i8, %union.anon.473 }
%union.anon.473 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.474" = type { %"class.std::__1::__tree.475" }
%"class.std::__1::__tree.475" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.476", %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.486" }
%"class.base::RingBuffer.486" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type { %"class.std::__1::vector.493" }
%"class.std::__1::vector.493" = type { %"class.std::__1::__vector_base.494" }
%"class.std::__1::__vector_base.494" = type { %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"*, %"class.std::__1::__compressed_pair.495" }
%"struct.cc::DebugRect" = type { i32, %"class.gfx::Rect", i32, i32 }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.cc::DebugRect"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.515" = type { %"class.std::__1::__tree.516" }
%"class.std::__1::__tree.516" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.517", %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.525" = type { %"class.std::__1::__hash_table.526" }
%"class.std::__1::__hash_table.526" = type <{ %"class.std::__1::unique_ptr.527", %"class.std::__1::__compressed_pair.537", %"class.std::__1::__compressed_pair.542", %"class.std::__1::__compressed_pair.545", [4 x i8] }>
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529", %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"struct.std::__1::__hash_node_base.530"** }
%"struct.std::__1::__hash_node_base.530" = type { %"struct.std::__1::__hash_node_base.530"* }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.std::__1::__bucket_list_deallocator.532" }
%"class.std::__1::__bucket_list_deallocator.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.std::__1::__hash_node_base.530" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.551" }
%"class.std::__1::vector.551" = type { %"class.std::__1::__vector_base.552" }
%"class.std::__1::__vector_base.552" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.558" }
%"class.std::__1::vector.558" = type { %"class.std::__1::__vector_base.559" }
%"class.std::__1::__vector_base.559" = type { %"class.std::__1::unique_ptr.560"*, %"class.std::__1::unique_ptr.560"*, %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::unique_ptr.560" = type opaque
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::unique_ptr.560"* }
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.355" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.572" = type { %"class.std::__1::__tree.573" }
%"class.std::__1::__tree.573" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.574", %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.594" = type { %"class.std::__1::__vector_base.595" }
%"class.std::__1::__vector_base.595" = type { %"struct.std::__1::pair.596"*, %"struct.std::__1::pair.596"*, %"class.std::__1::__compressed_pair.597" }
%"struct.std::__1::pair.596" = type opaque
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::pair.596"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.602", %"class.base::internal::flat_tree.261", %"class.base::internal::flat_tree.261", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.602" = type { %"class.base::internal::flat_tree.603" }
%"class.base::internal::flat_tree.603" = type { %"class.std::__1::vector.604" }
%"class.std::__1::vector.604" = type { %"class.std::__1::__vector_base.605" }
%"class.std::__1::__vector_base.605" = type { %"struct.std::__1::pair.606"*, %"struct.std::__1::pair.606"*, %"class.std::__1::__compressed_pair.607" }
%"struct.std::__1::pair.606" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.193", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1365", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1365" = type { %"class.std::__1::vector.1366" }
%"class.std::__1::vector.1366" = type { %"class.std::__1::__vector_base.1367" }
%"class.std::__1::__vector_base.1367" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1368" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::pair.606"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.612", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.613" }
%"class.base::RepeatingCallback.612" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.613" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.617" }
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.645" = type { %"class.absl::optional_internal::optional_data.646" }
%"class.absl::optional_internal::optional_data.646" = type { %"class.absl::optional_internal::optional_data_base.647" }
%"class.absl::optional_internal::optional_data_base.647" = type { %"class.absl::optional_internal::optional_data_dtor_base.648" }
%"class.absl::optional_internal::optional_data_dtor_base.648" = type { i8, [7 x i8], %union.anon.649 }
%union.anon.649 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.650", %"struct.viz::Selection", i8, %"class.absl::optional.655", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.660", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.650" = type { %"class.absl::optional_internal::optional_data.651" }
%"class.absl::optional_internal::optional_data.651" = type { %"class.absl::optional_internal::optional_data_base.652" }
%"class.absl::optional_internal::optional_data_base.652" = type { %"class.absl::optional_internal::optional_data_dtor_base.653" }
%"class.absl::optional_internal::optional_data_dtor_base.653" = type { i8, %union.anon.654 }
%union.anon.654 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.655" = type { %"class.absl::optional_internal::optional_data.656" }
%"class.absl::optional_internal::optional_data.656" = type { %"class.absl::optional_internal::optional_data_base.657" }
%"class.absl::optional_internal::optional_data_base.657" = type { %"class.absl::optional_internal::optional_data_dtor_base.658" }
%"class.absl::optional_internal::optional_data_dtor_base.658" = type { i8, %union.anon.659 }
%union.anon.659 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.660" = type { %"class.absl::optional_internal::optional_data.661" }
%"class.absl::optional_internal::optional_data.661" = type { %"class.absl::optional_internal::optional_data_base.662" }
%"class.absl::optional_internal::optional_data_base.662" = type { %"class.absl::optional_internal::optional_data_dtor_base.663" }
%"class.absl::optional_internal::optional_data_dtor_base.663" = type { i8, %union.anon.664 }
%union.anon.664 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.665" }
%"class.base::circular_deque.665" = type { %"class.base::internal::VectorBuffer.666", i64, i64 }
%"class.base::internal::VectorBuffer.666" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.667", %"class.std::__1::vector.667" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.675", %"class.base::flat_map.681", %"class.base::flat_map.691", %"class.base::RepeatingCallback.701", %"class.std::__1::vector.702", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.710", i64, i64 }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.681" = type { %"class.base::internal::flat_tree.682" }
%"class.base::internal::flat_tree.682" = type { %"class.std::__1::vector.683" }
%"class.std::__1::vector.683" = type { %"class.std::__1::__vector_base.684" }
%"class.std::__1::__vector_base.684" = type { %"struct.std::__1::pair.685"*, %"struct.std::__1::pair.685"*, %"class.std::__1::__compressed_pair.686" }
%"struct.std::__1::pair.685" = type opaque
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"struct.std::__1::pair.685"* }
%"class.base::flat_map.691" = type { %"class.base::internal::flat_tree.692" }
%"class.base::internal::flat_tree.692" = type { %"class.std::__1::vector.693" }
%"class.std::__1::vector.693" = type { %"class.std::__1::__vector_base.694" }
%"class.std::__1::__vector_base.694" = type { %"struct.std::__1::pair.695"*, %"struct.std::__1::pair.695"*, %"class.std::__1::__compressed_pair.696" }
%"struct.std::__1::pair.695" = type opaque
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"struct.std::__1::pair.695"* }
%"class.base::RepeatingCallback.701" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.702" = type { %"class.std::__1::__vector_base.703" }
%"class.std::__1::__vector_base.703" = type { %"class.std::__1::unique_ptr.704"*, %"class.std::__1::unique_ptr.704"*, %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::unique_ptr.704" = type opaque
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.std::__1::unique_ptr.704"* }
%"class.base::flat_map.710" = type { %"class.base::internal::flat_tree.711" }
%"class.base::internal::flat_tree.711" = type { %"class.std::__1::vector.712" }
%"class.std::__1::vector.712" = type { %"class.std::__1::__vector_base.713" }
%"class.std::__1::__vector_base.713" = type { %"struct.std::__1::pair.714"*, %"struct.std::__1::pair.714"*, %"class.std::__1::__compressed_pair.715" }
%"struct.std::__1::pair.714" = type opaque
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.std::__1::pair.714"* }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.726", %"class.base::internal::flat_tree.736" }
%"class.base::flat_map.726" = type { %"class.base::internal::flat_tree.727" }
%"class.base::internal::flat_tree.727" = type { %"class.std::__1::vector.728" }
%"class.std::__1::vector.728" = type { %"class.std::__1::__vector_base.729" }
%"class.std::__1::__vector_base.729" = type { %"struct.std::__1::pair.730"*, %"struct.std::__1::pair.730"*, %"class.std::__1::__compressed_pair.731" }
%"struct.std::__1::pair.730" = type opaque
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"struct.std::__1::pair.730"* }
%"class.base::internal::flat_tree.736" = type { %"class.std::__1::vector.737" }
%"class.std::__1::vector.737" = type { %"class.std::__1::__vector_base.738" }
%"class.std::__1::__vector_base.738" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.749" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.739", %"class.absl::optional.744", %"struct.cc::ElementId" }
%"class.absl::optional.739" = type { %"class.absl::optional_internal::optional_data.740" }
%"class.absl::optional_internal::optional_data.740" = type { %"class.absl::optional_internal::optional_data_base.741" }
%"class.absl::optional_internal::optional_data_base.741" = type { %"class.absl::optional_internal::optional_data_dtor_base.742" }
%"class.absl::optional_internal::optional_data_dtor_base.742" = type { i8, %union.anon.743 }
%union.anon.743 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.744" = type { %"class.absl::optional_internal::optional_data.745" }
%"class.absl::optional_internal::optional_data.745" = type { %"class.absl::optional_internal::optional_data_base.746" }
%"class.absl::optional_internal::optional_data_base.746" = type { %"class.absl::optional_internal::optional_data_dtor_base.747" }
%"class.absl::optional_internal::optional_data_dtor_base.747" = type { i8, %union.anon.748 }
%union.anon.748 = type { i32 }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.766" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.754", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.754" = type { %"class.std::__1::__deque_base.755" }
%"class.std::__1::__deque_base.755" = type { %"struct.std::__1::__split_buffer.756", i64, %"class.std::__1::__compressed_pair.762" }
%"struct.std::__1::__split_buffer.756" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.757" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.base::circular_deque.766" = type { %"class.base::internal::VectorBuffer.767", i64, i64 }
%"class.base::internal::VectorBuffer.767" = type { %"struct.std::__1::pair.768"*, i64 }
%"struct.std::__1::pair.768" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.769", %"class.std::__1::map.774", %"class.std::__1::map.774" }
%"class.absl::optional.769" = type { %"class.absl::optional_internal::optional_data.770" }
%"class.absl::optional_internal::optional_data.770" = type { %"class.absl::optional_internal::optional_data_base.771" }
%"class.absl::optional_internal::optional_data_base.771" = type { %"class.absl::optional_internal::optional_data_dtor_base.772" }
%"class.absl::optional_internal::optional_data_dtor_base.772" = type { i8, [3 x i8], %union.anon.773 }
%union.anon.773 = type { %"class.gfx::Transform" }
%"class.std::__1::map.774" = type { %"class.std::__1::__tree.775" }
%"class.std::__1::__tree.775" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.776", %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.783", %"class.std::__1::vector.790" }
%"class.std::__1::vector.783" = type { %"class.std::__1::__vector_base.784" }
%"class.std::__1::__vector_base.784" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.785" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.355", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.804" }
%"class.base::WeakPtrFactory.804" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.805", %"class.std::__1::map.812", i64 }
%"class.std::__1::list.805" = type { %"class.std::__1::__list_imp.806" }
%"class.std::__1::__list_imp.806" = type { %"struct.std::__1::__list_node_base.807", %"class.std::__1::__compressed_pair.808" }
%"struct.std::__1::__list_node_base.807" = type { %"struct.std::__1::__list_node_base.807"*, %"struct.std::__1::__list_node_base.807"* }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::map.812" = type { %"class.std::__1::__tree.813" }
%"class.std::__1::__tree.813" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.814", %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.823", %"class.base::internal::flat_tree.833", %"class.base::internal::flat_tree.833" }
%"class.base::flat_map.823" = type { %"class.base::internal::flat_tree.824" }
%"class.base::internal::flat_tree.824" = type { %"class.std::__1::vector.825" }
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"struct.std::__1::pair.827"*, %"struct.std::__1::pair.827"*, %"class.std::__1::__compressed_pair.828" }
%"struct.std::__1::pair.827" = type opaque
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::pair.827"* }
%"class.base::internal::flat_tree.833" = type { %"class.std::__1::vector.834" }
%"class.std::__1::vector.834" = type { %"class.std::__1::__vector_base.835" }
%"class.std::__1::__vector_base.835" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.836" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.841" = type { %"class.std::__1::__vector_base.842" }
%"class.std::__1::__vector_base.842" = type { i32*, i32*, %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { i32* }
%"class.base::WeakPtrFactory.848" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::HeadsUpDisplayLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::ResourcePool::InUsePoolResource", %"class.std::__1::unique_ptr.96", %"class.viz::DrawQuad"*, %class.sk_sp.904, %class.sk_sp.905, %"class.std::__1::vector.906", float, %"class.gfx::Size", i32, %"class.absl::optional.913", %"struct.cc::MemoryHistory::Entry", i32, i32, %"class.std::__1::vector.493", %"class.std::__1::vector.493", %"class.std::__1::unique_ptr.918", %"class.base::TimeTicks" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.859", %"class.std::__1::unique_ptr.879", i8 }>
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.849" }
%"class.base::flat_map.849" = type { %"class.base::internal::flat_tree.850" }
%"class.base::internal::flat_tree.850" = type { %"class.std::__1::vector.851" }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"struct.std::__1::pair.853"*, %"struct.std::__1::pair.853"*, %"class.std::__1::__compressed_pair.854" }
%"struct.std::__1::pair.853" = type opaque
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"struct.std::__1::pair.853"* }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.862", %"class.std::__1::vector.862", %"class.std::__1::vector.869" }
%"class.std::__1::vector.862" = type { %"class.std::__1::__vector_base.863" }
%"class.std::__1::__vector_base.863" = type { i8**, i8**, %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { i8** }
%"class.std::__1::vector.869" = type { %"class.std::__1::__vector_base.870" }
%"class.std::__1::__vector_base.870" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.871" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.872" }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.cc::Region"* }
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType", %"class.std::__1::unique_ptr.885", %"class.std::__1::unique_ptr.893" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.888", i64 }
%"class.util::IdType.888" = type { %"class.base::StrongAlias.889" }
%"class.base::StrongAlias.889" = type { i64 }
%"class.std::__1::unique_ptr.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.899", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional", float, i8, [3 x i8] }>
%"class.absl::optional.899" = type { %"class.absl::optional_internal::optional_data.900" }
%"class.absl::optional_internal::optional_data.900" = type { %"class.absl::optional_internal::optional_data_base.901" }
%"class.absl::optional_internal::optional_data_base.901" = type { %"class.absl::optional_internal::optional_data_dtor_base.902" }
%"class.absl::optional_internal::optional_data_dtor_base.902" = type { i8, %union.anon.903 }
%union.anon.903 = type { %"class.gfx::Rect" }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType"] }
%class.sk_sp.904 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.sk_sp.905 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::vector.906" = type { %"class.std::__1::__vector_base.907" }
%"class.std::__1::__vector_base.907" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.gfx::Rect"* }
%"class.absl::optional.913" = type { %"class.absl::optional_internal::optional_data.914" }
%"class.absl::optional_internal::optional_data.914" = type { %"class.absl::optional_internal::optional_data_base.915" }
%"class.absl::optional_internal::optional_data_base.915" = type { %"class.absl::optional_internal::optional_data_dtor_base.916" }
%"class.absl::optional_internal::optional_data_dtor_base.916" = type { i8, %union.anon.917 }
%union.anon.917 = type { %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.918" = type { %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.cc::WebVitalMetrics"* }
%"struct.cc::WebVitalMetrics" = type { i8, %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, double }
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.924", %"class.base::flat_map.924", %"class.base::flat_map.924", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.924" = type { %"class.base::internal::flat_tree.925" }
%"class.base::internal::flat_tree.925" = type { %"class.std::__1::vector.926" }
%"class.std::__1::vector.926" = type { %"class.std::__1::__vector_base.927" }
%"class.std::__1::__vector_base.927" = type { %"struct.std::__1::pair.928"*, %"struct.std::__1::pair.928"*, %"class.std::__1::__compressed_pair.929" }
%"struct.std::__1::pair.928" = type opaque
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::pair.928"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.262", %"class.std::__1::vector.941", %"class.std::__1::vector.948" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.934", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.934" = type { %"class.std::__1::__vector_base.935" }
%"class.std::__1::__vector_base.935" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.936" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.941" = type { %"class.std::__1::__vector_base.942" }
%"class.std::__1::__vector_base.942" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.943" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.948" = type { %"class.std::__1::__vector_base.949" }
%"class.std::__1::__vector_base.949" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.950" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.955", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.1006" }
%"class.cc::PropertyTree.955" = type { i32 (...)**, %"class.std::__1::vector.956", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.956" = type { %"class.std::__1::__vector_base.957" }
%"class.std::__1::__vector_base.957" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.978" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.972", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.958" }
%"class.std::__1::vector.958" = type { %"class.std::__1::__vector_base.959" }
%"class.std::__1::__vector_base.959" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.967" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.960, [20 x float], i32, [4 x i8], %"class.std::__1::vector.906", i32, [4 x i8] }>
%class.sk_sp.960 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.961, i32, %"class.absl::optional.962", i8, i32 }
%class.sk_sp.961 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.962" = type { %"class.absl::optional_internal::optional_data.963" }
%"class.absl::optional_internal::optional_data.963" = type { %"class.absl::optional_internal::optional_data_base.964" }
%"class.absl::optional_internal::optional_data_base.964" = type { %"class.absl::optional_internal::optional_data_dtor_base.965" }
%"class.absl::optional_internal::optional_data_dtor_base.965" = type { i8, %union.anon.966 }
%union.anon.966 = type { %struct.SkRect }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.972" = type { %"class.absl::optional_internal::optional_data.973" }
%"class.absl::optional_internal::optional_data.973" = type { %"class.absl::optional_internal::optional_data_base.974" }
%"class.absl::optional_internal::optional_data_base.974" = type { %"class.absl::optional_internal::optional_data_dtor_base.975" }
%"class.absl::optional_internal::optional_data_dtor_base.975" = type { i8, %union.anon.976 }
%union.anon.976 = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.977" }
%"class.base::internal::flat_tree.977" = type { %"class.std::__1::vector.841" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.983" }
%"class.std::__1::__hash_table.983" = type <{ %"class.std::__1::unique_ptr.984", %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.999", %"class.std::__1::__compressed_pair.1002", [4 x i8] }>
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986", %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.std::__1::__hash_node_base.987"** }
%"struct.std::__1::__hash_node_base.987" = type { %"struct.std::__1::__hash_node_base.987"* }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"class.std::__1::__bucket_list_deallocator.989" }
%"class.std::__1::__bucket_list_deallocator.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.std::__1::__hash_node_base.987" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::vector.1006" = type { %"class.std::__1::__vector_base.1007" }
%"class.std::__1::__vector_base.1007" = type { %"class.std::__1::unique_ptr.1008"*, %"class.std::__1::unique_ptr.1008"*, %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.std::__1::unique_ptr.1008"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.1019" }
%"class.cc::PropertyTree.1019" = type { i32 (...)**, %"class.std::__1::vector.1020", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.1020" = type { %"class.std::__1::__vector_base.1021" }
%"class.std::__1::__vector_base.1021" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.1022" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.1027", i32, %"class.base::flat_map.1035", %"class.base::flat_map.1045", %"class.base::WeakPtr.1055" }
%"class.cc::PropertyTree.1027" = type { i32 (...)**, %"class.std::__1::vector.1028", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.1028" = type { %"class.std::__1::__vector_base.1029" }
%"class.std::__1::__vector_base.1029" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.1030" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.1035" = type { %"class.base::internal::flat_tree.1036" }
%"class.base::internal::flat_tree.1036" = type { %"class.std::__1::vector.1037" }
%"class.std::__1::vector.1037" = type { %"class.std::__1::__vector_base.1038" }
%"class.std::__1::__vector_base.1038" = type { %"struct.std::__1::pair.1039"*, %"struct.std::__1::pair.1039"*, %"class.std::__1::__compressed_pair.1040" }
%"struct.std::__1::pair.1039" = type opaque
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"struct.std::__1::pair.1039"* }
%"class.base::flat_map.1045" = type { %"class.base::internal::flat_tree.1046" }
%"class.base::internal::flat_tree.1046" = type { %"class.std::__1::vector.1047" }
%"class.std::__1::vector.1047" = type { %"class.std::__1::__vector_base.1048" }
%"class.std::__1::__vector_base.1048" = type { %"struct.std::__1::pair.1049"*, %"struct.std::__1::pair.1049"*, %"class.std::__1::__compressed_pair.1050" }
%"struct.std::__1::pair.1049" = type opaque
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::pair.1049"* }
%"class.base::WeakPtr.1055" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.1056", %"class.std::__1::vector.1063" }
%"class.std::__1::vector.1056" = type { %"class.std::__1::__vector_base.1057" }
%"class.std::__1::__vector_base.1057" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.1058" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.1063" = type { %"class.std::__1::__vector_base.1064" }
%"class.std::__1::__vector_base.1064" = type { %"class.std::__1::vector.1065"*, %"class.std::__1::vector.1065"*, %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::vector.1065" = type opaque
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.std::__1::vector.1065"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.1071" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.1072 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.1073" }
%"class.absl::optional.1073" = type { %"class.absl::optional_internal::optional_data.1074" }
%"class.absl::optional_internal::optional_data.1074" = type { %"class.absl::optional_internal::optional_data_base.1075" }
%"class.absl::optional_internal::optional_data_base.1075" = type { %"class.absl::optional_internal::optional_data_dtor_base.1076" }
%"class.absl::optional_internal::optional_data_dtor_base.1076" = type { i8, %union.anon.1077 }
%union.anon.1077 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.1078 = type { %"class.cc::SyncedProperty.1079"* }
%"class.cc::SyncedProperty.1079" = type <{ %"class.base::RefCounted.1080", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.1080" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.1082" = type { %"class.std::__1::__vector_base.1083" }
%"class.std::__1::__vector_base.1083" = type { %"class.std::__1::unique_ptr.1084"*, %"class.std::__1::unique_ptr.1084"*, %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.859", %"class.std::__1::unique_ptr.879", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.std::__1::unique_ptr.1084"* }
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::internal::flat_tree.1119" = type { %"class.std::__1::vector.1120" }
%"class.std::__1::vector.1120" = type { %"class.std::__1::__vector_base.1121" }
%"class.std::__1::__vector_base.1121" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1127" = type { %"class.std::__1::__hash_table.1128" }
%"class.std::__1::__hash_table.1128" = type <{ %"class.std::__1::unique_ptr.1129", %"class.std::__1::__compressed_pair.1139", %"class.std::__1::__compressed_pair.1144", %"class.std::__1::__compressed_pair.1147", [4 x i8] }>
%"class.std::__1::unique_ptr.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131", %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"struct.std::__1::__hash_node_base.1132"** }
%"struct.std::__1::__hash_node_base.1132" = type { %"struct.std::__1::__hash_node_base.1132"* }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.std::__1::__bucket_list_deallocator.1134" }
%"class.std::__1::__bucket_list_deallocator.1134" = type { %"class.std::__1::__compressed_pair.1135" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"struct.std::__1::__hash_node_base.1132" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.1151" = type { %"class.std::__1::__hash_table.1152" }
%"class.std::__1::__hash_table.1152" = type <{ %"class.std::__1::unique_ptr.1153", %"class.std::__1::__compressed_pair.1163", %"class.std::__1::__compressed_pair.1168", %"class.std::__1::__compressed_pair.1171", [4 x i8] }>
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155", %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"struct.std::__1::__hash_node_base.1156"** }
%"struct.std::__1::__hash_node_base.1156" = type { %"struct.std::__1::__hash_node_base.1156"* }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.std::__1::__bucket_list_deallocator.1158" }
%"class.std::__1::__bucket_list_deallocator.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.std::__1::__hash_node_base.1156" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.1175" = type { %"class.std::__1::__hash_table.1176" }
%"class.std::__1::__hash_table.1176" = type <{ %"class.std::__1::unique_ptr.1177", %"class.std::__1::__compressed_pair.1187", %"class.std::__1::__compressed_pair.1192", %"class.std::__1::__compressed_pair.1195", [4 x i8] }>
%"class.std::__1::unique_ptr.1177" = type { %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179", %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.std::__1::__hash_node_base.1180"** }
%"struct.std::__1::__hash_node_base.1180" = type { %"struct.std::__1::__hash_node_base.1180"* }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.std::__1::__bucket_list_deallocator.1182" }
%"class.std::__1::__bucket_list_deallocator.1182" = type { %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"struct.std::__1::__hash_node_base.1180" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::flat_map.1199" = type { %"class.base::internal::flat_tree.1200" }
%"class.base::internal::flat_tree.1200" = type { %"class.std::__1::vector.1201" }
%"class.std::__1::vector.1201" = type { %"class.std::__1::__vector_base.1202" }
%"class.std::__1::__vector_base.1202" = type { %"struct.std::__1::pair.1203"*, %"struct.std::__1::pair.1203"*, %"class.std::__1::__compressed_pair.1204" }
%"struct.std::__1::pair.1203" = type opaque
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"struct.std::__1::pair.1203"* }
%"class.std::__1::vector.1209" = type { %"class.std::__1::__vector_base.1210" }
%"class.std::__1::__vector_base.1210" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1293" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1211", %class.scoped_refptr.1219, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1271", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1276", %"class.base::flat_map.1283", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1214", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1256", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1219, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1214" = type { %"class.std::__1::__vector_base.1215" }
%"class.std::__1::__vector_base.1215" = type { %"class.std::__1::unique_ptr.1216"*, %"class.std::__1::unique_ptr.1216"*, %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1219, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1222", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1222" = type { %"class.std::__1::__hash_table.1223" }
%"class.std::__1::__hash_table.1223" = type <{ %"class.std::__1::unique_ptr.1224", %"class.std::__1::__compressed_pair.1234", %"class.std::__1::__compressed_pair.1239", %"class.std::__1::__compressed_pair.1242", [4 x i8] }>
%"class.std::__1::unique_ptr.1224" = type { %"class.std::__1::__compressed_pair.1225" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.1226", %"struct.std::__1::__compressed_pair_elem.1228" }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"struct.std::__1::__hash_node_base.1227"** }
%"struct.std::__1::__hash_node_base.1227" = type { %"struct.std::__1::__hash_node_base.1227"* }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"class.std::__1::__bucket_list_deallocator.1229" }
%"class.std::__1::__bucket_list_deallocator.1229" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.std::__1::__hash_node_base.1227" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.std::__1::unique_ptr.1216"* }
%"class.std::__1::deque.1256" = type { %"class.std::__1::__deque_base.1257" }
%"class.std::__1::__deque_base.1257" = type { %"struct.std::__1::__split_buffer.1258", i64, %"class.std::__1::__compressed_pair.1264" }
%"struct.std::__1::__split_buffer.1258" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1259" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1219 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1220", [4 x i8], i64, %class.scoped_refptr.1221, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1220" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1221 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.1271" = type { %"class.absl::optional_internal::optional_data.1272" }
%"class.absl::optional_internal::optional_data.1272" = type { %"class.absl::optional_internal::optional_data_base.1273" }
%"class.absl::optional_internal::optional_data_base.1273" = type { %"class.absl::optional_internal::optional_data_dtor_base.1274" }
%"class.absl::optional_internal::optional_data_dtor_base.1274" = type { i8, %union.anon.1275 }
%union.anon.1275 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1276" = type { %"class.std::__1::__vector_base.1277" }
%"class.std::__1::__vector_base.1277" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1283" = type { %"class.base::internal::flat_tree.1284" }
%"class.base::internal::flat_tree.1284" = type { %"class.std::__1::vector.1285" }
%"class.std::__1::vector.1285" = type { %"class.std::__1::__vector_base.1286" }
%"class.std::__1::__vector_base.1286" = type { %"struct.std::__1::pair.1287"*, %"struct.std::__1::pair.1287"*, %"class.std::__1::__compressed_pair.1288" }
%"struct.std::__1::pair.1287" = type opaque
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"struct.std::__1::pair.1287"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1298" = type { %"class.std::__1::vector.1209" }
%"class.base::internal::flat_tree.632" = type { %"class.std::__1::vector.633" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.640" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.635", %"class.viz::SurfaceId" }
%"class.absl::optional.635" = type { %"class.absl::optional_internal::optional_data.636" }
%"class.absl::optional_internal::optional_data.636" = type { %"class.absl::optional_internal::optional_data_base.637" }
%"class.absl::optional_internal::optional_data_base.637" = type { %"class.absl::optional_internal::optional_data_dtor_base.638" }
%"class.absl::optional_internal::optional_data_dtor_base.638" = type { i8, %union.anon.639 }
%union.anon.639 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1299" = type { %"class.std::__1::__vector_base.1300" }
%"class.std::__1::__vector_base.1300" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1301" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.std::__1::unique_ptr.143"*, %"class.std::__1::unique_ptr.143"*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.1355" }
%"struct.std::__1::__compressed_pair_elem.1355" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::unique_ptr.143"* }
%"class.std::__1::vector.1306" = type { %"class.std::__1::__vector_base.1307" }
%"class.std::__1::__vector_base.1307" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1308" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1313 = type { %"class.cc::SyncedProperty.1314"* }
%"class.cc::SyncedProperty.1314" = type <{ %"class.base::RefCounted.1315", %"class.cc::AdditionGroup.1316", %"class.cc::AdditionGroup.1316", %"class.cc::AdditionGroup.1316", %"class.cc::AdditionGroup.1316", %"class.cc::AdditionGroup.1316", i8, [3 x i8] }>
%"class.base::RefCounted.1315" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1316" = type { float }
%"class.std::__1::unique_ptr.1318" = type { %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.667" = type { %"class.std::__1::__vector_base.668" }
%"class.std::__1::__vector_base.668" = type { %"class.base::OnceCallback.669"*, %"class.base::OnceCallback.669"*, %"class.std::__1::__compressed_pair.670" }
%"class.base::OnceCallback.669" = type opaque
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.base::OnceCallback.669"* }
%"class.std::__1::vector.790" = type { %"class.std::__1::__vector_base.791" }
%"class.std::__1::__vector_base.791" = type { %"class.std::__1::unique_ptr.792"*, %"class.std::__1::unique_ptr.792"*, %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1346", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1346" = type { %"class.absl::optional_internal::optional_data.1347" }
%"class.absl::optional_internal::optional_data.1347" = type { %"class.absl::optional_internal::optional_data_base.1348" }
%"class.absl::optional_internal::optional_data_base.1348" = type { %"class.absl::optional_internal::optional_data_dtor_base.1349" }
%"class.absl::optional_internal::optional_data_dtor_base.1349" = type { i8, %union.anon.1350 }
%union.anon.1350 = type { i32 }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.std::__1::unique_ptr.792"* }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1330" = type { %"class.std::__1::__vector_base.1331" }
%"class.std::__1::__vector_base.1331" = type { %"class.std::__1::unique_ptr.1332"*, %"class.std::__1::unique_ptr.1332"*, %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::unique_ptr.1332" = type opaque
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.std::__1::unique_ptr.1332"* }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::DamageTracker"* }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.cc::DamageTracker::SurfaceWithRect"* }
%class.SkMatrix = type { [9 x float], i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2cc13DamageTracker16LayerRectMapDataENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_ = comdat any

$_ZNSt3__16vectorIN2cc13DamageTracker18SurfaceRectMapDataENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_ = comdat any

@_ZN2cc13DamageTrackerC1Ev = hidden unnamed_addr alias void (%"class.cc::DamageTracker"*), void (%"class.cc::DamageTracker"*)* @_ZN2cc13DamageTrackerC2Ev
@_ZN2cc13DamageTrackerD1Ev = hidden unnamed_addr alias void (%"class.cc::DamageTracker"*), void (%"class.cc::DamageTracker"*)* @_ZN2cc13DamageTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.cc::DamageTracker"* @_ZN2cc13DamageTracker6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 120) #9
  %2 = bitcast i8* %1 to %"class.cc::DamageTracker"*
  %3 = getelementptr inbounds i8, i8* %1, i64 52
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 52, i1 false) #10
  store i8 1, i8* %3, align 4
  %4 = getelementptr inbounds i8, i8* %1, i64 56
  %5 = getelementptr inbounds i8, i8* %1, i64 76
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 17, i1 false) #10
  store i8 1, i8* %5, align 4
  %6 = getelementptr inbounds i8, i8* %1, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 40, i1 false) #10
  ret %"class.cc::DamageTracker"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13DamageTrackerC2Ev(%"class.cc::DamageTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 0
  %3 = bitcast %"class.cc::DamageTracker"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 52, i1 false)
  store i8 1, i8* %2, align 4
  %4 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 1
  %5 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 0
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 17, i1 false)
  store i8 1, i8* %5, align 4
  %7 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %8 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13DamageTrackerD2Ev(%"class.cc::DamageTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"struct.cc::DamageTracker::SurfaceWithRect"*, %"struct.cc::DamageTracker::SurfaceWithRect"** %2, align 8
  %4 = icmp eq %"struct.cc::DamageTracker::SurfaceWithRect"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.cc::DamageTracker::SurfaceWithRect"* %3 to i64
  %7 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 6, i32 0, i32 1
  %8 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %11, align 8
  %13 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %12 to i64
  %16 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %20, align 8
  %22 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %21 to i64
  %25 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13DamageTracker20UpdateDamageTrackingEPNS_13LayerTreeImplE(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(24) %"class.std::__1::vector.1299"* @_ZNK2cc13LayerTreeImpl20GetRenderSurfaceListEv(%"class.cc::LayerTreeImpl"* %0) #10
  %3 = getelementptr inbounds %"class.std::__1::vector.1299", %"class.std::__1::vector.1299"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.1299", %"class.std::__1::vector.1299"* %2, i64 0, i32 0, i32 1
  %6 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %5, align 8
  %7 = icmp eq %"class.cc::RenderSurfaceImpl"** %4, %6
  br i1 %7, label %35, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.cc::RenderSurfaceImpl"** %4 to i64
  %10 = getelementptr %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %6, i64 -1
  %11 = ptrtoint %"class.cc::RenderSurfaceImpl"** %10 to i64
  %12 = sub i64 %11, %9
  %13 = and i64 %12, 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %32

15:                                               ; preds = %8
  %16 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %4, align 8
  %17 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %16, i64 0, i32 10, i32 0, i32 0, i32 0
  %18 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %17, align 8
  %19 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, 1
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %18, i64 0, i32 5, i32 0
  store i8 1, i8* %22, align 4
  %23 = bitcast %"class.cc::DamageTracker"* %18 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 77
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %24, i8 0, i64 19, i1 false) #10
  %25 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %18, i64 0, i32 4
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %18, i64 0, i32 6
  %27 = bitcast %"class.std::__1::vector.10"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %18, i64 0, i32 6, i32 0, i32 1
  %30 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %4, i64 1
  br label %32

32:                                               ; preds = %15, %8
  %33 = phi %"class.cc::RenderSurfaceImpl"** [ %4, %8 ], [ %31, %15 ]
  %34 = icmp ult i64 %12, 8
  br i1 %34, label %35, label %47

35:                                               ; preds = %32, %47, %1
  %36 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4
  %37 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 22, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr.1084"*, %"class.std::__1::unique_ptr.1084"** %37, align 8
  %39 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 22, i32 0, i32 1
  %40 = load %"class.std::__1::unique_ptr.1084"*, %"class.std::__1::unique_ptr.1084"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.1084"* %38, %40
  br i1 %41, label %82, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 2, i32 0, i32 0
  %44 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %45 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 4
  %46 = bitcast %"class.cc::HeadsUpDisplayLayerImpl"** %45 to %"class.cc::LayerImpl"**
  br label %93

47:                                               ; preds = %32, %47
  %48 = phi %"class.cc::RenderSurfaceImpl"** [ %80, %47 ], [ %33, %32 ]
  %49 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %49, i64 0, i32 10, i32 0, i32 0, i32 0
  %51 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %50, align 8
  %52 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %51, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 8
  %55 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %51, i64 0, i32 5, i32 0
  store i8 1, i8* %55, align 4
  %56 = bitcast %"class.cc::DamageTracker"* %51 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 77
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 0, i64 19, i1 false) #10
  %58 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %51, i64 0, i32 4
  store i8 0, i8* %58, align 8
  %59 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %51, i64 0, i32 6
  %60 = bitcast %"class.std::__1::vector.10"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %51, i64 0, i32 6, i32 0, i32 1
  %63 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %48, i64 1
  %65 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %65, i64 0, i32 10, i32 0, i32 0, i32 0
  %67 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %66, align 8
  %68 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %67, i64 0, i32 2
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, 1
  store i32 %70, i32* %68, align 8
  %71 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %67, i64 0, i32 5, i32 0
  store i8 1, i8* %71, align 4
  %72 = bitcast %"class.cc::DamageTracker"* %67 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 77
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %73, i8 0, i64 19, i1 false) #10
  %74 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %67, i64 0, i32 4
  store i8 0, i8* %74, align 8
  %75 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %67, i64 0, i32 6
  %76 = bitcast %"class.std::__1::vector.10"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %67, i64 0, i32 6, i32 0, i32 1
  %79 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %48, i64 2
  %81 = icmp eq %"class.cc::RenderSurfaceImpl"** %80, %6
  br i1 %81, label %35, label %47

82:                                               ; preds = %136, %35
  %83 = phi i32 [ 1, %35 ], [ %137, %136 ]
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 2, i32 0, i32 0
  %86 = load %"class.std::__1::unique_ptr.1008"*, %"class.std::__1::unique_ptr.1008"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.1008", %"class.std::__1::unique_ptr.1008"* %86, i64 %84, i32 0, i32 0, i32 0
  %88 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %88, i64 0, i32 10, i32 0, i32 0, i32 0
  %90 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %89, align 8
  tail call void @_ZN2cc13DamageTracker20ComputeSurfaceDamageEPNS_17RenderSurfaceImplE(%"class.cc::DamageTracker"* %90, %"class.cc::RenderSurfaceImpl"* %88)
  %91 = tail call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %88) #10
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %148, label %140

93:                                               ; preds = %42, %136
  %94 = phi i32 [ 1, %42 ], [ %137, %136 ]
  %95 = phi %"class.std::__1::unique_ptr.1084"* [ %38, %42 ], [ %138, %136 ]
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.1084", %"class.std::__1::unique_ptr.1084"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %97, i64 0, i32 10
  %99 = load i16, i16* %98, align 4
  %100 = and i16 %99, 256
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %136, label %102

102:                                              ; preds = %93
  %103 = tail call i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"* %97) #10
  %104 = icmp eq i32 %103, %94
  br i1 %104, label %128, label %105

105:                                              ; preds = %102
  %106 = tail call i32 @_ZNK2cc10EffectTree37LowestCommonAncestorWithRenderSurfaceEii(%"class.cc::EffectTree"* %36, i32 %94, i32 %103) #10
  %107 = icmp eq i32 %94, %106
  br i1 %107, label %128, label %108

108:                                              ; preds = %105, %123
  %109 = phi i32 [ %126, %123 ], [ %94, %105 ]
  %110 = sext i32 %109 to i64
  %111 = load %"class.std::__1::unique_ptr.1008"*, %"class.std::__1::unique_ptr.1008"** %43, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.1008", %"class.std::__1::unique_ptr.1008"* %111, i64 %110, i32 0, i32 0, i32 0
  %113 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %113, i64 0, i32 10, i32 0, i32 0, i32 0
  %115 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %114, align 8
  tail call void @_ZN2cc13DamageTracker20ComputeSurfaceDamageEPNS_17RenderSurfaceImplE(%"class.cc::DamageTracker"* %115, %"class.cc::RenderSurfaceImpl"* %113)
  %116 = tail call %"class.cc::RenderSurfaceImpl"* @_ZN2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"* %113) #10
  %117 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %116, i64 0, i32 10, i32 0, i32 0, i32 0
  %118 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %117, align 8
  tail call void @_ZN2cc13DamageTracker33AccumulateDamageFromRenderSurfaceEPNS_17RenderSurfaceImplE(%"class.cc::DamageTracker"* %118, %"class.cc::RenderSurfaceImpl"* %113)
  %119 = icmp sgt i32 %109, -1
  br i1 %119, label %120, label %123

120:                                              ; preds = %108
  %121 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %44, align 8
  %122 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %121, i64 %110
  br label %123

123:                                              ; preds = %108, %120
  %124 = phi %"struct.cc::EffectNode"* [ %122, %120 ], [ null, %108 ]
  %125 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %124, i64 0, i32 20
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, %106
  br i1 %127, label %128, label %108

128:                                              ; preds = %123, %105, %102
  %129 = phi i32 [ %94, %102 ], [ %103, %105 ], [ %103, %123 ]
  %130 = tail call %"class.cc::RenderSurfaceImpl"* @_ZN2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* %97) #10
  %131 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %46, align 8
  %132 = icmp eq %"class.cc::LayerImpl"* %97, %131
  br i1 %132, label %136, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %130, i64 0, i32 10, i32 0, i32 0, i32 0
  %135 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %134, align 8
  tail call void @_ZN2cc13DamageTracker25AccumulateDamageFromLayerEPNS_9LayerImplE(%"class.cc::DamageTracker"* %135, %"class.cc::LayerImpl"* %97)
  br label %136

136:                                              ; preds = %93, %133, %128
  %137 = phi i32 [ %94, %93 ], [ %129, %128 ], [ %129, %133 ]
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.1084", %"class.std::__1::unique_ptr.1084"* %95, i64 1
  %139 = icmp eq %"class.std::__1::unique_ptr.1084"* %138, %40
  br i1 %139, label %82, label %93

140:                                              ; preds = %82, %140
  %141 = phi %"class.cc::RenderSurfaceImpl"* [ %142, %140 ], [ %88, %82 ]
  %142 = tail call %"class.cc::RenderSurfaceImpl"* @_ZN2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"* %141) #10
  %143 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %142, i64 0, i32 10, i32 0, i32 0, i32 0
  %144 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %143, align 8
  tail call void @_ZN2cc13DamageTracker33AccumulateDamageFromRenderSurfaceEPNS_17RenderSurfaceImplE(%"class.cc::DamageTracker"* %144, %"class.cc::RenderSurfaceImpl"* %141)
  %145 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %143, align 8
  tail call void @_ZN2cc13DamageTracker20ComputeSurfaceDamageEPNS_17RenderSurfaceImplE(%"class.cc::DamageTracker"* %145, %"class.cc::RenderSurfaceImpl"* %142)
  %146 = tail call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %142) #10
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %140

148:                                              ; preds = %140, %82
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(24) %"class.std::__1::vector.1299"* @_ZNK2cc13LayerTreeImpl20GetRenderSurfaceListEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13DamageTracker16PrepareForUpdateEv(%"class.cc::DamageTracker"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 0
  store i8 1, i8* %5, align 4
  %6 = bitcast %"class.cc::DamageTracker"* %0 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 77
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 19, i1 false)
  %8 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 4
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 6
  %10 = bitcast %"class.std::__1::vector.10"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"** %12 to i64*
  store i64 %11, i64* %13, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"*) local_unnamed_addr #3

declare i32 @_ZNK2cc10EffectTree37LowestCommonAncestorWithRenderSurfaceEii(%"class.cc::EffectTree"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13DamageTracker20ComputeSurfaceDamageEPNS_17RenderSurfaceImplE(%"class.cc::DamageTracker"* nocapture, %"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::DamageTracker::DamageAccumulator", align 4
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = alloca %"class.gfx::Rect", align 8
  %6 = alloca %class.SkMatrix, align 4
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 20, i1 false)
  call void @_ZN2cc13DamageTracker28TrackDamageFromLeftoverRectsEv(%"class.cc::DamageTracker::DamageAccumulator"* nonnull sret %3, %"class.cc::DamageTracker"* %0)
  %9 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %3, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %3, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %3, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %3, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br label %20

20:                                               ; preds = %2, %14
  %21 = phi i1 [ true, %2 ], [ %19, %14 ]
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 4
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = or i8 %25, %23
  store i8 %26, i8* %24, align 8
  %27 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 0, i64 16, i1 false) #10
  %32 = load i8, i8* %8, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %66, label %34

34:                                               ; preds = %20
  %35 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %12, i32 %10) #10
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %3, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %3, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %39, i32 %41) #10
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = or i1 %36, %43
  br i1 %45, label %46, label %47

46:                                               ; preds = %34
  store i8 0, i8* %8, align 4
  br label %66

47:                                               ; preds = %34
  store i32 %10, i32* %28, align 4
  %48 = icmp sgt i32 %10, 0
  %49 = sub nuw nsw i32 2147483647, %10
  store i32 %41, i32* %29, align 4
  %50 = icmp sgt i32 %41, 0
  %51 = sub nuw nsw i32 2147483647, %41
  %52 = icmp sgt i32 %37, 0
  %53 = and i1 %48, %52
  %54 = icmp ult i32 %49, %37
  %55 = and i1 %54, %53
  %56 = select i1 %55, i32 %49, i32 %37
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  store i32 %58, i32* %30, align 4
  %59 = icmp sgt i32 %44, 0
  %60 = and i1 %50, %59
  %61 = icmp ult i32 %51, %44
  %62 = and i1 %61, %60
  %63 = select i1 %62, i32 %51, i32 %44
  %64 = icmp sgt i32 %63, 0
  %65 = select i1 %64, i32 %63, i32 0
  store i32 %65, i32* %31, align 4
  br label %66

66:                                               ; preds = %20, %46, %47
  %67 = phi i1 [ false, %20 ], [ true, %47 ], [ false, %46 ]
  %68 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 6
  %69 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %68, i64 0, i32 0, i32 0
  %70 = load %"struct.cc::DamageTracker::SurfaceWithRect"*, %"struct.cc::DamageTracker::SurfaceWithRect"** %69, align 8
  %71 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 6, i32 0, i32 1
  %72 = load %"struct.cc::DamageTracker::SurfaceWithRect"*, %"struct.cc::DamageTracker::SurfaceWithRect"** %71, align 8
  %73 = icmp eq %"struct.cc::DamageTracker::SurfaceWithRect"* %70, %72
  br i1 %73, label %146, label %77

74:                                               ; preds = %100
  %75 = and i8 %101, 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %146, label %104

77:                                               ; preds = %66, %100
  %78 = phi i8 [ %101, %100 ], [ 0, %66 ]
  %79 = phi %"struct.cc::DamageTracker::SurfaceWithRect"* [ %102, %100 ], [ %70, %66 ]
  %80 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %79, i64 0, i32 0
  %81 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %80, align 8
  %82 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl15BackdropFiltersEv(%"class.cc::RenderSurfaceImpl"* %81) #10
  %83 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %82) #10
  %84 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %81, i64 0, i32 7
  %85 = load i8, i8* %84, align 4
  %86 = and i8 %85, 32
  %87 = icmp eq i8 %86, 0
  %88 = or i1 %83, %87
  br i1 %88, label %89, label %100

89:                                               ; preds = %77
  br i1 %67, label %90, label %95

90:                                               ; preds = %89
  %91 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %79, i64 0, i32 1
  %92 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %91, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #10
  br i1 %92, label %93, label %100

93:                                               ; preds = %90
  %94 = load i8, i8* %84, align 4
  br label %95

95:                                               ; preds = %93, %89
  %96 = phi i8 [ %94, %93 ], [ %85, %89 ]
  %97 = or i8 %96, 32
  store i8 %97, i8* %84, align 4
  br i1 %83, label %98, label %100

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %79, i64 0, i32 1
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Rect"* dereferenceable(16) %99) #10
  br label %100

100:                                              ; preds = %77, %90, %98, %95
  %101 = phi i8 [ 1, %98 ], [ %78, %95 ], [ %78, %90 ], [ %78, %77 ]
  %102 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %79, i64 1
  %103 = icmp eq %"struct.cc::DamageTracker::SurfaceWithRect"* %102, %72
  br i1 %103, label %74, label %77

104:                                              ; preds = %74
  %105 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 0
  %106 = load i8, i8* %105, align 4, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %146, label %108

108:                                              ; preds = %104
  %109 = load i32, i32* %30, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %146, label %111

111:                                              ; preds = %108
  %112 = load i32, i32* %31, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %146, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %116, %118
  br i1 %119, label %126, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %122, %124
  br i1 %125, label %126, label %133

126:                                              ; preds = %120, %114
  %127 = load i32, i32* %28, align 4
  store i32 %127, i32* %115, align 4
  %128 = load i32, i32* %29, align 4
  %129 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %128, i32* %129, align 4
  %130 = add nsw i32 %127, %109
  store i32 %130, i32* %117, align 4
  %131 = add nsw i32 %128, %112
  %132 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %131, i32* %132, align 4
  br label %146

133:                                              ; preds = %120
  %134 = load i32, i32* %28, align 4
  %135 = icmp slt i32 %134, %116
  %136 = select i1 %135, i32 %134, i32 %116
  store i32 %136, i32* %115, align 4
  %137 = load i32, i32* %29, align 4
  %138 = icmp slt i32 %137, %122
  %139 = select i1 %138, i32 %137, i32 %122
  store i32 %139, i32* %121, align 4
  %140 = add nsw i32 %134, %109
  %141 = icmp slt i32 %118, %140
  %142 = select i1 %141, i32 %140, i32 %118
  store i32 %142, i32* %117, align 4
  %143 = add nsw i32 %137, %112
  %144 = icmp slt i32 %124, %143
  %145 = select i1 %144, i32 %143, i32 %124
  store i32 %145, i32* %123, align 4
  br label %146

146:                                              ; preds = %66, %133, %126, %111, %108, %104, %74
  %147 = bitcast %"class.std::__1::vector.10"* %68 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"** %71 to i64*
  store i64 %148, i64* %149, align 8
  %150 = call zeroext i1 @_ZNK2cc17RenderSurfaceImpl40SurfacePropertyChangedOnlyFromDescendantEv(%"class.cc::RenderSurfaceImpl"* %1) #10
  %151 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 0
  br i1 %150, label %152, label %215

152:                                              ; preds = %146
  store i8 1, i8* %151, align 4
  %153 = bitcast %"class.cc::DamageTracker"* %0 to i8*
  %154 = getelementptr inbounds i8, i8* %153, i64 77
  call void @llvm.memset.p0i8.i64(i8* align 1 %154, i8 0, i64 19, i1 false)
  %155 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %1, i64 0, i32 4, i32 3
  %156 = bitcast %"class.gfx::Rect"* %155 to i64*
  %157 = load i64, i64* %156, align 4
  %158 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %1, i64 0, i32 4, i32 3, i32 1
  %159 = bitcast %"class.gfx::Size"* %158 to i64*
  %160 = load i64, i64* %159, align 4
  %161 = trunc i64 %157 to i32
  %162 = lshr i64 %157, 32
  %163 = trunc i64 %162 to i32
  %164 = trunc i64 %160 to i32
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %198, label %166

166:                                              ; preds = %152
  %167 = lshr i64 %160, 32
  %168 = trunc i64 %167 to i32
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %198, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %172, %174
  br i1 %175, label %182, label %176

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %178, %180
  br i1 %181, label %182, label %187

182:                                              ; preds = %176, %170
  store i32 %161, i32* %171, align 4
  %183 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %163, i32* %183, align 4
  %184 = add nsw i32 %164, %161
  store i32 %184, i32* %173, align 4
  %185 = add nsw i32 %168, %163
  %186 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %185, i32* %186, align 4
  br label %198

187:                                              ; preds = %176
  %188 = icmp sgt i32 %172, %161
  %189 = select i1 %188, i32 %161, i32 %172
  store i32 %189, i32* %171, align 4
  %190 = icmp sgt i32 %178, %163
  %191 = select i1 %190, i32 %163, i32 %178
  store i32 %191, i32* %177, align 4
  %192 = add nsw i32 %164, %161
  %193 = icmp slt i32 %174, %192
  %194 = select i1 %193, i32 %192, i32 %174
  store i32 %194, i32* %173, align 4
  %195 = add nsw i32 %168, %163
  %196 = icmp slt i32 %180, %195
  %197 = select i1 %196, i32 %195, i32 %180
  store i32 %197, i32* %179, align 4
  br label %198

198:                                              ; preds = %152, %166, %182, %187
  %199 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %200, %202
  br i1 %203, label %211, label %204

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %208 = load i32, i32* %207, align 4
  %209 = icmp ne i32 %206, %208
  %210 = zext i1 %209 to i8
  br label %211

211:                                              ; preds = %198, %204
  %212 = phi i8 [ 0, %198 ], [ %210, %204 ]
  %213 = load i8, i8* %24, align 8, !range !2
  %214 = or i8 %213, %212
  store i8 %214, i8* %24, align 8
  br label %339

215:                                              ; preds = %146
  %216 = load i8, i8* %151, align 4, !range !2
  %217 = icmp eq i8 %216, 0
  %218 = or i1 %13, %217
  br i1 %218, label %249, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %3, i64 0, i32 2
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %3, i64 0, i32 4
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %249, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %227, %229
  br i1 %230, label %237, label %231

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %233, %235
  br i1 %236, label %237, label %240

237:                                              ; preds = %231, %225
  store i32 %10, i32* %226, align 4
  %238 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %221, i32* %238, align 4
  store i32 %12, i32* %228, align 4
  %239 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %223, i32* %239, align 4
  br label %249

240:                                              ; preds = %231
  %241 = icmp slt i32 %10, %227
  %242 = select i1 %241, i32 %10, i32 %227
  store i32 %242, i32* %226, align 4
  %243 = icmp slt i32 %221, %233
  %244 = select i1 %243, i32 %221, i32 %233
  store i32 %244, i32* %232, align 4
  %245 = icmp slt i32 %229, %12
  %246 = select i1 %245, i32 %12, i32 %229
  store i32 %246, i32* %228, align 4
  %247 = icmp slt i32 %235, %223
  %248 = select i1 %247, i32 %223, i32 %235
  store i32 %248, i32* %234, align 4
  br label %249

249:                                              ; preds = %215, %219, %237, %240
  %250 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %250) #10
  %251 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %252 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %253 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 0
  %254 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 0, i64 16, i1 false) #10
  br i1 %217, label %338, label %255

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %257, i32 %259) #10
  %261 = extractvalue { i32, i1 } %260, 1
  %262 = extractvalue { i32, i1 } %260, 0
  %263 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %266 = load i32, i32* %265, align 4
  %267 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %264, i32 %266) #10
  %268 = extractvalue { i32, i1 } %267, 1
  %269 = extractvalue { i32, i1 } %267, 0
  %270 = or i1 %261, %268
  br i1 %270, label %271, label %272

271:                                              ; preds = %255
  store i8 0, i8* %151, align 4
  br label %338

272:                                              ; preds = %255
  store i32 %259, i32* %251, align 8
  %273 = icmp sgt i32 %259, 0
  %274 = sub nuw nsw i32 2147483647, %259
  store i32 %266, i32* %252, align 4
  %275 = icmp sgt i32 %266, 0
  %276 = sub nuw nsw i32 2147483647, %266
  %277 = icmp sgt i32 %262, 0
  %278 = and i1 %273, %277
  %279 = icmp ult i32 %274, %262
  %280 = and i1 %279, %278
  %281 = select i1 %280, i32 %274, i32 %262
  %282 = icmp sgt i32 %281, 0
  %283 = select i1 %282, i32 %281, i32 0
  store i32 %283, i32* %253, align 8
  %284 = icmp sgt i32 %269, 0
  %285 = and i1 %275, %284
  %286 = icmp ult i32 %276, %269
  %287 = and i1 %286, %285
  %288 = select i1 %287, i32 %276, i32 %269
  %289 = icmp sgt i32 %288, 0
  %290 = select i1 %289, i32 %288, i32 0
  store i32 %290, i32* %254, align 4
  %291 = icmp slt i32 %281, 1
  %292 = icmp slt i32 %288, 1
  %293 = or i1 %292, %291
  br i1 %293, label %338, label %294

294:                                              ; preds = %272
  %295 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl7FiltersEv(%"class.cc::RenderSurfaceImpl"* %1) #10
  %296 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %296) #10
  %297 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %297) #10
  call void @_ZNK2cc17RenderSurfaceImpl12SurfaceScaleEv(%"class.gfx::Transform"* nonnull sret %7, %"class.cc::RenderSurfaceImpl"* %1) #10
  %298 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0
  call void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* nonnull sret %6, %class.SkMatrix44* nonnull %298) #10
  %299 = call { i64, i64 } @_ZNK2cc16FilterOperations7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"* %295, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %class.SkMatrix* nonnull dereferenceable(40) %6) #10
  %300 = extractvalue { i64, i64 } %299, 0
  %301 = extractvalue { i64, i64 } %299, 1
  %302 = bitcast %"class.gfx::Rect"* %5 to i64*
  store i64 %300, i64* %302, align 8
  %303 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1
  %304 = bitcast %"class.gfx::Size"* %303 to i64*
  store i64 %301, i64* %304, align 8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %297) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %296) #10
  store i8 1, i8* %151, align 4
  %305 = bitcast %"class.cc::DamageTracker"* %0 to i8*
  %306 = getelementptr inbounds i8, i8* %305, i64 77
  call void @llvm.memset.p0i8.i64(i8* align 1 %306, i8 0, i64 19, i1 false)
  %307 = trunc i64 %301 to i32
  %308 = icmp eq i32 %307, 0
  %309 = lshr i64 %301, 32
  %310 = trunc i64 %309 to i32
  %311 = trunc i64 %300 to i32
  %312 = lshr i64 %300, 32
  %313 = trunc i64 %312 to i32
  %314 = icmp eq i32 %310, 0
  %315 = or i1 %308, %314
  br i1 %315, label %338, label %316

316:                                              ; preds = %294
  %317 = load i32, i32* %258, align 4
  %318 = load i32, i32* %256, align 4
  %319 = icmp eq i32 %317, %318
  br i1 %319, label %324, label %320

320:                                              ; preds = %316
  %321 = load i32, i32* %265, align 4
  %322 = load i32, i32* %263, align 4
  %323 = icmp eq i32 %321, %322
  br i1 %323, label %324, label %327

324:                                              ; preds = %320, %316
  store i32 %311, i32* %258, align 4
  store i32 %313, i32* %265, align 4
  %325 = add nsw i32 %311, %307
  store i32 %325, i32* %256, align 4
  %326 = add nsw i32 %313, %310
  store i32 %326, i32* %263, align 4
  br label %338

327:                                              ; preds = %320
  %328 = icmp sgt i32 %317, %311
  %329 = select i1 %328, i32 %311, i32 %317
  store i32 %329, i32* %258, align 4
  %330 = icmp sgt i32 %321, %313
  %331 = select i1 %330, i32 %313, i32 %321
  store i32 %331, i32* %265, align 4
  %332 = add nsw i32 %311, %307
  %333 = icmp slt i32 %318, %332
  %334 = select i1 %333, i32 %332, i32 %318
  store i32 %334, i32* %256, align 4
  %335 = add nsw i32 %313, %310
  %336 = icmp slt i32 %322, %335
  %337 = select i1 %336, i32 %335, i32 %322
  store i32 %337, i32* %263, align 4
  br label %338

338:                                              ; preds = %272, %271, %249, %327, %324, %294
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %250) #10
  br label %339

339:                                              ; preds = %338, %211
  %340 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 0
  %341 = load i8, i8* %340, align 4, !range !2
  %342 = icmp eq i8 %341, 0
  br i1 %342, label %379, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %345 = load i32, i32* %344, align 4
  %346 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %345, %347
  br i1 %348, label %379, label %349

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %353 = load i32, i32* %352, align 4
  %354 = icmp eq i32 %351, %353
  br i1 %354, label %379, label %355

355:                                              ; preds = %349
  %356 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 3
  %359 = load i32, i32* %358, align 4
  %360 = icmp eq i32 %357, %359
  br i1 %360, label %367, label %361

361:                                              ; preds = %355
  %362 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 2
  %363 = load i32, i32* %362, align 4
  %364 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 4
  %365 = load i32, i32* %364, align 4
  %366 = icmp eq i32 %363, %365
  br i1 %366, label %367, label %370

367:                                              ; preds = %361, %355
  store i32 %345, i32* %356, align 4
  %368 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 2
  store i32 %351, i32* %368, align 4
  store i32 %347, i32* %358, align 4
  %369 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 4
  store i32 %353, i32* %369, align 4
  br label %379

370:                                              ; preds = %361
  %371 = icmp slt i32 %345, %357
  %372 = select i1 %371, i32 %345, i32 %357
  store i32 %372, i32* %356, align 4
  %373 = icmp slt i32 %351, %363
  %374 = select i1 %373, i32 %351, i32 %363
  store i32 %374, i32* %362, align 4
  %375 = icmp slt i32 %359, %347
  %376 = select i1 %375, i32 %347, i32 %359
  store i32 %376, i32* %358, align 4
  %377 = icmp slt i32 %365, %353
  %378 = select i1 %377, i32 %353, i32 %365
  store i32 %378, i32* %364, align 4
  br label %379

379:                                              ; preds = %339, %343, %349, %367, %370
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %8) #10
  ret void
}

declare %"class.cc::RenderSurfaceImpl"* @_ZN2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13DamageTracker33AccumulateDamageFromRenderSurfaceEPNS_17RenderSurfaceImplE(%"class.cc::DamageTracker"*, %"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.cc::DamageTracker::SurfaceRectMapData", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.gfx::RectF"*
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.gfx::Rect"*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.gfx::Rect"*
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = bitcast { <2 x float>, <2 x float> }* %14 to %"class.gfx::RectF"*
  %16 = ptrtoint %"class.cc::RenderSurfaceImpl"* %1 to i64
  %17 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %1, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false) #10
  store i64 %18, i64* %20, align 8
  %22 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #10
  %23 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %23, i64 0, i32 0, i32 0
  %25 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %24, align 8
  %26 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %26, align 8
  %28 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %25 to i64
  %29 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %27 to i64
  %30 = sub i64 %29, %28
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %48, label %32

32:                                               ; preds = %2
  %33 = ashr exact i64 %30, 5
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %25, %32 ], [ %46, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %45, %34 ]
  %37 = lshr i64 %36, 1
  %38 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %35, i64 %37
  %39 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %40, %18
  %42 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %38, i64 1
  %43 = xor i64 %37, -1
  %44 = add i64 %36, %43
  %45 = select i1 %41, i64 %44, i64 %37
  %46 = select i1 %41, %"struct.cc::DamageTracker::SurfaceRectMapData"* %42, %"struct.cc::DamageTracker::SurfaceRectMapData"* %35
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %34

48:                                               ; preds = %34, %2
  %49 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %25, %2 ], [ %46, %34 ]
  %50 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %49, %27
  br i1 %50, label %55, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %49, i64 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %18
  br i1 %54, label %57, label %55

55:                                               ; preds = %51, %48
  %56 = call %"struct.cc::DamageTracker::SurfaceRectMapData"* @_ZNSt3__16vectorIN2cc13DamageTracker18SurfaceRectMapDataENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector.3"* %23, %"struct.cc::DamageTracker::SurfaceRectMapData"* %49, %"struct.cc::DamageTracker::SurfaceRectMapData"* nonnull dereferenceable(32) %3) #10
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi i8 [ 1, %55 ], [ 0, %51 ]
  %59 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %56, %55 ], [ %49, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #10
  %60 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %59, i64 0, i32 2, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %59, i64 0, i32 2, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %59, i64 0, i32 2, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %59, i64 0, i32 2, i32 1, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #10
  %69 = bitcast { i64, i64 }* %4 to i32*
  %70 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %72 = bitcast i64* %71 to i32*
  %73 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  %74 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  %75 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #10
  %76 = call { <2 x float>, <2 x float> } @_ZNK2cc17RenderSurfaceImpl19DrawableContentRectEv(%"class.cc::RenderSurfaceImpl"* %1) #10
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %78 = extractvalue { <2 x float>, <2 x float> } %76, 0
  store <2 x float> %78, <2 x float>* %77, align 8
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %80 = extractvalue { <2 x float>, <2 x float> } %76, 1
  store <2 x float> %80, <2 x float>* %79, align 8
  %81 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %7) #10
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %83 = extractvalue { i64, i64 } %81, 0
  store i64 %83, i64* %82, align 8
  %84 = extractvalue { i64, i64 } %81, 1
  store i64 %84, i64* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #10
  %85 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %59, i64 0, i32 1
  store i32 %86, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %59, i64 0, i32 2
  %89 = bitcast %"class.gfx::Rect"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* nonnull align 8 %68, i64 16, i1 false) #10
  %90 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 6
  %91 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 6, i32 0, i32 1
  %92 = load %"struct.cc::DamageTracker::SurfaceWithRect"*, %"struct.cc::DamageTracker::SurfaceWithRect"** %91, align 8
  %93 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %94 = load %"struct.cc::DamageTracker::SurfaceWithRect"*, %"struct.cc::DamageTracker::SurfaceWithRect"** %93, align 8
  %95 = icmp ult %"struct.cc::DamageTracker::SurfaceWithRect"* %92, %94
  %96 = ptrtoint %"struct.cc::DamageTracker::SurfaceWithRect"* %94 to i64
  br i1 %95, label %97, label %104

97:                                               ; preds = %57
  %98 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"* %92 to i64*
  store i64 %16, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %92, i64 0, i32 1
  %100 = bitcast %"class.gfx::Rect"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* nonnull align 8 %68, i64 16, i1 false) #10
  %101 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %92, i64 1
  %102 = ptrtoint %"struct.cc::DamageTracker::SurfaceWithRect"* %101 to i64
  %103 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"** %91 to i64*
  store i64 %102, i64* %103, align 8
  br label %159

104:                                              ; preds = %57
  %105 = ptrtoint %"struct.cc::DamageTracker::SurfaceWithRect"* %92 to i64
  %106 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"** %91 to i64*
  %107 = bitcast %"class.std::__1::vector.10"* %90 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %105, %108
  %110 = sdiv exact i64 %109, 24
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 768614336404564650
  br i1 %112, label %113, label %115

113:                                              ; preds = %104
  %114 = bitcast %"class.std::__1::vector.10"* %90 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %104
  %116 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"** %93 to i64*
  %117 = sub i64 %96, %108
  %118 = sdiv exact i64 %117, 24
  %119 = icmp ult i64 %118, 384307168202282325
  br i1 %119, label %120, label %125

120:                                              ; preds = %115
  %121 = shl nsw i64 %118, 1
  %122 = icmp ult i64 %121, %111
  %123 = select i1 %122, i64 %111, i64 %121
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %120, %115
  %126 = phi i64 [ %123, %120 ], [ 768614336404564650, %115 ]
  %127 = mul i64 %126, 24
  %128 = call i8* @_Znwm(i64 %127) #9
  %129 = bitcast i8* %128 to %"struct.cc::DamageTracker::SurfaceWithRect"*
  br label %130

130:                                              ; preds = %125, %120
  %131 = phi i64 [ %126, %125 ], [ 0, %120 ]
  %132 = phi %"struct.cc::DamageTracker::SurfaceWithRect"* [ %129, %125 ], [ null, %120 ]
  %133 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %132, i64 %110
  %134 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %132, i64 %131
  %135 = ptrtoint %"struct.cc::DamageTracker::SurfaceWithRect"* %134 to i64
  %136 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"* %133 to i64*
  store i64 %16, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %132, i64 %110, i32 1
  %138 = bitcast %"class.gfx::Rect"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* nonnull align 8 %68, i64 16, i1 false) #10
  %139 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %133, i64 1
  %140 = ptrtoint %"struct.cc::DamageTracker::SurfaceWithRect"* %139 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %90, i64 0, i32 0, i32 0
  %142 = load %"struct.cc::DamageTracker::SurfaceWithRect"*, %"struct.cc::DamageTracker::SurfaceWithRect"** %141, align 8
  %143 = load i64, i64* %106, align 8
  %144 = ptrtoint %"struct.cc::DamageTracker::SurfaceWithRect"* %142 to i64
  %145 = sub i64 %143, %144
  %146 = sdiv exact i64 %145, -24
  %147 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceWithRect", %"struct.cc::DamageTracker::SurfaceWithRect"* %133, i64 %146
  %148 = ptrtoint %"struct.cc::DamageTracker::SurfaceWithRect"* %147 to i64
  %149 = icmp sgt i64 %145, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %130
  %151 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"* %147 to i8*
  %152 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %145, i1 false) #10
  %153 = load %"struct.cc::DamageTracker::SurfaceWithRect"*, %"struct.cc::DamageTracker::SurfaceWithRect"** %141, align 8
  br label %154

154:                                              ; preds = %150, %130
  %155 = phi %"struct.cc::DamageTracker::SurfaceWithRect"* [ %142, %130 ], [ %153, %150 ]
  store i64 %148, i64* %107, align 8
  store i64 %140, i64* %106, align 8
  store i64 %135, i64* %116, align 8
  %156 = icmp eq %"struct.cc::DamageTracker::SurfaceWithRect"* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast %"struct.cc::DamageTracker::SurfaceWithRect"* %155 to i8*
  call void @_ZdlPv(i8* %158) #9
  br label %159

159:                                              ; preds = %97, %154, %157
  %160 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #10
  %161 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 1
  %163 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %160, i8 0, i64 16, i1 false) #10
  %165 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 0
  %166 = load i8, i8* %165, align 4, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %205, label %168

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %170, i32 %172) #10
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %177, i32 %179) #10
  %181 = extractvalue { i32, i1 } %180, 1
  %182 = extractvalue { i32, i1 } %180, 0
  %183 = or i1 %174, %181
  br i1 %183, label %184, label %185

184:                                              ; preds = %168
  store i8 0, i8* %165, align 4
  br label %205

185:                                              ; preds = %168
  store i32 %172, i32* %161, align 4
  %186 = icmp sgt i32 %172, 0
  %187 = sub nuw nsw i32 2147483647, %172
  store i32 %179, i32* %162, align 4
  %188 = icmp sgt i32 %179, 0
  %189 = sub nuw nsw i32 2147483647, %179
  %190 = icmp sgt i32 %175, 0
  %191 = and i1 %186, %190
  %192 = icmp ult i32 %187, %175
  %193 = and i1 %192, %191
  %194 = select i1 %193, i32 %187, i32 %175
  %195 = icmp sgt i32 %194, 0
  %196 = select i1 %195, i32 %194, i32 0
  store i32 %196, i32* %163, align 4
  %197 = icmp sgt i32 %182, 0
  %198 = and i1 %188, %197
  %199 = icmp ult i32 %189, %182
  %200 = and i1 %199, %198
  %201 = select i1 %200, i32 %189, i32 %182
  %202 = icmp sgt i32 %201, 0
  %203 = select i1 %202, i32 %201, i32 0
  store i32 %203, i32* %164, align 4
  %204 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %8, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #10
  br label %205

205:                                              ; preds = %184, %159, %185
  %206 = phi i1 [ %204, %185 ], [ true, %159 ], [ true, %184 ]
  %207 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl15BackdropFiltersEv(%"class.cc::RenderSurfaceImpl"* %1) #10
  %208 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %207) #10
  %209 = and i1 %206, %208
  br i1 %209, label %210, label %251

210:                                              ; preds = %205
  %211 = load i8, i8* %165, align 4, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %251, label %213

213:                                              ; preds = %210
  %214 = load i32, i32* %72, align 8
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %251, label %216

216:                                              ; preds = %213
  %217 = load i32, i32* %73, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %251, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %231, label %225

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %227, %229
  br i1 %230, label %231, label %238

231:                                              ; preds = %225, %219
  %232 = load i32, i32* %69, align 8
  store i32 %232, i32* %220, align 4
  %233 = load i32, i32* %70, align 4
  %234 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %233, i32* %234, align 4
  %235 = add nsw i32 %232, %214
  store i32 %235, i32* %222, align 4
  %236 = add nsw i32 %233, %217
  %237 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %236, i32* %237, align 4
  br label %251

238:                                              ; preds = %225
  %239 = load i32, i32* %69, align 8
  %240 = icmp slt i32 %239, %221
  %241 = select i1 %240, i32 %239, i32 %221
  store i32 %241, i32* %220, align 4
  %242 = load i32, i32* %70, align 4
  %243 = icmp slt i32 %242, %227
  %244 = select i1 %243, i32 %242, i32 %227
  store i32 %244, i32* %226, align 4
  %245 = add nsw i32 %239, %214
  %246 = icmp slt i32 %223, %245
  %247 = select i1 %246, i32 %245, i32 %223
  store i32 %247, i32* %222, align 4
  %248 = add nsw i32 %242, %217
  %249 = icmp slt i32 %229, %248
  %250 = select i1 %249, i32 %248, i32 %229
  store i32 %250, i32* %228, align 4
  br label %251

251:                                              ; preds = %205, %238, %231, %216, %213, %210
  %252 = icmp eq i8 %58, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %251
  %254 = call zeroext i1 @_ZNK2cc17RenderSurfaceImpl22SurfacePropertyChangedEv(%"class.cc::RenderSurfaceImpl"* %1) #10
  br i1 %254, label %255, label %328

255:                                              ; preds = %251, %253
  %256 = load i8, i8* %165, align 4, !range !2
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %485, label %258

258:                                              ; preds = %255
  %259 = load i32, i32* %72, align 8
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %296, label %261

261:                                              ; preds = %258
  %262 = load i32, i32* %73, align 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %296, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %268 = load i32, i32* %267, align 4
  %269 = icmp eq i32 %266, %268
  br i1 %269, label %276, label %270

270:                                              ; preds = %264
  %271 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %272 = load i32, i32* %271, align 4
  %273 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %272, %274
  br i1 %275, label %276, label %283

276:                                              ; preds = %270, %264
  %277 = load i32, i32* %69, align 8
  store i32 %277, i32* %265, align 4
  %278 = load i32, i32* %70, align 4
  %279 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %278, i32* %279, align 4
  %280 = add nsw i32 %277, %259
  store i32 %280, i32* %267, align 4
  %281 = add nsw i32 %278, %262
  %282 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %281, i32* %282, align 4
  br label %296

283:                                              ; preds = %270
  %284 = load i32, i32* %69, align 8
  %285 = icmp slt i32 %284, %266
  %286 = select i1 %285, i32 %284, i32 %266
  store i32 %286, i32* %265, align 4
  %287 = load i32, i32* %70, align 4
  %288 = icmp slt i32 %287, %272
  %289 = select i1 %288, i32 %287, i32 %272
  store i32 %289, i32* %271, align 4
  %290 = add nsw i32 %284, %259
  %291 = icmp slt i32 %268, %290
  %292 = select i1 %291, i32 %290, i32 %268
  store i32 %292, i32* %267, align 4
  %293 = add nsw i32 %287, %262
  %294 = icmp slt i32 %274, %293
  %295 = select i1 %294, i32 %293, i32 %274
  store i32 %295, i32* %273, align 4
  br label %296

296:                                              ; preds = %258, %261, %276, %283
  %297 = icmp eq i32 %65, 0
  %298 = icmp eq i32 %67, 0
  %299 = or i1 %297, %298
  br i1 %299, label %485, label %300

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %304 = load i32, i32* %303, align 4
  %305 = icmp eq i32 %302, %304
  br i1 %305, label %312, label %306

306:                                              ; preds = %300
  %307 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %308 = load i32, i32* %307, align 4
  %309 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %310 = load i32, i32* %309, align 4
  %311 = icmp eq i32 %308, %310
  br i1 %311, label %312, label %317

312:                                              ; preds = %306, %300
  store i32 %61, i32* %301, align 4
  %313 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %63, i32* %313, align 4
  %314 = add nsw i32 %65, %61
  store i32 %314, i32* %303, align 4
  %315 = add nsw i32 %67, %63
  %316 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %315, i32* %316, align 4
  br label %485

317:                                              ; preds = %306
  %318 = icmp slt i32 %61, %302
  %319 = select i1 %318, i32 %61, i32 %302
  store i32 %319, i32* %301, align 4
  %320 = icmp slt i32 %63, %308
  %321 = select i1 %320, i32 %63, i32 %308
  store i32 %321, i32* %307, align 4
  %322 = add nsw i32 %65, %61
  %323 = icmp slt i32 %304, %322
  %324 = select i1 %323, i32 %322, i32 %304
  store i32 %324, i32* %303, align 4
  %325 = add nsw i32 %67, %63
  %326 = icmp slt i32 %310, %325
  %327 = select i1 %326, i32 %325, i32 %310
  store i32 %327, i32* %309, align 4
  br label %485

328:                                              ; preds = %253
  %329 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %329) #10
  %330 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 0
  %331 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 1
  %332 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 0
  %333 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %329, i8 0, i64 16, i1 false) #10
  %334 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %335 = load %"class.cc::DamageTracker"*, %"class.cc::DamageTracker"** %334, align 8
  %336 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %335, i64 0, i32 3, i32 0
  %337 = load i8, i8* %336, align 4, !range !2
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %443, label %339

339:                                              ; preds = %328
  %340 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %335, i64 0, i32 3, i32 3
  %341 = load i32, i32* %340, align 4
  %342 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %335, i64 0, i32 3, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %341, i32 %343) #10
  %345 = extractvalue { i32, i1 } %344, 1
  %346 = extractvalue { i32, i1 } %344, 0
  %347 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %335, i64 0, i32 3, i32 4
  %348 = load i32, i32* %347, align 4
  %349 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %335, i64 0, i32 3, i32 2
  %350 = load i32, i32* %349, align 4
  %351 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %348, i32 %350) #10
  %352 = extractvalue { i32, i1 } %351, 1
  %353 = extractvalue { i32, i1 } %351, 0
  %354 = or i1 %345, %352
  br i1 %354, label %355, label %356

355:                                              ; preds = %339
  store i8 0, i8* %336, align 4
  br label %443

356:                                              ; preds = %339
  store i32 %343, i32* %330, align 4
  %357 = icmp sgt i32 %343, 0
  %358 = sub nuw nsw i32 2147483647, %343
  store i32 %350, i32* %331, align 4
  %359 = icmp sgt i32 %350, 0
  %360 = sub nuw nsw i32 2147483647, %350
  %361 = icmp sgt i32 %346, 0
  %362 = and i1 %357, %361
  %363 = icmp ult i32 %358, %346
  %364 = and i1 %363, %362
  %365 = select i1 %364, i32 %358, i32 %346
  %366 = icmp sgt i32 %365, 0
  %367 = select i1 %366, i32 %365, i32 0
  store i32 %367, i32* %332, align 4
  %368 = icmp sgt i32 %353, 0
  %369 = and i1 %359, %368
  %370 = icmp ult i32 %360, %353
  %371 = and i1 %370, %369
  %372 = select i1 %371, i32 %360, i32 %353
  %373 = icmp sgt i32 %372, 0
  %374 = select i1 %373, i32 %372, i32 0
  store i32 %374, i32* %333, align 4
  %375 = icmp slt i32 %365, 1
  %376 = icmp slt i32 %372, 1
  %377 = or i1 %376, %375
  br i1 %377, label %484, label %378

378:                                              ; preds = %356
  %379 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %1, i64 0, i32 4, i32 1
  %380 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %380) #10
  %381 = bitcast { i64, i64 }* %10 to i32*
  %382 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 1
  %383 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %384 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 1
  %385 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %379, %"class.gfx::Rect"* nonnull dereferenceable(16) %9) #10
  %386 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %387 = extractvalue { i64, i64 } %385, 0
  store i64 %387, i64* %386, align 8
  %388 = extractvalue { i64, i64 } %385, 1
  store i64 %388, i64* %383, align 8
  %389 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %389) #10
  %390 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %390) #10
  %391 = call { <2 x float>, <2 x float> } @_ZNK2cc17RenderSurfaceImpl19DrawableContentRectEv(%"class.cc::RenderSurfaceImpl"* %1) #10
  %392 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  %393 = extractvalue { <2 x float>, <2 x float> } %391, 0
  store <2 x float> %393, <2 x float>* %392, align 8
  %394 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  %395 = extractvalue { <2 x float>, <2 x float> } %391, 1
  store <2 x float> %395, <2 x float>* %394, align 8
  %396 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %15) #10
  %397 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %398 = extractvalue { i64, i64 } %396, 0
  store i64 %398, i64* %397, align 8
  %399 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %400 = extractvalue { i64, i64 } %396, 1
  store i64 %400, i64* %399, align 8
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %11, %"class.gfx::Rect"* nonnull dereferenceable(16) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %390) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %389) #10
  %401 = load i8, i8* %165, align 4, !range !2
  %402 = icmp eq i8 %401, 0
  br i1 %402, label %442, label %403

403:                                              ; preds = %378
  %404 = bitcast i64* %383 to i32*
  %405 = load i32, i32* %404, align 8
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %442, label %407

407:                                              ; preds = %403
  %408 = load i32, i32* %384, align 4
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %442, label %410

410:                                              ; preds = %407
  %411 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %412 = load i32, i32* %411, align 4
  %413 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %414 = load i32, i32* %413, align 4
  %415 = icmp eq i32 %412, %414
  br i1 %415, label %422, label %416

416:                                              ; preds = %410
  %417 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %418 = load i32, i32* %417, align 4
  %419 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %420 = load i32, i32* %419, align 4
  %421 = icmp eq i32 %418, %420
  br i1 %421, label %422, label %429

422:                                              ; preds = %416, %410
  %423 = load i32, i32* %381, align 8
  store i32 %423, i32* %411, align 4
  %424 = load i32, i32* %382, align 4
  %425 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %424, i32* %425, align 4
  %426 = add nsw i32 %423, %405
  store i32 %426, i32* %413, align 4
  %427 = add nsw i32 %424, %408
  %428 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %427, i32* %428, align 4
  br label %442

429:                                              ; preds = %416
  %430 = load i32, i32* %381, align 8
  %431 = icmp slt i32 %430, %412
  %432 = select i1 %431, i32 %430, i32 %412
  store i32 %432, i32* %411, align 4
  %433 = load i32, i32* %382, align 4
  %434 = icmp slt i32 %433, %418
  %435 = select i1 %434, i32 %433, i32 %418
  store i32 %435, i32* %417, align 4
  %436 = add nsw i32 %430, %405
  %437 = icmp slt i32 %414, %436
  %438 = select i1 %437, i32 %436, i32 %414
  store i32 %438, i32* %413, align 4
  %439 = add nsw i32 %433, %408
  %440 = icmp slt i32 %420, %439
  %441 = select i1 %440, i32 %439, i32 %420
  store i32 %441, i32* %419, align 4
  br label %442

442:                                              ; preds = %378, %403, %407, %422, %429
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %380) #10
  br label %484

443:                                              ; preds = %328, %355
  %444 = load i8, i8* %165, align 4, !range !2
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %484, label %446

446:                                              ; preds = %443
  %447 = load i32, i32* %72, align 8
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %484, label %449

449:                                              ; preds = %446
  %450 = load i32, i32* %73, align 4
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %484, label %452

452:                                              ; preds = %449
  %453 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %454 = load i32, i32* %453, align 4
  %455 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %456 = load i32, i32* %455, align 4
  %457 = icmp eq i32 %454, %456
  br i1 %457, label %464, label %458

458:                                              ; preds = %452
  %459 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %462 = load i32, i32* %461, align 4
  %463 = icmp eq i32 %460, %462
  br i1 %463, label %464, label %471

464:                                              ; preds = %458, %452
  %465 = load i32, i32* %69, align 8
  store i32 %465, i32* %453, align 4
  %466 = load i32, i32* %70, align 4
  %467 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %466, i32* %467, align 4
  %468 = add nsw i32 %465, %447
  store i32 %468, i32* %455, align 4
  %469 = add nsw i32 %466, %450
  %470 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %469, i32* %470, align 4
  br label %484

471:                                              ; preds = %458
  %472 = load i32, i32* %69, align 8
  %473 = icmp slt i32 %472, %454
  %474 = select i1 %473, i32 %472, i32 %454
  store i32 %474, i32* %453, align 4
  %475 = load i32, i32* %70, align 4
  %476 = icmp slt i32 %475, %460
  %477 = select i1 %476, i32 %475, i32 %460
  store i32 %477, i32* %459, align 4
  %478 = add nsw i32 %472, %447
  %479 = icmp slt i32 %456, %478
  %480 = select i1 %479, i32 %478, i32 %456
  store i32 %480, i32* %455, align 4
  %481 = add nsw i32 %475, %450
  %482 = icmp slt i32 %462, %481
  %483 = select i1 %482, i32 %481, i32 %462
  store i32 %483, i32* %461, align 4
  br label %484

484:                                              ; preds = %356, %471, %464, %449, %446, %443, %442
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %329) #10
  br label %485

485:                                              ; preds = %317, %312, %296, %255, %484
  %486 = phi i1 [ %206, %484 ], [ true, %255 ], [ true, %296 ], [ true, %312 ], [ true, %317 ]
  %487 = zext i1 %486 to i8
  %488 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %1, i64 0, i32 7
  %489 = load i8, i8* %488, align 4
  %490 = shl nuw nsw i8 %487, 5
  %491 = and i8 %489, -33
  %492 = or i8 %491, %490
  store i8 %492, i8* %488, align 4
  %493 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %496 = load i32, i32* %495, align 4
  %497 = icmp eq i32 %494, %496
  br i1 %497, label %505, label %498

498:                                              ; preds = %485
  %499 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %502 = load i32, i32* %501, align 4
  %503 = icmp ne i32 %500, %502
  %504 = zext i1 %503 to i8
  br label %505

505:                                              ; preds = %485, %498
  %506 = phi i8 [ 0, %485 ], [ %504, %498 ]
  %507 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 4
  %508 = load i8, i8* %507, align 8, !range !2
  %509 = or i8 %508, %506
  store i8 %509, i8* %507, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #10
  ret void
}

declare %"class.cc::RenderSurfaceImpl"* @_ZN2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13DamageTracker25AccumulateDamageFromLayerEPNS_9LayerImplE(%"class.cc::DamageTracker"*, %"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.cc::DamageTracker::LayerRectMapData", align 4
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %3, i64 0, i32 1
  store i32 %11, i32* %13, align 4
  %15 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 20, i1 false) #10
  %16 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %17, align 8
  %19 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %19, align 8
  %21 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %18 to i64
  %22 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %20 to i64
  %23 = sub i64 %22, %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %2
  %26 = sdiv exact i64 %23, 24
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %18, %25 ], [ %39, %27 ]
  %29 = phi i64 [ %26, %25 ], [ %38, %27 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %28, i64 %30
  %32 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, %11
  %35 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %31, i64 1
  %36 = xor i64 %30, -1
  %37 = add i64 %29, %36
  %38 = select i1 %34, i64 %37, i64 %30
  %39 = select i1 %34, %"struct.cc::DamageTracker::LayerRectMapData"* %35, %"struct.cc::DamageTracker::LayerRectMapData"* %28
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %27

41:                                               ; preds = %27, %2
  %42 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %18, %2 ], [ %39, %27 ]
  %43 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %42, %20
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %42, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %11
  br i1 %47, label %50, label %48

48:                                               ; preds = %44, %41
  %49 = call %"struct.cc::DamageTracker::LayerRectMapData"* @_ZNSt3__16vectorIN2cc13DamageTracker16LayerRectMapDataENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector"* %16, %"struct.cc::DamageTracker::LayerRectMapData"* %42, %"struct.cc::DamageTracker::LayerRectMapData"* nonnull dereferenceable(24) %3) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = phi i1 [ false, %48 ], [ true, %44 ]
  %52 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %49, %48 ], [ %42, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  %53 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %52, i64 0, i32 2, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %52, i64 0, i32 2, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %52, i64 0, i32 2, i32 1, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = bitcast %"class.cc::LayerImpl"* %1 to { i64, i64 } (%"class.cc::LayerImpl"*)***
  %62 = load { i64, i64 } (%"class.cc::LayerImpl"*)**, { i64, i64 } (%"class.cc::LayerImpl"*)*** %61, align 8
  %63 = getelementptr inbounds { i64, i64 } (%"class.cc::LayerImpl"*)*, { i64, i64 } (%"class.cc::LayerImpl"*)** %62, i64 25
  %64 = load { i64, i64 } (%"class.cc::LayerImpl"*)*, { i64, i64 } (%"class.cc::LayerImpl"*)** %63, align 8
  %65 = call { i64, i64 } %64(%"class.cc::LayerImpl"* %1) #10
  %66 = extractvalue { i64, i64 } %65, 0
  %67 = trunc i64 %66 to i32
  %68 = lshr i64 %66, 32
  %69 = trunc i64 %68 to i32
  %70 = extractvalue { i64, i64 } %65, 1
  %71 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %52, i64 0, i32 1
  store i32 %72, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %52, i64 0, i32 2
  %75 = bitcast %"class.gfx::Rect"* %74 to i64*
  store i64 %66, i64* %75, align 4
  %76 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %52, i64 0, i32 2, i32 1
  %77 = bitcast %"class.gfx::Size"* %76 to i64*
  store i64 %70, i64* %77, align 4
  br i1 %51, label %78, label %80

78:                                               ; preds = %50
  %79 = call zeroext i1 @_ZNK2cc9LayerImpl20LayerPropertyChangedEv(%"class.cc::LayerImpl"* %1) #10
  br i1 %79, label %80, label %151

80:                                               ; preds = %50, %78
  %81 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 0
  %82 = load i8, i8* %81, align 4, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %228, label %84

84:                                               ; preds = %80
  %85 = trunc i64 %70 to i32
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %119, label %87

87:                                               ; preds = %84
  %88 = lshr i64 %70, 32
  %89 = trunc i64 %88 to i32
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %119, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %93, %95
  br i1 %96, label %103, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %99, %101
  br i1 %102, label %103, label %108

103:                                              ; preds = %97, %91
  store i32 %67, i32* %92, align 4
  %104 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %69, i32* %104, align 4
  %105 = add nsw i32 %85, %67
  store i32 %105, i32* %94, align 4
  %106 = add nsw i32 %89, %69
  %107 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %106, i32* %107, align 4
  br label %119

108:                                              ; preds = %97
  %109 = icmp sgt i32 %93, %67
  %110 = select i1 %109, i32 %67, i32 %93
  store i32 %110, i32* %92, align 4
  %111 = icmp sgt i32 %99, %69
  %112 = select i1 %111, i32 %69, i32 %99
  store i32 %112, i32* %98, align 4
  %113 = add nsw i32 %85, %67
  %114 = icmp slt i32 %95, %113
  %115 = select i1 %114, i32 %113, i32 %95
  store i32 %115, i32* %94, align 4
  %116 = add nsw i32 %89, %69
  %117 = icmp slt i32 %101, %116
  %118 = select i1 %117, i32 %116, i32 %101
  store i32 %118, i32* %100, align 4
  br label %119

119:                                              ; preds = %84, %87, %103, %108
  %120 = icmp eq i32 %58, 0
  %121 = icmp eq i32 %60, 0
  %122 = or i1 %120, %121
  br i1 %122, label %228, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %125, %127
  br i1 %128, label %135, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %131, %133
  br i1 %134, label %135, label %140

135:                                              ; preds = %129, %123
  store i32 %54, i32* %124, align 4
  %136 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %56, i32* %136, align 4
  %137 = add nsw i32 %58, %54
  store i32 %137, i32* %126, align 4
  %138 = add nsw i32 %60, %56
  %139 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %138, i32* %139, align 4
  br label %228

140:                                              ; preds = %129
  %141 = icmp slt i32 %54, %125
  %142 = select i1 %141, i32 %54, i32 %125
  store i32 %142, i32* %124, align 4
  %143 = icmp slt i32 %56, %131
  %144 = select i1 %143, i32 %56, i32 %131
  store i32 %144, i32* %130, align 4
  %145 = add nsw i32 %58, %54
  %146 = icmp slt i32 %127, %145
  %147 = select i1 %146, i32 %145, i32 %127
  store i32 %147, i32* %126, align 4
  %148 = add nsw i32 %60, %56
  %149 = icmp slt i32 %133, %148
  %150 = select i1 %149, i32 %148, i32 %133
  store i32 %150, i32* %132, align 4
  br label %228

151:                                              ; preds = %78
  %152 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #10
  %153 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %154 = bitcast i64* %153 to i32*
  %155 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  %156 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 24
  %157 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #10
  %158 = load { i64, i64 } (%"class.cc::LayerImpl"*)**, { i64, i64 } (%"class.cc::LayerImpl"*)*** %61, align 8
  %159 = getelementptr inbounds { i64, i64 } (%"class.cc::LayerImpl"*)*, { i64, i64 } (%"class.cc::LayerImpl"*)** %158, i64 8
  %160 = load { i64, i64 } (%"class.cc::LayerImpl"*)*, { i64, i64 } (%"class.cc::LayerImpl"*)** %159, align 8
  %161 = call { i64, i64 } %160(%"class.cc::LayerImpl"* %1) #10
  %162 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %163 = extractvalue { i64, i64 } %161, 0
  store i64 %163, i64* %162, align 8
  %164 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %165 = extractvalue { i64, i64 } %161, 1
  store i64 %165, i64* %164, align 8
  %166 = call { i64, i64 } @_ZN3gfx10UnionRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16) %156, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #10
  %167 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %168 = extractvalue { i64, i64 } %166, 0
  store i64 %168, i64* %167, align 8
  %169 = extractvalue { i64, i64 } %166, 1
  store i64 %169, i64* %153, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #10
  %170 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #10
  %171 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %1) #10
  %172 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  store i32 0, i32* %172, align 4
  %173 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 1
  store i32 0, i32* %173, align 4
  %174 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %175 = bitcast %"class.gfx::Size"* %174 to i64*
  store i64 %171, i64* %175, align 4
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #10
  %176 = load i32, i32* %154, align 8
  %177 = icmp eq i32 %176, 0
  %178 = load i32, i32* %155, align 4
  %179 = icmp eq i32 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %227, label %181

181:                                              ; preds = %151
  %182 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %182) #10
  call void @_ZNK2cc9LayerImpl13DrawTransformEv(%"class.gfx::Transform"* nonnull sret %9, %"class.cc::LayerImpl"* %1) #10
  %183 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %9, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #10
  %184 = extractvalue { i64, i64 } %183, 0
  %185 = trunc i64 %184 to i32
  %186 = lshr i64 %184, 32
  %187 = trunc i64 %186 to i32
  %188 = extractvalue { i64, i64 } %183, 1
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %182) #10
  %189 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 0
  %190 = load i8, i8* %189, align 4, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %227, label %192

192:                                              ; preds = %181
  %193 = trunc i64 %188 to i32
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %227, label %195

195:                                              ; preds = %192
  %196 = lshr i64 %188, 32
  %197 = trunc i64 %196 to i32
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %227, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %201, %203
  br i1 %204, label %211, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %207, %209
  br i1 %210, label %211, label %216

211:                                              ; preds = %205, %199
  store i32 %185, i32* %200, align 4
  %212 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  store i32 %187, i32* %212, align 4
  %213 = add nsw i32 %193, %185
  store i32 %213, i32* %202, align 4
  %214 = add nsw i32 %197, %187
  %215 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  store i32 %214, i32* %215, align 4
  br label %227

216:                                              ; preds = %205
  %217 = icmp sgt i32 %201, %185
  %218 = select i1 %217, i32 %185, i32 %201
  store i32 %218, i32* %200, align 4
  %219 = icmp sgt i32 %207, %187
  %220 = select i1 %219, i32 %187, i32 %207
  store i32 %220, i32* %206, align 4
  %221 = add nsw i32 %193, %185
  %222 = icmp slt i32 %203, %221
  %223 = select i1 %222, i32 %221, i32 %203
  store i32 %223, i32* %202, align 4
  %224 = add nsw i32 %197, %187
  %225 = icmp slt i32 %209, %224
  %226 = select i1 %225, i32 %224, i32 %209
  store i32 %226, i32* %208, align 4
  br label %227

227:                                              ; preds = %151, %216, %211, %195, %192, %181
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #10
  br label %228

228:                                              ; preds = %140, %135, %119, %80, %227
  %229 = call zeroext i1 @_ZNK2cc9LayerImpl37LayerPropertyChangedFromPropertyTreesEv(%"class.cc::LayerImpl"* %1) #10
  br i1 %229, label %230, label %252

230:                                              ; preds = %228
  %231 = call %"class.cc::RenderSurfaceImpl"* @_ZN2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* %1) #10
  %232 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %231) #10
  %233 = icmp sgt i32 %232, -1
  br i1 %233, label %234, label %241

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 3
  %236 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %235, align 8
  %237 = sext i32 %232 to i64
  %238 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %236, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %239 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %238, align 8
  %240 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %239, i64 %237
  br label %241

241:                                              ; preds = %230, %234
  %242 = phi %"struct.cc::EffectNode"* [ %240, %234 ], [ null, %230 ]
  %243 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 18
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %244, %232
  br i1 %245, label %246, label %252

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %242, i64 0, i32 18
  %248 = load i32, i32* %247, align 8
  %249 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 17
  %250 = load i32, i32* %249, align 8
  %251 = icmp ne i32 %250, %248
  br label %252

252:                                              ; preds = %246, %241, %228
  %253 = phi i1 [ false, %228 ], [ true, %241 ], [ %251, %246 ]
  br i1 %51, label %254, label %275

254:                                              ; preds = %252
  %255 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 24, i32 1, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 24, i32 1, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %275

262:                                              ; preds = %254, %258
  %263 = call zeroext i1 @_ZNK2cc9LayerImpl40LayerPropertyChangedNotFromPropertyTreesEv(%"class.cc::LayerImpl"* %1) #10
  br i1 %263, label %275, label %264

264:                                              ; preds = %262
  %265 = load { i64, i64 } (%"class.cc::LayerImpl"*)**, { i64, i64 } (%"class.cc::LayerImpl"*)*** %61, align 8
  %266 = getelementptr inbounds { i64, i64 } (%"class.cc::LayerImpl"*)*, { i64, i64 } (%"class.cc::LayerImpl"*)** %265, i64 8
  %267 = load { i64, i64 } (%"class.cc::LayerImpl"*)*, { i64, i64 } (%"class.cc::LayerImpl"*)** %266, align 8
  %268 = call { i64, i64 } %267(%"class.cc::LayerImpl"* %1) #10
  %269 = extractvalue { i64, i64 } %268, 1
  %270 = trunc i64 %269 to i32
  %271 = icmp ne i32 %270, 0
  %272 = icmp ugt i64 %269, 4294967295
  %273 = and i1 %272, %271
  %274 = or i1 %253, %273
  br i1 %274, label %275, label %293

275:                                              ; preds = %252, %258, %262, %264
  %276 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 3
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %277, %279
  br i1 %280, label %288, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 2
  %283 = load i32, i32* %282, align 4
  %284 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 5, i32 4
  %285 = load i32, i32* %284, align 4
  %286 = icmp ne i32 %283, %285
  %287 = zext i1 %286 to i8
  br label %288

288:                                              ; preds = %275, %281
  %289 = phi i8 [ 0, %275 ], [ %287, %281 ]
  %290 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 4
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = or i8 %291, %289
  store i8 %292, i8* %290, align 8
  br label %293

293:                                              ; preds = %264, %288
  ret void
}

declare i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13DamageTracker28TrackDamageFromLeftoverRectsEv(%"class.cc::DamageTracker::DamageAccumulator"* noalias nocapture sret, %"class.cc::DamageTracker"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 0
  %6 = bitcast %"class.cc::DamageTracker::DamageAccumulator"* %0 to i32*
  store i32 -1431655766, i32* %6, align 4
  store i8 1, i8* %5, align 4
  %7 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 1
  %8 = bitcast i32* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 16, i1 false) #10
  %9 = bitcast %"class.cc::DamageTracker"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %1, i64 0, i32 1
  %12 = bitcast %"class.std::__1::vector.3"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %14, align 8
  %16 = inttoptr i64 %10 to %"struct.cc::DamageTracker::LayerRectMapData"*
  %17 = icmp ugt %"struct.cc::DamageTracker::LayerRectMapData"* %15, %16
  %18 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %15 to i64
  br i1 %17, label %19, label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %1, i64 0, i32 2
  %21 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 4
  br label %40

24:                                               ; preds = %119, %2
  %25 = phi i64 [ %18, %2 ], [ %120, %119 ]
  %26 = phi i64 [ %18, %2 ], [ %122, %119 ]
  %27 = phi i64 [ %18, %2 ], [ %123, %119 ]
  %28 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %15, %2 ], [ %124, %119 ]
  %29 = phi i64 [ %10, %2 ], [ %125, %119 ]
  %30 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %1, i64 0, i32 1, i32 0, i32 1
  %31 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %30, align 8
  %32 = inttoptr i64 %13 to %"struct.cc::DamageTracker::SurfaceRectMapData"*
  %33 = icmp ugt %"struct.cc::DamageTracker::SurfaceRectMapData"* %31, %32
  %34 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %31 to i64
  br i1 %33, label %35, label %221

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %1, i64 0, i32 2
  %37 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 3
  %38 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 4
  br label %129

40:                                               ; preds = %19, %119
  %41 = phi i64 [ %18, %19 ], [ %120, %119 ]
  %42 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %15, %19 ], [ %121, %119 ]
  %43 = phi i64 [ %18, %19 ], [ %122, %119 ]
  %44 = phi i64 [ %18, %19 ], [ %123, %119 ]
  %45 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %15, %19 ], [ %124, %119 ]
  %46 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %16, %19 ], [ %126, %119 ]
  %47 = phi i64 [ %10, %19 ], [ %127, %119 ]
  %48 = phi i64 [ %10, %19 ], [ %125, %119 ]
  %49 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = load i32, i32* %20, align 8
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %53, label %69

53:                                               ; preds = %40
  %54 = inttoptr i64 %48 to %"struct.cc::DamageTracker::LayerRectMapData"*
  %55 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %46, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %42 to i64
  br label %63

58:                                               ; preds = %53
  %59 = inttoptr i64 %48 to i8*
  %60 = inttoptr i64 %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 24, i1 false)
  %61 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %14, align 8
  %62 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %61 to i64
  br label %63

63:                                               ; preds = %56, %58
  %64 = phi i64 [ %57, %56 ], [ %62, %58 ]
  %65 = phi i64 [ %41, %56 ], [ %62, %58 ]
  %66 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %42, %56 ], [ %61, %58 ]
  %67 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %54, i64 1
  %68 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %67 to i64
  br label %119

69:                                               ; preds = %40
  %70 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %46, i64 0, i32 2
  %71 = load i8, i8* %5, align 4, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %119, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %46, i64 0, i32 2, i32 1, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %119, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %46, i64 0, i32 2, i32 1, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %119, label %81

81:                                               ; preds = %77
  %82 = load i32, i32* %7, align 4
  %83 = load i32, i32* %21, align 4
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %89, label %85

85:                                               ; preds = %81
  %86 = load i32, i32* %22, align 4
  %87 = load i32, i32* %23, align 4
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %89, label %100

89:                                               ; preds = %85, %81
  %90 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %70, i64 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %7, align 4
  %92 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %46, i64 0, i32 2, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %22, align 4
  %94 = load i32, i32* %90, align 4
  %95 = load i32, i32* %74, align 4
  %96 = add nsw i32 %95, %94
  store i32 %96, i32* %21, align 4
  %97 = load i32, i32* %92, align 4
  %98 = load i32, i32* %78, align 4
  %99 = add nsw i32 %98, %97
  store i32 %99, i32* %23, align 4
  br label %119

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %70, i64 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp slt i32 %102, %82
  %104 = select i1 %103, i32 %102, i32 %82
  store i32 %104, i32* %7, align 4
  %105 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %46, i64 0, i32 2, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 %106, %86
  %108 = select i1 %107, i32 %106, i32 %86
  store i32 %108, i32* %22, align 4
  %109 = load i32, i32* %101, align 4
  %110 = load i32, i32* %74, align 4
  %111 = add nsw i32 %110, %109
  %112 = icmp slt i32 %83, %111
  %113 = select i1 %112, i32 %111, i32 %83
  store i32 %113, i32* %21, align 4
  %114 = load i32, i32* %105, align 4
  %115 = load i32, i32* %78, align 4
  %116 = add nsw i32 %115, %114
  %117 = icmp slt i32 %87, %116
  %118 = select i1 %117, i32 %116, i32 %87
  store i32 %118, i32* %23, align 4
  br label %119

119:                                              ; preds = %100, %89, %77, %73, %69, %63
  %120 = phi i64 [ %65, %63 ], [ %41, %69 ], [ %41, %73 ], [ %41, %77 ], [ %41, %89 ], [ %41, %100 ]
  %121 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %66, %63 ], [ %42, %69 ], [ %42, %73 ], [ %42, %77 ], [ %42, %89 ], [ %42, %100 ]
  %122 = phi i64 [ %64, %63 ], [ %43, %69 ], [ %43, %73 ], [ %43, %77 ], [ %43, %89 ], [ %43, %100 ]
  %123 = phi i64 [ %64, %63 ], [ %44, %69 ], [ %44, %73 ], [ %44, %77 ], [ %44, %89 ], [ %44, %100 ]
  %124 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %66, %63 ], [ %45, %69 ], [ %45, %73 ], [ %45, %77 ], [ %45, %89 ], [ %45, %100 ]
  %125 = phi i64 [ %68, %63 ], [ %48, %69 ], [ %48, %73 ], [ %48, %77 ], [ %48, %89 ], [ %48, %100 ]
  %126 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %46, i64 1
  %127 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %126 to i64
  %128 = icmp ugt %"struct.cc::DamageTracker::LayerRectMapData"* %124, %126
  br i1 %128, label %40, label %24

129:                                              ; preds = %35, %208
  %130 = phi i64 [ %34, %35 ], [ %209, %208 ]
  %131 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %31, %35 ], [ %210, %208 ]
  %132 = phi i64 [ %34, %35 ], [ %211, %208 ]
  %133 = phi i64 [ %34, %35 ], [ %212, %208 ]
  %134 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %31, %35 ], [ %213, %208 ]
  %135 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %32, %35 ], [ %215, %208 ]
  %136 = phi i64 [ %13, %35 ], [ %216, %208 ]
  %137 = phi i64 [ %13, %35 ], [ %214, %208 ]
  %138 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, i64 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = load i32, i32* %36, align 8
  %141 = icmp eq i32 %139, %140
  br i1 %141, label %142, label %158

142:                                              ; preds = %129
  %143 = inttoptr i64 %137 to %"struct.cc::DamageTracker::SurfaceRectMapData"*
  %144 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %142
  %146 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %131 to i64
  br label %152

147:                                              ; preds = %142
  %148 = inttoptr i64 %137 to i8*
  %149 = inttoptr i64 %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 28, i1 false)
  %150 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %30, align 8
  %151 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %150 to i64
  br label %152

152:                                              ; preds = %145, %147
  %153 = phi i64 [ %146, %145 ], [ %151, %147 ]
  %154 = phi i64 [ %130, %145 ], [ %151, %147 ]
  %155 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %131, %145 ], [ %150, %147 ]
  %156 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %143, i64 1
  %157 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %156 to i64
  br label %208

158:                                              ; preds = %129
  %159 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, i64 0, i32 2
  %160 = load i8, i8* %5, align 4, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %208, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, i64 0, i32 2, i32 1, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %208, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, i64 0, i32 2, i32 1, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %208, label %170

170:                                              ; preds = %166
  %171 = load i32, i32* %7, align 4
  %172 = load i32, i32* %37, align 4
  %173 = icmp eq i32 %171, %172
  br i1 %173, label %178, label %174

174:                                              ; preds = %170
  %175 = load i32, i32* %38, align 4
  %176 = load i32, i32* %39, align 4
  %177 = icmp eq i32 %175, %176
  br i1 %177, label %178, label %189

178:                                              ; preds = %174, %170
  %179 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %159, i64 0, i32 0, i32 0
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %7, align 4
  %181 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, i64 0, i32 2, i32 0, i32 1
  %182 = load i32, i32* %181, align 4
  store i32 %182, i32* %38, align 4
  %183 = load i32, i32* %179, align 4
  %184 = load i32, i32* %163, align 4
  %185 = add nsw i32 %184, %183
  store i32 %185, i32* %37, align 4
  %186 = load i32, i32* %181, align 4
  %187 = load i32, i32* %167, align 4
  %188 = add nsw i32 %187, %186
  store i32 %188, i32* %39, align 4
  br label %208

189:                                              ; preds = %174
  %190 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %159, i64 0, i32 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = icmp slt i32 %191, %171
  %193 = select i1 %192, i32 %191, i32 %171
  store i32 %193, i32* %7, align 4
  %194 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, i64 0, i32 2, i32 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = icmp slt i32 %195, %175
  %197 = select i1 %196, i32 %195, i32 %175
  store i32 %197, i32* %38, align 4
  %198 = load i32, i32* %190, align 4
  %199 = load i32, i32* %163, align 4
  %200 = add nsw i32 %199, %198
  %201 = icmp slt i32 %172, %200
  %202 = select i1 %201, i32 %200, i32 %172
  store i32 %202, i32* %37, align 4
  %203 = load i32, i32* %194, align 4
  %204 = load i32, i32* %167, align 4
  %205 = add nsw i32 %204, %203
  %206 = icmp slt i32 %176, %205
  %207 = select i1 %206, i32 %205, i32 %176
  store i32 %207, i32* %39, align 4
  br label %208

208:                                              ; preds = %189, %178, %166, %162, %158, %152
  %209 = phi i64 [ %154, %152 ], [ %130, %158 ], [ %130, %162 ], [ %130, %166 ], [ %130, %178 ], [ %130, %189 ]
  %210 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %155, %152 ], [ %131, %158 ], [ %131, %162 ], [ %131, %166 ], [ %131, %178 ], [ %131, %189 ]
  %211 = phi i64 [ %153, %152 ], [ %132, %158 ], [ %132, %162 ], [ %132, %166 ], [ %132, %178 ], [ %132, %189 ]
  %212 = phi i64 [ %153, %152 ], [ %133, %158 ], [ %133, %162 ], [ %133, %166 ], [ %133, %178 ], [ %133, %189 ]
  %213 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %155, %152 ], [ %134, %158 ], [ %134, %162 ], [ %134, %166 ], [ %134, %178 ], [ %134, %189 ]
  %214 = phi i64 [ %157, %152 ], [ %137, %158 ], [ %137, %162 ], [ %137, %166 ], [ %137, %178 ], [ %137, %189 ]
  %215 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, i64 1
  %216 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %215 to i64
  %217 = icmp ugt %"struct.cc::DamageTracker::SurfaceRectMapData"* %213, %215
  br i1 %217, label %129, label %218

218:                                              ; preds = %208
  %219 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %14, align 8
  %220 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %219 to i64
  br label %221

221:                                              ; preds = %218, %24
  %222 = phi i64 [ %34, %24 ], [ %209, %218 ]
  %223 = phi i64 [ %25, %24 ], [ %220, %218 ]
  %224 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %31, %24 ], [ %210, %218 ]
  %225 = phi i64 [ %34, %24 ], [ %211, %218 ]
  %226 = phi i64 [ %26, %24 ], [ %220, %218 ]
  %227 = phi i64 [ %34, %24 ], [ %212, %218 ]
  %228 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %31, %24 ], [ %213, %218 ]
  %229 = phi i64 [ %27, %24 ], [ %220, %218 ]
  %230 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %28, %24 ], [ %219, %218 ]
  %231 = phi i64 [ %13, %24 ], [ %214, %218 ]
  %232 = inttoptr i64 %29 to %"struct.cc::DamageTracker::LayerRectMapData"*
  %233 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %230, %232
  br i1 %233, label %252, label %234

234:                                              ; preds = %221
  %235 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %230 to i64
  %236 = sub i64 %229, %235
  %237 = sdiv exact i64 %236, 24
  %238 = icmp eq i64 %236, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %234
  %240 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %224 to i64
  br label %246

241:                                              ; preds = %234
  %242 = inttoptr i64 %29 to i8*
  %243 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %230 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %242, i8* align 4 %243, i64 %236, i1 false) #10
  %244 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %30, align 8
  %245 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %244 to i64
  br label %246

246:                                              ; preds = %239, %241
  %247 = phi i64 [ %240, %239 ], [ %245, %241 ]
  %248 = phi i64 [ %222, %239 ], [ %245, %241 ]
  %249 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %224, %239 ], [ %244, %241 ]
  %250 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %232, i64 %237
  store %"struct.cc::DamageTracker::LayerRectMapData"* %250, %"struct.cc::DamageTracker::LayerRectMapData"** %14, align 8
  %251 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %250 to i64
  br label %252

252:                                              ; preds = %221, %246
  %253 = phi i64 [ %222, %221 ], [ %248, %246 ]
  %254 = phi i64 [ %223, %221 ], [ %251, %246 ]
  %255 = phi i64 [ %225, %221 ], [ %247, %246 ]
  %256 = phi i64 [ %226, %221 ], [ %251, %246 ]
  %257 = phi i64 [ %227, %221 ], [ %247, %246 ]
  %258 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %228, %221 ], [ %249, %246 ]
  %259 = inttoptr i64 %231 to %"struct.cc::DamageTracker::SurfaceRectMapData"*
  %260 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %258, %259
  br i1 %260, label %261, label %263

261:                                              ; preds = %252
  %262 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %14 to i64*
  br label %280

263:                                              ; preds = %252
  %264 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %258 to i64
  %265 = sub i64 %257, %264
  %266 = ashr exact i64 %265, 5
  %267 = icmp eq i64 %265, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %263
  %269 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %14 to i64*
  br label %275

270:                                              ; preds = %263
  %271 = inttoptr i64 %231 to i8*
  %272 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %258 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %272, i64 %265, i1 false) #10
  %273 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %14 to i64*
  %274 = load i64, i64* %273, align 8
  br label %275

275:                                              ; preds = %268, %270
  %276 = phi i64* [ %269, %268 ], [ %273, %270 ]
  %277 = phi i64 [ %254, %268 ], [ %274, %270 ]
  %278 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %259, i64 %266
  store %"struct.cc::DamageTracker::SurfaceRectMapData"* %278, %"struct.cc::DamageTracker::SurfaceRectMapData"** %30, align 8
  %279 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %278 to i64
  br label %280

280:                                              ; preds = %261, %275
  %281 = phi i64* [ %262, %261 ], [ %276, %275 ]
  %282 = phi i64 [ %253, %261 ], [ %279, %275 ]
  %283 = phi i64 [ %255, %261 ], [ %279, %275 ]
  %284 = phi i64 [ %256, %261 ], [ %277, %275 ]
  %285 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %286 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = load i64, i64* %9, align 8
  %289 = sub i64 %287, %288
  %290 = sdiv exact i64 %289, 24
  %291 = sub i64 %284, %288
  %292 = sdiv exact i64 %291, 24
  %293 = shl nsw i64 %292, 2
  %294 = icmp ugt i64 %290, %293
  br i1 %294, label %297, label %295

295:                                              ; preds = %280
  %296 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %30 to i64*
  br label %342

297:                                              ; preds = %280
  %298 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %298, i8 0, i64 24, i1 false) #10
  %299 = icmp eq i64 %291, 0
  br i1 %299, label %323, label %300

300:                                              ; preds = %297
  %301 = icmp ugt i64 %292, 768614336404564650
  br i1 %301, label %302, label %304

302:                                              ; preds = %300
  %303 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %303) #11
  unreachable

304:                                              ; preds = %300
  %305 = tail call i8* @_Znwm(i64 %291) #9
  %306 = bitcast i8* %305 to %"struct.cc::DamageTracker::LayerRectMapData"*
  %307 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %308 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %307 to i8**
  store i8* %305, i8** %308, align 8
  %309 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %305, i8** %309, align 8
  %310 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %306, i64 %292
  %311 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.cc::DamageTracker::LayerRectMapData"* %310, %"struct.cc::DamageTracker::LayerRectMapData"** %311, align 8
  %312 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %307 to i64*
  %313 = ptrtoint i8* %305 to i64
  %314 = icmp sgt i64 %291, 0
  %315 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %310 to i64
  br i1 %314, label %316, label %321

316:                                              ; preds = %304
  %317 = udiv exact i64 %291, 24
  %318 = inttoptr i64 %288 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %305, i8* align 4 %318, i64 %291, i1 false) #10
  %319 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %306, i64 %317
  %320 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %319 to i64
  br label %321

321:                                              ; preds = %316, %304
  %322 = phi i64 [ %320, %316 ], [ %313, %304 ]
  store i64 %322, i64* %312, align 8
  br label %323

323:                                              ; preds = %297, %321
  %324 = phi i64 [ %315, %321 ], [ 0, %297 ]
  %325 = phi i64 [ %322, %321 ], [ 0, %297 ]
  %326 = phi i64 [ %313, %321 ], [ 0, %297 ]
  %327 = bitcast %"class.std::__1::vector"* %3 to i64*
  store i64 %288, i64* %327, align 8
  store i64 %326, i64* %9, align 8
  %328 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %329 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %328 to i64*
  store i64 %284, i64* %329, align 8
  store i64 %325, i64* %281, align 8
  %330 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %331 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %330 to i64*
  store i64 %287, i64* %331, align 8
  store i64 %324, i64* %286, align 8
  %332 = icmp eq i64 %288, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %323
  %334 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %30 to i64*
  br label %339

335:                                              ; preds = %323
  store i64 %288, i64* %329, align 8
  %336 = inttoptr i64 %288 to i8*
  tail call void @_ZdlPv(i8* %336) #9
  %337 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %30 to i64*
  %338 = load i64, i64* %337, align 8
  br label %339

339:                                              ; preds = %333, %335
  %340 = phi i64* [ %334, %333 ], [ %337, %335 ]
  %341 = phi i64 [ %282, %333 ], [ %338, %335 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #10
  br label %342

342:                                              ; preds = %295, %339
  %343 = phi i64* [ %296, %295 ], [ %340, %339 ]
  %344 = phi i64 [ %283, %295 ], [ %341, %339 ]
  %345 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %346 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %345 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = load i64, i64* %12, align 8
  %349 = sub i64 %347, %348
  %350 = ashr exact i64 %349, 5
  %351 = sub i64 %344, %348
  %352 = ashr exact i64 %351, 5
  %353 = ashr exact i64 %351, 3
  %354 = icmp ugt i64 %350, %353
  br i1 %354, label %355, label %394

355:                                              ; preds = %342
  %356 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %356) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %356, i8 0, i64 24, i1 false) #10
  %357 = icmp eq i64 %351, 0
  br i1 %357, label %381, label %358

358:                                              ; preds = %355
  %359 = icmp ugt i64 %352, 576460752303423487
  br i1 %359, label %360, label %362

360:                                              ; preds = %358
  %361 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %361) #11
  unreachable

362:                                              ; preds = %358
  %363 = tail call i8* @_Znwm(i64 %351) #9
  %364 = bitcast i8* %363 to %"struct.cc::DamageTracker::SurfaceRectMapData"*
  %365 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %366 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %365 to i8**
  store i8* %363, i8** %366, align 8
  %367 = bitcast %"class.std::__1::vector.3"* %4 to i8**
  store i8* %363, i8** %367, align 8
  %368 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %364, i64 %352
  %369 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.cc::DamageTracker::SurfaceRectMapData"* %368, %"struct.cc::DamageTracker::SurfaceRectMapData"** %369, align 8
  %370 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %365 to i64*
  %371 = ptrtoint i8* %363 to i64
  %372 = icmp sgt i64 %351, 0
  %373 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %368 to i64
  br i1 %372, label %374, label %379

374:                                              ; preds = %362
  %375 = lshr exact i64 %351, 5
  %376 = inttoptr i64 %348 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %363, i8* align 8 %376, i64 %351, i1 false) #10
  %377 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %364, i64 %375
  %378 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %377 to i64
  br label %379

379:                                              ; preds = %374, %362
  %380 = phi i64 [ %378, %374 ], [ %371, %362 ]
  store i64 %380, i64* %370, align 8
  br label %381

381:                                              ; preds = %355, %379
  %382 = phi i64 [ %373, %379 ], [ 0, %355 ]
  %383 = phi i64 [ %380, %379 ], [ 0, %355 ]
  %384 = phi i64 [ %371, %379 ], [ 0, %355 ]
  %385 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  store i64 %348, i64* %385, align 8
  store i64 %384, i64* %12, align 8
  %386 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %387 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %386 to i64*
  store i64 %344, i64* %387, align 8
  store i64 %383, i64* %343, align 8
  %388 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %389 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %388 to i64*
  store i64 %347, i64* %389, align 8
  store i64 %382, i64* %346, align 8
  %390 = icmp eq i64 %348, 0
  br i1 %390, label %393, label %391

391:                                              ; preds = %381
  store i64 %348, i64* %387, align 8
  %392 = inttoptr i64 %348 to i8*
  tail call void @_ZdlPv(i8* %392) #9
  br label %393

393:                                              ; preds = %381, %391
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %356) #10
  br label %394

394:                                              ; preds = %393, %342
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc13DamageTracker17DamageAccumulator9GetAsRectEPN3gfx4RectE(%"class.cc::DamageTracker::DamageAccumulator"* nocapture, %"class.gfx::Rect"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %10) #10
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.cc::DamageTracker::DamageAccumulator", %"class.cc::DamageTracker::DamageAccumulator"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %15, i32 %17) #10
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = or i1 %12, %19
  br i1 %21, label %22, label %23

22:                                               ; preds = %6
  store i8 0, i8* %3, align 4
  br label %55

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  store i32 %10, i32* %24, align 4
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %10, 0
  %28 = icmp sgt i32 %26, 0
  %29 = and i1 %27, %28
  %30 = sub nuw nsw i32 2147483647, %10
  %31 = icmp ult i32 %30, %26
  %32 = and i1 %31, %29
  %33 = select i1 %32, i32 %30, i32 %26
  %34 = icmp sgt i32 %33, 0
  %35 = select i1 %34, i32 %33, i32 0
  store i32 %35, i32* %25, align 4
  %36 = load i32, i32* %16, align 4
  %37 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %39 = icmp sgt i32 %36, 0
  %40 = sub nuw nsw i32 2147483647, %36
  %41 = icmp sgt i32 %13, 0
  %42 = and i1 %27, %41
  %43 = icmp ult i32 %30, %13
  %44 = and i1 %43, %42
  %45 = select i1 %44, i32 %30, i32 %13
  %46 = icmp sgt i32 %45, 0
  %47 = select i1 %46, i32 %45, i32 0
  store i32 %47, i32* %25, align 4
  %48 = icmp sgt i32 %20, 0
  %49 = and i1 %48, %39
  %50 = icmp ult i32 %40, %20
  %51 = and i1 %50, %49
  %52 = select i1 %51, i32 %40, i32 %20
  %53 = icmp sgt i32 %52, 0
  %54 = select i1 %53, i32 %52, i32 0
  store i32 %54, i32* %38, align 4
  br label %55

55:                                               ; preds = %22, %23, %2
  %56 = phi i1 [ false, %2 ], [ true, %23 ], [ false, %22 ]
  ret i1 %56
}

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl15BackdropFiltersEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc17RenderSurfaceImpl40SurfacePropertyChangedOnlyFromDescendantEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl7FiltersEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #3

declare { i64, i64 } @_ZNK2cc16FilterOperations7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"*, %"class.gfx::Rect"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZNK2cc17RenderSurfaceImpl12SurfaceScaleEv(%"class.gfx::Transform"* sret, %"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #3

declare void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* sret, %class.SkMatrix44*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc13DamageTracker20GetDamageRectIfValidEPN3gfx4RectE(%"class.cc::DamageTracker"* nocapture, %"class.gfx::Rect"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %10) #10
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 3, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %15, i32 %17) #10
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = or i1 %12, %19
  br i1 %21, label %22, label %23

22:                                               ; preds = %6
  store i8 0, i8* %3, align 4
  br label %55

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  store i32 %10, i32* %24, align 4
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %10, 0
  %28 = icmp sgt i32 %26, 0
  %29 = and i1 %27, %28
  %30 = sub nuw nsw i32 2147483647, %10
  %31 = icmp ult i32 %30, %26
  %32 = and i1 %31, %29
  %33 = select i1 %32, i32 %30, i32 %26
  %34 = icmp sgt i32 %33, 0
  %35 = select i1 %34, i32 %33, i32 0
  store i32 %35, i32* %25, align 4
  %36 = load i32, i32* %16, align 4
  %37 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %39 = icmp sgt i32 %36, 0
  %40 = sub nuw nsw i32 2147483647, %36
  %41 = icmp sgt i32 %13, 0
  %42 = and i1 %27, %41
  %43 = icmp ult i32 %30, %13
  %44 = and i1 %43, %42
  %45 = select i1 %44, i32 %30, i32 %13
  %46 = icmp sgt i32 %45, 0
  %47 = select i1 %46, i32 %45, i32 0
  store i32 %47, i32* %25, align 4
  %48 = icmp sgt i32 %20, 0
  %49 = and i1 %48, %39
  %50 = icmp ult i32 %40, %20
  %51 = and i1 %50, %49
  %52 = select i1 %51, i32 %40, i32 %20
  %53 = icmp sgt i32 %52, 0
  %54 = select i1 %53, i32 %52, i32 0
  store i32 %54, i32* %38, align 4
  br label %55

55:                                               ; preds = %2, %22, %23
  %56 = phi i1 [ false, %2 ], [ true, %23 ], [ false, %22 ]
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"struct.cc::DamageTracker::LayerRectMapData"* @_ZN2cc13DamageTracker16RectDataForLayerEiPb(%"class.cc::DamageTracker"*, i32, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.cc::DamageTracker::LayerRectMapData", align 4
  %5 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %4, i64 0, i32 1
  store i32 %1, i32* %6, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 20, i1 false) #10
  %9 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %12, align 8
  %14 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %11 to i64
  %15 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %13 to i64
  %16 = sub i64 %15, %14
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %3
  %19 = sdiv exact i64 %16, 24
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %11, %18 ], [ %32, %20 ]
  %22 = phi i64 [ %19, %18 ], [ %31, %20 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %21, i64 %23
  %25 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, %1
  %28 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %24, i64 1
  %29 = xor i64 %23, -1
  %30 = add i64 %22, %29
  %31 = select i1 %27, i64 %30, i64 %23
  %32 = select i1 %27, %"struct.cc::DamageTracker::LayerRectMapData"* %28, %"struct.cc::DamageTracker::LayerRectMapData"* %21
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %20

34:                                               ; preds = %20, %3
  %35 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %11, %3 ], [ %32, %20 ]
  %36 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %35, %13
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %35, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, %1
  br i1 %40, label %43, label %41

41:                                               ; preds = %34, %37
  store i8 1, i8* %2, align 1
  %42 = call %"struct.cc::DamageTracker::LayerRectMapData"* @_ZNSt3__16vectorIN2cc13DamageTracker16LayerRectMapDataENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector"* %9, %"struct.cc::DamageTracker::LayerRectMapData"* %35, %"struct.cc::DamageTracker::LayerRectMapData"* nonnull dereferenceable(24) %4)
  br label %43

43:                                               ; preds = %37, %41
  %44 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %42, %41 ], [ %35, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret %"struct.cc::DamageTracker::LayerRectMapData"* %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.cc::DamageTracker::LayerRectMapData"* @_ZNSt3__16vectorIN2cc13DamageTracker16LayerRectMapDataENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector"*, %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %8, align 8
  %10 = icmp ult %"struct.cc::DamageTracker::LayerRectMapData"* %7, %9
  %11 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %7 to i64
  %12 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %9 to i64
  br i1 %10, label %13, label %58

13:                                               ; preds = %3
  %14 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %7, %1
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %1 to i8*
  %17 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 24, i1 false) #10
  %18 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %1, i64 1
  %19 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %18 to i64
  %20 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %6 to i64*
  store i64 %19, i64* %20, align 8
  br label %159

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %1, i64 1
  %23 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %22 to i64
  %24 = sub i64 %11, %23
  %25 = sdiv exact i64 %24, 24
  %26 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %1, i64 %25
  %27 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %6 to i64*
  %28 = icmp ult %"struct.cc::DamageTracker::LayerRectMapData"* %26, %7
  br i1 %28, label %39, label %31

29:                                               ; preds = %39
  %30 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %45 to i64
  br label %31

31:                                               ; preds = %29, %21
  %32 = phi i64 [ %30, %29 ], [ %11, %21 ]
  store i64 %32, i64* %27, align 8
  %33 = icmp eq i64 %24, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = sdiv exact i64 %24, -24
  %36 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %7, i64 %35
  %37 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %36 to i8*
  %38 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %38, i64 %24, i1 false) #10
  br label %47

39:                                               ; preds = %21, %39
  %40 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %45, %39 ], [ %7, %21 ]
  %41 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %44, %39 ], [ %26, %21 ]
  %42 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %40 to i8*
  %43 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 24, i1 false) #10
  %44 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %41, i64 1
  %45 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %40, i64 1
  %46 = icmp ult %"struct.cc::DamageTracker::LayerRectMapData"* %44, %7
  br i1 %46, label %39, label %29

47:                                               ; preds = %31, %34
  %48 = icmp ugt %"struct.cc::DamageTracker::LayerRectMapData"* %1, %2
  br i1 %48, label %54, label %49

49:                                               ; preds = %47
  %50 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %6, align 8
  %51 = icmp ugt %"struct.cc::DamageTracker::LayerRectMapData"* %50, %2
  %52 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %2, i64 1
  %53 = select i1 %51, %"struct.cc::DamageTracker::LayerRectMapData"* %52, %"struct.cc::DamageTracker::LayerRectMapData"* %2
  br label %54

54:                                               ; preds = %49, %47
  %55 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %2, %47 ], [ %53, %49 ]
  %56 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %1 to i8*
  %57 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 24, i1 false)
  br label %159

58:                                               ; preds = %3
  %59 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %6 to i64*
  %60 = bitcast %"class.std::__1::vector"* %0 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %11, %61
  %63 = sdiv exact i64 %62, 24
  %64 = add nsw i64 %63, 1
  %65 = icmp ugt i64 %64, 768614336404564650
  br i1 %65, label %66, label %68

66:                                               ; preds = %58
  %67 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %67) #11
  unreachable

68:                                               ; preds = %58
  %69 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"** %8 to i64*
  %70 = sub i64 %12, %61
  %71 = sdiv exact i64 %70, 24
  %72 = icmp ult i64 %71, 384307168202282325
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = sub i64 %4, %61
  %75 = sdiv exact i64 %74, 24
  br label %83

76:                                               ; preds = %68
  %77 = shl nsw i64 %71, 1
  %78 = icmp ult i64 %77, %64
  %79 = select i1 %78, i64 %64, i64 %77
  %80 = sub i64 %4, %61
  %81 = sdiv exact i64 %80, 24
  %82 = icmp eq i64 %79, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %76, %73
  %84 = phi i64 [ %75, %73 ], [ %81, %76 ]
  %85 = phi i64 [ 768614336404564650, %73 ], [ %79, %76 ]
  %86 = mul i64 %85, 24
  %87 = tail call i8* @_Znwm(i64 %86) #9
  %88 = bitcast i8* %87 to %"struct.cc::DamageTracker::LayerRectMapData"*
  br label %89

89:                                               ; preds = %76, %83
  %90 = phi i64 [ %84, %83 ], [ %81, %76 ]
  %91 = phi i64 [ %85, %83 ], [ 0, %76 ]
  %92 = phi i8* [ %87, %83 ], [ null, %76 ]
  %93 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %88, %83 ], [ null, %76 ]
  %94 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %93, i64 %90
  %95 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %93, i64 %91
  %96 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %95 to i64
  %97 = icmp eq i64 %90, %91
  %98 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %94 to i8*
  br i1 %97, label %99, label %125

99:                                               ; preds = %89
  %100 = icmp sgt i64 %90, 0
  %101 = mul nuw i64 %90, 24
  %102 = sdiv exact i64 %101, 24
  br i1 %100, label %103, label %108

103:                                              ; preds = %99
  %104 = add nuw nsw i64 %102, 1
  %105 = sdiv i64 %104, -2
  %106 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %94, i64 %105
  %107 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %106 to i8*
  br label %125

108:                                              ; preds = %99
  %109 = shl nsw i64 %102, 1
  %110 = icmp eq i64 %101, 0
  %111 = select i1 %110, i64 1, i64 %109
  %112 = icmp ugt i64 %111, 768614336404564650
  br i1 %112, label %113, label %114

113:                                              ; preds = %108
  tail call void @abort() #11
  unreachable

114:                                              ; preds = %108
  %115 = lshr i64 %111, 2
  %116 = mul i64 %111, 24
  %117 = tail call i8* @_Znwm(i64 %116) #9
  %118 = bitcast i8* %117 to %"struct.cc::DamageTracker::LayerRectMapData"*
  %119 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %118, i64 %115
  %120 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %118, i64 %111
  %121 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %120 to i64
  %122 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %93, null
  %123 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %119 to i8*
  br i1 %122, label %125, label %124

124:                                              ; preds = %114
  tail call void @_ZdlPv(i8* %92) #9
  br label %125

125:                                              ; preds = %89, %103, %114, %124
  %126 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %106, %103 ], [ %119, %114 ], [ %119, %124 ], [ %94, %89 ]
  %127 = phi i64 [ %96, %103 ], [ %121, %114 ], [ %121, %124 ], [ %96, %89 ]
  %128 = phi i8* [ %107, %103 ], [ %123, %114 ], [ %123, %124 ], [ %98, %89 ]
  %129 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %128, i8* align 4 %129, i64 24, i1 false) #10
  %130 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %126, i64 1
  %131 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %5, align 8
  %132 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %131 to i64
  %133 = sub i64 %4, %132
  %134 = sdiv exact i64 %133, -24
  %135 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %126, i64 %134
  %136 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %135 to i64
  %137 = icmp sgt i64 %133, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %125
  %139 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %135 to i8*
  %140 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 %133, i1 false) #10
  br label %141

141:                                              ; preds = %138, %125
  %142 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %6, align 8
  %143 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %142, %1
  br i1 %143, label %152, label %144

144:                                              ; preds = %141, %144
  %145 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %150, %144 ], [ %130, %141 ]
  %146 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %149, %144 ], [ %1, %141 ]
  %147 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %145 to i8*
  %148 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 24, i1 false) #10
  %149 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %146, i64 1
  %150 = getelementptr inbounds %"struct.cc::DamageTracker::LayerRectMapData", %"struct.cc::DamageTracker::LayerRectMapData"* %145, i64 1
  %151 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %149, %142
  br i1 %151, label %152, label %144

152:                                              ; preds = %144, %141
  %153 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %130, %141 ], [ %150, %144 ]
  %154 = ptrtoint %"struct.cc::DamageTracker::LayerRectMapData"* %153 to i64
  %155 = load %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"** %5, align 8
  store i64 %136, i64* %60, align 8
  store i64 %154, i64* %59, align 8
  store i64 %127, i64* %69, align 8
  %156 = icmp eq %"struct.cc::DamageTracker::LayerRectMapData"* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %152
  %158 = bitcast %"struct.cc::DamageTracker::LayerRectMapData"* %155 to i8*
  tail call void @_ZdlPv(i8* %158) #9
  br label %159

159:                                              ; preds = %157, %152, %15, %54
  %160 = phi %"struct.cc::DamageTracker::LayerRectMapData"* [ %1, %15 ], [ %1, %54 ], [ %126, %152 ], [ %126, %157 ]
  ret %"struct.cc::DamageTracker::LayerRectMapData"* %160
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.cc::DamageTracker::SurfaceRectMapData"* @_ZN2cc13DamageTracker18RectDataForSurfaceEmPb(%"class.cc::DamageTracker"*, i64, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.cc::DamageTracker::SurfaceRectMapData", align 8
  %5 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %4, i64 0, i32 1
  %8 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  store i64 %1, i64* %6, align 8
  %9 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #10
  %10 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 0
  %12 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::DamageTracker", %"class.cc::DamageTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %13, align 8
  %15 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %12 to i64
  %16 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %14 to i64
  %17 = sub i64 %16, %15
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %3
  %20 = ashr exact i64 %17, 5
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %12, %19 ], [ %33, %21 ]
  %23 = phi i64 [ %20, %19 ], [ %32, %21 ]
  %24 = lshr i64 %23, 1
  %25 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %22, i64 %24
  %26 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %1
  %29 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %25, i64 1
  %30 = xor i64 %24, -1
  %31 = add i64 %23, %30
  %32 = select i1 %28, i64 %31, i64 %24
  %33 = select i1 %28, %"struct.cc::DamageTracker::SurfaceRectMapData"* %29, %"struct.cc::DamageTracker::SurfaceRectMapData"* %22
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %21

35:                                               ; preds = %21, %3
  %36 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %12, %3 ], [ %33, %21 ]
  %37 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %36, %14
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %36, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %1
  br i1 %41, label %44, label %42

42:                                               ; preds = %35, %38
  store i8 1, i8* %2, align 1
  %43 = call %"struct.cc::DamageTracker::SurfaceRectMapData"* @_ZNSt3__16vectorIN2cc13DamageTracker18SurfaceRectMapDataENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector.3"* %10, %"struct.cc::DamageTracker::SurfaceRectMapData"* %36, %"struct.cc::DamageTracker::SurfaceRectMapData"* nonnull dereferenceable(32) %4)
  br label %44

44:                                               ; preds = %38, %42
  %45 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %43, %42 ], [ %36, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #10
  ret %"struct.cc::DamageTracker::SurfaceRectMapData"* %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.cc::DamageTracker::SurfaceRectMapData"* @_ZNSt3__16vectorIN2cc13DamageTracker18SurfaceRectMapDataENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector.3"*, %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %8, align 8
  %10 = icmp ult %"struct.cc::DamageTracker::SurfaceRectMapData"* %7, %9
  %11 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %7 to i64
  %12 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %9 to i64
  br i1 %10, label %13, label %97

13:                                               ; preds = %3
  %14 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %7, %1
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %1 to i8*
  %17 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 32, i1 false) #10
  %18 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %1, i64 1
  %19 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %18 to i64
  %20 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %6 to i64*
  store i64 %19, i64* %20, align 8
  br label %235

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %1, i64 1
  %23 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %22 to i64
  %24 = sub i64 %11, %23
  %25 = ashr exact i64 %24, 5
  %26 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %1, i64 %25
  %27 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %6 to i64*
  %28 = icmp ult %"struct.cc::DamageTracker::SurfaceRectMapData"* %26, %7
  br i1 %28, label %29, label %58

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %7, i64 %30, i32 0
  %32 = bitcast i64* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 5
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %29, %40
  %41 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %47, %40 ], [ %7, %29 ]
  %42 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %46, %40 ], [ %26, %29 ]
  %43 = phi i64 [ %48, %40 ], [ %38, %29 ]
  %44 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %41 to i8*
  %45 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 32, i1 false) #10
  %46 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %42, i64 1
  %47 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %41, i64 1
  %48 = add i64 %43, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %40, !llvm.loop !3

50:                                               ; preds = %40, %29
  %51 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %7, %29 ], [ %47, %40 ]
  %52 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %26, %29 ], [ %46, %40 ]
  %53 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ undef, %29 ], [ %47, %40 ]
  %54 = icmp ult i8* %34, inttoptr (i64 96 to i8*)
  br i1 %54, label %55, label %66

55:                                               ; preds = %66, %50
  %56 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %53, %50 ], [ %84, %66 ]
  %57 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %56 to i64
  br label %58

58:                                               ; preds = %55, %21
  %59 = phi i64 [ %57, %55 ], [ %11, %21 ]
  store i64 %59, i64* %27, align 8
  %60 = icmp eq i64 %24, 0
  br i1 %60, label %86, label %61

61:                                               ; preds = %58
  %62 = sub nsw i64 0, %25
  %63 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %7, i64 %62
  %64 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %63 to i8*
  %65 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %24, i1 false) #10
  br label %86

66:                                               ; preds = %50, %66
  %67 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %84, %66 ], [ %51, %50 ]
  %68 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %83, %66 ], [ %52, %50 ]
  %69 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %67 to i8*
  %70 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 32, i1 false) #10
  %71 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %68, i64 1
  %72 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %67, i64 1
  %73 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %72 to i8*
  %74 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 32, i1 false) #10
  %75 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %68, i64 2
  %76 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %67, i64 2
  %77 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %76 to i8*
  %78 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 32, i1 false) #10
  %79 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %68, i64 3
  %80 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %67, i64 3
  %81 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %80 to i8*
  %82 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 32, i1 false) #10
  %83 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %68, i64 4
  %84 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %67, i64 4
  %85 = icmp ult %"struct.cc::DamageTracker::SurfaceRectMapData"* %83, %7
  br i1 %85, label %66, label %55

86:                                               ; preds = %58, %61
  %87 = icmp ugt %"struct.cc::DamageTracker::SurfaceRectMapData"* %1, %2
  br i1 %87, label %93, label %88

88:                                               ; preds = %86
  %89 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %6, align 8
  %90 = icmp ugt %"struct.cc::DamageTracker::SurfaceRectMapData"* %89, %2
  %91 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %2, i64 1
  %92 = select i1 %90, %"struct.cc::DamageTracker::SurfaceRectMapData"* %91, %"struct.cc::DamageTracker::SurfaceRectMapData"* %2
  br label %93

93:                                               ; preds = %88, %86
  %94 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %2, %86 ], [ %92, %88 ]
  %95 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %1 to i8*
  %96 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 28, i1 false)
  br label %235

97:                                               ; preds = %3
  %98 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %6 to i64*
  %99 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %11, %100
  %102 = ashr exact i64 %101, 5
  %103 = add nsw i64 %102, 1
  %104 = icmp ugt i64 %103, 576460752303423487
  br i1 %104, label %105, label %107

105:                                              ; preds = %97
  %106 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %106) #11
  unreachable

107:                                              ; preds = %97
  %108 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"** %8 to i64*
  %109 = sub i64 %12, %100
  %110 = ashr exact i64 %109, 5
  %111 = icmp ult i64 %110, 288230376151711743
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = sub i64 %4, %100
  %114 = ashr exact i64 %113, 5
  br label %125

115:                                              ; preds = %107
  %116 = ashr exact i64 %109, 4
  %117 = icmp ult i64 %116, %103
  %118 = select i1 %117, i64 %103, i64 %116
  %119 = sub i64 %4, %100
  %120 = ashr exact i64 %119, 5
  %121 = icmp eq i64 %118, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %115
  %123 = icmp ugt i64 %118, 576460752303423487
  br i1 %123, label %124, label %125

124:                                              ; preds = %122
  tail call void @abort() #11
  unreachable

125:                                              ; preds = %112, %122
  %126 = phi i64 [ 576460752303423487, %112 ], [ %118, %122 ]
  %127 = phi i64 [ %114, %112 ], [ %120, %122 ]
  %128 = shl i64 %126, 5
  %129 = tail call i8* @_Znwm(i64 %128) #9
  %130 = bitcast i8* %129 to %"struct.cc::DamageTracker::SurfaceRectMapData"*
  br label %131

131:                                              ; preds = %115, %125
  %132 = phi i64 [ %127, %125 ], [ %120, %115 ]
  %133 = phi i64 [ %126, %125 ], [ 0, %115 ]
  %134 = phi i8* [ %129, %125 ], [ null, %115 ]
  %135 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %130, %125 ], [ null, %115 ]
  %136 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, i64 %132
  %137 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, i64 %133
  %138 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %137 to i64
  %139 = icmp eq i64 %132, %133
  %140 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %136 to i8*
  br i1 %139, label %141, label %165

141:                                              ; preds = %131
  %142 = icmp sgt i64 %132, 0
  br i1 %142, label %143, label %148

143:                                              ; preds = %141
  %144 = add nuw nsw i64 %132, 1
  %145 = sdiv i64 %144, -2
  %146 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %136, i64 %145
  %147 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %146 to i8*
  br label %165

148:                                              ; preds = %141
  %149 = shl nsw i64 %132, 1
  %150 = icmp eq i64 %132, 0
  %151 = select i1 %150, i64 1, i64 %149
  %152 = icmp ugt i64 %151, 576460752303423487
  br i1 %152, label %153, label %154

153:                                              ; preds = %148
  tail call void @abort() #11
  unreachable

154:                                              ; preds = %148
  %155 = lshr i64 %151, 2
  %156 = shl i64 %151, 5
  %157 = tail call i8* @_Znwm(i64 %156) #9
  %158 = bitcast i8* %157 to %"struct.cc::DamageTracker::SurfaceRectMapData"*
  %159 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %158, i64 %155
  %160 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %158, i64 %151
  %161 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %160 to i64
  %162 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %135, null
  %163 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %159 to i8*
  br i1 %162, label %165, label %164

164:                                              ; preds = %154
  tail call void @_ZdlPv(i8* %134) #9
  br label %165

165:                                              ; preds = %131, %143, %154, %164
  %166 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %146, %143 ], [ %159, %154 ], [ %159, %164 ], [ %136, %131 ]
  %167 = phi i64 [ %138, %143 ], [ %161, %154 ], [ %161, %164 ], [ %138, %131 ]
  %168 = phi i8* [ %147, %143 ], [ %163, %154 ], [ %163, %164 ], [ %140, %131 ]
  %169 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 32, i1 false) #10
  %170 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %166, i64 1
  %171 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %5, align 8
  %172 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %171 to i64
  %173 = sub i64 %4, %172
  %174 = ashr exact i64 %173, 5
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %166, i64 %175
  %177 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %176 to i64
  %178 = icmp sgt i64 %173, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %165
  %180 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %176 to i8*
  %181 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 %173, i1 false) #10
  br label %182

182:                                              ; preds = %179, %165
  %183 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %6, align 8
  %184 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %183, %1
  br i1 %184, label %228, label %185

185:                                              ; preds = %182
  %186 = getelementptr %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %183, i64 -1, i32 0
  %187 = ptrtoint i64* %186 to i64
  %188 = sub i64 %187, %4
  %189 = lshr i64 %188, 5
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 3
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %203, label %193

193:                                              ; preds = %185, %193
  %194 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %200, %193 ], [ %170, %185 ]
  %195 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %199, %193 ], [ %1, %185 ]
  %196 = phi i64 [ %201, %193 ], [ %191, %185 ]
  %197 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %194 to i8*
  %198 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %195 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 32, i1 false) #10
  %199 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %195, i64 1
  %200 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %194, i64 1
  %201 = add i64 %196, -1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %193, !llvm.loop !5

203:                                              ; preds = %193, %185
  %204 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ undef, %185 ], [ %200, %193 ]
  %205 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %170, %185 ], [ %200, %193 ]
  %206 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %1, %185 ], [ %199, %193 ]
  %207 = icmp ult i64 %188, 96
  br i1 %207, label %228, label %208

208:                                              ; preds = %203, %208
  %209 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %226, %208 ], [ %205, %203 ]
  %210 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %225, %208 ], [ %206, %203 ]
  %211 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %209 to i8*
  %212 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 32, i1 false) #10
  %213 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %210, i64 1
  %214 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %209, i64 1
  %215 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %214 to i8*
  %216 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %213 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 32, i1 false) #10
  %217 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %210, i64 2
  %218 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %209, i64 2
  %219 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %218 to i8*
  %220 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %217 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 32, i1 false) #10
  %221 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %210, i64 3
  %222 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %209, i64 3
  %223 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %222 to i8*
  %224 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 32, i1 false) #10
  %225 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %210, i64 4
  %226 = getelementptr inbounds %"struct.cc::DamageTracker::SurfaceRectMapData", %"struct.cc::DamageTracker::SurfaceRectMapData"* %209, i64 4
  %227 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %225, %183
  br i1 %227, label %228, label %208

228:                                              ; preds = %203, %208, %182
  %229 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %170, %182 ], [ %204, %203 ], [ %226, %208 ]
  %230 = ptrtoint %"struct.cc::DamageTracker::SurfaceRectMapData"* %229 to i64
  %231 = load %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"** %5, align 8
  store i64 %177, i64* %99, align 8
  store i64 %230, i64* %98, align 8
  store i64 %167, i64* %108, align 8
  %232 = icmp eq %"struct.cc::DamageTracker::SurfaceRectMapData"* %231, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %228
  %234 = bitcast %"struct.cc::DamageTracker::SurfaceRectMapData"* %231 to i8*
  tail call void @_ZdlPv(i8* %234) #9
  br label %235

235:                                              ; preds = %233, %228, %15, %93
  %236 = phi %"struct.cc::DamageTracker::SurfaceRectMapData"* [ %1, %15 ], [ %1, %93 ], [ %166, %228 ], [ %166, %233 ]
  ret %"struct.cc::DamageTracker::SurfaceRectMapData"* %236
}

declare zeroext i1 @_ZNK2cc9LayerImpl20LayerPropertyChangedEv(%"class.cc::LayerImpl"*) local_unnamed_addr #3

declare { i64, i64 } @_ZN3gfx10UnionRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"*) local_unnamed_addr #3

declare { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNK2cc9LayerImpl13DrawTransformEv(%"class.gfx::Transform"* sret, %"class.cc::LayerImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc9LayerImpl37LayerPropertyChangedFromPropertyTreesEv(%"class.cc::LayerImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc9LayerImpl40LayerPropertyChangedNotFromPropertyTreesEv(%"class.cc::LayerImpl"*) local_unnamed_addr #3

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK2cc17RenderSurfaceImpl19DrawableContentRectEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc17RenderSurfaceImpl22SurfacePropertyChangedEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
