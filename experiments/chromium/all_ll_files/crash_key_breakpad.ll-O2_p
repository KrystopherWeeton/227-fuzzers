; ModuleID = '../../components/crash/core/common/crash_key_breakpad.cc'
source_filename = "../../components/crash/core/common/crash_key_breakpad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.google_breakpad::NonAllocatingMap" = type { [200 x %"struct.google_breakpad::NonAllocatingMap<40, 128, 200>::Entry"] }
%"struct.google_breakpad::NonAllocatingMap<40, 128, 200>::Entry" = type { [40 x i8], [128 x i8] }
%"class.crash_reporter::internal::CrashKeyStringImpl" = type { i8*, i64*, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::debug::CrashKeyImplementation" = type { i32 (...)** }

$_ZN15google_breakpad16NonAllocatingMapILm40ELm128ELm200EE11SetKeyValueEPKcS3_ = comdat any

@_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE = internal unnamed_addr global %"class.google_breakpad::NonAllocatingMap"* null, align 8
@_ZN14crash_reporter8internal12_GLOBAL__N_118kChunkFormatStringE = internal constant [8 x i8] c"%s__%zu\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.google_breakpad::NonAllocatingMap"* @_ZN14crash_reporter8internal18GetCrashKeyStorageEv() local_unnamed_addr #0 {
  %1 = load %"class.google_breakpad::NonAllocatingMap"*, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  %2 = icmp eq %"class.google_breakpad::NonAllocatingMap"* %1, null
  br i1 %2, label %3, label %6

3:                                                ; preds = %0
  %4 = tail call i8* @_Znwm(i64 33600) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 33600, i1 false) #12
  store i8* %4, i8** bitcast (%"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE to i8**), align 8
  %5 = bitcast i8* %4 to %"class.google_breakpad::NonAllocatingMap"*
  br label %6

6:                                                ; preds = %0, %3
  %7 = phi %"class.google_breakpad::NonAllocatingMap"* [ %1, %0 ], [ %5, %3 ]
  ret %"class.google_breakpad::NonAllocatingMap"* %7
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14crash_reporter8internal30ResetCrashKeyStorageForTestingEv() local_unnamed_addr #0 {
  %1 = load %"class.google_breakpad::NonAllocatingMap"*, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  store %"class.google_breakpad::NonAllocatingMap"* null, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  %2 = icmp eq %"class.google_breakpad::NonAllocatingMap"* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %1, i64 0, i32 0, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %0
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 7
  %12 = load %"class.google_breakpad::NonAllocatingMap"*, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  %13 = icmp eq %"class.google_breakpad::NonAllocatingMap"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = tail call i8* @_Znwm(i64 33600) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %15, i8 0, i64 33600, i1 false) #12
  store i8* %15, i8** bitcast (%"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE to i8**), align 8
  %16 = bitcast i8* %15 to %"class.google_breakpad::NonAllocatingMap"*
  br label %17

17:                                               ; preds = %3, %14
  %18 = phi %"class.google_breakpad::NonAllocatingMap"* [ %12, %3 ], [ %16, %14 ]
  %19 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 0, i64 %11)
  %20 = extractvalue { i8*, i64 } %19, 0
  %21 = extractvalue { i8*, i64 } %19, 1
  store i8* %20, i8** %7, align 8
  store i64 %21, i64* %8, align 8
  %22 = load i64, i64* %9, align 8
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %24, label %86

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = icmp ugt i64 %21, -17
  %30 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  br i1 %29, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %32) #13
  unreachable

33:                                               ; preds = %24
  %34 = icmp ult i64 %21, 23
  br i1 %34, label %40, label %35

35:                                               ; preds = %33
  %36 = add nuw i64 %21, 16
  %37 = and i64 %36, -16
  %38 = call i8* @_Znwm(i64 %37) #11
  store i8* %38, i8** %26, align 8, !alias.scope !2
  %39 = or i64 %37, -9223372036854775808
  store i64 %39, i64* %28, align 8, !alias.scope !2
  store i64 %21, i64* %27, align 8, !alias.scope !2
  br label %45

40:                                               ; preds = %33
  %41 = trunc i64 %21 to i8
  %42 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1, !alias.scope !2
  %44 = icmp eq i64 %21, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %35
  %46 = phi i8* [ %38, %35 ], [ %25, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %20, i64 %21, i1 false) #12
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %25, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %21
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 200
  br i1 %53, label %67, label %54

54:                                               ; preds = %47
  %55 = icmp ugt i64 %52, 199
  %56 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %55, label %78, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i8*, i8** %26, align 8
  %62 = select i1 %60, i8* %61, i8* %25
  %63 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %52, i32 1, i64 0
  %64 = call i64 @llvm.objectsize.i64.p0i8(i8* %63, i1 false, i1 true, i1 false) #12
  %65 = call i8* @__strncpy_chk(i8* %63, i8* %62, i64 128, i64 %64) #12
  %66 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %52, i32 1, i64 127
  store i8 0, i8* %66, align 1
  br label %78

67:                                               ; preds = %47
  %68 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = load i8*, i8** %26, align 8
  %75 = select i1 %73, i8* %74, i8* %25
  %76 = call i64 @_ZN15google_breakpad16NonAllocatingMapILm40ELm128ELm200EE11SetKeyValueEPKcS3_(%"class.google_breakpad::NonAllocatingMap"* nonnull %18, i8* %69, i8* %75)
  %77 = load i64*, i64** %50, align 8
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %54, %57, %67
  %79 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %56, %57 ], [ %70, %67 ], [ %56, %54 ]
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %78, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  br label %223

86:                                               ; preds = %17
  %87 = icmp ult i64 %21, 127
  %88 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 1
  %89 = load i64*, i64** %88, align 8
  br i1 %87, label %90, label %144

90:                                               ; preds = %86
  %91 = getelementptr inbounds i64, i64* %89, i64 1
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, 200
  br i1 %93, label %129, label %94

94:                                               ; preds = %90
  %95 = icmp eq i64 %22, 0
  br i1 %95, label %123, label %96

96:                                               ; preds = %94
  %97 = load %"class.google_breakpad::NonAllocatingMap"*, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  br label %98

98:                                               ; preds = %115, %96
  %99 = phi %"class.google_breakpad::NonAllocatingMap"* [ %97, %96 ], [ %106, %115 ]
  %100 = phi i64 [ 0, %96 ], [ %118, %115 ]
  %101 = icmp eq %"class.google_breakpad::NonAllocatingMap"* %99, null
  br i1 %101, label %102, label %105

102:                                              ; preds = %98
  %103 = call i8* @_Znwm(i64 33600) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %103, i8 0, i64 33600, i1 false) #12
  store i8* %103, i8** bitcast (%"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE to i8**), align 8
  %104 = bitcast i8* %103 to %"class.google_breakpad::NonAllocatingMap"*
  br label %105

105:                                              ; preds = %102, %98
  %106 = phi %"class.google_breakpad::NonAllocatingMap"* [ %99, %98 ], [ %104, %102 ]
  %107 = load i64*, i64** %88, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 %100
  %109 = load i64, i64* %108, align 8
  %110 = icmp ugt i64 %109, 199
  br i1 %110, label %115, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %106, i64 0, i32 0, i64 %109, i32 0, i64 0
  store i8 0, i8* %112, align 1
  %113 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %106, i64 0, i32 0, i64 %109, i32 1, i64 0
  store i8 0, i8* %113, align 1
  %114 = load i64*, i64** %88, align 8
  br label %115

115:                                              ; preds = %111, %105
  %116 = phi i64* [ %107, %105 ], [ %114, %111 ]
  %117 = getelementptr inbounds i64, i64* %116, i64 %100
  store i64 200, i64* %117, align 8
  %118 = add nuw i64 %100, 1
  %119 = load i64, i64* %9, align 8
  %120 = icmp ult i64 %118, %119
  br i1 %120, label %98, label %121

121:                                              ; preds = %115
  %122 = load i8*, i8** %7, align 8
  br label %123

123:                                              ; preds = %121, %94
  %124 = phi i8* [ %122, %121 ], [ %20, %94 ]
  %125 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = call i64 @_ZN15google_breakpad16NonAllocatingMapILm40ELm128ELm200EE11SetKeyValueEPKcS3_(%"class.google_breakpad::NonAllocatingMap"* %18, i8* %126, i8* %124)
  %128 = load i64*, i64** %88, align 8
  store i64 %127, i64* %128, align 8
  br label %223

129:                                              ; preds = %90
  %130 = load i64, i64* %89, align 8
  %131 = icmp eq i64 %130, 200
  br i1 %131, label %139, label %132

132:                                              ; preds = %129
  %133 = icmp ugt i64 %130, 199
  br i1 %133, label %223, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %130, i32 1, i64 0
  %136 = call i64 @llvm.objectsize.i64.p0i8(i8* %135, i1 false, i1 true, i1 false) #12
  %137 = call i8* @__strncpy_chk(i8* %135, i8* %20, i64 128, i64 %136) #12
  %138 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %130, i32 1, i64 127
  store i8 0, i8* %138, align 1
  br label %223

139:                                              ; preds = %129
  %140 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = call i64 @_ZN15google_breakpad16NonAllocatingMapILm40ELm128ELm200EE11SetKeyValueEPKcS3_(%"class.google_breakpad::NonAllocatingMap"* nonnull %18, i8* %141, i8* %20)
  %143 = load i64*, i64** %88, align 8
  store i64 %142, i64* %143, align 8
  br label %223

144:                                              ; preds = %86
  %145 = load i64, i64* %89, align 8
  %146 = icmp eq i64 %145, 200
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds i64, i64* %89, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = icmp eq i64 %149, 200
  br i1 %150, label %151, label %160

151:                                              ; preds = %147
  %152 = icmp ugt i64 %145, 199
  br i1 %152, label %157, label %153

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %145, i32 0, i64 0
  store i8 0, i8* %154, align 1
  %155 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %145, i32 1, i64 0
  store i8 0, i8* %155, align 1
  %156 = load i64*, i64** %88, align 8
  br label %157

157:                                              ; preds = %151, %153
  %158 = phi i64* [ %89, %151 ], [ %156, %153 ]
  store i64 200, i64* %158, align 8
  %159 = load i64, i64* %9, align 8
  br label %160

160:                                              ; preds = %144, %157, %147
  %161 = phi i64 [ %22, %144 ], [ %159, %157 ], [ %22, %147 ]
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %223, label %163

163:                                              ; preds = %160
  %164 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 0
  %167 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %169 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %170

170:                                              ; preds = %163, %218
  %171 = phi i64 [ 0, %163 ], [ %220, %218 ]
  %172 = phi i64 [ 0, %163 ], [ %219, %218 ]
  %173 = load i64, i64* %8, align 8
  %174 = icmp ult i64 %172, %173
  br i1 %174, label %175, label %206

175:                                              ; preds = %170
  %176 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 %172, i64 127)
  %177 = extractvalue { i8*, i64 } %176, 0
  %178 = extractvalue { i8*, i64 } %176, 1
  %179 = add i64 %178, %172
  %180 = load i64*, i64** %88, align 8
  %181 = getelementptr inbounds i64, i64* %180, i64 %171
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %182, 200
  br i1 %183, label %184, label %199

184:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 24, i1 false)
  %185 = load i8*, i8** %166, align 8
  %186 = add nuw i64 %171, 1
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN14crash_reporter8internal12_GLOBAL__N_118kChunkFormatStringE, i64 0, i64 0), i8* %185, i64 %186) #12
  %187 = load i8, i8* %168, align 1
  %188 = icmp slt i8 %187, 0
  %189 = load i8*, i8** %165, align 8
  %190 = select i1 %188, i8* %189, i8* %164
  %191 = call i64 @_ZN15google_breakpad16NonAllocatingMapILm40ELm128ELm200EE11SetKeyValueEPKcS3_(%"class.google_breakpad::NonAllocatingMap"* %18, i8* %190, i8* %177)
  %192 = load i64*, i64** %88, align 8
  %193 = getelementptr inbounds i64, i64* %192, i64 %171
  store i64 %191, i64* %193, align 8
  %194 = load i8, i8* %168, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %184
  %197 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %197) #11
  br label %198

198:                                              ; preds = %184, %196
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #12
  br label %218

199:                                              ; preds = %175
  %200 = icmp ugt i64 %182, 199
  br i1 %200, label %218, label %201

201:                                              ; preds = %199
  %202 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %182, i32 1, i64 0
  %203 = call i64 @llvm.objectsize.i64.p0i8(i8* %202, i1 false, i1 true, i1 false) #12
  %204 = call i8* @__strncpy_chk(i8* %202, i8* %177, i64 128, i64 %203) #12
  %205 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %182, i32 1, i64 127
  store i8 0, i8* %205, align 1
  br label %218

206:                                              ; preds = %170
  %207 = load i64*, i64** %88, align 8
  %208 = getelementptr inbounds i64, i64* %207, i64 %171
  %209 = load i64, i64* %208, align 8
  %210 = icmp ugt i64 %209, 199
  br i1 %210, label %215, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %209, i32 0, i64 0
  store i8 0, i8* %212, align 1
  %213 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %18, i64 0, i32 0, i64 %209, i32 1, i64 0
  store i8 0, i8* %213, align 1
  %214 = load i64*, i64** %88, align 8
  br label %215

215:                                              ; preds = %206, %211
  %216 = phi i64* [ %207, %206 ], [ %214, %211 ]
  %217 = getelementptr inbounds i64, i64* %216, i64 %171
  store i64 200, i64* %217, align 8
  br label %218

218:                                              ; preds = %198, %199, %201, %215
  %219 = phi i64 [ %172, %215 ], [ %179, %201 ], [ %179, %199 ], [ %179, %198 ]
  %220 = add nuw i64 %171, 1
  %221 = load i64, i64* %9, align 8
  %222 = icmp ult i64 %220, %221
  br i1 %222, label %170, label %223

223:                                              ; preds = %218, %160, %134, %132, %123, %139, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK14crash_reporter8internal18CrashKeyStringImpl6is_setEv(%"class.crash_reporter::internal::CrashKeyStringImpl"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = icmp ne i64 %4, 200
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN15google_breakpad16NonAllocatingMapILm40ELm128ELm200EE11SetKeyValueEPKcS3_(%"class.google_breakpad::NonAllocatingMap"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i8* %2, null
  %5 = icmp eq i8* %1, null
  br i1 %4, label %6, label %19

6:                                                ; preds = %3
  br i1 %5, label %53, label %7

7:                                                ; preds = %6, %12
  %8 = phi i64 [ %13, %12 ], [ 0, %6 ]
  %9 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %8, i32 0, i64 0
  %10 = tail call i32 @strncmp(i8* nonnull %1, i8* %9, i64 40) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = add nuw nsw i64 %8, 1
  %14 = icmp eq i64 %13, 200
  br i1 %14, label %53, label %7

15:                                               ; preds = %7
  %16 = icmp ugt i64 %8, 199
  br i1 %16, label %53, label %17

17:                                               ; preds = %15
  store i8 0, i8* %9, align 1
  %18 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %8, i32 1, i64 0
  store i8 0, i8* %18, align 1
  br label %53

19:                                               ; preds = %3
  br i1 %5, label %53, label %20

20:                                               ; preds = %19
  %21 = load i8, i8* %1, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %53, label %23

23:                                               ; preds = %20, %28
  %24 = phi i64 [ %29, %28 ], [ 0, %20 ]
  %25 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %24, i32 0, i64 0
  %26 = tail call i32 @strncmp(i8* nonnull %1, i8* %25, i64 40) #14
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %23
  %29 = add nuw nsw i64 %24, 1
  %30 = icmp eq i64 %29, 200
  br i1 %30, label %31, label %23

31:                                               ; preds = %28, %70
  %32 = phi i64 [ %71, %70 ], [ 0, %28 ]
  %33 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %32, i32 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %65, %60, %55, %42, %31
  %37 = phi i64 [ %32, %31 ], [ %43, %42 ], [ %56, %55 ], [ %61, %60 ], [ %66, %65 ]
  %38 = phi i8* [ %33, %31 ], [ %44, %42 ], [ %57, %55 ], [ %62, %60 ], [ %67, %65 ]
  %39 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %38, i1 false, i1 true, i1 false) #12
  %40 = tail call i8* @__strncpy_chk(i8* %38, i8* nonnull %1, i64 40, i64 %39) #12
  %41 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %37, i32 0, i64 39
  store i8 0, i8* %41, align 1
  br label %47

42:                                               ; preds = %31
  %43 = add nuw nsw i64 %32, 1
  %44 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %43, i32 0, i64 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %36, label %55

47:                                               ; preds = %23, %36
  %48 = phi i64 [ %37, %36 ], [ %24, %23 ]
  %49 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %48, i32 1, i64 0
  %50 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %49, i1 false, i1 true, i1 false) #12
  %51 = tail call i8* @__strncpy_chk(i8* %49, i8* nonnull %2, i64 128, i64 %50) #12
  %52 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %48, i32 1, i64 127
  store i8 0, i8* %52, align 1
  br label %53

53:                                               ; preds = %70, %12, %17, %15, %6, %47, %20, %19
  %54 = phi i64 [ 200, %19 ], [ 200, %20 ], [ %48, %47 ], [ 200, %6 ], [ 200, %15 ], [ 200, %17 ], [ 200, %12 ], [ 200, %70 ]
  ret i64 %54

55:                                               ; preds = %42
  %56 = add nuw nsw i64 %32, 2
  %57 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %56, i32 0, i64 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %36, label %60

60:                                               ; preds = %55
  %61 = add nuw nsw i64 %32, 3
  %62 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %61, i32 0, i64 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %36, label %65

65:                                               ; preds = %60
  %66 = add nuw nsw i64 %32, 4
  %67 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %0, i64 0, i32 0, i64 %66, i32 0, i64 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %36, label %70

70:                                               ; preds = %65
  %71 = add nuw nsw i64 %32, 5
  %72 = icmp eq i64 %71, 200
  br i1 %72, label %53, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14crash_reporter8internal18CrashKeyStringImpl5ClearEv(%"class.crash_reporter::internal::CrashKeyStringImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.crash_reporter::internal::CrashKeyStringImpl", %"class.crash_reporter::internal::CrashKeyStringImpl"* %0, i64 0, i32 1
  %7 = load %"class.google_breakpad::NonAllocatingMap"*, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  br label %9

8:                                                ; preds = %26, %1
  ret void

9:                                                ; preds = %5, %26
  %10 = phi %"class.google_breakpad::NonAllocatingMap"* [ %7, %5 ], [ %17, %26 ]
  %11 = phi i64 [ 0, %5 ], [ %29, %26 ]
  %12 = icmp eq %"class.google_breakpad::NonAllocatingMap"* %10, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = tail call i8* @_Znwm(i64 33600) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 0, i64 33600, i1 false) #12
  store i8* %14, i8** bitcast (%"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE to i8**), align 8
  %15 = bitcast i8* %14 to %"class.google_breakpad::NonAllocatingMap"*
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi %"class.google_breakpad::NonAllocatingMap"* [ %10, %9 ], [ %15, %13 ]
  %18 = load i64*, i64** %6, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 %11
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %20, 199
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %17, i64 0, i32 0, i64 %20, i32 0, i64 0
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %17, i64 0, i32 0, i64 %20, i32 1, i64 0
  store i8 0, i8* %24, align 1
  %25 = load i64*, i64** %6, align 8
  br label %26

26:                                               ; preds = %16, %22
  %27 = phi i64* [ %18, %16 ], [ %25, %22 ]
  %28 = getelementptr inbounds i64, i64* %27, i64 %11
  store i64 200, i64* %28, align 8
  %29 = add nuw i64 %11, 1
  %30 = load i64, i64* %2, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %9, label %8
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14crash_reporter19InitializeCrashKeysEv() local_unnamed_addr #0 {
  %1 = load %"class.google_breakpad::NonAllocatingMap"*, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  %2 = icmp eq %"class.google_breakpad::NonAllocatingMap"* %1, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call i8* @_Znwm(i64 33600) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 33600, i1 false) #12
  store i8* %4, i8** bitcast (%"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE to i8**), align 8
  br label %5

5:                                                ; preds = %0, %3
  tail call void @_ZN14crash_reporter29InitializeCrashKeyBaseSupportEv() #12
  ret void
}

declare void @_ZN14crash_reporter29InitializeCrashKeyBaseSupportEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14crash_reporter16GetCrashKeyValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = load %"class.google_breakpad::NonAllocatingMap"*, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  %4 = icmp eq %"class.google_breakpad::NonAllocatingMap"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = tail call i8* @_Znwm(i64 33600) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 33600, i1 false) #12
  store i8* %6, i8** bitcast (%"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE to i8**), align 8
  %7 = bitcast i8* %6 to %"class.google_breakpad::NonAllocatingMap"*
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi %"class.google_breakpad::NonAllocatingMap"* [ %3, %2 ], [ %7, %5 ]
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = icmp eq i8* %17, null
  br i1 %18, label %56, label %19

19:                                               ; preds = %8, %24
  %20 = phi i64 [ %25, %24 ], [ 0, %8 ]
  %21 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %9, i64 0, i32 0, i64 %20, i32 0, i64 0
  %22 = tail call i32 @strncmp(i8* nonnull %17, i8* %21, i64 40) #14
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = add nuw nsw i64 %20, 1
  %26 = icmp eq i64 %25, 200
  br i1 %26, label %56, label %19

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %9, i64 0, i32 0, i64 %20, i32 1, i64 0
  %29 = icmp eq i8* %28, null
  br i1 %29, label %56, label %30

30:                                               ; preds = %27
  %31 = tail call i64 @strlen(i8* nonnull %28) #12
  %32 = icmp ugt i64 %31, -17
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #13
  unreachable

35:                                               ; preds = %30
  %36 = icmp ult i64 %31, 23
  br i1 %36, label %45, label %37

37:                                               ; preds = %35
  %38 = add nuw i64 %31, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %40, i8** %41, align 8
  %42 = or i64 %39, -9223372036854775808
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %44, align 8
  br label %51

45:                                               ; preds = %35
  %46 = trunc i64 %31 to i8
  %47 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 %46, i8* %48, align 1
  %49 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %50 = icmp eq i64 %31, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %45, %37
  %52 = phi i8* [ %40, %37 ], [ %49, %45 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* nonnull align 1 %28, i64 %31, i1 false) #12
  br label %53

53:                                               ; preds = %45, %51
  %54 = phi i8* [ %49, %45 ], [ %52, %51 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %31
  store i8 0, i8* %55, align 1
  br label %58

56:                                               ; preds = %24, %8, %27
  %57 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #12
  br label %58

58:                                               ; preds = %56, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14crash_reporter29InitializeCrashKeysForTestingEv() local_unnamed_addr #0 {
  %1 = load %"class.google_breakpad::NonAllocatingMap"*, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  %2 = icmp eq %"class.google_breakpad::NonAllocatingMap"* %1, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call i8* @_Znwm(i64 33600) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 33600, i1 false) #12
  store i8* %4, i8** bitcast (%"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE to i8**), align 8
  br label %5

5:                                                ; preds = %0, %3
  tail call void @_ZN14crash_reporter29InitializeCrashKeyBaseSupportEv() #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14crash_reporter24ResetCrashKeysForTestingEv() local_unnamed_addr #0 {
  %1 = load %"class.google_breakpad::NonAllocatingMap"*, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  store %"class.google_breakpad::NonAllocatingMap"* null, %"class.google_breakpad::NonAllocatingMap"** @_ZN14crash_reporter8internal12_GLOBAL__N_19g_storageE, align 8
  %2 = icmp eq %"class.google_breakpad::NonAllocatingMap"* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = getelementptr inbounds %"class.google_breakpad::NonAllocatingMap", %"class.google_breakpad::NonAllocatingMap"* %1, i64 0, i32 0, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %0, %3
  tail call void @_ZN4base5debug25SetCrashKeyImplementationENSt3__110unique_ptrINS0_22CrashKeyImplementationENS1_14default_deleteIS3_EEEE(%"class.base::debug::CrashKeyImplementation"* null) #12
  ret void
}

declare void @_ZN4base5debug25SetCrashKeyImplementationENSt3__110unique_ptrINS0_22CrashKeyImplementationENS1_14default_deleteIS3_EEEE(%"class.base::debug::CrashKeyImplementation"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i8* @__strncpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #8

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
