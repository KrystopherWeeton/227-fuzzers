; ModuleID = '../../third_party/pdfium/xfa/fxfa/parser/cxfa_measurement.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/parser/cxfa_measurement.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_Measurement = type <{ float, i8, [3 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>

@.str = private unnamed_addr constant [7 x i32] [i32 37, i32 46, i32 56, i32 103, i32 109, i32 109, i32 0], align 4
@.str.1 = private unnamed_addr constant [7 x i32] [i32 37, i32 46, i32 56, i32 103, i32 112, i32 116, i32 0], align 4
@.str.2 = private unnamed_addr constant [7 x i32] [i32 37, i32 46, i32 56, i32 103, i32 105, i32 110, i32 0], align 4
@.str.3 = private unnamed_addr constant [7 x i32] [i32 37, i32 46, i32 56, i32 103, i32 99, i32 109, i32 0], align 4
@.str.4 = private unnamed_addr constant [7 x i32] [i32 37, i32 46, i32 56, i32 103, i32 109, i32 112, i32 0], align 4
@.str.5 = private unnamed_addr constant [7 x i32] [i32 37, i32 46, i32 56, i32 103, i32 112, i32 99, i32 0], align 4
@.str.6 = private unnamed_addr constant [7 x i32] [i32 37, i32 46, i32 56, i32 103, i32 101, i32 109, i32 0], align 4
@.str.7 = private unnamed_addr constant [7 x i32] [i32 37, i32 46, i32 56, i32 103, i32 37, i32 37, i32 0], align 4
@.str.8 = private unnamed_addr constant [5 x i32] [i32 37, i32 46, i32 56, i32 103, i32 0], align 4
@.str.16 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@switch.table._ZNK16CXFA_Measurement8ToStringEv = private unnamed_addr constant [8 x i32*] [i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.7, i64 0, i64 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.6, i64 0, i64 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.1, i64 0, i64 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.5, i64 0, i64 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.3, i64 0, i64 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str, i64 0, i64 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.4, i64 0, i64 0)], align 8

@_ZN16CXFA_MeasurementC1EN5fxcrt18StringViewTemplateIwEE = hidden unnamed_addr alias void (%class.CXFA_Measurement*, %"class.fxcrt::StringViewTemplate"*), void (%class.CXFA_Measurement*, %"class.fxcrt::StringViewTemplate"*)* @_ZN16CXFA_MeasurementC2EN5fxcrt18StringViewTemplateIwEE
@_ZN16CXFA_MeasurementC1Ev = hidden unnamed_addr alias void (%class.CXFA_Measurement*), void (%class.CXFA_Measurement*)* @_ZN16CXFA_MeasurementC2Ev
@_ZN16CXFA_MeasurementC1Ef8XFA_Unit = hidden unnamed_addr alias void (%class.CXFA_Measurement*, float, i8), void (%class.CXFA_Measurement*, float, i8)* @_ZN16CXFA_MeasurementC2Ef8XFA_Unit

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CXFA_MeasurementC2EN5fxcrt18StringViewTemplateIwEE(%class.CXFA_Measurement* nocapture, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 0
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 1
  store i8 -1, i8* %13, align 4
  br label %57

14:                                               ; preds = %2
  %15 = load i32, i32* %6, align 4
  %16 = icmp eq i32 %15, 61
  br i1 %16, label %17, label %27

17:                                               ; preds = %14
  %18 = add i64 %8, -1
  %19 = icmp eq i64 %18, 0
  %20 = icmp eq i32* %6, null
  br i1 %19, label %24, label %21

21:                                               ; preds = %17
  br i1 %20, label %27, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds i32, i32* %6, i64 1
  br label %25

24:                                               ; preds = %17
  br i1 %20, label %27, label %25

25:                                               ; preds = %24, %22
  %26 = phi i32* [ %23, %22 ], [ null, %24 ]
  br label %27

27:                                               ; preds = %21, %24, %25, %14
  %28 = phi i64 [ %8, %14 ], [ 0, %24 ], [ %18, %25 ], [ 0, %21 ]
  %29 = phi i32* [ %6, %14 ], [ null, %24 ], [ %26, %25 ], [ null, %21 ]
  %30 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #7
  store i32 0, i32* %3, align 4
  %31 = trunc i64 %28 to i32
  %32 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %29, i32 %31, i32* nonnull %3) #7
  %33 = call float @llvm.fabs.f32(float %32) #8
  %34 = fcmp one float %33, 0x7FF0000000000000
  %35 = select i1 %34, float %32, float 0.000000e+00
  %36 = load i32, i32* %3, align 4
  %37 = sext i32 %36 to i64
  %38 = sub i64 %28, %37
  %39 = icmp eq i64 %38, 0
  %40 = icmp ult i64 %28, %37
  %41 = or i1 %40, %39
  br i1 %41, label %49, label %42

42:                                               ; preds = %27
  %43 = icmp ne i32* %29, null
  %44 = icmp ugt i64 %28, %37
  %45 = and i1 %43, %44
  %46 = getelementptr inbounds i32, i32* %29, i64 %37
  %47 = select i1 %45, i32* %46, i32* null
  %48 = select i1 %45, i64 %38, i64 0
  br label %49

49:                                               ; preds = %42, %27
  %50 = phi i32* [ %47, %42 ], [ null, %27 ]
  %51 = phi i64 [ %48, %42 ], [ 0, %27 ]
  %52 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %50, i32** %52, align 8
  %53 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 %51, i64* %53, align 8
  %54 = call zeroext i8 @_ZN16CXFA_Measurement17GetUnitFromStringEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %4) #7
  %55 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 0
  store float %35, float* %55, align 4
  %56 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 1
  store i8 %54, i8* %56, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #7
  br label %57

57:                                               ; preds = %11, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CXFA_Measurement9SetStringEN5fxcrt18StringViewTemplateIwEE(%class.CXFA_Measurement* nocapture, %"class.fxcrt::StringViewTemplate"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 0
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 1
  store i8 -1, i8* %10, align 4
  br label %64

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 61
  br i1 %15, label %16, label %29

16:                                               ; preds = %11
  %17 = add i64 %6, -1
  %18 = icmp eq i64 %17, 0
  %19 = icmp eq i32* %13, null
  br i1 %18, label %23, label %20

20:                                               ; preds = %16
  br i1 %19, label %26, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds i32, i32* %13, i64 1
  br label %24

23:                                               ; preds = %16
  br i1 %19, label %26, label %24

24:                                               ; preds = %21, %23
  %25 = phi i32* [ %22, %21 ], [ null, %23 ]
  store i32* %25, i32** %12, align 8
  br label %26

26:                                               ; preds = %20, %23, %24
  %27 = phi i32* [ null, %23 ], [ %25, %24 ], [ null, %20 ]
  %28 = phi i64 [ 0, %23 ], [ %17, %24 ], [ 0, %20 ]
  store i64 %28, i64* %5, align 8
  br label %29

29:                                               ; preds = %26, %11
  %30 = phi i64 [ %28, %26 ], [ %6, %11 ]
  %31 = phi i32* [ %27, %26 ], [ %13, %11 ]
  %32 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #7
  store i32 0, i32* %3, align 4
  %33 = trunc i64 %30 to i32
  %34 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %31, i32 %33, i32* nonnull %3) #7
  %35 = call float @llvm.fabs.f32(float %34) #8
  %36 = fcmp one float %35, 0x7FF0000000000000
  %37 = select i1 %36, float %34, float 0.000000e+00
  %38 = load i64, i64* %5, align 8
  %39 = load i32, i32* %3, align 4
  %40 = sext i32 %39 to i64
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 0
  %43 = icmp ult i64 %38, %40
  %44 = or i1 %43, %42
  %45 = load i32*, i32** %12, align 8
  br i1 %44, label %53, label %46

46:                                               ; preds = %29
  %47 = icmp ne i32* %45, null
  %48 = icmp ugt i64 %38, %40
  %49 = and i1 %48, %47
  %50 = getelementptr inbounds i32, i32* %45, i64 %40
  %51 = select i1 %49, i32* %50, i32* null
  %52 = select i1 %49, i64 %41, i64 0
  br label %53

53:                                               ; preds = %29, %46
  %54 = phi i32* [ %51, %46 ], [ null, %29 ]
  %55 = phi i64 [ %52, %46 ], [ 0, %29 ]
  %56 = icmp eq i32* %45, %54
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  store i32* %54, i32** %12, align 8
  br label %58

58:                                               ; preds = %53, %57
  store i64 %55, i64* %5, align 8
  %59 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %60 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %60, i64 16, i1 false)
  %61 = call zeroext i8 @_ZN16CXFA_Measurement17GetUnitFromStringEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %4)
  %62 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 0
  store float %37, float* %62, align 4
  %63 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 1
  store i8 %61, i8* %63, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #7
  br label %64

64:                                               ; preds = %58, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CXFA_MeasurementC2Ev(%class.CXFA_Measurement* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 0
  store float -1.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 1
  store i8 -1, i8* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CXFA_MeasurementC2Ef8XFA_Unit(%class.CXFA_Measurement* nocapture, float, i8 zeroext) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 0
  store float %1, float* %4, align 4
  %5 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 1
  store i8 %2, i8* %5, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare float @_Z12FXSYS_wcstofPKwiPi(i32*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN16CXFA_Measurement17GetUnitFromStringEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %118 [
    i64 2, label %4
    i64 1, label %98
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  %9 = icmp ule i32 %8, 126
  %10 = icmp eq i32 %7, 109
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %26

12:                                               ; preds = %4
  %13 = getelementptr inbounds i32, i32* %6, i64 1
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, -1
  %16 = icmp ule i32 %15, 126
  %17 = icmp eq i32 %14, 109
  %18 = and i1 %16, %17
  br i1 %18, label %118, label %26

19:                                               ; preds = %26
  %20 = getelementptr inbounds i32, i32* %6, i64 1
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -1
  %23 = icmp ule i32 %22, 126
  %24 = icmp eq i32 %21, 116
  %25 = and i1 %23, %24
  br i1 %25, label %118, label %39

26:                                               ; preds = %12, %4
  %27 = load i32, i32* %6, align 4
  %28 = add i32 %27, -1
  %29 = icmp ule i32 %28, 126
  %30 = icmp eq i32 %27, 112
  %31 = and i1 %29, %30
  br i1 %31, label %19, label %39

32:                                               ; preds = %39
  %33 = getelementptr inbounds i32, i32* %6, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, -1
  %36 = icmp ule i32 %35, 126
  %37 = icmp eq i32 %34, 110
  %38 = and i1 %36, %37
  br i1 %38, label %118, label %52

39:                                               ; preds = %19, %26
  %40 = load i32, i32* %6, align 4
  %41 = add i32 %40, -1
  %42 = icmp ule i32 %41, 126
  %43 = icmp eq i32 %40, 105
  %44 = and i1 %42, %43
  br i1 %44, label %32, label %52

45:                                               ; preds = %52
  %46 = getelementptr inbounds i32, i32* %6, i64 1
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, -1
  %49 = icmp ule i32 %48, 126
  %50 = icmp eq i32 %47, 109
  %51 = and i1 %49, %50
  br i1 %51, label %118, label %65

52:                                               ; preds = %32, %39
  %53 = load i32, i32* %6, align 4
  %54 = add i32 %53, -1
  %55 = icmp ule i32 %54, 126
  %56 = icmp eq i32 %53, 99
  %57 = and i1 %55, %56
  br i1 %57, label %45, label %65

58:                                               ; preds = %65
  %59 = getelementptr inbounds i32, i32* %6, i64 1
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, -1
  %62 = icmp ule i32 %61, 126
  %63 = icmp eq i32 %60, 99
  %64 = and i1 %62, %63
  br i1 %64, label %118, label %78

65:                                               ; preds = %45, %52
  %66 = load i32, i32* %6, align 4
  %67 = add i32 %66, -1
  %68 = icmp ule i32 %67, 126
  %69 = icmp eq i32 %66, 112
  %70 = and i1 %68, %69
  br i1 %70, label %58, label %78

71:                                               ; preds = %78
  %72 = getelementptr inbounds i32, i32* %6, i64 1
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %73, -1
  %75 = icmp ule i32 %74, 126
  %76 = icmp eq i32 %73, 112
  %77 = and i1 %75, %76
  br i1 %77, label %118, label %92

78:                                               ; preds = %58, %65
  %79 = load i32, i32* %6, align 4
  %80 = add i32 %79, -1
  %81 = icmp ule i32 %80, 126
  %82 = icmp eq i32 %79, 109
  %83 = and i1 %81, %82
  br i1 %83, label %71, label %92

84:                                               ; preds = %92
  %85 = getelementptr inbounds i32, i32* %6, i64 1
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, -1
  %88 = icmp ule i32 %87, 126
  %89 = icmp eq i32 %86, 109
  %90 = and i1 %88, %89
  %91 = select i1 %90, i8 1, i8 -1
  br label %118

92:                                               ; preds = %71, %78
  %93 = load i32, i32* %6, align 4
  %94 = add i32 %93, -1
  %95 = icmp ule i32 %94, 126
  %96 = icmp eq i32 %93, 101
  %97 = and i1 %95, %96
  br i1 %97, label %84, label %118

98:                                               ; preds = %1
  %99 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  br label %103

101:                                              ; preds = %112
  %102 = icmp eq i64 %117, %3
  br i1 %102, label %118, label %103

103:                                              ; preds = %101, %98
  %104 = phi i64 [ 0, %98 ], [ %117, %101 ]
  %105 = getelementptr inbounds i32, i32* %100, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, -1
  %108 = icmp ugt i32 %107, 126
  br i1 %108, label %118, label %109

109:                                              ; preds = %103
  %110 = icmp eq i64 %104, %3
  br i1 %110, label %111, label %112, !prof !2

111:                                              ; preds = %109
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !4
  unreachable

112:                                              ; preds = %109
  %113 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.16, i64 0, i64 %104
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %106, %115
  %117 = add nuw i64 %104, 1
  br i1 %116, label %101, label %118

118:                                              ; preds = %84, %12, %19, %32, %45, %58, %71, %112, %103, %101, %92, %1
  %119 = phi i8 [ -1, %1 ], [ -1, %92 ], [ -1, %112 ], [ -1, %103 ], [ 0, %101 ], [ 7, %71 ], [ 4, %58 ], [ 5, %45 ], [ 3, %32 ], [ 2, %19 ], [ 6, %12 ], [ %91, %84 ]
  ret i8 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16CXFA_Measurement8ToStringEv(%"class.fxcrt::WideString"* noalias sret, %class.CXFA_Measurement* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  %5 = icmp ult i8 %4, 8
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = sext i8 %4 to i64
  %8 = getelementptr inbounds [8 x i32*], [8 x i32*]* @switch.table._ZNK16CXFA_Measurement8ToStringEv, i64 0, i64 %7
  %9 = load i32*, i32** %8, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32* [ %9, %6 ], [ getelementptr inbounds ([5 x i32], [5 x i32]* @.str.8, i64 0, i64 0), %2 ]
  %12 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %1, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fpext float %13 to double
  tail call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* sret %0, i32* %11, double %14) #7
  ret void
}

declare void @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* sret, i32*, ...) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZNK16CXFA_Measurement6ToUnitE8XFA_Unit(%class.CXFA_Measurement* nocapture readonly, i8 zeroext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, %1
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  switch i8 %6, label %32 [
    i8 2, label %19
    i8 6, label %9
    i8 3, label %11
    i8 5, label %13
    i8 7, label %15
    i8 4, label %17
  ]

9:                                                ; preds = %8
  %10 = fmul float %4, 0x4006AD5AC0000000
  br label %19

11:                                               ; preds = %8
  %12 = fmul float %4, 7.200000e+01
  br label %19

13:                                               ; preds = %8
  %14 = fmul float %4, 0x403C58B160000000
  br label %19

15:                                               ; preds = %8
  %16 = fmul float %4, 0x3F50624DE0000000
  br label %19

17:                                               ; preds = %8
  %18 = fmul float %4, 1.200000e+01
  br label %19

19:                                               ; preds = %17, %15, %13, %11, %9, %8
  %20 = phi float [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %4, %8 ]
  switch i8 %1, label %31 [
    i8 2, label %32
    i8 6, label %21
    i8 3, label %23
    i8 5, label %25
    i8 7, label %27
    i8 4, label %29
  ]

21:                                               ; preds = %19
  %22 = fdiv float %20, 0x4006AD5AC0000000
  br label %32

23:                                               ; preds = %19
  %24 = fdiv float %20, 7.200000e+01
  br label %32

25:                                               ; preds = %19
  %26 = fdiv float %20, 0x403C58B160000000
  br label %32

27:                                               ; preds = %19
  %28 = fdiv float %20, 0x3F50624DE0000000
  br label %32

29:                                               ; preds = %19
  %30 = fdiv float %20, 1.200000e+01
  br label %32

31:                                               ; preds = %19
  br label %32

32:                                               ; preds = %19, %2, %21, %23, %25, %27, %29, %31, %8
  %33 = phi float [ 0.000000e+00, %8 ], [ 0.000000e+00, %31 ], [ %20, %19 ], [ %22, %21 ], [ %24, %23 ], [ %26, %25 ], [ %28, %27 ], [ %30, %29 ], [ %4, %2 ]
  ret float %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16CXFA_Measurement14ToUnitInternalE8XFA_UnitPf(%class.CXFA_Measurement* nocapture readonly, i8 zeroext, float*) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 0
  %5 = load float, float* %4, align 4
  store float %5, float* %2, align 4
  %6 = getelementptr inbounds %class.CXFA_Measurement, %class.CXFA_Measurement* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, %1
  br i1 %8, label %36, label %9

9:                                                ; preds = %3
  switch i8 %7, label %20 [
    i8 2, label %23
    i8 6, label %10
    i8 3, label %12
    i8 5, label %14
    i8 7, label %16
    i8 4, label %18
  ]

10:                                               ; preds = %9
  %11 = fmul float %5, 0x4006AD5AC0000000
  br label %21

12:                                               ; preds = %9
  %13 = fmul float %5, 7.200000e+01
  br label %21

14:                                               ; preds = %9
  %15 = fmul float %5, 0x403C58B160000000
  br label %21

16:                                               ; preds = %9
  %17 = fmul float %5, 0x3F50624DE0000000
  br label %21

18:                                               ; preds = %9
  %19 = fmul float %5, 1.200000e+01
  br label %21

20:                                               ; preds = %9
  store float 0.000000e+00, float* %2, align 4
  br label %36

21:                                               ; preds = %10, %12, %14, %16, %18
  %22 = phi float [ %19, %18 ], [ %17, %16 ], [ %15, %14 ], [ %13, %12 ], [ %11, %10 ]
  store float %22, float* %2, align 4
  br label %23

23:                                               ; preds = %21, %9
  %24 = phi float [ %5, %9 ], [ %22, %21 ]
  switch i8 %1, label %35 [
    i8 2, label %36
    i8 6, label %25
    i8 3, label %27
    i8 5, label %29
    i8 7, label %31
    i8 4, label %33
  ]

25:                                               ; preds = %23
  %26 = fdiv float %24, 0x4006AD5AC0000000
  store float %26, float* %2, align 4
  br label %36

27:                                               ; preds = %23
  %28 = fdiv float %24, 7.200000e+01
  store float %28, float* %2, align 4
  br label %36

29:                                               ; preds = %23
  %30 = fdiv float %24, 0x403C58B160000000
  store float %30, float* %2, align 4
  br label %36

31:                                               ; preds = %23
  %32 = fdiv float %24, 0x3F50624DE0000000
  store float %32, float* %2, align 4
  br label %36

33:                                               ; preds = %23
  %34 = fdiv float %24, 1.200000e+01
  store float %34, float* %2, align 4
  br label %36

35:                                               ; preds = %23
  br label %36

36:                                               ; preds = %23, %3, %35, %33, %31, %29, %27, %25, %20
  %37 = phi i1 [ false, %20 ], [ false, %35 ], [ true, %33 ], [ true, %31 ], [ true, %29 ], [ true, %27 ], [ true, %25 ], [ true, %3 ], [ true, %23 ]
  ret i1 %37
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i32 -2143846339}
!4 = !{i32 -2143846318}
