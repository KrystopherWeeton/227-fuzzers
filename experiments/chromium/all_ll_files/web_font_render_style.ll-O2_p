; ModuleID = '../../third_party/blink/renderer/platform/fonts/web_font_render_style.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/web_font_render_style.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.SkFont = type <{ %class.sk_sp.6, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.6 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }

@_ZN5blink12_GLOBAL__N_114g_skia_hintingE = internal unnamed_addr global i32 2, align 4
@_ZN5blink12_GLOBAL__N_120g_use_skia_auto_hintE = internal unnamed_addr global i8 1, align 1
@_ZN5blink12_GLOBAL__N_118g_use_skia_bitmapsE = internal unnamed_addr global i8 1, align 1
@_ZN5blink12_GLOBAL__N_121g_use_skia_anti_aliasE = internal unnamed_addr global i8 1, align 1
@_ZN5blink12_GLOBAL__N_129g_use_skia_subpixel_renderingE = internal unnamed_addr global i8 0, align 1
@_ZN5blink15FontDescription30use_subpixel_text_positioning_E = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WebFontRenderStyle18SetSkiaFontManagerE5sk_spI9SkFontMgrE(%class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %4 = bitcast %class.sk_sp* %0 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %3, align 8
  %6 = bitcast %class.sk_sp* %2 to i64*
  store i64 %5, i64* %6, align 8
  call void @_ZN5blink9FontCache14SetFontManagerE5sk_spI9SkFontMgrE(%class.sk_sp* nonnull %2) #6
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %8 = load %class.SkFontMgr*, %class.SkFontMgr** %7, align 8
  %9 = icmp eq %class.SkFontMgr* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkFontMgr* %8 to %class.SkRefCntBase*
  %16 = bitcast %class.SkFontMgr* %8 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  call void %19(%class.SkRefCntBase* nonnull %15) #6
  br label %20

20:                                               ; preds = %1, %10, %14
  ret void
}

declare void @_ZN5blink9FontCache14SetFontManagerE5sk_spI9SkFontMgrE(%class.sk_sp*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18WebFontRenderStyle10SetHintingE13SkFontHinting(i32) local_unnamed_addr #2 align 2 {
  store i32 %0, i32* @_ZN5blink12_GLOBAL__N_114g_skia_hintingE, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18WebFontRenderStyle11SetAutoHintEb(i1 zeroext) local_unnamed_addr #2 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN5blink12_GLOBAL__N_120g_use_skia_auto_hintE, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18WebFontRenderStyle13SetUseBitmapsEb(i1 zeroext) local_unnamed_addr #2 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN5blink12_GLOBAL__N_118g_use_skia_bitmapsE, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18WebFontRenderStyle12SetAntiAliasEb(i1 zeroext) local_unnamed_addr #2 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN5blink12_GLOBAL__N_121g_use_skia_anti_aliasE, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18WebFontRenderStyle20SetSubpixelRenderingEb(i1 zeroext) local_unnamed_addr #2 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN5blink12_GLOBAL__N_129g_use_skia_subpixel_renderingE, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18WebFontRenderStyle22SetSubpixelPositioningEb(i1 zeroext) local_unnamed_addr #2 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN5blink15FontDescription30use_subpixel_text_positioning_E, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WebFontRenderStyle19SetSystemFontFamilyERKNS_9WebStringE(%"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* %0) #6
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"** %5, align 8
  call void @_ZN5blink9FontCache19SetSystemFontFamilyERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #6
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #6
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6
  ret void
}

declare void @_ZN5blink9FontCache19SetSystemFontFamilyERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i56 @_ZN5blink18WebFontRenderStyle10GetDefaultEv() local_unnamed_addr #4 align 2 {
  %1 = load i32, i32* @_ZN5blink12_GLOBAL__N_114g_skia_hintingE, align 4
  %2 = load i8, i8* @_ZN5blink12_GLOBAL__N_118g_use_skia_bitmapsE, align 1, !range !2
  %3 = load i8, i8* @_ZN5blink12_GLOBAL__N_120g_use_skia_auto_hintE, align 1, !range !2
  %4 = load i8, i8* @_ZN5blink12_GLOBAL__N_121g_use_skia_anti_aliasE, align 1, !range !2
  %5 = load i8, i8* @_ZN5blink12_GLOBAL__N_129g_use_skia_subpixel_renderingE, align 1, !range !2
  %6 = load i8, i8* @_ZN5blink15FontDescription30use_subpixel_text_positioning_E, align 1, !range !2
  %7 = zext i8 %6 to i56
  %8 = shl nuw nsw i56 %7, 48
  %9 = zext i8 %5 to i56
  %10 = shl nuw nsw i56 %9, 40
  %11 = zext i8 %4 to i56
  %12 = shl nuw nsw i56 %11, 32
  %13 = shl i32 %1, 24
  %14 = zext i8 %3 to i56
  %15 = shl nuw nsw i56 %14, 8
  %16 = zext i8 %2 to i56
  %17 = or i32 %13, 131072
  %18 = zext i32 %17 to i56
  %19 = or i56 %18, %16
  %20 = or i56 %19, %15
  %21 = or i56 %20, %12
  %22 = or i56 %21, %10
  %23 = or i56 %22, %8
  ret i56 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18WebFontRenderStyle12OverrideWithERKS0_(%"struct.blink::WebFontRenderStyle"* nocapture, %"struct.blink::WebFontRenderStyle"* nocapture readonly dereferenceable(7)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %1, i64 0, i32 4
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 2
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 4
  store i8 %4, i8* %7, align 1
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 2
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 2
  store i8 %10, i8* %13, align 1
  %14 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %1, i64 0, i32 3
  %15 = load i8, i8* %14, align 1
  %16 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 3
  store i8 %15, i8* %16, align 1
  br label %17

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %1, i64 0, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 2
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 0
  store i8 %19, i8* %22, align 1
  br label %23

23:                                               ; preds = %17, %21
  %24 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %1, i64 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 2
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 1
  store i8 %25, i8* %28, align 1
  br label %29

29:                                               ; preds = %23, %27
  %30 = load i8, i8* %3, align 1
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 4
  store i8 %30, i8* %33, align 1
  br label %34

34:                                               ; preds = %29, %32
  %35 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %1, i64 0, i32 5
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 2
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 5
  store i8 %36, i8* %39, align 1
  br label %40

40:                                               ; preds = %34, %38
  %41 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %1, i64 0, i32 6
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 2
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 6
  store i8 %42, i8* %45, align 1
  br label %46

46:                                               ; preds = %40, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18WebFontRenderStyle13ApplyToSkFontEP6SkFontf(%"struct.blink::WebFontRenderStyle"* nocapture readonly, %class.SkFont*, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  tail call void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont* %1, i32 %6) #6
  %7 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  tail call void @_ZN6SkFont18setEmbeddedBitmapsEb(%class.SkFont* %1, i1 zeroext %9) #6
  %10 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  tail call void @_ZN6SkFont19setForceAutoHintingEb(%class.SkFont* %1, i1 zeroext %12) #6
  %13 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 5
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 1, i32 2
  br label %21

21:                                               ; preds = %3, %16
  %22 = phi i32 [ %20, %16 ], [ 0, %3 ]
  tail call void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont* %1, i32 %22) #6
  %23 = tail call zeroext i1 @_ZN5blink14WebTestSupport16IsRunningWebTestEv() #6
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = icmp ne i8 %5, 3
  %26 = fcmp ogt float %2, 1.000000e+00
  %27 = or i1 %26, %25
  br i1 %27, label %32, label %28

28:                                               ; preds = %21, %24
  %29 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 6
  %30 = load i8, i8* %29, align 1
  %31 = icmp ne i8 %30, 0
  br label %32

32:                                               ; preds = %28, %24
  %33 = phi i1 [ true, %24 ], [ %31, %28 ]
  tail call void @_ZN6SkFont11setSubpixelEb(%class.SkFont* %1, i1 zeroext %33) #6
  %34 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %0, i64 0, i32 6
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 1
  tail call void @_ZN6SkFont16setLinearMetricsEb(%class.SkFont* %1, i1 zeroext %36) #6
  ret void
}

declare void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont*, i32) local_unnamed_addr #1

declare void @_ZN6SkFont18setEmbeddedBitmapsEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN6SkFont19setForceAutoHintingEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14WebTestSupport16IsRunningWebTestEv() local_unnamed_addr #1

declare void @_ZN6SkFont11setSubpixelEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN6SkFont16setLinearMetricsEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
