; ModuleID = '../../third_party/crashpad/crashpad/snapshot/minidump/thread_snapshot_minidump.cc'
source_filename = "../../third_party/crashpad/crashpad/snapshot/minidump/thread_snapshot_minidump.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crashpad::internal::ThreadSnapshotMinidump" = type { %"class.crashpad::ThreadSnapshot", %struct.MINIDUMP_THREAD, %"class.crashpad::internal::MinidumpContextConverter", %"class.crashpad::internal::MemorySnapshotMinidump", [0 x i8] }
%"class.crashpad::ThreadSnapshot" = type { i32 (...)** }
%struct.MINIDUMP_THREAD = type { i32, i32, i32, i32, i64, %struct.MINIDUMP_MEMORY_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR }
%struct.MINIDUMP_MEMORY_DESCRIPTOR = type { i64, %struct.MINIDUMP_LOCATION_DESCRIPTOR }
%struct.MINIDUMP_LOCATION_DESCRIPTOR = type { i32, i32 }
%"class.crashpad::internal::MinidumpContextConverter" = type { %"struct.crashpad::CPUContext", %"class.std::__1::vector", [0 x i8] }
%"struct.crashpad::CPUContext" = type { i32, %union.anon }
%union.anon = type { %"struct.crashpad::CPUContextX86"* }
%"struct.crashpad::CPUContextX86" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, %"struct.crashpad::CPUContextX86::Fxsave", i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.crashpad::CPUContextX86::Fxsave" = type { i16, i16, i8, i8, i16, i32, i16, i16, i32, i16, i16, i32, i32, [8 x %"union.crashpad::CPUContextX86::X87OrMMXRegister"], [8 x [16 x i8]], [176 x i8], [48 x i8] }
%"union.crashpad::CPUContextX86::X87OrMMXRegister" = type { %struct.anon }
%struct.anon = type { [10 x i8], [6 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.crashpad::internal::MemorySnapshotMinidump" = type { %"class.crashpad::MemorySnapshot", i64, %"class.std::__1::vector", [0 x i8] }
%"class.crashpad::MemorySnapshot" = type { i32 (...)** }
%"class.crashpad::FileReaderInterface" = type { %"class.crashpad::FileSeekerInterface" }
%"class.crashpad::FileSeekerInterface" = type { i32 (...)** }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.crashpad::MemorySnapshot"**, %"class.crashpad::MemorySnapshot"**, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.crashpad::MemorySnapshot"** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZTVN8crashpad8internal22ThreadSnapshotMinidumpE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZN8crashpad8internal22ThreadSnapshotMinidumpD2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZN8crashpad8internal22ThreadSnapshotMinidumpD0Ev to i8*), i8* bitcast (%"struct.crashpad::CPUContext"* (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZNK8crashpad8internal22ThreadSnapshotMinidump7ContextEv to i8*), i8* bitcast (%"class.crashpad::MemorySnapshot"* (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZNK8crashpad8internal22ThreadSnapshotMinidump5StackEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZNK8crashpad8internal22ThreadSnapshotMinidump8ThreadIDEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZNK8crashpad8internal22ThreadSnapshotMinidump12SuspendCountEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZNK8crashpad8internal22ThreadSnapshotMinidump8PriorityEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZNK8crashpad8internal22ThreadSnapshotMinidump25ThreadSpecificDataAddressEv to i8*), i8* bitcast (void (%"class.std::__1::vector.11"*, %"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZNK8crashpad8internal22ThreadSnapshotMinidump11ExtraMemoryEv to i8*)] }, align 8

@_ZN8crashpad8internal22ThreadSnapshotMinidumpC1Ev = hidden unnamed_addr alias void (%"class.crashpad::internal::ThreadSnapshotMinidump"*), void (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZN8crashpad8internal22ThreadSnapshotMinidumpC2Ev
@_ZN8crashpad8internal22ThreadSnapshotMinidumpD1Ev = hidden unnamed_addr alias void (%"class.crashpad::internal::ThreadSnapshotMinidump"*), void (%"class.crashpad::internal::ThreadSnapshotMinidump"*)* @_ZN8crashpad8internal22ThreadSnapshotMinidumpD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal22ThreadSnapshotMinidumpC2Ev(%"class.crashpad::internal::ThreadSnapshotMinidump"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8crashpad8internal22ThreadSnapshotMinidumpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 1
  %4 = bitcast %struct.MINIDUMP_THREAD* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 2
  tail call void @_ZN8crashpad8internal24MinidumpContextConverterC1Ev(%"class.crashpad::internal::MinidumpContextConverter"* %5) #9
  %6 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 3
  tail call void @_ZN8crashpad8internal22MemorySnapshotMinidumpC1Ev(%"class.crashpad::internal::MemorySnapshotMinidump"* %6) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8crashpad8internal24MinidumpContextConverterC1Ev(%"class.crashpad::internal::MinidumpContextConverter"*) unnamed_addr #2

declare void @_ZN8crashpad8internal22MemorySnapshotMinidumpC1Ev(%"class.crashpad::internal::MemorySnapshotMinidump"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal22ThreadSnapshotMinidumpD2Ev(%"class.crashpad::internal::ThreadSnapshotMinidump"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8crashpad8internal22ThreadSnapshotMinidumpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 3
  tail call void @_ZN8crashpad8internal22MemorySnapshotMinidumpD1Ev(%"class.crashpad::internal::MemorySnapshotMinidump"* %3) #9
  %4 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  tail call void @_ZdlPv(i8* nonnull %5) #10
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8crashpad8internal22MemorySnapshotMinidumpD1Ev(%"class.crashpad::internal::MemorySnapshotMinidump"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal22ThreadSnapshotMinidumpD0Ev(%"class.crashpad::internal::ThreadSnapshotMinidump"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8crashpad8internal22ThreadSnapshotMinidumpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 3
  tail call void @_ZN8crashpad8internal22MemorySnapshotMinidumpD1Ev(%"class.crashpad::internal::MemorySnapshotMinidump"* %3) #9
  %4 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  tail call void @_ZdlPv(i8* nonnull %5) #10
  br label %11

11:                                               ; preds = %1, %7
  %12 = bitcast %"class.crashpad::internal::ThreadSnapshotMinidump"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad8internal22ThreadSnapshotMinidump10InitializeEPNS_19FileReaderInterfaceEjNS_15CPUArchitectureE(%"class.crashpad::internal::ThreadSnapshotMinidump"*, %"class.crashpad::FileReaderInterface"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #9
  %9 = bitcast %"class.crashpad::FileReaderInterface"* %1 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr i8, i8* %10, i64 -32
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.crashpad::FileReaderInterface"* %1 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = bitcast i8* %15 to %"class.crashpad::FileSeekerInterface"*
  %17 = zext i32 %2 to i64
  %18 = tail call zeroext i1 @_ZN8crashpad19FileSeekerInterface7SeekSetEl(%"class.crashpad::FileSeekerInterface"* %16, i64 %17) #9
  br i1 %18, label %19, label %56

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 1
  %21 = bitcast %struct.MINIDUMP_THREAD* %20 to i8*
  %22 = tail call zeroext i1 @_ZN8crashpad19FileReaderInterface11ReadExactlyEPvm(%"class.crashpad::FileReaderInterface"* %1, i8* %21, i64 48) #9
  br i1 %22, label %23, label %56

23:                                               ; preds = %19
  %24 = load i8*, i8** %9, align 8
  %25 = getelementptr i8, i8* %24, i64 -32
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %14, i64 %27
  %29 = bitcast i8* %28 to %"class.crashpad::FileSeekerInterface"*
  %30 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 1, i32 6, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = tail call zeroext i1 @_ZN8crashpad19FileSeekerInterface7SeekSetEl(%"class.crashpad::FileSeekerInterface"* %29, i64 %32) #9
  br i1 %33, label %34, label %56

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 1, i32 6, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  %40 = bitcast i8** %8 to i64*
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* nonnull %5, i64 %39) #9
  %41 = load i8*, i8** %7, align 8
  %42 = load i64, i64* %40, align 8
  br label %43

43:                                               ; preds = %34, %38
  %44 = phi i64 [ %42, %38 ], [ 0, %34 ]
  %45 = phi i8* [ %41, %38 ], [ null, %34 ]
  %46 = ptrtoint i8* %45 to i64
  %47 = sub i64 %44, %46
  %48 = call zeroext i1 @_ZN8crashpad19FileReaderInterface11ReadExactlyEPvm(%"class.crashpad::FileReaderInterface"* %1, i8* %45, i64 %47) #9
  br i1 %48, label %49, label %56

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 2
  %51 = call zeroext i1 @_ZN8crashpad8internal24MinidumpContextConverter10InitializeENS_15CPUArchitectureERKNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.crashpad::internal::MinidumpContextConverter"* %50, i32 %3, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #9
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = add i32 %2, 24
  %54 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 3
  %55 = call zeroext i1 @_ZN8crashpad8internal22MemorySnapshotMinidump10InitializeEPNS_19FileReaderInterfaceEj(%"class.crashpad::internal::MemorySnapshotMinidump"* %54, %"class.crashpad::FileReaderInterface"* %1, i32 %53) #9
  br label %56

56:                                               ; preds = %49, %43, %23, %19, %4, %52
  %57 = phi i1 [ %55, %52 ], [ false, %4 ], [ false, %19 ], [ false, %23 ], [ false, %43 ], [ false, %49 ]
  %58 = load i8*, i8** %7, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i8* %58 to i64
  %62 = bitcast i8** %8 to i64*
  store i64 %61, i64* %62, align 8
  call void @_ZdlPv(i8* nonnull %58) #10
  br label %63

63:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN8crashpad19FileSeekerInterface7SeekSetEl(%"class.crashpad::FileSeekerInterface"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN8crashpad19FileReaderInterface11ReadExactlyEPvm(%"class.crashpad::FileReaderInterface"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN8crashpad8internal24MinidumpContextConverter10InitializeENS_15CPUArchitectureERKNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.crashpad::internal::MinidumpContextConverter"*, i32, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN8crashpad8internal22MemorySnapshotMinidump10InitializeEPNS_19FileReaderInterfaceEj(%"class.crashpad::internal::MemorySnapshotMinidump"*, %"class.crashpad::FileReaderInterface"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8crashpad8internal22ThreadSnapshotMinidump8ThreadIDEv(%"class.crashpad::internal::ThreadSnapshotMinidump"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = zext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8crashpad8internal22ThreadSnapshotMinidump12SuspendCountEv(%"class.crashpad::internal::ThreadSnapshotMinidump"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8crashpad8internal22ThreadSnapshotMinidump25ThreadSpecificDataAddressEv(%"class.crashpad::internal::ThreadSnapshotMinidump"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 1, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8crashpad8internal22ThreadSnapshotMinidump8PriorityEv(%"class.crashpad::internal::ThreadSnapshotMinidump"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 1, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"struct.crashpad::CPUContext"* @_ZNK8crashpad8internal22ThreadSnapshotMinidump7ContextEv(%"class.crashpad::internal::ThreadSnapshotMinidump"* readnone) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 2, i32 0
  ret %"struct.crashpad::CPUContext"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.crashpad::MemorySnapshot"* @_ZNK8crashpad8internal22ThreadSnapshotMinidump5StackEv(%"class.crashpad::internal::ThreadSnapshotMinidump"* readnone) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ThreadSnapshotMinidump", %"class.crashpad::internal::ThreadSnapshotMinidump"* %0, i64 0, i32 3, i32 0
  ret %"class.crashpad::MemorySnapshot"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8crashpad8internal22ThreadSnapshotMinidump11ExtraMemoryEv(%"class.std::__1::vector.11"* noalias nocapture sret, %"class.crashpad::internal::ThreadSnapshotMinidump"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.11"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
