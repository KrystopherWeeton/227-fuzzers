; ModuleID = '../../third_party/skia/src/core/SkGlyphRunPainter.cpp'
source_filename = "../../third_party/skia/src/core/SkGlyphRunPainter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.34, %class.sk_sp.256, %class.sk_sp.35, %class.sk_sp.257, %class.sk_sp.258, %struct.SkRGBA4f, float, float, %union.anon.259, [4 x i8] }>
%class.sk_sp.34 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.256 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.35 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.257 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.258 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.259 = type { %struct.anon.260 }
%struct.anon.260 = type { i32 }
%class.SkStrikeSpec = type <{ %class.SkAutoDescriptor, %class.sk_sp.35, %class.sk_sp.34, %class.sk_sp.33, float, [4 x i8] }>
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%class.sk_sp.33 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray, %class.SkAutoTMalloc }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon }
%union.anon = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.19, %class.SkSTArray, %class.SkSTArray.24 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.18" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.18" = type { %struct.SkPoint* }
%class.SkZip.19 = type { %"class.std::__1::tuple.20", i64 }
%"class.std::__1::tuple.20" = type { %"struct.std::__1::__tuple_impl.21" }
%"struct.std::__1::__tuple_impl.21" = type { %"class.std::__1::__tuple_leaf.22", %"class.std::__1::__tuple_leaf.23" }
%"class.std::__1::__tuple_leaf.22" = type { i16* }
%"class.std::__1::__tuple_leaf.23" = type { %struct.SkPoint* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { i16*, i64 }
%class.SkSTArray.24 = type { %class.SkAlignedSTStorage.25, %class.SkTArray.26 }
%class.SkAlignedSTStorage.25 = type { [32 x i8] }
%class.SkTArray.26 = type { %struct.SkPoint*, i64 }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.27, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.27 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.GrColorInfo = type { %class.sk_sp.28, %class.sk_sp.29, i32, i32 }
%class.sk_sp.28 = type { %class.SkColorSpace* }
%class.sk_sp.29 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.246, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.65", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.240" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.64 }
%class.sk_sp.64 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.68, %class.SkTHashMap.70, %class.SkTHashMap.79, %class.SkTArray.88, %class.SkTArray.90, i32, i8, [3 x i8] }>
%class.SkTArray.68 = type { %"class.std::__1::unique_ptr.69"*, i64 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.90, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.91 }
%class.sk_sp.91 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.70 = type { %class.SkTHashTable.71 }
%class.SkTHashTable.71 = type { i32, i32, %class.SkAutoTArray.72 }
%class.SkAutoTArray.72 = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.79 = type { %class.SkTHashTable.80 }
%class.SkTHashTable.80 = type { i32, i32, %class.SkAutoTArray.81 }
%class.SkAutoTArray.81 = type { %"class.std::__1::unique_ptr.82" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.303" }
%"struct.std::__1::pair.303" = type { i32, %class.SkTArray.304* }
%class.SkTArray.304 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.88 = type { %"class.std::__1::unique_ptr.89"*, i64 }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.304, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.90 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.104 }
%class.SkFibBlockSizes.104 = type { i32 }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.111, %class.SkTArray.120, %class.GrOpsTask*, %class.SkSTArray.205, %class.SkSTArray.208, %"class.std::__1::unique_ptr.210", %class.sk_sp.226, %class.GrTokenTracker, i8, i8, %class.SkTArray.227, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.111 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.112", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.115, i8, [7 x i8] }>
%class.sk_sp.115 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.116, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.116 = type { i32 }
%class.SkTArray.120 = type { %class.sk_sp.121*, i64 }
%class.sk_sp.121 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.122, %class.SkTArray.172, i32, i32, %class.SkSTArray.179, %class.SkSTArray.179, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.122 = type { %class.SkAlignedSTStorage.123, %class.SkTArray.124 }
%class.SkAlignedSTStorage.123 = type { [8 x i8] }
%class.SkTArray.124 = type { %class.sk_sp.125*, i64 }
%class.sk_sp.125 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.126, %class.sk_sp.127, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.167" }
%class.SkNVRefCnt.126 = type { %"struct.std::__1::atomic" }
%class.sk_sp.127 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.131 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.128, [4 x i8] }>
%union.anon.128 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.129, i8* }
%class.sk_sp.129 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.130, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.130 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.131 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.132, void (i8*)*, i8* }
%class.SkNVRefCnt.132 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.133, i32, [4 x i8] }
%union.anon.133 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.127, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.164, %class.sk_sp.166, %class.sk_sp.166 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.135, %class.SkTMultiMap, %class.SkTDynamicHash.144, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.155, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.135 }
%class.SkTDArray.135 = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.136 }
%class.SkTHashTable.136 = type { i32, i32, %class.SkAutoTArray.137 }
%class.SkAutoTArray.137 = type { %"class.std::__1::unique_ptr.138" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.144 = type { %class.SkTHashTable.145 }
%class.SkTHashTable.145 = type { i32, i32, %class.SkAutoTArray.146 }
%class.SkAutoTArray.146 = type { %"class.std::__1::unique_ptr.147" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.153, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.153 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.154, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.154 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.155 = type { %class.SkTHashTable.156 }
%class.SkTHashTable.156 = type { i32, i32, %class.SkAutoTArray.157 }
%class.SkAutoTArray.157 = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.164 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.165, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.165 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.166 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i64 }
%class.SkTArray.172 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.173", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.179 = type { %class.SkAlignedSTStorage.180, %class.SkTArray.181 }
%class.SkAlignedSTStorage.180 = type { [8 x i8] }
%class.SkTArray.181 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.182, %class.sk_sp.202, %class.SkTArray.204, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.182 = type { %class.SkAlignedSTStorage.183, %class.SkTArray.184 }
%class.SkAlignedSTStorage.183 = type { [2000 x i8] }
%class.SkTArray.184 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.185", %class.GrOp* }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.185", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.193" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.191 }
%union.anon.191 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.192, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.192 = type { i32 }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.196, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.196 = type { %class.SkAlignedSTStorage.197, %class.SkTArray.198 }
%class.SkAlignedSTStorage.197 = type { [8 x i8] }
%class.SkTArray.198 = type { %"class.std::__1::unique_ptr.193"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.202 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.203, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.203 = type { %"struct.std::__1::atomic" }
%class.SkTArray.204 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.205 = type { %class.SkAlignedSTStorage.206, %class.SkTArray.207 }
%class.SkAlignedSTStorage.206 = type { [32 x i8] }
%class.SkTArray.207 = type { i32*, i64 }
%class.SkSTArray.208 = type { %class.SkAlignedSTStorage.209, %class.SkTArray.120 }
%class.SkAlignedSTStorage.209 = type { [32 x i8] }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.213, %"class.std::__1::unique_ptr.217", %class.GrPathRenderer* }
%class.SkSTArray.213 = type { %class.SkAlignedSTStorage.214, %class.SkTArray.215 }
%class.SkAlignedSTStorage.214 = type { [64 x i8] }
%class.SkTArray.215 = type { %class.sk_sp.216*, i64 }
%class.sk_sp.216 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.226 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.227 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.228, i32, %class.GrRenderTask** }
%class.SkTHashMap.228 = type { %class.SkTHashTable.229 }
%class.SkTHashTable.229 = type { i32, i32, %class.SkAutoTArray.230 }
%class.SkAutoTArray.230 = type { %"class.std::__1::unique_ptr.231" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %class.GrProxyProvider* }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.125, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.246 = type { %class.GrOpsTask* }
%"struct.SkGlyphRunListPainter::ScopedBuffers" = type { %class.SkGlyphRunListPainter* }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.56, i64, i64, i32, i32 }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.50", i64, i8, [7 x i8] }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr.30", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap, %"class.std::__1::vector", %class.SkArenaAlloc }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp.33, %class.sk_sp.34, %class.sk_sp.35, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.SkTMaskPreBlend = type { %class.sk_sp.36, i8*, i8*, i8* }
%class.sk_sp.36 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray.40 }
%class.SkAutoTArray.40 = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.310" }
%"struct.std::__1::pair.310" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %class.SkGlyph** }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%class.SkTHashTable.56 = type { i32, i32, %class.SkAutoTArray.57 }
%class.SkAutoTArray.57 = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkGlyphRunList = type { %class.SkSpan, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan = type { %class.SkGlyphRun*, i64 }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan.247, %class.SkSpan.248, %class.SkSpan.249, %class.SkFont }
%class.SkSpan.247 = type { i8*, i64 }
%class.SkSpan.248 = type { i32*, i64 }
%class.SkSpan.249 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.33, float, float, float, i8, i8, i8, i8 }>
%class.SkTextBlob = type { %class.SkNVRefCnt.250, %struct.SkRect, i32, %"struct.std::__1::atomic.251" }
%class.SkNVRefCnt.250 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.251" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__atomic_base.253" }
%"struct.std::__1::__atomic_base.253" = type { %"struct.std::__1::__cxx_atomic_impl.254" }
%"struct.std::__1::__cxx_atomic_impl.254" = type { %"struct.std::__1::__cxx_atomic_base_impl.255" }
%"struct.std::__1::__cxx_atomic_base_impl.255" = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%"class.SkGlyphRunListPainter::BitmapDevicePainter" = type { i32 (...)** }
%class.sk_sp.261 = type { %"class.SkStrikeCache::Strike"* }
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { %struct.SkPoint*, %struct.SkPoint*, %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%class.SkBulkGlyphMetrics = type { %class.SkAutoSTArray, %class.sk_sp.261 }
%class.SkAutoSTArray = type { i32, %class.SkGlyph**, [160 x i8] }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%class.SkBitmap = type { %class.sk_sp.287, %class.SkPixmap, %class.sk_sp.288 }
%class.sk_sp.287 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.28, i32, i32 }
%class.sk_sp.288 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%class.GrSDFTControl = type <{ float, float, i8, [3 x i8] }>
%class.SkGlyphRunPainterInterface = type { i32 (...)** }
%"class.std::__1::tuple.289" = type { %"struct.std::__1::__tuple_impl.290" }
%"struct.std::__1::__tuple_impl.290" = type { %"class.std::__1::__tuple_leaf.291", %"class.std::__1::__tuple_leaf.292", %"class.std::__1::__tuple_leaf.293" }
%"class.std::__1::__tuple_leaf.291" = type { %class.SkStrikeSpec }
%"class.std::__1::__tuple_leaf.292" = type { float }
%"class.std::__1::__tuple_leaf.293" = type { float }
%class.SkZip.279 = type { %"class.std::__1::tuple.280", i64 }
%"class.std::__1::tuple.280" = type { %"struct.std::__1::__tuple_impl.281" }
%"struct.std::__1::__tuple_impl.281" = type { %"class.std::__1::__tuple_leaf.282", %"class.std::__1::__tuple_leaf.23" }
%"class.std::__1::__tuple_leaf.282" = type { %class.SkGlyphVariant* }

@__const._ZN21SkGlyphRunListPainter19drawForBitmapDeviceERK14SkGlyphRunListRK7SkPaintRK8SkMatrixPKNS_19BitmapDevicePainterE.pathPaint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.34 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.256 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.35 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.257 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.258 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.259 { %struct.anon.260 { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc.strikeSpec.4 = private unnamed_addr constant %class.SkStrikeSpec <{ %class.SkAutoDescriptor { %class.SkDescriptor* inttoptr (i64 -6148914691236517206 to %class.SkDescriptor*), [120 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.sk_sp.35 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.34 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.33 { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorType20SkScalerContextFlagsP28SkStrikeForGPUCacheInterface = hidden unnamed_addr alias void (%class.SkGlyphRunListPainter*, %class.SkSurfaceProps*, i32, i32, %class.SkStrikeForGPUCacheInterface*), void (%class.SkGlyphRunListPainter*, %class.SkSurfaceProps*, i32, i32, %class.SkStrikeForGPUCacheInterface*)* @_ZN21SkGlyphRunListPainterC2ERK14SkSurfaceProps11SkColorType20SkScalerContextFlagsP28SkStrikeForGPUCacheInterface
@_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface = hidden unnamed_addr alias void (%class.SkGlyphRunListPainter*, %class.SkSurfaceProps*, i32, %class.SkColorSpace*, %class.SkStrikeForGPUCacheInterface*), void (%class.SkGlyphRunListPainter*, %class.SkSurfaceProps*, i32, %class.SkColorSpace*, %class.SkStrikeForGPUCacheInterface*)* @_ZN21SkGlyphRunListPainterC2ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface
@_ZN21SkGlyphRunListPainterC1ERK14SkSurfacePropsRK11GrColorInfo = hidden unnamed_addr alias void (%class.SkGlyphRunListPainter*, %class.SkSurfaceProps*, %class.GrColorInfo*), void (%class.SkGlyphRunListPainter*, %class.SkSurfaceProps*, %class.GrColorInfo*)* @_ZN21SkGlyphRunListPainterC2ERK14SkSurfacePropsRK11GrColorInfo
@_ZN21SkGlyphRunListPainterC1ERK20GrSurfaceDrawContext = hidden unnamed_addr alias void (%class.SkGlyphRunListPainter*, %class.GrSurfaceDrawContext*), void (%class.SkGlyphRunListPainter*, %class.GrSurfaceDrawContext*)* @_ZN21SkGlyphRunListPainterC2ERK20GrSurfaceDrawContext
@_ZN21SkGlyphRunListPainter13ScopedBuffersC1EPS_m = hidden unnamed_addr alias void (%"struct.SkGlyphRunListPainter::ScopedBuffers"*, %class.SkGlyphRunListPainter*, i64), void (%"struct.SkGlyphRunListPainter::ScopedBuffers"*, %class.SkGlyphRunListPainter*, i64)* @_ZN21SkGlyphRunListPainter13ScopedBuffersC2EPS_m
@_ZN21SkGlyphRunListPainter13ScopedBuffersD1Ev = hidden unnamed_addr alias void (%"struct.SkGlyphRunListPainter::ScopedBuffers"*), void (%"struct.SkGlyphRunListPainter::ScopedBuffers"*)* @_ZN21SkGlyphRunListPainter13ScopedBuffersD2Ev
@_ZN27SkGlyphPositionRoundingSpecC1Eb15SkAxisAlignment = hidden unnamed_addr alias void (%struct.SkGlyphPositionRoundingSpec*, i1, i32), void (%struct.SkGlyphPositionRoundingSpec*, i1, i32)* @_ZN27SkGlyphPositionRoundingSpecC2Eb15SkAxisAlignment

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainterC2ERK14SkSurfaceProps11SkColorType20SkScalerContextFlagsP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter*, %class.SkSurfaceProps* dereferenceable(8), i32, i32, %class.SkStrikeForGPUCacheInterface*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 0
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %6, %class.SkSurfaceProps* dereferenceable(8) %1) #14
  %7 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %7, i32 %9, i32 0) #14
  %10 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 2
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 3
  store i32 %3, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 4
  store %class.SkStrikeForGPUCacheInterface* %4, %class.SkStrikeForGPUCacheInterface** %12, align 8
  %13 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5
  %14 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 8
  %15 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 0
  %16 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = bitcast i8* %14 to i8**
  %19 = bitcast %class.SkDrawableGlyphBuffer* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 104, i1 false)
  store i8* %15, i8** %18, align 8
  store i64 34359738368, i64* %17, align 8
  %20 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 32
  %21 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 0
  %22 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 40
  %23 = bitcast i8* %22 to i64*
  %24 = bitcast i8* %20 to i8**
  store i8* %21, i8** %24, align 8
  store i64 34359738368, i64* %23, align 8
  ret void
}

declare void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainterC2ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter*, %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkColorSpace*, %class.SkStrikeForGPUCacheInterface*) unnamed_addr #0 align 2 {
  %6 = icmp eq %class.SkColorSpace* %3, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace* nonnull %3) #14
  br i1 %8, label %10, label %9

9:                                                ; preds = %7, %5
  br label %10

10:                                               ; preds = %7, %9
  %11 = phi i32 [ 3, %9 ], [ 2, %7 ]
  %12 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 0
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %12, %class.SkSurfaceProps* dereferenceable(8) %1) #14
  %13 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 1
  %14 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %13, i32 %15, i32 0) #14
  %16 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 2
  store i32 %2, i32* %16, align 8
  %17 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 3
  store i32 %11, i32* %17, align 4
  %18 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 4
  store %class.SkStrikeForGPUCacheInterface* %4, %class.SkStrikeForGPUCacheInterface** %18, align 8
  %19 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5
  %20 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 8
  %21 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 0
  %22 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 16
  %23 = bitcast i8* %22 to i64*
  %24 = bitcast i8* %20 to i8**
  %25 = bitcast %class.SkDrawableGlyphBuffer* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 104, i1 false) #14
  store i8* %21, i8** %24, align 8
  store i64 34359738368, i64* %23, align 8
  %26 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 32
  %27 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 0
  %28 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 40
  %29 = bitcast i8* %28 to i64*
  %30 = bitcast i8* %26 to i8**
  store i8* %27, i8** %30, align 8
  store i64 34359738368, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainterC2ERK14SkSurfacePropsRK11GrColorInfo(%class.SkGlyphRunListPainter*, %class.SkSurfaceProps* dereferenceable(8), %class.GrColorInfo* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %2, i64 0, i32 0, i32 0
  %5 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8
  %6 = icmp eq %class.SkColorSpace* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace* nonnull %5) #14
  br i1 %8, label %10, label %9

9:                                                ; preds = %7, %3
  br label %10

10:                                               ; preds = %7, %9
  %11 = phi i32 [ 3, %9 ], [ 2, %7 ]
  %12 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #14
  %13 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %12, i64 0, i32 0
  %14 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 0
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %14, %class.SkSurfaceProps* dereferenceable(8) %1) #14
  %15 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %15, i32 %17, i32 0) #14
  %18 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 2
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 3
  store i32 %11, i32* %19, align 4
  %20 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 4
  store %class.SkStrikeForGPUCacheInterface* %13, %class.SkStrikeForGPUCacheInterface** %20, align 8
  %21 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5
  %22 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 8
  %23 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 0
  %24 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 16
  %25 = bitcast i8* %24 to i64*
  %26 = bitcast i8* %22 to i8**
  %27 = bitcast %class.SkDrawableGlyphBuffer* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 104, i1 false) #14
  store i8* %23, i8** %26, align 8
  store i64 34359738368, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 32
  %29 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 0
  %30 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 40
  %31 = bitcast i8* %30 to i64*
  %32 = bitcast i8* %28 to i8**
  store i8* %29, i8** %32, align 8
  store i64 34359738368, i64* %31, align 8
  ret void
}

declare %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainterC2ERK20GrSurfaceDrawContext(%class.SkGlyphRunListPainter*, %class.GrSurfaceDrawContext* dereferenceable(312)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8
  %6 = icmp eq %class.SkColorSpace* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace* nonnull %5) #14
  br i1 %8, label %10, label %9

9:                                                ; preds = %7, %2
  br label %10

10:                                               ; preds = %7, %9
  %11 = phi i32 [ 3, %9 ], [ 2, %7 ]
  %12 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #14
  %13 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %12, i64 0, i32 0
  %14 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 0
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %14, %class.SkSurfaceProps* dereferenceable(8) %3) #14
  %15 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %3, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %15, i32 %17, i32 0) #14
  %18 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 2
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 3
  store i32 %11, i32* %19, align 4
  %20 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 4
  store %class.SkStrikeForGPUCacheInterface* %13, %class.SkStrikeForGPUCacheInterface** %20, align 8
  %21 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5
  %22 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 8
  %23 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 0
  %24 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 16
  %25 = bitcast i8* %24 to i64*
  %26 = bitcast i8* %22 to i8**
  %27 = bitcast %class.SkDrawableGlyphBuffer* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 104, i1 false) #14
  store i8* %23, i8** %26, align 8
  store i64 34359738368, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 32
  %29 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 0
  %30 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 40
  %31 = bitcast i8* %30 to i64*
  %32 = bitcast i8* %28 to i8**
  store i8* %29, i8** %32, align 8
  store i64 34359738368, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainter19drawForBitmapDeviceERK14SkGlyphRunListRK7SkPaintRK8SkMatrixPKNS_19BitmapDevicePainterE(%class.SkGlyphRunListPainter*, %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.SkMatrix* dereferenceable(40), %"class.SkGlyphRunListPainter::BitmapDevicePainter"*) local_unnamed_addr #2 align 2 {
  %6 = alloca %class.SkStrikeSpec, align 8
  %7 = alloca %class.sk_sp.261, align 8
  %8 = alloca %class.SkZip, align 8
  %9 = alloca %class.SkPaint, align 8
  %10 = alloca %class.SkStrikeSpec, align 8
  %11 = alloca %class.sk_sp.261, align 8
  %12 = alloca %class.SkZip, align 8
  %13 = alloca %class.SkMatrix, align 4
  %14 = alloca %"class.std::__1::vector.262", align 8
  %15 = alloca %class.SkStrikeSpec, align 8
  %16 = alloca %class.SkBulkGlyphMetrics, align 8
  %17 = alloca i32, align 4
  %18 = alloca [4 x %struct.SkPoint], align 16
  %19 = alloca { <2 x float>, <2 x float> }, align 8
  %20 = bitcast { <2 x float>, <2 x float> }* %19 to %struct.SkRect*
  %21 = alloca float, align 4
  %22 = alloca %class.SkMatrix, align 16
  %23 = alloca %class.SkStrikeSpec, align 8
  %24 = alloca %class.sk_sp.261, align 8
  %25 = alloca %class.SkZip, align 8
  %26 = alloca %struct.SkMask, align 8
  %27 = alloca %class.SkBitmap, align 8
  %28 = alloca %struct.SkImageInfo, align 16
  %29 = alloca %class.SkMatrix, align 16
  %30 = alloca %struct.SkSamplingOptions, align 4
  %31 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 0
  %32 = load %class.SkGlyphRun*, %class.SkGlyphRun** %31, align 8, !noalias !2
  %33 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8, !noalias !2
  %35 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %32, i64 %34
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %5, %37
  %38 = phi %class.SkGlyphRun* [ %44, %37 ], [ %32, %5 ]
  %39 = phi i64 [ %43, %37 ], [ 0, %5 ]
  %40 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %38, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8, !noalias !2
  %42 = icmp ult i64 %41, %39
  %43 = select i1 %42, i64 %39, i64 %41
  %44 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %38, i64 1
  %45 = icmp eq %class.SkGlyphRun* %44, %35
  br i1 %45, label %46, label %37

46:                                               ; preds = %37, %5
  %47 = phi i64 [ 0, %5 ], [ %43, %37 ]
  %48 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5
  tail call void @_ZN21SkDrawableGlyphBuffer10ensureSizeEm(%class.SkDrawableGlyphBuffer* %48, i64 %47) #14, !noalias !2
  %49 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 6
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 261120
  %56 = icmp eq i32 %55, 3072
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 0
  br label %61

59:                                               ; preds = %52, %46
  %60 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 1
  br label %61

61:                                               ; preds = %59, %57
  %62 = phi %class.SkSurfaceProps* [ %58, %57 ], [ %60, %59 ]
  %63 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 3
  %64 = bitcast %struct.SkPoint* %63 to <2 x float>*
  %65 = load <2 x float>, <2 x float>* %64, align 8
  %66 = load %class.SkGlyphRun*, %class.SkGlyphRun** %31, align 8
  %67 = load i64, i64* %33, align 8
  %68 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %66, i64 %67
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %209, label %70

70:                                               ; preds = %61
  %71 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6
  %72 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 40
  %73 = bitcast i8* %72 to i64*
  %74 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 32
  %75 = bitcast i8* %74 to i8**
  %76 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 16
  %77 = bitcast i8* %76 to i64*
  %78 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 8
  %79 = bitcast i8* %78 to i8**
  %80 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 0
  %81 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 1
  %82 = bitcast i64* %81 to i8*
  %83 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 0
  %84 = bitcast %class.SkSourceGlyphBuffer* %71 to i64*
  %85 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.std::__1::__tuple_leaf.18"* %85 to i64*
  %87 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 0, i32 1
  %88 = bitcast %class.SkStrikeSpec* %6 to i8*
  %89 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 3
  %90 = bitcast %class.sk_sp.261* %7 to i8*
  %91 = getelementptr inbounds %class.sk_sp.261, %class.sk_sp.261* %7, i64 0, i32 0
  %92 = bitcast %class.SkZip* %8 to i8*
  %93 = bitcast %class.SkSourceGlyphBuffer* %71 to i8*
  %94 = bitcast i8* %78 to i64*
  %95 = bitcast i8* %74 to i64*
  %96 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4
  %97 = bitcast %class.SkZip.19* %96 to i64*
  %98 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1
  %99 = bitcast %"class.std::__1::__tuple_leaf.23"* %98 to i64*
  %100 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 1
  %101 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 3
  %102 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 2
  %103 = bitcast %class.SkPaint* %9 to i8*
  %104 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %9, i64 0, i32 8, i32 0, i32 0
  %105 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %6, i64 0, i32 4
  %106 = bitcast %"class.SkGlyphRunListPainter::BitmapDevicePainter"* %4 to void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)***
  %107 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %6, i64 0, i32 3, i32 0
  %108 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %6, i64 0, i32 2, i32 0
  %109 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %6, i64 0, i32 1, i32 0
  %110 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %6, i64 0, i32 0
  %111 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %112 = bitcast %class.SkStrikeSpec* %10 to i8*
  %113 = bitcast %class.sk_sp.261* %11 to i8*
  %114 = getelementptr inbounds %class.sk_sp.261, %class.sk_sp.261* %11, i64 0, i32 0
  %115 = bitcast %class.SkZip* %12 to i8*
  %116 = bitcast %"class.SkGlyphRunListPainter::BitmapDevicePainter"* %4 to void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)***
  %117 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %10, i64 0, i32 3, i32 0
  %118 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %10, i64 0, i32 2, i32 0
  %119 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %10, i64 0, i32 1, i32 0
  %120 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %10, i64 0, i32 0
  %121 = bitcast %class.SkMatrix* %13 to i8*
  %122 = bitcast %class.SkMatrix* %3 to i8*
  %123 = bitcast %"class.std::__1::vector.262"* %14 to i8*
  %124 = getelementptr inbounds %"class.std::__1::vector.262", %"class.std::__1::vector.262"* %14, i64 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.std::__1::vector.262", %"class.std::__1::vector.262"* %14, i64 0, i32 0, i32 1
  %126 = getelementptr inbounds %"class.std::__1::vector.262", %"class.std::__1::vector.262"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %127 = bitcast %class.SkStrikeSpec* %15 to i8*
  %128 = bitcast %class.SkBulkGlyphMetrics* %16 to i8*
  %129 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %131 = bitcast i32* %17 to i8*
  %132 = bitcast [4 x %struct.SkPoint]* %18 to i8*
  %133 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 0
  %134 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 0, i32 0
  %135 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 0, i32 1
  %136 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 1, i32 0
  %137 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 1, i32 1
  %138 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 2, i32 0
  %139 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 2, i32 1
  %140 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 3, i32 0
  %141 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 3, i32 1
  %142 = bitcast %struct.SkPoint** %125 to i64*
  %143 = bitcast %"class.std::__1::vector.262"* %14 to i64*
  %144 = bitcast %struct.SkPoint** %126 to i64*
  %145 = bitcast { <2 x float>, <2 x float> }* %19 to i8*
  %146 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 0, i64 0
  %147 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %20, i64 0, i32 1
  %148 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 1, i64 0
  %149 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %20, i64 0, i32 3
  %150 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 0
  %151 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 1
  %152 = bitcast float* %21 to i8*
  %153 = bitcast i32* %17 to float*
  %154 = bitcast %class.SkMatrix* %22 to i8*
  %155 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 1
  %156 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 4
  %157 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 8
  %158 = bitcast %class.SkStrikeSpec* %23 to i8*
  %159 = bitcast %class.sk_sp.261* %24 to i8*
  %160 = getelementptr inbounds %class.sk_sp.261, %class.sk_sp.261* %24, i64 0, i32 0
  %161 = bitcast %class.SkZip* %25 to i8*
  %162 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 2
  %163 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0
  %164 = bitcast %struct.SkMask* %26 to i8*
  %165 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %26, i64 0, i32 0
  %166 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %26, i64 0, i32 1, i32 0
  %167 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %26, i64 0, i32 1, i32 1
  %168 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %26, i64 0, i32 1, i32 2
  %169 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %26, i64 0, i32 1, i32 3
  %170 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %26, i64 0, i32 2
  %171 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %26, i64 0, i32 3
  %172 = bitcast %class.SkBitmap* %27 to i8*
  %173 = bitcast %struct.SkImageInfo* %28 to i8*
  %174 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %28, i64 0, i32 1
  %175 = bitcast %struct.SkISize* %174 to i64*
  %176 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %28, i64 0, i32 0, i32 0, i32 0
  %177 = bitcast %class.SkMatrix* %29 to i8*
  %178 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %29, i64 0, i32 1
  %179 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %29, i64 0, i32 0, i64 4
  %180 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %29, i64 0, i32 0, i64 8
  %181 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %30, i64 0, i32 0
  %182 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %30, i64 0, i32 1, i32 0
  %183 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %30, i64 0, i32 1, i32 1
  %184 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %30, i64 0, i32 2
  %185 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %30, i64 0, i32 3
  %186 = bitcast %"class.SkGlyphRunListPainter::BitmapDevicePainter"* %4 to void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %187 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %23, i64 0, i32 3, i32 0
  %188 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %23, i64 0, i32 2, i32 0
  %189 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %23, i64 0, i32 1, i32 0
  %190 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %23, i64 0, i32 0
  %191 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %16, i64 0, i32 1, i32 0
  %192 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %16, i64 0, i32 0, i32 1
  %193 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %16, i64 0, i32 0, i32 0
  %194 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %15, i64 0, i32 3, i32 0
  %195 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %15, i64 0, i32 2, i32 0
  %196 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %15, i64 0, i32 1, i32 0
  %197 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %15, i64 0, i32 0
  %198 = bitcast [4 x %struct.SkPoint]* %18 to i8*
  %199 = bitcast { <2 x float>, <2 x float> }* %19 to i8*
  %200 = bitcast %struct.SkMask* %26 to i8*
  %201 = bitcast %class.SkSourceGlyphBuffer* %71 to <2 x i64>*
  %202 = extractelement <2 x float> %65, i32 0
  %203 = extractelement <2 x float> %65, i32 1
  %204 = bitcast %class.SkMatrix* %22 to <4 x float>*
  %205 = bitcast float* %156 to <4 x float>*
  %206 = bitcast %struct.SkImageInfo* %28 to <2 x i64>*
  %207 = bitcast %class.SkMatrix* %29 to <4 x float>*
  %208 = bitcast float* %179 to <4 x float>*
  br label %211

209:                                              ; preds = %763, %61
  call void @_ZN21SkDrawableGlyphBuffer5resetEv(%class.SkDrawableGlyphBuffer* %48) #14
  %210 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6
  call void @_ZN19SkSourceGlyphBuffer5resetEv(%class.SkSourceGlyphBuffer* %210) #14
  ret void

211:                                              ; preds = %70, %763
  %212 = phi %class.SkGlyphRun* [ %66, %70 ], [ %764, %763 ]
  %213 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %212, i64 0, i32 4
  %214 = bitcast %class.SkGlyphRun* %212 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 8
  %216 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %212, i64 0, i32 0, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = load i64, i64* %73, align 8
  %219 = and i64 %218, 1
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %223, label %221

221:                                              ; preds = %211
  %222 = load i8*, i8** %75, align 8
  call void @_Z7sk_freePv(i8* %222) #14
  br label %223

223:                                              ; preds = %221, %211
  %224 = load i64, i64* %77, align 8
  %225 = and i64 %224, 1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %223
  %228 = load i8*, i8** %79, align 8
  call void @_Z7sk_freePv(i8* %228) #14
  br label %229

229:                                              ; preds = %223, %227
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 40, i1 false) #14
  store i8* %80, i8** %79, align 8
  store i64 34359738368, i64* %77, align 8
  store i8* %83, i8** %75, align 8
  store i64 34359738368, i64* %73, align 8
  store <2 x i64> %215, <2 x i64>* %201, align 8
  store i64 %217, i64* %87, align 8
  %230 = call zeroext i1 @_ZN12SkStrikeSpec16ShouldDrawAsPathERK7SkPaintRK6SkFontRK8SkMatrix(%class.SkPaint* dereferenceable(72) %2, %class.SkFont* dereferenceable(24) %213, %class.SkMatrix* dereferenceable(40) %3) #14
  br i1 %230, label %231, label %305

231:                                              ; preds = %229
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %88) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc.strikeSpec.4 to i8*), i64 160, i1 false)
  %232 = load i32, i32* %89, align 4
  call void @_ZN12SkStrikeSpec8MakePathERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlags(%class.SkStrikeSpec* nonnull sret %6, %class.SkFont* dereferenceable(24) %213, %class.SkPaint* dereferenceable(72) %2, %class.SkSurfaceProps* dereferenceable(8) %62, i32 %232) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #14
  store %"class.SkStrikeCache::Strike"* inttoptr (i64 -6148914691236517206 to %"class.SkStrikeCache::Strike"*), %"class.SkStrikeCache::Strike"** %91, align 8
  %233 = call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #14
  call void @_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache(%class.sk_sp.261* nonnull sret %7, %class.SkStrikeSpec* nonnull %6, %class.SkStrikeCache* %233) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 %93, i64 24, i1 false) #14
  call void @_ZN21SkDrawableGlyphBuffer11startSourceERK5SkZipIJKtK7SkPointEE(%class.SkDrawableGlyphBuffer* %48, %class.SkZip* nonnull dereferenceable(24) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #14
  %234 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %91, align 8
  %235 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %234, i64 0, i32 6
  %236 = call i64 @_ZN13SkScalerCache21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache* %235, %class.SkDrawableGlyphBuffer* %48, %class.SkSourceGlyphBuffer* %71) #14
  call void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* %234, i64 %236) #14
  %237 = load i64, i64* %94, align 8, !noalias !5
  %238 = load i64, i64* %95, align 8, !noalias !5
  %239 = load i64, i64* %81, align 8, !noalias !12
  %240 = icmp eq i64 %239, 0
  %241 = select i1 %240, i64 0, i64 %238
  %242 = select i1 %240, i64 0, i64 %237
  store i64 %242, i64* %97, align 8, !noalias !12
  store i64 %241, i64* %99, align 8, !noalias !12
  store i64 %239, i64* %100, align 8, !noalias !12
  store i64 %242, i64* %84, align 8, !noalias !12
  store i64 %241, i64* %86, align 8, !noalias !12
  store i64 %239, i64* %87, align 8, !noalias !12
  store i64 0, i64* %81, align 8, !noalias !12
  %243 = load i32, i32* %101, align 4, !noalias !12
  store i32 %243, i32* %102, align 8, !noalias !12
  store i32 0, i32* %101, align 4, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %103) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 bitcast (%class.SkPaint* @__const._ZN21SkGlyphRunListPainter19drawForBitmapDeviceERK14SkGlyphRunListRK7SkPaintRK8SkMatrixPKNS_19BitmapDevicePainterE.pathPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %9, %class.SkPaint* dereferenceable(72) %2) #14
  %244 = call zeroext i1 @_ZNK6SkFont19hasSomeAntiAliasingEv(%class.SkFont* %213) #14
  %245 = zext i1 %244 to i32
  %246 = load i32, i32* %104, align 8
  %247 = and i32 %246, -2
  %248 = or i32 %247, %245
  store i32 %248, i32* %104, align 8
  %249 = load float, float* %105, align 8
  %250 = load void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)**, void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)*** %106, align 8
  %251 = getelementptr inbounds void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)*, void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)** %250, i64 2
  %252 = load void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)*, void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)** %251, align 8
  call void %252(%"class.SkGlyphRunListPainter::BitmapDevicePainter"* %4, %class.SkDrawableGlyphBuffer* %48, float %249, <2 x float> %65, %class.SkPaint* nonnull dereferenceable(72) %9) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %103) #14
  %253 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %91, align 8
  %254 = icmp eq %"class.SkStrikeCache::Strike"* %253, null
  br i1 %254, label %265, label %255

255:                                              ; preds = %231
  %256 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %253, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = atomicrmw add i32* %256, i32 -1 acq_rel
  %258 = icmp eq i32 %257, 1
  br i1 %258, label %259, label %265

259:                                              ; preds = %255
  %260 = bitcast %"class.SkStrikeCache::Strike"* %253 to %class.SkRefCntBase*
  %261 = bitcast %"class.SkStrikeCache::Strike"* %253 to void (%class.SkRefCntBase*)***
  %262 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %261, align 8
  %263 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %262, i64 2
  %264 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %263, align 8
  call void %264(%class.SkRefCntBase* nonnull %260) #14
  br label %265

265:                                              ; preds = %231, %255, %259
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #14
  %266 = load %class.SkTypeface*, %class.SkTypeface** %107, align 8
  %267 = icmp eq %class.SkTypeface* %266, null
  br i1 %267, label %278, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %266, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = atomicrmw add i32* %269, i32 -1 acq_rel
  %271 = icmp eq i32 %270, 1
  br i1 %271, label %272, label %278

272:                                              ; preds = %268
  %273 = bitcast %class.SkTypeface* %266 to %class.SkRefCntBase*
  %274 = bitcast %class.SkTypeface* %266 to void (%class.SkRefCntBase*)***
  %275 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %274, align 8
  %276 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %275, i64 2
  %277 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %276, align 8
  call void %277(%class.SkRefCntBase* nonnull %273) #14
  br label %278

278:                                              ; preds = %272, %268, %265
  %279 = load %class.SkPathEffect*, %class.SkPathEffect** %108, align 8
  %280 = icmp eq %class.SkPathEffect* %279, null
  br i1 %280, label %291, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %279, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = atomicrmw add i32* %282, i32 -1 acq_rel
  %284 = icmp eq i32 %283, 1
  br i1 %284, label %285, label %291

285:                                              ; preds = %281
  %286 = bitcast %class.SkPathEffect* %279 to %class.SkRefCntBase*
  %287 = bitcast %class.SkPathEffect* %279 to void (%class.SkRefCntBase*)***
  %288 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %287, align 8
  %289 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %288, i64 2
  %290 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %289, align 8
  call void %290(%class.SkRefCntBase* nonnull %286) #14
  br label %291

291:                                              ; preds = %285, %281, %278
  %292 = load %class.SkMaskFilter*, %class.SkMaskFilter** %109, align 8
  %293 = icmp eq %class.SkMaskFilter* %292, null
  br i1 %293, label %304, label %294

294:                                              ; preds = %291
  %295 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %292, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = atomicrmw add i32* %295, i32 -1 acq_rel
  %297 = icmp eq i32 %296, 1
  br i1 %297, label %298, label %304

298:                                              ; preds = %294
  %299 = bitcast %class.SkMaskFilter* %292 to %class.SkRefCntBase*
  %300 = bitcast %class.SkMaskFilter* %292 to void (%class.SkRefCntBase*)***
  %301 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %300, align 8
  %302 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %301, i64 2
  %303 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %302, align 8
  call void %303(%class.SkRefCntBase* nonnull %299) #14
  br label %304

304:                                              ; preds = %291, %294, %298
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %110) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %88) #14
  br label %305

305:                                              ; preds = %304, %229
  %306 = load i64, i64* %87, align 8
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %763, label %308

308:                                              ; preds = %305
  %309 = load i32, i32* %111, align 4
  %310 = and i32 %309, 192
  %311 = icmp eq i32 %310, 128
  br i1 %311, label %312, label %315

312:                                              ; preds = %308
  %313 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %3) #14
  %314 = zext i8 %313 to i32
  store i32 %314, i32* %111, align 4
  br label %315

315:                                              ; preds = %308, %312
  %316 = phi i32 [ %314, %312 ], [ %309, %308 ]
  %317 = and i32 %316, 8
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %389

319:                                              ; preds = %315
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %112) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc.strikeSpec.4 to i8*), i64 160, i1 false)
  %320 = load i32, i32* %89, align 4
  call void @_ZN12SkStrikeSpec8MakeMaskERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrix(%class.SkStrikeSpec* nonnull sret %10, %class.SkFont* dereferenceable(24) %213, %class.SkPaint* dereferenceable(72) %2, %class.SkSurfaceProps* dereferenceable(8) %62, i32 %320, %class.SkMatrix* dereferenceable(40) %3) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #14
  store %"class.SkStrikeCache::Strike"* inttoptr (i64 -6148914691236517206 to %"class.SkStrikeCache::Strike"*), %"class.SkStrikeCache::Strike"** %114, align 8
  %321 = call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #14
  call void @_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache(%class.sk_sp.261* nonnull sret %11, %class.SkStrikeSpec* nonnull %10, %class.SkStrikeCache* %321) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 8 %93, i64 24, i1 false) #14
  %322 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %114, align 8
  %323 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %322, i64 0, i32 6, i32 3
  call void @_ZN21SkDrawableGlyphBuffer17startBitmapDeviceERK5SkZipIJKtK7SkPointEES2_RK8SkMatrixRK27SkGlyphPositionRoundingSpec(%class.SkDrawableGlyphBuffer* %48, %class.SkZip* nonnull dereferenceable(24) %12, <2 x float> %65, %class.SkMatrix* dereferenceable(40) %3, %struct.SkGlyphPositionRoundingSpec* dereferenceable(24) %323) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #14
  %324 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %114, align 8
  %325 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %324, i64 0, i32 6
  %326 = call i64 @_ZN13SkScalerCache25prepareForDrawingMasksCPUEP21SkDrawableGlyphBuffer(%class.SkScalerCache* %325, %class.SkDrawableGlyphBuffer* %48) #14
  call void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* %324, i64 %326) #14
  %327 = load i64, i64* %94, align 8, !noalias !13
  %328 = load i64, i64* %95, align 8, !noalias !13
  %329 = load i64, i64* %81, align 8, !noalias !20
  %330 = icmp eq i64 %329, 0
  %331 = select i1 %330, i64 0, i64 %328
  %332 = select i1 %330, i64 0, i64 %327
  store i64 %332, i64* %97, align 8, !noalias !20
  store i64 %331, i64* %99, align 8, !noalias !20
  store i64 %329, i64* %100, align 8, !noalias !20
  store i64 %332, i64* %84, align 8, !noalias !20
  store i64 %331, i64* %86, align 8, !noalias !20
  store i64 %329, i64* %87, align 8, !noalias !20
  store i64 0, i64* %81, align 8, !noalias !20
  %333 = load i32, i32* %101, align 4, !noalias !20
  store i32 %333, i32* %102, align 8, !noalias !20
  store i32 0, i32* %101, align 4, !noalias !20
  %334 = load void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)**, void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)*** %116, align 8
  %335 = getelementptr inbounds void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)*, void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)** %334, i64 3
  %336 = load void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)*, void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)** %335, align 8
  call void %336(%"class.SkGlyphRunListPainter::BitmapDevicePainter"* %4, %class.SkDrawableGlyphBuffer* %48, %class.SkPaint* dereferenceable(72) %2) #14
  %337 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %114, align 8
  %338 = icmp eq %"class.SkStrikeCache::Strike"* %337, null
  br i1 %338, label %349, label %339

339:                                              ; preds = %319
  %340 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %337, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = atomicrmw add i32* %340, i32 -1 acq_rel
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %343, label %349

343:                                              ; preds = %339
  %344 = bitcast %"class.SkStrikeCache::Strike"* %337 to %class.SkRefCntBase*
  %345 = bitcast %"class.SkStrikeCache::Strike"* %337 to void (%class.SkRefCntBase*)***
  %346 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %345, align 8
  %347 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %346, i64 2
  %348 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %347, align 8
  call void %348(%class.SkRefCntBase* nonnull %344) #14
  br label %349

349:                                              ; preds = %319, %339, %343
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #14
  %350 = load %class.SkTypeface*, %class.SkTypeface** %117, align 8
  %351 = icmp eq %class.SkTypeface* %350, null
  br i1 %351, label %362, label %352

352:                                              ; preds = %349
  %353 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %350, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = atomicrmw add i32* %353, i32 -1 acq_rel
  %355 = icmp eq i32 %354, 1
  br i1 %355, label %356, label %362

356:                                              ; preds = %352
  %357 = bitcast %class.SkTypeface* %350 to %class.SkRefCntBase*
  %358 = bitcast %class.SkTypeface* %350 to void (%class.SkRefCntBase*)***
  %359 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %358, align 8
  %360 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %359, i64 2
  %361 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %360, align 8
  call void %361(%class.SkRefCntBase* nonnull %357) #14
  br label %362

362:                                              ; preds = %356, %352, %349
  %363 = load %class.SkPathEffect*, %class.SkPathEffect** %118, align 8
  %364 = icmp eq %class.SkPathEffect* %363, null
  br i1 %364, label %375, label %365

365:                                              ; preds = %362
  %366 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %363, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = atomicrmw add i32* %366, i32 -1 acq_rel
  %368 = icmp eq i32 %367, 1
  br i1 %368, label %369, label %375

369:                                              ; preds = %365
  %370 = bitcast %class.SkPathEffect* %363 to %class.SkRefCntBase*
  %371 = bitcast %class.SkPathEffect* %363 to void (%class.SkRefCntBase*)***
  %372 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %371, align 8
  %373 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %372, i64 2
  %374 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %373, align 8
  call void %374(%class.SkRefCntBase* nonnull %370) #14
  br label %375

375:                                              ; preds = %369, %365, %362
  %376 = load %class.SkMaskFilter*, %class.SkMaskFilter** %119, align 8
  %377 = icmp eq %class.SkMaskFilter* %376, null
  br i1 %377, label %388, label %378

378:                                              ; preds = %375
  %379 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %376, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = atomicrmw add i32* %379, i32 -1 acq_rel
  %381 = icmp eq i32 %380, 1
  br i1 %381, label %382, label %388

382:                                              ; preds = %378
  %383 = bitcast %class.SkMaskFilter* %376 to %class.SkRefCntBase*
  %384 = bitcast %class.SkMaskFilter* %376 to void (%class.SkRefCntBase*)***
  %385 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %384, align 8
  %386 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %385, i64 2
  %387 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %386, align 8
  call void %387(%class.SkRefCntBase* nonnull %383) #14
  br label %388

388:                                              ; preds = %375, %378, %382
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %120) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %112) #14
  br label %389

389:                                              ; preds = %388, %315
  %390 = load i64, i64* %87, align 8
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %763, label %392

392:                                              ; preds = %389
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %121) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %121, i8* align 4 %122, i64 40, i1 false)
  %393 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %13, float %202, float %203) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 24, i1 false) #14
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %127) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %127, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc.strikeSpec.4 to i8*), i64 160, i1 false)
  %394 = load i32, i32* %89, align 4
  %395 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZN12SkStrikeSpec8MakeMaskERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrix(%class.SkStrikeSpec* nonnull sret %15, %class.SkFont* dereferenceable(24) %213, %class.SkPaint* dereferenceable(72) %2, %class.SkSurfaceProps* dereferenceable(8) %62, i32 %394, %class.SkMatrix* dereferenceable(40) %395) #14
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %128) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 184, i1 false)
  call void @_ZN18SkBulkGlyphMetricsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetrics* nonnull %16, %class.SkStrikeSpec* nonnull dereferenceable(160) %15) #14
  %396 = load i16*, i16** %129, align 8
  %397 = load i64, i64* %87, align 8
  %398 = load %struct.SkPoint*, %struct.SkPoint** %130, align 8
  %399 = call { %class.SkGlyph**, i64 } @_ZN18SkBulkGlyphMetrics6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetrics* nonnull %16, i16* %396, i64 %397) #14
  %400 = extractvalue { %class.SkGlyph**, i64 } %399, 0
  %401 = extractvalue { %class.SkGlyph**, i64 } %399, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131)
  store i32 -8388609, i32* %17, align 4
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %403, label %409

403:                                              ; preds = %471, %392
  %404 = phi float [ 0xC7EFFFFFE0000000, %392 ], [ %556, %471 ]
  %405 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %212, i64 0, i32 4, i32 1
  %406 = load float, float* %405, align 8
  %407 = fmul float %404, %406
  %408 = fcmp ogt float %407, 2.560000e+02
  br i1 %408, label %561, label %563

409:                                              ; preds = %392, %557
  %410 = phi float [ %556, %557 ], [ 0xC7EFFFFFE0000000, %392 ]
  %411 = phi i64 [ %560, %557 ], [ 0, %392 ]
  %412 = phi %struct.SkPoint* [ %559, %557 ], [ null, %392 ]
  %413 = phi %struct.SkPoint* [ %558, %557 ], [ null, %392 ]
  %414 = phi i64 [ %554, %557 ], [ 0, %392 ]
  %415 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %400, i64 %414
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #14
  %416 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %398, i64 %414, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %198, i8 -1, i64 32, i1 false)
  %417 = bitcast float* %416 to <2 x float>*
  %418 = load <2 x float>, <2 x float>* %417, align 4
  %419 = fadd <2 x float> %65, %418
  %420 = icmp eq %struct.SkPoint* %413, %412
  br i1 %420, label %425, label %421

421:                                              ; preds = %409
  %422 = bitcast %struct.SkPoint* %413 to <2 x float>*
  store <2 x float> %419, <2 x float>* %422, align 4
  %423 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %413, i64 1
  %424 = ptrtoint %struct.SkPoint* %423 to i64
  store i64 %424, i64* %142, align 8
  br label %471

425:                                              ; preds = %409
  %426 = ptrtoint %struct.SkPoint* %412 to i64
  %427 = load i64, i64* %143, align 8
  %428 = sub i64 %426, %427
  %429 = ashr exact i64 %428, 3
  %430 = add nsw i64 %429, 1
  %431 = icmp ugt i64 %430, 2305843009213693951
  br i1 %431, label %432, label %434

432:                                              ; preds = %425
  %433 = bitcast %"class.std::__1::vector.262"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %433) #15
  unreachable

434:                                              ; preds = %425
  %435 = icmp ult i64 %429, 1152921504606846975
  br i1 %435, label %436, label %444

436:                                              ; preds = %434
  %437 = ashr exact i64 %428, 2
  %438 = icmp ult i64 %437, %430
  %439 = select i1 %438, i64 %430, i64 %437
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %449, label %441

441:                                              ; preds = %436
  %442 = icmp ugt i64 %439, 2305843009213693951
  br i1 %442, label %443, label %444

443:                                              ; preds = %441
  call void @abort() #15
  unreachable

444:                                              ; preds = %441, %434
  %445 = phi i64 [ %439, %441 ], [ 2305843009213693951, %434 ]
  %446 = shl i64 %445, 3
  %447 = call i8* @_Znwm(i64 %446) #16
  %448 = bitcast i8* %447 to %struct.SkPoint*
  br label %449

449:                                              ; preds = %444, %436
  %450 = phi i64 [ %445, %444 ], [ 0, %436 ]
  %451 = phi %struct.SkPoint* [ %448, %444 ], [ null, %436 ]
  %452 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %451, i64 %429
  %453 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %451, i64 %450
  %454 = ptrtoint %struct.SkPoint* %453 to i64
  %455 = bitcast %struct.SkPoint* %452 to <2 x float>*
  store <2 x float> %419, <2 x float>* %455, align 4
  %456 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %452, i64 1
  %457 = ptrtoint %struct.SkPoint* %456 to i64
  %458 = sub i64 %411, %427
  %459 = ashr exact i64 %458, 3
  %460 = sub nsw i64 0, %459
  %461 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %452, i64 %460
  %462 = ptrtoint %struct.SkPoint* %461 to i64
  %463 = icmp sgt i64 %458, 0
  br i1 %463, label %464, label %467

464:                                              ; preds = %449
  %465 = bitcast %struct.SkPoint* %461 to i8*
  %466 = inttoptr i64 %427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %465, i8* align 4 %466, i64 %458, i1 false) #14
  br label %467

467:                                              ; preds = %464, %449
  store i64 %462, i64* %143, align 8
  store i64 %457, i64* %142, align 8
  store i64 %454, i64* %144, align 8
  %468 = icmp eq i64 %427, 0
  br i1 %468, label %471, label %469

469:                                              ; preds = %467
  %470 = inttoptr i64 %427 to i8*
  call void @_ZdlPv(i8* %470) #16
  br label %471

471:                                              ; preds = %421, %467, %469
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 -1, i64 16, i1 false)
  %472 = load %class.SkGlyph*, %class.SkGlyph** %415, align 8
  %473 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %472, i64 0, i32 3
  %474 = load i16, i16* %473, align 2
  %475 = sitofp i16 %474 to float
  %476 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %472, i64 0, i32 2
  %477 = load i16, i16* %476, align 4
  %478 = sitofp i16 %477 to float
  %479 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %472, i64 0, i32 0
  %480 = load i16, i16* %479, align 8
  %481 = uitofp i16 %480 to float
  %482 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %472, i64 0, i32 1
  %483 = load i16, i16* %482, align 2
  %484 = uitofp i16 %483 to float
  %485 = insertelement <2 x float> undef, float %475, i32 0
  %486 = insertelement <2 x float> %485, float %478, i32 1
  %487 = fadd float %475, %481
  %488 = insertelement <2 x float> undef, float %487, i32 0
  %489 = fadd float %478, %484
  %490 = insertelement <2 x float> %488, float %489, i32 1
  store <2 x float> %486, <2 x float>* %150, align 8
  store <2 x float> %490, <2 x float>* %151, align 8
  call void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect* nonnull %20, %struct.SkPoint* nonnull %133) #14
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %13, %struct.SkPoint* nonnull %133, %struct.SkPoint* nonnull %133, i32 4) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152)
  %491 = load float, float* %136, align 8
  %492 = load float, float* %134, align 16
  %493 = fsub float %491, %492
  %494 = load float, float* %137, align 4
  %495 = load float, float* %135, align 4
  %496 = fsub float %494, %495
  %497 = call float @_ZN7SkPoint6LengthEff(float %493, float %496) #14
  %498 = load float, float* %148, align 8
  %499 = load float, float* %146, align 8
  %500 = fsub float %498, %499
  %501 = fdiv float %497, %500
  store float %501, float* %21, align 4
  %502 = fcmp olt float %410, %501
  %503 = select i1 %502, float* %21, float* %153
  %504 = bitcast float* %503 to i32*
  %505 = load i32, i32* %504, align 4
  store i32 %505, i32* %17, align 4
  %506 = load float, float* %138, align 16
  %507 = load float, float* %136, align 8
  %508 = fsub float %506, %507
  %509 = load float, float* %139, align 4
  %510 = load float, float* %137, align 4
  %511 = fsub float %509, %510
  %512 = call float @_ZN7SkPoint6LengthEff(float %508, float %511) #14
  %513 = load float, float* %149, align 4
  %514 = load float, float* %147, align 4
  %515 = fsub float %513, %514
  %516 = fdiv float %512, %515
  store float %516, float* %21, align 4
  %517 = bitcast i32 %505 to float
  %518 = fcmp ogt float %516, %517
  %519 = select i1 %518, float* %21, float* %153
  %520 = bitcast float* %519 to i32*
  %521 = load i32, i32* %520, align 4
  store i32 %521, i32* %17, align 4
  %522 = load float, float* %140, align 8
  %523 = load float, float* %138, align 16
  %524 = fsub float %522, %523
  %525 = load float, float* %141, align 4
  %526 = load float, float* %139, align 4
  %527 = fsub float %525, %526
  %528 = call float @_ZN7SkPoint6LengthEff(float %524, float %527) #14
  %529 = load float, float* %148, align 8
  %530 = load float, float* %146, align 8
  %531 = fsub float %529, %530
  %532 = fdiv float %528, %531
  store float %532, float* %21, align 4
  %533 = bitcast i32 %521 to float
  %534 = fcmp ogt float %532, %533
  %535 = select i1 %534, float* %21, float* %153
  %536 = bitcast float* %535 to i32*
  %537 = load i32, i32* %536, align 4
  store i32 %537, i32* %17, align 4
  %538 = load float, float* %134, align 16
  %539 = load float, float* %140, align 8
  %540 = fsub float %538, %539
  %541 = load float, float* %135, align 4
  %542 = load float, float* %141, align 4
  %543 = fsub float %541, %542
  %544 = call float @_ZN7SkPoint6LengthEff(float %540, float %543) #14
  %545 = load float, float* %149, align 4
  %546 = load float, float* %147, align 4
  %547 = fsub float %545, %546
  %548 = fdiv float %544, %547
  store float %548, float* %21, align 4
  %549 = bitcast i32 %537 to float
  %550 = fcmp ogt float %548, %549
  %551 = select i1 %550, float* %21, float* %153
  %552 = bitcast float* %551 to i32*
  %553 = load i32, i32* %552, align 4
  store i32 %553, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #14
  %554 = add nuw i64 %414, 1
  %555 = icmp eq i64 %554, %401
  %556 = bitcast i32 %553 to float
  br i1 %555, label %403, label %557

557:                                              ; preds = %471
  %558 = load %struct.SkPoint*, %struct.SkPoint** %125, align 8
  %559 = load %struct.SkPoint*, %struct.SkPoint** %126, align 8
  %560 = ptrtoint %struct.SkPoint* %558 to i64
  br label %409

561:                                              ; preds = %403
  %562 = fdiv float 2.560000e+02, %406
  store float %562, float* %153, align 4
  br label %563

563:                                              ; preds = %561, %403
  %564 = phi float [ %562, %561 ], [ %404, %403 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %154) #14
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %204, align 16, !alias.scope !21
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %205, align 16, !alias.scope !21
  store float 1.000000e+00, float* %157, align 16, !alias.scope !21
  store i32 16, i32* %155, align 4, !alias.scope !21
  %565 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %22, float %564, float %564) #14
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %158) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %158, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc.strikeSpec.4 to i8*), i64 160, i1 false)
  %566 = load i32, i32* %89, align 4
  call void @_ZN12SkStrikeSpec8MakeMaskERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrix(%class.SkStrikeSpec* nonnull sret %23, %class.SkFont* dereferenceable(24) %213, %class.SkPaint* dereferenceable(72) %2, %class.SkSurfaceProps* dereferenceable(8) %62, i32 %566, %class.SkMatrix* nonnull dereferenceable(40) %22) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #14
  store %"class.SkStrikeCache::Strike"* inttoptr (i64 -6148914691236517206 to %"class.SkStrikeCache::Strike"*), %"class.SkStrikeCache::Strike"** %160, align 8
  %567 = call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #14
  call void @_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache(%class.sk_sp.261* nonnull sret %24, %class.SkStrikeSpec* nonnull %23, %class.SkStrikeCache* %567) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %161, i8* align 8 %93, i64 24, i1 false) #14
  %568 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %160, align 8
  %569 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %568, i64 0, i32 6, i32 3
  call void @_ZN21SkDrawableGlyphBuffer17startBitmapDeviceERK5SkZipIJKtK7SkPointEES2_RK8SkMatrixRK27SkGlyphPositionRoundingSpec(%class.SkDrawableGlyphBuffer* %48, %class.SkZip* nonnull dereferenceable(24) %25, <2 x float> %65, %class.SkMatrix* dereferenceable(40) %3, %struct.SkGlyphPositionRoundingSpec* dereferenceable(24) %569) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #14
  %570 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %160, align 8
  %571 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %570, i64 0, i32 6
  %572 = call i64 @_ZN13SkScalerCache25prepareForDrawingMasksCPUEP21SkDrawableGlyphBuffer(%class.SkScalerCache* %571, %class.SkDrawableGlyphBuffer* %48) #14
  call void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* %570, i64 %572) #14
  %573 = load i64, i64* %162, align 8, !noalias !24
  %574 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %163, align 8, !noalias !24
  %575 = load %struct.SkPoint*, %struct.SkPoint** %124, align 8, !noalias !27
  %576 = icmp eq i64 %573, 0
  br i1 %576, label %577, label %711

577:                                              ; preds = %760, %563
  %578 = load i64, i64* %94, align 8, !noalias !32
  %579 = load i64, i64* %95, align 8, !noalias !32
  %580 = load i64, i64* %81, align 8, !noalias !39
  %581 = icmp eq i64 %580, 0
  %582 = select i1 %581, i64 0, i64 %579
  %583 = select i1 %581, i64 0, i64 %578
  store i64 %583, i64* %97, align 8, !noalias !39
  store i64 %582, i64* %99, align 8, !noalias !39
  store i64 %580, i64* %100, align 8, !noalias !39
  store i64 %583, i64* %84, align 8, !noalias !39
  store i64 %582, i64* %86, align 8, !noalias !39
  store i64 %580, i64* %87, align 8, !noalias !39
  store i64 0, i64* %81, align 8, !noalias !39
  %584 = load i32, i32* %101, align 4, !noalias !39
  store i32 %584, i32* %102, align 8, !noalias !39
  store i32 0, i32* %101, align 4, !noalias !39
  %585 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %160, align 8
  %586 = icmp eq %"class.SkStrikeCache::Strike"* %585, null
  br i1 %586, label %597, label %587

587:                                              ; preds = %577
  %588 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %585, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %589 = atomicrmw add i32* %588, i32 -1 acq_rel
  %590 = icmp eq i32 %589, 1
  br i1 %590, label %591, label %597

591:                                              ; preds = %587
  %592 = bitcast %"class.SkStrikeCache::Strike"* %585 to %class.SkRefCntBase*
  %593 = bitcast %"class.SkStrikeCache::Strike"* %585 to void (%class.SkRefCntBase*)***
  %594 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %593, align 8
  %595 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %594, i64 2
  %596 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %595, align 8
  call void %596(%class.SkRefCntBase* nonnull %592) #14
  br label %597

597:                                              ; preds = %577, %587, %591
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #14
  %598 = load %class.SkTypeface*, %class.SkTypeface** %187, align 8
  %599 = icmp eq %class.SkTypeface* %598, null
  br i1 %599, label %610, label %600

600:                                              ; preds = %597
  %601 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %598, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = atomicrmw add i32* %601, i32 -1 acq_rel
  %603 = icmp eq i32 %602, 1
  br i1 %603, label %604, label %610

604:                                              ; preds = %600
  %605 = bitcast %class.SkTypeface* %598 to %class.SkRefCntBase*
  %606 = bitcast %class.SkTypeface* %598 to void (%class.SkRefCntBase*)***
  %607 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %606, align 8
  %608 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %607, i64 2
  %609 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %608, align 8
  call void %609(%class.SkRefCntBase* nonnull %605) #14
  br label %610

610:                                              ; preds = %604, %600, %597
  %611 = load %class.SkPathEffect*, %class.SkPathEffect** %188, align 8
  %612 = icmp eq %class.SkPathEffect* %611, null
  br i1 %612, label %623, label %613

613:                                              ; preds = %610
  %614 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %611, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %615 = atomicrmw add i32* %614, i32 -1 acq_rel
  %616 = icmp eq i32 %615, 1
  br i1 %616, label %617, label %623

617:                                              ; preds = %613
  %618 = bitcast %class.SkPathEffect* %611 to %class.SkRefCntBase*
  %619 = bitcast %class.SkPathEffect* %611 to void (%class.SkRefCntBase*)***
  %620 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %619, align 8
  %621 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %620, i64 2
  %622 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %621, align 8
  call void %622(%class.SkRefCntBase* nonnull %618) #14
  br label %623

623:                                              ; preds = %617, %613, %610
  %624 = load %class.SkMaskFilter*, %class.SkMaskFilter** %189, align 8
  %625 = icmp eq %class.SkMaskFilter* %624, null
  br i1 %625, label %636, label %626

626:                                              ; preds = %623
  %627 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %624, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %628 = atomicrmw add i32* %627, i32 -1 acq_rel
  %629 = icmp eq i32 %628, 1
  br i1 %629, label %630, label %636

630:                                              ; preds = %626
  %631 = bitcast %class.SkMaskFilter* %624 to %class.SkRefCntBase*
  %632 = bitcast %class.SkMaskFilter* %624 to void (%class.SkRefCntBase*)***
  %633 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %632, align 8
  %634 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %633, i64 2
  %635 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %634, align 8
  call void %635(%class.SkRefCntBase* nonnull %631) #14
  br label %636

636:                                              ; preds = %623, %626, %630
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %190) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %158) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %154) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131)
  %637 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %191, align 8
  %638 = icmp eq %"class.SkStrikeCache::Strike"* %637, null
  br i1 %638, label %649, label %639

639:                                              ; preds = %636
  %640 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %637, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %641 = atomicrmw add i32* %640, i32 -1 acq_rel
  %642 = icmp eq i32 %641, 1
  br i1 %642, label %643, label %649

643:                                              ; preds = %639
  %644 = bitcast %"class.SkStrikeCache::Strike"* %637 to %class.SkRefCntBase*
  %645 = bitcast %"class.SkStrikeCache::Strike"* %637 to void (%class.SkRefCntBase*)***
  %646 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %645, align 8
  %647 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %646, i64 2
  %648 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %647, align 8
  call void %648(%class.SkRefCntBase* nonnull %644) #14
  br label %649

649:                                              ; preds = %643, %639, %636
  %650 = load %class.SkGlyph**, %class.SkGlyph*** %192, align 8
  %651 = load i32, i32* %193, align 8
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %650, i64 %652
  br label %654

654:                                              ; preds = %654, %649
  %655 = phi %class.SkGlyph** [ %653, %649 ], [ %657, %654 ]
  %656 = icmp ugt %class.SkGlyph** %655, %650
  %657 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %655, i64 -1
  br i1 %656, label %654, label %658

658:                                              ; preds = %654
  %659 = bitcast %class.SkGlyph** %650 to i8*
  %660 = icmp eq i32 %651, 0
  br i1 %660, label %665, label %661

661:                                              ; preds = %658
  %662 = icmp sgt i32 %651, 20
  br i1 %662, label %663, label %664

663:                                              ; preds = %661
  call void @_Z7sk_freePv(i8* %659) #14
  br label %664

664:                                              ; preds = %663, %661
  store %class.SkGlyph** null, %class.SkGlyph*** %192, align 8
  store i32 0, i32* %193, align 8
  br label %665

665:                                              ; preds = %658, %664
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %128) #14
  %666 = load %class.SkTypeface*, %class.SkTypeface** %194, align 8
  %667 = icmp eq %class.SkTypeface* %666, null
  br i1 %667, label %678, label %668

668:                                              ; preds = %665
  %669 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %666, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %670 = atomicrmw add i32* %669, i32 -1 acq_rel
  %671 = icmp eq i32 %670, 1
  br i1 %671, label %672, label %678

672:                                              ; preds = %668
  %673 = bitcast %class.SkTypeface* %666 to %class.SkRefCntBase*
  %674 = bitcast %class.SkTypeface* %666 to void (%class.SkRefCntBase*)***
  %675 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %674, align 8
  %676 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %675, i64 2
  %677 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %676, align 8
  call void %677(%class.SkRefCntBase* nonnull %673) #14
  br label %678

678:                                              ; preds = %672, %668, %665
  %679 = load %class.SkPathEffect*, %class.SkPathEffect** %195, align 8
  %680 = icmp eq %class.SkPathEffect* %679, null
  br i1 %680, label %691, label %681

681:                                              ; preds = %678
  %682 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %679, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %683 = atomicrmw add i32* %682, i32 -1 acq_rel
  %684 = icmp eq i32 %683, 1
  br i1 %684, label %685, label %691

685:                                              ; preds = %681
  %686 = bitcast %class.SkPathEffect* %679 to %class.SkRefCntBase*
  %687 = bitcast %class.SkPathEffect* %679 to void (%class.SkRefCntBase*)***
  %688 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %687, align 8
  %689 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %688, i64 2
  %690 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %689, align 8
  call void %690(%class.SkRefCntBase* nonnull %686) #14
  br label %691

691:                                              ; preds = %685, %681, %678
  %692 = load %class.SkMaskFilter*, %class.SkMaskFilter** %196, align 8
  %693 = icmp eq %class.SkMaskFilter* %692, null
  br i1 %693, label %704, label %694

694:                                              ; preds = %691
  %695 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %692, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %696 = atomicrmw add i32* %695, i32 -1 acq_rel
  %697 = icmp eq i32 %696, 1
  br i1 %697, label %698, label %704

698:                                              ; preds = %694
  %699 = bitcast %class.SkMaskFilter* %692 to %class.SkRefCntBase*
  %700 = bitcast %class.SkMaskFilter* %692 to void (%class.SkRefCntBase*)***
  %701 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %700, align 8
  %702 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %701, i64 2
  %703 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %702, align 8
  call void %703(%class.SkRefCntBase* nonnull %699) #14
  br label %704

704:                                              ; preds = %691, %694, %698
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %197) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %127) #14
  %705 = load %struct.SkPoint*, %struct.SkPoint** %124, align 8
  %706 = icmp eq %struct.SkPoint* %705, null
  br i1 %706, label %710, label %707

707:                                              ; preds = %704
  %708 = ptrtoint %struct.SkPoint* %705 to i64
  store i64 %708, i64* %142, align 8
  %709 = bitcast %struct.SkPoint* %705 to i8*
  call void @_ZdlPv(i8* %709) #16
  br label %710

710:                                              ; preds = %704, %707
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %121) #14
  br label %763

711:                                              ; preds = %563, %760
  %712 = phi i64 [ %761, %760 ], [ 0, %563 ]
  %713 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %574, i64 %712, i32 0, i32 0
  %714 = load %class.SkGlyph*, %class.SkGlyph** %713, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %164) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 -86, i64 32, i1 false)
  call void @_ZNK7SkGlyph4maskEv(%struct.SkMask* nonnull sret %26, %class.SkGlyph* %714) #14
  %715 = load i8, i8* %171, align 4
  %716 = icmp eq i8 %715, 3
  br i1 %716, label %717, label %760

717:                                              ; preds = %711
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %172) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %27) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #14
  %718 = load i32, i32* %168, align 8
  %719 = load i32, i32* %166, align 8
  %720 = sub i32 %718, %719
  %721 = load i32, i32* %169, align 4
  %722 = load i32, i32* %167, align 4
  %723 = sub i32 %721, %722
  %724 = zext i32 %723 to i64
  %725 = shl nuw i64 %724, 32
  %726 = zext i32 %720 to i64
  %727 = or i64 %725, %726
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %206, align 16, !alias.scope !40
  store i64 %727, i64* %175, align 16, !alias.scope !40
  %728 = load i8*, i8** %165, align 8
  %729 = load i32, i32* %170, align 8
  %730 = zext i32 %729 to i64
  %731 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %27, %struct.SkImageInfo* nonnull dereferenceable(24) %28, i8* %728, i64 %730, void (i8*, i8*)* null, i8* null) #14
  %732 = load %class.SkColorSpace*, %class.SkColorSpace** %176, align 16
  %733 = icmp eq %class.SkColorSpace* %732, null
  br i1 %733, label %740, label %734

734:                                              ; preds = %717
  %735 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %732, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %736 = atomicrmw add i32* %735, i32 -1 acq_rel
  %737 = icmp eq i32 %736, 1
  br i1 %737, label %738, label %740

738:                                              ; preds = %734
  %739 = bitcast %class.SkColorSpace* %732 to i8*
  call void @_ZdlPv(i8* %739) #16
  br label %740

740:                                              ; preds = %738, %734, %717
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #14
  %741 = load i32, i32* %166, align 8
  %742 = sitofp i32 %741 to float
  %743 = load i32, i32* %167, align 4
  %744 = sitofp i32 %743 to float
  %745 = load float, float* %153, align 4
  %746 = fdiv float 1.000000e+00, %745
  %747 = fmul float %746, %742
  %748 = fmul float %746, %744
  %749 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %575, i64 %712, i32 0
  %750 = load float, float* %749, align 4
  %751 = fadd float %750, %747
  %752 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %575, i64 %712, i32 1
  %753 = load float, float* %752, align 4
  %754 = fadd float %753, %748
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %177) #14
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %207, align 16, !alias.scope !45
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %208, align 16, !alias.scope !45
  store float 1.000000e+00, float* %180, align 16, !alias.scope !45
  store i32 16, i32* %178, align 4, !alias.scope !45
  %755 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %29, float %751, float %754) #14
  %756 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* nonnull %29, float %746, float %746) #14
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %181) #14
  store i8 0, i8* %181, align 4
  store float 0.000000e+00, float* %182, align 4
  store float 0.000000e+00, float* %183, align 4
  store i32 1, i32* %184, align 4
  store i32 0, i32* %185, align 4
  %757 = load void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %186, align 8
  %758 = getelementptr inbounds void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)** %757, i64 4
  %759 = load void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%"class.SkGlyphRunListPainter::BitmapDevicePainter"*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)** %758, align 8
  call void %759(%"class.SkGlyphRunListPainter::BitmapDevicePainter"* %4, %class.SkBitmap* nonnull dereferenceable(56) %27, %class.SkMatrix* nonnull dereferenceable(40) %29, %struct.SkRect* null, %struct.SkSamplingOptions* nonnull dereferenceable(20) %30, %class.SkPaint* dereferenceable(72) %2) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %181) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %177) #14
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %172) #14
  br label %760

760:                                              ; preds = %711, %740
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %164) #14
  %761 = add nuw i64 %712, 1
  %762 = icmp eq i64 %761, %573
  br i1 %762, label %577, label %711

763:                                              ; preds = %305, %389, %710
  %764 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %212, i64 1
  %765 = icmp eq %class.SkGlyphRun* %764, %68
  br i1 %765, label %209, label %211
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainter13ensureBuffersERK14SkGlyphRunList(%"struct.SkGlyphRunListPainter::ScopedBuffers"* noalias nocapture sret, %class.SkGlyphRunListPainter*, %class.SkGlyphRunList* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %2, i64 0, i32 0, i32 0
  %5 = load %class.SkGlyphRun*, %class.SkGlyphRun** %4, align 8
  %6 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %2, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %5, i64 %7
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %14, %3
  %11 = phi i64 [ 0, %3 ], [ %20, %14 ]
  %12 = getelementptr inbounds %"struct.SkGlyphRunListPainter::ScopedBuffers", %"struct.SkGlyphRunListPainter::ScopedBuffers"* %0, i64 0, i32 0
  store %class.SkGlyphRunListPainter* %1, %class.SkGlyphRunListPainter** %12, align 8
  %13 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %1, i64 0, i32 5
  tail call void @_ZN21SkDrawableGlyphBuffer10ensureSizeEm(%class.SkDrawableGlyphBuffer* %13, i64 %11) #14
  ret void

14:                                               ; preds = %3, %14
  %15 = phi %class.SkGlyphRun* [ %21, %14 ], [ %5, %3 ]
  %16 = phi i64 [ %20, %14 ], [ 0, %3 ]
  %17 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %15, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, %16
  %20 = select i1 %19, i64 %16, i64 %18
  %21 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %15, i64 1
  %22 = icmp eq %class.SkGlyphRun* %21, %8
  br i1 %22, label %10, label %14
}

declare zeroext i1 @_ZN12SkStrikeSpec16ShouldDrawAsPathERK7SkPaintRK6SkFontRK8SkMatrix(%class.SkPaint* dereferenceable(72), %class.SkFont* dereferenceable(24), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN12SkStrikeSpec8MakePathERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlags(%class.SkStrikeSpec* sret, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache(%class.sk_sp.261* sret, %class.SkStrikeSpec*, %class.SkStrikeCache*) local_unnamed_addr #1

declare void @_ZN21SkDrawableGlyphBuffer11startSourceERK5SkZipIJKtK7SkPointEE(%class.SkDrawableGlyphBuffer*, %class.SkZip* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK6SkFont19hasSomeAntiAliasingEv(%class.SkFont*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

declare void @_ZN12SkStrikeSpec8MakeMaskERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrix(%class.SkStrikeSpec* sret, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN21SkDrawableGlyphBuffer17startBitmapDeviceERK5SkZipIJKtK7SkPointEES2_RK8SkMatrixRK27SkGlyphPositionRoundingSpec(%class.SkDrawableGlyphBuffer*, %class.SkZip* dereferenceable(24), <2 x float>, %class.SkMatrix* dereferenceable(40), %struct.SkGlyphPositionRoundingSpec* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

declare void @_ZN18SkBulkGlyphMetricsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetrics*, %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #1

declare { %class.SkGlyph**, i64 } @_ZN18SkBulkGlyphMetrics6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetrics*, i16*, i64) local_unnamed_addr #1

declare void @_ZNK7SkGlyph4maskEv(%struct.SkMask* sret, %class.SkGlyph*) local_unnamed_addr #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc(%class.SkGlyphRunListPainter*, %class.SkGlyphRun* dereferenceable(96), %class.SkMatrix* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.GrSDFTControl* dereferenceable(12), %class.SkGlyphRunPainterInterface*, i8* nocapture readnone) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::tuple.289", align 8
  %9 = alloca %class.SkZip, align 8
  %10 = alloca %class.SkZip.279, align 16
  %11 = alloca %"struct.std::__1::__tuple_impl", align 8
  %12 = alloca %class.SkStrikeSpec, align 8
  %13 = alloca %class.SkZip, align 8
  %14 = alloca %class.SkZip.279, align 16
  %15 = alloca %class.SkStrikeSpec, align 8
  %16 = alloca %class.SkZip, align 8
  %17 = alloca %class.SkZip.279, align 16
  %18 = alloca %class.SkStrikeSpec, align 8
  %19 = alloca %class.SkZip, align 8
  %20 = alloca %class.SkZip.279, align 16
  %21 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !50
  %23 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5
  tail call void @_ZN21SkDrawableGlyphBuffer10ensureSizeEm(%class.SkDrawableGlyphBuffer* %23, i64 %22) #14, !noalias !50
  %24 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6
  %25 = bitcast %class.SkGlyphRun* %1 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = load i64, i64* %21, align 8
  %28 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 40
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %7
  %34 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 32
  %35 = bitcast i8* %34 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_Z7sk_freePv(i8* %36) #14
  br label %37

37:                                               ; preds = %33, %7
  %38 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 16
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 8
  %45 = bitcast i8* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @_Z7sk_freePv(i8* %46) #14
  br label %47

47:                                               ; preds = %37, %43
  %48 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 8
  %49 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 5, i32 0, i32 0, i64 0
  %50 = bitcast i8* %48 to i8**
  %51 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 1
  %52 = bitcast i64* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 40, i1 false) #14
  store i8* %49, i8** %50, align 8
  store i64 34359738368, i64* %39, align 8
  %53 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 32
  %54 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 6, i32 0, i32 0, i64 0
  %55 = bitcast i8* %53 to i8**
  store i8* %54, i8** %55, align 8
  store i64 34359738368, i64* %29, align 8
  %56 = bitcast %class.SkSourceGlyphBuffer* %24 to i64*
  %57 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::__tuple_leaf.18"* %57 to i64*
  %59 = bitcast %class.SkSourceGlyphBuffer* %24 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %59, align 8
  %60 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 0, i32 1
  store i64 %27, i64* %60, align 8
  %61 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 4
  %62 = tail call zeroext i8 @_ZNK13GrSDFTControl11drawingTypeERK6SkFontRK7SkPaintRK8SkMatrix(%class.GrSDFTControl* %4, %class.SkFont* dereferenceable(24) %61, %class.SkPaint* dereferenceable(72) %3, %class.SkMatrix* dereferenceable(40) %2) #14
  %63 = icmp eq i8 %62, 2
  br i1 %63, label %64, label %170

64:                                               ; preds = %47
  %65 = bitcast %"class.std::__1::tuple.289"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %65) #14
  %66 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 0
  call void @_ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl(%"class.std::__1::tuple.289"* nonnull sret %8, %class.SkFont* dereferenceable(24) %61, %class.SkPaint* dereferenceable(72) %3, %class.SkSurfaceProps* dereferenceable(8) %66, %class.SkMatrix* dereferenceable(40) %2, %class.GrSDFTControl* dereferenceable(12) %4) #14
  %67 = getelementptr inbounds %"class.std::__1::tuple.289", %"class.std::__1::tuple.289"* %8, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::tuple.289", %"class.std::__1::tuple.289"* %8, i64 0, i32 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.std::__1::tuple.289", %"class.std::__1::tuple.289"* %8, i64 0, i32 0, i32 2, i32 0
  %70 = getelementptr inbounds %"class.std::__1::tuple.289", %"class.std::__1::tuple.289"* %8, i64 0, i32 0, i32 0, i32 0, i32 4
  %71 = load float, float* %70, align 8
  %72 = call float @llvm.fabs.f32(float %71) #14
  %73 = fcmp ugt float %72, 0x3F30000000000000
  br i1 %73, label %74, label %125

74:                                               ; preds = %64
  %75 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 4
  %76 = load %class.SkStrikeForGPUCacheInterface*, %class.SkStrikeForGPUCacheInterface** %75, align 8
  %77 = call %class.SkStrikeForGPU* @_ZNK12SkStrikeSpec24findOrCreateScopedStrikeEP28SkStrikeForGPUCacheInterface(%class.SkStrikeSpec* nonnull %67, %class.SkStrikeForGPUCacheInterface* %76) #14
  %78 = bitcast %class.SkZip* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #14
  %79 = bitcast %class.SkSourceGlyphBuffer* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 8 %79, i64 24, i1 false) #14
  call void @_ZN21SkDrawableGlyphBuffer11startSourceERK5SkZipIJKtK7SkPointEE(%class.SkDrawableGlyphBuffer* %23, %class.SkZip* nonnull dereferenceable(24) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #14
  %80 = bitcast %class.SkStrikeForGPU* %77 to void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)***
  %81 = load void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)**, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)** %81, i64 4
  %83 = load void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)** %82, align 8
  call void %83(%class.SkStrikeForGPU* %77, %class.SkDrawableGlyphBuffer* %23, %class.SkSourceGlyphBuffer* %24) #14
  %84 = bitcast i8* %48 to i64*
  %85 = load i64, i64* %84, align 8, !noalias !53
  %86 = bitcast i8* %53 to i64*
  %87 = load i64, i64* %86, align 8, !noalias !53
  %88 = load i64, i64* %51, align 8, !noalias !60
  %89 = icmp eq i64 %88, 0
  %90 = select i1 %89, i64 0, i64 %87
  %91 = select i1 %89, i64 0, i64 %85
  %92 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4
  %93 = bitcast %class.SkZip.19* %92 to i64*
  store i64 %91, i64* %93, align 8, !noalias !60
  %94 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1
  %95 = bitcast %"class.std::__1::__tuple_leaf.23"* %94 to i64*
  store i64 %90, i64* %95, align 8, !noalias !60
  %96 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 1
  store i64 %88, i64* %96, align 8, !noalias !60
  store i64 %91, i64* %56, align 8, !noalias !60
  store i64 %90, i64* %58, align 8, !noalias !60
  store i64 %88, i64* %60, align 8, !noalias !60
  store i64 0, i64* %51, align 8, !noalias !60
  %97 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 3
  %98 = load i32, i32* %97, align 4, !noalias !60
  %99 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 2
  store i32 %98, i32* %99, align 8, !noalias !60
  store i32 0, i32* %97, align 4, !noalias !60
  %100 = icmp eq %class.SkGlyphRunPainterInterface* %5, null
  br i1 %100, label %118, label %101

101:                                              ; preds = %74
  %102 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 2
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %118, label %105

105:                                              ; preds = %101
  %106 = bitcast %class.SkZip.279* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #14
  %107 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0
  %108 = bitcast %class.SkGlyphVariant** %107 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !noalias !61
  %110 = bitcast %class.SkZip.279* %10 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %110, align 16, !alias.scope !61
  %111 = getelementptr inbounds %class.SkZip.279, %class.SkZip.279* %10, i64 0, i32 1
  store i64 %103, i64* %111, align 16, !alias.scope !61
  %112 = load float, float* %68, align 8
  %113 = load float, float* %69, align 4
  %114 = bitcast %class.SkGlyphRunPainterInterface* %5 to void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*, %class.SkFont*, float, float)***
  %115 = load void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*, %class.SkFont*, float, float)**, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*, %class.SkFont*, float, float)*** %114, align 8
  %116 = getelementptr inbounds void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*, %class.SkFont*, float, float)*, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*, %class.SkFont*, float, float)** %115, i64 5
  %117 = load void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*, %class.SkFont*, float, float)*, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*, %class.SkFont*, float, float)** %116, align 8
  call void %117(%class.SkGlyphRunPainterInterface* nonnull %5, %class.SkZip.279* nonnull dereferenceable(24) %10, %class.SkStrikeSpec* nonnull dereferenceable(160) %67, %class.SkFont* dereferenceable(24) %61, float %112, float %113) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #14
  br label %118

118:                                              ; preds = %74, %105, %101
  %119 = icmp eq %class.SkStrikeForGPU* %77, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %118
  %121 = bitcast %class.SkStrikeForGPU* %77 to void (%class.SkStrikeForGPU*)***
  %122 = load void (%class.SkStrikeForGPU*)**, void (%class.SkStrikeForGPU*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.SkStrikeForGPU*)*, void (%class.SkStrikeForGPU*)** %122, i64 7
  %124 = load void (%class.SkStrikeForGPU*)*, void (%class.SkStrikeForGPU*)** %123, align 8
  call void %124(%class.SkStrikeForGPU* nonnull %77) #14
  br label %125

125:                                              ; preds = %64, %120, %118
  %126 = getelementptr inbounds %"class.std::__1::tuple.289", %"class.std::__1::tuple.289"* %8, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  %127 = load %class.SkTypeface*, %class.SkTypeface** %126, align 8
  %128 = icmp eq %class.SkTypeface* %127, null
  br i1 %128, label %139, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %127, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 -1 acq_rel
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %139

133:                                              ; preds = %129
  %134 = bitcast %class.SkTypeface* %127 to %class.SkRefCntBase*
  %135 = bitcast %class.SkTypeface* %127 to void (%class.SkRefCntBase*)***
  %136 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %135, align 8
  %137 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, i64 2
  %138 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, align 8
  call void %138(%class.SkRefCntBase* nonnull %134) #14
  br label %139

139:                                              ; preds = %133, %129, %125
  %140 = getelementptr inbounds %"class.std::__1::tuple.289", %"class.std::__1::tuple.289"* %8, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %141 = load %class.SkPathEffect*, %class.SkPathEffect** %140, align 8
  %142 = icmp eq %class.SkPathEffect* %141, null
  br i1 %142, label %153, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %141, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = bitcast %class.SkPathEffect* %141 to %class.SkRefCntBase*
  %149 = bitcast %class.SkPathEffect* %141 to void (%class.SkRefCntBase*)***
  %150 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, i64 2
  %152 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, align 8
  call void %152(%class.SkRefCntBase* nonnull %148) #14
  br label %153

153:                                              ; preds = %147, %143, %139
  %154 = getelementptr inbounds %"class.std::__1::tuple.289", %"class.std::__1::tuple.289"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %155 = load %class.SkMaskFilter*, %class.SkMaskFilter** %154, align 8
  %156 = icmp eq %class.SkMaskFilter* %155, null
  br i1 %156, label %167, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %155, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = atomicrmw add i32* %158, i32 -1 acq_rel
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %167

161:                                              ; preds = %157
  %162 = bitcast %class.SkMaskFilter* %155 to %class.SkRefCntBase*
  %163 = bitcast %class.SkMaskFilter* %155 to void (%class.SkRefCntBase*)***
  %164 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %163, align 8
  %165 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %164, i64 2
  %166 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %165, align 8
  call void %166(%class.SkRefCntBase* nonnull %162) #14
  br label %167

167:                                              ; preds = %161, %157, %153
  %168 = getelementptr inbounds %"class.std::__1::tuple.289", %"class.std::__1::tuple.289"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %168) #14
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %65) #14
  %169 = bitcast %"struct.std::__1::__tuple_impl"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %169)
  br label %173

170:                                              ; preds = %47
  %171 = icmp eq i8 %62, 4
  %172 = bitcast %"struct.std::__1::__tuple_impl"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172)
  br i1 %171, label %279, label %173

173:                                              ; preds = %167, %170
  %174 = phi i8* [ %169, %167 ], [ %172, %170 ]
  %175 = bitcast %class.SkSourceGlyphBuffer* %24 to i8*
  %176 = load i64, i64* %60, align 8
  %177 = icmp eq i64 %176, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174)
  br i1 %177, label %495, label %178

178:                                              ; preds = %173
  %179 = bitcast %class.SkStrikeSpec* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %179) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %179, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc.strikeSpec.4 to i8*), i64 160, i1 false)
  %180 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 0
  %181 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 3
  %182 = load i32, i32* %181, align 4
  call void @_ZN12SkStrikeSpec8MakeMaskERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrix(%class.SkStrikeSpec* nonnull sret %12, %class.SkFont* dereferenceable(24) %61, %class.SkPaint* dereferenceable(72) %3, %class.SkSurfaceProps* dereferenceable(8) %180, i32 %182, %class.SkMatrix* dereferenceable(40) %2) #14
  %183 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 4
  %184 = load %class.SkStrikeForGPUCacheInterface*, %class.SkStrikeForGPUCacheInterface** %183, align 8
  %185 = call %class.SkStrikeForGPU* @_ZNK12SkStrikeSpec24findOrCreateScopedStrikeEP28SkStrikeForGPUCacheInterface(%class.SkStrikeSpec* nonnull %12, %class.SkStrikeForGPUCacheInterface* %184) #14
  %186 = bitcast %class.SkZip* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %186, i8* align 8 %175, i64 24, i1 false) #14
  %187 = bitcast %class.SkStrikeForGPU* %185 to %struct.SkGlyphPositionRoundingSpec* (%class.SkStrikeForGPU*)***
  %188 = load %struct.SkGlyphPositionRoundingSpec* (%class.SkStrikeForGPU*)**, %struct.SkGlyphPositionRoundingSpec* (%class.SkStrikeForGPU*)*** %187, align 8
  %189 = getelementptr inbounds %struct.SkGlyphPositionRoundingSpec* (%class.SkStrikeForGPU*)*, %struct.SkGlyphPositionRoundingSpec* (%class.SkStrikeForGPU*)** %188, i64 6
  %190 = load %struct.SkGlyphPositionRoundingSpec* (%class.SkStrikeForGPU*)*, %struct.SkGlyphPositionRoundingSpec* (%class.SkStrikeForGPU*)** %189, align 8
  %191 = call dereferenceable(24) %struct.SkGlyphPositionRoundingSpec* %190(%class.SkStrikeForGPU* %185) #14
  call void @_ZN21SkDrawableGlyphBuffer14startGPUDeviceERK5SkZipIJKtK7SkPointEERK8SkMatrixRK27SkGlyphPositionRoundingSpec(%class.SkDrawableGlyphBuffer* %23, %class.SkZip* nonnull dereferenceable(24) %13, %class.SkMatrix* dereferenceable(40) %2, %struct.SkGlyphPositionRoundingSpec* dereferenceable(24) %191) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #14
  %192 = bitcast %class.SkStrikeForGPU* %185 to void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)***
  %193 = load void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)**, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*** %192, align 8
  %194 = getelementptr inbounds void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)** %193, i64 3
  %195 = load void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)** %194, align 8
  call void %195(%class.SkStrikeForGPU* %185, %class.SkDrawableGlyphBuffer* %23, %class.SkSourceGlyphBuffer* %24) #14
  %196 = bitcast i8* %48 to i64*
  %197 = load i64, i64* %196, align 8, !noalias !64
  %198 = bitcast i8* %53 to i64*
  %199 = load i64, i64* %198, align 8, !noalias !64
  %200 = load i64, i64* %51, align 8, !noalias !71
  %201 = icmp eq i64 %200, 0
  %202 = select i1 %201, i64 0, i64 %199
  %203 = select i1 %201, i64 0, i64 %197
  %204 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4
  %205 = bitcast %class.SkZip.19* %204 to i64*
  store i64 %203, i64* %205, align 8, !noalias !71
  %206 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1
  %207 = bitcast %"class.std::__1::__tuple_leaf.23"* %206 to i64*
  store i64 %202, i64* %207, align 8, !noalias !71
  %208 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 1
  store i64 %200, i64* %208, align 8, !noalias !71
  store i64 %203, i64* %56, align 8, !noalias !71
  store i64 %202, i64* %58, align 8, !noalias !71
  store i64 %200, i64* %60, align 8, !noalias !71
  store i64 0, i64* %51, align 8, !noalias !71
  %209 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 3
  %210 = load i32, i32* %209, align 4, !noalias !71
  %211 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 2
  store i32 %210, i32* %211, align 8, !noalias !71
  store i32 0, i32* %209, align 4, !noalias !71
  %212 = icmp eq %class.SkGlyphRunPainterInterface* %5, null
  br i1 %212, label %228, label %213

213:                                              ; preds = %178
  %214 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 2
  %215 = load i64, i64* %214, align 8
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %228, label %217

217:                                              ; preds = %213
  %218 = bitcast %class.SkZip.279* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #14
  %219 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0
  %220 = bitcast %class.SkGlyphVariant** %219 to <2 x i64>*
  %221 = load <2 x i64>, <2 x i64>* %220, align 8, !noalias !72
  %222 = bitcast %class.SkZip.279* %14 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %222, align 16, !alias.scope !72
  %223 = getelementptr inbounds %class.SkZip.279, %class.SkZip.279* %14, i64 0, i32 1
  store i64 %215, i64* %223, align 16, !alias.scope !72
  %224 = bitcast %class.SkGlyphRunPainterInterface* %5 to void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)***
  %225 = load void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)**, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)*** %224, align 8
  %226 = getelementptr inbounds void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)*, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)** %225, i64 2
  %227 = load void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)*, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)** %226, align 8
  call void %227(%class.SkGlyphRunPainterInterface* nonnull %5, %class.SkZip.279* nonnull dereferenceable(24) %14, %class.SkStrikeSpec* nonnull dereferenceable(160) %12) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #14
  br label %228

228:                                              ; preds = %178, %217, %213
  %229 = icmp eq %class.SkStrikeForGPU* %185, null
  br i1 %229, label %235, label %230

230:                                              ; preds = %228
  %231 = bitcast %class.SkStrikeForGPU* %185 to void (%class.SkStrikeForGPU*)***
  %232 = load void (%class.SkStrikeForGPU*)**, void (%class.SkStrikeForGPU*)*** %231, align 8
  %233 = getelementptr inbounds void (%class.SkStrikeForGPU*)*, void (%class.SkStrikeForGPU*)** %232, i64 7
  %234 = load void (%class.SkStrikeForGPU*)*, void (%class.SkStrikeForGPU*)** %233, align 8
  call void %234(%class.SkStrikeForGPU* nonnull %185) #14
  br label %235

235:                                              ; preds = %228, %230
  %236 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %12, i64 0, i32 3, i32 0
  %237 = load %class.SkTypeface*, %class.SkTypeface** %236, align 8
  %238 = icmp eq %class.SkTypeface* %237, null
  br i1 %238, label %249, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %237, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = atomicrmw add i32* %240, i32 -1 acq_rel
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %249

243:                                              ; preds = %239
  %244 = bitcast %class.SkTypeface* %237 to %class.SkRefCntBase*
  %245 = bitcast %class.SkTypeface* %237 to void (%class.SkRefCntBase*)***
  %246 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %245, align 8
  %247 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %246, i64 2
  %248 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %247, align 8
  call void %248(%class.SkRefCntBase* nonnull %244) #14
  br label %249

249:                                              ; preds = %243, %239, %235
  %250 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %12, i64 0, i32 2, i32 0
  %251 = load %class.SkPathEffect*, %class.SkPathEffect** %250, align 8
  %252 = icmp eq %class.SkPathEffect* %251, null
  br i1 %252, label %263, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %251, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = atomicrmw add i32* %254, i32 -1 acq_rel
  %256 = icmp eq i32 %255, 1
  br i1 %256, label %257, label %263

257:                                              ; preds = %253
  %258 = bitcast %class.SkPathEffect* %251 to %class.SkRefCntBase*
  %259 = bitcast %class.SkPathEffect* %251 to void (%class.SkRefCntBase*)***
  %260 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %259, align 8
  %261 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %260, i64 2
  %262 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %261, align 8
  call void %262(%class.SkRefCntBase* nonnull %258) #14
  br label %263

263:                                              ; preds = %257, %253, %249
  %264 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %12, i64 0, i32 1, i32 0
  %265 = load %class.SkMaskFilter*, %class.SkMaskFilter** %264, align 8
  %266 = icmp eq %class.SkMaskFilter* %265, null
  br i1 %266, label %277, label %267

267:                                              ; preds = %263
  %268 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %265, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = atomicrmw add i32* %268, i32 -1 acq_rel
  %270 = icmp eq i32 %269, 1
  br i1 %270, label %271, label %277

271:                                              ; preds = %267
  %272 = bitcast %class.SkMaskFilter* %265 to %class.SkRefCntBase*
  %273 = bitcast %class.SkMaskFilter* %265 to void (%class.SkRefCntBase*)***
  %274 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %273, align 8
  %275 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %274, i64 2
  %276 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %275, align 8
  call void %276(%class.SkRefCntBase* nonnull %272) #14
  br label %277

277:                                              ; preds = %263, %267, %271
  %278 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %12, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %278) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %179) #14
  br label %281

279:                                              ; preds = %170
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172)
  %280 = bitcast %class.SkSourceGlyphBuffer* %24 to i8*
  br label %281

281:                                              ; preds = %279, %277
  %282 = phi i8* [ %175, %277 ], [ %280, %279 ]
  %283 = load i64, i64* %60, align 8
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %495, label %285

285:                                              ; preds = %281
  %286 = bitcast %class.SkStrikeSpec* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %286) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %286, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc.strikeSpec.4 to i8*), i64 160, i1 false)
  %287 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 0
  %288 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 3
  %289 = load i32, i32* %288, align 4
  call void @_ZN12SkStrikeSpec8MakePathERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlags(%class.SkStrikeSpec* nonnull sret %15, %class.SkFont* dereferenceable(24) %61, %class.SkPaint* dereferenceable(72) %3, %class.SkSurfaceProps* dereferenceable(8) %287, i32 %289) #14
  %290 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %15, i64 0, i32 4
  %291 = load float, float* %290, align 8
  %292 = call float @llvm.fabs.f32(float %291) #14
  %293 = fcmp ugt float %292, 0x3F30000000000000
  br i1 %293, label %294, label %345

294:                                              ; preds = %285
  %295 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 4
  %296 = load %class.SkStrikeForGPUCacheInterface*, %class.SkStrikeForGPUCacheInterface** %295, align 8
  %297 = call %class.SkStrikeForGPU* @_ZNK12SkStrikeSpec24findOrCreateScopedStrikeEP28SkStrikeForGPUCacheInterface(%class.SkStrikeSpec* nonnull %15, %class.SkStrikeForGPUCacheInterface* %296) #14
  %298 = bitcast %class.SkZip* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %298, i8* align 8 %282, i64 24, i1 false) #14
  call void @_ZN21SkDrawableGlyphBuffer11startSourceERK5SkZipIJKtK7SkPointEE(%class.SkDrawableGlyphBuffer* %23, %class.SkZip* nonnull dereferenceable(24) %16) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #14
  %299 = bitcast %class.SkStrikeForGPU* %297 to void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)***
  %300 = load void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)**, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*** %299, align 8
  %301 = getelementptr inbounds void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)** %300, i64 5
  %302 = load void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)** %301, align 8
  call void %302(%class.SkStrikeForGPU* %297, %class.SkDrawableGlyphBuffer* %23, %class.SkSourceGlyphBuffer* %24) #14
  %303 = bitcast i8* %48 to i64*
  %304 = load i64, i64* %303, align 8, !noalias !75
  %305 = bitcast i8* %53 to i64*
  %306 = load i64, i64* %305, align 8, !noalias !75
  %307 = load i64, i64* %51, align 8, !noalias !82
  %308 = icmp eq i64 %307, 0
  %309 = select i1 %308, i64 0, i64 %306
  %310 = select i1 %308, i64 0, i64 %304
  %311 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4
  %312 = bitcast %class.SkZip.19* %311 to i64*
  store i64 %310, i64* %312, align 8, !noalias !82
  %313 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1
  %314 = bitcast %"class.std::__1::__tuple_leaf.23"* %313 to i64*
  store i64 %309, i64* %314, align 8, !noalias !82
  %315 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 1
  store i64 %307, i64* %315, align 8, !noalias !82
  store i64 %310, i64* %56, align 8, !noalias !82
  store i64 %309, i64* %58, align 8, !noalias !82
  store i64 %307, i64* %60, align 8, !noalias !82
  store i64 0, i64* %51, align 8, !noalias !82
  %316 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 3
  %317 = load i32, i32* %316, align 4, !noalias !82
  %318 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 2
  store i32 %317, i32* %318, align 8, !noalias !82
  store i32 0, i32* %316, align 4, !noalias !82
  %319 = sitofp i32 %317 to float
  %320 = load float, float* %290, align 8
  %321 = fmul float %320, %319
  %322 = icmp eq %class.SkGlyphRunPainterInterface* %5, null
  br i1 %322, label %338, label %323

323:                                              ; preds = %294
  %324 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 2
  %325 = load i64, i64* %324, align 8
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %338, label %327

327:                                              ; preds = %323
  %328 = bitcast %class.SkZip.279* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #14
  %329 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0
  %330 = bitcast %class.SkGlyphVariant** %329 to <2 x i64>*
  %331 = load <2 x i64>, <2 x i64>* %330, align 8, !noalias !83
  %332 = bitcast %class.SkZip.279* %17 to <2 x i64>*
  store <2 x i64> %331, <2 x i64>* %332, align 16, !alias.scope !83
  %333 = getelementptr inbounds %class.SkZip.279, %class.SkZip.279* %17, i64 0, i32 1
  store i64 %325, i64* %333, align 16, !alias.scope !83
  %334 = bitcast %class.SkGlyphRunPainterInterface* %5 to void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkFont*, %class.SkStrikeSpec*)***
  %335 = load void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkFont*, %class.SkStrikeSpec*)**, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkFont*, %class.SkStrikeSpec*)*** %334, align 8
  %336 = getelementptr inbounds void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkFont*, %class.SkStrikeSpec*)*, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkFont*, %class.SkStrikeSpec*)** %335, i64 4
  %337 = load void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkFont*, %class.SkStrikeSpec*)*, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkFont*, %class.SkStrikeSpec*)** %336, align 8
  call void %337(%class.SkGlyphRunPainterInterface* nonnull %5, %class.SkZip.279* nonnull dereferenceable(24) %17, %class.SkFont* dereferenceable(24) %61, %class.SkStrikeSpec* nonnull dereferenceable(160) %15) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #14
  br label %338

338:                                              ; preds = %294, %327, %323
  %339 = icmp eq %class.SkStrikeForGPU* %297, null
  br i1 %339, label %345, label %340

340:                                              ; preds = %338
  %341 = bitcast %class.SkStrikeForGPU* %297 to void (%class.SkStrikeForGPU*)***
  %342 = load void (%class.SkStrikeForGPU*)**, void (%class.SkStrikeForGPU*)*** %341, align 8
  %343 = getelementptr inbounds void (%class.SkStrikeForGPU*)*, void (%class.SkStrikeForGPU*)** %342, i64 7
  %344 = load void (%class.SkStrikeForGPU*)*, void (%class.SkStrikeForGPU*)** %343, align 8
  call void %344(%class.SkStrikeForGPU* nonnull %297) #14
  br label %345

345:                                              ; preds = %285, %340, %338
  %346 = phi float [ 0.000000e+00, %285 ], [ %321, %338 ], [ %321, %340 ]
  %347 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %15, i64 0, i32 3, i32 0
  %348 = load %class.SkTypeface*, %class.SkTypeface** %347, align 8
  %349 = icmp eq %class.SkTypeface* %348, null
  br i1 %349, label %360, label %350

350:                                              ; preds = %345
  %351 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %348, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = atomicrmw add i32* %351, i32 -1 acq_rel
  %353 = icmp eq i32 %352, 1
  br i1 %353, label %354, label %360

354:                                              ; preds = %350
  %355 = bitcast %class.SkTypeface* %348 to %class.SkRefCntBase*
  %356 = bitcast %class.SkTypeface* %348 to void (%class.SkRefCntBase*)***
  %357 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %356, align 8
  %358 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %357, i64 2
  %359 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %358, align 8
  call void %359(%class.SkRefCntBase* nonnull %355) #14
  br label %360

360:                                              ; preds = %354, %350, %345
  %361 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %15, i64 0, i32 2, i32 0
  %362 = load %class.SkPathEffect*, %class.SkPathEffect** %361, align 8
  %363 = icmp eq %class.SkPathEffect* %362, null
  br i1 %363, label %374, label %364

364:                                              ; preds = %360
  %365 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %362, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = atomicrmw add i32* %365, i32 -1 acq_rel
  %367 = icmp eq i32 %366, 1
  br i1 %367, label %368, label %374

368:                                              ; preds = %364
  %369 = bitcast %class.SkPathEffect* %362 to %class.SkRefCntBase*
  %370 = bitcast %class.SkPathEffect* %362 to void (%class.SkRefCntBase*)***
  %371 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %370, align 8
  %372 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %371, i64 2
  %373 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %372, align 8
  call void %373(%class.SkRefCntBase* nonnull %369) #14
  br label %374

374:                                              ; preds = %368, %364, %360
  %375 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %15, i64 0, i32 1, i32 0
  %376 = load %class.SkMaskFilter*, %class.SkMaskFilter** %375, align 8
  %377 = icmp eq %class.SkMaskFilter* %376, null
  br i1 %377, label %388, label %378

378:                                              ; preds = %374
  %379 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %376, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = atomicrmw add i32* %379, i32 -1 acq_rel
  %381 = icmp eq i32 %380, 1
  br i1 %381, label %382, label %388

382:                                              ; preds = %378
  %383 = bitcast %class.SkMaskFilter* %376 to %class.SkRefCntBase*
  %384 = bitcast %class.SkMaskFilter* %376 to void (%class.SkRefCntBase*)***
  %385 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %384, align 8
  %386 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %385, i64 2
  %387 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %386, align 8
  call void %387(%class.SkRefCntBase* nonnull %383) #14
  br label %388

388:                                              ; preds = %382, %378, %374
  %389 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %15, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %389) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %286) #14
  %390 = load i64, i64* %60, align 8
  %391 = icmp ne i64 %390, 0
  %392 = fcmp une float %346, 0.000000e+00
  %393 = and i1 %392, %391
  br i1 %393, label %394, label %495

394:                                              ; preds = %388
  %395 = bitcast %class.SkStrikeSpec* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %395) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %395, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc.strikeSpec.4 to i8*), i64 160, i1 false)
  %396 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 0
  %397 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 3
  %398 = load i32, i32* %397, align 4
  call void @_ZN12SkStrikeSpec18MakeSourceFallbackERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsf(%class.SkStrikeSpec* nonnull sret %18, %class.SkFont* dereferenceable(24) %61, %class.SkPaint* dereferenceable(72) %3, %class.SkSurfaceProps* dereferenceable(8) %396, i32 %398, float %346) #14
  %399 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %18, i64 0, i32 4
  %400 = load float, float* %399, align 8
  %401 = call float @llvm.fabs.f32(float %400) #14
  %402 = fcmp ugt float %401, 0x3F30000000000000
  br i1 %402, label %403, label %451

403:                                              ; preds = %394
  %404 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 4
  %405 = load %class.SkStrikeForGPUCacheInterface*, %class.SkStrikeForGPUCacheInterface** %404, align 8
  %406 = call %class.SkStrikeForGPU* @_ZNK12SkStrikeSpec24findOrCreateScopedStrikeEP28SkStrikeForGPUCacheInterface(%class.SkStrikeSpec* nonnull %18, %class.SkStrikeForGPUCacheInterface* %405) #14
  %407 = bitcast %class.SkZip* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %407) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %407, i8* align 8 %282, i64 24, i1 false) #14
  call void @_ZN21SkDrawableGlyphBuffer11startSourceERK5SkZipIJKtK7SkPointEE(%class.SkDrawableGlyphBuffer* %23, %class.SkZip* nonnull dereferenceable(24) %19) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %407) #14
  %408 = bitcast %class.SkStrikeForGPU* %406 to void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)***
  %409 = load void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)**, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*** %408, align 8
  %410 = getelementptr inbounds void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)** %409, i64 3
  %411 = load void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)*, void (%class.SkStrikeForGPU*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)** %410, align 8
  call void %411(%class.SkStrikeForGPU* %406, %class.SkDrawableGlyphBuffer* %23, %class.SkSourceGlyphBuffer* %24) #14
  %412 = bitcast i8* %48 to i64*
  %413 = load i64, i64* %412, align 8, !noalias !86
  %414 = bitcast i8* %53 to i64*
  %415 = load i64, i64* %414, align 8, !noalias !86
  %416 = load i64, i64* %51, align 8, !noalias !93
  %417 = icmp eq i64 %416, 0
  %418 = select i1 %417, i64 0, i64 %415
  %419 = select i1 %417, i64 0, i64 %413
  %420 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4
  %421 = bitcast %class.SkZip.19* %420 to i64*
  store i64 %419, i64* %421, align 8, !noalias !93
  %422 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1
  %423 = bitcast %"class.std::__1::__tuple_leaf.23"* %422 to i64*
  store i64 %418, i64* %423, align 8, !noalias !93
  %424 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 4, i32 1
  store i64 %416, i64* %424, align 8, !noalias !93
  store i64 %419, i64* %56, align 8, !noalias !93
  store i64 %418, i64* %58, align 8, !noalias !93
  store i64 %416, i64* %60, align 8, !noalias !93
  store i64 0, i64* %51, align 8, !noalias !93
  %425 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 3
  %426 = load i32, i32* %425, align 4, !noalias !93
  %427 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 6, i32 2
  store i32 %426, i32* %427, align 8, !noalias !93
  store i32 0, i32* %425, align 4, !noalias !93
  %428 = icmp eq %class.SkGlyphRunPainterInterface* %5, null
  br i1 %428, label %444, label %429

429:                                              ; preds = %403
  %430 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 2
  %431 = load i64, i64* %430, align 8
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %444, label %433

433:                                              ; preds = %429
  %434 = bitcast %class.SkZip.279* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %434) #14
  %435 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %0, i64 0, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0
  %436 = bitcast %class.SkGlyphVariant** %435 to <2 x i64>*
  %437 = load <2 x i64>, <2 x i64>* %436, align 8, !noalias !94
  %438 = bitcast %class.SkZip.279* %20 to <2 x i64>*
  store <2 x i64> %437, <2 x i64>* %438, align 16, !alias.scope !94
  %439 = getelementptr inbounds %class.SkZip.279, %class.SkZip.279* %20, i64 0, i32 1
  store i64 %431, i64* %439, align 16, !alias.scope !94
  %440 = bitcast %class.SkGlyphRunPainterInterface* %5 to void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)***
  %441 = load void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)**, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)*** %440, align 8
  %442 = getelementptr inbounds void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)*, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)** %441, i64 3
  %443 = load void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)*, void (%class.SkGlyphRunPainterInterface*, %class.SkZip.279*, %class.SkStrikeSpec*)** %442, align 8
  call void %443(%class.SkGlyphRunPainterInterface* nonnull %5, %class.SkZip.279* nonnull dereferenceable(24) %20, %class.SkStrikeSpec* nonnull dereferenceable(160) %18) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %434) #14
  br label %444

444:                                              ; preds = %403, %433, %429
  %445 = icmp eq %class.SkStrikeForGPU* %406, null
  br i1 %445, label %451, label %446

446:                                              ; preds = %444
  %447 = bitcast %class.SkStrikeForGPU* %406 to void (%class.SkStrikeForGPU*)***
  %448 = load void (%class.SkStrikeForGPU*)**, void (%class.SkStrikeForGPU*)*** %447, align 8
  %449 = getelementptr inbounds void (%class.SkStrikeForGPU*)*, void (%class.SkStrikeForGPU*)** %448, i64 7
  %450 = load void (%class.SkStrikeForGPU*)*, void (%class.SkStrikeForGPU*)** %449, align 8
  call void %450(%class.SkStrikeForGPU* nonnull %406) #14
  br label %451

451:                                              ; preds = %394, %446, %444
  %452 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %18, i64 0, i32 3, i32 0
  %453 = load %class.SkTypeface*, %class.SkTypeface** %452, align 8
  %454 = icmp eq %class.SkTypeface* %453, null
  br i1 %454, label %465, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %453, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = atomicrmw add i32* %456, i32 -1 acq_rel
  %458 = icmp eq i32 %457, 1
  br i1 %458, label %459, label %465

459:                                              ; preds = %455
  %460 = bitcast %class.SkTypeface* %453 to %class.SkRefCntBase*
  %461 = bitcast %class.SkTypeface* %453 to void (%class.SkRefCntBase*)***
  %462 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %461, align 8
  %463 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %462, i64 2
  %464 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %463, align 8
  call void %464(%class.SkRefCntBase* nonnull %460) #14
  br label %465

465:                                              ; preds = %459, %455, %451
  %466 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %18, i64 0, i32 2, i32 0
  %467 = load %class.SkPathEffect*, %class.SkPathEffect** %466, align 8
  %468 = icmp eq %class.SkPathEffect* %467, null
  br i1 %468, label %479, label %469

469:                                              ; preds = %465
  %470 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %467, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = atomicrmw add i32* %470, i32 -1 acq_rel
  %472 = icmp eq i32 %471, 1
  br i1 %472, label %473, label %479

473:                                              ; preds = %469
  %474 = bitcast %class.SkPathEffect* %467 to %class.SkRefCntBase*
  %475 = bitcast %class.SkPathEffect* %467 to void (%class.SkRefCntBase*)***
  %476 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %475, align 8
  %477 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %476, i64 2
  %478 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %477, align 8
  call void %478(%class.SkRefCntBase* nonnull %474) #14
  br label %479

479:                                              ; preds = %473, %469, %465
  %480 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %18, i64 0, i32 1, i32 0
  %481 = load %class.SkMaskFilter*, %class.SkMaskFilter** %480, align 8
  %482 = icmp eq %class.SkMaskFilter* %481, null
  br i1 %482, label %493, label %483

483:                                              ; preds = %479
  %484 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %481, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %485 = atomicrmw add i32* %484, i32 -1 acq_rel
  %486 = icmp eq i32 %485, 1
  br i1 %486, label %487, label %493

487:                                              ; preds = %483
  %488 = bitcast %class.SkMaskFilter* %481 to %class.SkRefCntBase*
  %489 = bitcast %class.SkMaskFilter* %481 to void (%class.SkRefCntBase*)***
  %490 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %489, align 8
  %491 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %490, i64 2
  %492 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %491, align 8
  call void %492(%class.SkRefCntBase* nonnull %488) #14
  br label %493

493:                                              ; preds = %479, %483, %487
  %494 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %18, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %494) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %395) #14
  br label %495

495:                                              ; preds = %173, %281, %493, %388
  call void @_ZN21SkDrawableGlyphBuffer5resetEv(%class.SkDrawableGlyphBuffer* %23) #14
  call void @_ZN19SkSourceGlyphBuffer5resetEv(%class.SkSourceGlyphBuffer* %24) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainter13ensureBuffersERK10SkGlyphRun(%"struct.SkGlyphRunListPainter::ScopedBuffers"* noalias nocapture sret, %class.SkGlyphRunListPainter*, %class.SkGlyphRun* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %2, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.SkGlyphRunListPainter::ScopedBuffers", %"struct.SkGlyphRunListPainter::ScopedBuffers"* %0, i64 0, i32 0
  store %class.SkGlyphRunListPainter* %1, %class.SkGlyphRunListPainter** %6, align 8
  %7 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %1, i64 0, i32 5
  tail call void @_ZN21SkDrawableGlyphBuffer10ensureSizeEm(%class.SkDrawableGlyphBuffer* %7, i64 %5) #14
  ret void
}

declare zeroext i8 @_ZNK13GrSDFTControl11drawingTypeERK6SkFontRK7SkPaintRK8SkMatrix(%class.GrSDFTControl*, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl(%"class.std::__1::tuple.289"* sret, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), %class.SkMatrix* dereferenceable(40), %class.GrSDFTControl* dereferenceable(12)) local_unnamed_addr #1

declare %class.SkStrikeForGPU* @_ZNK12SkStrikeSpec24findOrCreateScopedStrikeEP28SkStrikeForGPUCacheInterface(%class.SkStrikeSpec*, %class.SkStrikeForGPUCacheInterface*) local_unnamed_addr #1

declare void @_ZN21SkDrawableGlyphBuffer14startGPUDeviceERK5SkZipIJKtK7SkPointEERK8SkMatrixRK27SkGlyphPositionRoundingSpec(%class.SkDrawableGlyphBuffer*, %class.SkZip* dereferenceable(24), %class.SkMatrix* dereferenceable(40), %struct.SkGlyphPositionRoundingSpec* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN12SkStrikeSpec18MakeSourceFallbackERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsf(%class.SkStrikeSpec* sret, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainter13ScopedBuffersC2EPS_m(%"struct.SkGlyphRunListPainter::ScopedBuffers"* nocapture, %class.SkGlyphRunListPainter*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SkGlyphRunListPainter::ScopedBuffers", %"struct.SkGlyphRunListPainter::ScopedBuffers"* %0, i64 0, i32 0
  store %class.SkGlyphRunListPainter* %1, %class.SkGlyphRunListPainter** %4, align 8
  %5 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %1, i64 0, i32 5
  tail call void @_ZN21SkDrawableGlyphBuffer10ensureSizeEm(%class.SkDrawableGlyphBuffer* %5, i64 %2) #14
  ret void
}

declare void @_ZN21SkDrawableGlyphBuffer10ensureSizeEm(%class.SkDrawableGlyphBuffer*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkGlyphRunListPainter13ScopedBuffersD2Ev(%"struct.SkGlyphRunListPainter::ScopedBuffers"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.SkGlyphRunListPainter::ScopedBuffers", %"struct.SkGlyphRunListPainter::ScopedBuffers"* %0, i64 0, i32 0
  %3 = load %class.SkGlyphRunListPainter*, %class.SkGlyphRunListPainter** %2, align 8
  %4 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %3, i64 0, i32 5
  tail call void @_ZN21SkDrawableGlyphBuffer5resetEv(%class.SkDrawableGlyphBuffer* %4) #14
  %5 = load %class.SkGlyphRunListPainter*, %class.SkGlyphRunListPainter** %2, align 8
  %6 = getelementptr inbounds %class.SkGlyphRunListPainter, %class.SkGlyphRunListPainter* %5, i64 0, i32 6
  tail call void @_ZN19SkSourceGlyphBuffer5resetEv(%class.SkSourceGlyphBuffer* %6) #14
  ret void
}

declare void @_ZN21SkDrawableGlyphBuffer5resetEv(%class.SkDrawableGlyphBuffer*) local_unnamed_addr #1

declare void @_ZN19SkSourceGlyphBuffer5resetEv(%class.SkSourceGlyphBuffer*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden <2 x float> @_ZN27SkGlyphPositionRoundingSpec18HalfAxisSampleFreqEb15SkAxisAlignment(i1 zeroext, i32) local_unnamed_addr #5 align 2 {
  br i1 %0, label %3, label %7

3:                                                ; preds = %2
  switch i32 %1, label %6 [
    i32 1, label %7
    i32 2, label %4
    i32 0, label %5
  ]

4:                                                ; preds = %3
  br label %7

5:                                                ; preds = %3
  br label %7

6:                                                ; preds = %3
  br label %7

7:                                                ; preds = %3, %2, %6, %5, %4
  %8 = phi <2 x float> [ zeroinitializer, %6 ], [ <float 1.250000e-01, float 1.250000e-01>, %5 ], [ <float 5.000000e-01, float 1.250000e-01>, %4 ], [ <float 5.000000e-01, float 5.000000e-01>, %2 ], [ <float 1.250000e-01, float 5.000000e-01>, %3 ]
  ret <2 x float> %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN27SkGlyphPositionRoundingSpec18IgnorePositionMaskEb15SkAxisAlignment(i1 zeroext, i32) local_unnamed_addr #6 align 2 {
  %3 = icmp ne i32 %1, 2
  %4 = and i1 %3, %0
  %5 = icmp ne i32 %1, 1
  %6 = and i1 %5, %0
  %7 = select i1 %6, i64 -4294967296, i64 0
  %8 = select i1 %4, i64 4294967295, i64 0
  %9 = or i64 %7, %8
  ret i64 %9
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN27SkGlyphPositionRoundingSpec23IgnorePositionFieldMaskEb15SkAxisAlignment(i1 zeroext, i32) local_unnamed_addr #7 align 2 {
  %3 = icmp ne i32 %1, 2
  %4 = and i1 %3, %0
  %5 = icmp ne i32 %1, 1
  %6 = and i1 %5, %0
  %7 = select i1 %6, i64 3377699720527872, i64 0
  %8 = select i1 %4, i64 3, i64 0
  %9 = or i64 %7, %8
  ret i64 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN27SkGlyphPositionRoundingSpecC2Eb15SkAxisAlignment(%struct.SkGlyphPositionRoundingSpec* nocapture, i1 zeroext, i32) unnamed_addr #8 align 2 {
  br i1 %1, label %4, label %8

4:                                                ; preds = %3
  switch i32 %2, label %7 [
    i32 1, label %8
    i32 2, label %5
    i32 0, label %6
  ]

5:                                                ; preds = %4
  br label %8

6:                                                ; preds = %4
  br label %8

7:                                                ; preds = %4
  br label %8

8:                                                ; preds = %3, %4, %5, %6, %7
  %9 = phi <2 x float> [ zeroinitializer, %7 ], [ <float 1.250000e-01, float 1.250000e-01>, %6 ], [ <float 5.000000e-01, float 1.250000e-01>, %5 ], [ <float 5.000000e-01, float 5.000000e-01>, %3 ], [ <float 1.250000e-01, float 5.000000e-01>, %4 ]
  %10 = bitcast %struct.SkGlyphPositionRoundingSpec* %0 to <2 x float>*
  store <2 x float> %9, <2 x float>* %10, align 4
  %11 = getelementptr inbounds %struct.SkGlyphPositionRoundingSpec, %struct.SkGlyphPositionRoundingSpec* %0, i64 0, i32 1
  %12 = icmp ne i32 %2, 2
  %13 = and i1 %12, %1
  %14 = icmp ne i32 %2, 1
  %15 = and i1 %14, %1
  %16 = select i1 %15, i64 -4294967296, i64 0
  %17 = select i1 %13, i64 4294967295, i64 0
  %18 = or i64 %16, %17
  %19 = bitcast %struct.SkIPoint* %11 to i64*
  store i64 %18, i64* %19, align 4
  %20 = getelementptr inbounds %struct.SkGlyphPositionRoundingSpec, %struct.SkGlyphPositionRoundingSpec* %0, i64 0, i32 2
  %21 = select i1 %15, i64 3377699720527872, i64 0
  %22 = select i1 %13, i64 3, i64 0
  %23 = or i64 %21, %22
  %24 = bitcast %struct.SkIPoint* %20 to i64*
  store i64 %23, i64* %24, align 4
  ret void
}

declare zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare i64 @_ZN13SkScalerCache21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.SkScalerCache*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*) local_unnamed_addr #1

declare void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #4

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

declare i64 @_ZN13SkScalerCache25prepareForDrawingMasksCPUEP21SkDrawableGlyphBuffer(%class.SkScalerCache*, %class.SkDrawableGlyphBuffer*) local_unnamed_addr #1

declare void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect*, %struct.SkPoint*) local_unnamed_addr #1

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN21SkGlyphRunListPainter13ensureBuffersERK14SkGlyphRunList: argument 0"}
!4 = distinct !{!4, !"_ZN21SkGlyphRunListPainter13ensureBuffersERK14SkGlyphRunList"}
!5 = !{!6, !8, !10}
!6 = distinct !{!6, !7, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_"}
!8 = distinct !{!8, !9, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_: argument 0"}
!9 = distinct !{!9, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_"}
!10 = distinct !{!10, !11, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv: argument 0"}
!11 = distinct !{!11, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv"}
!12 = !{!10}
!13 = !{!14, !16, !18}
!14 = distinct !{!14, !15, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_"}
!16 = distinct !{!16, !17, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_: argument 0"}
!17 = distinct !{!17, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_"}
!18 = distinct !{!18, !19, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv: argument 0"}
!19 = distinct !{!19, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv"}
!20 = !{!18}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!23 = distinct !{!23, !"_ZN8SkMatrix5ScaleEff"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN21SkDrawableGlyphBuffer8drawableEv: argument 0"}
!26 = distinct !{!26, !"_ZN21SkDrawableGlyphBuffer8drawableEv"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanI14SkGlyphVariantERNSt3__16vectorI7SkPointNS5_9allocatorIS7_EEEEEEEDaDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZN15SkMakeZipDetail7MakeZipIJR6SkSpanI14SkGlyphVariantERNSt3__16vectorI7SkPointNS5_9allocatorIS7_EEEEEEEDaDpOT_"}
!30 = distinct !{!30, !31, !"_Z9SkMakeZipIJR6SkSpanI14SkGlyphVariantERNSt3__16vectorI7SkPointNS4_9allocatorIS6_EEEEEEDaDpOT_: argument 0"}
!31 = distinct !{!31, !"_Z9SkMakeZipIJR6SkSpanI14SkGlyphVariantERNSt3__16vectorI7SkPointNS4_9allocatorIS6_EEEEEEDaDpOT_"}
!32 = !{!33, !35, !37}
!33 = distinct !{!33, !34, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_: argument 0"}
!34 = distinct !{!34, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_"}
!35 = distinct !{!35, !36, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_: argument 0"}
!36 = distinct !{!36, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_"}
!37 = distinct !{!37, !38, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv: argument 0"}
!38 = distinct !{!38, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv"}
!39 = !{!37}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!42 = distinct !{!42, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!43 = distinct !{!43, !44, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE: argument 0"}
!44 = distinct !{!44, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE"}
!45 = !{!46, !48}
!46 = distinct !{!46, !47, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!47 = distinct !{!47, !"_ZN8SkMatrix9TranslateEff"}
!48 = distinct !{!48, !49, !"_ZN8SkMatrix9TranslateE7SkPoint: argument 0"}
!49 = distinct !{!49, !"_ZN8SkMatrix9TranslateE7SkPoint"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN21SkGlyphRunListPainter13ensureBuffersERK10SkGlyphRun: argument 0"}
!52 = distinct !{!52, !"_ZN21SkGlyphRunListPainter13ensureBuffersERK10SkGlyphRun"}
!53 = !{!54, !56, !58}
!54 = distinct !{!54, !55, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_: argument 0"}
!55 = distinct !{!55, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_"}
!56 = distinct !{!56, !57, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_: argument 0"}
!57 = distinct !{!57, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_"}
!58 = distinct !{!58, !59, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv: argument 0"}
!59 = distinct !{!59, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv"}
!60 = !{!58}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN21SkDrawableGlyphBuffer8drawableEv: argument 0"}
!63 = distinct !{!63, !"_ZN21SkDrawableGlyphBuffer8drawableEv"}
!64 = !{!65, !67, !69}
!65 = distinct !{!65, !66, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_: argument 0"}
!66 = distinct !{!66, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_"}
!67 = distinct !{!67, !68, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_: argument 0"}
!68 = distinct !{!68, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_"}
!69 = distinct !{!69, !70, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv: argument 0"}
!70 = distinct !{!70, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv"}
!71 = !{!69}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN21SkDrawableGlyphBuffer8drawableEv: argument 0"}
!74 = distinct !{!74, !"_ZN21SkDrawableGlyphBuffer8drawableEv"}
!75 = !{!76, !78, !80}
!76 = distinct !{!76, !77, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_: argument 0"}
!77 = distinct !{!77, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_"}
!78 = distinct !{!78, !79, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_: argument 0"}
!79 = distinct !{!79, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_"}
!80 = distinct !{!80, !81, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv: argument 0"}
!81 = distinct !{!81, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv"}
!82 = !{!80}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN21SkDrawableGlyphBuffer8drawableEv: argument 0"}
!85 = distinct !{!85, !"_ZN21SkDrawableGlyphBuffer8drawableEv"}
!86 = !{!87, !89, !91}
!87 = distinct !{!87, !88, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_: argument 0"}
!88 = distinct !{!88, !"_ZN15SkMakeZipDetail7MakeZipIJR9SkSTArrayILi4EtLb0EERS1_ILi4E7SkPointLb0EEEEEDaDpOT_"}
!89 = distinct !{!89, !90, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_: argument 0"}
!90 = distinct !{!90, !"_Z9SkMakeZipIJR9SkSTArrayILi4EtLb0EERS0_ILi4E7SkPointLb0EEEEDaDpOT_"}
!91 = distinct !{!91, !92, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv: argument 0"}
!92 = distinct !{!92, !"_ZN19SkSourceGlyphBuffer19flipRejectsToSourceEv"}
!93 = !{!91}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZN21SkDrawableGlyphBuffer8drawableEv: argument 0"}
!96 = distinct !{!96, !"_ZN21SkDrawableGlyphBuffer8drawableEv"}
