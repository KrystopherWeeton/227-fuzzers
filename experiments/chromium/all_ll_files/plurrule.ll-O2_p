; ModuleID = '../../third_party/icu/source/i18n/plurrule.cpp'
source_filename = "../../third_party/icu/source/i18n/plurrule.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.icu_69::IFixedDecimal" = type { i32 (...)** }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::PluralRules" = type <{ %"class.icu_69::UObject", %"class.icu_69::RuleChain"*, %"class.icu_69::StandardPluralRanges"*, i32, [4 x i8] }>
%"class.icu_69::RuleChain" = type { i32 (...)**, %"class.icu_69::UnicodeString", %"class.icu_69::RuleChain"*, %"class.icu_69::OrConstraint"*, %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", i8, i8, i32 }
%"class.icu_69::OrConstraint" = type <{ i32 (...)**, %"class.icu_69::AndConstraint"*, %"class.icu_69::OrConstraint"*, i32, [4 x i8] }>
%"class.icu_69::AndConstraint" = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %"class.icu_69::UVector32"*, i8, i8, [2 x i8], i32, %"class.icu_69::AndConstraint"*, i32, [4 x i8] }>
%"class.icu_69::UVector32" = type { %"class.icu_69::UObject", i32, i32, i32, i32* }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%"class.icu_69::StandardPluralRanges" = type { %"class.icu_69::MaybeStackArray.1", i32, [4 x i8] }
%"class.icu_69::MaybeStackArray.1" = type <{ %"struct.icu_69::StandardPluralRanges::StandardPluralRangeTriple"*, i32, i8, [3 x i8], [3 x %"struct.icu_69::StandardPluralRanges::StandardPluralRangeTriple"], [4 x i8] }>
%"struct.icu_69::StandardPluralRanges::StandardPluralRangeTriple" = type { i32, i32, i32 }
%"class.icu_69::SharedPluralRules" = type { %"class.icu_69::SharedObject", %"class.icu_69::PluralRules"* }
%"class.icu_69::SharedObject" = type { %"class.icu_69::UObject", i32, %"struct.std::__1::atomic", %"class.icu_69::UnifiedCacheBase"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.icu_69::UnifiedCacheBase" = type { %"class.icu_69::UObject" }
%"class.icu_69::PluralRuleParser" = type { i32 (...)**, %"class.icu_69::UnicodeString"*, i32, %"class.icu_69::UnicodeString", i32, i32, %"class.icu_69::AndConstraint"*, %"class.icu_69::RuleChain"*, i32, i32 }
%"class.icu_69::PluralKeywordEnumeration" = type { %"class.icu_69::StringEnumeration.base", i32, %"class.icu_69::UVector" }
%"class.icu_69::StringEnumeration.base" = type <{ %"class.icu_69::UObject", %"class.icu_69::UnicodeString", [32 x i8], i8*, i32 }>
%"class.icu_69::UVector" = type { %"class.icu_69::UObject", i32, i32, %union.UElement*, void (i8*)*, i8 (i8*, i8*)* }
%union.UElement = type { i8* }
%"class.icu_69::FixedDecimal" = type { %"class.icu_69::IFixedDecimal", %"class.icu_69::UObject", double, i32, i64, i64, i64, i32, i8, i8, i8, i8 }
%"class.icu_69::PluralAvailableLocalesEnumeration" = type { %"class.icu_69::StringEnumeration.base", i32, %struct.UResourceBundle*, %struct.UResourceBundle* }
%struct.UResourceBundle = type opaque
%"class.icu_69::LocalPointer.4" = type { %"class.icu_69::LocalPointerBase.5" }
%"class.icu_69::LocalPointerBase.5" = type { %"class.icu_69::StandardPluralRanges"* }
%"class.icu_69::StringEnumeration" = type <{ %"class.icu_69::UObject", %"class.icu_69::UnicodeString", [32 x i8], i8*, i32, [4 x i8] }>
%"class.icu_69::ConstChar16Ptr" = type { i16* }
%"class.icu_69::LocaleCacheKey" = type { %"class.icu_69::CacheKey.base", [3 x i8], %"class.icu_69::Locale" }
%"class.icu_69::CacheKey.base" = type { %"class.icu_69::CacheKeyBase.base" }
%"class.icu_69::CacheKeyBase.base" = type <{ %"class.icu_69::UObject", i32, i8 }>
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::UnifiedCache" = type { %"class.icu_69::UnifiedCacheBase", %struct.UHashtable*, i32, i32, i32, i32, i32, i64, %"class.icu_69::SharedObject"* }
%struct.UHashtable = type { %struct.UHashElement*, i32 (i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, void (i8*)*, void (i8*)*, i32, i32, i32, i32, float, float, i8, i8 }
%struct.UHashElement = type { i32, %union.UElement, %union.UElement }
%"class.icu_69::CacheKey" = type { %"class.icu_69::CacheKeyBase.base", [3 x i8] }
%"class.icu_69::CacheKeyBase" = type <{ %"class.icu_69::UObject", i32, i8, [3 x i8] }>
%"class.icu_69::number::FormattedNumber" = type <{ %"class.icu_69::FormattedValue", %"class.icu_69::number::impl::UFormattedNumberData"*, i32, [4 x i8] }>
%"class.icu_69::FormattedValue" = type { i32 (...)** }
%"class.icu_69::number::impl::UFormattedNumberData" = type { %"class.icu_69::FormattedValueStringBuilderImpl.base", [4 x i8], %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::MeasureUnit", i8* }
%"class.icu_69::FormattedValueStringBuilderImpl.base" = type <{ %"class.icu_69::FormattedValue", %"class.icu_69::FormattedStringBuilder", %"struct.icu_69::FormattedStringBuilder::Field", [7 x i8], %"class.icu_69::MaybeStackArray.13", i32 }>
%"class.icu_69::FormattedStringBuilder" = type { i8, %"union.icu_69::FormattedStringBuilder::ValueOrHeapArray", %"union.icu_69::FormattedStringBuilder::ValueOrHeapArray.11", i32, i32 }
%"union.icu_69::FormattedStringBuilder::ValueOrHeapArray" = type { %struct.anon.10, [64 x i8] }
%struct.anon.10 = type { i16*, i32 }
%"union.icu_69::FormattedStringBuilder::ValueOrHeapArray.11" = type { %struct.anon.12, [24 x i8] }
%struct.anon.12 = type { %"struct.icu_69::FormattedStringBuilder::Field"*, i32 }
%"struct.icu_69::FormattedStringBuilder::Field" = type { i8 }
%"class.icu_69::MaybeStackArray.13" = type { %"struct.icu_69::SpanInfo"*, i32, i8, [8 x %"struct.icu_69::SpanInfo"] }
%"struct.icu_69::SpanInfo" = type { i32, i32, i32, i32 }
%"class.icu_69::number::impl::DecimalQuantity" = type <{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, %union.anon, i8, i8, [6 x i8] }>
%union.anon = type { %struct.anon.14 }
%struct.anon.14 = type { i8*, i32 }
%"class.icu_69::MeasureUnit" = type <{ %"class.icu_69::UObject", %"class.icu_69::MeasureUnitImpl"*, i16, i8, [5 x i8] }>
%"class.icu_69::MeasureUnitImpl" = type { i32, %"class.icu_69::MaybeStackVector", %"class.icu_69::CharString" }
%"class.icu_69::MaybeStackVector" = type { %"class.icu_69::MemoryPool" }
%"class.icu_69::MemoryPool" = type { i32, %"class.icu_69::MaybeStackArray.15" }
%"class.icu_69::MaybeStackArray.15" = type { %"struct.icu_69::SingleUnitImpl"**, i32, i8, [8 x %"struct.icu_69::SingleUnitImpl"*] }
%"struct.icu_69::SingleUnitImpl" = type { i32, i32, i32 }
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::number::FormattedNumberRange" = type <{ %"class.icu_69::FormattedValue", %"class.icu_69::number::impl::UFormattedNumberRangeData"*, i32, [4 x i8] }>
%"class.icu_69::number::impl::UFormattedNumberRangeData" = type { %"class.icu_69::FormattedValueStringBuilderImpl.base", [4 x i8], %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity", i32, [4 x i8] }
%struct.anon = type { i16, [27 x i16] }
%"class.std::type_info" = type { i32 (...)**, i8* }

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

$_ZN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEED2Ev = comdat any

$_ZNK6icu_6912UnifiedCache3getINS_17SharedPluralRulesEEEvRKNS_8CacheKeyIT_EEPKvRPKS4_R10UErrorCode = comdat any

$_ZN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEED0Ev = comdat any

$_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE8hashCodeEv = comdat any

$_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE5cloneEv = comdat any

$_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEeqERKNS_12CacheKeyBaseE = comdat any

$_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE16writeDescriptionEPci = comdat any

$_ZTSN6icu_697UMemoryE = comdat any

$_ZTIN6icu_697UMemoryE = comdat any

$_ZTVN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE = comdat any

$_ZTSN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE = comdat any

$_ZTSN6icu_698CacheKeyINS_17SharedPluralRulesEEE = comdat any

$_ZTIN6icu_698CacheKeyINS_17SharedPluralRulesEEE = comdat any

$_ZTIN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE = comdat any

@_ZZN6icu_6911PluralRules16getStaticClassIDEvE7classID = internal global i8 0, align 1
@_ZZN6icu_6924PluralKeywordEnumeration16getStaticClassIDEvE7classID = internal global i8 0, align 1
@_ZTVN6icu_6911PluralRulesE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6911PluralRulesE to i8*), i8* bitcast (void (%"class.icu_69::PluralRules"*)* @_ZN6icu_6911PluralRulesD2Ev to i8*), i8* bitcast (void (%"class.icu_69::PluralRules"*)* @_ZN6icu_6911PluralRulesD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::PluralRules"*)* @_ZNK6icu_6911PluralRules17getDynamicClassIDEv to i8*), i8* bitcast (i8 (%"class.icu_69::PluralRules"*, %"class.icu_69::PluralRules"*)* @_ZNK6icu_6911PluralRuleseqERKS0_ to i8*)] }, align 8
@_ZTVN6icu_6917SharedPluralRulesE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917SharedPluralRulesE to i8*), i8* bitcast (void (%"class.icu_69::SharedPluralRules"*)* @_ZN6icu_6917SharedPluralRulesD2Ev to i8*), i8* bitcast (void (%"class.icu_69::SharedPluralRules"*)* @_ZN6icu_6917SharedPluralRulesD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*)] }, align 8
@_ZN6icu_69L19PLURAL_DEFAULT_RULEE = internal constant [9 x i16] [i16 111, i16 116, i16 104, i16 101, i16 114, i16 58, i16 32, i16 110, i16 0], align 16
@_ZN6icu_69L20PLURAL_KEYWORD_OTHERE = internal constant [6 x i16] [i16 111, i16 116, i16 104, i16 101, i16 114, i16 0], align 2
@.str = private unnamed_addr constant [8 x i8] c"plurals\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"locales\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"locales_ordinals\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"rules\00", align 1
@_ZTVN6icu_6913AndConstraintE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6913AndConstraintE to i8*), i8* bitcast (void (%"class.icu_69::AndConstraint"*)* @_ZN6icu_6913AndConstraintD2Ev to i8*), i8* bitcast (void (%"class.icu_69::AndConstraint"*)* @_ZN6icu_6913AndConstraintD0Ev to i8*)] }, align 8
@_ZTVN6icu_6912OrConstraintE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6912OrConstraintE to i8*), i8* bitcast (void (%"class.icu_69::OrConstraint"*)* @_ZN6icu_6912OrConstraintD2Ev to i8*), i8* bitcast (void (%"class.icu_69::OrConstraint"*)* @_ZN6icu_6912OrConstraintD0Ev to i8*)] }, align 8
@_ZTVN6icu_699RuleChainE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_699RuleChainE to i8*), i8* bitcast (void (%"class.icu_69::RuleChain"*)* @_ZN6icu_699RuleChainD2Ev to i8*), i8* bitcast (void (%"class.icu_69::RuleChain"*)* @_ZN6icu_699RuleChainD0Ev to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [5 x i16] [i16 32, i16 105, i16 115, i16 32, i16 0], align 2
@.str.5 = private unnamed_addr constant [5 x i16] [i16 110, i16 111, i16 116, i16 32, i16 0], align 2
@.str.6 = private unnamed_addr constant [5 x i16] [i16 109, i16 111, i16 100, i16 32, i16 0], align 2
@.str.7 = private unnamed_addr constant [9 x i16] [i16 32, i16 105, i16 115, i16 32, i16 110, i16 111, i16 116, i16 32, i16 0], align 2
@.str.8 = private unnamed_addr constant [9 x i16] [i16 32, i16 110, i16 111, i16 116, i16 32, i16 105, i16 110, i16 32, i16 0], align 2
@.str.9 = private unnamed_addr constant [13 x i16] [i16 32, i16 110, i16 111, i16 116, i16 32, i16 119, i16 105, i16 116, i16 104, i16 105, i16 110, i16 32, i16 0], align 2
@.str.10 = private unnamed_addr constant [5 x i16] [i16 32, i16 105, i16 110, i16 32, i16 0], align 2
@.str.11 = private unnamed_addr constant [9 x i16] [i16 32, i16 119, i16 105, i16 116, i16 104, i16 105, i16 110, i16 32, i16 0], align 2
@.str.12 = private unnamed_addr constant [3 x i16] [i16 46, i16 46, i16 0], align 2
@.str.13 = private unnamed_addr constant [3 x i16] [i16 44, i16 32, i16 0], align 2
@.str.14 = private unnamed_addr constant [6 x i16] [i16 32, i16 97, i16 110, i16 100, i16 32, i16 0], align 2
@.str.15 = private unnamed_addr constant [5 x i16] [i16 32, i16 111, i16 114, i16 32, i16 0], align 2
@.str.16 = private unnamed_addr constant [3 x i16] [i16 59, i16 32, i16 0], align 2
@_ZTVN6icu_6916PluralRuleParserE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6916PluralRuleParserE to i8*), i8* bitcast (void (%"class.icu_69::PluralRuleParser"*)* @_ZN6icu_6916PluralRuleParserD2Ev to i8*), i8* bitcast (void (%"class.icu_69::PluralRuleParser"*)* @_ZN6icu_6916PluralRuleParserD0Ev to i8*)] }, align 8
@_ZN6icu_69L8PK_VAR_NE = internal constant [2 x i16] [i16 110, i16 0], align 2
@_ZN6icu_69L8PK_VAR_IE = internal constant [2 x i16] [i16 105, i16 0], align 2
@_ZN6icu_69L8PK_VAR_FE = internal constant [2 x i16] [i16 102, i16 0], align 2
@_ZN6icu_69L8PK_VAR_TE = internal constant [2 x i16] [i16 116, i16 0], align 2
@_ZN6icu_69L8PK_VAR_EE = internal constant [2 x i16] [i16 101, i16 0], align 2
@_ZN6icu_69L8PK_VAR_CE = internal constant [2 x i16] [i16 99, i16 0], align 2
@_ZN6icu_69L8PK_VAR_VE = internal constant [2 x i16] [i16 118, i16 0], align 2
@_ZN6icu_69L5PK_ISE = internal constant [3 x i16] [i16 105, i16 115, i16 0], align 2
@_ZN6icu_69L6PK_ANDE = internal constant [4 x i16] [i16 97, i16 110, i16 100, i16 0], align 2
@_ZN6icu_69L5PK_INE = internal constant [3 x i16] [i16 105, i16 110, i16 0], align 2
@_ZN6icu_69L9PK_WITHINE = internal constant [7 x i16] [i16 119, i16 105, i16 116, i16 104, i16 105, i16 110, i16 0], align 2
@_ZN6icu_69L6PK_NOTE = internal constant [4 x i16] [i16 110, i16 111, i16 116, i16 0], align 2
@_ZN6icu_69L6PK_MODE = internal constant [4 x i16] [i16 109, i16 111, i16 100, i16 0], align 2
@_ZN6icu_69L5PK_ORE = internal constant [3 x i16] [i16 111, i16 114, i16 0], align 2
@_ZN6icu_69L10PK_DECIMALE = internal constant [8 x i16] [i16 100, i16 101, i16 99, i16 105, i16 109, i16 97, i16 108, i16 0], align 16
@_ZN6icu_69L10PK_INTEGERE = internal constant [8 x i16] [i16 105, i16 110, i16 116, i16 101, i16 103, i16 101, i16 114, i16 0], align 16
@_ZTVN6icu_6924PluralKeywordEnumerationE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6924PluralKeywordEnumerationE to i8*), i8* bitcast (void (%"class.icu_69::PluralKeywordEnumeration"*)* @_ZN6icu_6924PluralKeywordEnumerationD2Ev to i8*), i8* bitcast (void (%"class.icu_69::PluralKeywordEnumeration"*)* @_ZN6icu_6924PluralKeywordEnumerationD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::PluralKeywordEnumeration"*)* @_ZNK6icu_6924PluralKeywordEnumeration17getDynamicClassIDEv to i8*), i8* bitcast (%"class.icu_69::StringEnumeration"* (%"class.icu_69::StringEnumeration"*)* @_ZNK6icu_6917StringEnumeration5cloneEv to i8*), i8* bitcast (i32 (%"class.icu_69::PluralKeywordEnumeration"*, i32*)* @_ZNK6icu_6924PluralKeywordEnumeration5countER10UErrorCode to i8*), i8* bitcast (i8* (%"class.icu_69::StringEnumeration"*, i32*, i32*)* @_ZN6icu_6917StringEnumeration4nextEPiR10UErrorCode to i8*), i8* bitcast (i16* (%"class.icu_69::StringEnumeration"*, i32*, i32*)* @_ZN6icu_6917StringEnumeration5unextEPiR10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::PluralKeywordEnumeration"*, i32*)* @_ZN6icu_6924PluralKeywordEnumeration5snextER10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::PluralKeywordEnumeration"*, i32*)* @_ZN6icu_6924PluralKeywordEnumeration5resetER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::StringEnumeration"*, %"class.icu_69::StringEnumeration"*)* @_ZNK6icu_6917StringEnumerationeqERKS0_ to i8*), i8* bitcast (i8 (%"class.icu_69::StringEnumeration"*, %"class.icu_69::StringEnumeration"*)* @_ZNK6icu_6917StringEnumerationneERKS0_ to i8*)] }, align 8
@_ZTVN6icu_6912FixedDecimalE = hidden unnamed_addr constant { [8 x i8*], [5 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN6icu_6912FixedDecimalE to i8*), i8* bitcast (void (%"class.icu_69::FixedDecimal"*)* @_ZN6icu_6912FixedDecimalD2Ev to i8*), i8* bitcast (void (%"class.icu_69::FixedDecimal"*)* @_ZN6icu_6912FixedDecimalD0Ev to i8*), i8* bitcast (double (%"class.icu_69::FixedDecimal"*, i32)* @_ZNK6icu_6912FixedDecimal16getPluralOperandENS_13PluralOperandE to i8*), i8* bitcast (i1 (%"class.icu_69::FixedDecimal"*)* @_ZNK6icu_6912FixedDecimal5isNaNEv to i8*), i8* bitcast (i1 (%"class.icu_69::FixedDecimal"*)* @_ZNK6icu_6912FixedDecimal10isInfiniteEv to i8*), i8* bitcast (i1 (%"class.icu_69::FixedDecimal"*)* @_ZNK6icu_6912FixedDecimal15hasIntegerValueEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN6icu_6912FixedDecimalE to i8*), i8* bitcast (void (%"class.icu_69::FixedDecimal"*)* @_ZThn8_N6icu_6912FixedDecimalD1Ev to i8*), i8* bitcast (void (%"class.icu_69::FixedDecimal"*)* @_ZThn8_N6icu_6912FixedDecimalD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*)] }, align 8
@__const.FixedDecimal.dl = private unnamed_addr constant <{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, { { i8*, i32, [4 x i8] } }, i8, i8, [6 x i8] }> <{ %"class.icu_69::IFixedDecimal" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, { { i8*, i32, [4 x i8] } } { { i8*, i32, [4 x i8] } { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@.str.17 = private unnamed_addr constant [7 x i8] c"%1.15e\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"%%.%dfe%%d\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"%%.%df\00", align 1
@_ZTVN6icu_6933PluralAvailableLocalesEnumerationE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6933PluralAvailableLocalesEnumerationE to i8*), i8* bitcast (void (%"class.icu_69::PluralAvailableLocalesEnumeration"*)* @_ZN6icu_6933PluralAvailableLocalesEnumerationD2Ev to i8*), i8* bitcast (void (%"class.icu_69::PluralAvailableLocalesEnumeration"*)* @_ZN6icu_6933PluralAvailableLocalesEnumerationD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (%"class.icu_69::StringEnumeration"* (%"class.icu_69::StringEnumeration"*)* @_ZNK6icu_6917StringEnumeration5cloneEv to i8*), i8* bitcast (i32 (%"class.icu_69::PluralAvailableLocalesEnumeration"*, i32*)* @_ZNK6icu_6933PluralAvailableLocalesEnumeration5countER10UErrorCode to i8*), i8* bitcast (i8* (%"class.icu_69::PluralAvailableLocalesEnumeration"*, i32*, i32*)* @_ZN6icu_6933PluralAvailableLocalesEnumeration4nextEPiR10UErrorCode to i8*), i8* bitcast (i16* (%"class.icu_69::StringEnumeration"*, i32*, i32*)* @_ZN6icu_6917StringEnumeration5unextEPiR10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)* @_ZN6icu_6917StringEnumeration5snextER10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::PluralAvailableLocalesEnumeration"*, i32*)* @_ZN6icu_6933PluralAvailableLocalesEnumeration5resetER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::StringEnumeration"*, %"class.icu_69::StringEnumeration"*)* @_ZNK6icu_6917StringEnumerationeqERKS0_ to i8*), i8* bitcast (i8 (%"class.icu_69::StringEnumeration"*, %"class.icu_69::StringEnumeration"*)* @_ZNK6icu_6917StringEnumerationneERKS0_ to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6917SharedPluralRulesE = hidden constant [29 x i8] c"N6icu_6917SharedPluralRulesE\00", align 1
@_ZTIN6icu_6912SharedObjectE = external constant i8*
@_ZTIN6icu_6917SharedPluralRulesE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6icu_6917SharedPluralRulesE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6912SharedObjectE to i8*) }, align 8
@_ZTSN6icu_6911PluralRulesE = hidden constant [23 x i8] c"N6icu_6911PluralRulesE\00", align 1
@_ZTIN6icu_697UObjectE = external constant i8*
@_ZTIN6icu_6911PluralRulesE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN6icu_6911PluralRulesE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*) }, align 8
@_ZTSN6icu_6912OrConstraintE = hidden constant [24 x i8] c"N6icu_6912OrConstraintE\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN6icu_697UMemoryE = linkonce_odr hidden constant [18 x i8] c"N6icu_697UMemoryE\00", comdat, align 1
@_ZTIN6icu_697UMemoryE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6icu_697UMemoryE, i32 0, i32 0) }, comdat, align 8
@_ZTIN6icu_6912OrConstraintE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6icu_6912OrConstraintE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_697UMemoryE to i8*) }, align 8
@_ZTSN6icu_699RuleChainE = hidden constant [20 x i8] c"N6icu_699RuleChainE\00", align 1
@_ZTIN6icu_699RuleChainE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN6icu_699RuleChainE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_697UMemoryE to i8*) }, align 8
@_ZTSN6icu_6913AndConstraintE = hidden constant [25 x i8] c"N6icu_6913AndConstraintE\00", align 1
@_ZTIN6icu_6913AndConstraintE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN6icu_6913AndConstraintE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_697UMemoryE to i8*) }, align 8
@_ZTSN6icu_6916PluralRuleParserE = hidden constant [28 x i8] c"N6icu_6916PluralRuleParserE\00", align 1
@_ZTIN6icu_6916PluralRuleParserE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN6icu_6916PluralRuleParserE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_697UMemoryE to i8*) }, align 8
@_ZTSN6icu_6924PluralKeywordEnumerationE = hidden constant [36 x i8] c"N6icu_6924PluralKeywordEnumerationE\00", align 1
@_ZTIN6icu_6917StringEnumerationE = external constant i8*
@_ZTIN6icu_6924PluralKeywordEnumerationE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN6icu_6924PluralKeywordEnumerationE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6917StringEnumerationE to i8*) }, align 8
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global i8*
@_ZTSN6icu_6912FixedDecimalE = hidden constant [24 x i8] c"N6icu_6912FixedDecimalE\00", align 1
@_ZTIN6icu_6913IFixedDecimalE = external constant i8*
@_ZTIN6icu_6912FixedDecimalE = hidden constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6icu_6912FixedDecimalE, i32 0, i32 0), i32 0, i32 2, i8* bitcast (i8** @_ZTIN6icu_6913IFixedDecimalE to i8*), i64 2, i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*), i64 2050 }, align 8
@_ZTSN6icu_6933PluralAvailableLocalesEnumerationE = hidden constant [45 x i8] c"N6icu_6933PluralAvailableLocalesEnumerationE\00", align 1
@_ZTIN6icu_6933PluralAvailableLocalesEnumerationE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @_ZTSN6icu_6933PluralAvailableLocalesEnumerationE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6917StringEnumerationE to i8*) }, align 8
@__const._ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode.newSample = private unnamed_addr constant { %"class.icu_69::IFixedDecimal", %"class.icu_69::UObject", double, i32, [4 x i8], i64, i64, i64, i32, i8, i8, i8, i8 } { %"class.icu_69::IFixedDecimal" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.icu_69::UObject" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86 }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE to i8*), i8* bitcast (void (%"class.icu_69::LocaleCacheKey"*)* @_ZN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEED2Ev to i8*), i8* bitcast (void (%"class.icu_69::LocaleCacheKey"*)* @_ZN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEED0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (i32 (%"class.icu_69::LocaleCacheKey"*)* @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE8hashCodeEv to i8*), i8* bitcast (%"class.icu_69::CacheKeyBase"* (%"class.icu_69::LocaleCacheKey"*)* @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE5cloneEv to i8*), i8* bitcast (i8 (%"class.icu_69::LocaleCacheKey"*, %"class.icu_69::CacheKeyBase"*)* @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEeqERKNS_12CacheKeyBaseE to i8*), i8* bitcast (%"class.icu_69::SharedPluralRules"* (%"class.icu_69::LocaleCacheKey"*, i8*, i32*)* @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE12createObjectEPKvR10UErrorCode to i8*), i8* bitcast (i8* (%"class.icu_69::LocaleCacheKey"*, i8*, i32)* @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE16writeDescriptionEPci to i8*)] }, comdat, align 8
@_ZTSN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE = linkonce_odr hidden constant [51 x i8] c"N6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE\00", comdat, align 1
@_ZTSN6icu_698CacheKeyINS_17SharedPluralRulesEEE = linkonce_odr hidden constant [44 x i8] c"N6icu_698CacheKeyINS_17SharedPluralRulesEEE\00", comdat, align 1
@_ZTIN6icu_6912CacheKeyBaseE = external constant i8*
@_ZTIN6icu_698CacheKeyINS_17SharedPluralRulesEEE = linkonce_odr hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @_ZTSN6icu_698CacheKeyINS_17SharedPluralRulesEEE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6912CacheKeyBaseE to i8*) }, comdat, align 8
@_ZTIN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE = linkonce_odr hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @_ZTSN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_698CacheKeyINS_17SharedPluralRulesEEE to i8*) }, comdat, align 8
@_ZTVN6icu_6912CacheKeyBaseE = external unnamed_addr constant { [10 x i8*] }, align 8
@switch.table._ZN6icu_6924tokenTypeToPluralOperandENS_9tokenTypeE = private unnamed_addr constant [7 x i32] [i32 0, i32 1, i32 2, i32 4, i32 3, i32 6, i32 6], align 4

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_6911PluralRulesC1ER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::PluralRules"*, i32*), void (%"class.icu_69::PluralRules"*, i32*)* @_ZN6icu_6911PluralRulesC2ER10UErrorCode
@_ZN6icu_6911PluralRulesC1ERKS0_ = hidden unnamed_addr alias void (%"class.icu_69::PluralRules"*, %"class.icu_69::PluralRules"*), void (%"class.icu_69::PluralRules"*, %"class.icu_69::PluralRules"*)* @_ZN6icu_6911PluralRulesC2ERKS0_
@_ZN6icu_6911PluralRulesD1Ev = hidden unnamed_addr alias void (%"class.icu_69::PluralRules"*), void (%"class.icu_69::PluralRules"*)* @_ZN6icu_6911PluralRulesD2Ev
@_ZN6icu_6917SharedPluralRulesD1Ev = hidden unnamed_addr alias void (%"class.icu_69::SharedPluralRules"*), void (%"class.icu_69::SharedPluralRules"*)* @_ZN6icu_6917SharedPluralRulesD2Ev
@_ZN6icu_6913AndConstraintC1ERKS0_ = hidden unnamed_addr alias void (%"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"*), void (%"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"*)* @_ZN6icu_6913AndConstraintC2ERKS0_
@_ZN6icu_6913AndConstraintD1Ev = hidden unnamed_addr alias void (%"class.icu_69::AndConstraint"*), void (%"class.icu_69::AndConstraint"*)* @_ZN6icu_6913AndConstraintD2Ev
@_ZN6icu_6912OrConstraintC1ERKS0_ = hidden unnamed_addr alias void (%"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"*), void (%"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"*)* @_ZN6icu_6912OrConstraintC2ERKS0_
@_ZN6icu_6912OrConstraintD1Ev = hidden unnamed_addr alias void (%"class.icu_69::OrConstraint"*), void (%"class.icu_69::OrConstraint"*)* @_ZN6icu_6912OrConstraintD2Ev
@_ZN6icu_699RuleChainC1ERKS0_ = hidden unnamed_addr alias void (%"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"*), void (%"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"*)* @_ZN6icu_699RuleChainC2ERKS0_
@_ZN6icu_699RuleChainD1Ev = hidden unnamed_addr alias void (%"class.icu_69::RuleChain"*), void (%"class.icu_69::RuleChain"*)* @_ZN6icu_699RuleChainD2Ev
@_ZN6icu_6916PluralRuleParserC1Ev = hidden unnamed_addr alias void (%"class.icu_69::PluralRuleParser"*), void (%"class.icu_69::PluralRuleParser"*)* @_ZN6icu_6916PluralRuleParserC2Ev
@_ZN6icu_6916PluralRuleParserD1Ev = hidden unnamed_addr alias void (%"class.icu_69::PluralRuleParser"*), void (%"class.icu_69::PluralRuleParser"*)* @_ZN6icu_6916PluralRuleParserD2Ev
@_ZN6icu_6924PluralKeywordEnumerationC1EPNS_9RuleChainER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::PluralKeywordEnumeration"*, %"class.icu_69::RuleChain"*, i32*), void (%"class.icu_69::PluralKeywordEnumeration"*, %"class.icu_69::RuleChain"*, i32*)* @_ZN6icu_6924PluralKeywordEnumerationC2EPNS_9RuleChainER10UErrorCode
@_ZN6icu_6924PluralKeywordEnumerationD1Ev = hidden unnamed_addr alias void (%"class.icu_69::PluralKeywordEnumeration"*), void (%"class.icu_69::PluralKeywordEnumeration"*)* @_ZN6icu_6924PluralKeywordEnumerationD2Ev
@_ZN6icu_6912FixedDecimalC1Edilii = hidden unnamed_addr alias void (%"class.icu_69::FixedDecimal"*, double, i32, i64, i32, i32), void (%"class.icu_69::FixedDecimal"*, double, i32, i64, i32, i32)* @_ZN6icu_6912FixedDecimalC2Edilii
@_ZN6icu_6912FixedDecimalC1Edili = hidden unnamed_addr alias void (%"class.icu_69::FixedDecimal"*, double, i32, i64, i32), void (%"class.icu_69::FixedDecimal"*, double, i32, i64, i32)* @_ZN6icu_6912FixedDecimalC2Edili
@_ZN6icu_6912FixedDecimalC1Edil = hidden unnamed_addr alias void (%"class.icu_69::FixedDecimal"*, double, i32, i64), void (%"class.icu_69::FixedDecimal"*, double, i32, i64)* @_ZN6icu_6912FixedDecimalC2Edil
@_ZN6icu_6912FixedDecimalC1Edi = hidden unnamed_addr alias void (%"class.icu_69::FixedDecimal"*, double, i32), void (%"class.icu_69::FixedDecimal"*, double, i32)* @_ZN6icu_6912FixedDecimalC2Edi
@_ZN6icu_6912FixedDecimalC1Ed = hidden unnamed_addr alias void (%"class.icu_69::FixedDecimal"*, double), void (%"class.icu_69::FixedDecimal"*, double)* @_ZN6icu_6912FixedDecimalC2Ed
@_ZN6icu_6912FixedDecimalC1Ev = hidden unnamed_addr alias void (%"class.icu_69::FixedDecimal"*), void (%"class.icu_69::FixedDecimal"*)* @_ZN6icu_6912FixedDecimalC2Ev
@_ZN6icu_6912FixedDecimalC1ERKNS_13UnicodeStringER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::FixedDecimal"*, %"class.icu_69::UnicodeString"*, i32*), void (%"class.icu_69::FixedDecimal"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZN6icu_6912FixedDecimalC2ERKNS_13UnicodeStringER10UErrorCode
@_ZN6icu_6912FixedDecimalC1ERKS0_ = hidden unnamed_addr alias void (%"class.icu_69::FixedDecimal"*, %"class.icu_69::FixedDecimal"*), void (%"class.icu_69::FixedDecimal"*, %"class.icu_69::FixedDecimal"*)* @_ZN6icu_6912FixedDecimalC2ERKS0_
@_ZN6icu_6912FixedDecimalD1Ev = hidden unnamed_addr alias void (%"class.icu_69::FixedDecimal"*), void (%"class.icu_69::FixedDecimal"*)* @_ZN6icu_6912FixedDecimalD2Ev
@_ZN6icu_6933PluralAvailableLocalesEnumerationC1ER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::PluralAvailableLocalesEnumeration"*, i32*), void (%"class.icu_69::PluralAvailableLocalesEnumeration"*, i32*)* @_ZN6icu_6933PluralAvailableLocalesEnumerationC2ER10UErrorCode
@_ZN6icu_6933PluralAvailableLocalesEnumerationD1Ev = hidden unnamed_addr alias void (%"class.icu_69::PluralAvailableLocalesEnumeration"*), void (%"class.icu_69::PluralAvailableLocalesEnumeration"*)* @_ZN6icu_6933PluralAvailableLocalesEnumerationD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #14
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #15
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #14
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #15
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #15
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #15
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #14
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #14
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #15
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZN6icu_6911PluralRules16getStaticClassIDEv() local_unnamed_addr #5 align 2 {
  ret i8* @_ZZN6icu_6911PluralRules16getStaticClassIDEvE7classID
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZNK6icu_6911PluralRules17getDynamicClassIDEv(%"class.icu_69::PluralRules"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* @_ZZN6icu_6911PluralRules16getStaticClassIDEvE7classID
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZN6icu_6924PluralKeywordEnumeration16getStaticClassIDEv() local_unnamed_addr #5 align 2 {
  ret i8* @_ZZN6icu_6924PluralKeywordEnumeration16getStaticClassIDEvE7classID
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZNK6icu_6924PluralKeywordEnumeration17getDynamicClassIDEv(%"class.icu_69::PluralKeywordEnumeration"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* @_ZZN6icu_6924PluralKeywordEnumeration16getStaticClassIDEvE7classID
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6911PluralRulesC2ER10UErrorCode(%"class.icu_69::PluralRules"* nocapture, i32* nocapture readnone dereferenceable(4)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6icu_6911PluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %5 = bitcast %"class.icu_69::RuleChain"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6911PluralRulesC2ERKS0_(%"class.icu_69::PluralRules"*, %"class.icu_69::PluralRules"* readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6icu_6911PluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %5 = bitcast %"class.icu_69::RuleChain"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false)
  %6 = tail call dereferenceable(32) %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRulesaSERKS0_(%"class.icu_69::PluralRules"* %0, %"class.icu_69::PluralRules"* dereferenceable(32) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRulesaSERKS0_(%"class.icu_69::PluralRules"* returned, %"class.icu_69::PluralRules"* readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.icu_69::LocalPointer.4", align 8
  %4 = alloca %"class.icu_69::StandardPluralRanges", align 8
  %5 = icmp eq %"class.icu_69::PluralRules"* %0, %1
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %8 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %7, align 8
  %9 = icmp eq %"class.icu_69::RuleChain"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.icu_69::RuleChain"* %8 to void (%"class.icu_69::RuleChain"*)***
  %12 = load void (%"class.icu_69::RuleChain"*)**, void (%"class.icu_69::RuleChain"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %12, i64 1
  %14 = load void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %13, align 8
  tail call void %14(%"class.icu_69::RuleChain"* nonnull %8) #15
  br label %15

15:                                               ; preds = %10, %6
  store %"class.icu_69::RuleChain"* null, %"class.icu_69::RuleChain"** %7, align 8
  %16 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 2
  %17 = load %"class.icu_69::StandardPluralRanges"*, %"class.icu_69::StandardPluralRanges"** %16, align 8
  %18 = icmp eq %"class.icu_69::StandardPluralRanges"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.icu_69::StandardPluralRanges", %"class.icu_69::StandardPluralRanges"* %17, i64 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.icu_69::StandardPluralRanges"* %17 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @uprv_free_69(i8* %25) #15
  br label %26

26:                                               ; preds = %19, %23
  %27 = bitcast %"class.icu_69::StandardPluralRanges"* %17 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %27) #15
  br label %28

28:                                               ; preds = %26, %15
  store %"class.icu_69::StandardPluralRanges"* null, %"class.icu_69::StandardPluralRanges"** %16, align 8
  %29 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 3
  store i32 %30, i32* %31, align 8
  %32 = icmp slt i32 %30, 1
  br i1 %32, label %33, label %68

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 1
  %35 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %34, align 8
  %36 = icmp eq %"class.icu_69::RuleChain"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 224) #15
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store %"class.icu_69::RuleChain"* null, %"class.icu_69::RuleChain"** %7, align 8
  store i32 7, i32* %31, align 8
  br label %50

41:                                               ; preds = %37
  %42 = bitcast i8* %38 to %"class.icu_69::RuleChain"*
  %43 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %34, align 8
  tail call void @_ZN6icu_699RuleChainC2ERKS0_(%"class.icu_69::RuleChain"* nonnull %42, %"class.icu_69::RuleChain"* dereferenceable(224) %43)
  %44 = bitcast %"class.icu_69::RuleChain"** %7 to i8**
  store i8* %38, i8** %44, align 8
  %45 = getelementptr inbounds i8, i8* %38, i64 220
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 1
  br i1 %48, label %50, label %49

49:                                               ; preds = %41
  store i32 %47, i32* %31, align 8
  br label %50

50:                                               ; preds = %41, %33, %40, %49
  %51 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 2
  %52 = load %"class.icu_69::StandardPluralRanges"*, %"class.icu_69::StandardPluralRanges"** %51, align 8
  %53 = icmp eq %"class.icu_69::StandardPluralRanges"* %52, null
  br i1 %53, label %68, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.icu_69::LocalPointer.4"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15
  %56 = bitcast %"class.icu_69::StandardPluralRanges"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #15
  call void @_ZNK6icu_6920StandardPluralRanges4copyER10UErrorCode(%"class.icu_69::StandardPluralRanges"* nonnull sret %4, %"class.icu_69::StandardPluralRanges"* nonnull %52, i32* dereferenceable(4) %31) #15
  call void @_ZNO6icu_6920StandardPluralRanges9toPointerER10UErrorCode(%"class.icu_69::LocalPointer.4"* nonnull sret %3, %"class.icu_69::StandardPluralRanges"* nonnull %4, i32* dereferenceable(4) %31) #15
  %57 = getelementptr inbounds %"class.icu_69::LocalPointer.4", %"class.icu_69::LocalPointer.4"* %3, i64 0, i32 0, i32 0
  %58 = bitcast %"class.icu_69::LocalPointer.4"* %3 to i64*
  %59 = load i64, i64* %58, align 8
  store %"class.icu_69::StandardPluralRanges"* null, %"class.icu_69::StandardPluralRanges"** %57, align 8
  %60 = bitcast %"class.icu_69::StandardPluralRanges"** %16 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.icu_69::StandardPluralRanges", %"class.icu_69::StandardPluralRanges"* %4, i64 0, i32 0, i32 2
  %62 = load i8, i8* %61, align 4
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %54
  %65 = bitcast %"class.icu_69::StandardPluralRanges"* %4 to i8**
  %66 = load i8*, i8** %65, align 8
  call void @uprv_free_69(i8* %66) #15
  br label %67

67:                                               ; preds = %54, %64
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  br label %68

68:                                               ; preds = %67, %2, %50, %28
  ret %"class.icu_69::PluralRules"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6911PluralRulesD2Ev(%"class.icu_69::PluralRules"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6icu_6911PluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %3, align 8
  %5 = icmp eq %"class.icu_69::RuleChain"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::RuleChain"* %4 to void (%"class.icu_69::RuleChain"*)***
  %8 = load void (%"class.icu_69::RuleChain"*)**, void (%"class.icu_69::RuleChain"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %8, i64 1
  %10 = load void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %9, align 8
  tail call void %10(%"class.icu_69::RuleChain"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 2
  %13 = load %"class.icu_69::StandardPluralRanges"*, %"class.icu_69::StandardPluralRanges"** %12, align 8
  %14 = icmp eq %"class.icu_69::StandardPluralRanges"* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.icu_69::StandardPluralRanges", %"class.icu_69::StandardPluralRanges"* %13, i64 0, i32 0, i32 2
  %17 = load i8, i8* %16, align 4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.icu_69::StandardPluralRanges"* %13 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @uprv_free_69(i8* %21) #15
  br label %22

22:                                               ; preds = %15, %19
  %23 = bitcast %"class.icu_69::StandardPluralRanges"* %13 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %23) #15
  br label %24

24:                                               ; preds = %22, %11
  %25 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %25) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6911PluralRulesD0Ev(%"class.icu_69::PluralRules"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6icu_6911PluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %3, align 8
  %5 = icmp eq %"class.icu_69::RuleChain"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::RuleChain"* %4 to void (%"class.icu_69::RuleChain"*)***
  %8 = load void (%"class.icu_69::RuleChain"*)**, void (%"class.icu_69::RuleChain"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %8, i64 1
  %10 = load void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %9, align 8
  tail call void %10(%"class.icu_69::RuleChain"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 2
  %13 = load %"class.icu_69::StandardPluralRanges"*, %"class.icu_69::StandardPluralRanges"** %12, align 8
  %14 = icmp eq %"class.icu_69::StandardPluralRanges"* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.icu_69::StandardPluralRanges", %"class.icu_69::StandardPluralRanges"* %13, i64 0, i32 0, i32 2
  %17 = load i8, i8* %16, align 4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.icu_69::StandardPluralRanges"* %13 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @uprv_free_69(i8* %21) #15
  br label %22

22:                                               ; preds = %19, %15
  %23 = bitcast %"class.icu_69::StandardPluralRanges"* %13 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %23) #15
  br label %24

24:                                               ; preds = %11, %22
  %25 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %25) #15
  %26 = bitcast %"class.icu_69::PluralRules"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %26) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917SharedPluralRulesD2Ev(%"class.icu_69::SharedPluralRules"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6917SharedPluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::PluralRules"*, %"class.icu_69::PluralRules"** %3, align 8
  %5 = icmp eq %"class.icu_69::PluralRules"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::PluralRules"* %4 to void (%"class.icu_69::PluralRules"*)***
  %8 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %8, i64 1
  %10 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %9, align 8
  tail call void %10(%"class.icu_69::PluralRules"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6912SharedObjectD2Ev(%"class.icu_69::SharedObject"* %12) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_6912SharedObjectD2Ev(%"class.icu_69::SharedObject"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917SharedPluralRulesD0Ev(%"class.icu_69::SharedPluralRules"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6917SharedPluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::PluralRules"*, %"class.icu_69::PluralRules"** %3, align 8
  %5 = icmp eq %"class.icu_69::PluralRules"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::PluralRules"* %4 to void (%"class.icu_69::PluralRules"*)***
  %8 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %8, i64 1
  %10 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %9, align 8
  tail call void %10(%"class.icu_69::PluralRules"* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6912SharedObjectD2Ev(%"class.icu_69::SharedObject"* %12) #15
  %13 = bitcast %"class.icu_69::SharedPluralRules"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %13) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::PluralRules"* @_ZNK6icu_6911PluralRules5cloneEv(%"class.icu_69::PluralRules"* readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %3 = icmp eq i8* %2, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %"class.icu_69::PluralRules"*
  %6 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6icu_6911PluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #15
  %8 = tail call dereferenceable(32) %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRulesaSERKS0_(%"class.icu_69::PluralRules"* nonnull %5, %"class.icu_69::PluralRules"* dereferenceable(32) %0) #15
  %9 = getelementptr inbounds i8, i8* %2, i64 24
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast i8* %2 to void (%"class.icu_69::PluralRules"*)***
  %15 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %15, i64 1
  %17 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %16, align 8
  tail call void %17(%"class.icu_69::PluralRules"* nonnull %5) #15
  br label %18

18:                                               ; preds = %1, %4, %13
  %19 = phi %"class.icu_69::PluralRules"* [ %5, %4 ], [ null, %13 ], [ null, %1 ]
  ret %"class.icu_69::PluralRules"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::PluralRules"* @_ZNK6icu_6911PluralRules5cloneER10UErrorCode(%"class.icu_69::PluralRules"* readonly, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %4 = icmp eq i8* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %"class.icu_69::PluralRules"*
  %7 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6icu_6911PluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #15
  %9 = tail call dereferenceable(32) %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRulesaSERKS0_(%"class.icu_69::PluralRules"* nonnull %6, %"class.icu_69::PluralRules"* dereferenceable(32) %0) #15
  br label %10

10:                                               ; preds = %5, %2
  %11 = phi %"class.icu_69::PluralRules"* [ %6, %5 ], [ null, %2 ]
  %12 = icmp ne %"class.icu_69::PluralRules"* %11, null
  %13 = load i32, i32* %1, align 4
  %14 = icmp sgt i32 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %10
  store i32 7, i32* %1, align 4
  br label %30

17:                                               ; preds = %10
  %18 = icmp sgt i32 %13, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %11, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %30, label %23

23:                                               ; preds = %19
  store i32 %21, i32* %1, align 4
  %24 = icmp eq %"class.icu_69::PluralRules"* %11, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = bitcast %"class.icu_69::PluralRules"* %11 to void (%"class.icu_69::PluralRules"*)***
  %27 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %27, i64 1
  %29 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %28, align 8
  tail call void %29(%"class.icu_69::PluralRules"* nonnull %11) #15
  br label %30

30:                                               ; preds = %16, %17, %19, %23, %25
  %31 = phi %"class.icu_69::PluralRules"* [ %11, %17 ], [ %11, %19 ], [ null, %23 ], [ null, %25 ], [ null, %16 ]
  ret %"class.icu_69::PluralRules"* %31
}

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #7

declare void @_ZNK6icu_6920StandardPluralRanges4copyER10UErrorCode(%"class.icu_69::StandardPluralRanges"* sret, %"class.icu_69::StandardPluralRanges"*, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNO6icu_6920StandardPluralRanges9toPointerER10UErrorCode(%"class.icu_69::LocalPointer.4"* sret, %"class.icu_69::StandardPluralRanges"*, i32* dereferenceable(4)) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::StringEnumeration"* @_ZN6icu_6911PluralRules19getAvailableLocalesER10UErrorCode(i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %38

4:                                                ; preds = %1
  %5 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 136) #15
  %6 = icmp eq i8* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %4
  %8 = bitcast i8* %5 to %"class.icu_69::StringEnumeration"*
  tail call void @_ZN6icu_6917StringEnumerationC2Ev(%"class.icu_69::StringEnumeration"* nonnull %8) #15
  %9 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6933PluralAvailableLocalesEnumerationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 120
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #15
  %11 = load i32, i32* %0, align 4
  %12 = getelementptr inbounds i8, i8* %5, i64 116
  %13 = bitcast i8* %12 to i32*
  store i32 %11, i32* %13, align 4
  %14 = load i32, i32* %0, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %7
  %17 = bitcast i8* %10 to %struct.UResourceBundle**
  store i32 0, i32* %13, align 4
  %18 = tail call %struct.UResourceBundle* @ures_openDirect_69(i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32* %13) #15
  %19 = tail call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %struct.UResourceBundle* null, i32* %13) #15
  store %struct.UResourceBundle* %19, %struct.UResourceBundle** %17, align 8
  %20 = icmp eq %struct.UResourceBundle* %18, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  tail call void @ures_close_69(%struct.UResourceBundle* nonnull %18) #15
  br label %22

22:                                               ; preds = %21, %16, %7, %4
  %23 = phi %"class.icu_69::StringEnumeration"* [ null, %4 ], [ %8, %7 ], [ %8, %16 ], [ %8, %21 ]
  %24 = icmp ne %"class.icu_69::StringEnumeration"* %23, null
  %25 = load i32, i32* %0, align 4
  %26 = icmp sgt i32 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  store i32 7, i32* %0, align 4
  br label %38

29:                                               ; preds = %22
  %30 = icmp slt i32 %25, 1
  br i1 %30, label %38, label %31

31:                                               ; preds = %29
  %32 = icmp eq %"class.icu_69::StringEnumeration"* %23, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = bitcast %"class.icu_69::StringEnumeration"* %23 to void (%"class.icu_69::StringEnumeration"*)***
  %35 = load void (%"class.icu_69::StringEnumeration"*)**, void (%"class.icu_69::StringEnumeration"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %35, i64 1
  %37 = load void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %36, align 8
  tail call void %37(%"class.icu_69::StringEnumeration"* nonnull %23) #15
  br label %38

38:                                               ; preds = %28, %29, %33, %31, %1
  %39 = phi %"class.icu_69::StringEnumeration"* [ null, %1 ], [ null, %31 ], [ null, %33 ], [ %23, %29 ], [ null, %28 ]
  ret %"class.icu_69::StringEnumeration"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules11createRulesERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.icu_69::PluralRuleParser", align 8
  %4 = load i32, i32* %1, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %53

6:                                                ; preds = %2
  %7 = bitcast %"class.icu_69::PluralRuleParser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %3, i64 0, i32 1
  %9 = bitcast %"class.icu_69::UnicodeString"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 80, i1 false)
  %10 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6916PluralRuleParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %3, i64 0, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %3, i64 0, i32 3, i32 1, i32 0, i32 0
  store i16 2, i16* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %3, i64 0, i32 4
  %15 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %3, i64 0, i32 8
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #15
  store i32 -1, i32* %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %3, i64 0, i32 9
  store i32 -1, i32* %17, align 4
  %18 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %19 = icmp eq i8* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %6
  %21 = bitcast i8* %18 to %"class.icu_69::PluralRules"*
  %22 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6icu_6911PluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #15
  br label %24

24:                                               ; preds = %20, %6
  %25 = phi %"class.icu_69::PluralRules"* [ %21, %20 ], [ null, %6 ]
  %26 = icmp ne %"class.icu_69::PluralRules"* %25, null
  %27 = load i32, i32* %1, align 4
  %28 = icmp sgt i32 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %31, label %30

30:                                               ; preds = %24
  store i32 7, i32* %1, align 4
  br label %50

31:                                               ; preds = %24
  %32 = icmp slt i32 %27, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %31
  call void @_ZN6icu_6916PluralRuleParser5parseERKNS_13UnicodeStringEPNS_11PluralRulesER10UErrorCode(%"class.icu_69::PluralRuleParser"* nonnull %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %0, %"class.icu_69::PluralRules"* %25, i32* dereferenceable(4) %1)
  %34 = load i32, i32* %1, align 4
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %50, label %36

36:                                               ; preds = %33
  %37 = icmp eq %"class.icu_69::PluralRules"* %25, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.icu_69::PluralRules"* %25 to void (%"class.icu_69::PluralRules"*)***
  %40 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %40, i64 1
  %42 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %41, align 8
  call void %42(%"class.icu_69::PluralRules"* nonnull %25) #15
  br label %50

43:                                               ; preds = %31
  %44 = icmp eq %"class.icu_69::PluralRules"* %25, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.icu_69::PluralRules"* %25 to void (%"class.icu_69::PluralRules"*)***
  %47 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %47, i64 1
  %49 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %48, align 8
  tail call void %49(%"class.icu_69::PluralRules"* nonnull %25) #15
  br label %50

50:                                               ; preds = %30, %33, %36, %38, %43, %45
  %51 = phi %"class.icu_69::PluralRules"* [ null, %43 ], [ null, %45 ], [ null, %38 ], [ null, %36 ], [ %25, %33 ], [ null, %30 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6916PluralRuleParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %52 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %3, i64 0, i32 3
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %52) #15
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %7) #15
  br label %53

53:                                               ; preds = %2, %50
  %54 = phi %"class.icu_69::PluralRules"* [ %51, %50 ], [ null, %2 ]
  ret %"class.icu_69::PluralRules"* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916PluralRuleParser5parseERKNS_13UnicodeStringEPNS_11PluralRulesER10UErrorCode(%"class.icu_69::PluralRuleParser"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::PluralRules"* nocapture, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca [128 x i8], align 16
  %6 = load i32, i32* %3, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %559

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 1
  store %"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"** %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 7
  %13 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %16 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 6
  %18 = bitcast %"class.icu_69::RuleChain"** %12 to i8**
  %19 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 8
  %20 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 9
  %21 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 0
  %22 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 5
  br label %23

23:                                               ; preds = %557, %8
  %24 = phi %"class.icu_69::UnicodeString"* [ %558, %557 ], [ %1, %8 ]
  %25 = load i32, i32* %10, align 8
  %26 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %24, i64 0, i32 1, i32 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = icmp slt i16 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = lshr i16 %27, 5
  %31 = zext i16 %30 to i32
  br label %35

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %24, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %29, %32
  %36 = phi i32 [ %31, %29 ], [ %34, %32 ]
  %37 = icmp slt i32 %25, %36
  br i1 %37, label %38, label %559

38:                                               ; preds = %35
  call void @_ZN6icu_6916PluralRuleParser12getNextTokenER10UErrorCode(%"class.icu_69::PluralRuleParser"* %0, i32* dereferenceable(4) %3)
  %39 = load i32, i32* %3, align 4
  %40 = icmp slt i32 %39, 1
  br i1 %40, label %41, label %559

41:                                               ; preds = %38
  call void @_ZN6icu_6916PluralRuleParser11checkSyntaxER10UErrorCode(%"class.icu_69::PluralRuleParser"* %0, i32* dereferenceable(4) %3)
  %42 = load i32, i32* %3, align 4
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %44, label %559

44:                                               ; preds = %41
  %45 = load i32, i32* %11, align 8
  switch i32 %45, label %553 [
    i32 11, label %52
    i32 12, label %82
    i32 28, label %49
    i32 14, label %138
    i32 17, label %141
    i32 15, label %144
    i32 19, label %144
    i32 16, label %144
    i32 1, label %225
    i32 2, label %351
    i32 13, label %412
    i32 21, label %415
    i32 22, label %415
    i32 23, label %415
    i32 25, label %415
    i32 26, label %415
    i32 27, label %415
    i32 24, label %415
    i32 10, label %418
    i32 29, label %46
  ]

46:                                               ; preds = %44
  call void @_ZN6icu_6916PluralRuleParser12getNextTokenER10UErrorCode(%"class.icu_69::PluralRuleParser"* %0, i32* dereferenceable(4) %3)
  %47 = load i32, i32* %3, align 4
  %48 = icmp slt i32 %47, 1
  br i1 %48, label %515, label %553

49:                                               ; preds = %44
  call void @_ZN6icu_6916PluralRuleParser12getNextTokenER10UErrorCode(%"class.icu_69::PluralRuleParser"* %0, i32* dereferenceable(4) %3)
  %50 = load i32, i32* %3, align 4
  %51 = icmp slt i32 %50, 1
  br i1 %51, label %534, label %553

52:                                               ; preds = %44
  %53 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %54 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %53, i64 0, i32 11
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %55, 1
  br i1 %56, label %58, label %57

57:                                               ; preds = %52
  store i32 %55, i32* %3, align 4
  br label %80

58:                                               ; preds = %52
  %59 = call i8* @_ZN6icu_697UMemorynwEm(i64 56) #15
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %53, i64 0, i32 10
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %62, align 8
  store i32 7, i32* %3, align 4
  %63 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %62, align 8
  br label %80

64:                                               ; preds = %58
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 56, i1 false) #15
  %65 = bitcast i8* %59 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6913AndConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 8
  %67 = bitcast i8* %66 to i32*
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds i8, i8* %59, i64 12
  %69 = bitcast i8* %68 to i32*
  store i32 -1, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %59, i64 16
  %71 = bitcast i8* %70 to i32*
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds i8, i8* %59, i64 24
  %73 = bitcast i8* %72 to %"class.icu_69::UVector32"**
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %73, align 8
  %74 = getelementptr inbounds i8, i8* %59, i64 32
  store i8 0, i8* %74, align 8
  %75 = getelementptr inbounds i8, i8* %59, i64 33
  store i8 0, i8* %75, align 1
  %76 = getelementptr inbounds i8, i8* %59, i64 36
  call void @llvm.memset.p0i8.i64(i8* align 4 %76, i8 0, i64 16, i1 false) #15
  %77 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %53, i64 0, i32 10
  %78 = bitcast %"class.icu_69::AndConstraint"** %77 to i8**
  store i8* %59, i8** %78, align 8
  %79 = bitcast i8* %59 to %"class.icu_69::AndConstraint"*
  br label %80

80:                                               ; preds = %57, %61, %64
  %81 = phi %"class.icu_69::AndConstraint"* [ null, %57 ], [ %63, %61 ], [ %79, %64 ]
  store %"class.icu_69::AndConstraint"* %81, %"class.icu_69::AndConstraint"** %17, align 8
  br label %553

82:                                               ; preds = %44
  %83 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %12, align 8
  %84 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %83, i64 0, i32 3
  %85 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %84, align 8
  br label %86

86:                                               ; preds = %86, %82
  %87 = phi %"class.icu_69::OrConstraint"* [ %85, %82 ], [ %89, %86 ]
  %88 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %87, i64 0, i32 2
  %89 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %88, align 8
  %90 = icmp eq %"class.icu_69::OrConstraint"* %89, null
  br i1 %90, label %91, label %86

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %87, i64 0, i32 2
  %93 = call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %94 = icmp eq i8* %93, null
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  store %"class.icu_69::OrConstraint"* null, %"class.icu_69::OrConstraint"** %92, align 8
  store i32 7, i32* %3, align 4
  br label %553

96:                                               ; preds = %91
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 32, i1 false)
  %97 = bitcast i8* %93 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6912OrConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %98 = getelementptr inbounds i8, i8* %93, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 20, i1 false) #15
  %99 = bitcast %"class.icu_69::OrConstraint"** %92 to i8**
  store i8* %93, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %93, i64 16
  %101 = bitcast i8* %100 to %"class.icu_69::OrConstraint"**
  store %"class.icu_69::OrConstraint"* null, %"class.icu_69::OrConstraint"** %101, align 8
  %102 = getelementptr inbounds i8, i8* %93, i64 24
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 8
  %105 = icmp slt i32 %104, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %96
  %107 = bitcast i8* %93 to %"class.icu_69::OrConstraint"*
  br label %109

108:                                              ; preds = %96
  store i32 %104, i32* %3, align 4
  br label %136

109:                                              ; preds = %106, %109
  %110 = phi %"class.icu_69::OrConstraint"* [ %112, %109 ], [ %107, %106 ]
  %111 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %110, i64 0, i32 2
  %112 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %111, align 8
  %113 = icmp eq %"class.icu_69::OrConstraint"* %112, null
  br i1 %113, label %114, label %109

114:                                              ; preds = %109
  %115 = call i8* @_ZN6icu_697UMemorynwEm(i64 56) #15
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %120

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %110, i64 0, i32 1
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %118, align 8
  store i32 7, i32* %3, align 4
  %119 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %118, align 8
  br label %136

120:                                              ; preds = %114
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 56, i1 false) #15
  %121 = bitcast i8* %115 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6913AndConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %121, align 8
  %122 = getelementptr inbounds i8, i8* %115, i64 8
  %123 = bitcast i8* %122 to i32*
  store i32 0, i32* %123, align 8
  %124 = getelementptr inbounds i8, i8* %115, i64 12
  %125 = bitcast i8* %124 to i32*
  store i32 -1, i32* %125, align 4
  %126 = getelementptr inbounds i8, i8* %115, i64 16
  %127 = bitcast i8* %126 to i32*
  store i32 -1, i32* %127, align 8
  %128 = getelementptr inbounds i8, i8* %115, i64 24
  %129 = bitcast i8* %128 to %"class.icu_69::UVector32"**
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %129, align 8
  %130 = getelementptr inbounds i8, i8* %115, i64 32
  store i8 0, i8* %130, align 8
  %131 = getelementptr inbounds i8, i8* %115, i64 33
  store i8 0, i8* %131, align 1
  %132 = getelementptr inbounds i8, i8* %115, i64 36
  call void @llvm.memset.p0i8.i64(i8* align 4 %132, i8 0, i64 16, i1 false) #15
  %133 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %110, i64 0, i32 1
  %134 = bitcast %"class.icu_69::AndConstraint"** %133 to i8**
  store i8* %115, i8** %134, align 8
  %135 = bitcast i8* %115 to %"class.icu_69::AndConstraint"*
  br label %136

136:                                              ; preds = %108, %117, %120
  %137 = phi %"class.icu_69::AndConstraint"* [ null, %108 ], [ %119, %117 ], [ %135, %120 ]
  store %"class.icu_69::AndConstraint"* %137, %"class.icu_69::AndConstraint"** %17, align 8
  br label %553

138:                                              ; preds = %44
  %139 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %140 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %139, i64 0, i32 6
  store i8 1, i8* %140, align 8
  br label %553

141:                                              ; preds = %44
  %142 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %143 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %142, i64 0, i32 6
  store i8 1, i8* %143, align 8
  br label %144

144:                                              ; preds = %44, %44, %44, %141
  %145 = call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %146 = icmp eq i8* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = bitcast i8* %145 to %"class.icu_69::UVector32"*
  call void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"* nonnull %148, i32* dereferenceable(4) %3) #15
  br label %149

149:                                              ; preds = %147, %144
  %150 = phi %"class.icu_69::UVector32"* [ %148, %147 ], [ null, %144 ]
  %151 = icmp ne %"class.icu_69::UVector32"* %150, null
  %152 = load i32, i32* %3, align 4
  %153 = icmp sgt i32 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %156, label %155

155:                                              ; preds = %149
  store i32 7, i32* %3, align 4
  br label %553

156:                                              ; preds = %149
  %157 = icmp slt i32 %152, 1
  br i1 %157, label %158, label %218

158:                                              ; preds = %156
  %159 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %160 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %159, i64 0, i32 5
  store %"class.icu_69::UVector32"* %150, %"class.icu_69::UVector32"** %160, align 8
  %161 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %162 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %161, i64 0, i32 5
  %163 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %162, align 8
  %164 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %163, i64 0, i32 1
  %165 = load i32, i32* %164, align 8
  %166 = add nsw i32 %165, 1
  %167 = icmp sgt i32 %165, -2
  br i1 %167, label %168, label %172

168:                                              ; preds = %158
  %169 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %163, i64 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = icmp sgt i32 %170, %165
  br i1 %171, label %177, label %172

172:                                              ; preds = %168, %158
  %173 = call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %163, i32 %166, i32* dereferenceable(4) %3) #15
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %185, label %175

175:                                              ; preds = %172
  %176 = load i32, i32* %164, align 8
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %165, %168 ]
  %179 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %163, i64 0, i32 4
  %180 = load i32*, i32** %179, align 8
  %181 = sext i32 %178 to i64
  %182 = getelementptr inbounds i32, i32* %180, i64 %181
  store i32 -1, i32* %182, align 4
  %183 = load i32, i32* %164, align 8
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %164, align 8
  br label %185

185:                                              ; preds = %172, %177
  %186 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %187 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %186, i64 0, i32 5
  %188 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %187, align 8
  %189 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %188, i64 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = add nsw i32 %190, 1
  %192 = icmp sgt i32 %190, -2
  br i1 %192, label %193, label %197

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %188, i64 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = icmp sgt i32 %195, %190
  br i1 %196, label %202, label %197

197:                                              ; preds = %193, %185
  %198 = call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %188, i32 %191, i32* dereferenceable(4) %3) #15
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %210, label %200

200:                                              ; preds = %197
  %201 = load i32, i32* %189, align 8
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %190, %193 ]
  %204 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %188, i64 0, i32 4
  %205 = load i32*, i32** %204, align 8
  %206 = sext i32 %203 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  store i32 -1, i32* %207, align 4
  %208 = load i32, i32* %189, align 8
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %189, align 8
  br label %210

210:                                              ; preds = %202, %197
  store i32 0, i32* %19, align 8
  store i32 1, i32* %20, align 4
  %211 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %212 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %211, i64 0, i32 3
  store i32 2147483647, i32* %212, align 8
  %213 = load i32, i32* %11, align 8
  %214 = icmp ne i32 %213, 19
  %215 = zext i1 %214 to i8
  %216 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %217 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %216, i64 0, i32 7
  store i8 %215, i8* %217, align 1
  br label %553

218:                                              ; preds = %156
  %219 = icmp eq %"class.icu_69::UVector32"* %150, null
  br i1 %219, label %553, label %220

220:                                              ; preds = %218
  %221 = bitcast %"class.icu_69::UVector32"* %150 to void (%"class.icu_69::UVector32"*)***
  %222 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %222, i64 1
  %224 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %223, align 8
  call void %224(%"class.icu_69::UVector32"* nonnull %150) #15
  br label %553

225:                                              ; preds = %44
  %226 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %227 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %226, i64 0, i32 1
  %228 = load i32, i32* %227, align 8
  %229 = icmp eq i32 %228, 1
  br i1 %229, label %230, label %248

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %226, i64 0, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, -1
  br i1 %233, label %234, label %248

234:                                              ; preds = %230
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %21) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 128, i1 false) #15
  %235 = load i16, i16* %14, align 8
  %236 = icmp slt i16 %235, 0
  %237 = lshr i16 %235, 5
  %238 = zext i16 %237 to i32
  %239 = load i32, i32* %15, align 4
  %240 = select i1 %236, i32 %239, i32 %238
  %241 = call i32 @_ZNK6icu_6913UnicodeString7extractEiiPciNS0_10EInvariantE(%"class.icu_69::UnicodeString"* %13, i32 0, i32 %240, i8* nonnull %21, i32 128, i32 0) #15
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 %242
  store i8 0, i8* %243, align 1
  %244 = call i64 @strtol(i8* nocapture nonnull %21, i8** null, i32 10) #15
  %245 = trunc i64 %244 to i32
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %21) #15
  %246 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %247 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %246, i64 0, i32 2
  store i32 %245, i32* %247, align 4
  br label %553

248:                                              ; preds = %230, %225
  %249 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %226, i64 0, i32 5
  %250 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %249, align 8
  %251 = icmp eq %"class.icu_69::UVector32"* %250, null
  br i1 %251, label %252, label %266

252:                                              ; preds = %248
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %21) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 128, i1 false) #15
  %253 = load i16, i16* %14, align 8
  %254 = icmp slt i16 %253, 0
  %255 = lshr i16 %253, 5
  %256 = zext i16 %255 to i32
  %257 = load i32, i32* %15, align 4
  %258 = select i1 %254, i32 %257, i32 %256
  %259 = call i32 @_ZNK6icu_6913UnicodeString7extractEiiPciNS0_10EInvariantE(%"class.icu_69::UnicodeString"* %13, i32 0, i32 %258, i8* nonnull %21, i32 128, i32 0) #15
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 %260
  store i8 0, i8* %261, align 1
  %262 = call i64 @strtol(i8* nocapture nonnull %21, i8** null, i32 10) #15
  %263 = trunc i64 %262 to i32
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %21) #15
  %264 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %265 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %264, i64 0, i32 3
  store i32 %263, i32* %265, align 8
  br label %553

266:                                              ; preds = %248
  %267 = load i32, i32* %19, align 8
  %268 = icmp sgt i32 %267, -1
  br i1 %268, label %269, label %281

269:                                              ; preds = %266
  %270 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %250, i64 0, i32 1
  %271 = load i32, i32* %270, align 8
  %272 = icmp sgt i32 %271, 0
  %273 = icmp sgt i32 %271, %267
  %274 = and i1 %272, %273
  br i1 %274, label %275, label %281

275:                                              ; preds = %269
  %276 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %250, i64 0, i32 4
  %277 = load i32*, i32** %276, align 8
  %278 = sext i32 %267 to i64
  %279 = getelementptr inbounds i32, i32* %277, i64 %278
  %280 = load i32, i32* %279, align 4
  br label %281

281:                                              ; preds = %266, %269, %275
  %282 = phi i32 [ %280, %275 ], [ 0, %269 ], [ 0, %266 ]
  %283 = icmp eq i32 %282, -1
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %21) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 128, i1 false) #15
  %284 = load i16, i16* %14, align 8
  %285 = icmp slt i16 %284, 0
  %286 = lshr i16 %284, 5
  %287 = zext i16 %286 to i32
  %288 = load i32, i32* %15, align 4
  %289 = select i1 %285, i32 %288, i32 %287
  %290 = call i32 @_ZNK6icu_6913UnicodeString7extractEiiPciNS0_10EInvariantE(%"class.icu_69::UnicodeString"* %13, i32 0, i32 %289, i8* nonnull %21, i32 128, i32 0) #15
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 %291
  store i8 0, i8* %292, align 1
  %293 = call i64 @strtol(i8* nocapture nonnull %21, i8** null, i32 10) #15
  %294 = trunc i64 %293 to i32
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %21) #15
  br i1 %283, label %295, label %312

295:                                              ; preds = %281
  %296 = load i32, i32* %19, align 8
  call void @_ZN6icu_699UVector3212setElementAtEii(%"class.icu_69::UVector32"* nonnull %250, i32 %294, i32 %296) #15
  %297 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %298 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %297, i64 0, i32 5
  %299 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %298, align 8
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %21) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 128, i1 false) #15
  %300 = load i16, i16* %14, align 8
  %301 = icmp slt i16 %300, 0
  %302 = lshr i16 %300, 5
  %303 = zext i16 %302 to i32
  %304 = load i32, i32* %15, align 4
  %305 = select i1 %301, i32 %304, i32 %303
  %306 = call i32 @_ZNK6icu_6913UnicodeString7extractEiiPciNS0_10EInvariantE(%"class.icu_69::UnicodeString"* %13, i32 0, i32 %305, i8* nonnull %21, i32 128, i32 0) #15
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 %307
  store i8 0, i8* %308, align 1
  %309 = call i64 @strtol(i8* nocapture nonnull %21, i8** null, i32 10) #15
  %310 = trunc i64 %309 to i32
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %21) #15
  %311 = load i32, i32* %20, align 4
  call void @_ZN6icu_699UVector3212setElementAtEii(%"class.icu_69::UVector32"* %299, i32 %310, i32 %311) #15
  br label %553

312:                                              ; preds = %281
  %313 = load i32, i32* %20, align 4
  call void @_ZN6icu_699UVector3212setElementAtEii(%"class.icu_69::UVector32"* nonnull %250, i32 %294, i32 %313) #15
  %314 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %315 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %314, i64 0, i32 5
  %316 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %315, align 8
  %317 = load i32, i32* %19, align 8
  %318 = icmp sgt i32 %317, -1
  br i1 %318, label %319, label %331

319:                                              ; preds = %312
  %320 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %316, i64 0, i32 1
  %321 = load i32, i32* %320, align 8
  %322 = icmp sgt i32 %321, 0
  %323 = icmp sgt i32 %321, %317
  %324 = and i1 %322, %323
  br i1 %324, label %325, label %331

325:                                              ; preds = %319
  %326 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %316, i64 0, i32 4
  %327 = load i32*, i32** %326, align 8
  %328 = sext i32 %317 to i64
  %329 = getelementptr inbounds i32, i32* %327, i64 %328
  %330 = load i32, i32* %329, align 4
  br label %331

331:                                              ; preds = %312, %319, %325
  %332 = phi i32 [ %330, %325 ], [ 0, %319 ], [ 0, %312 ]
  %333 = load i32, i32* %20, align 4
  %334 = icmp sgt i32 %333, -1
  br i1 %334, label %335, label %347

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %316, i64 0, i32 1
  %337 = load i32, i32* %336, align 8
  %338 = icmp sgt i32 %337, 0
  %339 = icmp sgt i32 %337, %333
  %340 = and i1 %338, %339
  br i1 %340, label %341, label %347

341:                                              ; preds = %335
  %342 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %316, i64 0, i32 4
  %343 = load i32*, i32** %342, align 8
  %344 = sext i32 %333 to i64
  %345 = getelementptr inbounds i32, i32* %343, i64 %344
  %346 = load i32, i32* %345, align 4
  br label %347

347:                                              ; preds = %331, %335, %341
  %348 = phi i32 [ %346, %341 ], [ 0, %335 ], [ 0, %331 ]
  %349 = icmp sgt i32 %332, %348
  br i1 %349, label %350, label %553

350:                                              ; preds = %347
  store i32 65792, i32* %3, align 4
  br label %553

351:                                              ; preds = %44
  %352 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %353 = icmp eq %"class.icu_69::AndConstraint"* %352, null
  br i1 %353, label %358, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %352, i64 0, i32 5
  %356 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %355, align 8
  %357 = icmp eq %"class.icu_69::UVector32"* %356, null
  br i1 %357, label %358, label %359

358:                                              ; preds = %354, %351
  store i32 65792, i32* %3, align 4
  br label %553

359:                                              ; preds = %354
  %360 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %356, i64 0, i32 1
  %361 = load i32, i32* %360, align 8
  store i32 %361, i32* %19, align 8
  %362 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %355, align 8
  %363 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %362, i64 0, i32 1
  %364 = load i32, i32* %363, align 8
  %365 = add nsw i32 %364, 1
  %366 = icmp sgt i32 %364, -2
  br i1 %366, label %367, label %371

367:                                              ; preds = %359
  %368 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %362, i64 0, i32 2
  %369 = load i32, i32* %368, align 4
  %370 = icmp sgt i32 %369, %364
  br i1 %370, label %376, label %371

371:                                              ; preds = %367, %359
  %372 = call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %362, i32 %365, i32* dereferenceable(4) %3) #15
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %384, label %374

374:                                              ; preds = %371
  %375 = load i32, i32* %363, align 8
  br label %376

376:                                              ; preds = %374, %367
  %377 = phi i32 [ %375, %374 ], [ %364, %367 ]
  %378 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %362, i64 0, i32 4
  %379 = load i32*, i32** %378, align 8
  %380 = sext i32 %377 to i64
  %381 = getelementptr inbounds i32, i32* %379, i64 %380
  store i32 -1, i32* %381, align 4
  %382 = load i32, i32* %363, align 8
  %383 = add nsw i32 %382, 1
  store i32 %383, i32* %363, align 8
  br label %384

384:                                              ; preds = %371, %376
  %385 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %386 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %385, i64 0, i32 5
  %387 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %386, align 8
  %388 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %387, i64 0, i32 1
  %389 = load i32, i32* %388, align 8
  store i32 %389, i32* %20, align 4
  %390 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %386, align 8
  %391 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %390, i64 0, i32 1
  %392 = load i32, i32* %391, align 8
  %393 = add nsw i32 %392, 1
  %394 = icmp sgt i32 %392, -2
  br i1 %394, label %395, label %399

395:                                              ; preds = %384
  %396 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %390, i64 0, i32 2
  %397 = load i32, i32* %396, align 4
  %398 = icmp sgt i32 %397, %392
  br i1 %398, label %404, label %399

399:                                              ; preds = %395, %384
  %400 = call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %390, i32 %393, i32* dereferenceable(4) %3) #15
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %553, label %402

402:                                              ; preds = %399
  %403 = load i32, i32* %391, align 8
  br label %404

404:                                              ; preds = %402, %395
  %405 = phi i32 [ %403, %402 ], [ %392, %395 ]
  %406 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %390, i64 0, i32 4
  %407 = load i32*, i32** %406, align 8
  %408 = sext i32 %405 to i64
  %409 = getelementptr inbounds i32, i32* %407, i64 %408
  store i32 -1, i32* %409, align 4
  %410 = load i32, i32* %391, align 8
  %411 = add nsw i32 %410, 1
  store i32 %411, i32* %391, align 8
  br label %553

412:                                              ; preds = %44
  %413 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %414 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %413, i64 0, i32 1
  store i32 1, i32* %414, align 8
  br label %553

415:                                              ; preds = %44, %44, %44, %44, %44, %44, %44
  %416 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %17, align 8
  %417 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %416, i64 0, i32 9
  store i32 %45, i32* %417, align 4
  br label %553

418:                                              ; preds = %44
  %419 = call i8* @_ZN6icu_697UMemorynwEm(i64 224) #15
  %420 = icmp eq i8* %419, null
  br i1 %420, label %443, label %421

421:                                              ; preds = %418
  %422 = getelementptr inbounds i8, i8* %419, i64 8
  %423 = bitcast i8* %419 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_699RuleChainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %423, align 8
  %424 = getelementptr inbounds i8, i8* %419, i64 16
  %425 = bitcast i8* %424 to i16*
  store i16 2, i16* %425, align 8
  %426 = getelementptr inbounds i8, i8* %419, i64 72
  %427 = getelementptr inbounds i8, i8* %419, i64 88
  %428 = bitcast i8* %427 to i32 (...)***
  call void @llvm.memset.p0i8.i64(i8* align 8 %426, i8 0, i64 16, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %428, align 8
  %429 = getelementptr inbounds i8, i8* %419, i64 96
  %430 = bitcast i8* %429 to i16*
  store i16 2, i16* %430, align 8
  %431 = getelementptr inbounds i8, i8* %419, i64 152
  %432 = bitcast i8* %431 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %432, align 8
  %433 = getelementptr inbounds i8, i8* %419, i64 160
  %434 = bitcast i8* %433 to i16*
  store i16 2, i16* %434, align 8
  %435 = getelementptr inbounds i8, i8* %419, i64 216
  store i8 0, i8* %435, align 8
  %436 = getelementptr inbounds i8, i8* %419, i64 217
  store i8 0, i8* %436, align 1
  %437 = getelementptr inbounds i8, i8* %419, i64 220
  %438 = bitcast i8* %437 to i32*
  store i32 0, i32* %438, align 4
  %439 = bitcast i8* %422 to %"class.icu_69::UnicodeString"*
  %440 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSERKS0_(%"class.icu_69::UnicodeString"* %439, %"class.icu_69::UnicodeString"* dereferenceable(64) %13) #15
  %441 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %16, align 8
  %442 = icmp eq %"class.icu_69::RuleChain"* %441, null
  br i1 %442, label %468, label %444

443:                                              ; preds = %418
  store i32 7, i32* %3, align 4
  br label %553

444:                                              ; preds = %421, %460
  %445 = phi %"class.icu_69::RuleChain"* [ %464, %460 ], [ %441, %421 ]
  %446 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %445, i64 0, i32 2
  %447 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %446, align 8
  %448 = icmp eq %"class.icu_69::RuleChain"* %447, null
  br i1 %448, label %465, label %449

449:                                              ; preds = %444
  %450 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %447, i64 0, i32 1
  %451 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %447, i64 0, i32 1, i32 1, i32 0, i32 0
  %452 = load i16, i16* %451, align 8
  %453 = icmp slt i16 %452, 0
  br i1 %453, label %457, label %454

454:                                              ; preds = %449
  %455 = lshr i16 %452, 5
  %456 = zext i16 %455 to i32
  br label %460

457:                                              ; preds = %449
  %458 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %447, i64 0, i32 1, i32 1, i32 0, i32 1
  %459 = load i32, i32* %458, align 4
  br label %460

460:                                              ; preds = %454, %457
  %461 = phi i32 [ %456, %454 ], [ %459, %457 ]
  %462 = call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %450, i32 0, i32 %461, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @_ZN6icu_69L20PLURAL_KEYWORD_OTHERE, i64 0, i64 0), i32 0, i32 5) #15
  %463 = icmp eq i8 %462, 0
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([6 x i16], [6 x i16]* @_ZN6icu_69L20PLURAL_KEYWORD_OTHERE, i64 0, i64 0)) #15, !srcloc !2
  %464 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %446, align 8
  br i1 %463, label %465, label %444

465:                                              ; preds = %460, %444
  %466 = phi %"class.icu_69::RuleChain"* [ null, %444 ], [ %464, %460 ]
  %467 = bitcast i8* %426 to %"class.icu_69::RuleChain"**
  store %"class.icu_69::RuleChain"* %466, %"class.icu_69::RuleChain"** %467, align 8
  br label %468

468:                                              ; preds = %421, %465
  %469 = phi %"class.icu_69::RuleChain"** [ %446, %465 ], [ %16, %421 ]
  %470 = bitcast %"class.icu_69::RuleChain"** %469 to i8**
  store i8* %419, i8** %470, align 8
  %471 = call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %472 = icmp eq i8* %471, null
  br i1 %472, label %484, label %473

473:                                              ; preds = %468
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %471, i8 0, i64 32, i1 false)
  %474 = bitcast i8* %471 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6912OrConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %474, align 8
  %475 = getelementptr inbounds i8, i8* %471, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %475, i8 0, i64 20, i1 false) #15
  %476 = getelementptr inbounds i8, i8* %419, i64 80
  %477 = bitcast i8* %476 to i8**
  store i8* %471, i8** %477, align 8
  %478 = getelementptr inbounds i8, i8* %471, i64 24
  %479 = bitcast i8* %478 to i32*
  %480 = load i32, i32* %479, align 8
  %481 = icmp slt i32 %480, 1
  br i1 %481, label %482, label %485

482:                                              ; preds = %473
  %483 = bitcast i8* %471 to %"class.icu_69::OrConstraint"*
  br label %486

484:                                              ; preds = %468
  store i32 7, i32* %3, align 4
  br label %553

485:                                              ; preds = %473
  store i32 %480, i32* %3, align 4
  br label %513

486:                                              ; preds = %482, %486
  %487 = phi %"class.icu_69::OrConstraint"* [ %489, %486 ], [ %483, %482 ]
  %488 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %487, i64 0, i32 2
  %489 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %488, align 8
  %490 = icmp eq %"class.icu_69::OrConstraint"* %489, null
  br i1 %490, label %491, label %486

491:                                              ; preds = %486
  %492 = call i8* @_ZN6icu_697UMemorynwEm(i64 56) #15
  %493 = icmp eq i8* %492, null
  br i1 %493, label %494, label %497

494:                                              ; preds = %491
  %495 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %487, i64 0, i32 1
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %495, align 8
  store i32 7, i32* %3, align 4
  %496 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %495, align 8
  br label %513

497:                                              ; preds = %491
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %492, i8 0, i64 56, i1 false) #15
  %498 = bitcast i8* %492 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6913AndConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %498, align 8
  %499 = getelementptr inbounds i8, i8* %492, i64 8
  %500 = bitcast i8* %499 to i32*
  store i32 0, i32* %500, align 8
  %501 = getelementptr inbounds i8, i8* %492, i64 12
  %502 = bitcast i8* %501 to i32*
  store i32 -1, i32* %502, align 4
  %503 = getelementptr inbounds i8, i8* %492, i64 16
  %504 = bitcast i8* %503 to i32*
  store i32 -1, i32* %504, align 8
  %505 = getelementptr inbounds i8, i8* %492, i64 24
  %506 = bitcast i8* %505 to %"class.icu_69::UVector32"**
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %506, align 8
  %507 = getelementptr inbounds i8, i8* %492, i64 32
  store i8 0, i8* %507, align 8
  %508 = getelementptr inbounds i8, i8* %492, i64 33
  store i8 0, i8* %508, align 1
  %509 = getelementptr inbounds i8, i8* %492, i64 36
  call void @llvm.memset.p0i8.i64(i8* align 4 %509, i8 0, i64 16, i1 false) #15
  %510 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %487, i64 0, i32 1
  %511 = bitcast %"class.icu_69::AndConstraint"** %510 to i8**
  store i8* %492, i8** %511, align 8
  %512 = bitcast i8* %492 to %"class.icu_69::AndConstraint"*
  br label %513

513:                                              ; preds = %485, %494, %497
  %514 = phi %"class.icu_69::AndConstraint"* [ null, %485 ], [ %496, %494 ], [ %512, %497 ]
  store %"class.icu_69::AndConstraint"* %514, %"class.icu_69::AndConstraint"** %17, align 8
  store i8* %419, i8** %18, align 8
  br label %553

515:                                              ; preds = %46, %522
  %516 = load i32, i32* %11, align 8
  switch i32 %516, label %517 [
    i32 3, label %553
    i32 30, label %553
    i32 6, label %553
  ]

517:                                              ; preds = %515
  %518 = icmp eq i32 %516, 9
  %519 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %12, align 8
  br i1 %518, label %520, label %525

520:                                              ; preds = %517
  %521 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %519, i64 0, i32 7
  store i8 1, i8* %521, align 1
  br label %522

522:                                              ; preds = %520, %525
  call void @_ZN6icu_6916PluralRuleParser12getNextTokenER10UErrorCode(%"class.icu_69::PluralRuleParser"* %0, i32* dereferenceable(4) %3)
  %523 = load i32, i32* %3, align 4
  %524 = icmp slt i32 %523, 1
  br i1 %524, label %515, label %553

525:                                              ; preds = %517
  %526 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %519, i64 0, i32 5
  %527 = load i16, i16* %14, align 8
  %528 = icmp slt i16 %527, 0
  %529 = lshr i16 %527, 5
  %530 = zext i16 %529 to i32
  %531 = load i32, i32* %15, align 4
  %532 = select i1 %528, i32 %531, i32 %530
  %533 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %526, %"class.icu_69::UnicodeString"* dereferenceable(64) %13, i32 0, i32 %532) #15
  br label %522

534:                                              ; preds = %49, %541
  %535 = load i32, i32* %11, align 8
  switch i32 %535, label %536 [
    i32 3, label %553
    i32 30, label %553
    i32 6, label %553
  ]

536:                                              ; preds = %534
  %537 = icmp eq i32 %535, 9
  %538 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %12, align 8
  br i1 %537, label %539, label %544

539:                                              ; preds = %536
  %540 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %538, i64 0, i32 6
  store i8 1, i8* %540, align 8
  br label %541

541:                                              ; preds = %539, %544
  call void @_ZN6icu_6916PluralRuleParser12getNextTokenER10UErrorCode(%"class.icu_69::PluralRuleParser"* %0, i32* dereferenceable(4) %3)
  %542 = load i32, i32* %3, align 4
  %543 = icmp slt i32 %542, 1
  br i1 %543, label %534, label %553

544:                                              ; preds = %536
  %545 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %538, i64 0, i32 4
  %546 = load i16, i16* %14, align 8
  %547 = icmp slt i16 %546, 0
  %548 = lshr i16 %546, 5
  %549 = zext i16 %548 to i32
  %550 = load i32, i32* %15, align 4
  %551 = select i1 %547, i32 %550, i32 %549
  %552 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %545, %"class.icu_69::UnicodeString"* dereferenceable(64) %13, i32 0, i32 %551) #15
  br label %541

553:                                              ; preds = %522, %515, %515, %515, %541, %534, %534, %534, %155, %46, %49, %404, %399, %220, %218, %210, %443, %513, %484, %95, %136, %44, %234, %295, %347, %252, %415, %412, %358, %350, %138, %80
  %554 = load i32, i32* %11, align 8
  store i32 %554, i32* %22, align 4
  %555 = load i32, i32* %3, align 4
  %556 = icmp slt i32 %555, 1
  br i1 %556, label %557, label %559

557:                                              ; preds = %553
  %558 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %9, align 8
  br label %23

559:                                              ; preds = %553, %41, %38, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules18createDefaultRulesER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.icu_69::UnicodeString", align 8
  %3 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %4 = bitcast %"class.icu_69::UnicodeString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %3, i64 0, i32 0
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @_ZN6icu_69L19PLURAL_DEFAULT_RULEE, i64 0, i64 0), i16** %5, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %2, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %3, i32 -1) #15
  %6 = call %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules11createRulesERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %2, i32* dereferenceable(4) %0)
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %2) #15
  %7 = load i16*, i16** %5, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %7) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #15
  ret %"class.icu_69::PluralRules"* %6
}

declare void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"*, i8 signext, %"class.icu_69::ConstChar16Ptr"*, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::SharedPluralRules"* @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE12createObjectEPKvR10UErrorCode(%"class.icu_69::LocaleCacheKey"* nocapture readonly, i8* nocapture readnone, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::Locale", align 8
  %5 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 2, i32 7
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.icu_69::Locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %7) #15
  call void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"* nonnull %4, i8* %6, i8* null, i8* null, i8* null) #15
  %8 = call %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules17internalForLocaleERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* nonnull dereferenceable(224) %4, i32 0, i32* dereferenceable(4) %2)
  %9 = icmp ne %"class.icu_69::PluralRules"* %8, null
  %10 = load i32, i32* %2, align 4
  %11 = icmp sgt i32 %10, 0
  %12 = or i1 %9, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  store i32 7, i32* %2, align 4
  br label %14

14:                                               ; preds = %3, %13
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %7) #15
  %15 = load i32, i32* %2, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %44

17:                                               ; preds = %14
  %18 = call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %19 = icmp eq i8* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = bitcast i8* %18 to %"class.icu_69::SharedPluralRules"*
  %22 = bitcast i8* %18 to i32 (...)***
  %23 = getelementptr inbounds i8, i8* %18, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6917SharedPluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %24 = getelementptr inbounds i8, i8* %18, i64 24
  %25 = bitcast i8* %24 to %"class.icu_69::PluralRules"**
  store %"class.icu_69::PluralRules"* %8, %"class.icu_69::PluralRules"** %25, align 8
  br label %26

26:                                               ; preds = %20, %17
  %27 = phi %"class.icu_69::SharedPluralRules"* [ %21, %20 ], [ null, %17 ]
  %28 = icmp ne %"class.icu_69::SharedPluralRules"* %27, null
  %29 = load i32, i32* %2, align 4
  %30 = icmp sgt i32 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %33, label %32

32:                                               ; preds = %26
  store i32 7, i32* %2, align 4
  br label %44

33:                                               ; preds = %26
  %34 = icmp slt i32 %29, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %27, i64 0, i32 0
  call void @_ZNK6icu_6912SharedObject6addRefEv(%"class.icu_69::SharedObject"* %36) #15
  br label %51

37:                                               ; preds = %33
  %38 = icmp eq %"class.icu_69::SharedPluralRules"* %27, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %37
  %40 = bitcast %"class.icu_69::SharedPluralRules"* %27 to void (%"class.icu_69::SharedPluralRules"*)***
  %41 = load void (%"class.icu_69::SharedPluralRules"*)**, void (%"class.icu_69::SharedPluralRules"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.icu_69::SharedPluralRules"*)*, void (%"class.icu_69::SharedPluralRules"*)** %41, i64 1
  %43 = load void (%"class.icu_69::SharedPluralRules"*)*, void (%"class.icu_69::SharedPluralRules"*)** %42, align 8
  call void %43(%"class.icu_69::SharedPluralRules"* nonnull %27) #15
  br label %44

44:                                               ; preds = %32, %39, %37, %14
  %45 = icmp eq %"class.icu_69::PluralRules"* %8, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = bitcast %"class.icu_69::PluralRules"* %8 to void (%"class.icu_69::PluralRules"*)***
  %48 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %48, i64 1
  %50 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %49, align 8
  call void %50(%"class.icu_69::PluralRules"* nonnull %8) #15
  br label %51

51:                                               ; preds = %35, %44, %46
  %52 = phi %"class.icu_69::SharedPluralRules"* [ %27, %35 ], [ null, %44 ], [ null, %46 ]
  ret %"class.icu_69::SharedPluralRules"* %52
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules17internalForLocaleERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca %"class.icu_69::PluralRuleParser", align 8
  %7 = alloca %"class.icu_69::LocalPointer.4", align 8
  %8 = alloca %"class.icu_69::StandardPluralRanges", align 8
  %9 = load i32, i32* %2, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %86

11:                                               ; preds = %3
  %12 = icmp sgt i32 %1, 1
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store i32 1, i32* %2, align 4
  br label %86

14:                                               ; preds = %11
  %15 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %16 = icmp eq i8* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = bitcast i8* %15 to %"class.icu_69::PluralRules"*
  %19 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6icu_6911PluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %15, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #15
  br label %21

21:                                               ; preds = %17, %14
  %22 = phi %"class.icu_69::PluralRules"* [ %18, %17 ], [ null, %14 ]
  %23 = icmp ne %"class.icu_69::PluralRules"* %22, null
  %24 = load i32, i32* %2, align 4
  %25 = icmp sgt i32 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  store i32 7, i32* %2, align 4
  br label %86

28:                                               ; preds = %21
  %29 = icmp slt i32 %24, 1
  br i1 %29, label %30, label %77

30:                                               ; preds = %28
  %31 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %31) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 64, i1 false)
  call void @_ZN6icu_6911PluralRules19getRuleFromResourceERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %4, %"class.icu_69::PluralRules"* undef, %"class.icu_69::Locale"* dereferenceable(224) %0, i32 %1, i32* dereferenceable(4) %2)
  %32 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  %33 = load i16, i16* %32, align 8
  %34 = icmp slt i16 %33, 0
  %35 = lshr i16 %33, 5
  %36 = zext i16 %35 to i32
  %37 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = select i1 %34, i32 %38, i32 %36
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %30
  %42 = load i32, i32* %2, align 4
  %43 = icmp eq i32 %42, 7
  br i1 %43, label %74, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %45) #15
  call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %5, i16* getelementptr inbounds ([9 x i16], [9 x i16]* @_ZN6icu_69L19PLURAL_DEFAULT_RULEE, i64 0, i64 0)) #15
  %46 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* nonnull %4, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %45) #15
  store i32 0, i32* %2, align 4
  br label %47

47:                                               ; preds = %44, %30
  %48 = bitcast %"class.icu_69::PluralRuleParser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %6, i64 0, i32 1
  %50 = bitcast %"class.icu_69::UnicodeString"** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 80, i1 false)
  %51 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6916PluralRuleParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %6, i64 0, i32 2
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %6, i64 0, i32 3, i32 1, i32 0, i32 0
  store i16 2, i16* %54, align 8
  %55 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %6, i64 0, i32 4
  %56 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %6, i64 0, i32 8
  %57 = bitcast i32* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #15
  store i32 -1, i32* %56, align 8
  %58 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %6, i64 0, i32 9
  store i32 -1, i32* %58, align 4
  call void @_ZN6icu_6916PluralRuleParser5parseERKNS_13UnicodeStringEPNS_11PluralRulesER10UErrorCode(%"class.icu_69::PluralRuleParser"* nonnull %6, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %4, %"class.icu_69::PluralRules"* %22, i32* dereferenceable(4) %2)
  %59 = bitcast %"class.icu_69::LocalPointer.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #15
  %60 = bitcast %"class.icu_69::StandardPluralRanges"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %60) #15
  call void @_ZN6icu_6920StandardPluralRanges9forLocaleERKNS_6LocaleER10UErrorCode(%"class.icu_69::StandardPluralRanges"* nonnull sret %8, %"class.icu_69::Locale"* dereferenceable(224) %0, i32* dereferenceable(4) %2) #15
  call void @_ZNO6icu_6920StandardPluralRanges9toPointerER10UErrorCode(%"class.icu_69::LocalPointer.4"* nonnull sret %7, %"class.icu_69::StandardPluralRanges"* nonnull %8, i32* dereferenceable(4) %2) #15
  %61 = getelementptr inbounds %"class.icu_69::LocalPointer.4", %"class.icu_69::LocalPointer.4"* %7, i64 0, i32 0, i32 0
  %62 = bitcast %"class.icu_69::LocalPointer.4"* %7 to i64*
  %63 = load i64, i64* %62, align 8
  store %"class.icu_69::StandardPluralRanges"* null, %"class.icu_69::StandardPluralRanges"** %61, align 8
  %64 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %22, i64 0, i32 2
  %65 = bitcast %"class.icu_69::StandardPluralRanges"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %"class.icu_69::StandardPluralRanges", %"class.icu_69::StandardPluralRanges"* %8, i64 0, i32 0, i32 2
  %67 = load i8, i8* %66, align 4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %47
  %70 = bitcast %"class.icu_69::StandardPluralRanges"* %8 to i8**
  %71 = load i8*, i8** %70, align 8
  call void @uprv_free_69(i8* %71) #15
  br label %72

72:                                               ; preds = %47, %69
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %60) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6916PluralRuleParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %73 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %6, i64 0, i32 3
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %73) #15
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %48) #15
  br label %74

74:                                               ; preds = %41, %72
  %75 = phi %"class.icu_69::PluralRules"* [ %22, %41 ], [ null, %72 ]
  %76 = phi %"class.icu_69::PluralRules"* [ null, %41 ], [ %22, %72 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %31) #15
  br label %77

77:                                               ; preds = %28, %74
  %78 = phi %"class.icu_69::PluralRules"* [ %75, %74 ], [ %22, %28 ]
  %79 = phi %"class.icu_69::PluralRules"* [ %76, %74 ], [ null, %28 ]
  %80 = icmp eq %"class.icu_69::PluralRules"* %78, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.icu_69::PluralRules"* %78 to void (%"class.icu_69::PluralRules"*)***
  %83 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %83, i64 1
  %85 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %84, align 8
  call void %85(%"class.icu_69::PluralRules"* nonnull %78) #15
  br label %86

86:                                               ; preds = %27, %81, %77, %3, %13
  %87 = phi %"class.icu_69::PluralRules"* [ null, %13 ], [ null, %3 ], [ %79, %77 ], [ %79, %81 ], [ null, %27 ]
  ret %"class.icu_69::PluralRules"* %87
}

declare void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"*, i8*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"*) unnamed_addr #7

declare void @_ZNK6icu_6912SharedObject6addRefEv(%"class.icu_69::SharedObject"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::SharedPluralRules"* @_ZN6icu_6911PluralRules20createSharedInstanceERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::LocaleCacheKey", align 8
  %5 = alloca %"class.icu_69::SharedPluralRules"*, align 8
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %8
  store i32 16, i32* %2, align 4
  br label %27

11:                                               ; preds = %8
  %12 = bitcast %"class.icu_69::SharedPluralRules"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  store %"class.icu_69::SharedPluralRules"* null, %"class.icu_69::SharedPluralRules"** %5, align 8
  %13 = tail call %"class.icu_69::UnifiedCache"* @_ZN6icu_6912UnifiedCache11getInstanceER10UErrorCode(i32* dereferenceable(4) %2) #15
  %14 = load i32, i32* %2, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %25

16:                                               ; preds = %11
  %17 = bitcast %"class.icu_69::LocaleCacheKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %4, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %4, i64 0, i32 2
  call void @_ZN6icu_696LocaleC1ERKS0_(%"class.icu_69::Locale"* %21, %"class.icu_69::Locale"* dereferenceable(224) %0) #15
  %22 = bitcast %"class.icu_69::LocaleCacheKey"* %4 to %"class.icu_69::CacheKey"*
  call void @_ZNK6icu_6912UnifiedCache3getINS_17SharedPluralRulesEEEvRKNS_8CacheKeyIT_EEPKvRPKS4_R10UErrorCode(%"class.icu_69::UnifiedCache"* %13, %"class.icu_69::CacheKey"* nonnull dereferenceable(16) %22, i8* null, %"class.icu_69::SharedPluralRules"** nonnull dereferenceable(8) %5, i32* dereferenceable(4) %2) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* %21) #15
  %23 = bitcast %"class.icu_69::LocaleCacheKey"* %4 to %"class.icu_69::CacheKeyBase"*
  call void @_ZN6icu_6912CacheKeyBaseD2Ev(%"class.icu_69::CacheKeyBase"* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %17) #15
  %24 = load %"class.icu_69::SharedPluralRules"*, %"class.icu_69::SharedPluralRules"** %5, align 8
  br label %25

25:                                               ; preds = %11, %16
  %26 = phi %"class.icu_69::SharedPluralRules"* [ null, %11 ], [ %24, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %27

27:                                               ; preds = %3, %25, %10
  %28 = phi %"class.icu_69::SharedPluralRules"* [ null, %10 ], [ %26, %25 ], [ null, %3 ]
  ret %"class.icu_69::SharedPluralRules"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules9forLocaleERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules9forLocaleERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %0, i32 0, i32* dereferenceable(4) %1)
  ret %"class.icu_69::PluralRules"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules9forLocaleERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules17internalForLocaleERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %0, i32 %1, i32* dereferenceable(4) %2)
  br label %43

7:                                                ; preds = %3
  %8 = tail call %"class.icu_69::SharedPluralRules"* @_ZN6icu_6911PluralRules20createSharedInstanceERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %0, i32 0, i32* dereferenceable(4) %2)
  %9 = load i32, i32* %2, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %43

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %8, i64 0, i32 1
  %13 = load %"class.icu_69::PluralRules"*, %"class.icu_69::PluralRules"** %12, align 8
  %14 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %15 = icmp eq i8* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = bitcast i8* %14 to %"class.icu_69::PluralRules"*
  %18 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6icu_6911PluralRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #15
  %20 = tail call dereferenceable(32) %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRulesaSERKS0_(%"class.icu_69::PluralRules"* nonnull %17, %"class.icu_69::PluralRules"* dereferenceable(32) %13) #15
  br label %21

21:                                               ; preds = %16, %11
  %22 = phi %"class.icu_69::PluralRules"* [ %17, %16 ], [ null, %11 ]
  %23 = icmp ne %"class.icu_69::PluralRules"* %22, null
  %24 = load i32, i32* %2, align 4
  %25 = icmp sgt i32 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  store i32 7, i32* %2, align 4
  br label %40

28:                                               ; preds = %21
  br i1 %25, label %40, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %22, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %40, label %33

33:                                               ; preds = %29
  store i32 %31, i32* %2, align 4
  %34 = icmp eq %"class.icu_69::PluralRules"* %22, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.icu_69::PluralRules"* %22 to void (%"class.icu_69::PluralRules"*)***
  %37 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %37, i64 1
  %39 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %38, align 8
  tail call void %39(%"class.icu_69::PluralRules"* nonnull %22) #15
  br label %40

40:                                               ; preds = %27, %28, %29, %33, %35
  %41 = phi %"class.icu_69::PluralRules"* [ %22, %28 ], [ %22, %29 ], [ null, %33 ], [ null, %35 ], [ null, %27 ]
  %42 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %8, i64 0, i32 0
  tail call void @_ZNK6icu_6912SharedObject9removeRefEv(%"class.icu_69::SharedObject"* %42) #15
  br label %43

43:                                               ; preds = %40, %7, %5
  %44 = phi %"class.icu_69::PluralRules"* [ %6, %5 ], [ %41, %40 ], [ null, %7 ]
  ret %"class.icu_69::PluralRules"* %44
}

declare void @_ZNK6icu_6912SharedObject9removeRefEv(%"class.icu_69::SharedObject"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6911PluralRules19getRuleFromResourceERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::PluralRules"* nocapture readnone, %"class.icu_69::Locale"* dereferenceable(224), i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca %"class.icu_69::UnicodeString", align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [157 x i8], align 16
  %14 = alloca [256 x i8], align 16
  %15 = alloca %"class.icu_69::UnicodeString", align 8
  %16 = alloca i8*, align 8
  %17 = alloca %"class.icu_69::UnicodeString", align 8
  %18 = alloca %"class.icu_69::UnicodeString", align 8
  %19 = bitcast %"class.icu_69::UnicodeString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %19) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 64, i1 false)
  %20 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %21, align 8
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %25, label %24

24:                                               ; preds = %5
  call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10) #15
  br label %138

25:                                               ; preds = %5
  %26 = tail call %struct.UResourceBundle* @ures_openDirect_69(i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32* %4) #15
  %27 = load i32, i32* %4, align 4
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10) #15
  br label %135

30:                                               ; preds = %25
  switch i32 %3, label %32 [
    i32 0, label %33
    i32 1, label %31
  ]

31:                                               ; preds = %30
  br label %33

32:                                               ; preds = %30
  store i32 1, i32* %4, align 4
  call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10) #15
  br label %135

33:                                               ; preds = %30, %31
  %34 = phi i8* [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), %31 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %30 ]
  %35 = tail call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %26, i8* nonnull %34, %struct.UResourceBundle* null, i32* %4) #15
  %36 = load i32, i32* %4, align 4
  %37 = icmp slt i32 %36, 1
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10) #15
  br label %132

39:                                               ; preds = %33
  %40 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #15
  store i32 0, i32* %11, align 4
  %41 = tail call i8* @_ZNK6icu_696Locale11getBaseNameEv(%"class.icu_69::Locale"* %2) #15
  %42 = call i16* @ures_getStringByKey_69(%struct.UResourceBundle* %35, i8* %41, i32* nonnull %11, i32* %4) #15
  %43 = icmp eq i16* %42, null
  br i1 %43, label %44, label %59

44:                                               ; preds = %39
  %45 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #15
  store i32 0, i32* %12, align 4
  %46 = getelementptr inbounds [157 x i8], [157 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 157, i8* nonnull %46) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 -86, i64 157, i1 false)
  %47 = call i8* @_ZNK6icu_696Locale11getBaseNameEv(%"class.icu_69::Locale"* %2) #15
  %48 = call i8* @strcpy(i8* nonnull %46, i8* %47) #15
  %49 = call i32 @uloc_getParent_69(i8* nonnull %46, i8* nonnull %46, i32 157, i32* nonnull %12) #15
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %44, %54
  store i32 0, i32* %11, align 4
  %52 = call i16* @ures_getStringByKey_69(%struct.UResourceBundle* %35, i8* nonnull %46, i32* nonnull %11, i32* nonnull %12) #15
  %53 = icmp eq i16* %52, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  store i32 0, i32* %12, align 4
  %55 = call i32 @uloc_getParent_69(i8* nonnull %46, i8* nonnull %46, i32 157, i32* nonnull %12) #15
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %51, label %58

57:                                               ; preds = %51
  store i32 0, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 157, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #15
  br label %59

58:                                               ; preds = %54, %44
  call void @llvm.lifetime.end.p0i8(i64 157, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #15
  call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10) #15
  br label %131

59:                                               ; preds = %39, %57
  %60 = phi i16* [ %52, %57 ], [ %42, %39 ]
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %61) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 -86, i64 256, i1 false)
  %62 = load i32, i32* %11, align 4
  %63 = add nsw i32 %62, 1
  call void @u_UCharsToChars_69(i16* nonnull %60, i8* nonnull %61, i32 %63) #15
  %64 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), %struct.UResourceBundle* null, i32* %4) #15
  %65 = load i32, i32* %4, align 4
  %66 = icmp slt i32 %65, 1
  br i1 %66, label %68, label %67

67:                                               ; preds = %59
  call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10) #15
  br label %127

68:                                               ; preds = %59
  %69 = call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %64, i8* nonnull %61, %struct.UResourceBundle* null, i32* %4) #15
  %70 = load i32, i32* %4, align 4
  %71 = icmp slt i32 %70, 1
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10) #15
  br label %124

73:                                               ; preds = %68
  %74 = call i32 @ures_getSize_69(%struct.UResourceBundle* %69) #15
  %75 = bitcast %"class.icu_69::UnicodeString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %75) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 64, i1 false)
  %76 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %77, align 8
  %78 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  store i8* null, i8** %16, align 8
  %79 = icmp sgt i32 %74, 0
  br i1 %79, label %80, label %93

80:                                               ; preds = %73
  %81 = bitcast %"class.icu_69::UnicodeString"* %17 to i8*
  %82 = bitcast %"class.icu_69::ConstChar16Ptr"* %7 to i8*
  %83 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %17, i64 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %17, i64 0, i32 1, i32 0, i32 0
  %85 = bitcast i32* %6 to i8*
  %86 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %7, i64 0, i32 0
  %87 = bitcast %"class.icu_69::UnicodeString"* %18 to i8*
  %88 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %18, i64 0, i32 1, i32 0, i32 0
  %89 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %18, i64 0, i32 1, i32 0, i32 1
  %90 = bitcast i16* %8 to i8*
  %91 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %17, i64 0, i32 1, i32 0, i32 1
  %92 = bitcast i16* %9 to i8*
  br label %94

93:                                               ; preds = %104, %73
  call void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %75) #15
  br label %124

94:                                               ; preds = %104, %80
  %95 = phi i32 [ 0, %80 ], [ %122, %104 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %81) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 64, i1 false) #15, !alias.scope !3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8, !alias.scope !3
  store i16 2, i16* %84, align 8, !alias.scope !3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #15, !noalias !3
  store i32 0, i32* %6, align 4, !noalias !3
  %96 = call i16* @ures_getNextString_69(%struct.UResourceBundle* %69, i32* nonnull %6, i8** nonnull %16, i32* %4) #15, !noalias !3
  %97 = load i32, i32* %4, align 4, !noalias !3
  %98 = icmp sgt i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %94
  store i16* %96, i16** %86, align 8, !noalias !3
  %100 = load i32, i32* %6, align 4, !noalias !3
  %101 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString5setToEaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %17, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %7, i32 %100) #15
  %102 = load i16*, i16** %86, align 8, !noalias !3
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %102) #15, !srcloc !2
  br label %104

103:                                              ; preds = %94
  call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* nonnull %17) #15
  br label %104

104:                                              ; preds = %99, %103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #15, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %87) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 64, i1 false)
  %105 = load i8*, i8** %16, align 8
  call void @_ZN6icu_6913UnicodeStringC1EPKciNS0_10EInvariantE(%"class.icu_69::UnicodeString"* nonnull %18, i8* %105, i32 -1, i32 0) #15
  %106 = load i16, i16* %88, align 8
  %107 = icmp slt i16 %106, 0
  %108 = lshr i16 %106, 5
  %109 = zext i16 %108 to i32
  %110 = load i32, i32* %89, align 4
  %111 = select i1 %107, i32 %110, i32 %109
  %112 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* nonnull %15, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %18, i32 0, i32 %111) #15
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %90)
  store i16 58, i16* %8, align 2
  %113 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* nonnull %15, i16* nonnull %8, i32 0, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %90)
  %114 = load i16, i16* %84, align 8
  %115 = icmp slt i16 %114, 0
  %116 = lshr i16 %114, 5
  %117 = zext i16 %116 to i32
  %118 = load i32, i32* %91, align 4
  %119 = select i1 %115, i32 %118, i32 %117
  %120 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* nonnull %15, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %17, i32 0, i32 %119) #15
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %92)
  store i16 59, i16* %9, align 2
  %121 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* nonnull %15, i16* nonnull %9, i32 0, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %92)
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %87) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %81) #15
  %122 = add nuw nsw i32 %95, 1
  %123 = icmp eq i32 %122, %74
  br i1 %123, label %93, label %94

124:                                              ; preds = %93, %72
  %125 = icmp eq %struct.UResourceBundle* %69, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %124
  call void @ures_close_69(%struct.UResourceBundle* nonnull %69) #15
  br label %127

127:                                              ; preds = %126, %124, %67
  %128 = icmp eq %struct.UResourceBundle* %64, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %127
  call void @ures_close_69(%struct.UResourceBundle* nonnull %64) #15
  br label %130

130:                                              ; preds = %127, %129
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %61) #15
  br label %131

131:                                              ; preds = %130, %58
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #15
  br label %132

132:                                              ; preds = %131, %38
  %133 = icmp eq %struct.UResourceBundle* %35, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %132
  call void @ures_close_69(%struct.UResourceBundle* nonnull %35) #15
  br label %135

135:                                              ; preds = %134, %132, %32, %29
  %136 = icmp eq %struct.UResourceBundle* %26, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %135
  call void @ures_close_69(%struct.UResourceBundle* nonnull %26) #15
  br label %138

138:                                              ; preds = %137, %135, %24
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %19) #15
  ret void
}

declare void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"*, i16*) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #7

declare void @_ZN6icu_6920StandardPluralRanges9forLocaleERKNS_6LocaleER10UErrorCode(%"class.icu_69::StandardPluralRanges"* sret, %"class.icu_69::Locale"* dereferenceable(224), i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6911PluralRules6selectEi(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::PluralRules"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %5 = alloca %"class.icu_69::FixedDecimal", align 16
  %6 = bitcast %"class.icu_69::FixedDecimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #15
  %7 = sitofp i32 %2 to double
  %8 = bitcast %"class.icu_69::FixedDecimal"* %5 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 16
  call void @_ZN6icu_6912FixedDecimal4initEd(%"class.icu_69::FixedDecimal"* nonnull %5, double %7) #15
  %9 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %5, i64 0, i32 0
  %10 = bitcast %"class.icu_69::ConstChar16Ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 1
  %12 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %11, align 8, !noalias !6
  %13 = icmp eq %"class.icu_69::RuleChain"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %4, i64 0, i32 0
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @_ZN6icu_69L19PLURAL_DEFAULT_RULEE, i64 0, i64 0), i16** %15, align 8, !noalias !6
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* %0, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %4, i32 -1) #15
  %16 = load i16*, i16** %15, align 8, !noalias !6
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %16) #15, !srcloc !2
  br label %18

17:                                               ; preds = %3
  call void @_ZNK6icu_699RuleChain6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* sret %0, %"class.icu_69::RuleChain"* nonnull %12, %"class.icu_69::IFixedDecimal"* nonnull dereferenceable(8) %9) #15
  br label %18

18:                                               ; preds = %14, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %19 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %5, i64 0, i32 1
  call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %19) #15
  call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::PluralRules"* nocapture readonly, %"class.icu_69::IFixedDecimal"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %5 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 1
  %6 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %5, align 8
  %7 = icmp eq %"class.icu_69::RuleChain"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %4, i64 0, i32 0
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @_ZN6icu_69L19PLURAL_DEFAULT_RULEE, i64 0, i64 0), i16** %9, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* %0, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %4, i32 -1) #15
  %10 = load i16*, i16** %9, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %10) #15, !srcloc !2
  br label %12

11:                                               ; preds = %3
  tail call void @_ZNK6icu_699RuleChain6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* sret %0, %"class.icu_69::RuleChain"* nonnull %6, %"class.icu_69::IFixedDecimal"* dereferenceable(8) %2)
  br label %12

12:                                               ; preds = %11, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6911PluralRules6selectEd(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::PluralRules"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %5 = alloca %"class.icu_69::FixedDecimal", align 16
  %6 = bitcast %"class.icu_69::FixedDecimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #15
  %7 = bitcast %"class.icu_69::FixedDecimal"* %5 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 16
  call void @_ZN6icu_6912FixedDecimal4initEd(%"class.icu_69::FixedDecimal"* nonnull %5, double %2) #15
  %8 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %5, i64 0, i32 0
  %9 = bitcast %"class.icu_69::ConstChar16Ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 1
  %11 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %10, align 8, !noalias !9
  %12 = icmp eq %"class.icu_69::RuleChain"* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %4, i64 0, i32 0
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @_ZN6icu_69L19PLURAL_DEFAULT_RULEE, i64 0, i64 0), i16** %14, align 8, !noalias !9
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* %0, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %4, i32 -1) #15
  %15 = load i16*, i16** %14, align 8, !noalias !9
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %15) #15, !srcloc !2
  br label %17

16:                                               ; preds = %3
  call void @_ZNK6icu_699RuleChain6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* sret %0, %"class.icu_69::RuleChain"* nonnull %11, %"class.icu_69::IFixedDecimal"* nonnull dereferenceable(8) %8) #15
  br label %17

17:                                               ; preds = %13, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %18 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %5, i64 0, i32 1
  call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %18) #15
  call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6911PluralRules6selectERKNS_6number15FormattedNumberER10UErrorCode(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::PluralRules"* nocapture readonly, %"class.icu_69::number::FormattedNumber"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %6 = alloca %"class.icu_69::number::impl::DecimalQuantity", align 8
  %7 = bitcast %"class.icu_69::number::impl::DecimalQuantity"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (<{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, { { i8*, i32, [4 x i8] } }, i8, i8, [6 x i8] }>* @__const.FixedDecimal.dl to i8*), i64 72, i1 false)
  call void @_ZN6icu_696number4impl15DecimalQuantityC1Ev(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %6) #15
  call void @_ZNK6icu_696number15FormattedNumber18getDecimalQuantityERNS0_4impl15DecimalQuantityER10UErrorCode(%"class.icu_69::number::FormattedNumber"* %2, %"class.icu_69::number::impl::DecimalQuantity"* nonnull dereferenceable(72) %6, i32* dereferenceable(4) %3) #15
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %14, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 64, i1 false) #15, !alias.scope !12
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8, !alias.scope !12
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %13, align 8, !alias.scope !12
  call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %0) #15
  br label %33

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  store i32 %16, i32* %3, align 4
  %19 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -86, i64 64, i1 false) #15, !alias.scope !15
  %20 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8, !alias.scope !15
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %21, align 8, !alias.scope !15
  call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %0) #15
  br label %33

22:                                               ; preds = %14
  %23 = bitcast %"class.icu_69::ConstChar16Ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 1
  %25 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %24, align 8, !noalias !18
  %26 = icmp eq %"class.icu_69::RuleChain"* %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %5, i64 0, i32 0
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @_ZN6icu_69L19PLURAL_DEFAULT_RULEE, i64 0, i64 0), i16** %28, align 8, !noalias !18
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* %0, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %5, i32 -1) #15
  %29 = load i16*, i16** %28, align 8, !noalias !18
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %29) #15, !srcloc !2
  br label %32

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %6, i64 0, i32 0
  call void @_ZNK6icu_699RuleChain6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* sret %0, %"class.icu_69::RuleChain"* nonnull %25, %"class.icu_69::IFixedDecimal"* nonnull dereferenceable(8) %31) #15
  br label %32

32:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  br label %33

33:                                               ; preds = %32, %18, %10
  call void @_ZN6icu_696number4impl15DecimalQuantityD1Ev(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #15
  ret void
}

declare void @_ZN6icu_696number4impl15DecimalQuantityC1Ev(%"class.icu_69::number::impl::DecimalQuantity"*) unnamed_addr #4

declare void @_ZNK6icu_696number15FormattedNumber18getDecimalQuantityERNS0_4impl15DecimalQuantityER10UErrorCode(%"class.icu_69::number::FormattedNumber"*, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72), i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_696number4impl15DecimalQuantityD1Ev(%"class.icu_69::number::impl::DecimalQuantity"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_699RuleChain6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::RuleChain"*, %"class.icu_69::IFixedDecimal"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %5 = bitcast %"class.icu_69::IFixedDecimal"* %2 to i1 (%"class.icu_69::IFixedDecimal"*)***
  %6 = load i1 (%"class.icu_69::IFixedDecimal"*)**, i1 (%"class.icu_69::IFixedDecimal"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.icu_69::IFixedDecimal"*)*, i1 (%"class.icu_69::IFixedDecimal"*)** %6, i64 3
  %8 = load i1 (%"class.icu_69::IFixedDecimal"*)*, i1 (%"class.icu_69::IFixedDecimal"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.icu_69::IFixedDecimal"* %2) #15
  br i1 %9, label %48, label %10

10:                                               ; preds = %3
  %11 = load i1 (%"class.icu_69::IFixedDecimal"*)**, i1 (%"class.icu_69::IFixedDecimal"*)*** %5, align 8
  %12 = getelementptr inbounds i1 (%"class.icu_69::IFixedDecimal"*)*, i1 (%"class.icu_69::IFixedDecimal"*)** %11, i64 4
  %13 = load i1 (%"class.icu_69::IFixedDecimal"*)*, i1 (%"class.icu_69::IFixedDecimal"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.icu_69::IFixedDecimal"* %2) #15
  %15 = icmp eq %"class.icu_69::RuleChain"* %1, null
  %16 = or i1 %14, %15
  br i1 %16, label %48, label %17

17:                                               ; preds = %10, %44
  %18 = phi %"class.icu_69::RuleChain"* [ %46, %44 ], [ %1, %10 ]
  %19 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %18, i64 0, i32 3
  %20 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %19, align 8
  %21 = icmp eq %"class.icu_69::OrConstraint"* %20, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %17, %35
  %23 = phi %"class.icu_69::OrConstraint"* [ %37, %35 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %23, i64 0, i32 1
  %25 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %24, align 8
  %26 = icmp eq %"class.icu_69::AndConstraint"* %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %22, %27
  %28 = phi %"class.icu_69::AndConstraint"* [ %31, %27 ], [ %25, %22 ]
  %29 = tail call signext i8 @_ZN6icu_6913AndConstraint11isFulfilledERKNS_13IFixedDecimalE(%"class.icu_69::AndConstraint"* nonnull %28, %"class.icu_69::IFixedDecimal"* dereferenceable(8) %2) #15
  %30 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %28, i64 0, i32 10
  %31 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %30, align 8
  %32 = icmp ne %"class.icu_69::AndConstraint"* %31, null
  %33 = icmp ne i8 %29, 0
  %34 = and i1 %33, %32
  br i1 %34, label %27, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %23, i64 0, i32 2
  %37 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %36, align 8
  %38 = icmp ne %"class.icu_69::OrConstraint"* %37, null
  %39 = icmp eq i8 %29, 0
  %40 = and i1 %39, %38
  br i1 %40, label %22, label %41

41:                                               ; preds = %35
  br i1 %39, label %44, label %42

42:                                               ; preds = %41, %22
  %43 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %18, i64 0, i32 1
  tail call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* dereferenceable(64) %43) #15
  br label %51

44:                                               ; preds = %17, %41
  %45 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %18, i64 0, i32 2
  %46 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %45, align 8
  %47 = icmp eq %"class.icu_69::RuleChain"* %46, null
  br i1 %47, label %48, label %17

48:                                               ; preds = %44, %10, %3
  %49 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %4, i64 0, i32 0
  store i16* getelementptr inbounds ([6 x i16], [6 x i16]* @_ZN6icu_69L20PLURAL_KEYWORD_OTHERE, i64 0, i64 0), i16** %49, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* %0, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %4, i32 5) #15
  %50 = load i16*, i16** %49, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %50) #15, !srcloc !2
  br label %51

51:                                               ; preds = %42, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6911PluralRules6selectERKNS_6number20FormattedNumberRangeER10UErrorCode(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::PluralRules"* nocapture readonly, %"class.icu_69::number::FormattedNumberRange"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.icu_69::number::impl::UFormattedNumberRangeData"* @_ZNK6icu_696number20FormattedNumberRange7getDataER10UErrorCode(%"class.icu_69::number::FormattedNumberRange"* %2, i32* dereferenceable(4) %3) #15
  tail call void @_ZNK6icu_6911PluralRules6selectEPKNS_6number4impl25UFormattedNumberRangeDataER10UErrorCode(%"class.icu_69::UnicodeString"* sret %0, %"class.icu_69::PluralRules"* %1, %"class.icu_69::number::impl::UFormattedNumberRangeData"* %5, i32* dereferenceable(4) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6911PluralRules6selectEPKNS_6number4impl25UFormattedNumberRangeDataER10UErrorCode(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::PluralRules"* nocapture readonly, %"class.icu_69::number::impl::UFormattedNumberRangeData"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %6 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %7 = alloca %"class.icu_69::UnicodeString", align 8
  %8 = alloca %"class.icu_69::UnicodeString", align 8
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 -86, i64 64, i1 false) #15, !alias.scope !21
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !alias.scope !21
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %14, align 8, !alias.scope !21
  tail call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %0) #15
  br label %65

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  store i32 %17, i32* %3, align 4
  %20 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 -86, i64 64, i1 false) #15, !alias.scope !24
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8, !alias.scope !24
  %22 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %22, align 8, !alias.scope !24
  tail call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %0) #15
  br label %65

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 2
  %25 = load %"class.icu_69::StandardPluralRanges"*, %"class.icu_69::StandardPluralRanges"** %24, align 8
  %26 = icmp eq %"class.icu_69::StandardPluralRanges"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  store i32 16, i32* %3, align 4
  %28 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 -86, i64 64, i1 false) #15, !alias.scope !27
  %29 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8, !alias.scope !27
  %30 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %30, align 8, !alias.scope !27
  tail call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %0) #15
  br label %65

31:                                               ; preds = %23
  %32 = bitcast %"class.icu_69::UnicodeString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %32) #15
  %33 = bitcast %"class.icu_69::ConstChar16Ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 1
  %35 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %34, align 8, !noalias !30
  %36 = icmp eq %"class.icu_69::RuleChain"* %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %6, i64 0, i32 0
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @_ZN6icu_69L19PLURAL_DEFAULT_RULEE, i64 0, i64 0), i16** %38, align 8, !noalias !30
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %7, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %6, i32 -1) #15
  %39 = load i16*, i16** %38, align 8, !noalias !30
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %39) #15, !srcloc !2
  br label %42

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.icu_69::number::impl::UFormattedNumberRangeData", %"class.icu_69::number::impl::UFormattedNumberRangeData"* %2, i64 0, i32 2, i32 0
  call void @_ZNK6icu_699RuleChain6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::RuleChain"* nonnull %35, %"class.icu_69::IFixedDecimal"* dereferenceable(8) %41) #15
  br label %42

42:                                               ; preds = %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  %43 = call i32 @_ZN6icu_6914StandardPlural15indexFromStringERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7, i32* dereferenceable(4) %3) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %32) #15
  %44 = bitcast %"class.icu_69::UnicodeString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %44) #15
  %45 = bitcast %"class.icu_69::ConstChar16Ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %34, align 8, !noalias !33
  %47 = icmp eq %"class.icu_69::RuleChain"* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %5, i64 0, i32 0
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @_ZN6icu_69L19PLURAL_DEFAULT_RULEE, i64 0, i64 0), i16** %49, align 8, !noalias !33
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %8, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %5, i32 -1) #15
  %50 = load i16*, i16** %49, align 8, !noalias !33
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %50) #15, !srcloc !2
  br label %53

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.icu_69::number::impl::UFormattedNumberRangeData", %"class.icu_69::number::impl::UFormattedNumberRangeData"* %2, i64 0, i32 3, i32 0
  call void @_ZNK6icu_699RuleChain6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* nonnull sret %8, %"class.icu_69::RuleChain"* nonnull %46, %"class.icu_69::IFixedDecimal"* dereferenceable(8) %52) #15
  br label %53

53:                                               ; preds = %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  %54 = call i32 @_ZN6icu_6914StandardPlural15indexFromStringERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %8, i32* dereferenceable(4) %3) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %44) #15
  %55 = load i32, i32* %3, align 4
  %56 = icmp slt i32 %55, 1
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 -86, i64 64, i1 false) #15, !alias.scope !36
  %59 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8, !alias.scope !36
  %60 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %60, align 8, !alias.scope !36
  call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %0) #15
  br label %65

61:                                               ; preds = %53
  %62 = load %"class.icu_69::StandardPluralRanges"*, %"class.icu_69::StandardPluralRanges"** %24, align 8
  %63 = call i32 @_ZNK6icu_6920StandardPluralRanges7resolveENS_14StandardPlural4FormES2_(%"class.icu_69::StandardPluralRanges"* %62, i32 %43, i32 %54) #15
  %64 = call i8* @_ZN6icu_6914StandardPlural10getKeywordENS0_4FormE(i32 %63) #15
  call void @_ZN6icu_6913UnicodeStringC1EPKciNS0_10EInvariantE(%"class.icu_69::UnicodeString"* %0, i8* %64, i32 -1, i32 0) #15
  br label %65

65:                                               ; preds = %57, %61, %27, %19, %11
  ret void
}

declare %"class.icu_69::number::impl::UFormattedNumberRangeData"* @_ZNK6icu_696number20FormattedNumberRange7getDataER10UErrorCode(%"class.icu_69::number::FormattedNumberRange"*, i32* dereferenceable(4)) local_unnamed_addr #4

declare i32 @_ZNK6icu_6920StandardPluralRanges7resolveENS_14StandardPlural4FormES2_(%"class.icu_69::StandardPluralRanges"*, i32, i32) local_unnamed_addr #4

declare i8* @_ZN6icu_6914StandardPlural10getKeywordENS0_4FormE(i32) local_unnamed_addr #4

declare void @_ZN6icu_6913UnicodeStringC1EPKciNS0_10EInvariantE(%"class.icu_69::UnicodeString"*, i8*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::StringEnumeration"* @_ZNK6icu_6911PluralRules11getKeywordsER10UErrorCode(%"class.icu_69::PluralRules"* nocapture readonly, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %34

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  store i32 %7, i32* %1, align 4
  br label %34

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 160) #15
  %12 = icmp eq i8* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %10
  %14 = bitcast i8* %11 to %"class.icu_69::PluralKeywordEnumeration"*
  %15 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %16 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %15, align 8
  tail call void @_ZN6icu_6924PluralKeywordEnumerationC2EPNS_9RuleChainER10UErrorCode(%"class.icu_69::PluralKeywordEnumeration"* nonnull %14, %"class.icu_69::RuleChain"* %16, i32* dereferenceable(4) %1)
  %17 = bitcast i8* %11 to %"class.icu_69::StringEnumeration"*
  br label %18

18:                                               ; preds = %13, %10
  %19 = phi %"class.icu_69::StringEnumeration"* [ %17, %13 ], [ null, %10 ]
  %20 = icmp ne %"class.icu_69::StringEnumeration"* %19, null
  %21 = load i32, i32* %1, align 4
  %22 = icmp sgt i32 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  store i32 7, i32* %1, align 4
  br label %34

25:                                               ; preds = %18
  %26 = icmp slt i32 %21, 1
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = icmp eq %"class.icu_69::StringEnumeration"* %19, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.icu_69::StringEnumeration"* %19 to void (%"class.icu_69::StringEnumeration"*)***
  %31 = load void (%"class.icu_69::StringEnumeration"*)**, void (%"class.icu_69::StringEnumeration"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %31, i64 1
  %33 = load void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %32, align 8
  tail call void %33(%"class.icu_69::StringEnumeration"* nonnull %19) #15
  br label %34

34:                                               ; preds = %24, %25, %29, %27, %2, %9
  %35 = phi %"class.icu_69::StringEnumeration"* [ null, %9 ], [ null, %2 ], [ null, %27 ], [ null, %29 ], [ %19, %25 ], [ null, %24 ]
  ret %"class.icu_69::StringEnumeration"* %35
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZN6icu_6911PluralRules21getUniqueKeywordValueERKNS_13UnicodeStringE(%"class.icu_69::PluralRules"* nocapture readnone, %"class.icu_69::UnicodeString"* nocapture readnone dereferenceable(64)) local_unnamed_addr #5 align 2 {
  ret double 0xBF543A270C991E7F
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6icu_6911PluralRules19getAllKeywordValuesERKNS_13UnicodeStringEPdiR10UErrorCode(%"class.icu_69::PluralRules"* nocapture readnone, %"class.icu_69::UnicodeString"* nocapture readnone dereferenceable(64), double* nocapture readnone, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #6 align 2 {
  store i32 16, i32* %4, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6911PluralRules10getSamplesERKNS_13UnicodeStringEPdiR10UErrorCode(%"class.icu_69::PluralRules"* nocapture readonly, %"class.icu_69::UnicodeString"* dereferenceable(64), double*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %76

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  br label %76

13:                                               ; preds = %8
  %14 = icmp eq double* %2, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = icmp slt i32 %3, 0
  br i1 %16, label %19, label %20

17:                                               ; preds = %13
  %18 = icmp eq i32 %3, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17, %15
  store i32 1, i32* %4, align 4
  br label %76

20:                                               ; preds = %17, %15
  %21 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %22 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %21, align 8
  %23 = icmp eq %"class.icu_69::RuleChain"* %22, null
  br i1 %23, label %76, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  br label %27

27:                                               ; preds = %65, %24
  %28 = phi %"class.icu_69::RuleChain"* [ %22, %24 ], [ %67, %65 ]
  %29 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 1
  %30 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 1, i32 1, i32 0, i32 0
  %31 = load i16, i16* %30, align 8
  %32 = and i16 %31, 1
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = load i16, i16* %25, align 8
  %36 = trunc i16 %35 to i8
  %37 = and i8 %36, 1
  br label %62

38:                                               ; preds = %27
  %39 = icmp slt i16 %31, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = lshr i16 %31, 5
  %42 = zext i16 %41 to i32
  br label %46

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 1, i32 1, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %43, %40
  %47 = phi i32 [ %42, %40 ], [ %45, %43 ]
  %48 = load i16, i16* %25, align 8
  %49 = icmp slt i16 %48, 0
  %50 = lshr i16 %48, 5
  %51 = zext i16 %50 to i32
  %52 = load i32, i32* %26, align 4
  %53 = select i1 %49, i32 %52, i32 %51
  %54 = and i16 %48, 1
  %55 = icmp eq i16 %54, 0
  %56 = icmp eq i32 %47, %53
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %65

58:                                               ; preds = %46
  %59 = tail call signext i8 @_ZNK6icu_6913UnicodeString8doEqualsERKS0_i(%"class.icu_69::UnicodeString"* %29, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32 %47) #15
  %60 = icmp ne i8 %59, 0
  %61 = zext i1 %60 to i8
  br label %62

62:                                               ; preds = %58, %34
  %63 = phi i8 [ %37, %34 ], [ %61, %58 ]
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %62, %46
  %66 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 2
  %67 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %66, align 8
  %68 = icmp eq %"class.icu_69::RuleChain"* %67, null
  br i1 %68, label %76, label %27

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 5
  %71 = tail call fastcc i32 @_ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64) %70, double* %2, %"class.icu_69::FixedDecimal"* null, i32 %3, i32* dereferenceable(4) %4)
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 4
  %75 = tail call fastcc i32 @_ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64) %74, double* %2, %"class.icu_69::FixedDecimal"* null, i32 %3, i32* dereferenceable(4) %4)
  br label %76

76:                                               ; preds = %65, %20, %73, %69, %5, %19, %12
  %77 = phi i32 [ 0, %12 ], [ 0, %19 ], [ 0, %5 ], [ %75, %73 ], [ %71, %69 ], [ 0, %20 ], [ 0, %65 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::RuleChain"* @_ZNK6icu_6911PluralRules15rulesForKeywordERKNS_13UnicodeStringE(%"class.icu_69::PluralRules"* nocapture readonly, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %3, align 8
  %5 = icmp eq %"class.icu_69::RuleChain"* %4, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  br label %9

9:                                                ; preds = %6, %47
  %10 = phi %"class.icu_69::RuleChain"* [ %4, %6 ], [ %49, %47 ]
  %11 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %10, i64 0, i32 1
  %12 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %10, i64 0, i32 1, i32 1, i32 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 1
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  %17 = load i16, i16* %7, align 8
  %18 = trunc i16 %17 to i8
  %19 = and i8 %18, 1
  br label %44

20:                                               ; preds = %9
  %21 = icmp slt i16 %13, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = lshr i16 %13, 5
  %24 = zext i16 %23 to i32
  br label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %10, i64 0, i32 1, i32 1, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %25, %22
  %29 = phi i32 [ %24, %22 ], [ %27, %25 ]
  %30 = load i16, i16* %7, align 8
  %31 = icmp slt i16 %30, 0
  %32 = lshr i16 %30, 5
  %33 = zext i16 %32 to i32
  %34 = load i32, i32* %8, align 4
  %35 = select i1 %31, i32 %34, i32 %33
  %36 = and i16 %30, 1
  %37 = icmp eq i16 %36, 0
  %38 = icmp eq i32 %29, %35
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47

40:                                               ; preds = %28
  %41 = tail call signext i8 @_ZNK6icu_6913UnicodeString8doEqualsERKS0_i(%"class.icu_69::UnicodeString"* %11, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32 %29) #15
  %42 = icmp ne i8 %41, 0
  %43 = zext i1 %42 to i8
  br label %44

44:                                               ; preds = %16, %40
  %45 = phi i8 [ %19, %16 ], [ %43, %40 ]
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %28, %44
  %48 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %10, i64 0, i32 2
  %49 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %48, align 8
  %50 = icmp eq %"class.icu_69::RuleChain"* %49, null
  br i1 %50, label %51, label %9

51:                                               ; preds = %47, %44, %2
  %52 = phi %"class.icu_69::RuleChain"* [ null, %2 ], [ %10, %44 ], [ null, %47 ]
  ret %"class.icu_69::RuleChain"* %52
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), double*, %"class.icu_69::FixedDecimal"*, i32, i32* dereferenceable(4)) unnamed_addr #0 {
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.icu_69::FixedDecimal", align 8
  %8 = alloca %"class.icu_69::FixedDecimal", align 8
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = alloca %"class.icu_69::FixedDecimal", align 8
  %11 = alloca %"class.icu_69::UnicodeString", align 8
  %12 = alloca %"class.icu_69::FixedDecimal", align 8
  %13 = icmp eq double* %1, null
  %14 = icmp eq %"class.icu_69::FixedDecimal"* %2, null
  %15 = and i1 %13, %14
  br i1 %15, label %49, label %16

16:                                               ; preds = %5
  %17 = icmp ne double* %1, null
  %18 = icmp ne %"class.icu_69::FixedDecimal"* %2, null
  %19 = and i1 %17, %18
  br i1 %19, label %49, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  %24 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 1
  %26 = bitcast %"class.icu_69::FixedDecimal"* %8 to i8*
  %27 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  %28 = bitcast %"class.icu_69::FixedDecimal"* %10 to i8*
  %29 = bitcast %"class.icu_69::UnicodeString"* %11 to i8*
  %30 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %8, i64 0, i32 2
  %31 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %10, i64 0, i32 2
  %32 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %8, i64 0, i32 3
  %33 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %8, i64 0, i32 7
  %34 = bitcast %"class.icu_69::FixedDecimal"* %12 to i8*
  %35 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %12, i64 0, i32 2
  %36 = bitcast double* %35 to i8*
  %37 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %12, i64 0, i32 1
  %38 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %12, i64 0, i32 0
  %39 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %10, i64 0, i32 1
  %40 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %10, i64 0, i32 0
  %41 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %8, i64 0, i32 1
  %42 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %8, i64 0, i32 0
  %43 = bitcast %"class.icu_69::FixedDecimal"* %7 to i8*
  %44 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %7, i64 0, i32 2
  %45 = bitcast double* %44 to i8*
  %46 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %7, i64 0, i32 3
  %47 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %7, i64 0, i32 1
  %48 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %7, i64 0, i32 0
  br label %50

49:                                               ; preds = %16, %5
  store i32 5, i32* %4, align 4
  br label %184

50:                                               ; preds = %20, %179
  %51 = phi i32 [ %180, %179 ], [ 0, %20 ]
  %52 = phi i32 [ %181, %179 ], [ 0, %20 ]
  %53 = icmp slt i32 %51, %3
  br i1 %53, label %54, label %184

54:                                               ; preds = %50
  %55 = load i16, i16* %21, align 8
  %56 = icmp slt i16 %55, 0
  %57 = lshr i16 %55, 5
  %58 = zext i16 %57 to i32
  %59 = load i32, i32* %22, align 4
  %60 = select i1 %56, i32 %59, i32 %58
  %61 = icmp slt i32 %52, %60
  br i1 %61, label %62, label %184

62:                                               ; preds = %54
  %63 = icmp sgt i32 %52, 0
  %64 = select i1 %63, i32 %52, i32 0
  %65 = select i1 %56, i32 %59, i32 %58
  %66 = sub nsw i32 %65, %64
  %67 = call i32 @_ZNK6icu_6913UnicodeString9doIndexOfEDsii(%"class.icu_69::UnicodeString"* %0, i16 zeroext 44, i32 %64, i32 %66) #15
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %77

69:                                               ; preds = %62
  %70 = load i16, i16* %21, align 8
  %71 = icmp slt i16 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = lshr i16 %70, 5
  %74 = zext i16 %73 to i32
  br label %77

75:                                               ; preds = %69
  %76 = load i32, i32* %22, align 4
  br label %77

77:                                               ; preds = %75, %72, %62
  %78 = phi i32 [ %67, %62 ], [ %74, %72 ], [ %76, %75 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #15
  %79 = sub nsw i32 %78, %52
  call void @_ZNK6icu_6913UnicodeString13tempSubStringEii(%"class.icu_69::UnicodeString"* nonnull sret %6, %"class.icu_69::UnicodeString"* %0, i32 %52, i32 %79) #15
  %80 = load i16, i16* %24, align 8
  %81 = icmp slt i16 %80, 0
  %82 = lshr i16 %80, 5
  %83 = zext i16 %82 to i32
  %84 = load i32, i32* %25, align 4
  %85 = select i1 %81, i32 %84, i32 %83
  %86 = call i32 @_ZNK6icu_6913UnicodeString9doIndexOfEDsii(%"class.icu_69::UnicodeString"* nonnull %6, i16 zeroext 126, i32 0, i32 %85) #15
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %88, label %107

88:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %43) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 bitcast ({ %"class.icu_69::IFixedDecimal", %"class.icu_69::UObject", double, i32, [4 x i8], i64, i64, i64, i32, i8, i8, i8, i8 }* @__const._ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode.newSample to i8*), i64 64, i1 false)
  call void @_ZN6icu_6912FixedDecimalC2ERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::FixedDecimal"* nonnull %7, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %6, i32* dereferenceable(4) %4)
  br i1 %17, label %89, label %100

89:                                               ; preds = %88
  %90 = load double, double* %44, align 8
  %91 = load i32, i32* %46, align 8
  %92 = icmp eq i32 %91, 0
  %93 = call double @llvm.floor.f64(double %90)
  %94 = fcmp une double %90, %93
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %105

96:                                               ; preds = %89
  %97 = add nsw i32 %51, 1
  %98 = sext i32 %51 to i64
  %99 = getelementptr inbounds double, double* %1, i64 %98
  store double %90, double* %99, align 8
  br label %105

100:                                              ; preds = %88
  %101 = add nsw i32 %51, 1
  %102 = sext i32 %51 to i64
  %103 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %2, i64 %102, i32 2
  %104 = bitcast double* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %45, i64 48, i1 false) #15
  br label %105

105:                                              ; preds = %96, %89, %100
  %106 = phi i32 [ %101, %100 ], [ %97, %96 ], [ %51, %89 ]
  call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %47) #15
  call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* nonnull %48) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %43) #15
  br label %176

107:                                              ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 bitcast ({ %"class.icu_69::IFixedDecimal", %"class.icu_69::UObject", double, i32, [4 x i8], i64, i64, i64, i32, i8, i8, i8, i8 }* @__const._ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode.newSample to i8*), i64 64, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27) #15
  call void @_ZNK6icu_6913UnicodeString13tempSubStringEii(%"class.icu_69::UnicodeString"* nonnull sret %9, %"class.icu_69::UnicodeString"* nonnull %6, i32 0, i32 %86) #15
  call void @_ZN6icu_6912FixedDecimalC2ERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::FixedDecimal"* nonnull %8, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9, i32* dereferenceable(4) %4)
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %28) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 bitcast ({ %"class.icu_69::IFixedDecimal", %"class.icu_69::UObject", double, i32, [4 x i8], i64, i64, i64, i32, i8, i8, i8, i8 }* @__const._ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode.newSample to i8*), i64 64, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %29) #15
  %108 = add nuw nsw i32 %86, 1
  %109 = sub nsw i32 2147483646, %86
  call void @_ZNK6icu_6913UnicodeString13tempSubStringEii(%"class.icu_69::UnicodeString"* nonnull sret %11, %"class.icu_69::UnicodeString"* nonnull %6, i32 %108, i32 %109) #15
  call void @_ZN6icu_6912FixedDecimalC2ERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::FixedDecimal"* nonnull %10, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %11, i32* dereferenceable(4) %4)
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %29) #15
  %110 = load double, double* %30, align 8
  %111 = load double, double* %31, align 8
  %112 = load i32, i32* %4, align 4
  %113 = icmp slt i32 %112, 1
  br i1 %113, label %114, label %172

114:                                              ; preds = %107
  %115 = fcmp olt double %111, %110
  br i1 %115, label %116, label %117

116:                                              ; preds = %114
  store i32 3, i32* %4, align 4
  br label %172

117:                                              ; preds = %114
  %118 = call double @llvm.floor.f64(double %110) #15
  %119 = fcmp une double %118, %110
  br i1 %119, label %120, label %127

120:                                              ; preds = %117, %120
  %121 = phi double [ %124, %120 ], [ 1.000000e+00, %117 ]
  %122 = phi double [ %123, %120 ], [ %110, %117 ]
  %123 = fmul double %122, 1.000000e+01
  %124 = fmul double %121, 1.000000e+01
  %125 = call double @llvm.floor.f64(double %123) #15
  %126 = fcmp une double %123, %125
  br i1 %126, label %120, label %127

127:                                              ; preds = %120, %117
  %128 = phi double [ 1.000000e+00, %117 ], [ %124, %120 ]
  %129 = call double @llvm.floor.f64(double %111) #15
  %130 = fcmp une double %129, %111
  br i1 %130, label %131, label %138

131:                                              ; preds = %127, %131
  %132 = phi double [ %135, %131 ], [ 1.000000e+00, %127 ]
  %133 = phi double [ %134, %131 ], [ %111, %127 ]
  %134 = fmul double %133, 1.000000e+01
  %135 = fmul double %132, 1.000000e+01
  %136 = call double @llvm.floor.f64(double %134) #15
  %137 = fcmp une double %134, %136
  br i1 %137, label %131, label %138

138:                                              ; preds = %131, %127
  %139 = phi double [ 1.000000e+00, %127 ], [ %135, %131 ]
  %140 = fcmp ogt double %139, %128
  %141 = select i1 %140, double %139, double %128
  %142 = fmul double %110, %141
  %143 = fmul double %111, %141
  %144 = fcmp ugt double %142, %143
  br i1 %144, label %172, label %145

145:                                              ; preds = %138, %169
  %146 = phi double [ %170, %169 ], [ %142, %138 ]
  %147 = phi i32 [ %167, %169 ], [ %51, %138 ]
  %148 = fdiv double %146, %141
  br i1 %17, label %149, label %159

149:                                              ; preds = %145
  %150 = call double @llvm.floor.f64(double %148)
  %151 = fcmp oeq double %148, %150
  %152 = load i32, i32* %32, align 8
  %153 = icmp sgt i32 %152, 0
  %154 = and i1 %151, %153
  br i1 %154, label %166, label %155

155:                                              ; preds = %149
  %156 = add nsw i32 %147, 1
  %157 = sext i32 %147 to i64
  %158 = getelementptr inbounds double, double* %1, i64 %157
  store double %148, double* %158, align 8
  br label %166

159:                                              ; preds = %145
  %160 = load i32, i32* %32, align 8
  %161 = load i32, i32* %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %34) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 bitcast ({ %"class.icu_69::IFixedDecimal", %"class.icu_69::UObject", double, i32, [4 x i8], i64, i64, i64, i32, i8, i8, i8, i8 }* @__const._ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode.newSample to i8*), i64 64, i1 false)
  call void @_ZN6icu_6912FixedDecimal18createWithExponentEdii(%"class.icu_69::FixedDecimal"* nonnull sret %12, double %148, i32 %160, i32 %161)
  %162 = add nsw i32 %147, 1
  %163 = sext i32 %147 to i64
  %164 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %2, i64 %163, i32 2
  %165 = bitcast double* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %36, i64 48, i1 false) #15
  call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %37) #15
  call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* nonnull %38) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %34) #15
  br label %166

166:                                              ; preds = %149, %155, %159
  %167 = phi i32 [ %156, %155 ], [ %162, %159 ], [ %147, %149 ]
  %168 = icmp slt i32 %167, %3
  br i1 %168, label %169, label %172

169:                                              ; preds = %166
  %170 = fadd double %146, 1.000000e+00
  %171 = fcmp ugt double %170, %143
  br i1 %171, label %172, label %145

172:                                              ; preds = %169, %166, %138, %107, %116
  %173 = phi i32 [ %51, %116 ], [ %51, %107 ], [ %51, %138 ], [ %167, %166 ], [ %167, %169 ]
  %174 = phi i32 [ 2, %116 ], [ 2, %107 ], [ 0, %138 ], [ 0, %166 ], [ 0, %169 ]
  call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %39) #15
  call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* nonnull %40) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %28) #15
  call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %41) #15
  call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* nonnull %42) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #15
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %172, %105
  %177 = phi i32 [ %106, %105 ], [ %173, %172 ]
  %178 = add nsw i32 %78, 1
  br label %179

179:                                              ; preds = %172, %176
  %180 = phi i32 [ %177, %176 ], [ %173, %172 ]
  %181 = phi i32 [ %178, %176 ], [ %52, %172 ]
  %182 = phi i32 [ 0, %176 ], [ %174, %172 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #15
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %50, label %184

184:                                              ; preds = %54, %179, %50, %49
  %185 = phi i32 [ 0, %49 ], [ %51, %50 ], [ %51, %54 ], [ %180, %179 ]
  ret i32 %185
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6911PluralRules10getSamplesERKNS_13UnicodeStringEPNS_12FixedDecimalEiR10UErrorCode(%"class.icu_69::PluralRules"* nocapture readonly, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::FixedDecimal"*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %76

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  br label %76

13:                                               ; preds = %8
  %14 = icmp eq %"class.icu_69::FixedDecimal"* %2, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = icmp slt i32 %3, 0
  br i1 %16, label %19, label %20

17:                                               ; preds = %13
  %18 = icmp eq i32 %3, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17, %15
  store i32 1, i32* %4, align 4
  br label %76

20:                                               ; preds = %17, %15
  %21 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %22 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %21, align 8
  %23 = icmp eq %"class.icu_69::RuleChain"* %22, null
  br i1 %23, label %76, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  br label %27

27:                                               ; preds = %65, %24
  %28 = phi %"class.icu_69::RuleChain"* [ %22, %24 ], [ %67, %65 ]
  %29 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 1
  %30 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 1, i32 1, i32 0, i32 0
  %31 = load i16, i16* %30, align 8
  %32 = and i16 %31, 1
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = load i16, i16* %25, align 8
  %36 = trunc i16 %35 to i8
  %37 = and i8 %36, 1
  br label %62

38:                                               ; preds = %27
  %39 = icmp slt i16 %31, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = lshr i16 %31, 5
  %42 = zext i16 %41 to i32
  br label %46

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 1, i32 1, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %43, %40
  %47 = phi i32 [ %42, %40 ], [ %45, %43 ]
  %48 = load i16, i16* %25, align 8
  %49 = icmp slt i16 %48, 0
  %50 = lshr i16 %48, 5
  %51 = zext i16 %50 to i32
  %52 = load i32, i32* %26, align 4
  %53 = select i1 %49, i32 %52, i32 %51
  %54 = and i16 %48, 1
  %55 = icmp eq i16 %54, 0
  %56 = icmp eq i32 %47, %53
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %65

58:                                               ; preds = %46
  %59 = tail call signext i8 @_ZNK6icu_6913UnicodeString8doEqualsERKS0_i(%"class.icu_69::UnicodeString"* %29, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32 %47) #15
  %60 = icmp ne i8 %59, 0
  %61 = zext i1 %60 to i8
  br label %62

62:                                               ; preds = %58, %34
  %63 = phi i8 [ %37, %34 ], [ %61, %58 ]
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %62, %46
  %66 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 2
  %67 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %66, align 8
  %68 = icmp eq %"class.icu_69::RuleChain"* %67, null
  br i1 %68, label %76, label %27

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 5
  %71 = tail call fastcc i32 @_ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64) %70, double* null, %"class.icu_69::FixedDecimal"* %2, i32 %3, i32* dereferenceable(4) %4)
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %28, i64 0, i32 4
  %75 = tail call fastcc i32 @_ZN6icu_69L20getSamplesFromStringERKNS_13UnicodeStringEPdPNS_12FixedDecimalEiR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64) %74, double* null, %"class.icu_69::FixedDecimal"* %2, i32 %3, i32* dereferenceable(4) %4)
  br label %76

76:                                               ; preds = %65, %20, %73, %69, %5, %19, %12
  %77 = phi i32 [ 0, %12 ], [ 0, %19 ], [ 0, %5 ], [ %75, %73 ], [ %71, %69 ], [ 0, %20 ], [ 0, %65 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6911PluralRules9isKeywordERKNS_13UnicodeStringE(%"class.icu_69::PluralRules"* nocapture readonly, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load i16, i16* %3, align 8
  %5 = icmp slt i16 %4, 0
  %6 = lshr i16 %4, 5
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %9, i32 %7
  %11 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %1, i32 0, i32 %10, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @_ZN6icu_69L20PLURAL_KEYWORD_OTHERE, i64 0, i64 0), i32 0, i32 5) #15
  %12 = icmp eq i8 %11, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([6 x i16], [6 x i16]* @_ZN6icu_69L20PLURAL_KEYWORD_OTHERE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %12, label %63, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %15 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %14, align 8
  %16 = icmp eq %"class.icu_69::RuleChain"* %15, null
  br i1 %16, label %59, label %17

17:                                               ; preds = %13, %55
  %18 = phi %"class.icu_69::RuleChain"* [ %57, %55 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %18, i64 0, i32 1
  %20 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %18, i64 0, i32 1, i32 1, i32 0, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = and i16 %21, 1
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = load i16, i16* %3, align 8
  %26 = trunc i16 %25 to i8
  %27 = and i8 %26, 1
  br label %52

28:                                               ; preds = %17
  %29 = icmp slt i16 %21, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %28
  %31 = lshr i16 %21, 5
  %32 = zext i16 %31 to i32
  br label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %18, i64 0, i32 1, i32 1, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  br label %36

36:                                               ; preds = %33, %30
  %37 = phi i32 [ %32, %30 ], [ %35, %33 ]
  %38 = load i16, i16* %3, align 8
  %39 = icmp slt i16 %38, 0
  %40 = lshr i16 %38, 5
  %41 = zext i16 %40 to i32
  %42 = load i32, i32* %8, align 4
  %43 = select i1 %39, i32 %42, i32 %41
  %44 = and i16 %38, 1
  %45 = icmp eq i16 %44, 0
  %46 = icmp eq i32 %37, %43
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %55

48:                                               ; preds = %36
  %49 = tail call signext i8 @_ZNK6icu_6913UnicodeString8doEqualsERKS0_i(%"class.icu_69::UnicodeString"* %19, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32 %37) #15
  %50 = icmp ne i8 %49, 0
  %51 = zext i1 %50 to i8
  br label %52

52:                                               ; preds = %48, %24
  %53 = phi i8 [ %27, %24 ], [ %51, %48 ]
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %52, %36
  %56 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %18, i64 0, i32 2
  %57 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %56, align 8
  %58 = icmp eq %"class.icu_69::RuleChain"* %57, null
  br i1 %58, label %59, label %17

59:                                               ; preds = %52, %55, %13
  %60 = phi %"class.icu_69::RuleChain"* [ null, %13 ], [ null, %55 ], [ %18, %52 ]
  %61 = icmp ne %"class.icu_69::RuleChain"* %60, null
  %62 = zext i1 %61 to i8
  br label %63

63:                                               ; preds = %2, %59
  %64 = phi i8 [ %62, %59 ], [ 1, %2 ]
  ret i8 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6911PluralRules15getKeywordOtherEv(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::PluralRules"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %4 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %3, i64 0, i32 0
  store i16* getelementptr inbounds ([6 x i16], [6 x i16]* @_ZN6icu_69L20PLURAL_KEYWORD_OTHERE, i64 0, i64 0), i16** %4, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* %0, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %3, i32 5) #15
  %5 = load i16*, i16** %4, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %5) #15, !srcloc !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6911PluralRuleseqERKS0_(%"class.icu_69::PluralRules"* readonly, %"class.icu_69::PluralRules"* readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #15
  store i32 0, i32* %3, align 4
  %5 = icmp eq %"class.icu_69::PluralRules"* %0, %1
  br i1 %5, label %133, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %3, align 4
  br label %133

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 160) #15
  %13 = icmp eq i8* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = bitcast i8* %12 to %"class.icu_69::PluralKeywordEnumeration"*
  %16 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %0, i64 0, i32 1
  %17 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %16, align 8
  call void @_ZN6icu_6924PluralKeywordEnumerationC2EPNS_9RuleChainER10UErrorCode(%"class.icu_69::PluralKeywordEnumeration"* nonnull %15, %"class.icu_69::RuleChain"* %17, i32* nonnull dereferenceable(4) %3) #15
  %18 = bitcast i8* %12 to %"class.icu_69::StringEnumeration"*
  %19 = load i32, i32* %3, align 4
  br label %20

20:                                               ; preds = %14, %11
  %21 = phi i32 [ %19, %14 ], [ 0, %11 ]
  %22 = phi %"class.icu_69::StringEnumeration"* [ %18, %14 ], [ null, %11 ]
  %23 = icmp ne %"class.icu_69::StringEnumeration"* %22, null
  %24 = icmp sgt i32 %21, 0
  %25 = or i1 %23, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  store i32 7, i32* %3, align 4
  br label %133

27:                                               ; preds = %20
  %28 = icmp slt i32 %21, 1
  br i1 %28, label %38, label %29

29:                                               ; preds = %27
  %30 = icmp eq %"class.icu_69::StringEnumeration"* %22, null
  br i1 %30, label %133, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.icu_69::StringEnumeration"* %22 to void (%"class.icu_69::StringEnumeration"*)***
  %33 = load void (%"class.icu_69::StringEnumeration"*)**, void (%"class.icu_69::StringEnumeration"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %33, i64 1
  %35 = load void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %34, align 8
  call void %35(%"class.icu_69::StringEnumeration"* nonnull %22) #15
  %36 = load i32, i32* %3, align 4
  %37 = icmp slt i32 %36, 1
  br i1 %37, label %38, label %133

38:                                               ; preds = %27, %31
  %39 = phi %"class.icu_69::StringEnumeration"* [ null, %31 ], [ %22, %27 ]
  %40 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %41, 1
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  store i32 %41, i32* %3, align 4
  br label %125

44:                                               ; preds = %38
  %45 = call i8* @_ZN6icu_697UMemorynwEm(i64 160) #15
  %46 = icmp eq i8* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = bitcast i8* %45 to %"class.icu_69::PluralKeywordEnumeration"*
  %49 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 1
  %50 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %49, align 8
  call void @_ZN6icu_6924PluralKeywordEnumerationC2EPNS_9RuleChainER10UErrorCode(%"class.icu_69::PluralKeywordEnumeration"* nonnull %48, %"class.icu_69::RuleChain"* %50, i32* nonnull dereferenceable(4) %3) #15
  %51 = bitcast i8* %45 to %"class.icu_69::StringEnumeration"*
  br label %52

52:                                               ; preds = %47, %44
  %53 = phi %"class.icu_69::StringEnumeration"* [ %51, %47 ], [ null, %44 ]
  %54 = icmp ne %"class.icu_69::StringEnumeration"* %53, null
  %55 = load i32, i32* %3, align 4
  %56 = icmp sgt i32 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  store i32 7, i32* %3, align 4
  br label %125

59:                                               ; preds = %52
  %60 = icmp slt i32 %55, 1
  br i1 %60, label %70, label %61

61:                                               ; preds = %59
  %62 = icmp eq %"class.icu_69::StringEnumeration"* %53, null
  br i1 %62, label %125, label %63

63:                                               ; preds = %61
  %64 = bitcast %"class.icu_69::StringEnumeration"* %53 to void (%"class.icu_69::StringEnumeration"*)***
  %65 = load void (%"class.icu_69::StringEnumeration"*)**, void (%"class.icu_69::StringEnumeration"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %65, i64 1
  %67 = load void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %66, align 8
  call void %67(%"class.icu_69::StringEnumeration"* nonnull %53) #15
  %68 = load i32, i32* %3, align 4
  %69 = icmp slt i32 %68, 1
  br i1 %69, label %70, label %125

70:                                               ; preds = %59, %63
  %71 = phi %"class.icu_69::StringEnumeration"* [ null, %63 ], [ %53, %59 ]
  %72 = bitcast %"class.icu_69::StringEnumeration"* %39 to i32 (%"class.icu_69::StringEnumeration"*, i32*)***
  %73 = load i32 (%"class.icu_69::StringEnumeration"*, i32*)**, i32 (%"class.icu_69::StringEnumeration"*, i32*)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.icu_69::StringEnumeration"*, i32*)*, i32 (%"class.icu_69::StringEnumeration"*, i32*)** %73, i64 4
  %75 = load i32 (%"class.icu_69::StringEnumeration"*, i32*)*, i32 (%"class.icu_69::StringEnumeration"*, i32*)** %74, align 8
  %76 = call i32 %75(%"class.icu_69::StringEnumeration"* %39, i32* nonnull dereferenceable(4) %3) #15
  %77 = bitcast %"class.icu_69::StringEnumeration"* %71 to i32 (%"class.icu_69::StringEnumeration"*, i32*)***
  %78 = load i32 (%"class.icu_69::StringEnumeration"*, i32*)**, i32 (%"class.icu_69::StringEnumeration"*, i32*)*** %77, align 8
  %79 = getelementptr inbounds i32 (%"class.icu_69::StringEnumeration"*, i32*)*, i32 (%"class.icu_69::StringEnumeration"*, i32*)** %78, i64 4
  %80 = load i32 (%"class.icu_69::StringEnumeration"*, i32*)*, i32 (%"class.icu_69::StringEnumeration"*, i32*)** %79, align 8
  %81 = call i32 %80(%"class.icu_69::StringEnumeration"* %71, i32* nonnull dereferenceable(4) %3) #15
  %82 = icmp eq i32 %76, %81
  br i1 %82, label %83, label %117

83:                                               ; preds = %70
  %84 = bitcast %"class.icu_69::StringEnumeration"* %39 to void (%"class.icu_69::StringEnumeration"*, i32*)***
  %85 = load void (%"class.icu_69::StringEnumeration"*, i32*)**, void (%"class.icu_69::StringEnumeration"*, i32*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.icu_69::StringEnumeration"*, i32*)*, void (%"class.icu_69::StringEnumeration"*, i32*)** %85, i64 8
  %87 = load void (%"class.icu_69::StringEnumeration"*, i32*)*, void (%"class.icu_69::StringEnumeration"*, i32*)** %86, align 8
  call void %87(%"class.icu_69::StringEnumeration"* %39, i32* nonnull dereferenceable(4) %3) #15
  %88 = bitcast %"class.icu_69::StringEnumeration"* %39 to %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)***
  br label %89

89:                                               ; preds = %95, %83
  %90 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)**, %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)*** %88, align 8
  %91 = getelementptr inbounds %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)** %90, i64 7
  %92 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)** %91, align 8
  %93 = call %"class.icu_69::UnicodeString"* %92(%"class.icu_69::StringEnumeration"* %39, i32* nonnull dereferenceable(4) %3) #15
  %94 = icmp eq %"class.icu_69::UnicodeString"* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = call signext i8 @_ZNK6icu_6911PluralRules9isKeywordERKNS_13UnicodeStringE(%"class.icu_69::PluralRules"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %93)
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %117, label %89

98:                                               ; preds = %89
  %99 = bitcast %"class.icu_69::StringEnumeration"* %71 to void (%"class.icu_69::StringEnumeration"*, i32*)***
  %100 = load void (%"class.icu_69::StringEnumeration"*, i32*)**, void (%"class.icu_69::StringEnumeration"*, i32*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.icu_69::StringEnumeration"*, i32*)*, void (%"class.icu_69::StringEnumeration"*, i32*)** %100, i64 8
  %102 = load void (%"class.icu_69::StringEnumeration"*, i32*)*, void (%"class.icu_69::StringEnumeration"*, i32*)** %101, align 8
  call void %102(%"class.icu_69::StringEnumeration"* %71, i32* nonnull dereferenceable(4) %3) #15
  %103 = bitcast %"class.icu_69::StringEnumeration"* %71 to %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)***
  br label %104

104:                                              ; preds = %110, %98
  %105 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)**, %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)*** %103, align 8
  %106 = getelementptr inbounds %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)** %105, i64 7
  %107 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::StringEnumeration"*, i32*)** %106, align 8
  %108 = call %"class.icu_69::UnicodeString"* %107(%"class.icu_69::StringEnumeration"* %71, i32* nonnull dereferenceable(4) %3) #15
  %109 = icmp eq %"class.icu_69::UnicodeString"* %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %104
  %111 = call signext i8 @_ZNK6icu_6911PluralRules9isKeywordERKNS_13UnicodeStringE(%"class.icu_69::PluralRules"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %108)
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %117, label %104

113:                                              ; preds = %104
  %114 = load i32, i32* %3, align 4
  %115 = icmp slt i32 %114, 1
  %116 = zext i1 %115 to i8
  br label %117

117:                                              ; preds = %95, %110, %113, %70
  %118 = phi i8 [ 0, %70 ], [ %116, %113 ], [ 0, %110 ], [ 0, %95 ]
  %119 = icmp eq %"class.icu_69::StringEnumeration"* %71, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.icu_69::StringEnumeration"* %71 to void (%"class.icu_69::StringEnumeration"*)***
  %122 = load void (%"class.icu_69::StringEnumeration"*)**, void (%"class.icu_69::StringEnumeration"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %122, i64 1
  %124 = load void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %123, align 8
  call void %124(%"class.icu_69::StringEnumeration"* nonnull %71) #15
  br label %125

125:                                              ; preds = %58, %61, %43, %63, %117, %120
  %126 = phi i8 [ %118, %117 ], [ %118, %120 ], [ 0, %63 ], [ 0, %43 ], [ 0, %61 ], [ 0, %58 ]
  %127 = icmp eq %"class.icu_69::StringEnumeration"* %39, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %125
  %129 = bitcast %"class.icu_69::StringEnumeration"* %39 to void (%"class.icu_69::StringEnumeration"*)***
  %130 = load void (%"class.icu_69::StringEnumeration"*)**, void (%"class.icu_69::StringEnumeration"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %130, i64 1
  %132 = load void (%"class.icu_69::StringEnumeration"*)*, void (%"class.icu_69::StringEnumeration"*)** %131, align 8
  call void %132(%"class.icu_69::StringEnumeration"* nonnull %39) #15
  br label %133

133:                                              ; preds = %29, %31, %10, %26, %128, %125, %2
  %134 = phi i8 [ 1, %2 ], [ %126, %125 ], [ %126, %128 ], [ 0, %26 ], [ 0, %10 ], [ 0, %31 ], [ 0, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #15
  ret i8 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916PluralRuleParser12getNextTokenER10UErrorCode(%"class.icu_69::PluralRuleParser"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = load i32, i32* %1, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %352

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %10 = load i32, i32* %7, align 8
  %11 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %8, align 8
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1
  %16 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %15 to %struct.anon*
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %16, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 3
  br label %19

19:                                               ; preds = %6, %71
  %20 = phi i32 [ %10, %6 ], [ %72, %71 ]
  %21 = load i16, i16* %12, align 8
  %22 = icmp slt i16 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = lshr i16 %21, 5
  %25 = zext i16 %24 to i32
  br label %28

26:                                               ; preds = %19
  %27 = load i32, i32* %13, align 4
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i32 [ %25, %23 ], [ %27, %26 ]
  %30 = icmp slt i32 %20, %29
  br i1 %30, label %31, label %73

31:                                               ; preds = %28
  br i1 %22, label %35, label %32

32:                                               ; preds = %31
  %33 = lshr i16 %21, 5
  %34 = zext i16 %33 to i32
  br label %37

35:                                               ; preds = %31
  %36 = load i32, i32* %14, align 4
  br label %37

37:                                               ; preds = %35, %32
  %38 = phi i32 [ %34, %32 ], [ %36, %35 ]
  %39 = icmp ugt i32 %38, %20
  br i1 %39, label %40, label %62

40:                                               ; preds = %37
  %41 = and i16 %21, 2
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load i16*, i16** %18, align 8
  br label %45

45:                                               ; preds = %40, %43
  %46 = phi i16* [ %44, %43 ], [ %17, %40 ]
  %47 = sext i32 %20 to i64
  %48 = getelementptr inbounds i16, i16* %46, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = add i16 %49, -48
  %51 = icmp ult i16 %50, 10
  br i1 %51, label %63, label %52

52:                                               ; preds = %45
  %53 = add i16 %49, -97
  %54 = icmp ult i16 %53, 26
  br i1 %54, label %63, label %55

55:                                               ; preds = %52
  switch i16 %49, label %62 [
    i16 58, label %63
    i16 32, label %71
    i16 59, label %65
    i16 46, label %66
    i16 44, label %67
    i16 33, label %56
    i16 61, label %57
    i16 37, label %58
    i16 64, label %59
    i16 8230, label %60
    i16 126, label %61
  ]

56:                                               ; preds = %55
  br label %67

57:                                               ; preds = %55
  br label %67

58:                                               ; preds = %55
  br label %67

59:                                               ; preds = %55
  br label %67

60:                                               ; preds = %55
  br label %67

61:                                               ; preds = %55
  br label %67

62:                                               ; preds = %37, %55
  br label %67

63:                                               ; preds = %55, %52, %45
  %64 = phi i32 [ 1, %45 ], [ 10, %52 ], [ 5, %55 ]
  br label %67

65:                                               ; preds = %55
  br label %67

66:                                               ; preds = %55
  br label %67

67:                                               ; preds = %55, %66, %65, %63, %62, %61, %60, %59, %58, %57, %56
  %68 = phi i32 [ 17, %56 ], [ 16, %57 ], [ 13, %58 ], [ 6, %59 ], [ 9, %60 ], [ 18, %61 ], [ 0, %62 ], [ %64, %63 ], [ 3, %65 ], [ 7, %66 ], [ 2, %55 ]
  %69 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 0
  store i32 %68, i32* %9, align 8
  %70 = load i16, i16* %69, align 8
  br label %75

71:                                               ; preds = %55
  store i32 4, i32* %9, align 8
  %72 = add nuw nsw i32 %20, 1
  store i32 %72, i32* %7, align 8
  br label %19

73:                                               ; preds = %28
  %74 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 0
  br label %75

75:                                               ; preds = %73, %67
  %76 = phi i16* [ %69, %67 ], [ %74, %73 ]
  %77 = phi i16 [ %70, %67 ], [ %21, %73 ]
  %78 = icmp slt i16 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = lshr i16 %77, 5
  %81 = zext i16 %80 to i32
  br label %85

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  br label %85

85:                                               ; preds = %79, %82
  %86 = phi i32 [ %81, %79 ], [ %84, %82 ]
  %87 = icmp slt i32 %20, %86
  br i1 %87, label %89, label %88

88:                                               ; preds = %85
  store i32 30, i32* %9, align 8
  br label %352

89:                                               ; preds = %85
  %90 = load i32, i32* %9, align 8
  switch i32 %90, label %340 [
    i32 5, label %105
    i32 3, label %105
    i32 2, label %105
    i32 9, label %105
    i32 18, label %105
    i32 6, label %105
    i32 16, label %105
    i32 13, label %105
    i32 17, label %107
    i32 10, label %98
    i32 1, label %91
    i32 7, label %265
  ]

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %93 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1
  %94 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %93 to %struct.anon*
  %95 = getelementptr inbounds %struct.anon, %struct.anon* %94, i64 0, i32 1, i64 0
  %96 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 3
  %97 = sext i32 %20 to i64
  br label %202

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %100 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1
  %101 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %100 to %struct.anon*
  %102 = getelementptr inbounds %struct.anon, %struct.anon* %101, i64 0, i32 1, i64 0
  %103 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 3
  %104 = sext i32 %20 to i64
  br label %137

105:                                              ; preds = %89, %89, %89, %89, %89, %89, %89, %89
  %106 = add nsw i32 %20, 1
  br label %344

107:                                              ; preds = %89
  %108 = add nsw i32 %20, 1
  br i1 %78, label %112, label %109

109:                                              ; preds = %107
  %110 = lshr i16 %77, 5
  %111 = zext i16 %110 to i32
  br label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  br label %115

115:                                              ; preds = %112, %109
  %116 = phi i32 [ %111, %109 ], [ %114, %112 ]
  %117 = icmp ugt i32 %116, %108
  br i1 %117, label %118, label %136

118:                                              ; preds = %115
  %119 = and i16 %77, 2
  %120 = icmp eq i16 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1
  %123 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %122 to %struct.anon*
  %124 = getelementptr inbounds %struct.anon, %struct.anon* %123, i64 0, i32 1, i64 0
  br label %128

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 3
  %127 = load i16*, i16** %126, align 8
  br label %128

128:                                              ; preds = %121, %125
  %129 = phi i16* [ %124, %121 ], [ %127, %125 ]
  %130 = sext i32 %108 to i64
  %131 = getelementptr inbounds i16, i16* %129, i64 %130
  %132 = load i16, i16* %131, align 2
  %133 = icmp eq i16 %132, 61
  br i1 %133, label %134, label %136

134:                                              ; preds = %128
  %135 = add nsw i32 %20, 2
  br label %344

136:                                              ; preds = %115, %128
  store i32 0, i32* %9, align 8
  br label %344

137:                                              ; preds = %196, %98
  %138 = phi i16 [ %77, %98 ], [ %197, %196 ]
  %139 = phi i64 [ %104, %98 ], [ %140, %196 ]
  %140 = add nsw i64 %139, 1
  %141 = icmp slt i16 %138, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %137
  %143 = lshr i16 %138, 5
  %144 = zext i16 %143 to i32
  br label %147

145:                                              ; preds = %137
  %146 = load i32, i32* %99, align 4
  br label %147

147:                                              ; preds = %142, %145
  %148 = phi i32 [ %144, %142 ], [ %146, %145 ]
  %149 = sext i32 %148 to i64
  %150 = icmp slt i64 %140, %149
  %151 = trunc i64 %140 to i32
  br i1 %150, label %152, label %198

152:                                              ; preds = %147
  br i1 %141, label %156, label %153

153:                                              ; preds = %152
  %154 = lshr i16 %138, 5
  %155 = zext i16 %154 to i32
  br label %158

156:                                              ; preds = %152
  %157 = load i32, i32* %99, align 4
  br label %158

158:                                              ; preds = %156, %153
  %159 = phi i32 [ %155, %153 ], [ %157, %156 ]
  %160 = icmp ugt i32 %159, %151
  br i1 %160, label %161, label %187

161:                                              ; preds = %158
  %162 = and i16 %138, 2
  %163 = icmp eq i16 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  %165 = load i16*, i16** %103, align 8
  br label %166

166:                                              ; preds = %161, %164
  %167 = phi i16* [ %165, %164 ], [ %102, %161 ]
  %168 = getelementptr inbounds i16, i16* %167, i64 %140
  %169 = load i16, i16* %168, align 2
  %170 = add i16 %169, -48
  %171 = icmp ult i16 %170, 10
  br i1 %171, label %191, label %172

172:                                              ; preds = %166
  %173 = add i16 %169, -97
  %174 = icmp ult i16 %173, 26
  br i1 %174, label %196, label %175

175:                                              ; preds = %172
  %176 = trunc i64 %140 to i32
  switch i16 %169, label %189 [
    i16 58, label %193
    i16 32, label %177
    i16 59, label %178
    i16 46, label %179
    i16 44, label %180
    i16 33, label %181
    i16 61, label %182
    i16 37, label %183
    i16 64, label %184
    i16 8230, label %185
    i16 126, label %186
  ]

177:                                              ; preds = %175
  br label %193

178:                                              ; preds = %175
  br label %193

179:                                              ; preds = %175
  br label %193

180:                                              ; preds = %175
  br label %193

181:                                              ; preds = %175
  br label %193

182:                                              ; preds = %175
  br label %193

183:                                              ; preds = %175
  br label %193

184:                                              ; preds = %175
  br label %193

185:                                              ; preds = %175
  br label %193

186:                                              ; preds = %175
  br label %193

187:                                              ; preds = %158
  %188 = trunc i64 %140 to i32
  br label %189

189:                                              ; preds = %187, %175
  %190 = phi i32 [ %188, %187 ], [ %176, %175 ]
  br label %193

191:                                              ; preds = %166
  %192 = trunc i64 %140 to i32
  br label %193

193:                                              ; preds = %191, %189, %186, %185, %184, %183, %182, %181, %180, %179, %178, %177, %175
  %194 = phi i32 [ %176, %175 ], [ %176, %177 ], [ %176, %178 ], [ %176, %179 ], [ %176, %180 ], [ %176, %181 ], [ %176, %182 ], [ %176, %183 ], [ %176, %184 ], [ %176, %185 ], [ %176, %186 ], [ %190, %189 ], [ %192, %191 ]
  %195 = phi i32 [ 5, %175 ], [ 4, %177 ], [ 3, %178 ], [ 7, %179 ], [ 2, %180 ], [ 17, %181 ], [ 16, %182 ], [ 13, %183 ], [ 6, %184 ], [ 9, %185 ], [ 18, %186 ], [ 0, %189 ], [ 1, %191 ]
  store i32 %195, i32* %9, align 8
  br label %200

196:                                              ; preds = %172
  store i32 10, i32* %9, align 8
  %197 = load i16, i16* %76, align 8
  br label %137

198:                                              ; preds = %147
  %199 = trunc i64 %140 to i32
  br label %200

200:                                              ; preds = %198, %193
  %201 = phi i32 [ %199, %198 ], [ %194, %193 ]
  store i32 10, i32* %9, align 8
  br label %344

202:                                              ; preds = %259, %91
  %203 = phi i16 [ %77, %91 ], [ %260, %259 ]
  %204 = phi i64 [ %97, %91 ], [ %205, %259 ]
  %205 = add nsw i64 %204, 1
  %206 = icmp slt i16 %203, 0
  br i1 %206, label %210, label %207

207:                                              ; preds = %202
  %208 = lshr i16 %203, 5
  %209 = zext i16 %208 to i32
  br label %212

210:                                              ; preds = %202
  %211 = load i32, i32* %92, align 4
  br label %212

212:                                              ; preds = %207, %210
  %213 = phi i32 [ %209, %207 ], [ %211, %210 ]
  %214 = sext i32 %213 to i64
  %215 = icmp slt i64 %205, %214
  %216 = trunc i64 %205 to i32
  br i1 %215, label %217, label %261

217:                                              ; preds = %212
  br i1 %206, label %221, label %218

218:                                              ; preds = %217
  %219 = lshr i16 %203, 5
  %220 = zext i16 %219 to i32
  br label %223

221:                                              ; preds = %217
  %222 = load i32, i32* %92, align 4
  br label %223

223:                                              ; preds = %221, %218
  %224 = phi i32 [ %220, %218 ], [ %222, %221 ]
  %225 = icmp ugt i32 %224, %216
  br i1 %225, label %226, label %252

226:                                              ; preds = %223
  %227 = and i16 %203, 2
  %228 = icmp eq i16 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %226
  %230 = load i16*, i16** %96, align 8
  br label %231

231:                                              ; preds = %226, %229
  %232 = phi i16* [ %230, %229 ], [ %95, %226 ]
  %233 = getelementptr inbounds i16, i16* %232, i64 %205
  %234 = load i16, i16* %233, align 2
  %235 = add i16 %234, -48
  %236 = icmp ult i16 %235, 10
  br i1 %236, label %259, label %237

237:                                              ; preds = %231
  %238 = trunc i64 %205 to i32
  %239 = add i16 %234, -97
  %240 = icmp ult i16 %239, 26
  br i1 %240, label %256, label %241

241:                                              ; preds = %237
  switch i16 %234, label %254 [
    i16 58, label %256
    i16 32, label %242
    i16 59, label %243
    i16 46, label %244
    i16 44, label %245
    i16 33, label %246
    i16 61, label %247
    i16 37, label %248
    i16 64, label %249
    i16 8230, label %250
    i16 126, label %251
  ]

242:                                              ; preds = %241
  br label %256

243:                                              ; preds = %241
  br label %256

244:                                              ; preds = %241
  br label %256

245:                                              ; preds = %241
  br label %256

246:                                              ; preds = %241
  br label %256

247:                                              ; preds = %241
  br label %256

248:                                              ; preds = %241
  br label %256

249:                                              ; preds = %241
  br label %256

250:                                              ; preds = %241
  br label %256

251:                                              ; preds = %241
  br label %256

252:                                              ; preds = %223
  %253 = trunc i64 %205 to i32
  br label %254

254:                                              ; preds = %252, %241
  %255 = phi i32 [ %253, %252 ], [ %238, %241 ]
  br label %256

256:                                              ; preds = %254, %251, %250, %249, %248, %247, %246, %245, %244, %243, %242, %237, %241
  %257 = phi i32 [ %238, %241 ], [ %238, %237 ], [ %238, %242 ], [ %238, %243 ], [ %238, %244 ], [ %238, %245 ], [ %238, %246 ], [ %238, %247 ], [ %238, %248 ], [ %238, %249 ], [ %238, %250 ], [ %238, %251 ], [ %255, %254 ]
  %258 = phi i32 [ 5, %241 ], [ 10, %237 ], [ 4, %242 ], [ 3, %243 ], [ 7, %244 ], [ 2, %245 ], [ 17, %246 ], [ 16, %247 ], [ 13, %248 ], [ 6, %249 ], [ 9, %250 ], [ 18, %251 ], [ 0, %254 ]
  store i32 %258, i32* %9, align 8
  br label %263

259:                                              ; preds = %231
  store i32 1, i32* %9, align 8
  %260 = load i16, i16* %76, align 8
  br label %202

261:                                              ; preds = %212
  %262 = trunc i64 %205 to i32
  br label %263

263:                                              ; preds = %261, %256
  %264 = phi i32 [ %262, %261 ], [ %257, %256 ]
  store i32 1, i32* %9, align 8
  br label %344

265:                                              ; preds = %89
  %266 = add nsw i32 %20, 1
  br i1 %78, label %270, label %267

267:                                              ; preds = %265
  %268 = lshr i16 %77, 5
  %269 = zext i16 %268 to i32
  br label %273

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %272 = load i32, i32* %271, align 4
  br label %273

273:                                              ; preds = %267, %270
  %274 = phi i32 [ %269, %267 ], [ %272, %270 ]
  %275 = icmp slt i32 %266, %274
  br i1 %275, label %276, label %344

276:                                              ; preds = %273
  br i1 %78, label %280, label %277

277:                                              ; preds = %276
  %278 = lshr i16 %77, 5
  %279 = zext i16 %278 to i32
  br label %283

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  br label %283

283:                                              ; preds = %280, %277
  %284 = phi i32 [ %279, %277 ], [ %282, %280 ]
  %285 = icmp ugt i32 %284, %266
  br i1 %285, label %286, label %344

286:                                              ; preds = %283
  %287 = and i16 %77, 2
  %288 = icmp eq i16 %287, 0
  br i1 %288, label %293, label %289

289:                                              ; preds = %286
  %290 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1
  %291 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %290 to %struct.anon*
  %292 = getelementptr inbounds %struct.anon, %struct.anon* %291, i64 0, i32 1, i64 0
  br label %296

293:                                              ; preds = %286
  %294 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 3
  %295 = load i16*, i16** %294, align 8
  br label %296

296:                                              ; preds = %289, %293
  %297 = phi i16* [ %292, %289 ], [ %295, %293 ]
  %298 = sext i32 %266 to i64
  %299 = getelementptr inbounds i16, i16* %297, i64 %298
  %300 = load i16, i16* %299, align 2
  %301 = icmp eq i16 %300, 46
  br i1 %301, label %302, label %344

302:                                              ; preds = %296
  %303 = add nsw i32 %20, 2
  br i1 %78, label %307, label %304

304:                                              ; preds = %302
  %305 = lshr i16 %77, 5
  %306 = zext i16 %305 to i32
  br label %310

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %309 = load i32, i32* %308, align 4
  br label %310

310:                                              ; preds = %304, %307
  %311 = phi i32 [ %306, %304 ], [ %309, %307 ]
  %312 = icmp slt i32 %303, %311
  br i1 %312, label %313, label %337

313:                                              ; preds = %310
  br i1 %78, label %317, label %314

314:                                              ; preds = %313
  %315 = lshr i16 %77, 5
  %316 = zext i16 %315 to i32
  br label %320

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 1
  %319 = load i32, i32* %318, align 4
  br label %320

320:                                              ; preds = %317, %314
  %321 = phi i32 [ %316, %314 ], [ %319, %317 ]
  %322 = icmp ugt i32 %321, %303
  br i1 %322, label %323, label %337

323:                                              ; preds = %320
  br i1 %288, label %328, label %324

324:                                              ; preds = %323
  %325 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1
  %326 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %325 to %struct.anon*
  %327 = getelementptr inbounds %struct.anon, %struct.anon* %326, i64 0, i32 1, i64 0
  br label %331

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %11, i64 0, i32 1, i32 0, i32 3
  %330 = load i16*, i16** %329, align 8
  br label %331

331:                                              ; preds = %324, %328
  %332 = phi i16* [ %327, %324 ], [ %330, %328 ]
  %333 = sext i32 %303 to i64
  %334 = getelementptr inbounds i16, i16* %332, i64 %333
  %335 = load i16, i16* %334, align 2
  %336 = icmp eq i16 %335, 46
  br i1 %336, label %338, label %337

337:                                              ; preds = %320, %331, %310
  store i32 8, i32* %9, align 8
  br label %344

338:                                              ; preds = %331
  store i32 9, i32* %9, align 8
  %339 = add nsw i32 %20, 3
  br label %344

340:                                              ; preds = %89
  store i32 65792, i32* %1, align 4
  %341 = add nsw i32 %20, 1
  %342 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %8, align 8
  %343 = load i32, i32* %7, align 8
  br label %344

344:                                              ; preds = %283, %273, %296, %134, %136, %340, %338, %337, %263, %200, %105
  %345 = phi i32 [ %343, %340 ], [ %20, %337 ], [ %20, %338 ], [ %20, %263 ], [ %20, %200 ], [ %20, %134 ], [ %20, %136 ], [ %20, %105 ], [ %20, %296 ], [ %20, %273 ], [ %20, %283 ]
  %346 = phi %"class.icu_69::UnicodeString"* [ %342, %340 ], [ %11, %337 ], [ %11, %338 ], [ %11, %263 ], [ %11, %200 ], [ %11, %134 ], [ %11, %136 ], [ %11, %105 ], [ %11, %296 ], [ %11, %273 ], [ %11, %283 ]
  %347 = phi i32 [ %341, %340 ], [ %303, %337 ], [ %339, %338 ], [ %264, %263 ], [ %201, %200 ], [ %135, %134 ], [ %108, %136 ], [ %106, %105 ], [ %266, %296 ], [ %266, %273 ], [ %266, %283 ]
  %348 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %348) #15
  %349 = sub nsw i32 %347, %345
  call void @_ZN6icu_6913UnicodeStringC1ERKS0_ii(%"class.icu_69::UnicodeString"* nonnull %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %346, i32 %345, i32 %349) #15
  %350 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 3
  %351 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSEOS0_(%"class.icu_69::UnicodeString"* %350, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %348) #15
  store i32 %347, i32* %7, align 8
  br label %352

352:                                              ; preds = %88, %344, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916PluralRuleParser11checkSyntaxER10UErrorCode(%"class.icu_69::PluralRuleParser"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %68

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %8 [
    i32 0, label %14
    i32 3, label %14
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = tail call i32 @_ZN6icu_6916PluralRuleParser10getKeyTypeERKNS_13UnicodeStringENS_9tokenTypeE(%"class.icu_69::UnicodeString"* dereferenceable(64) %9, i32 %11)
  store i32 %12, i32* %10, align 8
  %13 = load i32, i32* %6, align 4
  br label %14

14:                                               ; preds = %5, %5, %8
  %15 = phi i32 [ %7, %5 ], [ %7, %5 ], [ %13, %8 ]
  switch i32 %15, label %67 [
    i32 0, label %16
    i32 3, label %16
    i32 21, label %20
    i32 22, label %20
    i32 23, label %20
    i32 25, label %20
    i32 26, label %20
    i32 27, label %20
    i32 24, label %20
    i32 10, label %24
    i32 5, label %29
    i32 20, label %33
    i32 14, label %37
    i32 13, label %41
    i32 8, label %41
    i32 15, label %41
    i32 19, label %41
    i32 16, label %41
    i32 17, label %41
    i32 11, label %46
    i32 12, label %46
    i32 2, label %52
    i32 1, label %57
    i32 6, label %61
  ]

16:                                               ; preds = %14, %14
  %17 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %19 [
    i32 10, label %68
    i32 30, label %68
  ]

19:                                               ; preds = %16
  store i32 65792, i32* %1, align 4
  br label %68

20:                                               ; preds = %14, %14, %14, %14, %14, %14, %14
  %21 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %23 [
    i32 20, label %68
    i32 13, label %68
    i32 15, label %68
    i32 14, label %68
    i32 19, label %68
    i32 16, label %68
    i32 17, label %68
  ]

23:                                               ; preds = %20
  store i32 65792, i32* %1, align 4
  br label %68

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 5
  br i1 %27, label %68, label %28

28:                                               ; preds = %24
  store i32 65792, i32* %1, align 4
  br label %68

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  switch i32 %31, label %32 [
    i32 21, label %68
    i32 22, label %68
    i32 23, label %68
    i32 25, label %68
    i32 26, label %68
    i32 27, label %68
    i32 24, label %68
    i32 6, label %68
  ]

32:                                               ; preds = %29
  store i32 65792, i32* %1, align 4
  br label %68

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  switch i32 %35, label %36 [
    i32 1, label %68
    i32 14, label %68
  ]

36:                                               ; preds = %33
  store i32 65792, i32* %1, align 4
  br label %68

37:                                               ; preds = %14
  %38 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  switch i32 %39, label %40 [
    i32 1, label %68
    i32 15, label %68
    i32 19, label %68
  ]

40:                                               ; preds = %37
  store i32 65792, i32* %1, align 4
  br label %68

41:                                               ; preds = %14, %14, %14, %14, %14, %14
  %42 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %68, label %45

45:                                               ; preds = %41
  store i32 65792, i32* %1, align 4
  br label %68

46:                                               ; preds = %14, %14
  %47 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -21
  %50 = icmp ult i32 %49, 7
  br i1 %50, label %68, label %51

51:                                               ; preds = %46
  store i32 65792, i32* %1, align 4
  br label %68

52:                                               ; preds = %14
  %53 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %68, label %56

56:                                               ; preds = %52
  store i32 65792, i32* %1, align 4
  br label %68

57:                                               ; preds = %14
  %58 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %59 = load i32, i32* %58, align 8
  switch i32 %59, label %60 [
    i32 8, label %68
    i32 3, label %68
    i32 20, label %68
    i32 14, label %68
    i32 15, label %68
    i32 16, label %68
    i32 17, label %68
    i32 19, label %68
    i32 11, label %68
    i32 12, label %68
    i32 2, label %68
    i32 6, label %68
    i32 30, label %68
  ]

60:                                               ; preds = %57
  store i32 65792, i32* %1, align 4
  br label %68

61:                                               ; preds = %14
  %62 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, -2
  %65 = icmp eq i32 %64, 28
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  store i32 65792, i32* %1, align 4
  br label %68

67:                                               ; preds = %14
  store i32 65792, i32* %1, align 4
  br label %68

68:                                               ; preds = %61, %46, %57, %57, %57, %57, %57, %57, %57, %57, %57, %57, %57, %57, %57, %37, %37, %37, %33, %33, %29, %29, %29, %29, %29, %29, %29, %29, %20, %20, %20, %20, %20, %20, %20, %16, %16, %24, %41, %52, %2, %66, %60, %56, %51, %45, %40, %36, %32, %28, %23, %19, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::AndConstraint"* @_ZN6icu_6913AndConstraint3addER10UErrorCode(%"class.icu_69::AndConstraint"* nocapture, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 8
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %4, i32* %1, align 4
  br label %29

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 56) #15
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 10
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %11, align 8
  store i32 7, i32* %1, align 4
  %12 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %11, align 8
  br label %29

13:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 56, i1 false)
  %14 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6913AndConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 -1, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %8, i64 16
  %20 = bitcast i8* %19 to i32*
  store i32 -1, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %8, i64 24
  %22 = bitcast i8* %21 to %"class.icu_69::UVector32"**
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %22, align 8
  %23 = getelementptr inbounds i8, i8* %8, i64 32
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 33
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds i8, i8* %8, i64 36
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 16, i1 false) #15
  %26 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 10
  %27 = bitcast %"class.icu_69::AndConstraint"** %26 to i8**
  store i8* %8, i8** %27, align 8
  %28 = bitcast i8* %8 to %"class.icu_69::AndConstraint"*
  br label %29

29:                                               ; preds = %10, %13, %6
  %30 = phi %"class.icu_69::AndConstraint"* [ null, %6 ], [ %12, %10 ], [ %28, %13 ]
  ret %"class.icu_69::AndConstraint"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::AndConstraint"* @_ZN6icu_6912OrConstraint3addER10UErrorCode(%"class.icu_69::OrConstraint"* nocapture, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %4, i32* %1, align 4
  br label %34

7:                                                ; preds = %2, %7
  %8 = phi %"class.icu_69::OrConstraint"* [ %10, %7 ], [ %0, %2 ]
  %9 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %8, i64 0, i32 2
  %10 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %9, align 8
  %11 = icmp eq %"class.icu_69::OrConstraint"* %10, null
  br i1 %11, label %12, label %7

12:                                               ; preds = %7
  %13 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 56) #15
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %8, i64 0, i32 1
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %16, align 8
  store i32 7, i32* %1, align 4
  %17 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %16, align 8
  br label %34

18:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 56, i1 false)
  %19 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6913AndConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %13, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 -1, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %13, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 -1, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %13, i64 24
  %27 = bitcast i8* %26 to %"class.icu_69::UVector32"**
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %27, align 8
  %28 = getelementptr inbounds i8, i8* %13, i64 32
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds i8, i8* %13, i64 33
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %13, i64 36
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 16, i1 false) #15
  %31 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %8, i64 0, i32 1
  %32 = bitcast %"class.icu_69::AndConstraint"** %31 to i8**
  store i8* %13, i8** %32, align 8
  %33 = bitcast i8* %13 to %"class.icu_69::AndConstraint"*
  br label %34

34:                                               ; preds = %15, %18, %6
  %35 = phi %"class.icu_69::AndConstraint"* [ null, %6 ], [ %17, %15 ], [ %33, %18 ]
  ret %"class.icu_69::AndConstraint"* %35
}

declare void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"*, i32* dereferenceable(4)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6916PluralRuleParser14getNumberValueERKNS_13UnicodeStringE(%"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = alloca [128 x i8], align 16
  %3 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %3) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 128, i1 false)
  %4 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp slt i16 %5, 0
  %7 = lshr i16 %5, 5
  %8 = zext i16 %7 to i32
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = select i1 %6, i32 %10, i32 %8
  %12 = call i32 @_ZNK6icu_6913UnicodeString7extractEiiPciNS0_10EInvariantE(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %11, i8* nonnull %3, i32 128, i32 0) #15
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 %13
  store i8 0, i8* %14, align 1
  %15 = call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #15
  %16 = trunc i64 %15 to i32
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3) #15
  ret i32 %16
}

declare void @_ZN6icu_699UVector3212setElementAtEii(%"class.icu_69::UVector32"*, i32, i32) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSERKS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringC1EOS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #7

declare %struct.UResourceBundle* @ures_openDirect_69(i8*, i8*, i32*) local_unnamed_addr #4

declare %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle*, i8*, %struct.UResourceBundle*, i32*) local_unnamed_addr #4

declare i8* @_ZNK6icu_696Locale11getBaseNameEv(%"class.icu_69::Locale"*) local_unnamed_addr #4

declare i16* @ures_getStringByKey_69(%struct.UResourceBundle*, i8*, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #8

declare i32 @uloc_getParent_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare void @u_UCharsToChars_69(i16*, i8*, i32) local_unnamed_addr #4

declare i32 @ures_getSize_69(%struct.UResourceBundle*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6911PluralRules8getRulesEv(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::PluralRules"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 64, i1 false)
  %4 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::PluralRules", %"class.icu_69::PluralRules"* %1, i64 0, i32 1
  %7 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %6, align 8
  %8 = icmp eq %"class.icu_69::RuleChain"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN6icu_699RuleChain9dumpRulesERNS_13UnicodeStringE(%"class.icu_69::RuleChain"* nonnull %7, %"class.icu_69::UnicodeString"* dereferenceable(64) %0)
  br label %10

10:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699RuleChain9dumpRulesERNS_13UnicodeStringE(%"class.icu_69::RuleChain"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca [16 x i16], align 16
  %7 = alloca %"class.icu_69::UnicodeString", align 8
  %8 = alloca %"class.icu_69::UnicodeString", align 8
  %9 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %10 = alloca %"class.icu_69::UnicodeString", align 8
  %11 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %12 = alloca %"class.icu_69::UnicodeString", align 8
  %13 = alloca %"class.icu_69::UnicodeString", align 8
  %14 = alloca %"class.icu_69::UnicodeString", align 8
  %15 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %16 = alloca %"class.icu_69::UnicodeString", align 8
  %17 = alloca %"class.icu_69::UnicodeString", align 8
  %18 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %19 = alloca %"class.icu_69::UnicodeString", align 8
  %20 = alloca %"class.icu_69::UnicodeString", align 8
  %21 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %22 = alloca %"class.icu_69::UnicodeString", align 8
  %23 = alloca %"class.icu_69::UnicodeString", align 8
  %24 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %25 = alloca %"class.icu_69::UnicodeString", align 8
  %26 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %27 = alloca %"class.icu_69::UnicodeString", align 8
  %28 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %29 = alloca %"class.icu_69::UnicodeString", align 8
  %30 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %31 = alloca %"class.icu_69::UnicodeString", align 8
  %32 = alloca %"class.icu_69::UnicodeString", align 8
  %33 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %34 = alloca %"class.icu_69::UnicodeString", align 8
  %35 = alloca %"class.icu_69::UnicodeString", align 8
  %36 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %37 = alloca %"class.icu_69::UnicodeString", align 8
  %38 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %39 = alloca %"class.icu_69::UnicodeString", align 8
  %40 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %41 = alloca %"class.icu_69::UnicodeString", align 8
  %42 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %43 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #15
  %44 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 0
  %45 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 3
  %46 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 -86, i64 32, i1 false)
  %47 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %45, align 8
  %48 = icmp eq %"class.icu_69::OrConstraint"* %47, null
  br i1 %48, label %423, label %49

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 1
  %51 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %52 = load i16, i16* %51, align 8
  %53 = icmp slt i16 %52, 0
  %54 = lshr i16 %52, 5
  %55 = zext i16 %54 to i32
  %56 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = select i1 %53, i32 %57, i32 %55
  %59 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %50, i32 0, i32 %58) #15
  %60 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %60)
  store i16 58, i16* %5, align 2
  %61 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %1, i16* nonnull %5, i32 0, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %60)
  %62 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %62)
  store i16 32, i16* %4, align 2
  %63 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %1, i16* nonnull %4, i32 0, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %62)
  %64 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %45, align 8
  %65 = icmp eq %"class.icu_69::OrConstraint"* %64, null
  br i1 %65, label %423, label %66

66:                                               ; preds = %49
  %67 = bitcast %"class.icu_69::UnicodeString"* %13 to i8*
  %68 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %13, i64 0, i32 1, i32 0, i32 0
  %69 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %13, i64 0, i32 1, i32 0, i32 1
  %70 = bitcast i16* %3 to i8*
  %71 = bitcast %"class.icu_69::UnicodeString"* %14 to i8*
  %72 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %15, i64 0, i32 0
  %73 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %14, i64 0, i32 1, i32 0, i32 0
  %74 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %14, i64 0, i32 1, i32 0, i32 1
  %75 = bitcast %"class.icu_69::UnicodeString"* %16 to i8*
  %76 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 1, i32 0, i32 0
  %77 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 1, i32 0, i32 1
  %78 = bitcast %"class.icu_69::UnicodeString"* %29 to i8*
  %79 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %30, i64 0, i32 0
  %80 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %29, i64 0, i32 1, i32 0, i32 0
  %81 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %29, i64 0, i32 1, i32 0, i32 1
  %82 = bitcast %"class.icu_69::UnicodeString"* %27 to i8*
  %83 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %28, i64 0, i32 0
  %84 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %27, i64 0, i32 1, i32 0, i32 0
  %85 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %27, i64 0, i32 1, i32 0, i32 1
  %86 = bitcast %"class.icu_69::UnicodeString"* %25 to i8*
  %87 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %26, i64 0, i32 0
  %88 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 0
  %89 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 1
  %90 = bitcast %"class.icu_69::UnicodeString"* %23 to i8*
  %91 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %24, i64 0, i32 0
  %92 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %23, i64 0, i32 1, i32 0, i32 0
  %93 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %23, i64 0, i32 1, i32 0, i32 1
  %94 = bitcast %"class.icu_69::UnicodeString"* %31 to i8*
  %95 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %31, i64 0, i32 1, i32 0, i32 0
  %96 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %31, i64 0, i32 1, i32 0, i32 1
  %97 = bitcast %"class.icu_69::UnicodeString"* %32 to i8*
  %98 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %33, i64 0, i32 0
  %99 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %32, i64 0, i32 1, i32 0, i32 0
  %100 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %32, i64 0, i32 1, i32 0, i32 1
  %101 = bitcast %"class.icu_69::UnicodeString"* %34 to i8*
  %102 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %34, i64 0, i32 1, i32 0, i32 0
  %103 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %34, i64 0, i32 1, i32 0, i32 1
  %104 = bitcast %"class.icu_69::UnicodeString"* %35 to i8*
  %105 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %36, i64 0, i32 0
  %106 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %35, i64 0, i32 1, i32 0, i32 0
  %107 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %35, i64 0, i32 1, i32 0, i32 1
  %108 = bitcast %"class.icu_69::UnicodeString"* %20 to i8*
  %109 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %21, i64 0, i32 0
  %110 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %20, i64 0, i32 1, i32 0, i32 0
  %111 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %20, i64 0, i32 1, i32 0, i32 1
  %112 = bitcast %"class.icu_69::UnicodeString"* %22 to i8*
  %113 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %22, i64 0, i32 1, i32 0, i32 0
  %114 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %22, i64 0, i32 1, i32 0, i32 1
  %115 = bitcast %"class.icu_69::UnicodeString"* %17 to i8*
  %116 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %18, i64 0, i32 0
  %117 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %17, i64 0, i32 1, i32 0, i32 0
  %118 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %17, i64 0, i32 1, i32 0, i32 1
  %119 = bitcast %"class.icu_69::UnicodeString"* %19 to i8*
  %120 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %19, i64 0, i32 1, i32 0, i32 0
  %121 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %19, i64 0, i32 1, i32 0, i32 1
  %122 = bitcast %"class.icu_69::UnicodeString"* %7 to i8*
  %123 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %7, i64 0, i32 1, i32 0, i32 0
  %124 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %7, i64 0, i32 1, i32 0, i32 1
  %125 = bitcast %"class.icu_69::UnicodeString"* %8 to i8*
  %126 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %9, i64 0, i32 0
  %127 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %8, i64 0, i32 1, i32 0, i32 0
  %128 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %8, i64 0, i32 1, i32 0, i32 1
  %129 = bitcast %"class.icu_69::UnicodeString"* %10 to i8*
  %130 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %11, i64 0, i32 0
  %131 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 0
  %132 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 1
  %133 = bitcast %"class.icu_69::UnicodeString"* %12 to i8*
  %134 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1, i32 0, i32 0
  %135 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1, i32 0, i32 1
  %136 = bitcast %"class.icu_69::UnicodeString"* %37 to i8*
  %137 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %38, i64 0, i32 0
  %138 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %37, i64 0, i32 1, i32 0, i32 0
  %139 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %37, i64 0, i32 1, i32 0, i32 1
  %140 = bitcast %"class.icu_69::UnicodeString"* %39 to i8*
  %141 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %40, i64 0, i32 0
  %142 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %39, i64 0, i32 1, i32 0, i32 0
  %143 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %39, i64 0, i32 1, i32 0, i32 1
  br label %144

144:                                              ; preds = %414, %66
  %145 = phi %"class.icu_69::OrConstraint"* [ %64, %66 ], [ %412, %414 ]
  %146 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %145, i64 0, i32 1
  %147 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %146, align 8
  %148 = icmp eq %"class.icu_69::AndConstraint"* %147, null
  br i1 %148, label %410, label %149

149:                                              ; preds = %144, %401
  %150 = phi %"class.icu_69::AndConstraint"* [ %399, %401 ], [ %147, %144 ]
  %151 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %203

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 5
  %156 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %155, align 8
  %157 = icmp eq %"class.icu_69::UVector32"* %156, null
  br i1 %157, label %158, label %203

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 3
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %160, -1
  br i1 %161, label %397, label %162

162:                                              ; preds = %158
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %122) #15
  %163 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 9
  %164 = load i32, i32* %163, align 4
  call fastcc void @_ZN6icu_69L11tokenStringENS_9tokenTypeE(%"class.icu_69::UnicodeString"* nonnull sret %7, i32 %164)
  %165 = load i16, i16* %123, align 8
  %166 = icmp slt i16 %165, 0
  %167 = lshr i16 %165, 5
  %168 = zext i16 %167 to i32
  %169 = load i32, i32* %124, align 4
  %170 = select i1 %166, i32 %169, i32 %168
  %171 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7, i32 0, i32 %170) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %122) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %125) #15
  store i16* getelementptr inbounds ([5 x i16], [5 x i16]* @.str.4, i64 0, i64 0), i16** %126, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %8, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %9, i32 -1) #15
  %172 = load i16, i16* %127, align 8
  %173 = icmp slt i16 %172, 0
  %174 = lshr i16 %172, 5
  %175 = zext i16 %174 to i32
  %176 = load i32, i32* %128, align 4
  %177 = select i1 %173, i32 %176, i32 %175
  %178 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %8, i32 0, i32 %177) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %8) #15
  %179 = load i16*, i16** %126, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %179) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %125) #15
  %180 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 6
  %181 = load i8, i8* %180, align 8
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %192, label %183

183:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %129) #15
  store i16* getelementptr inbounds ([5 x i16], [5 x i16]* @.str.5, i64 0, i64 0), i16** %130, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %10, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %11, i32 -1) #15
  %184 = load i16, i16* %131, align 8
  %185 = icmp slt i16 %184, 0
  %186 = lshr i16 %184, 5
  %187 = zext i16 %186 to i32
  %188 = load i32, i32* %132, align 4
  %189 = select i1 %185, i32 %188, i32 %187
  %190 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10, i32 0, i32 %189) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %10) #15
  %191 = load i16*, i16** %130, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %191) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %129) #15
  br label %192

192:                                              ; preds = %162, %183
  %193 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 3
  %194 = load i32, i32* %193, align 8
  %195 = call i32 @uprv_itou_69(i16* nonnull %44, i32 16, i32 %194, i32 10, i32 0) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %133) #15
  call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %12, i16* nonnull %44) #15
  %196 = load i16, i16* %134, align 8
  %197 = icmp slt i16 %196, 0
  %198 = lshr i16 %196, 5
  %199 = zext i16 %198 to i32
  %200 = load i32, i32* %135, align 4
  %201 = select i1 %197, i32 %200, i32 %199
  %202 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %12, i32 0, i32 %201) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %133) #15
  br label %397

203:                                              ; preds = %154, %149
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %67) #15
  %204 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 9
  %205 = load i32, i32* %204, align 4
  call fastcc void @_ZN6icu_69L11tokenStringENS_9tokenTypeE(%"class.icu_69::UnicodeString"* nonnull sret %13, i32 %205)
  %206 = load i16, i16* %68, align 8
  %207 = icmp slt i16 %206, 0
  %208 = lshr i16 %206, 5
  %209 = zext i16 %208 to i32
  %210 = load i32, i32* %69, align 4
  %211 = select i1 %207, i32 %210, i32 %209
  %212 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %13, i32 0, i32 %211) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %67) #15
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %70)
  store i16 32, i16* %3, align 2
  %213 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %1, i16* nonnull %3, i32 0, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %70)
  %214 = load i32, i32* %151, align 8
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %235

216:                                              ; preds = %203
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %71) #15
  store i16* getelementptr inbounds ([5 x i16], [5 x i16]* @.str.6, i64 0, i64 0), i16** %72, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %14, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %15, i32 -1) #15
  %217 = load i16, i16* %73, align 8
  %218 = icmp slt i16 %217, 0
  %219 = lshr i16 %217, 5
  %220 = zext i16 %219 to i32
  %221 = load i32, i32* %74, align 4
  %222 = select i1 %218, i32 %221, i32 %220
  %223 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %14, i32 0, i32 %222) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %14) #15
  %224 = load i16*, i16** %72, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %224) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %71) #15
  %225 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = call i32 @uprv_itou_69(i16* nonnull %44, i32 16, i32 %226, i32 10, i32 0) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %75) #15
  call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %16, i16* nonnull %44) #15
  %228 = load i16, i16* %76, align 8
  %229 = icmp slt i16 %228, 0
  %230 = lshr i16 %228, 5
  %231 = zext i16 %230 to i32
  %232 = load i32, i32* %77, align 4
  %233 = select i1 %229, i32 %232, i32 %231
  %234 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %16, i32 0, i32 %233) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %75) #15
  br label %235

235:                                              ; preds = %216, %203
  %236 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 5
  %237 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %236, align 8
  %238 = icmp eq %"class.icu_69::UVector32"* %237, null
  %239 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 6
  %240 = load i8, i8* %239, align 8
  %241 = icmp ne i8 %240, 0
  br i1 %238, label %242, label %281

242:                                              ; preds = %235
  br i1 %241, label %243, label %262

243:                                              ; preds = %242
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %115) #15
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @.str.7, i64 0, i64 0), i16** %116, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %17, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %18, i32 -1) #15
  %244 = load i16, i16* %117, align 8
  %245 = icmp slt i16 %244, 0
  %246 = lshr i16 %244, 5
  %247 = zext i16 %246 to i32
  %248 = load i32, i32* %118, align 4
  %249 = select i1 %245, i32 %248, i32 %247
  %250 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %17, i32 0, i32 %249) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %17) #15
  %251 = load i16*, i16** %116, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %251) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %115) #15
  %252 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 3
  %253 = load i32, i32* %252, align 8
  %254 = call i32 @uprv_itou_69(i16* nonnull %44, i32 16, i32 %253, i32 10, i32 0) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %119) #15
  call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %19, i16* nonnull %44) #15
  %255 = load i16, i16* %120, align 8
  %256 = icmp slt i16 %255, 0
  %257 = lshr i16 %255, 5
  %258 = zext i16 %257 to i32
  %259 = load i32, i32* %121, align 4
  %260 = select i1 %256, i32 %259, i32 %258
  %261 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %19, i32 0, i32 %260) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %119) #15
  br label %397

262:                                              ; preds = %242
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %108) #15
  store i16* getelementptr inbounds ([5 x i16], [5 x i16]* @.str.4, i64 0, i64 0), i16** %109, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %20, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %21, i32 -1) #15
  %263 = load i16, i16* %110, align 8
  %264 = icmp slt i16 %263, 0
  %265 = lshr i16 %263, 5
  %266 = zext i16 %265 to i32
  %267 = load i32, i32* %111, align 4
  %268 = select i1 %264, i32 %267, i32 %266
  %269 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %20, i32 0, i32 %268) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %20) #15
  %270 = load i16*, i16** %109, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %270) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %108) #15
  %271 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 3
  %272 = load i32, i32* %271, align 8
  %273 = call i32 @uprv_itou_69(i16* nonnull %44, i32 16, i32 %272, i32 10, i32 0) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %112) #15
  call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %22, i16* nonnull %44) #15
  %274 = load i16, i16* %113, align 8
  %275 = icmp slt i16 %274, 0
  %276 = lshr i16 %274, 5
  %277 = zext i16 %276 to i32
  %278 = load i32, i32* %114, align 4
  %279 = select i1 %275, i32 %278, i32 %277
  %280 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %22, i32 0, i32 %279) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %22) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %112) #15
  br label %397

281:                                              ; preds = %235
  %282 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 7
  %283 = load i8, i8* %282, align 1
  %284 = icmp ne i8 %283, 0
  br i1 %241, label %285, label %304

285:                                              ; preds = %281
  br i1 %284, label %286, label %295

286:                                              ; preds = %285
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %90) #15
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @.str.8, i64 0, i64 0), i16** %91, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %23, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %24, i32 -1) #15
  %287 = load i16, i16* %92, align 8
  %288 = icmp slt i16 %287, 0
  %289 = lshr i16 %287, 5
  %290 = zext i16 %289 to i32
  %291 = load i32, i32* %93, align 4
  %292 = select i1 %288, i32 %291, i32 %290
  %293 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %23, i32 0, i32 %292) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %23) #15
  %294 = load i16*, i16** %91, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %294) #15, !srcloc !2
  br label %323

295:                                              ; preds = %285
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %86) #15
  store i16* getelementptr inbounds ([13 x i16], [13 x i16]* @.str.9, i64 0, i64 0), i16** %87, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %25, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %26, i32 -1) #15
  %296 = load i16, i16* %88, align 8
  %297 = icmp slt i16 %296, 0
  %298 = lshr i16 %296, 5
  %299 = zext i16 %298 to i32
  %300 = load i32, i32* %89, align 4
  %301 = select i1 %297, i32 %300, i32 %299
  %302 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %25, i32 0, i32 %301) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %25) #15
  %303 = load i16*, i16** %87, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %303) #15, !srcloc !2
  br label %323

304:                                              ; preds = %281
  br i1 %284, label %305, label %314

305:                                              ; preds = %304
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %82) #15
  store i16* getelementptr inbounds ([5 x i16], [5 x i16]* @.str.10, i64 0, i64 0), i16** %83, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %27, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %28, i32 -1) #15
  %306 = load i16, i16* %84, align 8
  %307 = icmp slt i16 %306, 0
  %308 = lshr i16 %306, 5
  %309 = zext i16 %308 to i32
  %310 = load i32, i32* %85, align 4
  %311 = select i1 %307, i32 %310, i32 %309
  %312 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %27, i32 0, i32 %311) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %27) #15
  %313 = load i16*, i16** %83, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %313) #15, !srcloc !2
  br label %323

314:                                              ; preds = %304
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %78) #15
  store i16* getelementptr inbounds ([9 x i16], [9 x i16]* @.str.11, i64 0, i64 0), i16** %79, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %29, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %30, i32 -1) #15
  %315 = load i16, i16* %80, align 8
  %316 = icmp slt i16 %315, 0
  %317 = lshr i16 %315, 5
  %318 = zext i16 %317 to i32
  %319 = load i32, i32* %81, align 4
  %320 = select i1 %316, i32 %319, i32 %318
  %321 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %29, i32 0, i32 %320) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %29) #15
  %322 = load i16*, i16** %79, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %322) #15, !srcloc !2
  br label %323

323:                                              ; preds = %305, %314, %286, %295
  %324 = phi i8* [ %82, %305 ], [ %78, %314 ], [ %90, %286 ], [ %86, %295 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %324) #15
  %325 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %236, align 8
  %326 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %325, i64 0, i32 1
  %327 = load i32, i32* %326, align 8
  %328 = icmp sgt i32 %327, 0
  br i1 %328, label %329, label %397

329:                                              ; preds = %323, %393
  %330 = phi i64 [ %375, %393 ], [ 0, %323 ]
  %331 = phi i32 [ %394, %393 ], [ %327, %323 ]
  %332 = phi %"class.icu_69::UVector32"* [ %395, %393 ], [ %325, %323 ]
  %333 = icmp sgt i32 %331, 0
  br i1 %333, label %334, label %348

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %332, i64 0, i32 4
  %336 = load i32*, i32** %335, align 8
  %337 = getelementptr inbounds i32, i32* %336, i64 %330
  %338 = load i32, i32* %337, align 4
  %339 = or i64 %330, 1
  %340 = sext i32 %331 to i64
  %341 = icmp slt i64 %339, %340
  %342 = and i1 %333, %341
  br i1 %342, label %343, label %348

343:                                              ; preds = %334
  %344 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %332, i64 0, i32 4
  %345 = load i32*, i32** %344, align 8
  %346 = getelementptr inbounds i32, i32* %345, i64 %339
  %347 = load i32, i32* %346, align 4
  br label %348

348:                                              ; preds = %329, %334, %343
  %349 = phi i32 [ %338, %343 ], [ %338, %334 ], [ 0, %329 ]
  %350 = phi i32 [ %347, %343 ], [ 0, %334 ], [ 0, %329 ]
  %351 = call i32 @uprv_itou_69(i16* nonnull %44, i32 16, i32 %349, i32 10, i32 0) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %94) #15
  call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %31, i16* nonnull %44) #15
  %352 = load i16, i16* %95, align 8
  %353 = icmp slt i16 %352, 0
  %354 = lshr i16 %352, 5
  %355 = zext i16 %354 to i32
  %356 = load i32, i32* %96, align 4
  %357 = select i1 %353, i32 %356, i32 %355
  %358 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %31, i32 0, i32 %357) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %94) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %97) #15
  store i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.12, i64 0, i64 0), i16** %98, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %32, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %33, i32 -1) #15
  %359 = load i16, i16* %99, align 8
  %360 = icmp slt i16 %359, 0
  %361 = lshr i16 %359, 5
  %362 = zext i16 %361 to i32
  %363 = load i32, i32* %100, align 4
  %364 = select i1 %360, i32 %363, i32 %362
  %365 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %32, i32 0, i32 %364) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %32) #15
  %366 = load i16*, i16** %98, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %366) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %97) #15
  %367 = call i32 @uprv_itou_69(i16* nonnull %44, i32 16, i32 %350, i32 10, i32 0) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %101) #15
  call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %34, i16* nonnull %44) #15
  %368 = load i16, i16* %102, align 8
  %369 = icmp slt i16 %368, 0
  %370 = lshr i16 %368, 5
  %371 = zext i16 %370 to i32
  %372 = load i32, i32* %103, align 4
  %373 = select i1 %369, i32 %372, i32 %371
  %374 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %34, i32 0, i32 %373) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %101) #15
  %375 = add nuw i64 %330, 2
  %376 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %236, align 8
  %377 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %376, i64 0, i32 1
  %378 = load i32, i32* %377, align 8
  %379 = trunc i64 %375 to i32
  %380 = icmp sgt i32 %378, %379
  br i1 %380, label %381, label %393

381:                                              ; preds = %348
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %104) #15
  store i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.13, i64 0, i64 0), i16** %105, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %35, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %36, i32 -1) #15
  %382 = load i16, i16* %106, align 8
  %383 = icmp slt i16 %382, 0
  %384 = lshr i16 %382, 5
  %385 = zext i16 %384 to i32
  %386 = load i32, i32* %107, align 4
  %387 = select i1 %383, i32 %386, i32 %385
  %388 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %35, i32 0, i32 %387) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %35) #15
  %389 = load i16*, i16** %105, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %389) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %104) #15
  %390 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %236, align 8
  %391 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %390, i64 0, i32 1
  %392 = load i32, i32* %391, align 8
  br label %393

393:                                              ; preds = %381, %348
  %394 = phi i32 [ %392, %381 ], [ %378, %348 ]
  %395 = phi %"class.icu_69::UVector32"* [ %390, %381 ], [ %376, %348 ]
  %396 = icmp sgt i32 %394, %379
  br i1 %396, label %329, label %397

397:                                              ; preds = %393, %323, %192, %243, %262, %158
  %398 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %150, i64 0, i32 10
  %399 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %398, align 8
  %400 = icmp eq %"class.icu_69::AndConstraint"* %399, null
  br i1 %400, label %410, label %401

401:                                              ; preds = %397
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %136) #15
  store i16* getelementptr inbounds ([6 x i16], [6 x i16]* @.str.14, i64 0, i64 0), i16** %137, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %37, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %38, i32 -1) #15
  %402 = load i16, i16* %138, align 8
  %403 = icmp slt i16 %402, 0
  %404 = lshr i16 %402, 5
  %405 = zext i16 %404 to i32
  %406 = load i32, i32* %139, align 4
  %407 = select i1 %403, i32 %406, i32 %405
  %408 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %37, i32 0, i32 %407) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %37) #15
  %409 = load i16*, i16** %137, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %409) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %136) #15
  br label %149

410:                                              ; preds = %397, %144
  %411 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %145, i64 0, i32 2
  %412 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %411, align 8
  %413 = icmp eq %"class.icu_69::OrConstraint"* %412, null
  br i1 %413, label %423, label %414

414:                                              ; preds = %410
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %140) #15
  store i16* getelementptr inbounds ([5 x i16], [5 x i16]* @.str.15, i64 0, i64 0), i16** %141, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %39, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %40, i32 -1) #15
  %415 = load i16, i16* %142, align 8
  %416 = icmp slt i16 %415, 0
  %417 = lshr i16 %415, 5
  %418 = zext i16 %417 to i32
  %419 = load i32, i32* %143, align 4
  %420 = select i1 %416, i32 %419, i32 %418
  %421 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %39, i32 0, i32 %420) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %39) #15
  %422 = load i16*, i16** %141, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %422) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %140) #15
  br label %144

423:                                              ; preds = %410, %49, %2
  %424 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 2
  %425 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %424, align 8
  %426 = icmp eq %"class.icu_69::RuleChain"* %425, null
  br i1 %426, label %441, label %427

427:                                              ; preds = %423
  %428 = bitcast %"class.icu_69::UnicodeString"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %428) #15
  %429 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %42, i64 0, i32 0
  store i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.16, i64 0, i64 0), i16** %429, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %41, i8 signext 1, %"class.icu_69::ConstChar16Ptr"* nonnull %42, i32 -1) #15
  %430 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %41, i64 0, i32 1, i32 0, i32 0
  %431 = load i16, i16* %430, align 8
  %432 = icmp slt i16 %431, 0
  %433 = lshr i16 %431, 5
  %434 = zext i16 %433 to i32
  %435 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %41, i64 0, i32 1, i32 0, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = select i1 %432, i32 %436, i32 %434
  %438 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %41, i32 0, i32 %437) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %41) #15
  %439 = load i16*, i16** %429, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %439) #15, !srcloc !2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %428) #15
  %440 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %424, align 8
  call void @_ZN6icu_699RuleChain9dumpRulesERNS_13UnicodeStringE(%"class.icu_69::RuleChain"* %440, %"class.icu_69::UnicodeString"* dereferenceable(64) %1)
  br label %441

441:                                              ; preds = %423, %427
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6913AndConstraintC2ERKS0_(%"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6913AndConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 2
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 3
  store i32 -1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 5
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 6
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 7
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 9
  %11 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 10
  %12 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 11
  %13 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %1, i64 0, i32 11
  %14 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 16, i1 false)
  %15 = load i32, i32* %13, align 8
  store i32 %15, i32* %12, align 8
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %68

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %4, align 8
  %20 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %1, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %5, align 4
  %22 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %1, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %6, align 8
  %24 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %1, i64 0, i32 5
  %25 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %24, align 8
  %26 = icmp eq %"class.icu_69::UVector32"* %25, null
  br i1 %26, label %50, label %27

27:                                               ; preds = %17
  %28 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %29 = icmp eq i8* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = bitcast i8* %28 to %"class.icu_69::UVector32"*
  tail call void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"* nonnull %31, i32* dereferenceable(4) %12) #15
  br label %32

32:                                               ; preds = %30, %27
  %33 = phi %"class.icu_69::UVector32"* [ %31, %30 ], [ null, %27 ]
  %34 = icmp ne %"class.icu_69::UVector32"* %33, null
  %35 = load i32, i32* %12, align 4
  %36 = icmp sgt i32 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %32
  store i32 7, i32* %12, align 4
  br label %68

39:                                               ; preds = %32
  %40 = icmp slt i32 %35, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  store %"class.icu_69::UVector32"* %33, %"class.icu_69::UVector32"** %7, align 8
  %42 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %24, align 8
  tail call void @_ZN6icu_699UVector326assignERKS0_R10UErrorCode(%"class.icu_69::UVector32"* %33, %"class.icu_69::UVector32"* dereferenceable(32) %42, i32* dereferenceable(4) %12) #15
  br label %50

43:                                               ; preds = %39
  %44 = icmp eq %"class.icu_69::UVector32"* %33, null
  br i1 %44, label %68, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.icu_69::UVector32"* %33 to void (%"class.icu_69::UVector32"*)***
  %47 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %47, i64 1
  %49 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %48, align 8
  tail call void %49(%"class.icu_69::UVector32"* nonnull %33) #15
  br label %68

50:                                               ; preds = %41, %17
  %51 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %1, i64 0, i32 7
  %52 = load i8, i8* %51, align 1
  store i8 %52, i8* %9, align 1
  %53 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %1, i64 0, i32 6
  %54 = load i8, i8* %53, align 8
  store i8 %54, i8* %8, align 8
  %55 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %1, i64 0, i32 9
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %10, align 4
  %57 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %1, i64 0, i32 10
  %58 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %57, align 8
  %59 = icmp eq %"class.icu_69::AndConstraint"* %58, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %50
  %61 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 56) #15
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %11, align 8
  store i32 7, i32* %12, align 8
  br label %68

64:                                               ; preds = %60
  %65 = bitcast i8* %61 to %"class.icu_69::AndConstraint"*
  %66 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %57, align 8
  tail call void @_ZN6icu_6913AndConstraintC2ERKS0_(%"class.icu_69::AndConstraint"* nonnull %65, %"class.icu_69::AndConstraint"* dereferenceable(56) %66)
  %67 = bitcast %"class.icu_69::AndConstraint"** %11 to i8**
  store i8* %61, i8** %67, align 8
  br label %68

68:                                               ; preds = %38, %64, %45, %43, %50, %2, %63
  ret void
}

declare void @_ZN6icu_699UVector326assignERKS0_R10UErrorCode(%"class.icu_69::UVector32"*, %"class.icu_69::UVector32"* dereferenceable(32), i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6913AndConstraintD2Ev(%"class.icu_69::AndConstraint"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6913AndConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 5
  %4 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %3, align 8
  %5 = icmp eq %"class.icu_69::UVector32"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::UVector32"* %4 to void (%"class.icu_69::UVector32"*)***
  %8 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %8, i64 1
  %10 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %9, align 8
  tail call void %10(%"class.icu_69::UVector32"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %3, align 8
  %12 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 10
  %13 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %12, align 8
  %14 = icmp eq %"class.icu_69::AndConstraint"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.icu_69::AndConstraint"* %13 to void (%"class.icu_69::AndConstraint"*)***
  %17 = load void (%"class.icu_69::AndConstraint"*)**, void (%"class.icu_69::AndConstraint"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.icu_69::AndConstraint"*)*, void (%"class.icu_69::AndConstraint"*)** %17, i64 1
  %19 = load void (%"class.icu_69::AndConstraint"*)*, void (%"class.icu_69::AndConstraint"*)** %18, align 8
  tail call void %19(%"class.icu_69::AndConstraint"* nonnull %13) #15
  br label %20

20:                                               ; preds = %15, %11
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6913AndConstraintD0Ev(%"class.icu_69::AndConstraint"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6913AndConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 5
  %4 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %3, align 8
  %5 = icmp eq %"class.icu_69::UVector32"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::UVector32"* %4 to void (%"class.icu_69::UVector32"*)***
  %8 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %8, i64 1
  %10 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %9, align 8
  tail call void %10(%"class.icu_69::UVector32"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %3, align 8
  %12 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 10
  %13 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %12, align 8
  %14 = icmp eq %"class.icu_69::AndConstraint"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.icu_69::AndConstraint"* %13 to void (%"class.icu_69::AndConstraint"*)***
  %17 = load void (%"class.icu_69::AndConstraint"*)**, void (%"class.icu_69::AndConstraint"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.icu_69::AndConstraint"*)*, void (%"class.icu_69::AndConstraint"*)** %17, i64 1
  %19 = load void (%"class.icu_69::AndConstraint"*)*, void (%"class.icu_69::AndConstraint"*)** %18, align 8
  tail call void %19(%"class.icu_69::AndConstraint"* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %12, align 8
  %21 = bitcast %"class.icu_69::AndConstraint"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6913AndConstraint11isFulfilledERKNS_13IFixedDecimalE(%"class.icu_69::AndConstraint"* nocapture readonly, %"class.icu_69::IFixedDecimal"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %11 [
    i32 0, label %83
    i32 21, label %12
    i32 22, label %5
    i32 23, label %6
    i32 24, label %7
    i32 25, label %8
    i32 26, label %9
    i32 27, label %10
  ]

5:                                                ; preds = %2
  br label %12

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @abort() #16
  unreachable

12:                                               ; preds = %2, %5, %6, %7, %8, %9, %10
  %13 = phi i32 [ 6, %10 ], [ 6, %9 ], [ 3, %8 ], [ 4, %7 ], [ 2, %6 ], [ 1, %5 ], [ 0, %2 ]
  %14 = bitcast %"class.icu_69::IFixedDecimal"* %1 to double (%"class.icu_69::IFixedDecimal"*, i32)***
  %15 = load double (%"class.icu_69::IFixedDecimal"*, i32)**, double (%"class.icu_69::IFixedDecimal"*, i32)*** %14, align 8
  %16 = getelementptr inbounds double (%"class.icu_69::IFixedDecimal"*, i32)*, double (%"class.icu_69::IFixedDecimal"*, i32)** %15, i64 2
  %17 = load double (%"class.icu_69::IFixedDecimal"*, i32)*, double (%"class.icu_69::IFixedDecimal"*, i32)** %16, align 8
  %18 = tail call double %17(%"class.icu_69::IFixedDecimal"* %1, i32 %13) #15
  %19 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 7
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %12
  %23 = tail call double @uprv_floor_69(double %18) #15
  %24 = fcmp une double %18, %23
  br i1 %24, label %76, label %25

25:                                               ; preds = %12, %22
  %26 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %34

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = sitofp i32 %31 to double
  %33 = tail call double @fmod(double %18, double %32) #15
  br label %34

34:                                               ; preds = %29, %25
  %35 = phi double [ %33, %29 ], [ %18, %25 ]
  %36 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 5
  %37 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %36, align 8
  %38 = icmp eq %"class.icu_69::UVector32"* %37, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %76

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %37, i64 0, i32 4
  %45 = load i32*, i32** %44, align 8
  %46 = sext i32 %41 to i64
  br label %55

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %76, label %51

51:                                               ; preds = %47
  %52 = sitofp i32 %49 to double
  %53 = fcmp oeq double %35, %52
  %54 = zext i1 %53 to i8
  br label %76

55:                                               ; preds = %43, %72
  %56 = phi i64 [ 0, %43 ], [ %73, %72 ]
  %57 = getelementptr inbounds i32, i32* %45, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sitofp i32 %58 to double
  %60 = fcmp ult double %35, %59
  br i1 %60, label %72, label %61

61:                                               ; preds = %55
  %62 = or i64 %56, 1
  %63 = icmp slt i64 %62, %46
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = load i32*, i32** %44, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 %62
  %67 = load i32, i32* %66, align 4
  br label %68

68:                                               ; preds = %61, %64
  %69 = phi i32 [ %67, %64 ], [ 0, %61 ]
  %70 = sitofp i32 %69 to double
  %71 = fcmp ugt double %35, %70
  br i1 %71, label %72, label %76

72:                                               ; preds = %68, %55
  %73 = add nuw i64 %56, 2
  %74 = trunc i64 %73 to i32
  %75 = icmp sgt i32 %41, %74
  br i1 %75, label %55, label %76

76:                                               ; preds = %68, %72, %39, %47, %51, %22
  %77 = phi i8 [ 0, %22 ], [ 1, %47 ], [ %54, %51 ], [ 0, %39 ], [ 1, %68 ], [ 0, %72 ]
  %78 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %0, i64 0, i32 6
  %79 = load i8, i8* %78, align 8
  %80 = icmp ne i8 %79, 0
  %81 = zext i1 %80 to i8
  %82 = xor i8 %77, %81
  br label %83

83:                                               ; preds = %2, %76
  %84 = phi i8 [ 1, %2 ], [ %82, %76 ]
  ret i8 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6924tokenTypeToPluralOperandENS_9tokenTypeE(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -21
  %3 = icmp ult i32 %2, 7
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void @abort() #16
  unreachable

5:                                                ; preds = %1
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN6icu_6924tokenTypeToPluralOperandENS_9tokenTypeE, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

declare double @uprv_floor_69(double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912OrConstraintC2ERKS0_(%"class.icu_69::OrConstraint"* nocapture, %"class.icu_69::OrConstraint"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6912OrConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %1, i64 0, i32 3
  %8 = bitcast %"class.icu_69::AndConstraint"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false)
  %9 = load i32, i32* %7, align 8
  store i32 %9, i32* %6, align 8
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %40

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %1, i64 0, i32 1
  %13 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %12, align 8
  %14 = icmp eq %"class.icu_69::AndConstraint"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 56) #15
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %4, align 8
  store i32 7, i32* %6, align 8
  br label %40

19:                                               ; preds = %15
  %20 = bitcast i8* %16 to %"class.icu_69::AndConstraint"*
  %21 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %12, align 8
  tail call void @_ZN6icu_6913AndConstraintC2ERKS0_(%"class.icu_69::AndConstraint"* nonnull %20, %"class.icu_69::AndConstraint"* dereferenceable(56) %21)
  %22 = bitcast %"class.icu_69::AndConstraint"** %4 to i8**
  store i8* %16, i8** %22, align 8
  br label %23

23:                                               ; preds = %19, %11
  %24 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %1, i64 0, i32 2
  %25 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %24, align 8
  %26 = icmp eq %"class.icu_69::OrConstraint"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  store %"class.icu_69::OrConstraint"* null, %"class.icu_69::OrConstraint"** %5, align 8
  store i32 7, i32* %6, align 8
  br label %40

31:                                               ; preds = %27
  %32 = bitcast i8* %28 to %"class.icu_69::OrConstraint"*
  %33 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %24, align 8
  tail call void @_ZN6icu_6912OrConstraintC2ERKS0_(%"class.icu_69::OrConstraint"* nonnull %32, %"class.icu_69::OrConstraint"* dereferenceable(32) %33)
  %34 = bitcast %"class.icu_69::OrConstraint"** %5 to i8**
  store i8* %28, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %28, i64 24
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %37, 1
  br i1 %38, label %40, label %39

39:                                               ; preds = %31
  store i32 %37, i32* %6, align 8
  br label %40

40:                                               ; preds = %31, %23, %2, %39, %18, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912OrConstraintD2Ev(%"class.icu_69::OrConstraint"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6912OrConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %3, align 8
  %5 = icmp eq %"class.icu_69::AndConstraint"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::AndConstraint"* %4 to void (%"class.icu_69::AndConstraint"*)***
  %8 = load void (%"class.icu_69::AndConstraint"*)**, void (%"class.icu_69::AndConstraint"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::AndConstraint"*)*, void (%"class.icu_69::AndConstraint"*)** %8, i64 1
  %10 = load void (%"class.icu_69::AndConstraint"*)*, void (%"class.icu_69::AndConstraint"*)** %9, align 8
  tail call void %10(%"class.icu_69::AndConstraint"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %3, align 8
  %12 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 2
  %13 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %12, align 8
  %14 = icmp eq %"class.icu_69::OrConstraint"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.icu_69::OrConstraint"* %13 to void (%"class.icu_69::OrConstraint"*)***
  %17 = load void (%"class.icu_69::OrConstraint"*)**, void (%"class.icu_69::OrConstraint"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.icu_69::OrConstraint"*)*, void (%"class.icu_69::OrConstraint"*)** %17, i64 1
  %19 = load void (%"class.icu_69::OrConstraint"*)*, void (%"class.icu_69::OrConstraint"*)** %18, align 8
  tail call void %19(%"class.icu_69::OrConstraint"* nonnull %13) #15
  br label %20

20:                                               ; preds = %15, %11
  store %"class.icu_69::OrConstraint"* null, %"class.icu_69::OrConstraint"** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912OrConstraintD0Ev(%"class.icu_69::OrConstraint"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6912OrConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %3, align 8
  %5 = icmp eq %"class.icu_69::AndConstraint"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::AndConstraint"* %4 to void (%"class.icu_69::AndConstraint"*)***
  %8 = load void (%"class.icu_69::AndConstraint"*)**, void (%"class.icu_69::AndConstraint"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::AndConstraint"*)*, void (%"class.icu_69::AndConstraint"*)** %8, i64 1
  %10 = load void (%"class.icu_69::AndConstraint"*)*, void (%"class.icu_69::AndConstraint"*)** %9, align 8
  tail call void %10(%"class.icu_69::AndConstraint"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  store %"class.icu_69::AndConstraint"* null, %"class.icu_69::AndConstraint"** %3, align 8
  %12 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %0, i64 0, i32 2
  %13 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %12, align 8
  %14 = icmp eq %"class.icu_69::OrConstraint"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.icu_69::OrConstraint"* %13 to void (%"class.icu_69::OrConstraint"*)***
  %17 = load void (%"class.icu_69::OrConstraint"*)**, void (%"class.icu_69::OrConstraint"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.icu_69::OrConstraint"*)*, void (%"class.icu_69::OrConstraint"*)** %17, i64 1
  %19 = load void (%"class.icu_69::OrConstraint"*)*, void (%"class.icu_69::OrConstraint"*)** %18, align 8
  tail call void %19(%"class.icu_69::OrConstraint"* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  store %"class.icu_69::OrConstraint"* null, %"class.icu_69::OrConstraint"** %12, align 8
  %21 = bitcast %"class.icu_69::OrConstraint"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912OrConstraint11isFulfilledERKNS_13IFixedDecimalE(%"class.icu_69::OrConstraint"* readonly, %"class.icu_69::IFixedDecimal"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.icu_69::OrConstraint"* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2, %17
  %5 = phi %"class.icu_69::OrConstraint"* [ %19, %17 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %5, i64 0, i32 1
  %7 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %6, align 8
  %8 = icmp eq %"class.icu_69::AndConstraint"* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %4, %9
  %10 = phi %"class.icu_69::AndConstraint"* [ %13, %9 ], [ %7, %4 ]
  %11 = tail call signext i8 @_ZN6icu_6913AndConstraint11isFulfilledERKNS_13IFixedDecimalE(%"class.icu_69::AndConstraint"* nonnull %10, %"class.icu_69::IFixedDecimal"* dereferenceable(8) %1)
  %12 = getelementptr inbounds %"class.icu_69::AndConstraint", %"class.icu_69::AndConstraint"* %10, i64 0, i32 10
  %13 = load %"class.icu_69::AndConstraint"*, %"class.icu_69::AndConstraint"** %12, align 8
  %14 = icmp ne %"class.icu_69::AndConstraint"* %13, null
  %15 = icmp ne i8 %11, 0
  %16 = and i1 %15, %14
  br i1 %16, label %9, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.icu_69::OrConstraint", %"class.icu_69::OrConstraint"* %5, i64 0, i32 2
  %19 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %18, align 8
  %20 = icmp ne %"class.icu_69::OrConstraint"* %19, null
  %21 = icmp eq i8 %11, 0
  %22 = and i1 %20, %21
  br i1 %22, label %4, label %23

23:                                               ; preds = %4, %17, %2
  %24 = phi i8 [ 0, %2 ], [ 1, %4 ], [ %11, %17 ]
  ret i8 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699RuleChainC2ERKS0_(%"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"* dereferenceable(224)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_699RuleChainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %1, i64 0, i32 1
  tail call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %4, %"class.icu_69::UnicodeString"* dereferenceable(64) %5) #15
  %6 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %1, i64 0, i32 4
  %10 = bitcast %"class.icu_69::RuleChain"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  tail call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %8, %"class.icu_69::UnicodeString"* dereferenceable(64) %9) #15
  %11 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %1, i64 0, i32 5
  tail call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %11, %"class.icu_69::UnicodeString"* dereferenceable(64) %12) #15
  %13 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %1, i64 0, i32 6
  %15 = load i8, i8* %14, align 8
  store i8 %15, i8* %13, align 8
  %16 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 7
  %17 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %1, i64 0, i32 7
  %18 = load i8, i8* %17, align 1
  store i8 %18, i8* %16, align 1
  %19 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 8
  %20 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %1, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %57

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %1, i64 0, i32 3
  %25 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %24, align 8
  %26 = icmp eq %"class.icu_69::OrConstraint"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #15
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  store %"class.icu_69::OrConstraint"* null, %"class.icu_69::OrConstraint"** %7, align 8
  store i32 7, i32* %19, align 4
  br label %40

31:                                               ; preds = %27
  %32 = bitcast i8* %28 to %"class.icu_69::OrConstraint"*
  %33 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %24, align 8
  tail call void @_ZN6icu_6912OrConstraintC2ERKS0_(%"class.icu_69::OrConstraint"* nonnull %32, %"class.icu_69::OrConstraint"* dereferenceable(32) %33)
  %34 = bitcast %"class.icu_69::OrConstraint"** %7 to i8**
  store i8* %28, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %28, i64 24
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %37, 1
  br i1 %38, label %40, label %39

39:                                               ; preds = %31
  store i32 %37, i32* %19, align 4
  br label %57

40:                                               ; preds = %31, %23, %30
  %41 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %1, i64 0, i32 2
  %42 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %41, align 8
  %43 = icmp eq %"class.icu_69::RuleChain"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 224) #15
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  store %"class.icu_69::RuleChain"* null, %"class.icu_69::RuleChain"** %6, align 8
  store i32 7, i32* %19, align 4
  br label %57

48:                                               ; preds = %44
  %49 = bitcast i8* %45 to %"class.icu_69::RuleChain"*
  %50 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %41, align 8
  tail call void @_ZN6icu_699RuleChainC2ERKS0_(%"class.icu_69::RuleChain"* nonnull %49, %"class.icu_69::RuleChain"* dereferenceable(224) %50)
  %51 = bitcast %"class.icu_69::RuleChain"** %6 to i8**
  store i8* %45, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %45, i64 220
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %54, 1
  br i1 %55, label %57, label %56

56:                                               ; preds = %48
  store i32 %54, i32* %19, align 4
  br label %57

57:                                               ; preds = %48, %40, %2, %47, %56, %39
  ret void
}

declare void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699RuleChainD2Ev(%"class.icu_69::RuleChain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_699RuleChainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 2
  %4 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %3, align 8
  %5 = icmp eq %"class.icu_69::RuleChain"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::RuleChain"* %4 to void (%"class.icu_69::RuleChain"*)***
  %8 = load void (%"class.icu_69::RuleChain"*)**, void (%"class.icu_69::RuleChain"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %8, i64 1
  %10 = load void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %9, align 8
  tail call void %10(%"class.icu_69::RuleChain"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 3
  %13 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %12, align 8
  %14 = icmp eq %"class.icu_69::OrConstraint"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.icu_69::OrConstraint"* %13 to void (%"class.icu_69::OrConstraint"*)***
  %17 = load void (%"class.icu_69::OrConstraint"*)**, void (%"class.icu_69::OrConstraint"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.icu_69::OrConstraint"*)*, void (%"class.icu_69::OrConstraint"*)** %17, i64 1
  %19 = load void (%"class.icu_69::OrConstraint"*)*, void (%"class.icu_69::OrConstraint"*)** %18, align 8
  tail call void %19(%"class.icu_69::OrConstraint"* nonnull %13) #15
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 5
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %21) #15
  %22 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 4
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %22) #15
  %23 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 1
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %23) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699RuleChainD0Ev(%"class.icu_69::RuleChain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_699RuleChainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 2
  %4 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %3, align 8
  %5 = icmp eq %"class.icu_69::RuleChain"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::RuleChain"* %4 to void (%"class.icu_69::RuleChain"*)***
  %8 = load void (%"class.icu_69::RuleChain"*)**, void (%"class.icu_69::RuleChain"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %8, i64 1
  %10 = load void (%"class.icu_69::RuleChain"*)*, void (%"class.icu_69::RuleChain"*)** %9, align 8
  tail call void %10(%"class.icu_69::RuleChain"* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 3
  %13 = load %"class.icu_69::OrConstraint"*, %"class.icu_69::OrConstraint"** %12, align 8
  %14 = icmp eq %"class.icu_69::OrConstraint"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.icu_69::OrConstraint"* %13 to void (%"class.icu_69::OrConstraint"*)***
  %17 = load void (%"class.icu_69::OrConstraint"*)**, void (%"class.icu_69::OrConstraint"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.icu_69::OrConstraint"*)*, void (%"class.icu_69::OrConstraint"*)** %17, i64 1
  %19 = load void (%"class.icu_69::OrConstraint"*)*, void (%"class.icu_69::OrConstraint"*)** %18, align 8
  tail call void %19(%"class.icu_69::OrConstraint"* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 5
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %21) #15
  %22 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 4
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %22) #15
  %23 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %0, i64 0, i32 1
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %23) #15
  %24 = bitcast %"class.icu_69::RuleChain"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %24) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6icu_69L11tokenStringENS_9tokenTypeE(%"class.icu_69::UnicodeString"* noalias sret, i32) unnamed_addr #0 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 64, i1 false)
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %13, align 8
  switch i32 %1, label %28 [
    i32 21, label %14
    i32 22, label %16
    i32 23, label %18
    i32 24, label %20
    i32 25, label %22
    i32 26, label %24
    i32 27, label %26
  ]

14:                                               ; preds = %2
  %15 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %15)
  store i16 110, i16* %9, align 2
  br label %30

16:                                               ; preds = %2
  %17 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %17)
  store i16 105, i16* %8, align 2
  br label %30

18:                                               ; preds = %2
  %19 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %19)
  store i16 102, i16* %7, align 2
  br label %30

20:                                               ; preds = %2
  %21 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %21)
  store i16 118, i16* %6, align 2
  br label %30

22:                                               ; preds = %2
  %23 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %23)
  store i16 116, i16* %5, align 2
  br label %30

24:                                               ; preds = %2
  %25 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %25)
  store i16 101, i16* %4, align 2
  br label %30

26:                                               ; preds = %2
  %27 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %27)
  store i16 99, i16* %3, align 2
  br label %30

28:                                               ; preds = %2
  %29 = bitcast i16* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %29)
  store i16 126, i16* %10, align 2
  br label %30

30:                                               ; preds = %14, %16, %18, %20, %22, %24, %26, %28
  %31 = phi i16* [ %9, %14 ], [ %8, %16 ], [ %7, %18 ], [ %6, %20 ], [ %5, %22 ], [ %4, %24 ], [ %3, %26 ], [ %10, %28 ]
  %32 = phi i8* [ %15, %14 ], [ %17, %16 ], [ %19, %18 ], [ %21, %20 ], [ %23, %22 ], [ %25, %24 ], [ %27, %26 ], [ %29, %28 ]
  %33 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %31, i32 0, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %32)
  ret void
}

declare i32 @uprv_itou_69(i16*, i32, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_699RuleChain11getKeywordsEiPNS_13UnicodeStringERi(%"class.icu_69::RuleChain"*, i32, %"class.icu_69::UnicodeString"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = add nsw i32 %1, -1
  br label %6

6:                                                ; preds = %14, %4
  %7 = phi %"class.icu_69::RuleChain"* [ %0, %4 ], [ %21, %14 ]
  %8 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %7, i64 0, i32 8
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %12, %5
  br i1 %13, label %14, label %23

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %7, i64 0, i32 1
  %16 = add nsw i32 %12, 1
  store i32 %16, i32* %3, align 4
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 %17
  %19 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSERKS0_(%"class.icu_69::UnicodeString"* %18, %"class.icu_69::UnicodeString"* dereferenceable(64) %15) #15
  %20 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %7, i64 0, i32 2
  %21 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %20, align 8
  %22 = icmp eq %"class.icu_69::RuleChain"* %21, null
  br i1 %22, label %23, label %6

23:                                               ; preds = %6, %14, %11
  %24 = phi i32 [ 15, %11 ], [ 0, %14 ], [ %9, %6 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_699RuleChain9isKeywordERKNS_13UnicodeStringE(%"class.icu_69::RuleChain"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  br label %5

5:                                                ; preds = %43, %2
  %6 = phi %"class.icu_69::RuleChain"* [ %0, %2 ], [ %45, %43 ]
  %7 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %6, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %6, i64 0, i32 1, i32 1, i32 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = and i16 %9, 1
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = load i16, i16* %3, align 8
  %14 = trunc i16 %13 to i8
  %15 = and i8 %14, 1
  br label %40

16:                                               ; preds = %5
  %17 = icmp slt i16 %9, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  %19 = lshr i16 %9, 5
  %20 = zext i16 %19 to i32
  br label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %6, i64 0, i32 1, i32 1, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %21, %18
  %25 = phi i32 [ %20, %18 ], [ %23, %21 ]
  %26 = load i16, i16* %3, align 8
  %27 = icmp slt i16 %26, 0
  %28 = lshr i16 %26, 5
  %29 = zext i16 %28 to i32
  %30 = load i32, i32* %4, align 4
  %31 = select i1 %27, i32 %30, i32 %29
  %32 = and i16 %26, 1
  %33 = icmp eq i16 %32, 0
  %34 = icmp eq i32 %25, %31
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %24
  %37 = tail call signext i8 @_ZNK6icu_6913UnicodeString8doEqualsERKS0_i(%"class.icu_69::UnicodeString"* %7, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32 %25) #15
  %38 = icmp ne i8 %37, 0
  %39 = zext i1 %38 to i8
  br label %40

40:                                               ; preds = %12, %36
  %41 = phi i8 [ %15, %12 ], [ %39, %36 ]
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %24, %40
  %44 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %6, i64 0, i32 2
  %45 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %44, align 8
  %46 = icmp eq %"class.icu_69::RuleChain"* %45, null
  br i1 %46, label %47, label %5

47:                                               ; preds = %43, %40
  %48 = phi i8 [ 1, %40 ], [ 0, %43 ]
  ret i8 %48
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6916PluralRuleParserC2Ev(%"class.icu_69::PluralRuleParser"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6916PluralRuleParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 2
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  store i16 2, i16* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 8
  %8 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  store i32 -1, i32* %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 9
  store i32 -1, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916PluralRuleParserD2Ev(%"class.icu_69::PluralRuleParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6916PluralRuleParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 3
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916PluralRuleParserD0Ev(%"class.icu_69::PluralRuleParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6icu_6916PluralRuleParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::PluralRuleParser", %"class.icu_69::PluralRuleParser"* %0, i64 0, i32 3
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %3) #15
  %4 = bitcast %"class.icu_69::PluralRuleParser"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %4) #15
  ret void
}

declare i32 @_ZNK6icu_6913UnicodeString7extractEiiPciNS0_10EInvariantE(%"class.icu_69::UnicodeString"*, i32, i32, i8*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6916PluralRuleParser10getKeyTypeERKNS_13UnicodeStringENS_9tokenTypeE(%"class.icu_69::UnicodeString"* dereferenceable(64), i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 10
  br i1 %3, label %4, label %151

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load i16, i16* %5, align 8
  %7 = icmp slt i16 %6, 0
  %8 = lshr i16 %6, 5
  %9 = zext i16 %8 to i32
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = select i1 %7, i32 %11, i32 %9
  %13 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %12, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_NE, i64 0, i64 0), i32 0, i32 1) #15
  %14 = icmp eq i8 %13, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_NE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %14, label %151, label %15

15:                                               ; preds = %4
  %16 = load i16, i16* %5, align 8
  %17 = icmp slt i16 %16, 0
  %18 = lshr i16 %16, 5
  %19 = zext i16 %18 to i32
  %20 = load i32, i32* %10, align 4
  %21 = select i1 %17, i32 %20, i32 %19
  %22 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %21, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_IE, i64 0, i64 0), i32 0, i32 1) #15
  %23 = icmp eq i8 %22, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_IE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %23, label %151, label %24

24:                                               ; preds = %15
  %25 = load i16, i16* %5, align 8
  %26 = icmp slt i16 %25, 0
  %27 = lshr i16 %25, 5
  %28 = zext i16 %27 to i32
  %29 = load i32, i32* %10, align 4
  %30 = select i1 %26, i32 %29, i32 %28
  %31 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %30, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_FE, i64 0, i64 0), i32 0, i32 1) #15
  %32 = icmp eq i8 %31, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_FE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %32, label %151, label %33

33:                                               ; preds = %24
  %34 = load i16, i16* %5, align 8
  %35 = icmp slt i16 %34, 0
  %36 = lshr i16 %34, 5
  %37 = zext i16 %36 to i32
  %38 = load i32, i32* %10, align 4
  %39 = select i1 %35, i32 %38, i32 %37
  %40 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %39, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_TE, i64 0, i64 0), i32 0, i32 1) #15
  %41 = icmp eq i8 %40, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_TE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %41, label %151, label %42

42:                                               ; preds = %33
  %43 = load i16, i16* %5, align 8
  %44 = icmp slt i16 %43, 0
  %45 = lshr i16 %43, 5
  %46 = zext i16 %45 to i32
  %47 = load i32, i32* %10, align 4
  %48 = select i1 %44, i32 %47, i32 %46
  %49 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %48, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_EE, i64 0, i64 0), i32 0, i32 1) #15
  %50 = icmp eq i8 %49, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_EE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %50, label %151, label %51

51:                                               ; preds = %42
  %52 = load i16, i16* %5, align 8
  %53 = icmp slt i16 %52, 0
  %54 = lshr i16 %52, 5
  %55 = zext i16 %54 to i32
  %56 = load i32, i32* %10, align 4
  %57 = select i1 %53, i32 %56, i32 %55
  %58 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %57, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_CE, i64 0, i64 0), i32 0, i32 1) #15
  %59 = icmp eq i8 %58, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_CE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %59, label %151, label %60

60:                                               ; preds = %51
  %61 = load i16, i16* %5, align 8
  %62 = icmp slt i16 %61, 0
  %63 = lshr i16 %61, 5
  %64 = zext i16 %63 to i32
  %65 = load i32, i32* %10, align 4
  %66 = select i1 %62, i32 %65, i32 %64
  %67 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %66, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_VE, i64 0, i64 0), i32 0, i32 1) #15
  %68 = icmp eq i8 %67, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN6icu_69L8PK_VAR_VE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %68, label %151, label %69

69:                                               ; preds = %60
  %70 = load i16, i16* %5, align 8
  %71 = icmp slt i16 %70, 0
  %72 = lshr i16 %70, 5
  %73 = zext i16 %72 to i32
  %74 = load i32, i32* %10, align 4
  %75 = select i1 %71, i32 %74, i32 %73
  %76 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %75, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZN6icu_69L5PK_ISE, i64 0, i64 0), i32 0, i32 2) #15
  %77 = icmp eq i8 %76, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZN6icu_69L5PK_ISE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %77, label %151, label %78

78:                                               ; preds = %69
  %79 = load i16, i16* %5, align 8
  %80 = icmp slt i16 %79, 0
  %81 = lshr i16 %79, 5
  %82 = zext i16 %81 to i32
  %83 = load i32, i32* %10, align 4
  %84 = select i1 %80, i32 %83, i32 %82
  %85 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %84, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZN6icu_69L6PK_ANDE, i64 0, i64 0), i32 0, i32 3) #15
  %86 = icmp eq i8 %85, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZN6icu_69L6PK_ANDE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %86, label %151, label %87

87:                                               ; preds = %78
  %88 = load i16, i16* %5, align 8
  %89 = icmp slt i16 %88, 0
  %90 = lshr i16 %88, 5
  %91 = zext i16 %90 to i32
  %92 = load i32, i32* %10, align 4
  %93 = select i1 %89, i32 %92, i32 %91
  %94 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %93, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZN6icu_69L5PK_INE, i64 0, i64 0), i32 0, i32 2) #15
  %95 = icmp eq i8 %94, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZN6icu_69L5PK_INE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %95, label %151, label %96

96:                                               ; preds = %87
  %97 = load i16, i16* %5, align 8
  %98 = icmp slt i16 %97, 0
  %99 = lshr i16 %97, 5
  %100 = zext i16 %99 to i32
  %101 = load i32, i32* %10, align 4
  %102 = select i1 %98, i32 %101, i32 %100
  %103 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %102, i16* getelementptr inbounds ([7 x i16], [7 x i16]* @_ZN6icu_69L9PK_WITHINE, i64 0, i64 0), i32 0, i32 6) #15
  %104 = icmp eq i8 %103, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([7 x i16], [7 x i16]* @_ZN6icu_69L9PK_WITHINE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %104, label %151, label %105

105:                                              ; preds = %96
  %106 = load i16, i16* %5, align 8
  %107 = icmp slt i16 %106, 0
  %108 = lshr i16 %106, 5
  %109 = zext i16 %108 to i32
  %110 = load i32, i32* %10, align 4
  %111 = select i1 %107, i32 %110, i32 %109
  %112 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %111, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZN6icu_69L6PK_NOTE, i64 0, i64 0), i32 0, i32 3) #15
  %113 = icmp eq i8 %112, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZN6icu_69L6PK_NOTE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %113, label %151, label %114

114:                                              ; preds = %105
  %115 = load i16, i16* %5, align 8
  %116 = icmp slt i16 %115, 0
  %117 = lshr i16 %115, 5
  %118 = zext i16 %117 to i32
  %119 = load i32, i32* %10, align 4
  %120 = select i1 %116, i32 %119, i32 %118
  %121 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %120, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZN6icu_69L6PK_MODE, i64 0, i64 0), i32 0, i32 3) #15
  %122 = icmp eq i8 %121, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZN6icu_69L6PK_MODE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %122, label %151, label %123

123:                                              ; preds = %114
  %124 = load i16, i16* %5, align 8
  %125 = icmp slt i16 %124, 0
  %126 = lshr i16 %124, 5
  %127 = zext i16 %126 to i32
  %128 = load i32, i32* %10, align 4
  %129 = select i1 %125, i32 %128, i32 %127
  %130 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %129, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZN6icu_69L5PK_ORE, i64 0, i64 0), i32 0, i32 2) #15
  %131 = icmp eq i8 %130, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZN6icu_69L5PK_ORE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %131, label %151, label %132

132:                                              ; preds = %123
  %133 = load i16, i16* %5, align 8
  %134 = icmp slt i16 %133, 0
  %135 = lshr i16 %133, 5
  %136 = zext i16 %135 to i32
  %137 = load i32, i32* %10, align 4
  %138 = select i1 %134, i32 %137, i32 %136
  %139 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %138, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @_ZN6icu_69L10PK_DECIMALE, i64 0, i64 0), i32 0, i32 7) #15
  %140 = icmp eq i8 %139, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([8 x i16], [8 x i16]* @_ZN6icu_69L10PK_DECIMALE, i64 0, i64 0)) #15, !srcloc !2
  br i1 %140, label %151, label %141

141:                                              ; preds = %132
  %142 = load i16, i16* %5, align 8
  %143 = icmp slt i16 %142, 0
  %144 = lshr i16 %142, 5
  %145 = zext i16 %144 to i32
  %146 = load i32, i32* %10, align 4
  %147 = select i1 %143, i32 %146, i32 %145
  %148 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 0, i32 %147, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @_ZN6icu_69L10PK_INTEGERE, i64 0, i64 0), i32 0, i32 7) #15
  %149 = icmp eq i8 %148, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([8 x i16], [8 x i16]* @_ZN6icu_69L10PK_INTEGERE, i64 0, i64 0)) #15, !srcloc !2
  %150 = select i1 %149, i32 29, i32 10
  ret i32 %150

151:                                              ; preds = %4, %15, %24, %33, %42, %51, %60, %69, %78, %87, %96, %105, %114, %123, %132, %2
  %152 = phi i32 [ %1, %2 ], [ 21, %4 ], [ 22, %15 ], [ 23, %24 ], [ 25, %33 ], [ 26, %42 ], [ 27, %51 ], [ 24, %60 ], [ 20, %69 ], [ 11, %78 ], [ 15, %87 ], [ 19, %96 ], [ 14, %105 ], [ 13, %114 ], [ 12, %123 ], [ 28, %132 ]
  ret i32 %152
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6icu_6916PluralRuleParser8charTypeEDs(i16 zeroext) local_unnamed_addr #5 align 2 {
  %2 = add i16 %0, -48
  %3 = icmp ult i16 %2, 10
  br i1 %3, label %19, label %4

4:                                                ; preds = %1
  %5 = add i16 %0, -97
  %6 = icmp ult i16 %5, 26
  br i1 %6, label %19, label %7

7:                                                ; preds = %4
  switch i16 %0, label %18 [
    i16 58, label %19
    i16 32, label %8
    i16 59, label %9
    i16 46, label %10
    i16 44, label %11
    i16 33, label %12
    i16 61, label %13
    i16 37, label %14
    i16 64, label %15
    i16 8230, label %16
    i16 126, label %17
  ]

8:                                                ; preds = %7
  br label %19

9:                                                ; preds = %7
  br label %19

10:                                               ; preds = %7
  br label %19

11:                                               ; preds = %7
  br label %19

12:                                               ; preds = %7
  br label %19

13:                                               ; preds = %7
  br label %19

14:                                               ; preds = %7
  br label %19

15:                                               ; preds = %7
  br label %19

16:                                               ; preds = %7
  br label %19

17:                                               ; preds = %7
  br label %19

18:                                               ; preds = %7
  br label %19

19:                                               ; preds = %7, %4, %1, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8
  %20 = phi i32 [ 0, %18 ], [ 18, %17 ], [ 9, %16 ], [ 6, %15 ], [ 13, %14 ], [ 16, %13 ], [ 17, %12 ], [ 2, %11 ], [ 7, %10 ], [ 3, %9 ], [ 4, %8 ], [ 1, %1 ], [ 10, %4 ], [ 5, %7 ]
  ret i32 %20
}

declare void @_ZN6icu_6913UnicodeStringC1ERKS0_ii(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6924PluralKeywordEnumerationC2EPNS_9RuleChainER10UErrorCode(%"class.icu_69::PluralKeywordEnumeration"*, %"class.icu_69::RuleChain"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.icu_69::PluralKeywordEnumeration"* %0 to %"class.icu_69::StringEnumeration"*
  tail call void @_ZN6icu_6917StringEnumerationC2Ev(%"class.icu_69::StringEnumeration"* %4) #15
  %5 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6924PluralKeywordEnumerationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 2
  tail call void @_ZN6icu_697UVectorC1ER10UErrorCode(%"class.icu_69::UVector"* %7, i32* dereferenceable(4) %2) #15
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %63

10:                                               ; preds = %3
  %11 = tail call void (i8*)* @_ZN6icu_697UVector10setDeleterEPFvPvE(%"class.icu_69::UVector"* %7, void (i8*)* nonnull @uprv_deleteUObject_69) #15
  %12 = icmp eq %"class.icu_69::RuleChain"* %1, null
  br i1 %12, label %50, label %13

13:                                               ; preds = %10, %40
  %14 = phi %"class.icu_69::RuleChain"* [ %46, %40 ], [ %1, %10 ]
  %15 = phi i8 [ %44, %40 ], [ 1, %10 ]
  %16 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #15
  %17 = icmp eq i8* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = bitcast i8* %16 to %"class.icu_69::UnicodeString"*
  %20 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %14, i64 0, i32 1
  tail call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* nonnull %19, %"class.icu_69::UnicodeString"* dereferenceable(64) %20) #15
  tail call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %7, i8* nonnull %16, i32* dereferenceable(4) %2) #15
  %21 = load i32, i32* %2, align 4
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %30, label %24

23:                                               ; preds = %13
  store i32 7, i32* %2, align 4
  br label %63

24:                                               ; preds = %18
  %25 = bitcast i8* %16 to %"class.icu_69::UnicodeString"*
  %26 = bitcast i8* %16 to void (%"class.icu_69::UnicodeString"*)***
  %27 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %27, i64 1
  %29 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %28, align 8
  tail call void %29(%"class.icu_69::UnicodeString"* nonnull %25) #15
  br label %63

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %14, i64 0, i32 1, i32 1, i32 0, i32 0
  %32 = load i16, i16* %31, align 8
  %33 = icmp slt i16 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = lshr i16 %32, 5
  %36 = zext i16 %35 to i32
  br label %40

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %14, i64 0, i32 1, i32 1, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %37, %34
  %41 = phi i32 [ %36, %34 ], [ %39, %37 ]
  %42 = tail call signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"* %20, i32 0, i32 %41, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @_ZN6icu_69L20PLURAL_KEYWORD_OTHERE, i64 0, i64 0), i32 0, i32 5) #15
  %43 = icmp eq i8 %42, 0
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([6 x i16], [6 x i16]* @_ZN6icu_69L20PLURAL_KEYWORD_OTHERE, i64 0, i64 0)) #15, !srcloc !2
  %44 = select i1 %43, i8 0, i8 %15
  %45 = getelementptr inbounds %"class.icu_69::RuleChain", %"class.icu_69::RuleChain"* %14, i64 0, i32 2
  %46 = load %"class.icu_69::RuleChain"*, %"class.icu_69::RuleChain"** %45, align 8
  %47 = icmp eq %"class.icu_69::RuleChain"* %46, null
  br i1 %47, label %48, label %13

48:                                               ; preds = %40
  %49 = icmp eq i8 %44, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %10, %48
  %51 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #15
  %52 = icmp eq i8* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = bitcast i8* %51 to %"class.icu_69::UnicodeString"*
  tail call void @_ZN6icu_6913UnicodeStringC1EPKDs(%"class.icu_69::UnicodeString"* nonnull %54, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @_ZN6icu_69L20PLURAL_KEYWORD_OTHERE, i64 0, i64 0)) #15
  tail call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %7, i8* nonnull %51, i32* dereferenceable(4) %2) #15
  %55 = load i32, i32* %2, align 4
  %56 = icmp slt i32 %55, 1
  br i1 %56, label %63, label %58

57:                                               ; preds = %50
  store i32 7, i32* %2, align 4
  br label %63

58:                                               ; preds = %53
  %59 = bitcast i8* %51 to void (%"class.icu_69::UnicodeString"*)***
  %60 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %60, i64 1
  %62 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %61, align 8
  tail call void %62(%"class.icu_69::UnicodeString"* nonnull %54) #15
  br label %63

63:                                               ; preds = %24, %23, %57, %58, %53, %48, %3
  ret void
}

declare void @_ZN6icu_6917StringEnumerationC2Ev(%"class.icu_69::StringEnumeration"*) unnamed_addr #4

declare void @_ZN6icu_697UVectorC1ER10UErrorCode(%"class.icu_69::UVector"*, i32* dereferenceable(4)) unnamed_addr #4

declare void (i8*)* @_ZN6icu_697UVector10setDeleterEPFvPvE(%"class.icu_69::UVector"*, void (i8*)*) local_unnamed_addr #4

declare void @uprv_deleteUObject_69(i8*) #4

declare void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"*, i8*, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::UnicodeString"* @_ZN6icu_6924PluralKeywordEnumeration5snextER10UErrorCode(%"class.icu_69::PluralKeywordEnumeration"*, i32* nocapture readonly dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 2, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 2
  %13 = add nsw i32 %7, 1
  store i32 %13, i32* %6, align 4
  %14 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %12, i32 %7) #15
  %15 = bitcast i8* %14 to %"class.icu_69::UnicodeString"*
  br label %16

16:                                               ; preds = %5, %2, %11
  %17 = phi %"class.icu_69::UnicodeString"* [ %15, %11 ], [ null, %2 ], [ null, %5 ]
  ret %"class.icu_69::UnicodeString"* %17
}

declare i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"*, i32) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6924PluralKeywordEnumeration5resetER10UErrorCode(%"class.icu_69::PluralKeywordEnumeration"* nocapture, i32* nocapture readnone dereferenceable(4)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6924PluralKeywordEnumeration5countER10UErrorCode(%"class.icu_69::PluralKeywordEnumeration"* nocapture readonly, i32* nocapture readnone dereferenceable(4)) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 2, i32 1
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6924PluralKeywordEnumerationD2Ev(%"class.icu_69::PluralKeywordEnumeration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6924PluralKeywordEnumerationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 2
  tail call void @_ZN6icu_697UVectorD1Ev(%"class.icu_69::UVector"* %3) #15
  %4 = bitcast %"class.icu_69::PluralKeywordEnumeration"* %0 to %"class.icu_69::StringEnumeration"*
  tail call void @_ZN6icu_6917StringEnumerationD2Ev(%"class.icu_69::StringEnumeration"* %4) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UVectorD1Ev(%"class.icu_69::UVector"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6icu_6917StringEnumerationD2Ev(%"class.icu_69::StringEnumeration"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6924PluralKeywordEnumerationD0Ev(%"class.icu_69::PluralKeywordEnumeration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6924PluralKeywordEnumerationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::PluralKeywordEnumeration", %"class.icu_69::PluralKeywordEnumeration"* %0, i64 0, i32 2
  tail call void @_ZN6icu_697UVectorD1Ev(%"class.icu_69::UVector"* %3) #15
  %4 = bitcast %"class.icu_69::PluralKeywordEnumeration"* %0 to %"class.icu_69::StringEnumeration"*
  tail call void @_ZN6icu_6917StringEnumerationD2Ev(%"class.icu_69::StringEnumeration"* %4) #15
  %5 = bitcast %"class.icu_69::PluralKeywordEnumeration"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %5) #15
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalC2Edilii(%"class.icu_69::FixedDecimal"* nocapture, double, i32, i64, i32, i32) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.icu_69::FixedDecimal"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = fcmp olt double %1, 0.000000e+00
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %9, i8* %10, align 1
  %11 = tail call double @llvm.fabs.f64(double %1) #15
  %12 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %11, double* %12, align 8
  %13 = tail call signext i8 @uprv_isNaN_69(double %11) #15
  %14 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %13, i8* %14, align 2
  %15 = load double, double* %12, align 8
  %16 = tail call signext i8 @uprv_isInfinite_69(double %15) #15
  %17 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %16, i8* %17, align 1
  %18 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  %19 = icmp eq i32 %4, 0
  %20 = select i1 %19, i32 %5, i32 %4
  store i32 %20, i32* %18, align 8
  %21 = load i8, i8* %14, align 2
  %22 = or i8 %21, %16
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %28, align 8
  br label %48

29:                                               ; preds = %6
  %30 = load double, double* %12, align 8
  %31 = fptosi double %30 to i64
  %32 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %31, i64* %32, align 8
  %33 = sitofp i64 %31 to double
  %34 = fcmp oeq double %30, %33
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %35, i8* %36, align 4
  %37 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %2, i32* %37, align 8
  %38 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %3, i64* %38, align 8
  %39 = icmp eq i64 %3, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %29
  %41 = srem i64 %3, 10
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %40, %43
  %44 = phi i64 [ %45, %43 ], [ %3, %40 ]
  %45 = sdiv i64 %44, 10
  %46 = srem i64 %45, 10
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %43, label %48

48:                                               ; preds = %43, %40, %24, %29
  %49 = phi i64 [ 0, %29 ], [ 0, %24 ], [ %3, %40 ], [ %45, %43 ]
  %50 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %49, i64* %50, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimal4initEdilii(%"class.icu_69::FixedDecimal"* nocapture, double, i32, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = fcmp olt double %1, 0.000000e+00
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %8, i8* %9, align 1
  %10 = tail call double @llvm.fabs.f64(double %1)
  %11 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %10, double* %11, align 8
  %12 = tail call signext i8 @uprv_isNaN_69(double %10) #15
  %13 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %12, i8* %13, align 2
  %14 = load double, double* %11, align 8
  %15 = tail call signext i8 @uprv_isInfinite_69(double %14) #15
  %16 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %15, i8* %16, align 1
  %17 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  %18 = icmp eq i32 %4, 0
  %19 = select i1 %18, i32 %5, i32 %4
  store i32 %19, i32* %17, align 8
  %20 = load i8, i8* %13, align 2
  %21 = or i8 %20, %15
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %27, align 8
  br label %47

28:                                               ; preds = %6
  %29 = load double, double* %11, align 8
  %30 = fptosi double %29 to i64
  %31 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %30, i64* %31, align 8
  %32 = sitofp i64 %30 to double
  %33 = fcmp oeq double %29, %32
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %34, i8* %35, align 4
  %36 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %2, i32* %36, align 8
  %37 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %3, i64* %37, align 8
  %38 = icmp eq i64 %3, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %28
  %40 = srem i64 %3, 10
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %39, %42
  %43 = phi i64 [ %44, %42 ], [ %3, %39 ]
  %44 = sdiv i64 %43, 10
  %45 = srem i64 %44, 10
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %42, label %47

47:                                               ; preds = %42, %39, %28, %23
  %48 = phi i64 [ 0, %23 ], [ 0, %28 ], [ %3, %39 ], [ %44, %42 ]
  %49 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %48, i64* %49, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalC2Edili(%"class.icu_69::FixedDecimal"* nocapture, double, i32, i64, i32) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.icu_69::FixedDecimal"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = fcmp olt double %1, 0.000000e+00
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %8, i8* %9, align 1
  %10 = tail call double @llvm.fabs.f64(double %1) #15
  %11 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %10, double* %11, align 8
  %12 = tail call signext i8 @uprv_isNaN_69(double %10) #15
  %13 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %12, i8* %13, align 2
  %14 = load double, double* %11, align 8
  %15 = tail call signext i8 @uprv_isInfinite_69(double %14) #15
  %16 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %15, i8* %16, align 1
  %17 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 %4, i32* %17, align 8
  %18 = load i8, i8* %13, align 2
  %19 = or i8 %18, %15
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %25, align 8
  br label %45

26:                                               ; preds = %5
  %27 = load double, double* %11, align 8
  %28 = fptosi double %27 to i64
  %29 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %28, i64* %29, align 8
  %30 = sitofp i64 %28 to double
  %31 = fcmp oeq double %27, %30
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %32, i8* %33, align 4
  %34 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %2, i32* %34, align 8
  %35 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %3, i64* %35, align 8
  %36 = icmp eq i64 %3, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %26
  %38 = srem i64 %3, 10
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %37, %40
  %41 = phi i64 [ %42, %40 ], [ %3, %37 ]
  %42 = sdiv i64 %41, 10
  %43 = srem i64 %42, 10
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %40, label %45

45:                                               ; preds = %40, %37, %21, %26
  %46 = phi i64 [ 0, %26 ], [ 0, %21 ], [ %3, %37 ], [ %42, %40 ]
  %47 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %46, i64* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimal4initEdili(%"class.icu_69::FixedDecimal"* nocapture, double, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %6 = fcmp olt double %1, 0.000000e+00
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %7, i8* %8, align 1
  %9 = tail call double @llvm.fabs.f64(double %1) #15
  %10 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %9, double* %10, align 8
  %11 = tail call signext i8 @uprv_isNaN_69(double %9) #15
  %12 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %11, i8* %12, align 2
  %13 = load double, double* %10, align 8
  %14 = tail call signext i8 @uprv_isInfinite_69(double %13) #15
  %15 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 %4, i32* %16, align 8
  %17 = load i8, i8* %12, align 2
  %18 = or i8 %17, %14
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %24, align 8
  br label %44

25:                                               ; preds = %5
  %26 = load double, double* %10, align 8
  %27 = fptosi double %26 to i64
  %28 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %27, i64* %28, align 8
  %29 = sitofp i64 %27 to double
  %30 = fcmp oeq double %26, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %31, i8* %32, align 4
  %33 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %2, i32* %33, align 8
  %34 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %3, i64* %34, align 8
  %35 = icmp eq i64 %3, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %25
  %37 = srem i64 %3, 10
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %36, %39
  %40 = phi i64 [ %41, %39 ], [ %3, %36 ]
  %41 = sdiv i64 %40, 10
  %42 = srem i64 %41, 10
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %39, label %44

44:                                               ; preds = %39, %36, %20, %25
  %45 = phi i64 [ 0, %25 ], [ 0, %20 ], [ %3, %36 ], [ %41, %39 ]
  %46 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %45, i64* %46, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalC2Edil(%"class.icu_69::FixedDecimal"* nocapture, double, i32, i64) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.icu_69::FixedDecimal"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = fcmp olt double %1, 0.000000e+00
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %7, i8* %8, align 1
  %9 = tail call double @llvm.fabs.f64(double %1) #15
  %10 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %9, double* %10, align 8
  %11 = tail call signext i8 @uprv_isNaN_69(double %9) #15
  %12 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %11, i8* %12, align 2
  %13 = load double, double* %10, align 8
  %14 = tail call signext i8 @uprv_isInfinite_69(double %13) #15
  %15 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 0, i32* %16, align 8
  %17 = load i8, i8* %12, align 2
  %18 = or i8 %17, %14
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %24, align 8
  br label %44

25:                                               ; preds = %4
  %26 = load double, double* %10, align 8
  %27 = fptosi double %26 to i64
  %28 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %27, i64* %28, align 8
  %29 = sitofp i64 %27 to double
  %30 = fcmp oeq double %26, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %31, i8* %32, align 4
  %33 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %2, i32* %33, align 8
  %34 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %3, i64* %34, align 8
  %35 = icmp eq i64 %3, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %25
  %37 = srem i64 %3, 10
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %36, %39
  %40 = phi i64 [ %41, %39 ], [ %3, %36 ]
  %41 = sdiv i64 %40, 10
  %42 = srem i64 %41, 10
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %39, label %44

44:                                               ; preds = %39, %36, %20, %25
  %45 = phi i64 [ 0, %25 ], [ 0, %20 ], [ %3, %36 ], [ %41, %39 ]
  %46 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %45, i64* %46, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimal4initEdil(%"class.icu_69::FixedDecimal"* nocapture, double, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = fcmp olt double %1, 0.000000e+00
  %6 = zext i1 %5 to i8
  %7 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %6, i8* %7, align 1
  %8 = tail call double @llvm.fabs.f64(double %1) #15
  %9 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %8, double* %9, align 8
  %10 = tail call signext i8 @uprv_isNaN_69(double %8) #15
  %11 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %10, i8* %11, align 2
  %12 = load double, double* %9, align 8
  %13 = tail call signext i8 @uprv_isInfinite_69(double %12) #15
  %14 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %13, i8* %14, align 1
  %15 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 0, i32* %15, align 8
  %16 = load i8, i8* %11, align 2
  %17 = or i8 %16, %13
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %23, align 8
  br label %43

24:                                               ; preds = %4
  %25 = load double, double* %9, align 8
  %26 = fptosi double %25 to i64
  %27 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %26, i64* %27, align 8
  %28 = sitofp i64 %26 to double
  %29 = fcmp oeq double %25, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %30, i8* %31, align 4
  %32 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %2, i32* %32, align 8
  %33 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %3, i64* %33, align 8
  %34 = icmp eq i64 %3, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %24
  %36 = srem i64 %3, 10
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %35, %38
  %39 = phi i64 [ %40, %38 ], [ %3, %35 ]
  %40 = sdiv i64 %39, 10
  %41 = srem i64 %40, 10
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %38, label %43

43:                                               ; preds = %38, %35, %19, %24
  %44 = phi i64 [ 0, %24 ], [ 0, %19 ], [ %3, %35 ], [ %40, %38 ]
  %45 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %44, i64* %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalC2Edi(%"class.icu_69::FixedDecimal"* nocapture, double, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.icu_69::FixedDecimal"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = icmp eq i32 %2, 0
  %6 = tail call double @llvm.floor.f64(double %1) #15
  %7 = fcmp oeq double %6, %1
  %8 = or i1 %5, %7
  br i1 %8, label %40, label %9

9:                                                ; preds = %3
  %10 = tail call signext i8 @uprv_isNaN_69(double %1) #15
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %40

12:                                               ; preds = %9
  %13 = tail call signext i8 @uprv_isPositiveInfinity_69(double %1) #15
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %40

15:                                               ; preds = %12
  %16 = tail call double @llvm.fabs.f64(double %1) #15
  %17 = tail call double @llvm.floor.f64(double %16) #15
  %18 = fsub double %16, %17
  switch i32 %2, label %31 [
    i32 1, label %19
    i32 2, label %23
    i32 3, label %27
  ]

19:                                               ; preds = %15
  %20 = fmul double %18, 1.000000e+01
  %21 = fadd double %20, 5.000000e-01
  %22 = fptosi double %21 to i64
  br label %40

23:                                               ; preds = %15
  %24 = fmul double %18, 1.000000e+02
  %25 = fadd double %24, 5.000000e-01
  %26 = fptosi double %25 to i64
  br label %40

27:                                               ; preds = %15
  %28 = fmul double %18, 1.000000e+03
  %29 = fadd double %28, 5.000000e-01
  %30 = fptosi double %29 to i64
  br label %40

31:                                               ; preds = %15
  %32 = sitofp i32 %2 to double
  %33 = tail call double @pow(double 1.000000e+01, double %32) #15
  %34 = fmul double %18, %33
  %35 = fadd double %34, 5.000000e-01
  %36 = tail call double @llvm.floor.f64(double %35) #15
  %37 = fcmp ult double %36, 0x43E0000000000000
  %38 = fptosi double %36 to i64
  %39 = select i1 %37, i64 %38, i64 9223372036854775807
  br label %40

40:                                               ; preds = %3, %9, %12, %19, %23, %27, %31
  %41 = phi i64 [ 0, %12 ], [ 0, %9 ], [ 0, %3 ], [ %30, %27 ], [ %26, %23 ], [ %22, %19 ], [ %39, %31 ]
  %42 = fcmp olt double %1, 0.000000e+00
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %43, i8* %44, align 1
  %45 = tail call double @llvm.fabs.f64(double %1) #15
  %46 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %45, double* %46, align 8
  %47 = tail call signext i8 @uprv_isNaN_69(double %45) #15
  %48 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %47, i8* %48, align 2
  %49 = load double, double* %46, align 8
  %50 = tail call signext i8 @uprv_isInfinite_69(double %49) #15
  %51 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %50, i8* %51, align 1
  %52 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 0, i32* %52, align 8
  %53 = load i8, i8* %48, align 2
  %54 = or i8 %53, %50
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %40
  %57 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %57, align 8
  %58 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %58, align 4
  %59 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %60, align 8
  br label %80

61:                                               ; preds = %40
  %62 = load double, double* %46, align 8
  %63 = fptosi double %62 to i64
  %64 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %63, i64* %64, align 8
  %65 = sitofp i64 %63 to double
  %66 = fcmp oeq double %62, %65
  %67 = zext i1 %66 to i8
  %68 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %67, i8* %68, align 4
  %69 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %2, i32* %69, align 8
  %70 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %41, i64* %70, align 8
  %71 = icmp eq i64 %41, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %61
  %73 = srem i64 %41, 10
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %72, %75
  %76 = phi i64 [ %77, %75 ], [ %41, %72 ]
  %77 = sdiv i64 %76, 10
  %78 = srem i64 %77, 10
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %75, label %80

80:                                               ; preds = %75, %72, %56, %61
  %81 = phi i64 [ 0, %61 ], [ 0, %56 ], [ %41, %72 ], [ %77, %75 ]
  %82 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %81, i64* %82, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6icu_6912FixedDecimal19getFractionalDigitsEdi(double, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = tail call double @llvm.floor.f64(double %0)
  %5 = fcmp oeq double %4, %0
  %6 = or i1 %3, %5
  br i1 %6, label %38, label %7

7:                                                ; preds = %2
  %8 = tail call signext i8 @uprv_isNaN_69(double %0) #15
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %7
  %11 = tail call signext i8 @uprv_isPositiveInfinity_69(double %0) #15
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %38

13:                                               ; preds = %10
  %14 = tail call double @llvm.fabs.f64(double %0)
  %15 = tail call double @llvm.floor.f64(double %14)
  %16 = fsub double %14, %15
  switch i32 %1, label %29 [
    i32 1, label %17
    i32 2, label %21
    i32 3, label %25
  ]

17:                                               ; preds = %13
  %18 = fmul double %16, 1.000000e+01
  %19 = fadd double %18, 5.000000e-01
  %20 = fptosi double %19 to i64
  br label %38

21:                                               ; preds = %13
  %22 = fmul double %16, 1.000000e+02
  %23 = fadd double %22, 5.000000e-01
  %24 = fptosi double %23 to i64
  br label %38

25:                                               ; preds = %13
  %26 = fmul double %16, 1.000000e+03
  %27 = fadd double %26, 5.000000e-01
  %28 = fptosi double %27 to i64
  br label %38

29:                                               ; preds = %13
  %30 = sitofp i32 %1 to double
  %31 = tail call double @pow(double 1.000000e+01, double %30) #15
  %32 = fmul double %16, %31
  %33 = fadd double %32, 5.000000e-01
  %34 = tail call double @llvm.floor.f64(double %33)
  %35 = fcmp ult double %34, 0x43E0000000000000
  %36 = fptosi double %34 to i64
  %37 = select i1 %35, i64 %36, i64 9223372036854775807
  br label %38

38:                                               ; preds = %17, %21, %25, %29, %2, %7, %10
  %39 = phi i64 [ 0, %10 ], [ 0, %7 ], [ 0, %2 ], [ %28, %25 ], [ %24, %21 ], [ %20, %17 ], [ %37, %29 ]
  ret i64 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalC2Ed(%"class.icu_69::FixedDecimal"* nocapture, double) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.icu_69::FixedDecimal"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  tail call void @_ZN6icu_6912FixedDecimal4initEd(%"class.icu_69::FixedDecimal"* %0, double %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimal4initEd(%"class.icu_69::FixedDecimal"* nocapture, double) local_unnamed_addr #0 align 2 {
  %3 = alloca [30 x i8], align 16
  %4 = tail call double @llvm.fabs.f64(double %1) #15
  %5 = tail call double @llvm.floor.f64(double %4) #15
  %6 = fcmp oeq double %4, %5
  br i1 %6, label %74, label %7

7:                                                ; preds = %2
  %8 = fmul double %4, 1.000000e+01
  %9 = tail call double @llvm.floor.f64(double %8) #15
  %10 = fcmp oeq double %8, %9
  br i1 %10, label %39, label %22

11:                                               ; preds = %14, %30
  %12 = phi i32 [ 15, %30 ], [ %17, %14 ]
  %13 = sub nsw i32 %12, %35
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %31) #15
  br label %39

14:                                               ; preds = %30, %14
  %15 = phi i64 [ %18, %14 ], [ 16, %30 ]
  %16 = phi i32 [ %17, %14 ], [ 15, %30 ]
  %17 = add nsw i32 %16, -1
  %18 = add nsw i64 %15, -1
  %19 = getelementptr inbounds [30 x i8], [30 x i8]* %3, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 48
  br i1 %21, label %14, label %11

22:                                               ; preds = %7
  %23 = fmul double %4, 1.000000e+02
  %24 = tail call double @llvm.floor.f64(double %23) #15
  %25 = fcmp oeq double %23, %24
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = fmul double %4, 1.000000e+03
  %28 = tail call double @llvm.floor.f64(double %27) #15
  %29 = fcmp oeq double %27, %28
  br i1 %29, label %39, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds [30 x i8], [30 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %31) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 30, i1 false) #15
  %32 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), double %4) #15
  %33 = getelementptr inbounds [30 x i8], [30 x i8]* %3, i64 0, i64 18
  %34 = call i64 @strtol(i8* nocapture %33, i8** null, i32 10) #15
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds [30 x i8], [30 x i8]* %3, i64 0, i64 16
  %37 = load i8, i8* %36, align 16
  %38 = icmp eq i8 %37, 48
  br i1 %38, label %14, label %11

39:                                               ; preds = %7, %11, %22, %26
  %40 = phi i32 [ %13, %11 ], [ 1, %7 ], [ 2, %22 ], [ 3, %26 ]
  %41 = icmp eq i32 %40, 0
  %42 = tail call double @llvm.floor.f64(double %1) #15
  %43 = fcmp oeq double %42, %1
  %44 = or i1 %43, %41
  br i1 %44, label %74, label %45

45:                                               ; preds = %39
  %46 = tail call signext i8 @uprv_isNaN_69(double %1) #15
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %74

48:                                               ; preds = %45
  %49 = tail call signext i8 @uprv_isPositiveInfinity_69(double %1) #15
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %74

51:                                               ; preds = %48
  %52 = fsub double %4, %5
  switch i32 %40, label %65 [
    i32 1, label %53
    i32 2, label %57
    i32 3, label %61
  ]

53:                                               ; preds = %51
  %54 = fmul double %52, 1.000000e+01
  %55 = fadd double %54, 5.000000e-01
  %56 = fptosi double %55 to i64
  br label %74

57:                                               ; preds = %51
  %58 = fmul double %52, 1.000000e+02
  %59 = fadd double %58, 5.000000e-01
  %60 = fptosi double %59 to i64
  br label %74

61:                                               ; preds = %51
  %62 = fmul double %52, 1.000000e+03
  %63 = fadd double %62, 5.000000e-01
  %64 = fptosi double %63 to i64
  br label %74

65:                                               ; preds = %51
  %66 = sitofp i32 %40 to double
  %67 = tail call double @pow(double 1.000000e+01, double %66) #15
  %68 = fmul double %52, %67
  %69 = fadd double %68, 5.000000e-01
  %70 = tail call double @llvm.floor.f64(double %69) #15
  %71 = fcmp ult double %70, 0x43E0000000000000
  %72 = fptosi double %70 to i64
  %73 = select i1 %71, i64 %72, i64 9223372036854775807
  br label %74

74:                                               ; preds = %2, %39, %45, %48, %53, %57, %61, %65
  %75 = phi i32 [ %40, %48 ], [ %40, %45 ], [ %40, %39 ], [ 3, %61 ], [ 2, %57 ], [ 1, %53 ], [ %40, %65 ], [ 0, %2 ]
  %76 = phi i64 [ 0, %48 ], [ 0, %45 ], [ 0, %39 ], [ %64, %61 ], [ %60, %57 ], [ %56, %53 ], [ %73, %65 ], [ 0, %2 ]
  %77 = fcmp olt double %1, 0.000000e+00
  %78 = zext i1 %77 to i8
  %79 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %78, i8* %79, align 1
  %80 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %4, double* %80, align 8
  %81 = tail call signext i8 @uprv_isNaN_69(double %4) #15
  %82 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %81, i8* %82, align 2
  %83 = load double, double* %80, align 8
  %84 = tail call signext i8 @uprv_isInfinite_69(double %83) #15
  %85 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %84, i8* %85, align 1
  %86 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 0, i32* %86, align 8
  %87 = load i8, i8* %82, align 2
  %88 = or i8 %87, %84
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %74
  %91 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %91, align 8
  %92 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %92, align 4
  %93 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %93, align 8
  %94 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %94, align 8
  br label %114

95:                                               ; preds = %74
  %96 = load double, double* %80, align 8
  %97 = fptosi double %96 to i64
  %98 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %97, i64* %98, align 8
  %99 = sitofp i64 %97 to double
  %100 = fcmp oeq double %96, %99
  %101 = zext i1 %100 to i8
  %102 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %101, i8* %102, align 4
  %103 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %75, i32* %103, align 8
  %104 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %76, i64* %104, align 8
  %105 = icmp eq i64 %76, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %95
  %107 = srem i64 %76, 10
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %114

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %111, %109 ], [ %76, %106 ]
  %111 = sdiv i64 %110, 10
  %112 = srem i64 %111, 10
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %109, label %114

114:                                              ; preds = %109, %106, %90, %95
  %115 = phi i64 [ 0, %95 ], [ 0, %90 ], [ %76, %106 ], [ %111, %109 ]
  %116 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %115, i64* %116, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalC2Ev(%"class.icu_69::FixedDecimal"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.icu_69::FixedDecimal"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %4, align 8
  %5 = tail call signext i8 @uprv_isNaN_69(double 0.000000e+00) #15
  %6 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %5, i8* %6, align 2
  %7 = load double, double* %4, align 8
  %8 = tail call signext i8 @uprv_isInfinite_69(double %7) #15
  %9 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %8, i8* %9, align 1
  %10 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 0, i32* %10, align 8
  %11 = load i8, i8* %6, align 2
  %12 = or i8 %11, %8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %1
  %15 = load double, double* %4, align 8
  %16 = fptosi double %15 to i64
  %17 = sitofp i64 %16 to double
  %18 = fcmp oeq double %15, %17
  %19 = zext i1 %18 to i8
  br label %20

20:                                               ; preds = %1, %14
  %21 = phi i64 [ %16, %14 ], [ 0, %1 ]
  %22 = phi i8 [ %19, %14 ], [ 0, %1 ]
  %23 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %22, i8* %24, align 4
  %25 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  %27 = bitcast i64* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalC2ERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::FixedDecimal"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.icu_69::CharString", align 8
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.icu_69::UnicodeString", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.icu_69::number::impl::DecimalQuantity", align 8
  %10 = bitcast %"class.icu_69::FixedDecimal"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  %11 = bitcast %"class.icu_69::CharString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 64, i1 false)
  %12 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 0, i32 3, i64 0
  store i8* %13, i8** %12, align 8
  %14 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 0, i32 1
  store i32 40, i32* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 0, i32 2
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 1
  store i32 0, i32* %16, align 8
  store i8 0, i8* %13, align 1
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %18 = load i16, i16* %17, align 8
  %19 = icmp slt i16 %18, 0
  %20 = lshr i16 %18, 5
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = select i1 %19, i32 %23, i32 %21
  %25 = call i32 @_ZNK6icu_6913UnicodeString9doIndexOfEDsii(%"class.icu_69::UnicodeString"* %1, i16 zeroext 101, i32 0, i32 %24) #15
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %3
  %28 = load i16, i16* %17, align 8
  %29 = icmp slt i16 %28, 0
  %30 = lshr i16 %28, 5
  %31 = zext i16 %30 to i32
  %32 = load i32, i32* %22, align 4
  %33 = select i1 %29, i32 %32, i32 %31
  %34 = call i32 @_ZNK6icu_6913UnicodeString9doIndexOfEDsii(%"class.icu_69::UnicodeString"* %1, i16 zeroext 69, i32 0, i32 %33) #15
  br label %35

35:                                               ; preds = %27, %3
  %36 = phi i32 [ %34, %27 ], [ %25, %3 ]
  %37 = load i16, i16* %17, align 8
  %38 = icmp slt i16 %37, 0
  %39 = lshr i16 %37, 5
  %40 = zext i16 %39 to i32
  %41 = load i32, i32* %22, align 4
  %42 = select i1 %38, i32 %41, i32 %40
  %43 = call i32 @_ZNK6icu_6913UnicodeString9doIndexOfEDsii(%"class.icu_69::UnicodeString"* %1, i16 zeroext 99, i32 0, i32 %42) #15
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %35
  %46 = load i16, i16* %17, align 8
  %47 = icmp slt i16 %46, 0
  %48 = lshr i16 %46, 5
  %49 = zext i16 %48 to i32
  %50 = load i32, i32* %22, align 4
  %51 = select i1 %47, i32 %50, i32 %49
  %52 = call i32 @_ZNK6icu_6913UnicodeString9doIndexOfEDsii(%"class.icu_69::UnicodeString"* %1, i16 zeroext 67, i32 0, i32 %51) #15
  br label %53

53:                                               ; preds = %45, %35
  %54 = phi i32 [ %52, %45 ], [ %43, %35 ]
  %55 = icmp sgt i32 %36, -1
  br i1 %55, label %56, label %62

56:                                               ; preds = %53
  %57 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %57) #15
  call void @_ZNK6icu_6913UnicodeString13tempSubStringEii(%"class.icu_69::UnicodeString"* nonnull sret %5, %"class.icu_69::UnicodeString"* %1, i32 0, i32 %36) #15
  %58 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString20appendInvariantCharsERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::CharString"* nonnull %4, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5, i32* dereferenceable(4) %2) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %57) #15
  %59 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #15
  %60 = add nuw nsw i32 %36, 1
  store i32 %60, i32* %6, align 4
  %61 = call i32 @_ZN6icu_6911ICU_Utility17parseAsciiIntegerERKNS_13UnicodeStringERi(%"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32* nonnull dereferenceable(4) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #15
  br label %72

62:                                               ; preds = %53
  %63 = icmp sgt i32 %54, -1
  br i1 %63, label %64, label %70

64:                                               ; preds = %62
  %65 = bitcast %"class.icu_69::UnicodeString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %65) #15
  call void @_ZNK6icu_6913UnicodeString13tempSubStringEii(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::UnicodeString"* %1, i32 0, i32 %54) #15
  %66 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString20appendInvariantCharsERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::CharString"* nonnull %4, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7, i32* dereferenceable(4) %2) #15
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %65) #15
  %67 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #15
  %68 = add nuw nsw i32 %54, 1
  store i32 %68, i32* %8, align 4
  %69 = call i32 @_ZN6icu_6911ICU_Utility17parseAsciiIntegerERKNS_13UnicodeStringERi(%"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32* nonnull dereferenceable(4) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #15
  br label %72

70:                                               ; preds = %62
  %71 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString20appendInvariantCharsERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::CharString"* nonnull %4, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32* dereferenceable(4) %2) #15
  br label %72

72:                                               ; preds = %64, %70, %56
  %73 = phi i32 [ %36, %56 ], [ %54, %64 ], [ %36, %70 ]
  %74 = phi i32 [ %61, %56 ], [ %69, %64 ], [ 0, %70 ]
  %75 = bitcast %"class.icu_69::number::impl::DecimalQuantity"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %75) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* align 8 bitcast (<{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, { { i8*, i32, [4 x i8] } }, i8, i8, [6 x i8] }>* @__const.FixedDecimal.dl to i8*), i64 72, i1 false)
  call void @_ZN6icu_696number4impl15DecimalQuantityC1Ev(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %9) #15
  %76 = load i8*, i8** %12, align 8
  %77 = load i32, i32* %16, align 8
  %78 = call dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity14setToDecNumberENS_11StringPieceER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %9, i8* %76, i32 %77, i32* dereferenceable(4) %2) #15
  %79 = load i32, i32* %2, align 4
  %80 = icmp slt i32 %79, 1
  br i1 %80, label %107, label %81

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 0, i8* %82, align 1
  %83 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %83, align 8
  %84 = call signext i8 @uprv_isNaN_69(double 0.000000e+00) #15
  %85 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %84, i8* %85, align 2
  %86 = load double, double* %83, align 8
  %87 = call signext i8 @uprv_isInfinite_69(double %86) #15
  %88 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %87, i8* %88, align 1
  %89 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 0, i32* %89, align 8
  %90 = load i8, i8* %85, align 2
  %91 = or i8 %90, %87
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %99

93:                                               ; preds = %81
  %94 = load double, double* %83, align 8
  %95 = fptosi double %94 to i64
  %96 = sitofp i64 %95 to double
  %97 = fcmp oeq double %94, %96
  %98 = zext i1 %97 to i8
  br label %99

99:                                               ; preds = %81, %93
  %100 = phi i64 [ %95, %93 ], [ 0, %81 ]
  %101 = phi i8 [ %98, %93 ], [ 0, %81 ]
  %102 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %100, i64* %102, align 8
  %103 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %101, i8* %103, align 4
  %104 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %104, align 8
  %105 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  %106 = bitcast i64* %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false)
  br label %242

107:                                              ; preds = %72
  %108 = load i16, i16* %17, align 8
  %109 = icmp slt i16 %108, 0
  %110 = lshr i16 %108, 5
  %111 = zext i16 %110 to i32
  %112 = load i32, i32* %22, align 4
  %113 = select i1 %109, i32 %112, i32 %111
  %114 = call i32 @_ZNK6icu_6913UnicodeString9doIndexOfEDsii(%"class.icu_69::UnicodeString"* %1, i16 zeroext 46, i32 0, i32 %113) #15
  %115 = call double @_ZNK6icu_696number4impl15DecimalQuantity8toDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %9) #15
  %116 = icmp eq i32 %114, -1
  br i1 %116, label %117, label %146

117:                                              ; preds = %107
  %118 = fcmp olt double %115, 0.000000e+00
  %119 = zext i1 %118 to i8
  %120 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %119, i8* %120, align 1
  %121 = call double @llvm.fabs.f64(double %115) #15
  %122 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %121, double* %122, align 8
  %123 = call signext i8 @uprv_isNaN_69(double %121) #15
  %124 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %123, i8* %124, align 2
  %125 = load double, double* %122, align 8
  %126 = call signext i8 @uprv_isInfinite_69(double %125) #15
  %127 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 %74, i32* %128, align 8
  %129 = load i8, i8* %124, align 2
  %130 = or i8 %129, %126
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %138

132:                                              ; preds = %117
  %133 = load double, double* %122, align 8
  %134 = fptosi double %133 to i64
  %135 = sitofp i64 %134 to double
  %136 = fcmp oeq double %133, %135
  %137 = zext i1 %136 to i8
  br label %138

138:                                              ; preds = %117, %132
  %139 = phi i64 [ %134, %132 ], [ 0, %117 ]
  %140 = phi i8 [ %137, %132 ], [ 0, %117 ]
  %141 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %139, i64* %141, align 8
  %142 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %140, i8* %142, align 4
  %143 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %143, align 8
  %144 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  %145 = bitcast i64* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 16, i1 false)
  br label %242

146:                                              ; preds = %107
  %147 = icmp slt i32 %73, 0
  br i1 %147, label %148, label %156

148:                                              ; preds = %146
  %149 = load i16, i16* %17, align 8
  %150 = icmp slt i16 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %148
  %152 = lshr i16 %149, 5
  %153 = zext i16 %152 to i32
  br label %158

154:                                              ; preds = %148
  %155 = load i32, i32* %22, align 4
  br label %158

156:                                              ; preds = %146
  %157 = load i32, i32* %16, align 8
  br label %158

158:                                              ; preds = %154, %151, %156
  %159 = phi i32 [ %157, %156 ], [ %153, %151 ], [ %155, %154 ]
  %160 = xor i32 %114, -1
  %161 = add i32 %159, %160
  %162 = icmp eq i32 %161, 0
  %163 = call double @llvm.floor.f64(double %115) #15
  %164 = fcmp oeq double %163, %115
  %165 = or i1 %164, %162
  br i1 %165, label %197, label %166

166:                                              ; preds = %158
  %167 = call signext i8 @uprv_isNaN_69(double %115) #15
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %197

169:                                              ; preds = %166
  %170 = call signext i8 @uprv_isPositiveInfinity_69(double %115) #15
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %172, label %197

172:                                              ; preds = %169
  %173 = call double @llvm.fabs.f64(double %115) #15
  %174 = call double @llvm.floor.f64(double %173) #15
  %175 = fsub double %173, %174
  switch i32 %161, label %188 [
    i32 1, label %176
    i32 2, label %180
    i32 3, label %184
  ]

176:                                              ; preds = %172
  %177 = fmul double %175, 1.000000e+01
  %178 = fadd double %177, 5.000000e-01
  %179 = fptosi double %178 to i64
  br label %197

180:                                              ; preds = %172
  %181 = fmul double %175, 1.000000e+02
  %182 = fadd double %181, 5.000000e-01
  %183 = fptosi double %182 to i64
  br label %197

184:                                              ; preds = %172
  %185 = fmul double %175, 1.000000e+03
  %186 = fadd double %185, 5.000000e-01
  %187 = fptosi double %186 to i64
  br label %197

188:                                              ; preds = %172
  %189 = sitofp i32 %161 to double
  %190 = call double @pow(double 1.000000e+01, double %189) #15
  %191 = fmul double %175, %190
  %192 = fadd double %191, 5.000000e-01
  %193 = call double @llvm.floor.f64(double %192) #15
  %194 = fcmp ult double %193, 0x43E0000000000000
  %195 = fptosi double %193 to i64
  %196 = select i1 %194, i64 %195, i64 9223372036854775807
  br label %197

197:                                              ; preds = %158, %166, %169, %176, %180, %184, %188
  %198 = phi i64 [ 0, %169 ], [ 0, %166 ], [ 0, %158 ], [ %187, %184 ], [ %183, %180 ], [ %179, %176 ], [ %196, %188 ]
  %199 = fcmp olt double %115, 0.000000e+00
  %200 = zext i1 %199 to i8
  %201 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %200, i8* %201, align 1
  %202 = call double @llvm.fabs.f64(double %115) #15
  %203 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %202, double* %203, align 8
  %204 = call signext i8 @uprv_isNaN_69(double %202) #15
  %205 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %204, i8* %205, align 2
  %206 = load double, double* %203, align 8
  %207 = call signext i8 @uprv_isInfinite_69(double %206) #15
  %208 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %207, i8* %208, align 1
  %209 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 %74, i32* %209, align 8
  %210 = load i8, i8* %205, align 2
  %211 = or i8 %210, %207
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %218, label %213

213:                                              ; preds = %197
  %214 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %214, align 8
  %215 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %215, align 4
  %216 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %216, align 8
  %217 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %217, align 8
  br label %232

218:                                              ; preds = %197
  %219 = load double, double* %203, align 8
  %220 = fptosi double %219 to i64
  %221 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %220, i64* %221, align 8
  %222 = sitofp i64 %220 to double
  %223 = fcmp oeq double %219, %222
  %224 = zext i1 %223 to i8
  %225 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %224, i8* %225, align 4
  %226 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %161, i32* %226, align 8
  %227 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %198, i64* %227, align 8
  %228 = icmp eq i64 %198, 0
  br i1 %228, label %232, label %229

229:                                              ; preds = %218
  %230 = srem i64 %198, 10
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %234, label %239

232:                                              ; preds = %218, %213
  %233 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 0, i64* %233, align 8
  br label %242

234:                                              ; preds = %229, %234
  %235 = phi i64 [ %236, %234 ], [ %198, %229 ]
  %236 = sdiv i64 %235, 10
  %237 = srem i64 %236, 10
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %234, label %239

239:                                              ; preds = %234, %229
  %240 = phi i64 [ %198, %229 ], [ %236, %234 ]
  %241 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %240, i64* %241, align 8
  br label %242

242:                                              ; preds = %239, %232, %138, %99
  call void @_ZN6icu_696number4impl15DecimalQuantityD1Ev(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %75) #15
  %243 = load i8, i8* %15, align 4
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %247, label %245

245:                                              ; preds = %242
  %246 = load i8*, i8** %12, align 8
  call void @uprv_free_69(i8* %246) #15
  br label %247

247:                                              ; preds = %242, %245
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #15
  ret void
}

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString20appendInvariantCharsERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::CharString"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZNK6icu_6913UnicodeString13tempSubStringEii(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::UnicodeString"*, i32, i32) local_unnamed_addr #4

declare i32 @_ZN6icu_6911ICU_Utility17parseAsciiIntegerERKNS_13UnicodeStringERi(%"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #4

declare dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity14setToDecNumberENS_11StringPieceER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

declare double @_ZNK6icu_696number4impl15DecimalQuantity8toDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalC2ERKS0_(%"class.icu_69::FixedDecimal"* nocapture, %"class.icu_69::FixedDecimal"* nocapture readonly dereferenceable(64)) unnamed_addr #11 align 2 {
  %3 = bitcast %"class.icu_69::FixedDecimal"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 2
  %5 = bitcast double* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  %8 = bitcast double* %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 6
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 7
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 8
  %25 = load i8, i8* %24, align 4
  %26 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %25, i8* %26, align 4
  %27 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 9
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 10
  %31 = load i8, i8* %30, align 2
  %32 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %31, i8* %32, align 2
  %33 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 11
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %34, i8* %35, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalD2Ev(%"class.icu_69::FixedDecimal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 1
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #15
  %3 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* %3) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N6icu_6912FixedDecimalD1Ev(%"class.icu_69::FixedDecimal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds i32, i32* %2, i64 2
  %4 = bitcast i32* %3 to %"class.icu_69::UObject"*
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %4) #15
  %5 = bitcast i32* %2 to %"class.icu_69::IFixedDecimal"*
  tail call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimalD0Ev(%"class.icu_69::FixedDecimal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 1
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #15
  %3 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* %3) #15
  %4 = bitcast %"class.icu_69::FixedDecimal"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N6icu_6912FixedDecimalD0Ev(%"class.icu_69::FixedDecimal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds i32, i32* %2, i64 2
  %4 = bitcast i32* %3 to %"class.icu_69::UObject"*
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %4) #15
  %5 = bitcast i32* %2 to %"class.icu_69::IFixedDecimal"*
  tail call void @_ZN6icu_6913IFixedDecimalD2Ev(%"class.icu_69::IFixedDecimal"* %5) #15
  %6 = bitcast i32* %2 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimal18createWithExponentEdii(%"class.icu_69::FixedDecimal"* noalias nocapture sret, double, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %2, 0
  %6 = tail call double @llvm.floor.f64(double %1) #15
  %7 = fcmp oeq double %6, %1
  %8 = or i1 %5, %7
  br i1 %8, label %40, label %9

9:                                                ; preds = %4
  %10 = tail call signext i8 @uprv_isNaN_69(double %1) #15
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %40

12:                                               ; preds = %9
  %13 = tail call signext i8 @uprv_isPositiveInfinity_69(double %1) #15
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %40

15:                                               ; preds = %12
  %16 = tail call double @llvm.fabs.f64(double %1) #15
  %17 = tail call double @llvm.floor.f64(double %16) #15
  %18 = fsub double %16, %17
  switch i32 %2, label %31 [
    i32 1, label %19
    i32 2, label %23
    i32 3, label %27
  ]

19:                                               ; preds = %15
  %20 = fmul double %18, 1.000000e+01
  %21 = fadd double %20, 5.000000e-01
  %22 = fptosi double %21 to i64
  br label %40

23:                                               ; preds = %15
  %24 = fmul double %18, 1.000000e+02
  %25 = fadd double %24, 5.000000e-01
  %26 = fptosi double %25 to i64
  br label %40

27:                                               ; preds = %15
  %28 = fmul double %18, 1.000000e+03
  %29 = fadd double %28, 5.000000e-01
  %30 = fptosi double %29 to i64
  br label %40

31:                                               ; preds = %15
  %32 = sitofp i32 %2 to double
  %33 = tail call double @pow(double 1.000000e+01, double %32) #15
  %34 = fmul double %18, %33
  %35 = fadd double %34, 5.000000e-01
  %36 = tail call double @llvm.floor.f64(double %35) #15
  %37 = fcmp ult double %36, 0x43E0000000000000
  %38 = fptosi double %36 to i64
  %39 = select i1 %37, i64 %38, i64 9223372036854775807
  br label %40

40:                                               ; preds = %4, %9, %12, %19, %23, %27, %31
  %41 = phi i64 [ 0, %12 ], [ 0, %9 ], [ 0, %4 ], [ %30, %27 ], [ %26, %23 ], [ %22, %19 ], [ %39, %31 ]
  %42 = bitcast %"class.icu_69::FixedDecimal"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN6icu_6912FixedDecimalE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %42, align 8
  %43 = fcmp olt double %1, 0.000000e+00
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 %44, i8* %45, align 1
  %46 = tail call double @llvm.fabs.f64(double %1) #15
  %47 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %46, double* %47, align 8
  %48 = tail call signext i8 @uprv_isNaN_69(double %46) #15
  %49 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %48, i8* %49, align 2
  %50 = tail call signext i8 @uprv_isInfinite_69(double %46) #15
  %51 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %50, i8* %51, align 1
  %52 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 %3, i32* %52, align 8
  %53 = or i8 %50, %48
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %40
  %56 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %59, align 8
  br label %78

60:                                               ; preds = %40
  %61 = fptosi double %46 to i64
  %62 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %61, i64* %62, align 8
  %63 = sitofp i64 %61 to double
  %64 = fcmp oeq double %46, %63
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %65, i8* %66, align 4
  %67 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %2, i32* %67, align 8
  %68 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %41, i64* %68, align 8
  %69 = icmp eq i64 %41, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %60
  %71 = srem i64 %41, 10
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %78

73:                                               ; preds = %70, %73
  %74 = phi i64 [ %75, %73 ], [ %41, %70 ]
  %75 = sdiv i64 %74, 10
  %76 = srem i64 %75, 10
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %73, label %78

78:                                               ; preds = %73, %70, %55, %60
  %79 = phi i64 [ 0, %60 ], [ 0, %55 ], [ %41, %70 ], [ %75, %73 ]
  %80 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %79, i64* %80, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6912FixedDecimal8decimalsEd(double) local_unnamed_addr #0 align 2 {
  %2 = alloca [30 x i8], align 16
  %3 = tail call double @llvm.fabs.f64(double %0)
  %4 = tail call double @llvm.floor.f64(double %3)
  %5 = fcmp oeq double %3, %4
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = fmul double %3, 1.000000e+01
  %8 = tail call double @llvm.floor.f64(double %7)
  %9 = fcmp oeq double %7, %8
  br i1 %9, label %21, label %23

10:                                               ; preds = %13, %31
  %11 = phi i32 [ 15, %31 ], [ %16, %13 ]
  %12 = sub nsw i32 %11, %36
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %32) #15
  br label %21

13:                                               ; preds = %31, %13
  %14 = phi i64 [ %17, %13 ], [ 16, %31 ]
  %15 = phi i32 [ %16, %13 ], [ 15, %31 ]
  %16 = add nsw i32 %15, -1
  %17 = add nsw i64 %14, -1
  %18 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 48
  br i1 %20, label %13, label %10

21:                                               ; preds = %1, %6, %23, %27, %10
  %22 = phi i32 [ %12, %10 ], [ 0, %1 ], [ 1, %6 ], [ 2, %23 ], [ 3, %27 ]
  ret i32 %22

23:                                               ; preds = %6
  %24 = fmul double %3, 1.000000e+02
  %25 = tail call double @llvm.floor.f64(double %24)
  %26 = fcmp oeq double %24, %25
  br i1 %26, label %21, label %27

27:                                               ; preds = %23
  %28 = fmul double %3, 1.000000e+03
  %29 = tail call double @llvm.floor.f64(double %28)
  %30 = fcmp oeq double %28, %29
  br i1 %30, label %21, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %32) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 0, i64 30, i1 false)
  %33 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), double %3) #15
  %34 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 18
  %35 = call i64 @strtol(i8* nocapture %34, i8** null, i32 10) #15
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 16
  %38 = load i8, i8* %37, align 16
  %39 = icmp eq i8 %38, 48
  br i1 %39, label %13, label %10
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #12

declare signext i8 @uprv_isNaN_69(double) local_unnamed_addr #4

declare signext i8 @uprv_isInfinite_69(double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6912FixedDecimal9quickInitEd(%"class.icu_69::FixedDecimal"* nocapture, double) local_unnamed_addr #0 align 2 {
  %3 = tail call double @llvm.fabs.f64(double %1)
  %4 = tail call double @llvm.floor.f64(double %3)
  %5 = fcmp oeq double %3, %4
  br i1 %5, label %46, label %6

6:                                                ; preds = %2
  %7 = fmul double %3, 1.000000e+01
  %8 = tail call double @llvm.floor.f64(double %7)
  %9 = fcmp oeq double %7, %8
  %10 = or i1 %9, %5
  %11 = zext i1 %10 to i8
  br i1 %9, label %12, label %89

12:                                               ; preds = %101, %95, %89, %6
  %13 = phi i8 [ %11, %6 ], [ %94, %89 ], [ %100, %95 ], [ %100, %101 ]
  %14 = phi i32 [ 1, %6 ], [ 2, %89 ], [ 3, %95 ], [ 4, %101 ]
  %15 = icmp eq i8 %13, 0
  br i1 %15, label %87, label %16

16:                                               ; preds = %12
  br i1 %5, label %46, label %17

17:                                               ; preds = %16
  %18 = tail call signext i8 @uprv_isNaN_69(double %3) #15
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = tail call signext i8 @uprv_isPositiveInfinity_69(double %3) #15
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %46

23:                                               ; preds = %20
  %24 = fsub double %3, %4
  switch i32 %14, label %37 [
    i32 1, label %25
    i32 2, label %29
    i32 3, label %33
  ]

25:                                               ; preds = %23
  %26 = fmul double %24, 1.000000e+01
  %27 = fadd double %26, 5.000000e-01
  %28 = fptosi double %27 to i64
  br label %46

29:                                               ; preds = %23
  %30 = fmul double %24, 1.000000e+02
  %31 = fadd double %30, 5.000000e-01
  %32 = fptosi double %31 to i64
  br label %46

33:                                               ; preds = %23
  %34 = fmul double %24, 1.000000e+03
  %35 = fadd double %34, 5.000000e-01
  %36 = fptosi double %35 to i64
  br label %46

37:                                               ; preds = %23
  %38 = sitofp i32 %14 to double
  %39 = tail call double @pow(double 1.000000e+01, double %38) #15
  %40 = fmul double %24, %39
  %41 = fadd double %40, 5.000000e-01
  %42 = tail call double @llvm.floor.f64(double %41) #15
  %43 = fcmp ult double %42, 0x43E0000000000000
  %44 = fptosi double %42 to i64
  %45 = select i1 %43, i64 %44, i64 9223372036854775807
  br label %46

46:                                               ; preds = %2, %16, %17, %20, %25, %29, %33, %37
  %47 = phi i32 [ %14, %20 ], [ %14, %17 ], [ %14, %16 ], [ 3, %33 ], [ 2, %29 ], [ 1, %25 ], [ 4, %37 ], [ 0, %2 ]
  %48 = phi i64 [ 0, %20 ], [ 0, %17 ], [ 0, %16 ], [ %36, %33 ], [ %32, %29 ], [ %28, %25 ], [ %45, %37 ], [ 0, %2 ]
  %49 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 9
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  store double %3, double* %50, align 8
  %51 = tail call signext i8 @uprv_isNaN_69(double %3) #15
  %52 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  store i8 %51, i8* %52, align 2
  %53 = load double, double* %50, align 8
  %54 = tail call signext i8 @uprv_isInfinite_69(double %53) #15
  %55 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  store i8 %54, i8* %55, align 1
  %56 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  store i32 0, i32* %56, align 8
  %57 = load i8, i8* %52, align 2
  %58 = or i8 %57, %54
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 0, i64* %64, align 8
  br label %84

65:                                               ; preds = %46
  %66 = load double, double* %50, align 8
  %67 = fptosi double %66 to i64
  %68 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  store i64 %67, i64* %68, align 8
  %69 = sitofp i64 %67 to double
  %70 = fcmp oeq double %66, %69
  %71 = zext i1 %70 to i8
  %72 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  store i8 %71, i8* %72, align 4
  %73 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  store i32 %47, i32* %73, align 8
  %74 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  store i64 %48, i64* %74, align 8
  %75 = icmp eq i64 %48, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %65
  %77 = srem i64 %48, 10
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %81, %79 ], [ %48, %76 ]
  %81 = sdiv i64 %80, 10
  %82 = srem i64 %81, 10
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %79, label %84

84:                                               ; preds = %79, %76, %60, %65
  %85 = phi i64 [ 0, %65 ], [ 0, %60 ], [ %48, %76 ], [ %81, %79 ]
  %86 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  store i64 %85, i64* %86, align 8
  br label %87

87:                                               ; preds = %84, %12
  %88 = phi i8 [ 0, %12 ], [ 1, %84 ]
  ret i8 %88

89:                                               ; preds = %6
  %90 = fmul double %3, 1.000000e+02
  %91 = tail call double @llvm.floor.f64(double %90)
  %92 = fcmp oeq double %90, %91
  %93 = or i1 %92, %10
  %94 = zext i1 %93 to i8
  br i1 %92, label %12, label %95

95:                                               ; preds = %89
  %96 = fmul double %3, 1.000000e+03
  %97 = tail call double @llvm.floor.f64(double %96)
  %98 = fcmp oeq double %96, %97
  %99 = or i1 %98, %93
  %100 = zext i1 %99 to i8
  br i1 %98, label %12, label %101

101:                                              ; preds = %95
  br label %12
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #12

; Function Attrs: nofree nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #8

declare signext i8 @uprv_isPositiveInfinity_69(double) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6912FixedDecimal26adjustForMinFractionDigitsEi(%"class.icu_69::FixedDecimal"* nocapture, i32) local_unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = sub i32 %1, %4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  br label %10

10:                                               ; preds = %14, %7
  %11 = phi i64 [ %9, %7 ], [ %15, %14 ]
  %12 = phi i32 [ 0, %7 ], [ %16, %14 ]
  %13 = icmp sgt i64 %11, 99999999999999999
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = mul nsw i64 %11, 10
  store i64 %15, i64* %8, align 8
  %16 = add nuw nsw i32 %12, 1
  %17 = icmp eq i32 %16, %5
  br i1 %17, label %18, label %10

18:                                               ; preds = %14, %10
  store i32 %1, i32* %3, align 8
  br label %19

19:                                               ; preds = %18, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK6icu_6912FixedDecimal16getPluralOperandENS_13PluralOperandE(%"class.icu_69::FixedDecimal"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  switch i32 %1, label %30 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %10
    i32 3, label %14
    i32 4, label %18
    i32 6, label %22
    i32 7, label %26
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  %5 = load double, double* %4, align 8
  br label %31

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 6
  %8 = load i64, i64* %7, align 8
  %9 = sitofp i64 %8 to double
  br label %31

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = sitofp i64 %12 to double
  br label %31

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = sitofp i64 %16 to double
  br label %31

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = sitofp i32 %20 to double
  br label %31

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = sitofp i32 %24 to double
  br label %31

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  %28 = load i32, i32* %27, align 8
  %29 = sitofp i32 %28 to double
  br label %31

30:                                               ; preds = %2
  tail call void @abort() #16
  unreachable

31:                                               ; preds = %26, %22, %18, %14, %10, %6, %3
  %32 = phi double [ %29, %26 ], [ %25, %22 ], [ %21, %18 ], [ %17, %14 ], [ %13, %10 ], [ %9, %6 ], [ %5, %3 ]
  ret double %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_6912FixedDecimal5isNaNEv(%"class.icu_69::FixedDecimal"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_6912FixedDecimal10isInfiniteEv(%"class.icu_69::FixedDecimal"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_6912FixedDecimal15hasIntegerValueEv(%"class.icu_69::FixedDecimal"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_6912FixedDecimal15isNanOrInfinityEv(%"class.icu_69::FixedDecimal"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912FixedDecimal28getVisibleFractionDigitCountEv(%"class.icu_69::FixedDecimal"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_6912FixedDecimaleqERKS0_(%"class.icu_69::FixedDecimal"* nocapture readonly, %"class.icu_69::FixedDecimal"* nocapture readonly dereferenceable(64)) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 2
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 2
  %6 = load double, double* %5, align 8
  %7 = fcmp oeq double %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %0, i64 0, i32 7
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %22, %24
  br label %26

26:                                               ; preds = %20, %14, %8, %2
  %27 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %25, %20 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6912FixedDecimal8toStringEv(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::FixedDecimal"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [15 x i8], align 1
  %4 = alloca [20 x i8], align 16
  %5 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %5) #15
  %6 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 -86, i64 15, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 20, i1 false)
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  br i1 %9, label %18, label %12

12:                                               ; preds = %2
  %13 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %5, i64 15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i32 %11) #15
  %14 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 2
  %15 = load double, double* %14, align 8
  %16 = load i32, i32* %7, align 8
  %17 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 20, i8* nonnull %5, double %15, i32 %16) #15
  br label %23

18:                                               ; preds = %2
  %19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %5, i64 15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i32 %11) #15
  %20 = getelementptr inbounds %"class.icu_69::FixedDecimal", %"class.icu_69::FixedDecimal"* %1, i64 0, i32 2
  %21 = load double, double* %20, align 8
  %22 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 20, i8* nonnull %5, double %21) #15
  br label %23

23:                                               ; preds = %18, %12
  call void @_ZN6icu_6913UnicodeStringC1EPKciNS0_10EInvariantE(%"class.icu_69::UnicodeString"* %0, i8* nonnull %6, i32 -1, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6933PluralAvailableLocalesEnumerationC2ER10UErrorCode(%"class.icu_69::PluralAvailableLocalesEnumeration"*, i32* nocapture readonly dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.icu_69::PluralAvailableLocalesEnumeration"* %0 to %"class.icu_69::StringEnumeration"*
  tail call void @_ZN6icu_6917StringEnumerationC2Ev(%"class.icu_69::StringEnumeration"* %3) #15
  %4 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6933PluralAvailableLocalesEnumerationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 2
  %6 = bitcast %struct.UResourceBundle** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  %7 = load i32, i32* %1, align 4
  %8 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = load i32, i32* %1, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  store i32 0, i32* %8, align 4
  %12 = tail call %struct.UResourceBundle* @ures_openDirect_69(i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32* %8) #15
  %13 = tail call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %struct.UResourceBundle* null, i32* %8) #15
  store %struct.UResourceBundle* %13, %struct.UResourceBundle** %5, align 8
  %14 = icmp eq %struct.UResourceBundle* %12, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @ures_close_69(%struct.UResourceBundle* nonnull %12) #15
  br label %16

16:                                               ; preds = %15, %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6933PluralAvailableLocalesEnumerationD2Ev(%"class.icu_69::PluralAvailableLocalesEnumeration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6933PluralAvailableLocalesEnumerationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 2
  %4 = load %struct.UResourceBundle*, %struct.UResourceBundle** %3, align 8
  tail call void @ures_close_69(%struct.UResourceBundle* %4) #15
  %5 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 3
  %6 = load %struct.UResourceBundle*, %struct.UResourceBundle** %5, align 8
  tail call void @ures_close_69(%struct.UResourceBundle* %6) #15
  %7 = bitcast %"class.icu_69::PluralAvailableLocalesEnumeration"* %0 to %"class.icu_69::StringEnumeration"*
  %8 = bitcast %struct.UResourceBundle** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  tail call void @_ZN6icu_6917StringEnumerationD2Ev(%"class.icu_69::StringEnumeration"* %7) #15
  ret void
}

declare void @ures_close_69(%struct.UResourceBundle*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6933PluralAvailableLocalesEnumerationD0Ev(%"class.icu_69::PluralAvailableLocalesEnumeration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6933PluralAvailableLocalesEnumerationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 2
  %4 = load %struct.UResourceBundle*, %struct.UResourceBundle** %3, align 8
  tail call void @ures_close_69(%struct.UResourceBundle* %4) #15
  %5 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 3
  %6 = load %struct.UResourceBundle*, %struct.UResourceBundle** %5, align 8
  tail call void @ures_close_69(%struct.UResourceBundle* %6) #15
  %7 = bitcast %"class.icu_69::PluralAvailableLocalesEnumeration"* %0 to %"class.icu_69::StringEnumeration"*
  %8 = bitcast %struct.UResourceBundle** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #15
  tail call void @_ZN6icu_6917StringEnumerationD2Ev(%"class.icu_69::StringEnumeration"* %7) #15
  %9 = bitcast %"class.icu_69::PluralAvailableLocalesEnumeration"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN6icu_6933PluralAvailableLocalesEnumeration4nextEPiR10UErrorCode(%"class.icu_69::PluralAvailableLocalesEnumeration"* nocapture, i32*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %30

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %2, align 4
  br label %30

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 2
  %13 = load %struct.UResourceBundle*, %struct.UResourceBundle** %12, align 8
  %14 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 3
  %15 = load %struct.UResourceBundle*, %struct.UResourceBundle** %14, align 8
  %16 = tail call %struct.UResourceBundle* @ures_getNextResource_69(%struct.UResourceBundle* %13, %struct.UResourceBundle* %15, i32* %2) #15
  store %struct.UResourceBundle* %16, %struct.UResourceBundle** %14, align 8
  %17 = icmp ne %struct.UResourceBundle* %16, null
  %18 = load i32, i32* %2, align 4
  %19 = icmp slt i32 %18, 1
  %20 = and i1 %17, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %11
  %22 = icmp eq i32 %18, 8
  br i1 %22, label %23, label %30

23:                                               ; preds = %21
  store i32 0, i32* %2, align 4
  br label %30

24:                                               ; preds = %11
  %25 = tail call i8* @ures_getKey_69(%struct.UResourceBundle* nonnull %16) #15
  %26 = icmp eq i32* %1, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = tail call i64 @strlen(i8* %25) #17
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %1, align 4
  br label %30

30:                                               ; preds = %27, %24, %21, %23, %3, %10
  %31 = phi i8* [ null, %10 ], [ null, %3 ], [ null, %23 ], [ null, %21 ], [ %25, %24 ], [ %25, %27 ]
  ret i8* %31
}

declare %struct.UResourceBundle* @ures_getNextResource_69(%struct.UResourceBundle*, %struct.UResourceBundle*, i32*) local_unnamed_addr #4

declare i8* @ures_getKey_69(%struct.UResourceBundle*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6933PluralAvailableLocalesEnumeration5resetER10UErrorCode(%"class.icu_69::PluralAvailableLocalesEnumeration"* nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %13

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  store i32 %7, i32* %1, align 4
  br label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 2
  %12 = load %struct.UResourceBundle*, %struct.UResourceBundle** %11, align 8
  tail call void @ures_resetIterator_69(%struct.UResourceBundle* %12) #15
  br label %13

13:                                               ; preds = %2, %10, %9
  ret void
}

declare void @ures_resetIterator_69(%struct.UResourceBundle*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6933PluralAvailableLocalesEnumeration5countER10UErrorCode(%"class.icu_69::PluralAvailableLocalesEnumeration"* nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %14

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  store i32 %7, i32* %1, align 4
  br label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::PluralAvailableLocalesEnumeration", %"class.icu_69::PluralAvailableLocalesEnumeration"* %0, i64 0, i32 2
  %12 = load %struct.UResourceBundle*, %struct.UResourceBundle** %11, align 8
  %13 = tail call i32 @ures_getSize_69(%struct.UResourceBundle* %12) #15
  br label %14

14:                                               ; preds = %2, %10, %9
  %15 = phi i32 [ 0, %9 ], [ %13, %10 ], [ 0, %2 ]
  ret i32 %15
}

declare i8* @_ZNK6icu_697UObject17getDynamicClassIDEv(%"class.icu_69::UObject"*) unnamed_addr #4

declare %"class.icu_69::StringEnumeration"* @_ZNK6icu_6917StringEnumeration5cloneEv(%"class.icu_69::StringEnumeration"*) unnamed_addr #4

declare i8* @_ZN6icu_6917StringEnumeration4nextEPiR10UErrorCode(%"class.icu_69::StringEnumeration"*, i32*, i32* dereferenceable(4)) unnamed_addr #4

declare i16* @_ZN6icu_6917StringEnumeration5unextEPiR10UErrorCode(%"class.icu_69::StringEnumeration"*, i32*, i32* dereferenceable(4)) unnamed_addr #4

declare signext i8 @_ZNK6icu_6917StringEnumerationeqERKS0_(%"class.icu_69::StringEnumeration"*, %"class.icu_69::StringEnumeration"* dereferenceable(120)) unnamed_addr #4

declare signext i8 @_ZNK6icu_6917StringEnumerationneERKS0_(%"class.icu_69::StringEnumeration"*, %"class.icu_69::StringEnumeration"* dereferenceable(120)) unnamed_addr #4

declare %"class.icu_69::UnicodeString"* @_ZN6icu_6917StringEnumeration5snextER10UErrorCode(%"class.icu_69::StringEnumeration"*, i32* dereferenceable(4)) unnamed_addr #4

declare void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"*) local_unnamed_addr #4

declare i32 @_ZN6icu_6914StandardPlural15indexFromStringERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #4

declare i32 @_ZNK6icu_6913UnicodeString9doIndexOfEDsii(%"class.icu_69::UnicodeString"*, i16 zeroext, i32, i32) local_unnamed_addr #4

declare signext i8 @_ZNK6icu_6913UnicodeString8doEqualsERKS0_i(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32) local_unnamed_addr #4

declare signext i8 @_ZNK6icu_6913UnicodeString9doCompareEiiPKDsii(%"class.icu_69::UnicodeString"*, i32, i32, i16*, i32, i32) local_unnamed_addr #4

declare signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32) local_unnamed_addr #4

declare i16* @ures_getNextString_69(%struct.UResourceBundle*, i32*, i8**, i32*) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString5setToEaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"*, i8 signext, %"class.icu_69::ConstChar16Ptr"*, i32) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"*, i16*, i32, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

declare %"class.icu_69::UnifiedCache"* @_ZN6icu_6912UnifiedCache11getInstanceER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEED2Ev(%"class.icu_69::LocaleCacheKey"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 2
  tail call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* %3) #15
  %4 = bitcast %"class.icu_69::LocaleCacheKey"* %0 to %"class.icu_69::CacheKeyBase"*
  tail call void @_ZN6icu_6912CacheKeyBaseD2Ev(%"class.icu_69::CacheKeyBase"* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6912UnifiedCache3getINS_17SharedPluralRulesEEEvRKNS_8CacheKeyIT_EEPKvRPKS4_R10UErrorCode(%"class.icu_69::UnifiedCache"*, %"class.icu_69::CacheKey"* dereferenceable(16), i8*, %"class.icu_69::SharedPluralRules"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.icu_69::SharedObject"*, align 8
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %43

10:                                               ; preds = %5
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15
  store i32 0, i32* %6, align 4
  %12 = bitcast %"class.icu_69::SharedObject"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  store %"class.icu_69::SharedObject"* null, %"class.icu_69::SharedObject"** %7, align 8
  %13 = bitcast %"class.icu_69::CacheKey"* %1 to %"class.icu_69::CacheKeyBase"*
  call void @_ZNK6icu_6912UnifiedCache4_getERKNS_12CacheKeyBaseERPKNS_12SharedObjectEPKvR10UErrorCode(%"class.icu_69::UnifiedCache"* %0, %"class.icu_69::CacheKeyBase"* dereferenceable(16) %13, %"class.icu_69::SharedObject"** nonnull dereferenceable(8) %7, i8* %2, i32* nonnull dereferenceable(4) %6) #15
  %14 = bitcast %"class.icu_69::SharedObject"** %7 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = load i32, i32* %6, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %10
  %19 = inttoptr i64 %15 to %"class.icu_69::SharedPluralRules"*
  %20 = load %"class.icu_69::SharedPluralRules"*, %"class.icu_69::SharedPluralRules"** %3, align 8
  %21 = icmp eq %"class.icu_69::SharedPluralRules"* %20, %19
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = icmp eq %"class.icu_69::SharedPluralRules"* %20, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %20, i64 0, i32 0
  call void @_ZNK6icu_6912SharedObject9removeRefEv(%"class.icu_69::SharedObject"* %25) #15
  br label %26

26:                                               ; preds = %24, %22
  store %"class.icu_69::SharedPluralRules"* %19, %"class.icu_69::SharedPluralRules"** %3, align 8
  %27 = icmp eq i64 %15, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %19, i64 0, i32 0
  call void @_ZNK6icu_6912SharedObject6addRefEv(%"class.icu_69::SharedObject"* %29) #15
  br label %32

30:                                               ; preds = %18, %10
  %31 = icmp eq i64 %15, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %28, %30
  %33 = inttoptr i64 %15 to %"class.icu_69::SharedPluralRules"*
  %34 = getelementptr inbounds %"class.icu_69::SharedPluralRules", %"class.icu_69::SharedPluralRules"* %33, i64 0, i32 0
  call void @_ZNK6icu_6912SharedObject9removeRefEv(%"class.icu_69::SharedObject"* %34) #15
  br label %35

35:                                               ; preds = %26, %30, %32
  %36 = load i32, i32* %4, align 4
  %37 = icmp ne i32 %36, 0
  %38 = load i32, i32* %6, align 4
  %39 = icmp slt i32 %38, 1
  %40 = and i1 %37, %39
  br i1 %40, label %42, label %41

41:                                               ; preds = %35
  store i32 %38, i32* %4, align 4
  br label %42

42:                                               ; preds = %35, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #15
  br label %43

43:                                               ; preds = %5, %42
  ret void
}

declare void @_ZNK6icu_6912UnifiedCache4_getERKNS_12CacheKeyBaseERPKNS_12SharedObjectEPKvR10UErrorCode(%"class.icu_69::UnifiedCache"*, %"class.icu_69::CacheKeyBase"* dereferenceable(16), %"class.icu_69::SharedObject"** dereferenceable(8), i8*, i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZN6icu_696LocaleC1ERKS0_(%"class.icu_69::Locale"*, %"class.icu_69::Locale"* dereferenceable(224)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEED0Ev(%"class.icu_69::LocaleCacheKey"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 2
  tail call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* %3) #15
  %4 = bitcast %"class.icu_69::LocaleCacheKey"* %0 to %"class.icu_69::CacheKeyBase"*
  tail call void @_ZN6icu_6912CacheKeyBaseD2Ev(%"class.icu_69::CacheKeyBase"* %4) #15
  %5 = bitcast %"class.icu_69::LocaleCacheKey"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE8hashCodeEv(%"class.icu_69::LocaleCacheKey"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i32 @ustr_hashCharsN_69(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6icu_6917SharedPluralRulesE, i64 0, i64 0), i32 28) #15
  %3 = mul i32 %2, 37
  %4 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 2
  %5 = tail call i32 @_ZNK6icu_696Locale8hashCodeEv(%"class.icu_69::Locale"* %4) #15
  %6 = add i32 %3, %5
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.icu_69::CacheKeyBase"* @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE5cloneEv(%"class.icu_69::LocaleCacheKey"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 240) #15
  %3 = icmp eq i8* %2, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6icu_6912CacheKeyBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 12
  store i8 0, i8* %10, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 16
  %12 = bitcast i8* %11 to %"class.icu_69::Locale"*
  %13 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 2
  tail call void @_ZN6icu_696LocaleC1ERKS0_(%"class.icu_69::Locale"* %12, %"class.icu_69::Locale"* dereferenceable(224) %13) #15
  %14 = bitcast i8* %2 to %"class.icu_69::CacheKeyBase"*
  br label %15

15:                                               ; preds = %4, %1
  %16 = phi %"class.icu_69::CacheKeyBase"* [ %14, %4 ], [ null, %1 ]
  ret %"class.icu_69::CacheKeyBase"* %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEEeqERKNS_12CacheKeyBaseE(%"class.icu_69::LocaleCacheKey"*, %"class.icu_69::CacheKeyBase"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.icu_69::LocaleCacheKey"* %0 to %"class.icu_69::CacheKeyBase"*
  %4 = icmp eq %"class.icu_69::CacheKeyBase"* %3, %1
  br i1 %4, label %27, label %5

5:                                                ; preds = %2
  %6 = icmp eq %"class.icu_69::LocaleCacheKey"* %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @__cxa_bad_typeid() #16
  unreachable

8:                                                ; preds = %5
  %9 = bitcast %"class.icu_69::LocaleCacheKey"* %0 to %"class.std::type_info"***
  %10 = load %"class.std::type_info"**, %"class.std::type_info"*** %9, align 8
  %11 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %10, i64 -1
  %12 = load %"class.std::type_info"*, %"class.std::type_info"** %11, align 8
  %13 = bitcast %"class.icu_69::CacheKeyBase"* %1 to %"class.std::type_info"***
  %14 = load %"class.std::type_info"**, %"class.std::type_info"*** %13, align 8
  %15 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %14, i64 -1
  %16 = load %"class.std::type_info"*, %"class.std::type_info"** %15, align 8
  %17 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %12, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %16, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %18, %20
  br i1 %21, label %22, label %27

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.icu_69::CacheKeyBase", %"class.icu_69::CacheKeyBase"* %1, i64 1
  %25 = bitcast %"class.icu_69::CacheKeyBase"* %24 to %"class.icu_69::Locale"*
  %26 = tail call signext i8 @_ZNK6icu_696LocaleeqERKS0_(%"class.icu_69::Locale"* %23, %"class.icu_69::Locale"* dereferenceable(224) %25) #15
  br label %27

27:                                               ; preds = %8, %2, %22
  %28 = phi i8 [ %26, %22 ], [ 1, %2 ], [ 0, %8 ]
  ret i8 %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK6icu_6914LocaleCacheKeyINS_17SharedPluralRulesEE16writeDescriptionEPci(%"class.icu_69::LocaleCacheKey"*, i8*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::LocaleCacheKey", %"class.icu_69::LocaleCacheKey"* %0, i64 0, i32 2, i32 7
  %5 = load i8*, i8** %4, align 8
  %6 = sext i32 %2 to i64
  %7 = tail call i8* @strncpy(i8* %1, i8* %5, i64 %6) #15
  %8 = add nsw i32 %2, -1
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %1, i64 %9
  store i8 0, i8* %10, align 1
  ret i8* %1
}

; Function Attrs: nounwind
declare void @_ZN6icu_6912CacheKeyBaseD2Ev(%"class.icu_69::CacheKeyBase"*) unnamed_addr #7

declare i32 @ustr_hashCharsN_69(i8*, i32) local_unnamed_addr #4

declare void @__cxa_bad_typeid() local_unnamed_addr

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #8

declare i32 @_ZNK6icu_696Locale8hashCodeEv(%"class.icu_69::Locale"*) local_unnamed_addr #4

declare signext i8 @_ZNK6icu_696LocaleeqERKS0_(%"class.icu_69::Locale"*, %"class.icu_69::Locale"* dereferenceable(224)) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind allocsize(0) }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2144449362}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6icu_6925ures_getNextUnicodeStringEP15UResourceBundlePPKcP10UErrorCode: argument 0"}
!5 = distinct !{!5, !"_ZN6icu_6925ures_getNextUnicodeStringEP15UResourceBundlePPKcP10UErrorCode"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE: argument 0"}
!8 = distinct !{!8, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE: argument 0"}
!11 = distinct !{!11, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv: argument 0"}
!14 = distinct !{!14, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv: argument 0"}
!17 = distinct !{!17, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE: argument 0"}
!20 = distinct !{!20, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv: argument 0"}
!23 = distinct !{!23, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv: argument 0"}
!26 = distinct !{!26, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv: argument 0"}
!29 = distinct !{!29, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE: argument 0"}
!32 = distinct !{!32, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE: argument 0"}
!35 = distinct !{!35, !"_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv: argument 0"}
!38 = distinct !{!38, !"_ZN6icu_6911ICU_Utility15makeBogusStringEv"}
