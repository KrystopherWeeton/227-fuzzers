; ModuleID = '../../services/device/generic_sensor/platform_sensor_provider_linux_base.cc'
source_filename = "../../services/device/generic_sensor/platform_sensor_provider_linux_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::PlatformSensorProviderLinuxBase" = type { %"class.device::PlatformSensorProvider" }
%"class.device::PlatformSensorProvider" = type { %"class.device::PlatformSensorProviderBase" }
%"class.device::PlatformSensorProviderBase" = type { i32 (...)**, %"class.std::__1::map", %"class.std::__1::map.4", %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i8* }
%"struct.device::SensorReadingSharedBuffer" = type { %"class.device::SensorReadingField", %"union.device::SensorReading" }
%"class.device::SensorReadingField" = type { %"union.device::SensorReadingField<device::OneWriterSeqLock>::Storage" }
%"union.device::SensorReadingField<device::OneWriterSeqLock>::Storage" = type { i64 }
%"union.device::SensorReading" = type { %"struct.device::SensorReadingRaw" }
%"struct.device::SensorReadingRaw" = type { %"struct.device::SensorReadingBase", [4 x %"class.device::SensorReadingField.17"] }
%"struct.device::SensorReadingBase" = type { %"class.device::SensorReadingField.17" }
%"class.device::SensorReadingField.17" = type { %"union.device::SensorReadingField<double>::Storage" }
%"union.device::SensorReadingField<double>::Storage" = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.device::LinearAccelerationFusionAlgorithmUsingAccelerometer" = type { %"class.device::PlatformSensorFusionAlgorithm", i64, double, double, double, double, double }
%"class.device::PlatformSensorFusionAlgorithm" = type { i32 (...)**, %"class.device::PlatformSensorFusion"*, double, i32, %"class.std::__1::vector" }
%"class.device::PlatformSensorFusion" = type <{ %"class.device::PlatformSensor", %"class.device::PlatformSensor::Client", %"union.device::SensorReading", %"class.std::__1::unique_ptr.18", %"class.base::flat_map", i32, [4 x i8] }>
%"class.device::PlatformSensor" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.27", [4 x i8], %"class.base::ObserverList", %class.scoped_refptr.35, %"struct.device::SensorReadingSharedBuffer"*, i32, %"class.std::__1::map.37", %"class.device::PlatformSensorProvider"*, i8, %"union.device::SensorReading", %"class.base::Lock", i8, %"class.base::WeakPtrFactory" }
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.28", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.30" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.35 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.36" }>
%"class.base::RefCountedThreadSafe.36" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::map.37" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.49", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.49" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.50" }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i8 }
%"class.device::PlatformSensor::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.device::PlatformSensorFusionAlgorithm"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.55" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.57" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i32* }
%"class.device::GravityFusionAlgorithmUsingAccelerometer" = type { %"class.device::PlatformSensorFusionAlgorithm", i64, double, double, double, double, double }
%"class.device::AbsoluteOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndMagnetometer" = type { %"class.device::PlatformSensorFusionAlgorithm" }
%"class.device::OrientationQuaternionFusionAlgorithmUsingEulerAngles" = type { %"class.device::PlatformSensorFusionAlgorithm" }
%"class.device::RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndGyroscope" = type { %"class.device::PlatformSensorFusionAlgorithm", double, double, double, double, double }
%"class.device::RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometer" = type { %"class.device::PlatformSensorFusionAlgorithm" }

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN6device31PlatformSensorProviderLinuxBase18IsFusionSensorTypeENS_5mojom10SensorTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -3
  %3 = icmp ult i32 %2, 9
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i9
  %6 = lshr i9 -29, %5
  %7 = and i9 %6, 1
  %8 = icmp ne i9 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device31PlatformSensorProviderLinuxBase18CreateFusionSensorENS_5mojom10SensorTypeEPNS_25SensorReadingSharedBufferEN4base12OnceCallbackIFv13scoped_refptrINS_14PlatformSensorEEEEE(%"class.device::PlatformSensorProviderLinuxBase"*, i32, %"struct.device::SensorReadingSharedBuffer"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  switch i32 %1, label %40 [
    i32 3, label %6
    i32 4, label %10
    i32 8, label %14
    i32 9, label %18
    i32 10, label %22
    i32 11, label %36
  ]

6:                                                ; preds = %4
  %7 = tail call i8* @_Znwm(i64 104) #5
  %8 = bitcast i8* %7 to %"class.device::LinearAccelerationFusionAlgorithmUsingAccelerometer"*
  tail call void @_ZN6device51LinearAccelerationFusionAlgorithmUsingAccelerometerC1Ev(%"class.device::LinearAccelerationFusionAlgorithmUsingAccelerometer"* nonnull %8) #6
  %9 = ptrtoint i8* %7 to i64
  br label %40

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 104) #5
  %12 = bitcast i8* %11 to %"class.device::GravityFusionAlgorithmUsingAccelerometer"*
  tail call void @_ZN6device40GravityFusionAlgorithmUsingAccelerometerC1Ev(%"class.device::GravityFusionAlgorithmUsingAccelerometer"* nonnull %12) #6
  %13 = ptrtoint i8* %11 to i64
  br label %40

14:                                               ; preds = %4
  %15 = tail call i8* @_Znwm(i64 56) #5
  %16 = bitcast i8* %15 to %"class.device::AbsoluteOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndMagnetometer"*
  tail call void @_ZN6device78AbsoluteOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndMagnetometerC1Ev(%"class.device::AbsoluteOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndMagnetometer"* nonnull %16) #6
  %17 = ptrtoint i8* %15 to i64
  br label %40

18:                                               ; preds = %4
  %19 = tail call i8* @_Znwm(i64 56) #5
  %20 = bitcast i8* %19 to %"class.device::OrientationQuaternionFusionAlgorithmUsingEulerAngles"*
  tail call void @_ZN6device52OrientationQuaternionFusionAlgorithmUsingEulerAnglesC1Eb(%"class.device::OrientationQuaternionFusionAlgorithmUsingEulerAngles"* nonnull %20, i1 zeroext true) #6
  %21 = ptrtoint i8* %19 to i64
  br label %40

22:                                               ; preds = %4
  %23 = bitcast %"class.device::PlatformSensorProviderLinuxBase"* %0 to i1 (%"class.device::PlatformSensorProviderLinuxBase"*, i32)***
  %24 = load i1 (%"class.device::PlatformSensorProviderLinuxBase"*, i32)**, i1 (%"class.device::PlatformSensorProviderLinuxBase"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.device::PlatformSensorProviderLinuxBase"*, i32)*, i1 (%"class.device::PlatformSensorProviderLinuxBase"*, i32)** %24, i64 4
  %26 = load i1 (%"class.device::PlatformSensorProviderLinuxBase"*, i32)*, i1 (%"class.device::PlatformSensorProviderLinuxBase"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.device::PlatformSensorProviderLinuxBase"* %0, i32 5) #6
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = tail call i8* @_Znwm(i64 96) #5
  %30 = bitcast i8* %29 to %"class.device::RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndGyroscope"*
  tail call void @_ZN6device75RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndGyroscopeC1Ev(%"class.device::RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndGyroscope"* nonnull %30) #6
  %31 = ptrtoint i8* %29 to i64
  br label %40

32:                                               ; preds = %22
  %33 = tail call i8* @_Znwm(i64 56) #5
  %34 = bitcast i8* %33 to %"class.device::RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometer"*
  tail call void @_ZN6device63RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometerC1Ev(%"class.device::RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometer"* nonnull %34) #6
  %35 = ptrtoint i8* %33 to i64
  br label %40

36:                                               ; preds = %4
  %37 = tail call i8* @_Znwm(i64 56) #5
  %38 = bitcast i8* %37 to %"class.device::OrientationQuaternionFusionAlgorithmUsingEulerAngles"*
  tail call void @_ZN6device52OrientationQuaternionFusionAlgorithmUsingEulerAnglesC1Eb(%"class.device::OrientationQuaternionFusionAlgorithmUsingEulerAngles"* nonnull %38, i1 zeroext false) #6
  %39 = ptrtoint i8* %37 to i64
  br label %40

40:                                               ; preds = %6, %10, %14, %18, %36, %32, %28, %4
  %41 = phi i64 [ 0, %4 ], [ %39, %36 ], [ %31, %28 ], [ %35, %32 ], [ %21, %18 ], [ %17, %14 ], [ %13, %10 ], [ %9, %6 ]
  %42 = getelementptr inbounds %"class.device::PlatformSensorProviderLinuxBase", %"class.device::PlatformSensorProviderLinuxBase"* %0, i64 0, i32 0
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %45, i64* %46, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8
  %47 = inttoptr i64 %41 to %"class.device::PlatformSensorFusionAlgorithm"*
  call void @_ZN6device20PlatformSensorFusion6CreateEPNS_25SensorReadingSharedBufferEPNS_22PlatformSensorProviderENSt3__110unique_ptrINS_29PlatformSensorFusionAlgorithmENS5_14default_deleteIS7_EEEEN4base12OnceCallbackIFv13scoped_refptrINS_14PlatformSensorEEEEE(%"struct.device::SensorReadingSharedBuffer"* %2, %"class.device::PlatformSensorProvider"* %42, %"class.device::PlatformSensorFusionAlgorithm"* %47, %"class.base::OnceCallback"* nonnull %5) #6
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #6
  ret void
}

declare void @_ZN6device20PlatformSensorFusion6CreateEPNS_25SensorReadingSharedBufferEPNS_22PlatformSensorProviderENSt3__110unique_ptrINS_29PlatformSensorFusionAlgorithmENS5_14default_deleteIS7_EEEEN4base12OnceCallbackIFv13scoped_refptrINS_14PlatformSensorEEEEE(%"struct.device::SensorReadingSharedBuffer"*, %"class.device::PlatformSensorProvider"*, %"class.device::PlatformSensorFusionAlgorithm"*, %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN6device51LinearAccelerationFusionAlgorithmUsingAccelerometerC1Ev(%"class.device::LinearAccelerationFusionAlgorithmUsingAccelerometer"*) unnamed_addr #2

declare void @_ZN6device40GravityFusionAlgorithmUsingAccelerometerC1Ev(%"class.device::GravityFusionAlgorithmUsingAccelerometer"*) unnamed_addr #2

declare void @_ZN6device78AbsoluteOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndMagnetometerC1Ev(%"class.device::AbsoluteOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndMagnetometer"*) unnamed_addr #2

declare void @_ZN6device52OrientationQuaternionFusionAlgorithmUsingEulerAnglesC1Eb(%"class.device::OrientationQuaternionFusionAlgorithmUsingEulerAngles"*, i1 zeroext) unnamed_addr #2

declare void @_ZN6device75RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndGyroscopeC1Ev(%"class.device::RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometerAndGyroscope"*) unnamed_addr #2

declare void @_ZN6device63RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometerC1Ev(%"class.device::RelativeOrientationEulerAnglesFusionAlgorithmUsingAccelerometer"*) unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
