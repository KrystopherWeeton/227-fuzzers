; ModuleID = '../../services/resource_coordinator/public/cpp/memory_instrumentation/browser_metrics.cc'
source_filename = "../../services/resource_coordinator/public/cpp/memory_instrumentation/browser_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN22memory_instrumentation22kMemoryHistogramPrefixE = hidden local_unnamed_addr constant [8 x i8] c"Memory.\00", align 1
@_ZN22memory_instrumentation12_GLOBAL__N_126kAudioServiceHistogramNameE = internal constant [13 x i8] c"AudioService\00", align 1
@_ZN22memory_instrumentation12_GLOBAL__N_121kBrowserHistogramNameE = internal constant [8 x i8] c"Browser\00", align 1
@_ZN22memory_instrumentation12_GLOBAL__N_123kExtensionHistogramNameE = internal constant [10 x i8] c"Extension\00", align 1
@_ZN22memory_instrumentation12_GLOBAL__N_117kGpuHistogramNameE = internal constant [4 x i8] c"Gpu\00", align 1
@_ZN22memory_instrumentation12_GLOBAL__N_128kNetworkServiceHistogramNameE = internal constant [15 x i8] c"NetworkService\00", align 1
@_ZN22memory_instrumentation12_GLOBAL__N_136kPaintPreviewCompositorHistogramNameE = internal constant [23 x i8] c"PaintPreviewCompositor\00", align 16
@_ZN22memory_instrumentation12_GLOBAL__N_122kRendererHistogramNameE = internal constant [9 x i8] c"Renderer\00", align 1
@_ZN22memory_instrumentation12_GLOBAL__N_121kUtilityHistogramNameE = internal constant [8 x i8] c"Utility\00", align 1
@.str = private unnamed_addr constant [24 x i8] c".PrivateMemoryFootprint\00", align 1
@switch.table._ZN22memory_instrumentation32GetPrivateFootprintHistogramNameENS_20HistogramProcessTypeE = private unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN22memory_instrumentation12_GLOBAL__N_126kAudioServiceHistogramNameE, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN22memory_instrumentation12_GLOBAL__N_121kBrowserHistogramNameE, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN22memory_instrumentation12_GLOBAL__N_123kExtensionHistogramNameE, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN22memory_instrumentation12_GLOBAL__N_117kGpuHistogramNameE, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN22memory_instrumentation12_GLOBAL__N_128kNetworkServiceHistogramNameE, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZN22memory_instrumentation12_GLOBAL__N_136kPaintPreviewCompositorHistogramNameE, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN22memory_instrumentation12_GLOBAL__N_122kRendererHistogramNameE, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN22memory_instrumentation12_GLOBAL__N_121kUtilityHistogramNameE, i64 0, i64 0)], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN22memory_instrumentation28HistogramProcessTypeToStringENS_20HistogramProcessTypeE(i32) local_unnamed_addr #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [8 x i8*], [8 x i8*]* @switch.table._ZN22memory_instrumentation32GetPrivateFootprintHistogramNameENS_20HistogramProcessTypeE, i64 0, i64 %2
  %4 = load i8*, i8** %3, align 8
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22memory_instrumentation32GetPrivateFootprintHistogramNameENS_20HistogramProcessTypeE(%"class.std::__1::basic_string"* noalias nocapture sret, i32) local_unnamed_addr #1 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 7, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN22memory_instrumentation22kMemoryHistogramPrefixE, i64 0, i64 0), i64 7, i1 false) #6
  %9 = getelementptr inbounds i8, i8* %6, i64 7
  store i8 0, i8* %9, align 1
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds [8 x i8*], [8 x i8*]* @switch.table._ZN22memory_instrumentation32GetPrivateFootprintHistogramNameENS_20HistogramProcessTypeE, i64 0, i64 %10
  %12 = load i8*, i8** %11, align 8
  %13 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* nonnull %12) #6, !noalias !2
  %14 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %14, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #6, !noalias !2
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)) #6, !noalias !5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #6, !noalias !5
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #7
  br label %25

25:                                               ; preds = %2, %22
  %26 = load i8, i8* %8, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #7
  br label %31

31:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN22memory_instrumentation24GetDelayForNextMemoryLogEv() local_unnamed_addr #1 {
  %1 = tail call double @_ZN4base10RandDoubleEv() #6
  %2 = tail call double @log(double %1) #6
  %3 = fmul double %2, -1.800000e+09
  %4 = fcmp oge double %3, 0xC3E0000000000000
  %5 = fcmp ole double %3, 0x43DFFFFFFFFFFFFF
  %6 = and i1 %5, %4
  %7 = fptosi double %3 to i64
  %8 = fcmp ule double %2, 0.000000e+00
  %9 = select i1 %8, i64 9223372036854775807, i64 -9223372036854775808
  %10 = select i1 %6, i64 %7, i64 %9
  ret i64 %10
}

declare double @_ZN4base10RandDoubleEv() local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
