; ModuleID = '../../third_party/blink/renderer/modules/webaudio/iir_processor.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/iir_processor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::IIRProcessor" = type { %"class.blink::AudioDSPKernelProcessor.base", [7 x i8], %"class.blink::AudioArray", %"class.blink::AudioArray", i8, %"class.std::__1::unique_ptr.1" }
%"class.blink::AudioDSPKernelProcessor.base" = type <{ %"class.blink::AudioProcessor", %"class.WTF::Vector", %"class.WTF::Mutex", i8 }>
%"class.blink::AudioProcessor" = type { i32 (...)**, i8, i32, float, i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AudioDSPKernel"* }
%"class.blink::AudioDSPKernel" = type { i32 (...)**, %"class.blink::AudioDSPKernelProcessor"*, float, i32 }
%"class.blink::AudioDSPKernelProcessor" = type <{ %"class.blink::AudioProcessor", %"class.WTF::Vector", %"class.WTF::Mutex", i8, [7 x i8] }>
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::AudioArray" = type <{ double*, double*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::IIRDSPKernel"* }
%"class.blink::IIRDSPKernel" = type { %"class.blink::AudioDSPKernel", %"class.blink::IIRFilter", double }
%"class.blink::IIRFilter" = type { %"class.blink::AudioArray", %"class.blink::AudioArray", i32, %"class.blink::AudioArray"*, %"class.blink::AudioArray"* }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9" }
%"class.WTF::VectorBufferBase.9" = type { double*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted", i32, %"class.WTF::Vector.13", i32, float }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15", [64 x i8] }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.16", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::AudioArray.19"* }
%"class.blink::AudioArray.19" = type <{ float*, float*, i32, [4 x i8] }>

$_ZN5blink10AudioArrayIdE8AllocateEm = comdat any

$_ZNK5blink23AudioDSPKernelProcessor16NumberOfChannelsEv = comdat any

$_ZNK3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioDSPKernelENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZTVN5blink12IIRProcessorE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::IIRProcessor"*)* @_ZN5blink12IIRProcessorD2Ev to i8*), i8* bitcast (void (%"class.blink::IIRProcessor"*)* @_ZN5blink12IIRProcessorD0Ev to i8*), i8* bitcast (void (%"class.blink::AudioDSPKernelProcessor"*)* @_ZN5blink23AudioDSPKernelProcessor10InitializeEv to i8*), i8* bitcast (void (%"class.blink::AudioDSPKernelProcessor"*)* @_ZN5blink23AudioDSPKernelProcessor12UninitializeEv to i8*), i8* bitcast (void (%"class.blink::IIRProcessor"*, %"class.blink::AudioBus"*, %"class.blink::AudioBus"*, i32)* @_ZN5blink12IIRProcessor7ProcessEPKNS_8AudioBusEPS1_j to i8*), i8* bitcast (void (%"class.blink::AudioDSPKernelProcessor"*, i32)* @_ZN5blink23AudioDSPKernelProcessor22ProcessOnlyAudioParamsEj to i8*), i8* bitcast (void (%"class.blink::AudioDSPKernelProcessor"*)* @_ZN5blink23AudioDSPKernelProcessor5ResetEv to i8*), i8* bitcast (void (%"class.blink::AudioDSPKernelProcessor"*, i32)* @_ZN5blink23AudioDSPKernelProcessor19SetNumberOfChannelsEj to i8*), i8* bitcast (i32 (%"class.blink::AudioDSPKernelProcessor"*)* @_ZNK5blink23AudioDSPKernelProcessor16NumberOfChannelsEv to i8*), i8* bitcast (double (%"class.blink::AudioDSPKernelProcessor"*)* @_ZNK5blink23AudioDSPKernelProcessor8TailTimeEv to i8*), i8* bitcast (double (%"class.blink::AudioDSPKernelProcessor"*)* @_ZNK5blink23AudioDSPKernelProcessor11LatencyTimeEv to i8*), i8* bitcast (i1 (%"class.blink::AudioDSPKernelProcessor"*)* @_ZNK5blink23AudioDSPKernelProcessor22RequiresTailProcessingEv to i8*), i8* bitcast (%"class.blink::AudioDSPKernel"* (%"class.blink::IIRProcessor"*)* @_ZN5blink12IIRProcessor12CreateKernelEv to i8*)] }, align 8
@_ZTVN5blink23AudioDSPKernelProcessorE = external unnamed_addr constant { [15 x i8*] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"n <= std::numeric_limits<unsigned>::max() / sizeof(T)\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/audio/audio_array.h\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"allocation_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIdEEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioArray<double>]\00", align 1

@_ZN5blink12IIRProcessorC1EfjjRKN3WTF6VectorIdLj0ENS1_18PartitionAllocatorEEES6_b = hidden unnamed_addr alias void (%"class.blink::IIRProcessor"*, float, i32, i32, %"class.WTF::Vector.7"*, %"class.WTF::Vector.7"*, i1), void (%"class.blink::IIRProcessor"*, float, i32, i32, %"class.WTF::Vector.7"*, %"class.WTF::Vector.7"*, i1)* @_ZN5blink12IIRProcessorC2EfjjRKN3WTF6VectorIdLj0ENS1_18PartitionAllocatorEEES6_b
@_ZN5blink12IIRProcessorD1Ev = hidden unnamed_addr alias void (%"class.blink::IIRProcessor"*), void (%"class.blink::IIRProcessor"*)* @_ZN5blink12IIRProcessorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12IIRProcessorC2EfjjRKN3WTF6VectorIdLj0ENS1_18PartitionAllocatorEEES6_b(%"class.blink::IIRProcessor"*, float, i32, i32, %"class.WTF::Vector.7"* nocapture readonly dereferenceable(16), %"class.WTF::Vector.7"* dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %8 = zext i1 %6 to i8
  %9 = bitcast %"class.blink::IIRProcessor"* %0 to %"class.blink::AudioDSPKernelProcessor"*
  tail call void @_ZN5blink23AudioDSPKernelProcessorC2Efjj(%"class.blink::AudioDSPKernelProcessor"* %9, float %1, i32 %2, i32 %3) #7
  %10 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink12IIRProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::AudioArray"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #7
  %13 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 3
  %14 = bitcast %"class.blink::AudioArray"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #7
  %15 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 4
  store i8 %8, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 5
  %17 = bitcast %"class.std::__1::unique_ptr.1"* %16 to i64*
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %5, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %4, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  tail call void @_ZN5blink10AudioArrayIdE8AllocateEm(%"class.blink::AudioArray"* %13, i64 %22)
  %23 = zext i32 %19 to i64
  tail call void @_ZN5blink10AudioArrayIdE8AllocateEm(%"class.blink::AudioArray"* %11, i64 %23)
  %24 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 3, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp ult i32 %25, %21
  br i1 %26, label %34, label %27

27:                                               ; preds = %7
  %28 = bitcast %"class.WTF::Vector.7"* %4 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 3, i32 1
  %31 = bitcast double** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = shl nuw nsw i64 %22, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %29, i64 %33, i1 false) #7
  br label %34

34:                                               ; preds = %7, %27
  %35 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 2, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = icmp ult i32 %36, %19
  br i1 %37, label %45, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.WTF::Vector.7"* %5 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 2, i32 1
  %42 = bitcast double** %41 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = shl nuw nsw i64 %23, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %40, i64 %44, i1 false) #7
  br label %45

45:                                               ; preds = %34, %38
  %46 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.7"* %5, i32 0) #7
  %47 = load double, double* %46, align 8
  %48 = fcmp une double %47, 1.000000e+00
  br i1 %48, label %49, label %120

49:                                               ; preds = %45
  %50 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.7"* %5, i32 0) #7
  %51 = load double, double* %50, align 8
  %52 = fptrunc double %51 to float
  %53 = icmp ugt i32 %19, 1
  br i1 %53, label %54, label %70

54:                                               ; preds = %49
  %55 = fpext float %52 to double
  %56 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 2, i32 1
  %57 = add nsw i64 %23, -1
  %58 = and i64 %57, 1
  %59 = icmp eq i32 %19, 2
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = sub nsw i64 %57, %58
  br label %79

62:                                               ; preds = %79, %54
  %63 = phi i64 [ 1, %54 ], [ %91, %79 ]
  %64 = icmp eq i64 %58, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = load double*, double** %56, align 8
  %67 = getelementptr inbounds double, double* %66, i64 %63
  %68 = load double, double* %67, align 8
  %69 = fdiv double %68, %55
  store double %69, double* %67, align 8
  br label %70

70:                                               ; preds = %65, %62, %49
  %71 = icmp eq i32 %21, 0
  br i1 %71, label %102, label %72

72:                                               ; preds = %70
  %73 = fpext float %52 to double
  %74 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 3, i32 1
  %75 = and i64 %22, 1
  %76 = icmp eq i32 %21, 1
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = sub nsw i64 %22, %75
  br label %105

79:                                               ; preds = %79, %60
  %80 = phi i64 [ 1, %60 ], [ %91, %79 ]
  %81 = phi i64 [ %61, %60 ], [ %92, %79 ]
  %82 = load double*, double** %56, align 8
  %83 = getelementptr inbounds double, double* %82, i64 %80
  %84 = load double, double* %83, align 8
  %85 = fdiv double %84, %55
  store double %85, double* %83, align 8
  %86 = add nuw nsw i64 %80, 1
  %87 = load double*, double** %56, align 8
  %88 = getelementptr inbounds double, double* %87, i64 %86
  %89 = load double, double* %88, align 8
  %90 = fdiv double %89, %55
  store double %90, double* %88, align 8
  %91 = add nuw nsw i64 %80, 2
  %92 = add i64 %81, -2
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %62, label %79

94:                                               ; preds = %105, %72
  %95 = phi i64 [ 0, %72 ], [ %117, %105 ]
  %96 = icmp eq i64 %75, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = load double*, double** %74, align 8
  %99 = getelementptr inbounds double, double* %98, i64 %95
  %100 = load double, double* %99, align 8
  %101 = fdiv double %100, %73
  store double %101, double* %99, align 8
  br label %102

102:                                              ; preds = %97, %94, %70
  %103 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 2, i32 1
  %104 = load double*, double** %103, align 8
  store double 1.000000e+00, double* %104, align 8
  br label %120

105:                                              ; preds = %105, %77
  %106 = phi i64 [ 0, %77 ], [ %117, %105 ]
  %107 = phi i64 [ %78, %77 ], [ %118, %105 ]
  %108 = load double*, double** %74, align 8
  %109 = getelementptr inbounds double, double* %108, i64 %106
  %110 = load double, double* %109, align 8
  %111 = fdiv double %110, %73
  store double %111, double* %109, align 8
  %112 = or i64 %106, 1
  %113 = load double*, double** %74, align 8
  %114 = getelementptr inbounds double, double* %113, i64 %112
  %115 = load double, double* %114, align 8
  %116 = fdiv double %115, %73
  store double %116, double* %114, align 8
  %117 = add nuw nsw i64 %106, 2
  %118 = add i64 %107, -2
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %94, label %105

120:                                              ; preds = %102, %45
  %121 = tail call noalias i8* @malloc(i64 104) #7
  %122 = bitcast i8* %121 to %"class.blink::IIRDSPKernel"*
  tail call void @_ZN5blink12IIRDSPKernelC1EPNS_12IIRProcessorE(%"class.blink::IIRDSPKernel"* %122, %"class.blink::IIRProcessor"* %0) #7
  %123 = ptrtoint i8* %121 to i64
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %16, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.blink::IIRDSPKernel"*, %"class.blink::IIRDSPKernel"** %124, align 8
  store i64 %123, i64* %17, align 8
  %126 = icmp eq %"class.blink::IIRDSPKernel"* %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %120
  %128 = bitcast %"class.blink::IIRDSPKernel"* %125 to void (%"class.blink::IIRDSPKernel"*)***
  %129 = load void (%"class.blink::IIRDSPKernel"*)**, void (%"class.blink::IIRDSPKernel"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::IIRDSPKernel"*)*, void (%"class.blink::IIRDSPKernel"*)** %129, i64 1
  %131 = load void (%"class.blink::IIRDSPKernel"*)*, void (%"class.blink::IIRDSPKernel"*)** %130, align 8
  tail call void %131(%"class.blink::IIRDSPKernel"* nonnull %125) #7
  br label %132

132:                                              ; preds = %127, %120
  ret void
}

declare void @_ZN5blink23AudioDSPKernelProcessorC2Efjj(%"class.blink::AudioDSPKernelProcessor"*, float, i32, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10AudioArrayIdE8AllocateEm(%"class.blink::AudioArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp ugt i64 %1, 536870911
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #7
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536870911) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i8* %13, i8* %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 63, %"class.logging::CheckOpResult"* nonnull %4) #7
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  %22 = trunc i64 %1 to i32
  %23 = shl i32 %22, 3
  %24 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 0
  %25 = load double*, double** %24, align 8
  %26 = icmp eq double* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast double* %25 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %28) #7
  br label %29

29:                                               ; preds = %21, %27
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %23, i32 32) #7
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %29
  call void @llvm.trap() #7
  unreachable

33:                                               ; preds = %29
  %34 = extractvalue { i32, i1 } %30, 0
  %35 = zext i32 %34 to i64
  %36 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 %35, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIdEEEEPKcv, i64 0, i64 0)) #7
  %37 = bitcast %"class.blink::AudioArray"* %0 to i8**
  store i8* %36, i8** %37, align 8
  %38 = icmp eq i8* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = ptrtoint i8* %36 to i64
  br label %46

41:                                               ; preds = %33
  %42 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #7
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #7
  %44 = bitcast %"class.blink::AudioArray"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi i64 [ %40, %39 ], [ %45, %41 ]
  %48 = add i64 %47, 31
  %49 = and i64 %48, -32
  %50 = inttoptr i64 %49 to double*
  %51 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 1
  store double* %50, double** %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 2
  store i32 %22, i32* %52, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12IIRProcessorD2Ev(%"class.blink::IIRProcessor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink12IIRProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::IIRProcessor"* %0 to %"class.blink::AudioDSPKernelProcessor"*
  tail call void @_ZN5blink23AudioDSPKernelProcessor12UninitializeEv(%"class.blink::AudioDSPKernelProcessor"* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"class.blink::IIRDSPKernel"*, %"class.blink::IIRDSPKernel"** %9, align 8
  store %"class.blink::IIRDSPKernel"* null, %"class.blink::IIRDSPKernel"** %9, align 8
  %11 = icmp eq %"class.blink::IIRDSPKernel"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::IIRDSPKernel"* %10 to void (%"class.blink::IIRDSPKernel"*)***
  %14 = load void (%"class.blink::IIRDSPKernel"*)**, void (%"class.blink::IIRDSPKernel"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::IIRDSPKernel"*)*, void (%"class.blink::IIRDSPKernel"*)** %14, i64 1
  %16 = load void (%"class.blink::IIRDSPKernel"*)*, void (%"class.blink::IIRDSPKernel"*)** %15, align 8
  tail call void %16(%"class.blink::IIRDSPKernel"* nonnull %10) #7
  br label %17

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 3
  %19 = bitcast %"class.blink::AudioArray"* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %20) #7
  %21 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 2
  %22 = bitcast %"class.blink::AudioArray"* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %23) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink23AudioDSPKernelProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %24 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 2, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %24) #7
  %25 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %27, null
  br i1 %28, label %55, label %29, !prof !4

29:                                               ; preds = %17
  %30 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  %31 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %53, label %34, !prof !2

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 %35
  br label %37

37:                                               ; preds = %47, %34
  %38 = phi %"class.std::__1::unique_ptr"* [ %48, %47 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::AudioDSPKernel"*, %"class.blink::AudioDSPKernel"** %39, align 8
  store %"class.blink::AudioDSPKernel"* null, %"class.blink::AudioDSPKernel"** %39, align 8
  %41 = icmp eq %"class.blink::AudioDSPKernel"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.blink::AudioDSPKernel"* %40 to void (%"class.blink::AudioDSPKernel"*)***
  %44 = load void (%"class.blink::AudioDSPKernel"*)**, void (%"class.blink::AudioDSPKernel"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::AudioDSPKernel"*)*, void (%"class.blink::AudioDSPKernel"*)** %44, i64 1
  %46 = load void (%"class.blink::AudioDSPKernel"*)*, void (%"class.blink::AudioDSPKernel"*)** %45, align 8
  tail call void %46(%"class.blink::AudioDSPKernel"* nonnull %40) #7
  br label %47

47:                                               ; preds = %42, %37
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 1
  %49 = icmp eq %"class.std::__1::unique_ptr"* %48, %36
  br i1 %49, label %50, label %37

50:                                               ; preds = %47
  store i32 0, i32* %31, align 4
  %51 = bitcast %"class.WTF::Vector"* %25 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %29
  %54 = phi i8* [ %52, %50 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #7
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %26, align 8
  br label %55

55:                                               ; preds = %17, %53
  %56 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14AudioProcessorD2Ev(%"class.blink::AudioProcessor"* %56) #7
  ret void
}

declare void @_ZN5blink23AudioDSPKernelProcessor12UninitializeEv(%"class.blink::AudioDSPKernelProcessor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12IIRProcessorD0Ev(%"class.blink::IIRProcessor"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12IIRProcessorD2Ev(%"class.blink::IIRProcessor"* %0) #7
  %2 = bitcast %"class.blink::IIRProcessor"* %0 to i8*
  tail call void @free(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioDSPKernel"* @_ZN5blink12IIRProcessor12CreateKernelEv(%"class.blink::IIRProcessor"*) unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 104) #7
  %3 = bitcast i8* %2 to %"class.blink::IIRDSPKernel"*
  tail call void @_ZN5blink12IIRDSPKernelC1EPNS_12IIRProcessorE(%"class.blink::IIRDSPKernel"* %3, %"class.blink::IIRProcessor"* %0) #7
  %4 = bitcast i8* %2 to %"class.blink::AudioDSPKernel"*
  ret %"class.blink::AudioDSPKernel"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12IIRProcessor7ProcessEPKNS_8AudioBusEPS1_j(%"class.blink::IIRProcessor"*, %"class.blink::AudioBus"*, %"class.blink::AudioBus"*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %52, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %1, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %2, i64 0, i32 2
  br label %17

16:                                               ; preds = %4
  tail call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %2) #7
  br label %52

17:                                               ; preds = %12, %43
  %18 = phi i32 [ 0, %12 ], [ %49, %43 ]
  %19 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioDSPKernelENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %18) #7
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::AudioDSPKernel"*, %"class.blink::AudioDSPKernel"** %20, align 8
  %22 = tail call dereferenceable(32) %"class.blink::AudioChannel"* @_ZNK3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.13"* %14, i32 %18) #7
  %23 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %22, i64 0, i32 1
  %24 = load float*, float** %23, align 8
  %25 = icmp eq float* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.blink::AudioArray.19"*, %"class.blink::AudioArray.19"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::AudioArray.19", %"class.blink::AudioArray.19"* %28, i64 0, i32 1
  %30 = load float*, float** %29, align 8
  br label %31

31:                                               ; preds = %17, %26
  %32 = phi float* [ %30, %26 ], [ %24, %17 ]
  %33 = tail call dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.13"* %15, i32 %18) #7
  %34 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %33, i64 0, i32 3
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %33, i64 0, i32 1
  %36 = load float*, float** %35, align 8
  %37 = icmp eq float* %36, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %33, i64 0, i32 2, i32 0, i32 0, i32 0
  %40 = load %"class.blink::AudioArray.19"*, %"class.blink::AudioArray.19"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::AudioArray.19", %"class.blink::AudioArray.19"* %40, i64 0, i32 1
  %42 = load float*, float** %41, align 8
  br label %43

43:                                               ; preds = %31, %38
  %44 = phi float* [ %42, %38 ], [ %36, %31 ]
  %45 = bitcast %"class.blink::AudioDSPKernel"* %21 to void (%"class.blink::AudioDSPKernel"*, float*, float*, i32)***
  %46 = load void (%"class.blink::AudioDSPKernel"*, float*, float*, i32)**, void (%"class.blink::AudioDSPKernel"*, float*, float*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::AudioDSPKernel"*, float*, float*, i32)*, void (%"class.blink::AudioDSPKernel"*, float*, float*, i32)** %46, i64 2
  %48 = load void (%"class.blink::AudioDSPKernel"*, float*, float*, i32)*, void (%"class.blink::AudioDSPKernel"*, float*, float*, i32)** %47, align 8
  tail call void %48(%"class.blink::AudioDSPKernel"* %21, float* %32, float* %44, i32 %3) #7
  %49 = add nuw i32 %18, 1
  %50 = load i32, i32* %9, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %17, label %52

52:                                               ; preds = %43, %8, %16
  ret void
}

declare void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12IIRProcessor20GetFrequencyResponseEiPKfPfS3_(%"class.blink::IIRProcessor"* nocapture readonly, i32, float*, float*, float*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::IIRProcessor", %"class.blink::IIRProcessor"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.blink::IIRDSPKernel"*, %"class.blink::IIRDSPKernel"** %6, align 8
  tail call void @_ZN5blink12IIRDSPKernel20GetFrequencyResponseEiPKfPfS3_(%"class.blink::IIRDSPKernel"* %7, i32 %1, float* %2, float* %3, float* %4) #7
  ret void
}

declare void @_ZN5blink12IIRDSPKernel20GetFrequencyResponseEiPKfPfS3_(%"class.blink::IIRDSPKernel"*, i32, float*, float*, float*) local_unnamed_addr #1

declare void @_ZN5blink23AudioDSPKernelProcessor10InitializeEv(%"class.blink::AudioDSPKernelProcessor"*) unnamed_addr #1

declare void @_ZN5blink23AudioDSPKernelProcessor22ProcessOnlyAudioParamsEj(%"class.blink::AudioDSPKernelProcessor"*, i32) unnamed_addr #1

declare void @_ZN5blink23AudioDSPKernelProcessor5ResetEv(%"class.blink::AudioDSPKernelProcessor"*) unnamed_addr #1

declare void @_ZN5blink23AudioDSPKernelProcessor19SetNumberOfChannelsEj(%"class.blink::AudioDSPKernelProcessor"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink23AudioDSPKernelProcessor16NumberOfChannelsEv(%"class.blink::AudioDSPKernelProcessor"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioDSPKernelProcessor", %"class.blink::AudioDSPKernelProcessor"* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare double @_ZNK5blink23AudioDSPKernelProcessor8TailTimeEv(%"class.blink::AudioDSPKernelProcessor"*) unnamed_addr #1

declare double @_ZNK5blink23AudioDSPKernelProcessor11LatencyTimeEv(%"class.blink::AudioDSPKernelProcessor"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink23AudioDSPKernelProcessor22RequiresTailProcessingEv(%"class.blink::AudioDSPKernelProcessor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14AudioProcessorD2Ev(%"class.blink::AudioProcessor"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::AudioChannel"* @_ZNK3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.13"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %24, i64 %25
  ret %"class.blink::AudioChannel"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.13"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %24, i64 %25
  ret %"class.blink::AudioChannel"* %26
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.7"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

declare void @_ZN5blink12IIRDSPKernelC1EPNS_12IIRProcessorE(%"class.blink::IIRDSPKernel"*, %"class.blink::IIRProcessor"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioDSPKernelENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
