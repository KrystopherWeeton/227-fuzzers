; ModuleID = '../../ui/base/x/x11_display_util.cc'
source_filename = "../../ui/base/x/x11_display_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.222 }
%union.anon.222 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional.353" = type { %"class.absl::optional_internal::optional_data.354" }
%"class.absl::optional_internal::optional_data.354" = type { %"class.absl::optional_internal::optional_data_base.355" }
%"class.absl::optional_internal::optional_data_base.355" = type { %"class.absl::optional_internal::optional_data_dtor_base.356" }
%"class.absl::optional_internal::optional_data_dtor_base.356" = type { i8, %union.anon.357 }
%union.anon.357 = type { i8 }
%struct.SkColorSpacePrimaries = type { float, float, float, float, float, float, float, float }
%"class.base::internal::flat_tree.358" = type { %"class.std::__1::vector.359" }
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { i8*, i8*, %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { i8* }
%"class.base::internal::flat_tree.366" = type { %"class.std::__1::vector.367" }
%"class.std::__1::vector.367" = type { %"class.std::__1::__vector_base.368" }
%"class.std::__1::__vector_base.368" = type { i8*, i8*, %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { i8* }
%union.anon.4 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%union.anon = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"struct.x11::RandR::QueryVersionRequest" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.x11::Future.381" = type { %"class.std::__1::unique_ptr.308" }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.x11::Connection::FutureImpl"* }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.197", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.214", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.247", %"class.base::circular_deque", %"class.base::ObserverList.253", %"class.x11::Event"*, %"class.base::circular_deque.257", i32, %"class.absl::optional.268", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.273" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.x11::Render"* }
%"class.x11::Render" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.207" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.200", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.202" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.207" = type <{ %"class.std::__1::vector.200", %"class.base::LinkedList.208", i64, i32, [4 x i8] }>
%"class.base::LinkedList.208" = type { %"class.base::LinkNode.209" }
%"class.base::LinkNode.209" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.226", %"class.std::__1::vector.233" }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.228" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.8" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.240" }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.242" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.253" = type <{ %"class.std::__1::vector.200", %"class.base::LinkedList.254", i64, i32, [4 x i8] }>
%"class.base::LinkedList.254" = type { %"class.base::LinkNode.255" }
%"class.base::LinkNode.255" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.257" = type { %"class.base::internal::VectorBuffer.258", i64, i64 }
%"class.base::internal::VectorBuffer.258" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.260, %"class.std::__1::unique_ptr.262" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.260 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.261", [4 x i8] }>
%"class.base::RefCountedThreadSafe.261" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional.268" = type { %"class.absl::optional_internal::optional_data.269" }
%"class.absl::optional_internal::optional_data.269" = type { %"class.absl::optional_internal::optional_data_base.270" }
%"class.absl::optional_internal::optional_data_base.270" = type { %"class.absl::optional_internal::optional_data_dtor_base.271" }
%"class.absl::optional_internal::optional_data_dtor_base.271" = type { i8, %union.anon.272 }
%union.anon.272 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.273" = type { %"class.base::internal::CallbackBase" }
%"struct.x11::RandR::QueryVersionReply" = type { i16, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.0" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.display::Display"* }
%"class.std::__1::vector.392" = type { %"class.std::__1::__vector_base.393" }
%"class.std::__1::__vector_base.393" = type { i32*, i32*, %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.x11::Future.435" = type { %"class.std::__1::unique_ptr.308" }
%"struct.x11::RandR::GetOutputPropertyRequest" = type <{ i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%"class.x11::Future.425" = type { %"class.std::__1::unique_ptr.308" }
%"class.x11::Future" = type { %"class.std::__1::unique_ptr.308" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { i64 }
%"class.x11::Future.329" = type { %"class.std::__1::unique_ptr.308" }
%"class.x11::Future.344" = type { %"class.std::__1::unique_ptr.308" }
%"struct.x11::RandR::GetOutputInfoRequest" = type { i32, i32 }
%"class.x11::Future.352" = type { %"class.std::__1::unique_ptr.308" }
%"struct.x11::RandR::GetCrtcInfoRequest" = type { i32, i32 }
%"class.display::EdidParser" = type { i16, i16, %"class.std::__1::basic_string", %"class.gfx::Size", i32, %"class.absl::optional.353", double, i32, %struct.SkColorSpacePrimaries, %"class.base::internal::flat_tree.358", %"class.base::internal::flat_tree.366", %"class.absl::optional.0" }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { i8*, i8*, %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { i8* }
%"class.gfx::ICCProfile" = type { %class.scoped_refptr.375 }
%class.scoped_refptr.375 = type { %"class.gfx::ICCProfile::Internals"* }
%"class.gfx::ICCProfile::Internals" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.376", [4 x i8], %"class.std::__1::vector.377", i8, i8, [2 x i8], %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, [4 x i8] }>
%"class.base::RefCountedThreadSafe.376" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.377" = type { %"class.std::__1::__vector_base.378" }
%"class.std::__1::__vector_base.378" = type { i8*, i8*, %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { i8* }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%"struct.x11::RandR::GetScreenResourcesCurrentReply" = type { i16, i32, i32, %"class.std::__1::vector.277", %"class.std::__1::vector.284", %"class.std::__1::vector.291", %"class.std::__1::vector.298" }
%"class.std::__1::vector.277" = type { %"class.std::__1::__vector_base.278" }
%"class.std::__1::__vector_base.278" = type { i32*, i32*, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { i32* }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { i32*, i32*, %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { i32* }
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { %"struct.x11::RandR::ModeInfo"*, %"struct.x11::RandR::ModeInfo"*, %"class.std::__1::__compressed_pair.293" }
%"struct.x11::RandR::ModeInfo" = type { i32, i16, i16, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32 }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.x11::RandR::ModeInfo"* }
%"struct.x11::RandR::GetMonitorsReply" = type { i16, i32, i32, %"class.std::__1::vector.415" }
%"class.std::__1::vector.415" = type { %"class.std::__1::__vector_base.416" }
%"class.std::__1::__vector_base.416" = type { %"struct.x11::RandR::MonitorInfo"*, %"struct.x11::RandR::MonitorInfo"*, %"class.std::__1::__compressed_pair.417" }
%"struct.x11::RandR::MonitorInfo" = type { i32, i8, i8, i16, i16, i16, i16, i32, i32, %"class.std::__1::vector.284" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.x11::RandR::MonitorInfo"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.374" }
%"struct.std::__1::pair.374" = type { i32, i32 }
%"struct.x11::RandR::GetOutputPrimaryReply" = type { i16, i32 }
%"struct.x11::RandR::GetOutputInfoReply" = type { i32, i16, i32, i32, i32, i32, i32, i32, i16, %"class.std::__1::vector.277", %"class.std::__1::vector.334", %"class.std::__1::vector.284", %"class.std::__1::vector.298" }
%"class.std::__1::vector.334" = type { %"class.std::__1::__vector_base.335" }
%"class.std::__1::__vector_base.335" = type { i32*, i32*, %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { i32* }
%"struct.x11::RandR::GetCrtcInfoReply" = type { i32, i16, i32, i16, i16, i16, i16, i32, i32, i32, %"class.std::__1::vector.284", %"class.std::__1::vector.284" }
%"struct.x11::RandR::GetOutputPropertyReply" = type { i8, i16, i32, i32, i32, %"class.std::__1::vector.298" }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.260, i64, i32* }
%"class.x11::Future.408" = type { %"class.std::__1::unique_ptr.308" }
%"struct.x11::GetPropertyRequest" = type { i8, i32, i32, i32, i32, i32 }
%"struct.x11::GetPropertyReply" = type { i8, i16, i32, i32, i32, %class.scoped_refptr.260 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3x116FutureINS_5RandR30GetScreenResourcesCurrentReplyEE4SyncEv = comdat any

$_ZN3x116FutureINS_5RandR21GetOutputPrimaryReplyEE4SyncEv = comdat any

$_ZN3x116FutureINS_5RandR18GetOutputInfoReplyEE4SyncEv = comdat any

$_ZN3x116FutureINS_5RandR16GetCrtcInfoReplyEE4SyncEv = comdat any

$_ZN3x116FutureINS_5RandR17QueryVersionReplyEE4SyncEv = comdat any

$_ZN3x1116GetArrayPropertyIiEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS2_mPNS_10ConnectionE = comdat any

$_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZN3x116FutureINS_5RandR16GetMonitorsReplyEE4SyncEv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN3x116FutureINS_5RandR22GetOutputPropertyReplyEE4SyncEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3x115RandR6OutputEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@_ZZN2ui16GetXrandrVersionEvE7version = internal unnamed_addr global i32 0, align 4
@_ZGVZN2ui16GetXrandrVersionEvE7version = internal global i64 0, align 8
@.str = private unnamed_addr constant [36 x i8] c"../../ui/base/x/x11_display_util.cc\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"XRandR returned no displays; falling back to root window\00", align 1
@__const._ZN2ui27BuildDisplaysFromXRandRInfoEifPl.edid_parser = private unnamed_addr constant { i16, i16, [4 x i8], %"class.std::__1::basic_string", %"class.gfx::Size", i32, %"class.absl::optional.353", [2 x i8], double, i32, %struct.SkColorSpacePrimaries, [4 x i8], %"class.base::internal::flat_tree.358", %"class.base::internal::flat_tree.366", { { { { i8, [7 x i8], %union.anon.4 } } } } } { i16 -21846, i16 -21846, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.220" { %"struct.std::__1::__compressed_pair_elem.221" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.222 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %"class.absl::optional.353" { %"class.absl::optional_internal::optional_data.354" { %"class.absl::optional_internal::optional_data_base.355" { %"class.absl::optional_internal::optional_data_dtor_base.356" { i8 -86, %union.anon.357 { i8 -86 } } } } }, [2 x i8] c"\AA\AA", double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, %struct.SkColorSpacePrimaries { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::internal::flat_tree.358" { %"class.std::__1::vector.359" { %"class.std::__1::__vector_base.360" { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"class.std::__1::__compressed_pair.361" { %"struct.std::__1::__compressed_pair_elem.362" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, %"class.base::internal::flat_tree.366" { %"class.std::__1::vector.367" { %"class.std::__1::__vector_base.368" { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"class.std::__1::__compressed_pair.369" { %"struct.std::__1::__compressed_pair_elem.370" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"struct.gfx::HDRStaticMetadata" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } } } } } } }, align 8
@__const._ZN2ui27BuildDisplaysFromXRandRInfoEifPl.display = private unnamed_addr constant { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 } { i64 -6148914691236517206, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { i32 -1431655766 } } } } }, i32 -1431655766, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } } { [6 x %"class.gfx::ColorSpace"] [%"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }], [6 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"struct.gfx::HDRStaticMetadata" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } } } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8
@__const._ZN2ui27BuildDisplaysFromXRandRInfoEifPl.color_space = private unnamed_addr constant %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, align 4
@.ref.tmp = private constant %"struct.x11::RandR::QueryVersionRequest" { i32 1, i32 6 }, align 4
@.str.2 = private unnamed_addr constant [14 x i8] c"_NET_WORKAREA\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN2ui27BuildDisplaysFromXRandRInfoEifPl = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 3], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui16GetXrandrVersionEv() local_unnamed_addr #0 {
  %1 = alloca %"class.x11::Future.381", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN2ui16GetXrandrVersionEvE7version to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %42, !prof !2

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2ui16GetXrandrVersionEvE7version) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %42, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.x11::Future.381"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.x11::Future.381", %"class.x11::Future.381"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #11
  %11 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %10, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0
  %12 = load %"class.x11::RandR"*, %"class.x11::RandR"** %11, align 8
  %13 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR12QueryVersionERKNS0_19QueryVersionRequestE(%"class.x11::RandR"* %12, %"struct.x11::RandR::QueryVersionRequest"* nonnull dereferenceable(8) @.ref.tmp) #11
  store %"class.x11::Connection::FutureImpl"* %13, %"class.x11::Connection::FutureImpl"** %9, align 8
  %14 = call { %"struct.x11::RandR::QueryVersionReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR17QueryVersionReplyEE4SyncEv(%"class.x11::Future.381"* nonnull %1) #11
  %15 = extractvalue { %"struct.x11::RandR::QueryVersionReply"*, %"class.x11::Error"* } %14, 0
  %16 = extractvalue { %"struct.x11::RandR::QueryVersionReply"*, %"class.x11::Error"* } %14, 1
  %17 = icmp eq %"struct.x11::RandR::QueryVersionReply"* %15, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"struct.x11::RandR::QueryVersionReply", %"struct.x11::RandR::QueryVersionReply"* %15, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = mul i32 %20, 100
  %22 = getelementptr inbounds %"struct.x11::RandR::QueryVersionReply", %"struct.x11::RandR::QueryVersionReply"* %15, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %21, %23
  br label %25

25:                                               ; preds = %18, %7
  %26 = phi i32 [ %24, %18 ], [ 0, %7 ]
  %27 = icmp eq %"class.x11::Error"* %16, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.x11::Error"* %16 to void (%"class.x11::Error"*)***
  %30 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %30, i64 1
  %32 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %31, align 8
  call void %32(%"class.x11::Error"* nonnull %16) #11
  br label %33

33:                                               ; preds = %28, %25
  br i1 %17, label %36, label %34

34:                                               ; preds = %33
  %35 = bitcast %"struct.x11::RandR::QueryVersionReply"* %15 to i8*
  call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %33
  %37 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %9, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %9, align 8
  %38 = icmp eq %"class.x11::Connection::FutureImpl"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.x11::Connection::FutureImpl"* %37 to i8*
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  store i32 %26, i32* @_ZZN2ui16GetXrandrVersionEvE7version, align 4
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2ui16GetXrandrVersionEvE7version) #11
  br label %42

42:                                               ; preds = %4, %41, %0
  %43 = load i32, i32* @_ZZN2ui16GetXrandrVersionEvE7version, align 4
  ret i32 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22GetFallbackDisplayListEf(%"class.std::__1::vector"* noalias nocapture sret, float) local_unnamed_addr #0 {
  %3 = alloca %"class.gfx::Size", align 4
  %4 = alloca %"class.gfx::Rect", align 8
  %5 = alloca %"class.display::Display", align 8
  %6 = alloca [1 x %"class.display::Display"], align 8
  %7 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #11
  %8 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %7, i64 0, i32 11
  %9 = load %"struct.x11::Screen"*, %"struct.x11::Screen"** %8, align 8
  %10 = bitcast %"class.gfx::Size"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.x11::Screen", %"struct.x11::Screen"* %9, i64 0, i32 7
  %14 = load i16, i16* %13, align 8
  %15 = zext i16 %14 to i32
  %16 = getelementptr inbounds %"struct.x11::Screen", %"struct.x11::Screen"* %9, i64 0, i32 8
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  store i32 %15, i32* %11, align 4
  store i32 %18, i32* %12, align 4
  %19 = getelementptr inbounds %"struct.x11::Screen", %"struct.x11::Screen"* %9, i64 0, i32 5
  %20 = load i16, i16* %19, align 4
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %"struct.x11::Screen", %"struct.x11::Screen"* %9, i64 0, i32 6
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  store i32 0, i32* %26, align 8
  store i32 0, i32* %27, align 4
  store i32 %21, i32* %28, align 8
  store i32 %24, i32* %29, align 4
  %30 = bitcast %"class.display::Display"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN2ui27BuildDisplaysFromXRandRInfoEifPl.display to i8*), i64 568, i1 false)
  call void @_ZN7display7DisplayC1ElRKN3gfx4RectE(%"class.display::Display"* nonnull %5, i64 0, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #11
  %31 = call zeroext i1 @_ZN7display7Display25HasForceDeviceScaleFactorEv() #11
  br i1 %31, label %113, label %32

32:                                               ; preds = %2
  %33 = call zeroext i1 @_ZN7display18IsDisplaySizeValidERKN3gfx4SizeE(%"class.gfx::Size"* nonnull dereferenceable(8) %3) #11
  br i1 %33, label %34, label %113

34:                                               ; preds = %32
  call void @_ZN7display7Display17SetScaleAndBoundsEfRKN3gfx4RectE(%"class.display::Display"* nonnull %5, float %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #11
  %35 = fdiv float 1.000000e+00, %1
  %36 = fcmp oeq float %35, 1.000000e+00
  br i1 %36, label %37, label %46

37:                                               ; preds = %34
  %38 = bitcast %"class.gfx::Rect"* %4 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %44 = bitcast %"class.gfx::Size"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  br label %101

46:                                               ; preds = %34
  %47 = load i32, i32* %26, align 8
  %48 = sitofp i32 %47 to float
  %49 = fmul float %35, %48
  %50 = call float @llvm.floor.f32(float %49) #11
  %51 = fptosi float %50 to i32
  %52 = load i32, i32* %27, align 4
  %53 = sitofp i32 %52 to float
  %54 = fmul float %35, %53
  %55 = call float @llvm.floor.f32(float %54) #11
  %56 = fptosi float %55 to i32
  %57 = load i32, i32* %28, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %46
  %60 = add nsw i32 %57, %47
  %61 = sitofp i32 %60 to float
  %62 = fmul float %35, %61
  %63 = call float @llvm.ceil.f32(float %62) #11
  %64 = fptosi float %63 to i32
  br label %65

65:                                               ; preds = %59, %46
  %66 = phi i32 [ %64, %59 ], [ %51, %46 ]
  %67 = load i32, i32* %29, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %65
  %70 = add nsw i32 %67, %52
  %71 = sitofp i32 %70 to float
  %72 = fmul float %35, %71
  %73 = call float @llvm.ceil.f32(float %72) #11
  %74 = fptosi float %73 to i32
  br label %75

75:                                               ; preds = %69, %65
  %76 = phi i32 [ %74, %69 ], [ %56, %65 ]
  %77 = sub nsw i32 %66, %51
  %78 = sub nsw i32 %76, %56
  %79 = icmp sgt i32 %51, 0
  %80 = icmp sgt i32 %77, 0
  %81 = and i1 %79, %80
  %82 = sub nuw nsw i32 2147483647, %51
  %83 = icmp ult i32 %82, %77
  %84 = and i1 %83, %81
  %85 = select i1 %84, i32 %82, i32 %77
  %86 = icmp sgt i32 %56, 0
  %87 = icmp sgt i32 %78, 0
  %88 = and i1 %86, %87
  %89 = sub nuw nsw i32 2147483647, %56
  %90 = icmp ult i32 %89, %78
  %91 = and i1 %90, %88
  %92 = select i1 %91, i32 %89, i32 %78
  %93 = icmp sgt i32 %85, 0
  %94 = select i1 %93, i32 %85, i32 0
  %95 = zext i32 %94 to i64
  %96 = icmp sgt i32 %92, 0
  %97 = select i1 %96, i32 %92, i32 0
  %98 = zext i32 %97 to i64
  %99 = shl nuw nsw i64 %98, 32
  %100 = or i64 %99, %95
  br label %101

101:                                              ; preds = %37, %75
  %102 = phi i32 [ %42, %37 ], [ %56, %75 ]
  %103 = phi i32 [ %40, %37 ], [ %51, %75 ]
  %104 = phi i64 [ %45, %37 ], [ %100, %75 ]
  %105 = zext i32 %102 to i64
  %106 = shl nuw i64 %105, 32
  %107 = zext i32 %103 to i64
  %108 = or i64 %106, %107
  %109 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %5, i64 0, i32 3
  %110 = bitcast %"class.gfx::Rect"* %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %5, i64 0, i32 3, i32 1
  %112 = bitcast %"class.gfx::Size"* %111 to i64*
  store i64 %104, i64* %112, align 8
  br label %113

113:                                              ; preds = %2, %32, %101
  %114 = phi float [ %1, %101 ], [ 1.000000e+00, %32 ], [ 1.000000e+00, %2 ]
  %115 = getelementptr inbounds %"struct.x11::Screen", %"struct.x11::Screen"* %9, i64 0, i32 14
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %5, i64 0, i32 11
  store i32 %117, i32* %118, align 8
  %119 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #11
  %120 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %119, i64 0, i32 13
  %121 = load %"struct.x11::VisualType"*, %"struct.x11::VisualType"** %120, align 8
  %122 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %121, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, -2
  %125 = icmp eq i32 %124, 4
  br i1 %125, label %126, label %143

126:                                              ; preds = %113
  %127 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %121, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i64
  %130 = call i64 @llvm.ctpop.i64(i64 %129) #11, !range !3
  %131 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %121, i64 0, i32 5
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i64
  %134 = call i64 @llvm.ctpop.i64(i64 %133) #11, !range !3
  %135 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %121, i64 0, i32 6
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = call i64 @llvm.ctpop.i64(i64 %137) #11, !range !3
  %139 = icmp ne i64 %130, %134
  %140 = icmp ne i64 %130, %138
  %141 = trunc i64 %130 to i32
  %142 = or i1 %139, %140
  br i1 %142, label %143, label %159

143:                                              ; preds = %126, %113
  %144 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %121, i64 0, i32 3
  %145 = load i16, i16* %144, align 2
  %146 = call i16 @llvm.ctpop.i16(i16 %145) #11, !range !4
  %147 = icmp eq i16 %146, 1
  br i1 %147, label %148, label %155

148:                                              ; preds = %143
  %149 = zext i16 %145 to i32
  %150 = icmp eq i16 %145, 0
  %151 = select i1 %150, i32 -1, i32 32
  %152 = add nsw i32 %149, -1
  %153 = call i32 @llvm.ctlz.i32(i32 %152, i1 false) #11, !range !5
  %154 = sub nuw nsw i32 %151, %153
  br label %159

155:                                              ; preds = %143
  %156 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %121, i64 0, i32 2
  %157 = load i8, i8* %156, align 4
  %158 = zext i8 %157 to i32
  br label %159

159:                                              ; preds = %126, %148, %155
  %160 = phi i32 [ %154, %148 ], [ %158, %155 ], [ %141, %126 ]
  %161 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %5, i64 0, i32 12
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %163 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %164 = bitcast [1 x %"class.display::Display"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %164) #11
  %165 = getelementptr inbounds [1 x %"class.display::Display"], [1 x %"class.display::Display"]* %6, i64 0, i64 0
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* nonnull %165, %"class.display::Display"* nonnull dereferenceable(568) %5) #11
  %166 = call i8* @_Znwm(i64 568) #12
  %167 = bitcast i8* %166 to %"class.display::Display"*
  %168 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %166, i8** %168, align 8
  %169 = getelementptr inbounds i8, i8* %166, i64 568
  %170 = bitcast %"class.display::Display"** %163 to i8**
  store i8* %169, i8** %170, align 8
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* nonnull %167, %"class.display::Display"* nonnull dereferenceable(568) %165) #11
  %171 = getelementptr inbounds i8, i8* %166, i64 568
  %172 = bitcast %"class.display::Display"** %162 to i64*
  %173 = ptrtoint i8* %171 to i64
  store i64 %173, i64* %172, align 8
  %174 = getelementptr inbounds [1 x %"class.display::Display"], [1 x %"class.display::Display"]* %6, i64 0, i64 0
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %174) #11
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %164) #11
  call fastcc void @_ZN2ui12_GLOBAL__N_112ClipWorkAreaEPNSt3__16vectorIN7display7DisplayENS1_9allocatorIS4_EEEElf(%"class.std::__1::vector"* %0, i64 0, float %114)
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret void
}

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7display7DisplayC1ElRKN3gfx4RectE(%"class.display::Display"*, i64, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #3

declare zeroext i1 @_ZN7display7Display25HasForceDeviceScaleFactorEv() local_unnamed_addr #3

declare zeroext i1 @_ZN7display18IsDisplaySizeValidERKN3gfx4SizeE(%"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN7display7Display17SetScaleAndBoundsEfRKN3gfx4RectE(%"class.display::Display"*, float, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ui12_GLOBAL__N_112ClipWorkAreaEPNSt3__16vectorIN7display7DisplayENS1_9allocatorIS4_EEEElf(%"class.std::__1::vector"* nocapture readonly, i64, float) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.392", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = tail call i32 @_ZN2ui16GetX11RootWindowEv() #11
  %9 = bitcast %"class.std::__1::vector.392"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::vector.392", %"class.std::__1::vector.392"* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.392", %"class.std::__1::vector.392"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #11
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 13, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13, i1 false) #11
  %15 = getelementptr inbounds i8, i8* %12, i64 13
  store i8 0, i8* %15, align 1
  %16 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #11
  %17 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #11
  %18 = call zeroext i1 @_ZN3x1116GetArrayPropertyIiEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS2_mPNS_10ConnectionE(i32 %8, i32 %16, %"class.std::__1::vector.392"* nonnull %4, i32* null, i64 0, %"class.x11::Connection"* %17)
  br i1 %18, label %19, label %33

19:                                               ; preds = %3
  %20 = bitcast i32** %11 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.392"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 2
  %26 = icmp ult i64 %25, 4
  %27 = load i8, i8* %14, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %19, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br i1 %26, label %184, label %40

33:                                               ; preds = %3
  %34 = load i8, i8* %14, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %33, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br label %184

40:                                               ; preds = %32
  %41 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #11
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %43 = bitcast i64* %42 to i32*
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 1
  %45 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  %46 = load i32*, i32** %10, align 8
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds i32, i32* %46, i64 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds i32, i32* %46, i64 2
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i32, i32* %46, i64 3
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %47, 0
  %55 = icmp sgt i32 %51, 0
  %56 = and i1 %54, %55
  %57 = sub nuw nsw i32 2147483647, %47
  %58 = icmp ult i32 %57, %51
  %59 = and i1 %58, %56
  %60 = select i1 %59, i32 %57, i32 %51
  %61 = icmp sgt i32 %49, 0
  %62 = icmp sgt i32 %53, 0
  %63 = and i1 %61, %62
  %64 = sub nuw nsw i32 2147483647, %49
  %65 = icmp ult i32 %64, %53
  %66 = and i1 %65, %63
  %67 = select i1 %66, i32 %64, i32 %53
  %68 = icmp sgt i32 %60, 0
  %69 = select i1 %68, i32 %60, i32 0
  %70 = icmp sgt i32 %67, 0
  %71 = select i1 %70, i32 %67, i32 0
  %72 = fdiv float 1.000000e+00, %2
  %73 = fcmp oeq float %72, 1.000000e+00
  br i1 %73, label %74, label %79

74:                                               ; preds = %40
  %75 = zext i32 %71 to i64
  %76 = shl nuw nsw i64 %75, 32
  %77 = zext i32 %69 to i64
  %78 = or i64 %76, %77
  br label %130

79:                                               ; preds = %40
  %80 = sitofp i32 %47 to float
  %81 = fmul float %72, %80
  %82 = call float @llvm.floor.f32(float %81) #11
  %83 = fptosi float %82 to i32
  %84 = sitofp i32 %49 to float
  %85 = fmul float %72, %84
  %86 = call float @llvm.floor.f32(float %85) #11
  %87 = fptosi float %86 to i32
  %88 = icmp slt i32 %60, 1
  br i1 %88, label %95, label %89

89:                                               ; preds = %79
  %90 = add nsw i32 %69, %47
  %91 = sitofp i32 %90 to float
  %92 = fmul float %72, %91
  %93 = call float @llvm.ceil.f32(float %92) #11
  %94 = fptosi float %93 to i32
  br label %95

95:                                               ; preds = %89, %79
  %96 = phi i32 [ %94, %89 ], [ %83, %79 ]
  %97 = icmp slt i32 %67, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %95
  %99 = add nsw i32 %71, %49
  %100 = sitofp i32 %99 to float
  %101 = fmul float %72, %100
  %102 = call float @llvm.ceil.f32(float %101) #11
  %103 = fptosi float %102 to i32
  br label %104

104:                                              ; preds = %98, %95
  %105 = phi i32 [ %103, %98 ], [ %87, %95 ]
  %106 = sub nsw i32 %96, %83
  %107 = sub nsw i32 %105, %87
  %108 = icmp sgt i32 %83, 0
  %109 = icmp sgt i32 %106, 0
  %110 = and i1 %108, %109
  %111 = sub nuw nsw i32 2147483647, %83
  %112 = icmp ult i32 %111, %106
  %113 = and i1 %112, %110
  %114 = select i1 %113, i32 %111, i32 %106
  %115 = icmp sgt i32 %87, 0
  %116 = icmp sgt i32 %107, 0
  %117 = and i1 %115, %116
  %118 = sub nuw nsw i32 2147483647, %87
  %119 = icmp ult i32 %118, %107
  %120 = and i1 %119, %117
  %121 = select i1 %120, i32 %118, i32 %107
  %122 = icmp sgt i32 %114, 0
  %123 = select i1 %122, i32 %114, i32 0
  %124 = zext i32 %123 to i64
  %125 = icmp sgt i32 %121, 0
  %126 = select i1 %125, i32 %121, i32 0
  %127 = zext i32 %126 to i64
  %128 = shl nuw nsw i64 %127, 32
  %129 = or i64 %128, %124
  br label %130

130:                                              ; preds = %74, %104
  %131 = phi i32 [ %49, %74 ], [ %87, %104 ]
  %132 = phi i32 [ %47, %74 ], [ %83, %104 ]
  %133 = phi i64 [ %78, %74 ], [ %129, %104 ]
  %134 = zext i32 %131 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %132 to i64
  %137 = or i64 %135, %136
  %138 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %137, i64* %138, align 8
  store i64 %133, i64* %42, align 8
  %139 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %140 = load %"class.display::Display"*, %"class.display::Display"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %142 = load %"class.display::Display"*, %"class.display::Display"** %141, align 8
  %143 = icmp eq %"class.display::Display"* %140, %142
  br i1 %143, label %170, label %144

144:                                              ; preds = %130, %144
  %145 = phi i64 [ %150, %144 ], [ 0, %130 ]
  %146 = phi %"class.display::Display"* [ %151, %144 ], [ %140, %130 ]
  %147 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %146, i64 0, i32 1
  %148 = call zeroext i1 @_ZNK3gfx4Rect8ContainsERKS0_(%"class.gfx::Rect"* nonnull %7, %"class.gfx::Rect"* dereferenceable(16) %147) #11
  %149 = zext i1 %148 to i64
  %150 = add nuw nsw i64 %145, %149
  %151 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %146, i64 1
  %152 = icmp eq %"class.display::Display"* %151, %142
  br i1 %152, label %153, label %144

153:                                              ; preds = %144
  %154 = icmp eq i64 %150, 1
  br i1 %154, label %183, label %155

155:                                              ; preds = %153
  %156 = load %"class.display::Display"*, %"class.display::Display"** %139, align 8
  %157 = load %"class.display::Display"*, %"class.display::Display"** %141, align 8
  %158 = icmp eq %"class.display::Display"* %156, %157
  br i1 %158, label %170, label %159

159:                                              ; preds = %155, %163
  %160 = phi %"class.display::Display"* [ %164, %163 ], [ %156, %155 ]
  %161 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %160, i64 0, i32 1
  %162 = call zeroext i1 @_ZNK3gfx4Rect8ContainsERKS0_(%"class.gfx::Rect"* %161, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #11
  br i1 %162, label %166, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %160, i64 1
  %165 = icmp eq %"class.display::Display"* %164, %157
  br i1 %165, label %166, label %159

166:                                              ; preds = %159, %163
  %167 = phi %"class.display::Display"* [ %157, %163 ], [ %160, %159 ]
  %168 = load %"class.display::Display"*, %"class.display::Display"** %141, align 8
  %169 = icmp eq %"class.display::Display"* %167, %168
  br i1 %169, label %170, label %173

170:                                              ; preds = %130, %155, %166
  %171 = load %"class.display::Display"*, %"class.display::Display"** %139, align 8
  %172 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %171, i64 %1
  br label %173

173:                                              ; preds = %166, %170
  %174 = phi %"class.display::Display"* [ %172, %170 ], [ %167, %166 ]
  %175 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %174, i64 0, i32 3
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %7, %"class.gfx::Rect"* dereferenceable(16) %175) #11
  %176 = load i32, i32* %43, align 8
  %177 = icmp eq i32 %176, 0
  %178 = load i32, i32* %44, align 4
  %179 = icmp eq i32 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %183, label %181

181:                                              ; preds = %173
  %182 = bitcast %"class.gfx::Rect"* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* nonnull align 8 %41, i64 16, i1 false) #11
  br label %183

183:                                              ; preds = %173, %181, %153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #11
  br label %184

184:                                              ; preds = %32, %39, %183
  %185 = load i32*, i32** %10, align 8
  %186 = icmp eq i32* %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %184
  %188 = ptrtoint i32* %185 to i64
  %189 = bitcast i32** %11 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast i32* %185 to i8*
  call void @_ZdlPv(i8* %190) #12
  br label %191

191:                                              ; preds = %184, %187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27BuildDisplaysFromXRandRInfoEifPl(%"class.std::__1::vector"* noalias nocapture sret, i32, float, i64* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.x11::Future.435", align 8
  %6 = alloca %"struct.x11::RandR::GetOutputPropertyRequest", align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.x11::Future.425", align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::vector", align 16
  %13 = alloca %"class.x11::Future", align 8
  %14 = alloca %"class.logging::LogMessage", align 8
  %15 = alloca %"class.std::__1::map", align 8
  %16 = alloca %"class.x11::Future.329", align 8
  %17 = alloca %"class.x11::Future.344", align 8
  %18 = alloca %"struct.x11::RandR::GetOutputInfoRequest", align 4
  %19 = alloca %"class.x11::Future.352", align 8
  %20 = alloca %"struct.x11::RandR::GetCrtcInfoRequest", align 4
  %21 = alloca %"class.display::EdidParser", align 8
  %22 = alloca %"class.std::__1::vector.298", align 16
  %23 = alloca %"class.gfx::Rect", align 8
  %24 = alloca %"class.display::Display", align 8
  %25 = alloca %"class.gfx::ICCProfile", align 8
  %26 = alloca %"class.gfx::ColorSpace", align 4
  %27 = alloca %"class.gfx::ColorSpace", align 4
  %28 = alloca %"class.gfx::DisplayColorSpaces", align 8
  %29 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #11
  %30 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %29, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0
  %31 = load %"class.x11::RandR"*, %"class.x11::RandR"** %30, align 8
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #11
  %33 = tail call i32 @_ZN2ui16GetX11RootWindowEv() #11
  store i32 %33, i32* %11, align 4
  %34 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 0, i64 24, i1 false) #11
  %38 = bitcast %"class.x11::Future"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR25GetScreenResourcesCurrentERKNS_6WindowE(%"class.x11::RandR"* %31, i32* nonnull dereferenceable(4) %11) #11
  %40 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %39, %"class.x11::Connection::FutureImpl"** %40, align 8
  %41 = call { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR30GetScreenResourcesCurrentReplyEE4SyncEv(%"class.x11::Future"* nonnull %13)
  %42 = extractvalue { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } %41, 0
  %43 = extractvalue { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } %41, 1
  %44 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %40, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %40, align 8
  %45 = icmp eq %"class.x11::Connection::FutureImpl"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %4
  %47 = bitcast %"class.x11::Connection::FutureImpl"* %44 to i8*
  call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %4, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %49 = icmp eq %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, null
  br i1 %49, label %50, label %58

50:                                               ; preds = %48
  %51 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %51, label %52, label %57

52:                                               ; preds = %50
  %53 = bitcast %"class.logging::LogMessage"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %53) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 206, i32 2) #11
  %54 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %14, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_ostringstream"* %54 to %"class.std::__1::basic_ostream"*
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %55, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i64 56) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %53) #11
  br label %57

57:                                               ; preds = %50, %52
  call void @_ZN2ui22GetFallbackDisplayListEf(%"class.std::__1::vector"* sret %0, float %2)
  br label %813

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %29, i64 0, i32 11
  %60 = load %"struct.x11::Screen"*, %"struct.x11::Screen"** %59, align 8
  %61 = getelementptr inbounds %"struct.x11::Screen", %"struct.x11::Screen"* %60, i64 0, i32 14
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #11
  %65 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %64, i64 0, i32 13
  %66 = load %"struct.x11::VisualType"*, %"struct.x11::VisualType"** %65, align 8
  %67 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, -2
  %70 = icmp eq i32 %69, 4
  br i1 %70, label %71, label %88

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %66, i64 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = call i64 @llvm.ctpop.i64(i64 %74) #11, !range !3
  %76 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %66, i64 0, i32 5
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = call i64 @llvm.ctpop.i64(i64 %78) #11, !range !3
  %80 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %66, i64 0, i32 6
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = call i64 @llvm.ctpop.i64(i64 %82) #11, !range !3
  %84 = icmp ne i64 %75, %79
  %85 = icmp ne i64 %75, %83
  %86 = trunc i64 %75 to i32
  %87 = or i1 %84, %85
  br i1 %87, label %88, label %104

88:                                               ; preds = %71, %58
  %89 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %66, i64 0, i32 3
  %90 = load i16, i16* %89, align 2
  %91 = call i16 @llvm.ctpop.i16(i16 %90) #11, !range !4
  %92 = icmp eq i16 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = zext i16 %90 to i32
  %95 = icmp eq i16 %90, 0
  %96 = select i1 %95, i32 -1, i32 32
  %97 = add nsw i32 %94, -1
  %98 = call i32 @llvm.ctlz.i32(i32 %97, i1 false) #11, !range !5
  %99 = sub nuw nsw i32 %96, %98
  br label %104

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %66, i64 0, i32 2
  %102 = load i8, i8* %101, align 4
  %103 = zext i8 %102 to i32
  br label %104

104:                                              ; preds = %71, %93, %100
  %105 = phi i32 [ %99, %93 ], [ %103, %100 ], [ %86, %71 ]
  %106 = bitcast %"class.std::__1::map"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #11
  %107 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %15, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %15, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %110 = load i32, i32* %11, align 4
  %111 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111)
  store i32 %110, i32* %8, align 4, !noalias !6
  %112 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %113 = bitcast %"class.std::__1::__tree_node_base"** %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #11, !alias.scope !6
  store %"class.std::__1::__tree_end_node"* %112, %"class.std::__1::__tree_end_node"** %107, align 8, !alias.scope !6
  %114 = icmp sgt i32 %1, 104
  br i1 %114, label %115, label %265

115:                                              ; preds = %104
  %116 = bitcast %"class.x11::Future.425"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11, !noalias !6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11, !noalias !6
  store i8 0, i8* %10, align 1, !noalias !6
  %117 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR11GetMonitorsERKNS_6WindowERKh(%"class.x11::RandR"* %31, i32* nonnull dereferenceable(4) %8, i8* nonnull dereferenceable(1) %10) #11
  %118 = getelementptr inbounds %"class.x11::Future.425", %"class.x11::Future.425"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %117, %"class.x11::Connection::FutureImpl"** %118, align 8, !noalias !6
  %119 = call { %"struct.x11::RandR::GetMonitorsReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR16GetMonitorsReplyEE4SyncEv(%"class.x11::Future.425"* nonnull %9) #11
  %120 = extractvalue { %"struct.x11::RandR::GetMonitorsReply"*, %"class.x11::Error"* } %119, 0
  %121 = extractvalue { %"struct.x11::RandR::GetMonitorsReply"*, %"class.x11::Error"* } %119, 1
  %122 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %118, align 8, !noalias !6
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %118, align 8, !noalias !6
  %123 = icmp eq %"class.x11::Connection::FutureImpl"* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %115
  %125 = bitcast %"class.x11::Connection::FutureImpl"* %122 to i8*
  call void @_ZdlPv(i8* %125) #12
  br label %126

126:                                              ; preds = %124, %115
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11, !noalias !6
  %127 = icmp eq %"struct.x11::RandR::GetMonitorsReply"* %120, null
  br i1 %127, label %227, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"struct.x11::RandR::GetMonitorsReply", %"struct.x11::RandR::GetMonitorsReply"* %120, i64 0, i32 3
  %130 = getelementptr inbounds %"struct.x11::RandR::GetMonitorsReply", %"struct.x11::RandR::GetMonitorsReply"* %120, i64 0, i32 3, i32 0, i32 1
  %131 = bitcast %"struct.x11::RandR::MonitorInfo"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.std::__1::vector.415"* %129 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %132, %134
  br i1 %135, label %227, label %136

136:                                              ; preds = %128
  %137 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node"**
  %138 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 0, i32 0
  %139 = bitcast %"class.std::__1::map"* %15 to i64*
  br label %140

140:                                              ; preds = %155, %136
  %141 = phi i64 [ %134, %136 ], [ %156, %155 ]
  %142 = phi i64 [ %132, %136 ], [ %157, %155 ]
  %143 = phi i64 [ 0, %136 ], [ %158, %155 ]
  %144 = inttoptr i64 %141 to %"struct.x11::RandR::MonitorInfo"*
  %145 = getelementptr inbounds %"struct.x11::RandR::MonitorInfo", %"struct.x11::RandR::MonitorInfo"* %144, i64 %143, i32 9, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = getelementptr inbounds %"struct.x11::RandR::MonitorInfo", %"struct.x11::RandR::MonitorInfo"* %144, i64 %143, i32 9, i32 0, i32 1
  %148 = load i32*, i32** %147, align 8
  %149 = icmp eq i32* %146, %148
  br i1 %149, label %155, label %150

150:                                              ; preds = %140
  %151 = trunc i64 %143 to i32
  br label %162

152:                                              ; preds = %222
  %153 = load i64, i64* %131, align 8
  %154 = load i64, i64* %133, align 8
  br label %155

155:                                              ; preds = %152, %140
  %156 = phi i64 [ %154, %152 ], [ %141, %140 ]
  %157 = phi i64 [ %153, %152 ], [ %142, %140 ]
  %158 = add nuw i64 %143, 1
  %159 = sub i64 %157, %156
  %160 = sdiv exact i64 %159, 48
  %161 = icmp ult i64 %158, %160
  br i1 %161, label %140, label %227

162:                                              ; preds = %222, %150
  %163 = phi i32* [ %146, %150 ], [ %225, %222 ]
  %164 = load i32, i32* %163, align 4
  %165 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %137, align 8, !alias.scope !6
  %166 = icmp eq %"class.std::__1::__tree_node"* %165, null
  br i1 %166, label %193, label %167

167:                                              ; preds = %162, %189
  %168 = phi %"class.std::__1::__tree_node"* [ %192, %189 ], [ %165, %162 ]
  %169 = phi %"class.std::__1::__tree_node_base"** [ %191, %189 ], [ %108, %162 ]
  %170 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %168, i64 0, i32 1, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp ult i32 %164, %171
  br i1 %172, label %173, label %179

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %168, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %189

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %168, i64 0, i32 0, i32 0
  br label %193

179:                                              ; preds = %167
  %180 = icmp ult i32 %171, %164
  br i1 %180, label %181, label %187

181:                                              ; preds = %179
  %182 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %168, i64 0, i32 0, i32 1
  %183 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %182, align 8
  %184 = icmp eq %"class.std::__1::__tree_node_base"* %183, null
  br i1 %184, label %185, label %189

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %168, i64 0, i32 0, i32 0
  br label %193

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %168, i64 0, i32 0, i32 0
  br label %193

189:                                              ; preds = %181, %173
  %190 = phi %"class.std::__1::__tree_node_base"* [ %175, %173 ], [ %183, %181 ]
  %191 = phi %"class.std::__1::__tree_node_base"** [ %174, %173 ], [ %182, %181 ]
  %192 = bitcast %"class.std::__1::__tree_node_base"* %190 to %"class.std::__1::__tree_node"*
  br label %167

193:                                              ; preds = %187, %185, %177, %162
  %194 = phi %"class.std::__1::__tree_end_node"* [ %178, %177 ], [ %186, %185 ], [ %188, %187 ], [ %112, %162 ]
  %195 = phi %"class.std::__1::__tree_node_base"** [ %174, %177 ], [ %182, %185 ], [ %169, %187 ], [ %138, %162 ]
  %196 = bitcast %"class.std::__1::__tree_node_base"** %195 to %"class.std::__1::__tree_node"**
  %197 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %196, align 8
  %198 = icmp eq %"class.std::__1::__tree_node"* %197, null
  br i1 %198, label %199, label %222

199:                                              ; preds = %193
  %200 = call i8* @_Znwm(i64 40) #12, !noalias !9
  %201 = getelementptr inbounds i8, i8* %200, i64 28
  %202 = bitcast i8* %201 to i32*
  store i32 %164, i32* %202, align 4, !noalias !12
  %203 = getelementptr inbounds i8, i8* %200, i64 32
  %204 = bitcast i8* %203 to i32*
  store i32 0, i32* %204, align 4, !noalias !12
  %205 = bitcast i8* %200 to %"class.std::__1::__tree_node"*
  %206 = bitcast i8* %200 to %"class.std::__1::__tree_node_base"*
  %207 = getelementptr inbounds i8, i8* %200, i64 16
  %208 = bitcast i8* %207 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 16, i1 false) #11, !noalias !6
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %208, align 8, !noalias !6
  %209 = bitcast %"class.std::__1::__tree_node_base"** %195 to i8**
  store i8* %200, i8** %209, align 8
  %210 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8, !alias.scope !6
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %199
  %215 = ptrtoint %"class.std::__1::__tree_node_base"* %212 to i64
  store i64 %215, i64* %139, align 8, !alias.scope !6
  %216 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  br label %217

217:                                              ; preds = %214, %199
  %218 = phi %"class.std::__1::__tree_node_base"* [ %206, %199 ], [ %216, %214 ]
  %219 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8, !alias.scope !6
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %219, %"class.std::__1::__tree_node_base"* %218) #11
  %220 = load i64, i64* %109, align 8, !alias.scope !6
  %221 = add i64 %220, 1
  store i64 %221, i64* %109, align 8, !alias.scope !6
  br label %222

222:                                              ; preds = %217, %193
  %223 = phi %"class.std::__1::__tree_node"* [ %205, %217 ], [ %197, %193 ]
  %224 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %223, i64 0, i32 1, i32 0, i32 1
  store i32 %151, i32* %224, align 4
  %225 = getelementptr inbounds i32, i32* %163, i64 1
  %226 = icmp eq i32* %225, %148
  br i1 %226, label %152, label %162

227:                                              ; preds = %155, %128, %126
  %228 = icmp eq %"class.x11::Error"* %121, null
  br i1 %228, label %234, label %229

229:                                              ; preds = %227
  %230 = bitcast %"class.x11::Error"* %121 to void (%"class.x11::Error"*)***
  %231 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %230, align 8
  %232 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %231, i64 1
  %233 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %232, align 8
  call void %233(%"class.x11::Error"* nonnull %121) #11
  br label %234

234:                                              ; preds = %229, %227
  br i1 %127, label %265, label %235

235:                                              ; preds = %234
  %236 = getelementptr inbounds %"struct.x11::RandR::GetMonitorsReply", %"struct.x11::RandR::GetMonitorsReply"* %120, i64 0, i32 3
  %237 = getelementptr inbounds %"class.std::__1::vector.415", %"class.std::__1::vector.415"* %236, i64 0, i32 0, i32 0
  %238 = load %"struct.x11::RandR::MonitorInfo"*, %"struct.x11::RandR::MonitorInfo"** %237, align 8
  %239 = icmp eq %"struct.x11::RandR::MonitorInfo"* %238, null
  br i1 %239, label %263, label %240

240:                                              ; preds = %235
  %241 = bitcast %"struct.x11::RandR::MonitorInfo"* %238 to i8*
  %242 = getelementptr inbounds %"struct.x11::RandR::GetMonitorsReply", %"struct.x11::RandR::GetMonitorsReply"* %120, i64 0, i32 3, i32 0, i32 1
  %243 = load %"struct.x11::RandR::MonitorInfo"*, %"struct.x11::RandR::MonitorInfo"** %242, align 8
  %244 = icmp eq %"struct.x11::RandR::MonitorInfo"* %243, %238
  br i1 %244, label %261, label %245

245:                                              ; preds = %240, %256
  %246 = phi %"struct.x11::RandR::MonitorInfo"* [ %247, %256 ], [ %243, %240 ]
  %247 = getelementptr inbounds %"struct.x11::RandR::MonitorInfo", %"struct.x11::RandR::MonitorInfo"* %246, i64 -1
  %248 = getelementptr inbounds %"struct.x11::RandR::MonitorInfo", %"struct.x11::RandR::MonitorInfo"* %246, i64 -1, i32 9, i32 0, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, null
  br i1 %250, label %256, label %251

251:                                              ; preds = %245
  %252 = ptrtoint i32* %249 to i64
  %253 = getelementptr inbounds %"struct.x11::RandR::MonitorInfo", %"struct.x11::RandR::MonitorInfo"* %246, i64 -1, i32 9, i32 0, i32 1
  %254 = bitcast i32** %253 to i64*
  store i64 %252, i64* %254, align 8
  %255 = bitcast i32* %249 to i8*
  call void @_ZdlPv(i8* %255) #12
  br label %256

256:                                              ; preds = %251, %245
  %257 = icmp eq %"struct.x11::RandR::MonitorInfo"* %247, %238
  br i1 %257, label %258, label %245

258:                                              ; preds = %256
  %259 = bitcast %"class.std::__1::vector.415"* %236 to i8**
  %260 = load i8*, i8** %259, align 8
  br label %261

261:                                              ; preds = %258, %240
  %262 = phi i8* [ %260, %258 ], [ %241, %240 ]
  store %"struct.x11::RandR::MonitorInfo"* %238, %"struct.x11::RandR::MonitorInfo"** %242, align 8
  call void @_ZdlPv(i8* %262) #12
  br label %263

263:                                              ; preds = %261, %235
  %264 = bitcast %"struct.x11::RandR::GetMonitorsReply"* %120 to i8*
  call void @_ZdlPv(i8* %264) #12
  br label %265

265:                                              ; preds = %104, %234, %263
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111)
  store i64 0, i64* %3, align 8
  %266 = bitcast %"class.x11::Future.329"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #11
  %267 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR16GetOutputPrimaryERKNS_6WindowE(%"class.x11::RandR"* %31, i32* nonnull dereferenceable(4) %11) #11
  %268 = getelementptr inbounds %"class.x11::Future.329", %"class.x11::Future.329"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %267, %"class.x11::Connection::FutureImpl"** %268, align 8
  %269 = call { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR21GetOutputPrimaryReplyEE4SyncEv(%"class.x11::Future.329"* nonnull %16)
  %270 = extractvalue { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } %269, 0
  %271 = extractvalue { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } %269, 1
  %272 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %268, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %268, align 8
  %273 = icmp eq %"class.x11::Connection::FutureImpl"* %272, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %265
  %275 = bitcast %"class.x11::Connection::FutureImpl"* %272 to i8*
  call void @_ZdlPv(i8* %275) #12
  br label %276

276:                                              ; preds = %265, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #11
  %277 = icmp eq %"struct.x11::RandR::GetOutputPrimaryReply"* %270, null
  br i1 %277, label %278, label %279

278:                                              ; preds = %276
  call void @_ZN2ui22GetFallbackDisplayListEf(%"class.std::__1::vector"* sret %0, float %2)
  br label %799

279:                                              ; preds = %276
  %280 = getelementptr inbounds %"struct.x11::RandR::GetOutputPrimaryReply", %"struct.x11::RandR::GetOutputPrimaryReply"* %270, i64 0, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 4
  %283 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 4, i32 0, i32 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::vector.284"* %282 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = icmp eq i64 %285, %287
  br i1 %288, label %785, label %289

289:                                              ; preds = %279
  %290 = bitcast %"class.x11::Future.344"* %17 to i8*
  %291 = bitcast %"struct.x11::RandR::GetOutputInfoRequest"* %18 to i8*
  %292 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoRequest", %"struct.x11::RandR::GetOutputInfoRequest"* %18, i64 0, i32 0
  %293 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoRequest", %"struct.x11::RandR::GetOutputInfoRequest"* %18, i64 0, i32 1
  %294 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 2
  %295 = getelementptr inbounds %"class.x11::Future.344", %"class.x11::Future.344"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %296 = bitcast %"class.x11::Future.352"* %19 to i8*
  %297 = bitcast %"struct.x11::RandR::GetCrtcInfoRequest"* %20 to i8*
  %298 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoRequest", %"struct.x11::RandR::GetCrtcInfoRequest"* %20, i64 0, i32 0
  %299 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoRequest", %"struct.x11::RandR::GetCrtcInfoRequest"* %20, i64 0, i32 1
  %300 = getelementptr inbounds %"class.x11::Future.352", %"class.x11::Future.352"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %301 = bitcast %"class.display::EdidParser"* %21 to i8*
  %302 = bitcast %"class.std::__1::vector.298"* %22 to i8*
  %303 = bitcast %"class.x11::Future.435"* %5 to i8*
  %304 = getelementptr inbounds %"class.x11::Future.435", %"class.x11::Future.435"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %305 = bitcast %"struct.x11::RandR::GetOutputPropertyRequest"* %6 to i8*
  %306 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyRequest", %"struct.x11::RandR::GetOutputPropertyRequest"* %6, i64 0, i32 0
  %307 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyRequest", %"struct.x11::RandR::GetOutputPropertyRequest"* %6, i64 0, i32 1
  %308 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = bitcast %"class.std::__1::basic_string"* %7 to i32*
  %312 = getelementptr inbounds i8, i8* %308, i64 4
  %313 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyRequest", %"struct.x11::RandR::GetOutputPropertyRequest"* %6, i64 0, i32 2
  %314 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyRequest", %"struct.x11::RandR::GetOutputPropertyRequest"* %6, i64 0, i32 3
  %315 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyRequest", %"struct.x11::RandR::GetOutputPropertyRequest"* %6, i64 0, i32 4
  %316 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyRequest", %"struct.x11::RandR::GetOutputPropertyRequest"* %6, i64 0, i32 5
  %317 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyRequest", %"struct.x11::RandR::GetOutputPropertyRequest"* %6, i64 0, i32 6
  %318 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %22, i64 0, i32 0, i32 1
  %320 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %321 = bitcast i8** %319 to i64*
  %322 = bitcast i8** %320 to i64*
  %323 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %22, i64 0, i32 0, i32 0
  %324 = bitcast %"class.gfx::Rect"* %23 to i8*
  %325 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 0, i32 0, i32 1
  %327 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 0, i32 1, i32 0
  %328 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 0, i32 1, i32 1
  %329 = bitcast %"class.display::Display"* %24 to i8*
  %330 = fdiv float 1.000000e+00, %2
  %331 = fcmp oeq float %330, 1.000000e+00
  %332 = bitcast %"class.gfx::Rect"* %23 to i64*
  %333 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 0, i32 1
  %334 = bitcast %"class.gfx::Size"* %333 to i64*
  %335 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 0, i32 3
  %336 = bitcast %"class.gfx::Rect"* %335 to i64*
  %337 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 0, i32 3, i32 1
  %338 = bitcast %"class.gfx::Size"* %337 to i64*
  %339 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 0, i32 5
  %340 = bitcast %"class.display::Display"** %36 to i64*
  %341 = bitcast %"class.std::__1::vector"* %12 to i64*
  %342 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node"**
  %343 = bitcast %"class.gfx::ICCProfile"* %25 to i8*
  %344 = getelementptr inbounds %"class.gfx::ICCProfile", %"class.gfx::ICCProfile"* %25, i64 0, i32 0, i32 0
  %345 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %26, i64 0, i32 0
  %346 = icmp sgt i32 %105, 8
  %347 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %27, i64 0, i32 0
  %348 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %28, i64 0, i32 0, i64 0, i32 0
  %349 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 0, i32 10, i32 0, i64 0, i32 0
  %350 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %28, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %351 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %28, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %352 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 0
  %353 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %354 = bitcast %"struct.gfx::HDRStaticMetadata"* %353 to i8*
  %355 = bitcast %"struct.gfx::HDRStaticMetadata"* %351 to i8*
  %356 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 0, i32 11
  %357 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 0, i32 12
  %358 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 5, i32 0, i32 0
  %359 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 5, i32 0, i32 1
  %360 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %24, i64 0, i32 14
  %361 = bitcast %"class.gfx::Rect"* %23 to i8*
  %362 = bitcast %"class.std::__1::vector.298"* %22 to <2 x i64>*
  br label %365

363:                                              ; preds = %772
  %364 = icmp eq i32 %726, -1
  br i1 %364, label %781, label %779

365:                                              ; preds = %289, %772
  %366 = phi i64 [ %287, %289 ], [ %775, %772 ]
  %367 = phi i64 [ 0, %289 ], [ %773, %772 ]
  %368 = phi i32 [ -1, %289 ], [ %727, %772 ]
  %369 = phi i32 [ -1, %289 ], [ %726, %772 ]
  %370 = inttoptr i64 %366 to i32*
  %371 = getelementptr inbounds i32, i32* %370, i64 %367
  %372 = load i32, i32* %371, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #11
  store i32 %372, i32* %292, align 4
  %373 = load i32, i32* %294, align 8
  store i32 %373, i32* %293, align 4
  %374 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR13GetOutputInfoERKNS0_20GetOutputInfoRequestE(%"class.x11::RandR"* %31, %"struct.x11::RandR::GetOutputInfoRequest"* nonnull dereferenceable(8) %18) #11
  store %"class.x11::Connection::FutureImpl"* %374, %"class.x11::Connection::FutureImpl"** %295, align 8
  %375 = call { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR18GetOutputInfoReplyEE4SyncEv(%"class.x11::Future.344"* nonnull %17)
  %376 = extractvalue { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } %375, 0
  %377 = extractvalue { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } %375, 1
  %378 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %295, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %295, align 8
  %379 = icmp eq %"class.x11::Connection::FutureImpl"* %378, null
  br i1 %379, label %382, label %380

380:                                              ; preds = %365
  %381 = bitcast %"class.x11::Connection::FutureImpl"* %378 to i8*
  call void @_ZdlPv(i8* %381) #12
  br label %382

382:                                              ; preds = %365, %380
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #11
  %383 = icmp eq %"struct.x11::RandR::GetOutputInfoReply"* %376, null
  br i1 %383, label %725, label %384

384:                                              ; preds = %382
  %385 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 6
  %386 = load i32, i32* %385, align 8
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %725

388:                                              ; preds = %384
  %389 = icmp eq i32 %372, %281
  %390 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 3
  %391 = load i32, i32* %390, align 4
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %725, label %393

393:                                              ; preds = %388
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %296) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297) #11
  store i32 %391, i32* %298, align 4
  %394 = load i32, i32* %294, align 8
  store i32 %394, i32* %299, align 4
  %395 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR11GetCrtcInfoERKNS0_18GetCrtcInfoRequestE(%"class.x11::RandR"* %31, %"struct.x11::RandR::GetCrtcInfoRequest"* nonnull dereferenceable(8) %20) #11
  store %"class.x11::Connection::FutureImpl"* %395, %"class.x11::Connection::FutureImpl"** %300, align 8
  %396 = call { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR16GetCrtcInfoReplyEE4SyncEv(%"class.x11::Future.352"* nonnull %19)
  %397 = extractvalue { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } %396, 0
  %398 = extractvalue { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } %396, 1
  %399 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %300, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %300, align 8
  %400 = icmp eq %"class.x11::Connection::FutureImpl"* %399, null
  br i1 %400, label %403, label %401

401:                                              ; preds = %393
  %402 = bitcast %"class.x11::Connection::FutureImpl"* %399 to i8*
  call void @_ZdlPv(i8* %402) #12
  br label %403

403:                                              ; preds = %393, %401
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %296) #11
  %404 = icmp eq %"struct.x11::RandR::GetCrtcInfoReply"* %397, null
  br i1 %404, label %695, label %405

405:                                              ; preds = %403
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %301) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %301, i8* align 8 bitcast ({ i16, i16, [4 x i8], %"class.std::__1::basic_string", %"class.gfx::Size", i32, %"class.absl::optional.353", [2 x i8], double, i32, %struct.SkColorSpacePrimaries, [4 x i8], %"class.base::internal::flat_tree.358", %"class.base::internal::flat_tree.366", { { { { i8, [7 x i8], %union.anon.4 } } } } }* @__const._ZN2ui27BuildDisplaysFromXRandRInfoEifPl.edid_parser to i8*), i64 176, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %302) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303) #11, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %305) #11, !noalias !13
  store i32 %372, i32* %306, align 4, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #11, !noalias !13
  store i8 4, i8* %310, align 1, !noalias !13
  store i32 1145652293, i32* %311, align 8, !noalias !13
  store i8 0, i8* %312, align 4, !noalias !13
  %406 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #11, !noalias !13
  store i32 %406, i32* %307, align 4, !noalias !13
  store i32 0, i32* %313, align 4, !noalias !13
  store i32 0, i32* %314, align 4, !noalias !13
  store i32 128, i32* %315, align 4, !noalias !13
  store i8 0, i8* %316, align 4, !noalias !13
  store i8 0, i8* %317, align 1, !noalias !13
  %407 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR17GetOutputPropertyERKNS0_24GetOutputPropertyRequestE(%"class.x11::RandR"* %31, %"struct.x11::RandR::GetOutputPropertyRequest"* nonnull dereferenceable(24) %6) #11, !noalias !13
  store %"class.x11::Connection::FutureImpl"* %407, %"class.x11::Connection::FutureImpl"** %304, align 8, !noalias !13
  %408 = load i8, i8* %310, align 1, !noalias !13
  %409 = icmp slt i8 %408, 0
  br i1 %409, label %410, label %412

410:                                              ; preds = %405
  %411 = load i8*, i8** %318, align 8, !noalias !13
  call void @_ZdlPv(i8* %411) #12, !noalias !13
  br label %412

412:                                              ; preds = %410, %405
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #11, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %305) #11, !noalias !13
  %413 = call { %"struct.x11::RandR::GetOutputPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR22GetOutputPropertyReplyEE4SyncEv(%"class.x11::Future.435"* nonnull %5) #11, !noalias !13
  %414 = extractvalue { %"struct.x11::RandR::GetOutputPropertyReply"*, %"class.x11::Error"* } %413, 0
  %415 = extractvalue { %"struct.x11::RandR::GetOutputPropertyReply"*, %"class.x11::Error"* } %413, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %302, i8 0, i64 24, i1 false) #11, !alias.scope !13
  %416 = icmp eq %"struct.x11::RandR::GetOutputPropertyReply"* %414, null
  br i1 %416, label %433, label %417

417:                                              ; preds = %412
  %418 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyReply", %"struct.x11::RandR::GetOutputPropertyReply"* %414, i64 0, i32 0
  %419 = load i8, i8* %418, align 8, !noalias !13
  %420 = icmp eq i8 %419, 8
  br i1 %420, label %421, label %433

421:                                              ; preds = %417
  %422 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyReply", %"struct.x11::RandR::GetOutputPropertyReply"* %414, i64 0, i32 2
  %423 = load i32, i32* %422, align 4, !noalias !13
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %433, label %425

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyReply", %"struct.x11::RandR::GetOutputPropertyReply"* %414, i64 0, i32 5
  %427 = bitcast %"class.std::__1::vector.298"* %426 to <2 x i64>*
  %428 = load <2 x i64>, <2 x i64>* %427, align 8, !noalias !13
  store <2 x i64> %428, <2 x i64>* %362, align 16, !alias.scope !13
  %429 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyReply", %"struct.x11::RandR::GetOutputPropertyReply"* %414, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %430 = bitcast i8** %429 to i64*
  %431 = load i64, i64* %430, align 8, !noalias !13
  store i64 %431, i64* %322, align 16, !alias.scope !13
  %432 = bitcast %"class.std::__1::vector.298"* %426 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %432, i8 0, i64 24, i1 false) #11, !noalias !13
  br label %433

433:                                              ; preds = %425, %421, %417, %412
  %434 = icmp eq %"class.x11::Error"* %415, null
  br i1 %434, label %440, label %435

435:                                              ; preds = %433
  %436 = bitcast %"class.x11::Error"* %415 to void (%"class.x11::Error"*)***
  %437 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %436, align 8, !noalias !13
  %438 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %437, i64 1
  %439 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %438, align 8, !noalias !13
  call void %439(%"class.x11::Error"* nonnull %415) #11, !noalias !13
  br label %440

440:                                              ; preds = %435, %433
  br i1 %416, label %451, label %441

441:                                              ; preds = %440
  %442 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyReply", %"struct.x11::RandR::GetOutputPropertyReply"* %414, i64 0, i32 5, i32 0, i32 0
  %443 = load i8*, i8** %442, align 8, !noalias !13
  %444 = icmp eq i8* %443, null
  br i1 %444, label %449, label %445

445:                                              ; preds = %441
  %446 = ptrtoint i8* %443 to i64
  %447 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyReply", %"struct.x11::RandR::GetOutputPropertyReply"* %414, i64 0, i32 5, i32 0, i32 1
  %448 = bitcast i8** %447 to i64*
  store i64 %446, i64* %448, align 8, !noalias !13
  call void @_ZdlPv(i8* nonnull %443) #12, !noalias !13
  br label %449

449:                                              ; preds = %445, %441
  %450 = getelementptr inbounds %"struct.x11::RandR::GetOutputPropertyReply", %"struct.x11::RandR::GetOutputPropertyReply"* %414, i64 0, i32 0
  call void @_ZdlPv(i8* %450) #12, !noalias !13
  br label %451

451:                                              ; preds = %449, %440
  %452 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %304, align 8, !noalias !13
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %304, align 8, !noalias !13
  %453 = icmp eq %"class.x11::Connection::FutureImpl"* %452, null
  br i1 %453, label %456, label %454

454:                                              ; preds = %451
  %455 = bitcast %"class.x11::Connection::FutureImpl"* %452 to i8*
  call void @_ZdlPv(i8* %455) #12, !noalias !13
  br label %456

456:                                              ; preds = %451, %454
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #11, !noalias !13
  call void @_ZN7display10EdidParserC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.display::EdidParser"* nonnull %21, %"class.std::__1::vector.298"* nonnull dereferenceable(24) %22) #11
  %457 = load i8*, i8** %323, align 16
  %458 = icmp eq i8* %457, null
  br i1 %458, label %461, label %459

459:                                              ; preds = %456
  %460 = ptrtoint i8* %457 to i64
  store i64 %460, i64* %321, align 8
  call void @_ZdlPv(i8* nonnull %457) #12
  br label %461

461:                                              ; preds = %456, %459
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %302) #11
  %462 = icmp ugt i32 %372, 255
  br i1 %462, label %467, label %463

463:                                              ; preds = %461
  %464 = trunc i32 %372 to i8
  %465 = call i64 @_ZNK7display10EdidParser12GetDisplayIdEh(%"class.display::EdidParser"* nonnull %21, i8 zeroext %464) #11
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %468

467:                                              ; preds = %461, %463
  br label %468

468:                                              ; preds = %463, %467
  %469 = phi i64 [ %367, %467 ], [ %465, %463 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %324) #11
  %470 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %361, i8 -86, i64 16, i1 false)
  %471 = load i16, i16* %470, align 4
  %472 = sext i16 %471 to i32
  %473 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 4
  %474 = load i16, i16* %473, align 2
  %475 = sext i16 %474 to i32
  %476 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 5
  %477 = load i16, i16* %476, align 8
  %478 = zext i16 %477 to i32
  %479 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 6
  %480 = load i16, i16* %479, align 2
  %481 = zext i16 %480 to i32
  store i32 %472, i32* %325, align 8
  store i32 %475, i32* %326, align 4
  %482 = icmp sgt i16 %471, 0
  %483 = icmp ne i16 %477, 0
  %484 = and i1 %482, %483
  %485 = sub nuw nsw i32 2147483647, %472
  %486 = icmp ult i32 %485, %478
  %487 = and i1 %486, %484
  %488 = select i1 %487, i32 %485, i32 %478
  %489 = icmp sgt i16 %474, 0
  %490 = icmp ne i16 %480, 0
  %491 = and i1 %489, %490
  %492 = sub nuw nsw i32 2147483647, %475
  %493 = icmp ult i32 %492, %481
  %494 = and i1 %493, %491
  %495 = select i1 %494, i32 %492, i32 %481
  %496 = icmp sgt i32 %488, 0
  %497 = select i1 %496, i32 %488, i32 0
  store i32 %497, i32* %327, align 8
  %498 = icmp sgt i32 %495, 0
  %499 = select i1 %498, i32 %495, i32 0
  store i32 %499, i32* %328, align 4
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %329) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %329, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN2ui27BuildDisplaysFromXRandRInfoEifPl.display to i8*), i64 568, i1 false)
  call void @_ZN7display7DisplayC1ElRKN3gfx4RectE(%"class.display::Display"* nonnull %24, i64 %469, %"class.gfx::Rect"* nonnull dereferenceable(16) %23) #11
  %500 = call zeroext i1 @_ZN7display7Display25HasForceDeviceScaleFactorEv() #11
  br i1 %500, label %571, label %501

501:                                              ; preds = %468
  call void @_ZN7display7Display17SetScaleAndBoundsEfRKN3gfx4RectE(%"class.display::Display"* nonnull %24, float %2, %"class.gfx::Rect"* nonnull dereferenceable(16) %23) #11
  br i1 %331, label %502, label %508

502:                                              ; preds = %501
  %503 = load i64, i64* %332, align 8
  %504 = trunc i64 %503 to i32
  %505 = lshr i64 %503, 32
  %506 = trunc i64 %505 to i32
  %507 = load i64, i64* %334, align 8
  br label %563

508:                                              ; preds = %501
  %509 = load i32, i32* %325, align 8
  %510 = sitofp i32 %509 to float
  %511 = fmul float %330, %510
  %512 = call float @llvm.floor.f32(float %511) #11
  %513 = fptosi float %512 to i32
  %514 = load i32, i32* %326, align 4
  %515 = sitofp i32 %514 to float
  %516 = fmul float %330, %515
  %517 = call float @llvm.floor.f32(float %516) #11
  %518 = fptosi float %517 to i32
  %519 = load i32, i32* %327, align 8
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %527, label %521

521:                                              ; preds = %508
  %522 = add nsw i32 %519, %509
  %523 = sitofp i32 %522 to float
  %524 = fmul float %330, %523
  %525 = call float @llvm.ceil.f32(float %524) #11
  %526 = fptosi float %525 to i32
  br label %527

527:                                              ; preds = %521, %508
  %528 = phi i32 [ %526, %521 ], [ %513, %508 ]
  %529 = load i32, i32* %328, align 4
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %537, label %531

531:                                              ; preds = %527
  %532 = add nsw i32 %529, %514
  %533 = sitofp i32 %532 to float
  %534 = fmul float %330, %533
  %535 = call float @llvm.ceil.f32(float %534) #11
  %536 = fptosi float %535 to i32
  br label %537

537:                                              ; preds = %531, %527
  %538 = phi i32 [ %536, %531 ], [ %518, %527 ]
  %539 = sub nsw i32 %528, %513
  %540 = sub nsw i32 %538, %518
  %541 = icmp sgt i32 %513, 0
  %542 = icmp sgt i32 %539, 0
  %543 = and i1 %541, %542
  %544 = sub nuw nsw i32 2147483647, %513
  %545 = icmp ult i32 %544, %539
  %546 = and i1 %545, %543
  %547 = select i1 %546, i32 %544, i32 %539
  %548 = icmp sgt i32 %518, 0
  %549 = icmp sgt i32 %540, 0
  %550 = and i1 %548, %549
  %551 = sub nuw nsw i32 2147483647, %518
  %552 = icmp ult i32 %551, %540
  %553 = and i1 %552, %550
  %554 = select i1 %553, i32 %551, i32 %540
  %555 = icmp sgt i32 %547, 0
  %556 = select i1 %555, i32 %547, i32 0
  %557 = zext i32 %556 to i64
  %558 = icmp sgt i32 %554, 0
  %559 = select i1 %558, i32 %554, i32 0
  %560 = zext i32 %559 to i64
  %561 = shl nuw nsw i64 %560, 32
  %562 = or i64 %561, %557
  br label %563

563:                                              ; preds = %502, %537
  %564 = phi i32 [ %506, %502 ], [ %518, %537 ]
  %565 = phi i32 [ %504, %502 ], [ %513, %537 ]
  %566 = phi i64 [ %507, %502 ], [ %562, %537 ]
  %567 = zext i32 %564 to i64
  %568 = shl nuw i64 %567, 32
  %569 = zext i32 %565 to i64
  %570 = or i64 %568, %569
  store i64 %570, i64* %336, align 8
  store i64 %566, i64* %338, align 8
  br label %571

571:                                              ; preds = %563, %468
  %572 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 8
  %573 = load i32, i32* %572, align 8
  %574 = add i32 %573, -1
  %575 = icmp ult i32 %574, 8
  br i1 %575, label %576, label %585

576:                                              ; preds = %571
  %577 = trunc i32 %574 to i8
  %578 = lshr i8 -117, %577
  %579 = and i8 %578, 1
  %580 = icmp eq i8 %579, 0
  br i1 %580, label %585, label %581

581:                                              ; preds = %576
  %582 = sext i32 %574 to i64
  %583 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN2ui27BuildDisplaysFromXRandRInfoEifPl, i64 0, i64 %582
  %584 = load i32, i32* %583, align 4
  store i32 %584, i32* %339, align 4
  br label %585

585:                                              ; preds = %576, %571, %581
  br i1 %389, label %586, label %592

586:                                              ; preds = %585
  %587 = load i64, i64* %340, align 8
  %588 = load i64, i64* %341, align 16
  %589 = sub i64 %587, %588
  %590 = sdiv exact i64 %589, 568
  %591 = trunc i64 %590 to i32
  br label %592

592:                                              ; preds = %586, %585
  %593 = phi i32 [ %591, %586 ], [ %369, %585 ]
  %594 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %342, align 8
  %595 = icmp eq %"class.std::__1::__tree_node"* %594, null
  br i1 %595, label %628, label %596

596:                                              ; preds = %592, %596
  %597 = phi %"class.std::__1::__tree_end_node"* [ %607, %596 ], [ %112, %592 ]
  %598 = phi %"class.std::__1::__tree_node"* [ %608, %596 ], [ %594, %592 ]
  %599 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %598, i64 0, i32 1, i32 0, i32 0
  %600 = load i32, i32* %599, align 4
  %601 = icmp ult i32 %600, %372
  %602 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %598, i64 0, i32 0, i32 1
  %603 = bitcast %"class.std::__1::__tree_node_base"** %602 to %"class.std::__1::__tree_node"**
  %604 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %598, i64 0, i32 0, i32 0
  %605 = bitcast %"class.std::__1::__tree_node"* %598 to %"class.std::__1::__tree_node"**
  %606 = select i1 %601, %"class.std::__1::__tree_node"** %603, %"class.std::__1::__tree_node"** %605
  %607 = select i1 %601, %"class.std::__1::__tree_end_node"* %597, %"class.std::__1::__tree_end_node"* %604
  %608 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %606, align 8
  %609 = icmp eq %"class.std::__1::__tree_node"* %608, null
  br i1 %609, label %610, label %596

610:                                              ; preds = %596
  %611 = icmp eq %"class.std::__1::__tree_end_node"* %607, %112
  br i1 %611, label %628, label %612

612:                                              ; preds = %610
  %613 = bitcast %"class.std::__1::__tree_end_node"* %607 to %"class.std::__1::__tree_node"*
  %614 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %613, i64 0, i32 1, i32 0, i32 0
  %615 = load i32, i32* %614, align 4
  %616 = icmp ult i32 %372, %615
  br i1 %616, label %628, label %617

617:                                              ; preds = %612
  %618 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %607, i64 4
  %619 = bitcast %"class.std::__1::__tree_end_node"* %618 to i32*
  %620 = load i32, i32* %619, align 4
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %628

622:                                              ; preds = %617
  %623 = load i64, i64* %340, align 8
  %624 = load i64, i64* %341, align 16
  %625 = sub i64 %623, %624
  %626 = sdiv exact i64 %625, 568
  %627 = trunc i64 %626 to i32
  br label %628

628:                                              ; preds = %612, %610, %592, %622, %617
  %629 = phi %"class.std::__1::__tree_end_node"* [ %607, %622 ], [ %607, %617 ], [ %112, %592 ], [ %112, %610 ], [ %112, %612 ]
  %630 = phi i32 [ %627, %622 ], [ %368, %617 ], [ %368, %592 ], [ %368, %610 ], [ %368, %612 ]
  %631 = call zeroext i1 @_ZN7display7Display27HasForceDisplayColorProfileEv() #11
  br i1 %631, label %653, label %632

632:                                              ; preds = %628
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %343) #11
  store %"class.gfx::ICCProfile::Internals"* inttoptr (i64 -6148914691236517206 to %"class.gfx::ICCProfile::Internals"*), %"class.gfx::ICCProfile::Internals"** %344, align 8
  %633 = icmp eq %"class.std::__1::__tree_end_node"* %629, %112
  br i1 %633, label %638, label %634

634:                                              ; preds = %632
  %635 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %629, i64 4
  %636 = bitcast %"class.std::__1::__tree_end_node"* %635 to i32*
  %637 = load i32, i32* %636, align 4
  br label %638

638:                                              ; preds = %632, %634
  %639 = phi i32 [ %637, %634 ], [ 0, %632 ]
  call void @_ZN2ui23GetICCProfileForMonitorEi(%"class.gfx::ICCProfile"* nonnull sret %25, i32 %639) #11
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %345) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %345, i8* align 4 getelementptr inbounds (%"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* @__const._ZN2ui27BuildDisplaysFromXRandRInfoEifPl.color_space, i64 0, i32 0), i64 68, i1 false)
  call void @_ZNK3gfx10ICCProfile26GetPrimariesOnlyColorSpaceEv(%"class.gfx::ColorSpace"* nonnull sret %26, %"class.gfx::ICCProfile"* nonnull %25) #11
  br i1 %346, label %640, label %643

640:                                              ; preds = %638
  %641 = call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* nonnull %26) #11
  br i1 %641, label %643, label %642

642:                                              ; preds = %640
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %347) #11
  call void @_ZN7display21GetColorSpaceFromEdidERKNS_10EdidParserE(%"class.gfx::ColorSpace"* nonnull sret %27, %"class.display::EdidParser"* nonnull dereferenceable(176) %21) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %345, i8* nonnull align 4 %347, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %347) #11
  br label %643

643:                                              ; preds = %642, %640, %638
  call void @llvm.lifetime.start.p0i8(i64 472, i8* nonnull %348) #11
  call void @_ZN3gfx18DisplayColorSpacesC1ERKNS_10ColorSpaceENS_12BufferFormatE(%"class.gfx::DisplayColorSpaces"* nonnull %28, %"class.gfx::ColorSpace"* nonnull dereferenceable(68) %26, i32 10) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %349, i8* nonnull align 8 %348, i64 436, i1 false) #11
  %644 = load i8, i8* %350, align 8, !range !16
  %645 = icmp eq i8 %644, 0
  br i1 %645, label %651, label %646

646:                                              ; preds = %643
  %647 = load i8, i8* %352, align 8, !range !16
  %648 = icmp eq i8 %647, 0
  br i1 %648, label %650, label %649

649:                                              ; preds = %646
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %354, i8* align 8 %355, i64 24, i1 false) #11
  br label %652

650:                                              ; preds = %646
  call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %353, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %351) #11
  store i8 1, i8* %352, align 8
  br label %652

651:                                              ; preds = %643
  store i8 0, i8* %352, align 8
  br label %652

652:                                              ; preds = %649, %650, %651
  call void @llvm.lifetime.end.p0i8(i64 472, i8* nonnull %348) #11
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %345) #11
  call void @_ZN3gfx10ICCProfileD1Ev(%"class.gfx::ICCProfile"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %343) #11
  br label %653

653:                                              ; preds = %652, %628
  store i32 %63, i32* %356, align 8
  store i32 %105, i32* %357, align 4
  %654 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 7
  %655 = load i32, i32* %654, align 4
  %656 = load %"struct.x11::RandR::ModeInfo"*, %"struct.x11::RandR::ModeInfo"** %358, align 8
  %657 = load %"struct.x11::RandR::ModeInfo"*, %"struct.x11::RandR::ModeInfo"** %359, align 8
  %658 = icmp eq %"struct.x11::RandR::ModeInfo"* %656, %657
  br i1 %658, label %684, label %659

659:                                              ; preds = %653, %681
  %660 = phi %"struct.x11::RandR::ModeInfo"* [ %682, %681 ], [ %656, %653 ]
  %661 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %660, i64 0, i32 0
  %662 = load i32, i32* %661, align 4
  %663 = icmp eq i32 %662, %655
  br i1 %663, label %664, label %681

664:                                              ; preds = %659
  %665 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %660, i64 0, i32 6
  %666 = load i16, i16* %665, align 4
  %667 = icmp eq i16 %666, 0
  br i1 %667, label %684, label %668

668:                                              ; preds = %664
  %669 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %660, i64 0, i32 10
  %670 = load i16, i16* %669, align 4
  %671 = icmp eq i16 %670, 0
  br i1 %671, label %684, label %672

672:                                              ; preds = %668
  %673 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %660, i64 0, i32 3
  %674 = load i32, i32* %673, align 4
  %675 = uitofp i32 %674 to float
  %676 = zext i16 %666 to i32
  %677 = zext i16 %670 to i32
  %678 = mul nuw nsw i32 %677, %676
  %679 = sitofp i32 %678 to float
  %680 = fdiv float %675, %679
  br label %684

681:                                              ; preds = %659
  %682 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %660, i64 1
  %683 = icmp eq %"struct.x11::RandR::ModeInfo"* %682, %657
  br i1 %683, label %684, label %659

684:                                              ; preds = %681, %653, %664, %668, %672
  %685 = phi float [ 0.000000e+00, %664 ], [ 0.000000e+00, %668 ], [ %680, %672 ], [ 0.000000e+00, %653 ], [ 0.000000e+00, %681 ]
  %686 = fptosi float %685 to i32
  store i32 %686, i32* %360, align 4
  %687 = load %"class.display::Display"*, %"class.display::Display"** %36, align 8
  %688 = load %"class.display::Display"*, %"class.display::Display"** %37, align 16
  %689 = icmp eq %"class.display::Display"* %687, %688
  br i1 %689, label %693, label %690

690:                                              ; preds = %684
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %687, %"class.display::Display"* nonnull dereferenceable(568) %24) #11
  %691 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %687, i64 1
  %692 = ptrtoint %"class.display::Display"* %691 to i64
  store i64 %692, i64* %340, align 8
  br label %694

693:                                              ; preds = %684
  call void @_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %12, %"class.display::Display"* nonnull dereferenceable(568) %24) #11
  br label %694

694:                                              ; preds = %690, %693
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %329) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %324) #11
  call void @_ZN7display10EdidParserD1Ev(%"class.display::EdidParser"* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %301) #11
  br label %695

695:                                              ; preds = %403, %694
  %696 = phi i32 [ %593, %694 ], [ %369, %403 ]
  %697 = phi i32 [ %630, %694 ], [ %368, %403 ]
  %698 = icmp eq %"class.x11::Error"* %398, null
  br i1 %698, label %704, label %699

699:                                              ; preds = %695
  %700 = bitcast %"class.x11::Error"* %398 to void (%"class.x11::Error"*)***
  %701 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %700, align 8
  %702 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %701, i64 1
  %703 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %702, align 8
  call void %703(%"class.x11::Error"* nonnull %398) #11
  br label %704

704:                                              ; preds = %699, %695
  br i1 %404, label %725, label %705

705:                                              ; preds = %704
  %706 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 11, i32 0, i32 0
  %707 = load i32*, i32** %706, align 8
  %708 = icmp eq i32* %707, null
  br i1 %708, label %714, label %709

709:                                              ; preds = %705
  %710 = ptrtoint i32* %707 to i64
  %711 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 11, i32 0, i32 1
  %712 = bitcast i32** %711 to i64*
  store i64 %710, i64* %712, align 8
  %713 = bitcast i32* %707 to i8*
  call void @_ZdlPv(i8* %713) #12
  br label %714

714:                                              ; preds = %709, %705
  %715 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 10, i32 0, i32 0
  %716 = load i32*, i32** %715, align 8
  %717 = icmp eq i32* %716, null
  br i1 %717, label %723, label %718

718:                                              ; preds = %714
  %719 = ptrtoint i32* %716 to i64
  %720 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %397, i64 0, i32 10, i32 0, i32 1
  %721 = bitcast i32** %720 to i64*
  store i64 %719, i64* %721, align 8
  %722 = bitcast i32* %716 to i8*
  call void @_ZdlPv(i8* %722) #12
  br label %723

723:                                              ; preds = %718, %714
  %724 = bitcast %"struct.x11::RandR::GetCrtcInfoReply"* %397 to i8*
  call void @_ZdlPv(i8* %724) #12
  br label %725

725:                                              ; preds = %382, %723, %704, %388, %384
  %726 = phi i32 [ %369, %382 ], [ %369, %384 ], [ %369, %388 ], [ %696, %704 ], [ %696, %723 ]
  %727 = phi i32 [ %368, %382 ], [ %368, %384 ], [ %368, %388 ], [ %697, %704 ], [ %697, %723 ]
  %728 = icmp eq %"class.x11::Error"* %377, null
  br i1 %728, label %734, label %729

729:                                              ; preds = %725
  %730 = bitcast %"class.x11::Error"* %377 to void (%"class.x11::Error"*)***
  %731 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %730, align 8
  %732 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %731, i64 1
  %733 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %732, align 8
  call void %733(%"class.x11::Error"* nonnull %377) #11
  br label %734

734:                                              ; preds = %729, %725
  br i1 %383, label %772, label %735

735:                                              ; preds = %734
  %736 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 12, i32 0, i32 0
  %737 = load i8*, i8** %736, align 8
  %738 = icmp eq i8* %737, null
  br i1 %738, label %743, label %739

739:                                              ; preds = %735
  %740 = ptrtoint i8* %737 to i64
  %741 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 12, i32 0, i32 1
  %742 = bitcast i8** %741 to i64*
  store i64 %740, i64* %742, align 8
  call void @_ZdlPv(i8* nonnull %737) #12
  br label %743

743:                                              ; preds = %739, %735
  %744 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 11, i32 0, i32 0
  %745 = load i32*, i32** %744, align 8
  %746 = icmp eq i32* %745, null
  br i1 %746, label %752, label %747

747:                                              ; preds = %743
  %748 = ptrtoint i32* %745 to i64
  %749 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 11, i32 0, i32 1
  %750 = bitcast i32** %749 to i64*
  store i64 %748, i64* %750, align 8
  %751 = bitcast i32* %745 to i8*
  call void @_ZdlPv(i8* %751) #12
  br label %752

752:                                              ; preds = %747, %743
  %753 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 10, i32 0, i32 0
  %754 = load i32*, i32** %753, align 8
  %755 = icmp eq i32* %754, null
  br i1 %755, label %761, label %756

756:                                              ; preds = %752
  %757 = ptrtoint i32* %754 to i64
  %758 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 10, i32 0, i32 1
  %759 = bitcast i32** %758 to i64*
  store i64 %757, i64* %759, align 8
  %760 = bitcast i32* %754 to i8*
  call void @_ZdlPv(i8* %760) #12
  br label %761

761:                                              ; preds = %756, %752
  %762 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 9, i32 0, i32 0
  %763 = load i32*, i32** %762, align 8
  %764 = icmp eq i32* %763, null
  br i1 %764, label %770, label %765

765:                                              ; preds = %761
  %766 = ptrtoint i32* %763 to i64
  %767 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %376, i64 0, i32 9, i32 0, i32 1
  %768 = bitcast i32** %767 to i64*
  store i64 %766, i64* %768, align 8
  %769 = bitcast i32* %763 to i8*
  call void @_ZdlPv(i8* %769) #12
  br label %770

770:                                              ; preds = %765, %761
  %771 = bitcast %"struct.x11::RandR::GetOutputInfoReply"* %376 to i8*
  call void @_ZdlPv(i8* %771) #12
  br label %772

772:                                              ; preds = %734, %770
  %773 = add nuw i64 %367, 1
  %774 = load i64, i64* %284, align 8
  %775 = load i64, i64* %286, align 8
  %776 = sub i64 %774, %775
  %777 = ashr exact i64 %776, 2
  %778 = icmp ult i64 %773, %777
  br i1 %778, label %365, label %363

779:                                              ; preds = %363
  %780 = sext i32 %726 to i64
  store i64 %780, i64* %3, align 8
  br label %785

781:                                              ; preds = %363
  %782 = icmp eq i32 %727, -1
  br i1 %782, label %785, label %783

783:                                              ; preds = %781
  %784 = sext i32 %727 to i64
  store i64 %784, i64* %3, align 8
  br label %785

785:                                              ; preds = %279, %781, %783, %779
  %786 = load %"class.display::Display"*, %"class.display::Display"** %35, align 16
  %787 = load %"class.display::Display"*, %"class.display::Display"** %36, align 8
  %788 = icmp eq %"class.display::Display"* %786, %787
  br i1 %788, label %789, label %790

789:                                              ; preds = %785
  call void @_ZN2ui22GetFallbackDisplayListEf(%"class.std::__1::vector"* sret %0, float %2)
  br label %799

790:                                              ; preds = %785
  %791 = load i64, i64* %3, align 8
  call fastcc void @_ZN2ui12_GLOBAL__N_112ClipWorkAreaEPNSt3__16vectorIN7display7DisplayENS1_9allocatorIS4_EEEElf(%"class.std::__1::vector"* nonnull %12, i64 %791, float %2)
  %792 = bitcast %"class.std::__1::vector"* %12 to <2 x i64>*
  %793 = load <2 x i64>, <2 x i64>* %792, align 16
  %794 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %793, <2 x i64>* %794, align 8
  %795 = bitcast %"class.display::Display"** %37 to i64*
  %796 = load i64, i64* %795, align 16
  %797 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %798 = bitcast %"class.display::Display"** %797 to i64*
  store i64 %796, i64* %798, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 0, i64 24, i1 false) #11
  br label %799

799:                                              ; preds = %789, %790, %278
  %800 = icmp eq %"class.x11::Error"* %271, null
  br i1 %800, label %806, label %801

801:                                              ; preds = %799
  %802 = bitcast %"class.x11::Error"* %271 to void (%"class.x11::Error"*)***
  %803 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %802, align 8
  %804 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %803, i64 1
  %805 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %804, align 8
  call void %805(%"class.x11::Error"* nonnull %271) #11
  br label %806

806:                                              ; preds = %801, %799
  br i1 %277, label %809, label %807

807:                                              ; preds = %806
  %808 = bitcast %"struct.x11::RandR::GetOutputPrimaryReply"* %270 to i8*
  call void @_ZdlPv(i8* %808) #12
  br label %809

809:                                              ; preds = %806, %807
  %810 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %15, i64 0, i32 0
  %811 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node"**
  %812 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %811, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3x115RandR6OutputEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* nonnull %810, %"class.std::__1::__tree_node"* %812) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11
  br label %813

813:                                              ; preds = %809, %57
  %814 = icmp eq %"class.x11::Error"* %43, null
  br i1 %814, label %820, label %815

815:                                              ; preds = %813
  %816 = bitcast %"class.x11::Error"* %43 to void (%"class.x11::Error"*)***
  %817 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %816, align 8
  %818 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %817, i64 1
  %819 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %818, align 8
  call void %819(%"class.x11::Error"* nonnull %43) #11
  br label %820

820:                                              ; preds = %815, %813
  br i1 %49, label %858, label %821

821:                                              ; preds = %820
  %822 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 6, i32 0, i32 0
  %823 = load i8*, i8** %822, align 8
  %824 = icmp eq i8* %823, null
  br i1 %824, label %829, label %825

825:                                              ; preds = %821
  %826 = ptrtoint i8* %823 to i64
  %827 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 6, i32 0, i32 1
  %828 = bitcast i8** %827 to i64*
  store i64 %826, i64* %828, align 8
  call void @_ZdlPv(i8* nonnull %823) #12
  br label %829

829:                                              ; preds = %825, %821
  %830 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 5, i32 0, i32 0
  %831 = load %"struct.x11::RandR::ModeInfo"*, %"struct.x11::RandR::ModeInfo"** %830, align 8
  %832 = icmp eq %"struct.x11::RandR::ModeInfo"* %831, null
  br i1 %832, label %838, label %833

833:                                              ; preds = %829
  %834 = ptrtoint %"struct.x11::RandR::ModeInfo"* %831 to i64
  %835 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 5, i32 0, i32 1
  %836 = bitcast %"struct.x11::RandR::ModeInfo"** %835 to i64*
  store i64 %834, i64* %836, align 8
  %837 = bitcast %"struct.x11::RandR::ModeInfo"* %831 to i8*
  call void @_ZdlPv(i8* %837) #12
  br label %838

838:                                              ; preds = %833, %829
  %839 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 4, i32 0, i32 0
  %840 = load i32*, i32** %839, align 8
  %841 = icmp eq i32* %840, null
  br i1 %841, label %847, label %842

842:                                              ; preds = %838
  %843 = ptrtoint i32* %840 to i64
  %844 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 4, i32 0, i32 1
  %845 = bitcast i32** %844 to i64*
  store i64 %843, i64* %845, align 8
  %846 = bitcast i32* %840 to i8*
  call void @_ZdlPv(i8* %846) #12
  br label %847

847:                                              ; preds = %842, %838
  %848 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 3, i32 0, i32 0
  %849 = load i32*, i32** %848, align 8
  %850 = icmp eq i32* %849, null
  br i1 %850, label %856, label %851

851:                                              ; preds = %847
  %852 = ptrtoint i32* %849 to i64
  %853 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42, i64 0, i32 3, i32 0, i32 1
  %854 = bitcast i32** %853 to i64*
  store i64 %852, i64* %854, align 8
  %855 = bitcast i32* %849 to i8*
  call void @_ZdlPv(i8* %855) #12
  br label %856

856:                                              ; preds = %851, %847
  %857 = bitcast %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %42 to i8*
  call void @_ZdlPv(i8* %857) #12
  br label %858

858:                                              ; preds = %820, %856
  %859 = load %"class.display::Display"*, %"class.display::Display"** %35, align 16
  %860 = icmp eq %"class.display::Display"* %859, null
  br i1 %860, label %874, label %861

861:                                              ; preds = %858
  %862 = bitcast %"class.display::Display"* %859 to i8*
  %863 = load %"class.display::Display"*, %"class.display::Display"** %36, align 8
  %864 = icmp eq %"class.display::Display"* %863, %859
  br i1 %864, label %872, label %865

865:                                              ; preds = %861, %865
  %866 = phi %"class.display::Display"* [ %867, %865 ], [ %863, %861 ]
  %867 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %866, i64 -1
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %867) #11
  %868 = icmp eq %"class.display::Display"* %867, %859
  br i1 %868, label %869, label %865

869:                                              ; preds = %865
  %870 = bitcast %"class.std::__1::vector"* %12 to i8**
  %871 = load i8*, i8** %870, align 16
  br label %872

872:                                              ; preds = %869, %861
  %873 = phi i8* [ %871, %869 ], [ %862, %861 ]
  store %"class.display::Display"* %859, %"class.display::Display"** %36, align 8
  call void @_ZdlPv(i8* %873) #12
  br label %874

874:                                              ; preds = %858, %872
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #11
  ret void
}

declare i32 @_ZN2ui16GetX11RootWindowEv() local_unnamed_addr #3

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR25GetScreenResourcesCurrentERKNS_6WindowE(%"class.x11::RandR"*, i32* dereferenceable(4)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR30GetScreenResourcesCurrentReplyEE4SyncEv(%"class.x11::Future"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.260, align 8
  %3 = alloca %"class.std::__1::unique_ptr.262", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.260* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.scoped_refptr.260, %class.scoped_refptr.260* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.260* nonnull %2, %"class.std::__1::unique_ptr.262"* nonnull %3) #11
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #11
  %23 = call %"struct.x11::RandR::GetScreenResourcesCurrentReply"* @_ZN3x116detail9ReadReplyINS_5RandR30GetScreenResourcesCurrentReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #11
  %24 = ptrtoint %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #11
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::RandR::GetScreenResourcesCurrentReply"*
  %47 = insertvalue { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } undef, %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %46, 0
  %48 = insertvalue { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } %48
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR16GetOutputPrimaryERKNS_6WindowE(%"class.x11::RandR"*, i32* dereferenceable(4)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR21GetOutputPrimaryReplyEE4SyncEv(%"class.x11::Future.329"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.260, align 8
  %3 = alloca %"class.std::__1::unique_ptr.262", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.329", %"class.x11::Future.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.260* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.scoped_refptr.260, %class.scoped_refptr.260* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.260* nonnull %2, %"class.std::__1::unique_ptr.262"* nonnull %3) #11
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #11
  %23 = call %"struct.x11::RandR::GetOutputPrimaryReply"* @_ZN3x116detail9ReadReplyINS_5RandR21GetOutputPrimaryReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #11
  %24 = ptrtoint %"struct.x11::RandR::GetOutputPrimaryReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #11
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::RandR::GetOutputPrimaryReply"*
  %47 = insertvalue { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } undef, %"struct.x11::RandR::GetOutputPrimaryReply"* %46, 0
  %48 = insertvalue { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } %48
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR13GetOutputInfoERKNS0_20GetOutputInfoRequestE(%"class.x11::RandR"*, %"struct.x11::RandR::GetOutputInfoRequest"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR18GetOutputInfoReplyEE4SyncEv(%"class.x11::Future.344"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.260, align 8
  %3 = alloca %"class.std::__1::unique_ptr.262", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.344", %"class.x11::Future.344"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.260* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.scoped_refptr.260, %class.scoped_refptr.260* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.260* nonnull %2, %"class.std::__1::unique_ptr.262"* nonnull %3) #11
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #11
  %23 = call %"struct.x11::RandR::GetOutputInfoReply"* @_ZN3x116detail9ReadReplyINS_5RandR18GetOutputInfoReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #11
  %24 = ptrtoint %"struct.x11::RandR::GetOutputInfoReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #11
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::RandR::GetOutputInfoReply"*
  %47 = insertvalue { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } undef, %"struct.x11::RandR::GetOutputInfoReply"* %46, 0
  %48 = insertvalue { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } %48
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR11GetCrtcInfoERKNS0_18GetCrtcInfoRequestE(%"class.x11::RandR"*, %"struct.x11::RandR::GetCrtcInfoRequest"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR16GetCrtcInfoReplyEE4SyncEv(%"class.x11::Future.352"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.260, align 8
  %3 = alloca %"class.std::__1::unique_ptr.262", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.352", %"class.x11::Future.352"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.260* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.scoped_refptr.260, %class.scoped_refptr.260* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.260* nonnull %2, %"class.std::__1::unique_ptr.262"* nonnull %3) #11
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #11
  %23 = call %"struct.x11::RandR::GetCrtcInfoReply"* @_ZN3x116detail9ReadReplyINS_5RandR16GetCrtcInfoReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #11
  %24 = ptrtoint %"struct.x11::RandR::GetCrtcInfoReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #11
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::RandR::GetCrtcInfoReply"*
  %47 = insertvalue { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } undef, %"struct.x11::RandR::GetCrtcInfoReply"* %46, 0
  %48 = insertvalue { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } %48
}

declare void @_ZN7display10EdidParserC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.display::EdidParser"*, %"class.std::__1::vector.298"* dereferenceable(24)) unnamed_addr #3

declare i64 @_ZNK7display10EdidParser12GetDisplayIdEh(%"class.display::EdidParser"*, i8 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN7display7Display27HasForceDisplayColorProfileEv() local_unnamed_addr #3

declare void @_ZN2ui23GetICCProfileForMonitorEi(%"class.gfx::ICCProfile"* sret, i32) local_unnamed_addr #3

declare void @_ZNK3gfx10ICCProfile26GetPrimariesOnlyColorSpaceEv(%"class.gfx::ColorSpace"* sret, %"class.gfx::ICCProfile"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #3

declare void @_ZN7display21GetColorSpaceFromEdidERKNS_10EdidParserE(%"class.gfx::ColorSpace"* sret, %"class.display::EdidParser"* dereferenceable(176)) local_unnamed_addr #3

declare void @_ZN3gfx18DisplayColorSpacesC1ERKNS_10ColorSpaceENS_12BufferFormatE(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::ColorSpace"* dereferenceable(68), i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx10ICCProfileD1Ev(%"class.gfx::ICCProfile"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7display10EdidParserD1Ev(%"class.display::EdidParser"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui42GetPrimaryDisplayRefreshIntervalFromXrandrEv() local_unnamed_addr #0 {
  %1 = alloca %"class.x11::RandR", align 8
  %2 = alloca i32, align 4
  %3 = alloca %"class.x11::Future", align 8
  %4 = alloca %"class.x11::Future.329", align 8
  %5 = alloca %"class.x11::Future.344", align 8
  %6 = alloca %"struct.x11::RandR::GetOutputInfoRequest", align 4
  %7 = alloca %"class.x11::Future.352", align 8
  %8 = alloca %"struct.x11::RandR::GetCrtcInfoRequest", align 4
  %9 = bitcast %"class.x11::RandR"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = bitcast %"class.x11::RandR"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #11
  %12 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %11, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0
  %13 = bitcast %"class.x11::RandR"** %12 to i8**
  %14 = load i8*, i8** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %14, i64 16, i1 false)
  %15 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  %16 = tail call i32 @_ZN2ui16GetX11RootWindowEv() #11
  store i32 %16, i32* %2, align 4
  %17 = bitcast %"class.x11::Future"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR25GetScreenResourcesCurrentERKNS_6WindowE(%"class.x11::RandR"* nonnull %1, i32* nonnull dereferenceable(4) %2) #11
  %19 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %18, %"class.x11::Connection::FutureImpl"** %19, align 8
  %20 = call { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR30GetScreenResourcesCurrentReplyEE4SyncEv(%"class.x11::Future"* nonnull %3)
  %21 = extractvalue { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } %20, 0
  %22 = extractvalue { %"struct.x11::RandR::GetScreenResourcesCurrentReply"*, %"class.x11::Error"* } %20, 1
  %23 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %19, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %19, align 8
  %24 = icmp eq %"class.x11::Connection::FutureImpl"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %0
  %26 = bitcast %"class.x11::Connection::FutureImpl"* %23 to i8*
  call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %0, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %28 = icmp eq %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, null
  br i1 %28, label %260, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.x11::Future.329"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR16GetOutputPrimaryERKNS_6WindowE(%"class.x11::RandR"* nonnull %1, i32* nonnull dereferenceable(4) %2) #11
  %32 = getelementptr inbounds %"class.x11::Future.329", %"class.x11::Future.329"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %31, %"class.x11::Connection::FutureImpl"** %32, align 8
  %33 = call { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR21GetOutputPrimaryReplyEE4SyncEv(%"class.x11::Future.329"* nonnull %4)
  %34 = extractvalue { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } %33, 0
  %35 = extractvalue { %"struct.x11::RandR::GetOutputPrimaryReply"*, %"class.x11::Error"* } %33, 1
  %36 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %32, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %32, align 8
  %37 = icmp eq %"class.x11::Connection::FutureImpl"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %29
  %39 = bitcast %"class.x11::Connection::FutureImpl"* %36 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  %41 = icmp eq %"struct.x11::RandR::GetOutputPrimaryReply"* %34, null
  br i1 %41, label %249, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.x11::RandR::GetOutputPrimaryReply", %"struct.x11::RandR::GetOutputPrimaryReply"* %34, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 4
  %46 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 4, i32 0, i32 1
  %47 = bitcast i32** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.284"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  br i1 %51, label %249, label %52

52:                                               ; preds = %42
  %53 = bitcast %"class.x11::Future.344"* %5 to i8*
  %54 = bitcast %"struct.x11::RandR::GetOutputInfoRequest"* %6 to i8*
  %55 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoRequest", %"struct.x11::RandR::GetOutputInfoRequest"* %6, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoRequest", %"struct.x11::RandR::GetOutputInfoRequest"* %6, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 2
  %58 = getelementptr inbounds %"class.x11::Future.344", %"class.x11::Future.344"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.x11::Future.352"* %7 to i8*
  %60 = bitcast %"struct.x11::RandR::GetCrtcInfoRequest"* %8 to i8*
  %61 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoRequest", %"struct.x11::RandR::GetCrtcInfoRequest"* %8, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoRequest", %"struct.x11::RandR::GetCrtcInfoRequest"* %8, i64 0, i32 1
  %63 = getelementptr inbounds %"class.x11::Future.352", %"class.x11::Future.352"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 5, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 5, i32 0, i32 1
  br label %66

66:                                               ; preds = %52, %239
  %67 = phi i64 [ %50, %52 ], [ %240, %239 ]
  %68 = phi i64 [ %48, %52 ], [ %241, %239 ]
  %69 = phi i64 [ 0, %52 ], [ %245, %239 ]
  %70 = phi i8 [ 0, %52 ], [ %243, %239 ]
  %71 = phi i64 [ undef, %52 ], [ %242, %239 ]
  %72 = and i8 %70, 1
  %73 = icmp ne i8 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %66
  %75 = inttoptr i64 %67 to i32*
  %76 = getelementptr inbounds i32, i32* %75, i64 %69
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %44
  br i1 %78, label %79, label %239

79:                                               ; preds = %74, %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store i32 %44, i32* %55, align 4
  %80 = load i32, i32* %57, align 8
  store i32 %80, i32* %56, align 4
  %81 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR13GetOutputInfoERKNS0_20GetOutputInfoRequestE(%"class.x11::RandR"* nonnull %1, %"struct.x11::RandR::GetOutputInfoRequest"* nonnull dereferenceable(8) %6) #11
  store %"class.x11::Connection::FutureImpl"* %81, %"class.x11::Connection::FutureImpl"** %58, align 8
  %82 = call { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR18GetOutputInfoReplyEE4SyncEv(%"class.x11::Future.344"* nonnull %5)
  %83 = extractvalue { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } %82, 0
  %84 = extractvalue { %"struct.x11::RandR::GetOutputInfoReply"*, %"class.x11::Error"* } %82, 1
  %85 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %58, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %58, align 8
  %86 = icmp eq %"class.x11::Connection::FutureImpl"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = bitcast %"class.x11::Connection::FutureImpl"* %85 to i8*
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %79, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  %90 = icmp eq %"struct.x11::RandR::GetOutputInfoReply"* %83, null
  br i1 %90, label %185, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 6
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %91
  %96 = select i1 %73, i8 %70, i8 1
  %97 = select i1 %73, i64 %69, i64 -1
  br label %185

98:                                               ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  %99 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 3
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* %61, align 4
  %101 = load i32, i32* %57, align 8
  store i32 %101, i32* %62, align 4
  %102 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR11GetCrtcInfoERKNS0_18GetCrtcInfoRequestE(%"class.x11::RandR"* nonnull %1, %"struct.x11::RandR::GetCrtcInfoRequest"* nonnull dereferenceable(8) %8) #11
  store %"class.x11::Connection::FutureImpl"* %102, %"class.x11::Connection::FutureImpl"** %63, align 8
  %103 = call { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR16GetCrtcInfoReplyEE4SyncEv(%"class.x11::Future.352"* nonnull %7)
  %104 = extractvalue { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } %103, 0
  %105 = extractvalue { %"struct.x11::RandR::GetCrtcInfoReply"*, %"class.x11::Error"* } %103, 1
  %106 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %63, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %63, align 8
  %107 = icmp eq %"class.x11::Connection::FutureImpl"* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %98
  %109 = bitcast %"class.x11::Connection::FutureImpl"* %106 to i8*
  call void @_ZdlPv(i8* %109) #12
  br label %110

110:                                              ; preds = %98, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  %111 = icmp eq %"struct.x11::RandR::GetCrtcInfoReply"* %104, null
  br i1 %111, label %155, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %104, i64 0, i32 7
  %114 = load i32, i32* %113, align 4
  %115 = load %"struct.x11::RandR::ModeInfo"*, %"struct.x11::RandR::ModeInfo"** %64, align 8
  %116 = load %"struct.x11::RandR::ModeInfo"*, %"struct.x11::RandR::ModeInfo"** %65, align 8
  %117 = icmp eq %"struct.x11::RandR::ModeInfo"* %115, %116
  br i1 %117, label %155, label %118

118:                                              ; preds = %112, %131
  %119 = phi %"struct.x11::RandR::ModeInfo"* [ %132, %131 ], [ %115, %112 ]
  %120 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %119, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, %114
  br i1 %122, label %123, label %131

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %119, i64 0, i32 6
  %125 = load i16, i16* %124, align 4
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %155, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %119, i64 0, i32 10
  %129 = load i16, i16* %128, align 4
  %130 = icmp eq i16 %129, 0
  br i1 %130, label %155, label %134

131:                                              ; preds = %118
  %132 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %119, i64 1
  %133 = icmp eq %"struct.x11::RandR::ModeInfo"* %132, %116
  br i1 %133, label %155, label %118

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"struct.x11::RandR::ModeInfo", %"struct.x11::RandR::ModeInfo"* %119, i64 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = uitofp i32 %136 to float
  %138 = zext i16 %125 to i32
  %139 = zext i16 %129 to i32
  %140 = mul nuw nsw i32 %139, %138
  %141 = sitofp i32 %140 to float
  %142 = fdiv float %137, %141
  %143 = fcmp oeq float %142, 0.000000e+00
  br i1 %143, label %155, label %144

144:                                              ; preds = %134
  %145 = fpext float %142 to double
  %146 = fdiv double 1.000000e+00, %145
  %147 = fmul double %146, 1.000000e+06
  %148 = fcmp ult double %147, 0xC3E0000000000000
  %149 = fcmp ugt double %147, 0x43DFFFFFFFFFFFFF
  %150 = fcmp ogt double %147, 0xC3E0000000000000
  %151 = select i1 %150, double %147, double 0xC3E0000000000000
  %152 = fptosi double %151 to i64
  %153 = select i1 %148, i64 0, i64 9223372036854775807
  %154 = select i1 %149, i64 %153, i64 %152
  br label %155

155:                                              ; preds = %131, %110, %112, %127, %123, %144, %134
  %156 = phi i64 [ %71, %110 ], [ %154, %144 ], [ %71, %134 ], [ %71, %123 ], [ %71, %127 ], [ %71, %112 ], [ %71, %131 ]
  %157 = phi i32 [ 4, %110 ], [ 1, %144 ], [ 4, %134 ], [ 4, %123 ], [ 4, %127 ], [ 4, %112 ], [ 4, %131 ]
  %158 = icmp eq %"class.x11::Error"* %105, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = bitcast %"class.x11::Error"* %105 to void (%"class.x11::Error"*)***
  %161 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %161, i64 1
  %163 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %162, align 8
  call void %163(%"class.x11::Error"* nonnull %105) #11
  br label %164

164:                                              ; preds = %159, %155
  br i1 %111, label %185, label %165

165:                                              ; preds = %164
  %166 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %104, i64 0, i32 11, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = icmp eq i32* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %165
  %170 = ptrtoint i32* %167 to i64
  %171 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %104, i64 0, i32 11, i32 0, i32 1
  %172 = bitcast i32** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast i32* %167 to i8*
  call void @_ZdlPv(i8* %173) #12
  br label %174

174:                                              ; preds = %169, %165
  %175 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %104, i64 0, i32 10, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = icmp eq i32* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %174
  %179 = ptrtoint i32* %176 to i64
  %180 = getelementptr inbounds %"struct.x11::RandR::GetCrtcInfoReply", %"struct.x11::RandR::GetCrtcInfoReply"* %104, i64 0, i32 10, i32 0, i32 1
  %181 = bitcast i32** %180 to i64*
  store i64 %179, i64* %181, align 8
  %182 = bitcast i32* %176 to i8*
  call void @_ZdlPv(i8* %182) #12
  br label %183

183:                                              ; preds = %178, %174
  %184 = bitcast %"struct.x11::RandR::GetCrtcInfoReply"* %104 to i8*
  call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %89, %183, %164, %95
  %186 = phi i64 [ %71, %95 ], [ %71, %89 ], [ %156, %164 ], [ %156, %183 ]
  %187 = phi i32 [ 4, %95 ], [ 4, %89 ], [ %157, %164 ], [ %157, %183 ]
  %188 = phi i8 [ %96, %95 ], [ %70, %89 ], [ %70, %164 ], [ %70, %183 ]
  %189 = phi i64 [ %97, %95 ], [ %69, %89 ], [ %69, %164 ], [ %69, %183 ]
  %190 = icmp eq %"class.x11::Error"* %84, null
  br i1 %190, label %196, label %191

191:                                              ; preds = %185
  %192 = bitcast %"class.x11::Error"* %84 to void (%"class.x11::Error"*)***
  %193 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %192, align 8
  %194 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %193, i64 1
  %195 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %194, align 8
  call void %195(%"class.x11::Error"* nonnull %84) #11
  br label %196

196:                                              ; preds = %191, %185
  br i1 %90, label %234, label %197

197:                                              ; preds = %196
  %198 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 12, i32 0, i32 0
  %199 = load i8*, i8** %198, align 8
  %200 = icmp eq i8* %199, null
  br i1 %200, label %205, label %201

201:                                              ; preds = %197
  %202 = ptrtoint i8* %199 to i64
  %203 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 12, i32 0, i32 1
  %204 = bitcast i8** %203 to i64*
  store i64 %202, i64* %204, align 8
  call void @_ZdlPv(i8* nonnull %199) #12
  br label %205

205:                                              ; preds = %201, %197
  %206 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 11, i32 0, i32 0
  %207 = load i32*, i32** %206, align 8
  %208 = icmp eq i32* %207, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = ptrtoint i32* %207 to i64
  %211 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 11, i32 0, i32 1
  %212 = bitcast i32** %211 to i64*
  store i64 %210, i64* %212, align 8
  %213 = bitcast i32* %207 to i8*
  call void @_ZdlPv(i8* %213) #12
  br label %214

214:                                              ; preds = %209, %205
  %215 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 10, i32 0, i32 0
  %216 = load i32*, i32** %215, align 8
  %217 = icmp eq i32* %216, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %214
  %219 = ptrtoint i32* %216 to i64
  %220 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 10, i32 0, i32 1
  %221 = bitcast i32** %220 to i64*
  store i64 %219, i64* %221, align 8
  %222 = bitcast i32* %216 to i8*
  call void @_ZdlPv(i8* %222) #12
  br label %223

223:                                              ; preds = %218, %214
  %224 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 9, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"struct.x11::RandR::GetOutputInfoReply", %"struct.x11::RandR::GetOutputInfoReply"* %83, i64 0, i32 9, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %231) #12
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"struct.x11::RandR::GetOutputInfoReply"* %83 to i8*
  call void @_ZdlPv(i8* %233) #12
  br label %234

234:                                              ; preds = %196, %232
  %235 = icmp eq i32 %187, 4
  br i1 %235, label %236, label %249

236:                                              ; preds = %234
  %237 = load i64, i64* %47, align 8
  %238 = load i64, i64* %49, align 8
  br label %239

239:                                              ; preds = %236, %74
  %240 = phi i64 [ %238, %236 ], [ %67, %74 ]
  %241 = phi i64 [ %237, %236 ], [ %68, %74 ]
  %242 = phi i64 [ %186, %236 ], [ %71, %74 ]
  %243 = phi i8 [ %188, %236 ], [ %70, %74 ]
  %244 = phi i64 [ %189, %236 ], [ %69, %74 ]
  %245 = add i64 %244, 1
  %246 = sub i64 %241, %240
  %247 = ashr exact i64 %246, 2
  %248 = icmp ult i64 %245, %247
  br i1 %248, label %66, label %249

249:                                              ; preds = %239, %234, %42, %40
  %250 = phi i64 [ 16666, %40 ], [ 16666, %42 ], [ 16666, %239 ], [ %186, %234 ]
  %251 = icmp eq %"class.x11::Error"* %35, null
  br i1 %251, label %257, label %252

252:                                              ; preds = %249
  %253 = bitcast %"class.x11::Error"* %35 to void (%"class.x11::Error"*)***
  %254 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %253, align 8
  %255 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %254, i64 1
  %256 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %255, align 8
  call void %256(%"class.x11::Error"* nonnull %35) #11
  br label %257

257:                                              ; preds = %252, %249
  br i1 %41, label %260, label %258

258:                                              ; preds = %257
  %259 = bitcast %"struct.x11::RandR::GetOutputPrimaryReply"* %34 to i8*
  call void @_ZdlPv(i8* %259) #12
  br label %260

260:                                              ; preds = %27, %258, %257
  %261 = phi i64 [ 16666, %27 ], [ %250, %257 ], [ %250, %258 ]
  %262 = icmp eq %"class.x11::Error"* %22, null
  br i1 %262, label %268, label %263

263:                                              ; preds = %260
  %264 = bitcast %"class.x11::Error"* %22 to void (%"class.x11::Error"*)***
  %265 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %265, i64 1
  %267 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %266, align 8
  call void %267(%"class.x11::Error"* nonnull %22) #11
  br label %268

268:                                              ; preds = %263, %260
  br i1 %28, label %306, label %269

269:                                              ; preds = %268
  %270 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 6, i32 0, i32 0
  %271 = load i8*, i8** %270, align 8
  %272 = icmp eq i8* %271, null
  br i1 %272, label %277, label %273

273:                                              ; preds = %269
  %274 = ptrtoint i8* %271 to i64
  %275 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 6, i32 0, i32 1
  %276 = bitcast i8** %275 to i64*
  store i64 %274, i64* %276, align 8
  call void @_ZdlPv(i8* nonnull %271) #12
  br label %277

277:                                              ; preds = %273, %269
  %278 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 5, i32 0, i32 0
  %279 = load %"struct.x11::RandR::ModeInfo"*, %"struct.x11::RandR::ModeInfo"** %278, align 8
  %280 = icmp eq %"struct.x11::RandR::ModeInfo"* %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %277
  %282 = ptrtoint %"struct.x11::RandR::ModeInfo"* %279 to i64
  %283 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 5, i32 0, i32 1
  %284 = bitcast %"struct.x11::RandR::ModeInfo"** %283 to i64*
  store i64 %282, i64* %284, align 8
  %285 = bitcast %"struct.x11::RandR::ModeInfo"* %279 to i8*
  call void @_ZdlPv(i8* %285) #12
  br label %286

286:                                              ; preds = %281, %277
  %287 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 4, i32 0, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %295, label %290

290:                                              ; preds = %286
  %291 = ptrtoint i32* %288 to i64
  %292 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 4, i32 0, i32 1
  %293 = bitcast i32** %292 to i64*
  store i64 %291, i64* %293, align 8
  %294 = bitcast i32* %288 to i8*
  call void @_ZdlPv(i8* %294) #12
  br label %295

295:                                              ; preds = %290, %286
  %296 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 3, i32 0, i32 0
  %297 = load i32*, i32** %296, align 8
  %298 = icmp eq i32* %297, null
  br i1 %298, label %304, label %299

299:                                              ; preds = %295
  %300 = ptrtoint i32* %297 to i64
  %301 = getelementptr inbounds %"struct.x11::RandR::GetScreenResourcesCurrentReply", %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21, i64 0, i32 3, i32 0, i32 1
  %302 = bitcast i32** %301 to i64*
  store i64 %300, i64* %302, align 8
  %303 = bitcast i32* %297 to i8*
  call void @_ZdlPv(i8* %303) #12
  br label %304

304:                                              ; preds = %299, %295
  %305 = bitcast %"struct.x11::RandR::GetScreenResourcesCurrentReply"* %21 to i8*
  call void @_ZdlPv(i8* %305) #12
  br label %306

306:                                              ; preds = %268, %304
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i64 %261
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR12QueryVersionERKNS0_19QueryVersionRequestE(%"class.x11::RandR"*, %"struct.x11::RandR::QueryVersionRequest"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::RandR::QueryVersionReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR17QueryVersionReplyEE4SyncEv(%"class.x11::Future.381"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.260, align 8
  %3 = alloca %"class.std::__1::unique_ptr.262", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.381", %"class.x11::Future.381"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.260* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.scoped_refptr.260, %class.scoped_refptr.260* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.260* nonnull %2, %"class.std::__1::unique_ptr.262"* nonnull %3) #11
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #11
  %23 = call %"struct.x11::RandR::QueryVersionReply"* @_ZN3x116detail9ReadReplyINS_5RandR17QueryVersionReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #11
  %24 = ptrtoint %"struct.x11::RandR::QueryVersionReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #11
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::RandR::QueryVersionReply"*
  %47 = insertvalue { %"struct.x11::RandR::QueryVersionReply"*, %"class.x11::Error"* } undef, %"struct.x11::RandR::QueryVersionReply"* %46, 0
  %48 = insertvalue { %"struct.x11::RandR::QueryVersionReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::RandR::QueryVersionReply"*, %"class.x11::Error"* } %48
}

declare void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"*, %class.scoped_refptr.260*, %"class.std::__1::unique_ptr.262"*) local_unnamed_addr #3

declare void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"*, %"class.base::RefCountedMemory"*, i1 zeroext) unnamed_addr #3

declare %"struct.x11::RandR::QueryVersionReply"* @_ZN3x116detail9ReadReplyINS_5RandR17QueryVersionReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3x1116GetArrayPropertyIiEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS2_mPNS_10ConnectionE(i32, i32, %"class.std::__1::vector.392"*, i32*, i64, %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.x11::Future.408", align 8
  %8 = alloca %"struct.x11::GetPropertyRequest", align 4
  %9 = bitcast %"class.x11::Future.408"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 1
  store i32 %0, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 2
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 3
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 4
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 5
  %17 = icmp eq i64 %4, 0
  %18 = select i1 %17, i64 4294967295, i64 %4
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %16, align 4
  %20 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"* %10, %"struct.x11::GetPropertyRequest"* nonnull dereferenceable(24) %8) #11
  %21 = getelementptr inbounds %"class.x11::Future.408", %"class.x11::Future.408"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %20, %"class.x11::Connection::FutureImpl"** %21, align 8
  %22 = call { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv(%"class.x11::Future.408"* nonnull %7)
  %23 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %22, 0
  %24 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %22, 1
  %25 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %21, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %21, align 8
  %26 = icmp eq %"class.x11::Connection::FutureImpl"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %6
  %28 = bitcast %"class.x11::Connection::FutureImpl"* %25 to i8*
  call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %30 = icmp eq %"struct.x11::GetPropertyReply"* %23, null
  br i1 %30, label %75, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 0
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 32
  br i1 %34, label %35, label %75

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 4
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.392", %"class.std::__1::vector.392"* %2, i64 0, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.392"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 2
  %46 = icmp ult i64 %45, %38
  %47 = inttoptr i64 %43 to i32*
  %48 = inttoptr i64 %43 to i8*
  br i1 %46, label %49, label %53

49:                                               ; preds = %35
  %50 = sub nsw i64 %38, %45
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.392"* %2, i64 %50) #11
  %51 = bitcast %"class.std::__1::vector.392"* %2 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %57

53:                                               ; preds = %35
  %54 = icmp ugt i64 %45, %38
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = getelementptr inbounds i32, i32* %47, i64 %38
  store i32* %56, i32** %39, align 8
  br label %57

57:                                               ; preds = %49, %53, %55
  %58 = phi i8* [ %52, %49 ], [ %48, %53 ], [ %48, %55 ]
  %59 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 5, i32 0
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %61 = bitcast %"class.base::RefCountedMemory"* %60 to i8* (%"class.base::RefCountedMemory"*)***
  %62 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %61, align 8
  %63 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %62, align 8
  %64 = call i8* %63(%"class.base::RefCountedMemory"* %60) #11
  %65 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %66 = bitcast %"class.base::RefCountedMemory"* %65 to i64 (%"class.base::RefCountedMemory"*)***
  %67 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %67, i64 1
  %69 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = call i64 %69(%"class.base::RefCountedMemory"* %65) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 1 %64, i64 %70, i1 false)
  %71 = icmp eq i32* %3, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %3, align 4
  br label %75

75:                                               ; preds = %29, %72, %57, %31
  %76 = phi i1 [ false, %31 ], [ false, %29 ], [ true, %57 ], [ true, %72 ]
  %77 = icmp eq %"class.x11::Error"* %24, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.x11::Error"* %24 to void (%"class.x11::Error"*)***
  %80 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %80, i64 1
  %82 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %81, align 8
  call void %82(%"class.x11::Error"* nonnull %24) #11
  br label %83

83:                                               ; preds = %78, %75
  br i1 %30, label %102, label %84

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 5, i32 0
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %85, align 8
  %87 = icmp eq %"class.base::RefCountedMemory"* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %86, i64 0, i32 1
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %89, i64 -2
  %95 = bitcast %"class.base::RefCountedThreadSafe.261"* %94 to %"class.base::RefCountedMemory"*
  %96 = bitcast %"class.base::RefCountedThreadSafe.261"* %94 to void (%"class.base::RefCountedMemory"*)***
  %97 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %97, i64 3
  %99 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %98, align 8
  call void %99(%"class.base::RefCountedMemory"* nonnull %95) #11
  br label %100

100:                                              ; preds = %93, %88, %84
  %101 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %23, i64 0, i32 0
  call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %83, %100
  ret i1 %76
}

declare i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"*, %"struct.x11::GetPropertyRequest"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv(%"class.x11::Future.408"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.260, align 8
  %3 = alloca %"class.std::__1::unique_ptr.262", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.408", %"class.x11::Future.408"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.260* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.scoped_refptr.260, %class.scoped_refptr.260* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.260* nonnull %2, %"class.std::__1::unique_ptr.262"* nonnull %3) #11
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #11
  %23 = call %"struct.x11::GetPropertyReply"* @_ZN3x116detail9ReadReplyINS_16GetPropertyReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #11
  %24 = ptrtoint %"struct.x11::GetPropertyReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #11
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::GetPropertyReply"*
  %47 = insertvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } undef, %"struct.x11::GetPropertyReply"* %46, 0
  %48 = insertvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %48
}

declare %"struct.x11::GetPropertyReply"* @_ZN3x116detail9ReadReplyINS_16GetPropertyReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.392"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.392", %"class.std::__1::vector.392"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.392", %"class.std::__1::vector.392"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.392"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.392"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.392", %"class.std::__1::vector.392"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare zeroext i1 @_ZNK3gfx4Rect8ContainsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR11GetMonitorsERKNS_6WindowERKh(%"class.x11::RandR"*, i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::RandR::GetMonitorsReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR16GetMonitorsReplyEE4SyncEv(%"class.x11::Future.425"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.260, align 8
  %3 = alloca %"class.std::__1::unique_ptr.262", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.425", %"class.x11::Future.425"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.260* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.scoped_refptr.260, %class.scoped_refptr.260* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.260* nonnull %2, %"class.std::__1::unique_ptr.262"* nonnull %3) #11
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #11
  %23 = call %"struct.x11::RandR::GetMonitorsReply"* @_ZN3x116detail9ReadReplyINS_5RandR16GetMonitorsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #11
  %24 = ptrtoint %"struct.x11::RandR::GetMonitorsReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #11
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::RandR::GetMonitorsReply"*
  %47 = insertvalue { %"struct.x11::RandR::GetMonitorsReply"*, %"class.x11::Error"* } undef, %"struct.x11::RandR::GetMonitorsReply"* %46, 0
  %48 = insertvalue { %"struct.x11::RandR::GetMonitorsReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::RandR::GetMonitorsReply"*, %"class.x11::Error"* } %48
}

declare %"struct.x11::RandR::GetMonitorsReply"* @_ZN3x116detail9ReadReplyINS_5RandR16GetMonitorsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !16
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115RandR17GetOutputPropertyERKNS0_24GetOutputPropertyRequestE(%"class.x11::RandR"*, %"struct.x11::RandR::GetOutputPropertyRequest"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::RandR::GetOutputPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_5RandR22GetOutputPropertyReplyEE4SyncEv(%"class.x11::Future.435"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.260, align 8
  %3 = alloca %"class.std::__1::unique_ptr.262", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.435", %"class.x11::Future.435"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.260* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.scoped_refptr.260, %class.scoped_refptr.260* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.262"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.260* nonnull %2, %"class.std::__1::unique_ptr.262"* nonnull %3) #11
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #11
  %23 = call %"struct.x11::RandR::GetOutputPropertyReply"* @_ZN3x116detail9ReadReplyINS_5RandR22GetOutputPropertyReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #11
  %24 = ptrtoint %"struct.x11::RandR::GetOutputPropertyReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.261", %"class.base::RefCountedThreadSafe.261"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.261"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #11
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::RandR::GetOutputPropertyReply"*
  %47 = insertvalue { %"struct.x11::RandR::GetOutputPropertyReply"*, %"class.x11::Error"* } undef, %"struct.x11::RandR::GetOutputPropertyReply"* %46, 0
  %48 = insertvalue { %"struct.x11::RandR::GetOutputPropertyReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::RandR::GetOutputPropertyReply"*, %"class.x11::Error"* } %48
}

declare %"struct.x11::RandR::GetOutputPropertyReply"* @_ZN3x116detail9ReadReplyINS_5RandR22GetOutputPropertyReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #3

declare void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"*, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !16
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3x115RandR6OutputEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115RandR6OutputEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115RandR6OutputEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare %"struct.x11::RandR::GetScreenResourcesCurrentReply"* @_ZN3x116detail9ReadReplyINS_5RandR30GetScreenResourcesCurrentReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #3

declare %"struct.x11::RandR::GetOutputPrimaryReply"* @_ZN3x116detail9ReadReplyINS_5RandR21GetOutputPrimaryReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #3

declare %"struct.x11::RandR::GetOutputInfoReply"* @_ZN3x116detail9ReadReplyINS_5RandR18GetOutputInfoReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #3

declare %"struct.x11::RandR::GetCrtcInfoReply"* @_ZN3x116detail9ReadReplyINS_5RandR16GetCrtcInfoReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"class.display::Display"* dereferenceable(568)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.display::Display"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 568
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 32476662101601323
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.display::Display"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 568
  %20 = icmp ult i64 %19, 16238331050800661
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 32476662101601323, %14 ]
  %28 = mul i64 %27, 568
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.display::Display"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.display::Display"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %33, i64 %9
  %35 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %33, i64 %32
  %36 = ptrtoint %"class.display::Display"* %35 to i64
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %34, %"class.display::Display"* dereferenceable(568) %1) #11
  %37 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %34, i64 1
  %38 = ptrtoint %"class.display::Display"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.display::Display"*, %"class.display::Display"** %39, align 8
  %41 = load %"class.display::Display"*, %"class.display::Display"** %3, align 8
  %42 = icmp eq %"class.display::Display"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.display::Display"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.display::Display"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.display::Display"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %46, i64 -1
  %49 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %47, i64 -1
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %48, %"class.display::Display"* dereferenceable(568) %49) #11
  %50 = icmp eq %"class.display::Display"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.display::Display"*, %"class.display::Display"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.display::Display"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.display::Display"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.display::Display"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.display::Display"*
  %60 = icmp eq %"class.display::Display"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.display::Display"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %62, i64 -1
  tail call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %63) #11
  %64 = icmp eq %"class.display::Display"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.ctpop.i16(i16) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i64 0, i64 65}
!4 = !{i16 0, i16 17}
!5 = !{i32 0, i32 33}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2ui12_GLOBAL__N_111GetMonitorsEiPN3x115RandRENS1_6WindowE: argument 0"}
!8 = distinct !{!8, !"_ZN2ui12_GLOBAL__N_111GetMonitorsEiPN3x115RandRENS1_6WindowE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeIN3x115RandR6OutputEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeIN3x115RandR6OutputEiEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!12 = !{!10, !7}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN2ui12_GLOBAL__N_115GetEDIDPropertyEPN3x115RandRENS2_6OutputE: argument 0"}
!15 = distinct !{!15, !"_ZN2ui12_GLOBAL__N_115GetEDIDPropertyEPN3x115RandRENS2_6OutputE"}
!16 = !{i8 0, i8 2}
