; ModuleID = '../../components/services/storage/indexed_db/transactional_leveldb/leveldb_write_batch.cc'
source_filename = "../../components/services/storage/indexed_db/transactional_leveldb/leveldb_write_batch.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::LevelDBWriteBatch" = type { %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.leveldb::WriteBatch"* }
%"class.leveldb::WriteBatch" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.leveldb::Slice" = type { i8*, i64 }

@_ZN7content17LevelDBWriteBatchC1Ev = hidden unnamed_addr alias void (%"class.content::LevelDBWriteBatch"*), void (%"class.content::LevelDBWriteBatch"*)* @_ZN7content17LevelDBWriteBatchC2Ev
@_ZN7content17LevelDBWriteBatchD1Ev = hidden unnamed_addr alias void (%"class.content::LevelDBWriteBatch"*), void (%"class.content::LevelDBWriteBatch"*)* @_ZN7content17LevelDBWriteBatchD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.content::LevelDBWriteBatch"* @_ZN7content17LevelDBWriteBatch6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 8) #6
  %2 = bitcast i8* %1 to %"class.content::LevelDBWriteBatch"*
  %3 = tail call i8* @_Znwm(i64 24) #6
  %4 = bitcast i8* %3 to %"class.leveldb::WriteBatch"*
  tail call void @_ZN7leveldb10WriteBatchC1Ev(%"class.leveldb::WriteBatch"* nonnull %4) #7
  %5 = ptrtoint i8* %3 to i64
  %6 = bitcast i8* %1 to i64*
  store i64 %5, i64* %6, align 8
  ret %"class.content::LevelDBWriteBatch"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17LevelDBWriteBatchC2Ev(%"class.content::LevelDBWriteBatch"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #6
  %3 = bitcast i8* %2 to %"class.leveldb::WriteBatch"*
  tail call void @_ZN7leveldb10WriteBatchC1Ev(%"class.leveldb::WriteBatch"* nonnull %3) #7
  %4 = ptrtoint i8* %2 to i64
  %5 = bitcast %"class.content::LevelDBWriteBatch"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret void
}

declare void @_ZN7leveldb10WriteBatchC1Ev(%"class.leveldb::WriteBatch"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17LevelDBWriteBatchD2Ev(%"class.content::LevelDBWriteBatch"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::LevelDBWriteBatch", %"class.content::LevelDBWriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.leveldb::WriteBatch"*, %"class.leveldb::WriteBatch"** %2, align 8
  store %"class.leveldb::WriteBatch"* null, %"class.leveldb::WriteBatch"** %2, align 8
  %4 = icmp eq %"class.leveldb::WriteBatch"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN7leveldb10WriteBatchD1Ev(%"class.leveldb::WriteBatch"* nonnull %3) #7
  %6 = bitcast %"class.leveldb::WriteBatch"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #6
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17LevelDBWriteBatch3PutERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.content::LevelDBWriteBatch"* nocapture readonly, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.leveldb::Slice", align 8
  %5 = alloca %"class.leveldb::Slice", align 8
  %6 = getelementptr inbounds %"class.content::LevelDBWriteBatch", %"class.content::LevelDBWriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.leveldb::WriteBatch"*, %"class.leveldb::WriteBatch"** %6, align 8
  %8 = bitcast %"class.leveldb::Slice"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  %9 = tail call { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %1) #7
  %10 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 0
  %11 = extractvalue { i8*, i64 } %9, 0
  store i8* %11, i8** %10, align 8
  %12 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 1
  %13 = extractvalue { i8*, i64 } %9, 1
  store i64 %13, i64* %12, align 8
  %14 = bitcast %"class.leveldb::Slice"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = tail call { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %2) #7
  %16 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 0
  %17 = extractvalue { i8*, i64 } %15, 0
  store i8* %17, i8** %16, align 8
  %18 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 1
  %19 = extractvalue { i8*, i64 } %15, 1
  store i64 %19, i64* %18, align 8
  call void @_ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_(%"class.leveldb::WriteBatch"* %7, %"class.leveldb::Slice"* nonnull dereferenceable(16) %4, %"class.leveldb::Slice"* nonnull dereferenceable(16) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  ret void
}

declare void @_ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_(%"class.leveldb::WriteBatch"*, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17LevelDBWriteBatch6RemoveERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.content::LevelDBWriteBatch"* nocapture readonly, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.leveldb::Slice", align 8
  %4 = getelementptr inbounds %"class.content::LevelDBWriteBatch", %"class.content::LevelDBWriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.leveldb::WriteBatch"*, %"class.leveldb::WriteBatch"** %4, align 8
  %6 = bitcast %"class.leveldb::Slice"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = tail call { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %1) #7
  %8 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 0
  %9 = extractvalue { i8*, i64 } %7, 0
  store i8* %9, i8** %8, align 8
  %10 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 1
  %11 = extractvalue { i8*, i64 } %7, 1
  store i64 %11, i64* %10, align 8
  call void @_ZN7leveldb10WriteBatch6DeleteERKNS_5SliceE(%"class.leveldb::WriteBatch"* %5, %"class.leveldb::Slice"* nonnull dereferenceable(16) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret void
}

declare void @_ZN7leveldb10WriteBatch6DeleteERKNS_5SliceE(%"class.leveldb::WriteBatch"*, %"class.leveldb::Slice"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17LevelDBWriteBatch5ClearEv(%"class.content::LevelDBWriteBatch"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::LevelDBWriteBatch", %"class.content::LevelDBWriteBatch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.leveldb::WriteBatch"*, %"class.leveldb::WriteBatch"** %2, align 8
  tail call void @_ZN7leveldb10WriteBatch5ClearEv(%"class.leveldb::WriteBatch"* %3) #7
  ret void
}

declare void @_ZN7leveldb10WriteBatch5ClearEv(%"class.leveldb::WriteBatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7leveldb10WriteBatchD1Ev(%"class.leveldb::WriteBatch"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
