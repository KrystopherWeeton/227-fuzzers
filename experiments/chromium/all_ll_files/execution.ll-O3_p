; ModuleID = '../../v8/src/execution/execution.cc'
source_filename = "../../v8/src/execution/execution.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.979", i32, i8, i8, i32, i32, %"class.std::__1::vector.985", %"class.std::__1::vector.985", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.992", i64, %"class.std::__1::unordered_map.993", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1049", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1121", %"class.std::__1::vector.1125", %"class.std::__1::vector.1125", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type { %"class.v8::internal::Isolate"*, i64, %"class.v8::internal::ExternalCallbackScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.975" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"*, %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::pair.956"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.985" = type { %"class.std::__1::__vector_base.986" }
%"class.std::__1::__vector_base.986" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.992" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1017", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1046", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1047", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1042, %union.anon.1044, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1042 = type { i64 }
%union.anon.1044 = type { i64 }
%"class.std::__1::weak_ptr.1046" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1047" = type { %"class.v8::PersistentBase.1048" }
%"class.v8::PersistentBase.1048" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1018", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1078", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1054", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1064", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1070", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1054" = type { %"struct.std::__1::__atomic_base.1055" }
%"struct.std::__1::__atomic_base.1055" = type { %"struct.std::__1::__cxx_atomic_impl.1056" }
%"struct.std::__1::__cxx_atomic_impl.1056" = type { %"struct.std::__1::__cxx_atomic_base_impl.1057" }
%"struct.std::__1::__cxx_atomic_base_impl.1057" = type { i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1095" }
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1121" = type { %"struct.std::__1::__atomic_base.1122" }
%"struct.std::__1::__atomic_base.1122" = type { %"struct.std::__1::__cxx_atomic_impl.1123" }
%"struct.std::__1::__cxx_atomic_impl.1123" = type { %"struct.std::__1::__cxx_atomic_base_impl.1124" }
%"struct.std::__1::__cxx_atomic_base_impl.1124" = type { %"class.std::__1::vector.1125"* }
%"class.std::__1::vector.1125" = type { %"class.std::__1::__vector_base.1126" }
%"class.std::__1::__vector_base.1126" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1127" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"struct.std::__1::atomic.1180" = type { %"struct.std::__1::__atomic_base.1181" }
%"struct.std::__1::__atomic_base.1181" = type { %"struct.std::__1::__atomic_base.1182" }
%"struct.std::__1::__atomic_base.1182" = type { %"struct.std::__1::__cxx_atomic_impl.1183" }
%"struct.std::__1::__cxx_atomic_impl.1183" = type { %"struct.std::__1::__cxx_atomic_base_impl.1184" }
%"struct.std::__1::__cxx_atomic_base_impl.1184" = type { i32 }
%"class.v8::internal::Handle.1132" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::(anonymous namespace)::InvokeParams" = type <{ %"class.v8::internal::Handle.1132", %"class.v8::internal::Handle.1132", i32, [4 x i8], %"class.v8::internal::Handle.1132"*, %"class.v8::internal::Handle.1132", %"class.v8::internal::MicrotaskQueue"*, i32, [4 x i8], %"class.v8::internal::MaybeHandle"*, i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::SaveAndSwitchContext" = type { %"class.v8::internal::SaveContext" }
%"class.v8::internal::SaveContext" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1136", i64 }
%"class.v8::internal::Handle.1136" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef" = type { %"class.v8::internal::NativeContext" }
%"class.v8::internal::NativeContext" = type { %"class.v8::internal::Context" }
%"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef" = type { %"class.v8::internal::ScopeInfo" }
%"struct.v8::internal::VariableLookupResult" = type { i32, i32, i8, i8, i8, i8, i8 }
%"class.v8::internal::Handle<v8::internal::Context>::ObjectRef" = type { %"class.v8::internal::Context" }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1164", i32, i32, i32, %"class.v8::internal::Handle.1169" }
%"class.v8::internal::Handle.1164" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1169" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1170", %"class.v8::internal::Handle.1132", %"class.v8::internal::Handle.1132", %"class.v8::internal::Handle.1171", %"class.v8::internal::Handle.1132", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1170" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1171" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::Code>::ObjectRef" = type { %"class.v8::internal::Code" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::Platform" = type { i32 (...)** }
%"struct.v8::internal::StackHandlerMarker" = type { i64, i64 }

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"AllowJavascriptExecution::IsAllowed(isolate)\00", align 1
@_ZN2v88internal33FLAG_clear_exceptions_on_js_entryE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"!maybe.IsNothing()\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE = external thread_local global i32, align 4
@_ZN2v88internal12trap_handler25g_can_enable_trap_handlerE = external local_unnamed_addr global %"struct.std::__1::atomic.152", align 1
@_ZN2v88internal12trap_handler25g_is_trap_handler_enabledE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1180", align 4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1132"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.v8::internal::(anonymous namespace)::InvokeParams", align 8
  %7 = bitcast %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 5, i32 0, i32 0
  store i64* null, i64** %8, align 8, !alias.scope !2
  %9 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 1
  %10 = bitcast %"class.v8::internal::Handle.1132"* %9 to i64*
  store i64 0, i64* %10, align 8, !alias.scope !2
  %11 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %11, align 8, !alias.scope !2
  %12 = ptrtoint i64* %2 to i64
  %13 = load i64, i64* %2, align 8, !noalias !2
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %52, label %16

16:                                               ; preds = %5
  %17 = and i64 %13, -4294967296
  %18 = add i64 %13, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4, !noalias !2
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2, !noalias !2
  %26 = icmp eq i16 %25, 189
  br i1 %26, label %27, label %52

27:                                               ; preds = %16
  %28 = add i64 %13, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4, !noalias !2
  %31 = zext i32 %30 to i64
  %32 = or i64 %17, %31
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8, !noalias !2
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %27
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #6, !noalias !2
  %38 = ptrtoint i64* %37 to i64
  br label %52

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8, !noalias !2
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8, !noalias !2
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6, !noalias !2
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8, !noalias !2
  store i64 %32, i64* %48, align 8, !noalias !2
  br label %52

52:                                               ; preds = %5, %16, %36, %47
  %53 = phi i64 [ %12, %16 ], [ %12, %5 ], [ %38, %36 ], [ %49, %47 ]
  %54 = inttoptr i64 %53 to i64*
  %55 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 1, i32 0, i32 0
  store i64* %54, i64** %55, align 8, !alias.scope !2
  %56 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 2
  store i32 %3, i32* %56, align 8, !alias.scope !2
  %57 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 4
  store %"class.v8::internal::Handle.1132"* %4, %"class.v8::internal::Handle.1132"** %57, align 8, !alias.scope !2
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 5
  %61 = bitcast %"class.v8::internal::Handle.1132"* %60 to i64*
  store i64 %59, i64* %61, align 8, !alias.scope !2
  %62 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 6
  store %"class.v8::internal::MicrotaskQueue"* null, %"class.v8::internal::MicrotaskQueue"** %62, align 8, !alias.scope !2
  %63 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 7
  store i32 0, i32* %63, align 8, !alias.scope !2
  %64 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 9
  store %"class.v8::internal::MaybeHandle"* null, %"class.v8::internal::MaybeHandle"** %64, align 8, !alias.scope !2
  %65 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 10
  store i8 0, i8* %65, align 8, !alias.scope !2
  %66 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 12
  store i32 0, i32* %66, align 4, !alias.scope !2
  %67 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 13
  store i8 1, i8* %67, align 8, !alias.scope !2
  %68 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_16InvokeEPNS0_7IsolateERKNS1_12InvokeParamsE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::(anonymous namespace)::InvokeParams"* nonnull dereferenceable(80) %6)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #6
  ret i64* %68
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_16InvokeEPNS0_7IsolateERKNS1_12InvokeParamsE(%"class.v8::internal::Isolate"*, %"struct.v8::internal::(anonymous namespace)::InvokeParams"* nocapture readonly dereferenceable(80)) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::ScopeInfo", align 8
  %4 = alloca %"class.v8::internal::SaveAndSwitchContext", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %8 = alloca %"struct.v8::internal::VariableLookupResult", align 4
  %9 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::ScopeInfo", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::MessageLocation", align 8
  %13 = alloca %"class.v8::internal::LookupIterator", align 8
  %14 = alloca %"class.v8::internal::MessageLocation", align 8
  %15 = alloca %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", align 8
  %16 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %17 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %18 = alloca %"class.v8::internal::SaveAndSwitchContext", align 8
  %19 = alloca %"class.v8::internal::SaveContext", align 8
  %20 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %21 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %22 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %23 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %24 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 40, i1 false) #6
  %25 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1180", %"struct.std::__1::atomic.1180"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27, !prof !5

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %16, i64 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %16, i64 0, i32 1
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %31 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %31, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %32, %"class.v8::internal::RuntimeCallStats"** %28, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %32, %"class.v8::internal::RuntimeCallTimer"* %29, i32 171) #6
  br label %33

33:                                               ; preds = %2, %27
  %34 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %732, label %39

39:                                               ; preds = %33
  %40 = and i64 %36, -4294967296
  %41 = add i64 %36, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = add i16 %48, -1059
  %50 = icmp ult i16 %49, 15
  br i1 %50, label %51, label %732

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 10
  %53 = load i8, i8* %52, align 8, !range !6
  %54 = icmp eq i8 %53, 0
  %55 = bitcast %"class.v8::internal::SharedFunctionInfo"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #6
  br i1 %54, label %65, label %56

56:                                               ; preds = %51
  %57 = load atomic i32, i32* %42 monotonic, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %40, %58
  %60 = add i64 %59, 9
  %61 = inttoptr i64 %60 to i8*
  %62 = load atomic i8, i8* %61 monotonic, align 1
  %63 = and i8 %62, 64
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %142, label %65

65:                                               ; preds = %56, %51
  %66 = add i64 %36, 11
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %40, %69
  %71 = add i64 %70, 3
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 acquire, align 4
  %74 = zext i32 %73 to i64
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %142, label %77

77:                                               ; preds = %65
  %78 = or i64 %40, %74
  %79 = add i64 %78, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %40, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 83
  br i1 %87, label %88, label %142

88:                                               ; preds = %77
  %89 = load i64, i64* %35, align 8
  %90 = add i64 %89, 11
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i64 %89, -4294967296
  %94 = zext i32 %92 to i64
  %95 = or i64 %93, %94
  %96 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %95, i64* %96, align 8
  %97 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12BreakAtEntryEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #6
  br i1 %97, label %143, label %98

98:                                               ; preds = %88
  %99 = bitcast %"class.v8::internal::SaveAndSwitchContext"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #6
  %100 = load i64, i64* %35, align 8
  %101 = add i64 %100, 15
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i64 %100, -4294967296
  %105 = zext i32 %103 to i64
  %106 = or i64 %104, %105
  call void @_ZN2v88internal20SaveAndSwitchContextC1EPNS0_7IsolateENS0_7ContextE(%"class.v8::internal::SaveAndSwitchContext"* nonnull %18, %"class.v8::internal::Isolate"* %0, i64 %106) #6
  %107 = load i8, i8* %52, align 8, !range !6
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %111 = ptrtoint i64* %110 to i64
  br label %116

112:                                              ; preds = %98
  %113 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 1
  %114 = bitcast %"class.v8::internal::Handle.1132"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi i64 [ %115, %112 ], [ %111, %109 ]
  %118 = icmp ne i8 %107, 0
  %119 = inttoptr i64 %117 to i64*
  %120 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 2
  %121 = load i32, i32* %120, align 8
  %122 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 4
  %123 = load %"class.v8::internal::Handle.1132"*, %"class.v8::internal::Handle.1132"** %122, align 8
  %124 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 5, i32 0, i32 0
  %125 = bitcast i64** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = call i64* @_ZN2v88internal8Builtins17InvokeApiFunctionEPNS0_7IsolateEbNS0_6HandleINS0_10HeapObjectEEENS4_INS0_6ObjectEEEiPS8_S6_(%"class.v8::internal::Isolate"* %0, i1 zeroext %118, i64* %35, i64* %119, i32 %121, %"class.v8::internal::Handle.1132"* %123, i64 %126) #6
  %128 = icmp eq i64* %127, null
  br i1 %128, label %129, label %134

129:                                              ; preds = %116
  %130 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 7
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %129
  call void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"* %0) #6
  br label %139

134:                                              ; preds = %116
  %135 = ptrtoint i64* %127 to i64
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 11, i32 0, i32 0
  store i64 %137, i64* %138, align 8
  br label %139

139:                                              ; preds = %129, %133, %134
  %140 = phi i64 [ %135, %134 ], [ 0, %133 ], [ 0, %129 ]
  %141 = getelementptr inbounds %"class.v8::internal::SaveAndSwitchContext", %"class.v8::internal::SaveAndSwitchContext"* %18, i64 0, i32 0
  call void @_ZN2v88internal11SaveContextD2Ev(%"class.v8::internal::SaveContext"* nonnull %141) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #6
  br label %963

142:                                              ; preds = %56, %77, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #6
  br label %143

143:                                              ; preds = %142, %88
  %144 = load i64, i64* %35, align 8
  %145 = add i64 %144, 11
  %146 = inttoptr i64 %145 to i32*
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i64 %144, -4294967296
  %149 = zext i32 %147 to i64
  %150 = or i64 %148, %149
  %151 = bitcast %"class.v8::internal::ScopeInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #6
  %152 = add i64 %150, 7
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 acquire, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %148, %155
  %157 = and i64 %155, 1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %169, label %159

159:                                              ; preds = %143
  %160 = add i64 %156, -1
  %161 = inttoptr i64 %160 to i32*
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %148, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i16*
  %167 = load atomic i16, i16* %166 monotonic, align 2
  %168 = icmp eq i16 %167, 178
  br i1 %168, label %190, label %169

169:                                              ; preds = %159, %143
  %170 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %171 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %170, null
  br i1 %171, label %178, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %170, i64 0, i32 0, i32 1
  %174 = load i8, i8* %173, align 8, !range !6
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %170, i64 0, i32 1, i64 0
  br label %186

178:                                              ; preds = %172, %169
  %179 = and i64 %150, -262144
  %180 = or i64 %179, 16
  %181 = inttoptr i64 %180 to i64*
  %182 = load i64, i64* %181, align 16
  %183 = add i64 %182, -41416
  %184 = inttoptr i64 %183 to %"class.v8::internal::Isolate"*
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %184, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %186

186:                                              ; preds = %178, %176
  %187 = phi i64* [ %185, %178 ], [ %177, %176 ]
  %188 = getelementptr inbounds i64, i64* %187, i64 28
  %189 = load i64, i64* %188, align 8
  br label %190

190:                                              ; preds = %186, %159
  %191 = phi i64 [ %189, %186 ], [ %156, %159 ]
  %192 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %191, i64* %192, align 8
  %193 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15is_script_scopeEv(%"class.v8::internal::ScopeInfo"* nonnull %3) #6
  br i1 %193, label %195, label %194

194:                                              ; preds = %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #6
  br label %732

195:                                              ; preds = %190
  %196 = add i64 %150, 15
  %197 = inttoptr i64 %196 to i32*
  %198 = load atomic i32, i32* %197 acquire, align 4
  %199 = zext i32 %198 to i64
  %200 = or i64 %148, %199
  %201 = add i64 %200, -1
  %202 = inttoptr i64 %201 to i32*
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = zext i32 %203 to i64
  %205 = or i64 %148, %204
  %206 = add i64 %205, 7
  %207 = inttoptr i64 %206 to i16*
  %208 = load atomic i16, i16* %207 monotonic, align 2
  %209 = icmp eq i16 %208, 100
  br i1 %209, label %210, label %216

210:                                              ; preds = %195
  %211 = add i64 %200, 11
  %212 = inttoptr i64 %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = zext i32 %213 to i64
  %215 = or i64 %148, %214
  br label %216

216:                                              ; preds = %195, %210
  %217 = phi i64 [ %215, %210 ], [ %200, %195 ]
  %218 = add i64 %217, 47
  %219 = inttoptr i64 %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #6
  br i1 %222, label %223, label %732

223:                                              ; preds = %216
  %224 = load atomic i32, i32* %153 acquire, align 4
  %225 = zext i32 %224 to i64
  %226 = or i64 %148, %225
  %227 = and i64 %225, 1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %239, label %229

229:                                              ; preds = %223
  %230 = add i64 %226, -1
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = zext i32 %232 to i64
  %234 = or i64 %148, %233
  %235 = add i64 %234, 7
  %236 = inttoptr i64 %235 to i16*
  %237 = load atomic i16, i16* %236 monotonic, align 2
  %238 = icmp eq i16 %237, 178
  br i1 %238, label %260, label %239

239:                                              ; preds = %229, %223
  %240 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %241 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %240, null
  br i1 %241, label %248, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %240, i64 0, i32 0, i32 1
  %244 = load i8, i8* %243, align 8, !range !6
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %240, i64 0, i32 1, i64 0
  br label %256

248:                                              ; preds = %242, %239
  %249 = and i64 %150, -262144
  %250 = or i64 %249, 16
  %251 = inttoptr i64 %250 to i64*
  %252 = load i64, i64* %251, align 16
  %253 = add i64 %252, -41416
  %254 = inttoptr i64 %253 to %"class.v8::internal::Isolate"*
  %255 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %254, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %256

256:                                              ; preds = %248, %246
  %257 = phi i64* [ %255, %248 ], [ %247, %246 ]
  %258 = getelementptr inbounds i64, i64* %257, i64 28
  %259 = load i64, i64* %258, align 8
  br label %260

260:                                              ; preds = %229, %256
  %261 = phi i64 [ %259, %256 ], [ %226, %229 ]
  %262 = add i64 %261, 11
  %263 = inttoptr i64 %262 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, 1
  br i1 %265, label %266, label %732

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 108
  %268 = load i8, i8* %267, align 1
  %269 = icmp eq i8 %268, 32
  br i1 %269, label %270, label %275

270:                                              ; preds = %266
  %271 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %272 = call i64* @_ZN2v88internal7Factory12NewEvalErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %271, i32 356, i64* null, i64* null, i64* null) #6
  %273 = load i64, i64* %272, align 8
  %274 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %273, %"class.v8::internal::MessageLocation"* null) #6
  br label %692

275:                                              ; preds = %266
  %276 = bitcast %"class.v8::internal::SaveAndSwitchContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %276) #6
  %277 = load i64, i64* %35, align 8
  %278 = add i64 %277, 15
  %279 = inttoptr i64 %278 to i32*
  %280 = load i32, i32* %279, align 4
  %281 = and i64 %277, -4294967296
  %282 = zext i32 %280 to i64
  %283 = or i64 %281, %282
  call void @_ZN2v88internal20SaveAndSwitchContextC1EPNS0_7IsolateENS0_7ContextE(%"class.v8::internal::SaveAndSwitchContext"* nonnull %4, %"class.v8::internal::Isolate"* %0, i64 %283) #6
  %284 = load i64, i64* %35, align 8
  %285 = add i64 %284, 11
  %286 = inttoptr i64 %285 to i32*
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i64 %284, -4294967296
  %289 = zext i32 %287 to i64
  %290 = or i64 %288, %289
  %291 = add i64 %290, 15
  %292 = inttoptr i64 %291 to i32*
  %293 = load atomic i32, i32* %292 acquire, align 4
  %294 = zext i32 %293 to i64
  %295 = or i64 %288, %294
  %296 = add i64 %295, -1
  %297 = inttoptr i64 %296 to i32*
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = zext i32 %298 to i64
  %300 = or i64 %288, %299
  %301 = add i64 %300, 7
  %302 = inttoptr i64 %301 to i16*
  %303 = load atomic i16, i16* %302 monotonic, align 2
  %304 = icmp eq i16 %303, 100
  br i1 %304, label %305, label %311

305:                                              ; preds = %275
  %306 = add i64 %295, 11
  %307 = inttoptr i64 %306 to i32*
  %308 = load i32, i32* %307, align 4
  %309 = zext i32 %308 to i64
  %310 = or i64 %288, %309
  br label %311

311:                                              ; preds = %305, %275
  %312 = phi i64 [ %310, %305 ], [ %295, %275 ]
  %313 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %314 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %313, align 8
  %315 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %314, null
  br i1 %315, label %318, label %316

316:                                              ; preds = %311
  %317 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %314, i64 %312) #6
  br label %331

318:                                              ; preds = %311
  %319 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %320 = load i64*, i64** %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %322 = load i64*, i64** %321, align 8
  %323 = icmp eq i64* %320, %322
  br i1 %323, label %324, label %326

324:                                              ; preds = %318
  %325 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %326

326:                                              ; preds = %324, %318
  %327 = phi i64* [ %325, %324 ], [ %320, %318 ]
  %328 = ptrtoint i64* %327 to i64
  %329 = add i64 %328, 8
  %330 = inttoptr i64 %329 to i64*
  store i64* %330, i64** %319, align 8
  store i64 %312, i64* %327, align 8
  br label %331

331:                                              ; preds = %326, %316
  %332 = phi i64* [ %317, %316 ], [ %327, %326 ]
  %333 = add i64 %290, 7
  %334 = inttoptr i64 %333 to i32*
  %335 = load atomic i32, i32* %334 acquire, align 4
  %336 = zext i32 %335 to i64
  %337 = or i64 %288, %336
  %338 = and i64 %336, 1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %350, label %340

340:                                              ; preds = %331
  %341 = add i64 %337, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = zext i32 %343 to i64
  %345 = or i64 %288, %344
  %346 = add i64 %345, 7
  %347 = inttoptr i64 %346 to i16*
  %348 = load atomic i16, i16* %347 monotonic, align 2
  %349 = icmp eq i16 %348, 178
  br i1 %349, label %371, label %350

350:                                              ; preds = %340, %331
  %351 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %352 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %350
  %354 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %351, i64 0, i32 0, i32 1
  %355 = load i8, i8* %354, align 8, !range !6
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %359, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %351, i64 0, i32 1, i64 0
  br label %367

359:                                              ; preds = %353, %350
  %360 = and i64 %290, -262144
  %361 = or i64 %360, 16
  %362 = inttoptr i64 %361 to i64*
  %363 = load i64, i64* %362, align 16
  %364 = add i64 %363, -41416
  %365 = inttoptr i64 %364 to %"class.v8::internal::Isolate"*
  %366 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %365, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %367

367:                                              ; preds = %359, %357
  %368 = phi i64* [ %366, %359 ], [ %358, %357 ]
  %369 = getelementptr inbounds i64, i64* %368, i64 28
  %370 = load i64, i64* %369, align 8
  br label %371

371:                                              ; preds = %367, %340
  %372 = phi i64 [ %370, %367 ], [ %337, %340 ]
  %373 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %313, align 8
  %374 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %373, null
  br i1 %374, label %377, label %375

375:                                              ; preds = %371
  %376 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %373, i64 %372) #6
  br label %390

377:                                              ; preds = %371
  %378 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %379 = load i64*, i64** %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %381 = load i64*, i64** %380, align 8
  %382 = icmp eq i64* %379, %381
  br i1 %382, label %383, label %385

383:                                              ; preds = %377
  %384 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %385

385:                                              ; preds = %383, %377
  %386 = phi i64* [ %384, %383 ], [ %379, %377 ]
  %387 = ptrtoint i64* %386 to i64
  %388 = add i64 %387, 8
  %389 = inttoptr i64 %388 to i64*
  store i64* %389, i64** %378, align 8
  store i64 %372, i64* %386, align 8
  br label %390

390:                                              ; preds = %385, %375
  %391 = phi i64* [ %376, %375 ], [ %386, %385 ]
  %392 = load i64, i64* %35, align 8
  %393 = add i64 %392, 15
  %394 = inttoptr i64 %393 to i32*
  %395 = load i32, i32* %394, align 4
  %396 = and i64 %392, -4294967296
  %397 = zext i32 %395 to i64
  %398 = or i64 %396, %397
  %399 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %313, align 8
  %400 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %399, null
  br i1 %400, label %404, label %401

401:                                              ; preds = %390
  %402 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %399, i64 %398) #6
  %403 = load i64, i64* %402, align 8
  br label %417

404:                                              ; preds = %390
  %405 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %406 = load i64*, i64** %405, align 8
  %407 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %408 = load i64*, i64** %407, align 8
  %409 = icmp eq i64* %406, %408
  br i1 %409, label %410, label %412

410:                                              ; preds = %404
  %411 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %412

412:                                              ; preds = %410, %404
  %413 = phi i64* [ %411, %410 ], [ %406, %404 ]
  %414 = ptrtoint i64* %413 to i64
  %415 = add i64 %414, 8
  %416 = inttoptr i64 %415 to i64*
  store i64* %416, i64** %405, align 8
  store i64 %398, i64* %413, align 8
  br label %417

417:                                              ; preds = %412, %401
  %418 = phi i64 [ %403, %401 ], [ %398, %412 ]
  %419 = phi i64* [ %402, %401 ], [ %413, %412 ]
  %420 = bitcast %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %420) #6
  %421 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %418, i64* %421, align 8
  %422 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NativeContext>::ObjectRef"* %5, i64 0, i32 0, i32 0
  %423 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %422) #6
  %424 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %313, align 8
  %425 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %424, null
  br i1 %425, label %428, label %426

426:                                              ; preds = %417
  %427 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %424, i64 %423) #6
  br label %441

428:                                              ; preds = %417
  %429 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %430 = load i64*, i64** %429, align 8
  %431 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %432 = load i64*, i64** %431, align 8
  %433 = icmp eq i64* %430, %432
  br i1 %433, label %434, label %436

434:                                              ; preds = %428
  %435 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %436

436:                                              ; preds = %434, %428
  %437 = phi i64* [ %435, %434 ], [ %430, %428 ]
  %438 = ptrtoint i64* %437 to i64
  %439 = add i64 %438, 8
  %440 = inttoptr i64 %439 to i64*
  store i64* %440, i64** %429, align 8
  store i64 %423, i64* %437, align 8
  br label %441

441:                                              ; preds = %436, %426
  %442 = phi i64* [ %427, %426 ], [ %437, %436 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %420) #6
  %443 = load i64, i64* %419, align 8
  %444 = and i64 %443, -4294967296
  %445 = add i64 %443, 683
  %446 = inttoptr i64 %445 to i32*
  %447 = load atomic i32, i32* %446 monotonic, align 4
  %448 = zext i32 %447 to i64
  %449 = or i64 %444, %448
  %450 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %313, align 8
  %451 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %450, null
  br i1 %451, label %454, label %452

452:                                              ; preds = %441
  %453 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %450, i64 %449) #6
  br label %467

454:                                              ; preds = %441
  %455 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %456 = load i64*, i64** %455, align 8
  %457 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %458 = load i64*, i64** %457, align 8
  %459 = icmp eq i64* %456, %458
  br i1 %459, label %460, label %462

460:                                              ; preds = %454
  %461 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %462

462:                                              ; preds = %460, %454
  %463 = phi i64* [ %461, %460 ], [ %456, %454 ]
  %464 = ptrtoint i64* %463 to i64
  %465 = add i64 %464, 8
  %466 = inttoptr i64 %465 to i64*
  store i64* %466, i64** %455, align 8
  store i64 %449, i64* %463, align 8
  br label %467

467:                                              ; preds = %462, %452
  %468 = phi i64* [ %453, %452 ], [ %463, %462 ]
  %469 = load i64, i64* %391, align 8
  %470 = add i64 %469, 11
  %471 = inttoptr i64 %470 to i32*
  %472 = load i32, i32* %471, align 4
  %473 = icmp sgt i32 %472, 1
  br i1 %473, label %474, label %648

474:                                              ; preds = %467
  %475 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %6 to i8*
  %476 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %477 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %6, i64 0, i32 0
  %478 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %479 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %480 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7 to i8*
  %481 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7, i64 0, i32 0
  %483 = bitcast %"struct.v8::internal::VariableLookupResult"* %8 to i8*
  %484 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %8, i64 0, i32 4
  %485 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %8, i64 0, i32 0
  %486 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %9 to i8*
  %487 = bitcast %"class.v8::internal::ScopeInfo"* %10 to i8*
  %488 = bitcast %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %11 to i8*
  %489 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %9, i64 0, i32 0
  %491 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %492 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %11, i64 0, i32 0
  %493 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = bitcast %"class.v8::internal::LookupIterator"* %13 to i8*
  %495 = ptrtoint i64* %442 to i64
  %496 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 0
  %497 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %498 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 1
  %499 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 2
  %500 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 3
  %501 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 4, i32 0
  %502 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 5
  %503 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 6, i32 0, i32 0
  %504 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 7, i32 0, i32 0
  %505 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 8, i32 0, i32 0
  %506 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 9, i32 0, i32 0
  %507 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 10
  %508 = bitcast %"class.v8::internal::Handle.1132"* %507 to i64*
  %509 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %13, i64 0, i32 11
  %510 = bitcast i64* %509 to i8*
  %511 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  br label %512

512:                                              ; preds = %639, %474
  %513 = phi i64 [ %469, %474 ], [ %641, %639 ]
  %514 = phi i32 [ 0, %474 ], [ %640, %639 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %475) #6
  store i64 %513, i64* %476, align 8
  %515 = call i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"* nonnull %477, i32 %514) #6
  %516 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %313, align 8
  %517 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %516, null
  br i1 %517, label %520, label %518

518:                                              ; preds = %512
  %519 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %516, i64 %515) #6
  br label %531

520:                                              ; preds = %512
  %521 = load i64*, i64** %478, align 8
  %522 = load i64*, i64** %479, align 8
  %523 = icmp eq i64* %521, %522
  br i1 %523, label %524, label %526

524:                                              ; preds = %520
  %525 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %526

526:                                              ; preds = %524, %520
  %527 = phi i64* [ %525, %524 ], [ %521, %520 ]
  %528 = ptrtoint i64* %527 to i64
  %529 = add i64 %528, 8
  %530 = inttoptr i64 %529 to i64*
  store i64* %530, i64** %478, align 8
  store i64 %515, i64* %527, align 8
  br label %531

531:                                              ; preds = %526, %518
  %532 = phi i64* [ %519, %518 ], [ %527, %526 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %475) #6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %480) #6
  %533 = load i64, i64* %391, align 8
  store i64 %533, i64* %481, align 8
  %534 = call zeroext i8 @_ZNK2v88internal9ScopeInfo16ContextLocalModeEi(%"class.v8::internal::ScopeInfo"* nonnull %482, i32 %514) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %480) #6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %483) #6
  %535 = load i64, i64* %468, align 8
  %536 = load i64, i64* %532, align 8
  %537 = call zeroext i1 @_ZN2v88internal18ScriptContextTable6LookupEPNS0_7IsolateES1_NS0_6StringEPNS0_20VariableLookupResultE(%"class.v8::internal::Isolate"* %0, i64 %535, i64 %536, %"struct.v8::internal::VariableLookupResult"* nonnull %8) #6
  %538 = icmp ult i8 %534, 2
  br i1 %537, label %539, label %592

539:                                              ; preds = %531
  %540 = load i8, i8* %484, align 2
  %541 = icmp ult i8 %540, 2
  %542 = or i1 %538, %541
  br i1 %542, label %543, label %639

543:                                              ; preds = %539
  %544 = load i32, i32* %485, align 4
  %545 = load i64, i64* %468, align 8
  %546 = and i64 %545, -4294967296
  %547 = shl i32 %544, 2
  %548 = add i32 %547, 4
  %549 = sext i32 %548 to i64
  %550 = add i64 %545, 7
  %551 = add i64 %550, %549
  %552 = inttoptr i64 %551 to i32*
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = zext i32 %553 to i64
  %555 = or i64 %546, %554
  %556 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %313, align 8
  %557 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %556, null
  br i1 %557, label %560, label %558

558:                                              ; preds = %543
  %559 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %556, i64 %555) #6
  br label %571

560:                                              ; preds = %543
  %561 = load i64*, i64** %478, align 8
  %562 = load i64*, i64** %479, align 8
  %563 = icmp eq i64* %561, %562
  br i1 %563, label %564, label %566

564:                                              ; preds = %560
  %565 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %566

566:                                              ; preds = %564, %560
  %567 = phi i64* [ %565, %564 ], [ %561, %560 ]
  %568 = ptrtoint i64* %567 to i64
  %569 = add i64 %568, 8
  %570 = inttoptr i64 %569 to i64*
  store i64* %570, i64** %478, align 8
  store i64 %555, i64* %567, align 8
  br label %571

571:                                              ; preds = %566, %558
  %572 = phi i64* [ %559, %558 ], [ %567, %566 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %486) #6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %487) #6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %488) #6
  switch i8 %534, label %586 [
    i8 0, label %573
    i8 1, label %576
  ]

573:                                              ; preds = %571
  %574 = load i8, i8* %484, align 2
  %575 = icmp eq i8 %574, 0
  br i1 %575, label %579, label %586

576:                                              ; preds = %571
  %577 = load i8, i8* %484, align 2
  %578 = icmp eq i8 %577, 1
  br i1 %578, label %579, label %586

579:                                              ; preds = %576, %573
  %580 = load i64, i64* %391, align 8
  store i64 %580, i64* %489, align 8
  %581 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15IsReplModeScopeEv(%"class.v8::internal::ScopeInfo"* nonnull %490) #6
  br i1 %581, label %582, label %586

582:                                              ; preds = %579
  %583 = load i64, i64* %572, align 8
  store i64 %583, i64* %491, align 8
  %584 = call i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"* nonnull %492) #6
  store i64 %584, i64* %493, align 8
  %585 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15IsReplModeScopeEv(%"class.v8::internal::ScopeInfo"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %488) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %487) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #6
  br i1 %585, label %593, label %587

586:                                              ; preds = %571, %573, %576, %579
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %488) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %487) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #6
  br label %587

587:                                              ; preds = %582, %586
  %588 = bitcast %"class.v8::internal::MessageLocation"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %588) #6
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %12, i64* %332, i32 0, i32 1) #6
  %589 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %590 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %589, i32 182, i64* %532, i64* null, i64* null) #6
  %591 = call i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64* %590, %"class.v8::internal::MessageLocation"* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %588) #6
  br label %647

592:                                              ; preds = %531
  br i1 %538, label %593, label %639

593:                                              ; preds = %592, %582
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %494) #6
  %594 = icmp eq i64* %532, null
  br i1 %594, label %608, label %595

595:                                              ; preds = %593
  %596 = load i64, i64* %532, align 8
  %597 = load i64, i64* %497, align 8
  %598 = add i64 %596, -1
  %599 = inttoptr i64 %598 to i32*
  %600 = load atomic i32, i32* %599 monotonic, align 4
  %601 = and i64 %597, 4294967295
  %602 = icmp eq i64 %601, 0
  call void @llvm.assume(i1 %602) #6
  %603 = zext i32 %600 to i64
  %604 = or i64 %597, %603
  %605 = add i64 %604, 7
  %606 = inttoptr i64 %605 to i16*
  %607 = load atomic i16, i16* %606 monotonic, align 2
  br label %608

608:                                              ; preds = %595, %593
  store i32 0, i32* %496, align 8
  store i32 4, i32* %498, align 4
  store i8 0, i8* %499, align 8
  store i32 0, i32* %500, align 4
  store i32 0, i32* %501, align 8
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %502, align 8
  store i64* %532, i64** %503, align 8
  store i64* null, i64** %504, align 8
  store i64* %442, i64** %505, align 8
  store i64* null, i64** %506, align 8
  store i64 %495, i64* %508, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %510, i8 -1, i64 16, i1 false) #6
  %609 = load i64, i64* %532, align 8
  %610 = and i64 %609, -4294967296
  %611 = add i64 %609, -1
  %612 = inttoptr i64 %611 to i32*
  %613 = load atomic i32, i32* %612 monotonic, align 4
  %614 = zext i32 %613 to i64
  %615 = or i64 %610, %614
  %616 = add i64 %615, 7
  %617 = inttoptr i64 %616 to i16*
  %618 = load atomic i16, i16* %617 monotonic, align 2
  %619 = and i16 %618, -32
  %620 = icmp eq i16 %619, 32
  br i1 %620, label %621, label %624

621:                                              ; preds = %608
  %622 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %511, align 8
  %623 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %622, %"class.v8::internal::Isolate"* %0, i64* %532) #6
  br label %624

624:                                              ; preds = %621, %608
  %625 = phi i64* [ %623, %621 ], [ %532, %608 ]
  store i64* %625, i64** %503, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %13) #6
  %626 = call i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %13) #6
  %627 = trunc i64 %626 to i8
  %628 = icmp eq i8 %627, 0
  br i1 %628, label %629, label %630, !prof !7

629:                                              ; preds = %624
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

630:                                              ; preds = %624
  %631 = and i64 %626, 17179869184
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %633, label %634

633:                                              ; preds = %630
  call void @_ZN2v88internal14JSGlobalObject22InvalidatePropertyCellENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %442, i64* %532) #6
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %494) #6
  br label %639

634:                                              ; preds = %630
  %635 = bitcast %"class.v8::internal::MessageLocation"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %635) #6
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %14, i64* %332, i32 0, i32 1) #6
  %636 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %637 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %636, i32 182, i64* %532, i64* null, i64* null) #6
  %638 = call i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64* %637, %"class.v8::internal::MessageLocation"* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %635) #6
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %494) #6
  br label %647

639:                                              ; preds = %633, %592, %539
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %483) #6
  %640 = add nuw nsw i32 %514, 1
  %641 = load i64, i64* %391, align 8
  %642 = add i64 %641, 11
  %643 = inttoptr i64 %642 to i32*
  %644 = load i32, i32* %643, align 4
  %645 = ashr i32 %644, 1
  %646 = icmp slt i32 %640, %645
  br i1 %646, label %512, label %648

647:                                              ; preds = %634, %587
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %483) #6
  br label %688

648:                                              ; preds = %639, %467
  %649 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %650 = call i64* @_ZN2v88internal7Factory16NewScriptContextENS0_6HandleINS0_13NativeContextEEENS2_INS0_9ScopeInfoEEE(%"class.v8::internal::Factory"* %649, i64* %419, i64* %391) #6
  %651 = bitcast %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %651) #6
  %652 = load i64, i64* %650, align 8
  %653 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %652, i64* %653, align 8
  %654 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %15, i64 0, i32 0
  call void @_ZN2v88internal7Context10InitializeEPNS0_7IsolateE(%"class.v8::internal::Context"* nonnull %654, %"class.v8::internal::Isolate"* %0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %651) #6
  %655 = call i64* @_ZN2v88internal18ScriptContextTable6ExtendENS0_6HandleIS1_EENS2_INS0_7ContextEEE(i64* %468, i64* %650) #6
  %656 = load i64, i64* %419, align 8
  %657 = load i64, i64* %655, align 8
  %658 = add i64 %656, 683
  %659 = inttoptr i64 %658 to i32*
  %660 = trunc i64 %657 to i32
  store atomic volatile i32 %660, i32* %659 release, align 4
  %661 = and i64 %657, 1
  %662 = icmp eq i64 %661, 0
  br i1 %662, label %686, label %663

663:                                              ; preds = %648
  %664 = and i64 %656, -262144
  %665 = or i64 %664, 8
  %666 = inttoptr i64 %665 to i64*
  %667 = load i64, i64* %666, align 8
  %668 = and i64 %667, 262144
  %669 = icmp eq i64 %668, 0
  br i1 %669, label %674, label %670

670:                                              ; preds = %663
  %671 = or i64 %664, 16
  %672 = inttoptr i64 %671 to %"class.v8::internal::Heap"**
  %673 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %672, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %673, i64 %656, i64 %658, i64 %657) #6
  br label %674

674:                                              ; preds = %670, %663
  %675 = and i64 %657, -262144
  %676 = or i64 %675, 8
  %677 = inttoptr i64 %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = and i64 %678, 24
  %680 = icmp eq i64 %679, 0
  br i1 %680, label %686, label %681

681:                                              ; preds = %674
  %682 = load i64, i64* %666, align 8
  %683 = and i64 %682, 24
  %684 = icmp eq i64 %683, 0
  br i1 %684, label %685, label %686

685:                                              ; preds = %681
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %656, i64 %658, i64 %657) #6
  br label %686

686:                                              ; preds = %685, %681, %674, %648
  %687 = ptrtoint i64* %650 to i64
  br label %688

688:                                              ; preds = %647, %686
  %689 = phi i64 [ %687, %686 ], [ 0, %647 ]
  %690 = getelementptr inbounds %"class.v8::internal::SaveAndSwitchContext", %"class.v8::internal::SaveAndSwitchContext"* %4, i64 0, i32 0
  call void @_ZN2v88internal11SaveContextD2Ev(%"class.v8::internal::SaveContext"* nonnull %690) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #6
  %691 = icmp eq i64 %689, 0
  br i1 %691, label %692, label %697

692:                                              ; preds = %270, %688
  %693 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 7
  %694 = load i32, i32* %693, align 8
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %696, label %963

696:                                              ; preds = %692
  call void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"* %0) #6
  br label %963

697:                                              ; preds = %688
  %698 = load i64, i64* %35, align 8
  %699 = inttoptr i64 %689 to i64*
  %700 = load i64, i64* %699, align 8
  %701 = add i64 %698, 15
  %702 = inttoptr i64 %701 to i32*
  %703 = trunc i64 %700 to i32
  store atomic volatile i32 %703, i32* %702 monotonic, align 4
  %704 = and i64 %700, 1
  %705 = icmp eq i64 %704, 0
  br i1 %705, label %717, label %706

706:                                              ; preds = %697
  %707 = and i64 %698, -262144
  %708 = or i64 %707, 8
  %709 = inttoptr i64 %708 to i64*
  %710 = load i64, i64* %709, align 8
  %711 = and i64 %710, 262144
  %712 = icmp eq i64 %711, 0
  br i1 %712, label %717, label %713

713:                                              ; preds = %706
  %714 = or i64 %707, 16
  %715 = inttoptr i64 %714 to %"class.v8::internal::Heap"**
  %716 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %715, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %716, i64 %698, i64 %701, i64 %700) #6
  br label %717

717:                                              ; preds = %713, %706, %697
  %718 = and i64 %700, -262144
  %719 = or i64 %718, 8
  %720 = inttoptr i64 %719 to i64*
  %721 = load i64, i64* %720, align 8
  %722 = and i64 %721, 24
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %732, label %724

724:                                              ; preds = %717
  %725 = and i64 %698, -262144
  %726 = or i64 %725, 8
  %727 = inttoptr i64 %726 to i64*
  %728 = load i64, i64* %727, align 8
  %729 = and i64 %728, 24
  %730 = icmp eq i64 %729, 0
  br i1 %730, label %731, label %732

731:                                              ; preds = %724
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %698, i64 %701, i64 %700) #6
  br label %732

732:                                              ; preds = %731, %724, %717, %194, %216, %260, %33, %39
  %733 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 22
  %734 = load i32, i32* %733, align 8
  store i32 0, i32* %733, align 8
  %735 = call zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br i1 %735, label %737, label %736, !prof !5

736:                                              ; preds = %732
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

737:                                              ; preds = %732
  %738 = call zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br i1 %738, label %745, label %739

739:                                              ; preds = %737
  %740 = call i64 @_ZN2v88internal7Isolate21ThrowIllegalOperationEv(%"class.v8::internal::Isolate"* %0) #6
  %741 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 7
  %742 = load i32, i32* %741, align 8
  %743 = icmp eq i32 %742, 0
  br i1 %743, label %744, label %961

744:                                              ; preds = %739
  call void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"* %0) #6
  br label %961

745:                                              ; preds = %737
  %746 = call zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br i1 %746, label %755, label %747

747:                                              ; preds = %745
  %748 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %749 = bitcast %"class.v8::Platform"* %748 to void (%"class.v8::Platform"*)***
  %750 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %749, align 8
  %751 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %750, i64 17
  %752 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %751, align 8
  call void %752(%"class.v8::Platform"* %748) #6
  %753 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %754 = ptrtoint i64* %753 to i64
  br label %961

755:                                              ; preds = %745
  %756 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 12
  %757 = load i32, i32* %756, align 4
  %758 = icmp eq i32 %757, 0
  br i1 %758, label %759, label %819

759:                                              ; preds = %755
  %760 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %761 = load i64, i64* %760, align 8
  %762 = and i64 %761, -4294967296
  %763 = add i64 %761, -1
  %764 = inttoptr i64 %763 to i32*
  %765 = load atomic i32, i32* %764 monotonic, align 4
  %766 = zext i32 %765 to i64
  %767 = or i64 %762, %766
  %768 = add i64 %767, 19
  %769 = inttoptr i64 %768 to i32*
  %770 = load i32, i32* %769, align 4
  %771 = zext i32 %770 to i64
  %772 = or i64 %762, %771
  %773 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %774 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %773, align 8
  %775 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %774, null
  br i1 %775, label %779, label %776

776:                                              ; preds = %759
  %777 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %774, i64 %772) #6
  %778 = load i64, i64* %777, align 8
  br label %792

779:                                              ; preds = %759
  %780 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %781 = load i64*, i64** %780, align 8
  %782 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %783 = load i64*, i64** %782, align 8
  %784 = icmp eq i64* %781, %783
  br i1 %784, label %785, label %787

785:                                              ; preds = %779
  %786 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %787

787:                                              ; preds = %785, %779
  %788 = phi i64* [ %786, %785 ], [ %781, %779 ]
  %789 = ptrtoint i64* %788 to i64
  %790 = add i64 %789, 8
  %791 = inttoptr i64 %790 to i64*
  store i64* %791, i64** %780, align 8
  store i64 %772, i64* %788, align 8
  br label %792

792:                                              ; preds = %776, %787
  %793 = phi i64 [ %778, %776 ], [ %772, %787 ]
  %794 = phi i64* [ %777, %776 ], [ %788, %787 ]
  %795 = add i64 %793, 687
  %796 = inttoptr i64 %795 to i32*
  %797 = load atomic i32, i32* %796 monotonic, align 4
  %798 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %799 = load i64, i64* %798, align 8
  %800 = trunc i64 %799 to i32
  %801 = icmp eq i32 %797, %800
  br i1 %801, label %817, label %802

802:                                              ; preds = %792
  %803 = load atomic i32, i32* %796 monotonic, align 4
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %812, label %805

805:                                              ; preds = %802
  %806 = and i64 %793, -4294967296
  %807 = zext i32 %803 to i64
  %808 = or i64 %806, %807
  %809 = add i64 %808, 3
  %810 = inttoptr i64 %809 to void (%"class.v8::Isolate"*, %"class.v8::Context"*)**
  %811 = load void (%"class.v8::Isolate"*, %"class.v8::Context"*)*, void (%"class.v8::Isolate"*, %"class.v8::Context"*)** %810, align 1
  br label %812

812:                                              ; preds = %802, %805
  %813 = phi void (%"class.v8::Isolate"*, %"class.v8::Context"*)* [ %811, %805 ], [ null, %802 ]
  %814 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  %815 = bitcast i64* %794 to %"class.v8::Context"*
  call void %813(%"class.v8::Isolate"* %814, %"class.v8::Context"* %815) #6
  %816 = call i64 @_ZN2v88internal7Isolate21ThrowIllegalOperationEv(%"class.v8::internal::Isolate"* %0) #6
  br label %961

817:                                              ; preds = %792
  %818 = load i32, i32* %756, align 4
  br label %819

819:                                              ; preds = %817, %755
  %820 = phi i32 [ %818, %817 ], [ %757, %755 ]
  %821 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 10
  %822 = load i8, i8* %821, align 8, !range !6
  %823 = icmp eq i8 %822, 0
  br i1 %823, label %824, label %827

824:                                              ; preds = %819
  switch i32 %820, label %826 [
    i32 0, label %827
    i32 1, label %825
  ]

825:                                              ; preds = %824
  br label %827

826:                                              ; preds = %824
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

827:                                              ; preds = %824, %819, %825
  %828 = phi i32 [ 56, %825 ], [ 55, %819 ], [ 54, %824 ]
  %829 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 41
  %830 = call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %829, i32 %828) #6
  %831 = bitcast %"class.v8::internal::SaveContext"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %831) #6
  call void @_ZN2v88internal11SaveContextC1EPNS0_7IsolateE(%"class.v8::internal::SaveContext"* nonnull %19, %"class.v8::internal::Isolate"* %0) #6
  %832 = load i8, i8* @_ZN2v88internal33FLAG_clear_exceptions_on_js_entryE, align 1, !range !6
  %833 = icmp eq i8 %832, 0
  br i1 %833, label %838, label %834

834:                                              ; preds = %827
  %835 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %836 = load i64, i64* %835, align 8
  %837 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  store i64 %836, i64* %837, align 8
  br label %838

838:                                              ; preds = %827, %834
  %839 = load i32, i32* %756, align 4
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %841, label %889

841:                                              ; preds = %838
  %842 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %842) #6
  %843 = load i64, i64* %830, align 8
  %844 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %843, i64* %844, align 8
  %845 = add i64 %843, 27
  %846 = inttoptr i64 %845 to i32*
  %847 = load atomic i32, i32* %846 monotonic, align 4
  %848 = and i32 %847, 536870912
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %853, label %850, !prof !5

850:                                              ; preds = %841
  %851 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %20, i64 0, i32 0
  %852 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %851) #6
  br label %855

853:                                              ; preds = %841
  %854 = add i64 %843, 63
  br label %855

855:                                              ; preds = %850, %853
  %856 = phi i64 [ %852, %850 ], [ %854, %853 ]
  %857 = inttoptr i64 %856 to i64 (i64, i64, i64, i64, i64, i64**)*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %842) #6
  %858 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 5, i32 0, i32 0
  %859 = load i64*, i64** %858, align 8
  %860 = load i64, i64* %859, align 8
  %861 = load i64*, i64** %34, align 8
  %862 = load i64, i64* %861, align 8
  %863 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 1, i32 0, i32 0
  %864 = load i64*, i64** %863, align 8
  %865 = load i64, i64* %864, align 8
  %866 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 4
  %867 = bitcast %"class.v8::internal::Handle.1132"** %866 to i64***
  %868 = load i64**, i64*** %867, align 8
  %869 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %869) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %869, i8 0, i64 40, i1 false) #6
  %870 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1180", %"struct.std::__1::atomic.1180"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %878, label %872, !prof !5

872:                                              ; preds = %855
  %873 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %21, i64 0, i32 0
  %874 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %21, i64 0, i32 1
  %875 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %876 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %875, align 8
  %877 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %876, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %877, %"class.v8::internal::RuntimeCallStats"** %873, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %877, %"class.v8::internal::RuntimeCallTimer"* %874, i32 177) #6
  br label %878

878:                                              ; preds = %855, %872
  %879 = ptrtoint %"class.v8::internal::Isolate"* %0 to i64
  %880 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 2
  %881 = load i32, i32* %880, align 8
  %882 = sext i32 %881 to i64
  %883 = call i64 %857(i64 %879, i64 %860, i64 %862, i64 %865, i64 %882, i64** %868) #6
  %884 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %21, i64 0, i32 0
  %885 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %884, align 8
  %886 = icmp eq %"class.v8::internal::RuntimeCallStats"* %885, null
  br i1 %886, label %925, label %887, !prof !5

887:                                              ; preds = %878
  %888 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %21, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %885, %"class.v8::internal::RuntimeCallTimer"* %888) #6
  br label %925

889:                                              ; preds = %838
  %890 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %890) #6
  %891 = load i64, i64* %830, align 8
  %892 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %891, i64* %892, align 8
  %893 = add i64 %891, 27
  %894 = inttoptr i64 %893 to i32*
  %895 = load atomic i32, i32* %894 monotonic, align 4
  %896 = and i32 %895, 536870912
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %901, label %898, !prof !5

898:                                              ; preds = %889
  %899 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %22, i64 0, i32 0
  %900 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %899) #6
  br label %903

901:                                              ; preds = %889
  %902 = add i64 %891, 63
  br label %903

903:                                              ; preds = %898, %901
  %904 = phi i64 [ %900, %898 ], [ %902, %901 ]
  %905 = inttoptr i64 %904 to i64 (i64, %"class.v8::internal::MicrotaskQueue"*)*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %890) #6
  %906 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %906) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %906, i8 0, i64 40, i1 false) #6
  %907 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1180", %"struct.std::__1::atomic.1180"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %915, label %909, !prof !5

909:                                              ; preds = %903
  %910 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %23, i64 0, i32 0
  %911 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %23, i64 0, i32 1
  %912 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %913 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %912, align 8
  %914 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %913, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %914, %"class.v8::internal::RuntimeCallStats"** %910, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %914, %"class.v8::internal::RuntimeCallTimer"* %911, i32 177) #6
  br label %915

915:                                              ; preds = %903, %909
  %916 = ptrtoint %"class.v8::internal::Isolate"* %0 to i64
  %917 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 6
  %918 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %917, align 8
  %919 = call i64 %905(i64 %916, %"class.v8::internal::MicrotaskQueue"* %918) #6
  %920 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %23, i64 0, i32 0
  %921 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %920, align 8
  %922 = icmp eq %"class.v8::internal::RuntimeCallStats"* %921, null
  br i1 %922, label %925, label %923, !prof !5

923:                                              ; preds = %915
  %924 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %23, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %921, %"class.v8::internal::RuntimeCallTimer"* %924) #6
  br label %925

925:                                              ; preds = %923, %915, %887, %878
  %926 = phi i8* [ %869, %878 ], [ %869, %887 ], [ %906, %915 ], [ %906, %923 ]
  %927 = phi i64 [ %883, %878 ], [ %883, %887 ], [ %919, %915 ], [ %919, %923 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %926) #6
  call void @_ZN2v88internal11SaveContextD1Ev(%"class.v8::internal::SaveContext"* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %831) #6
  %928 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %929 = load i64, i64* %928, align 8
  %930 = trunc i64 %927 to i32
  %931 = trunc i64 %929 to i32
  %932 = icmp eq i32 %930, %931
  br i1 %932, label %933, label %938

933:                                              ; preds = %925
  %934 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 7
  %935 = load i32, i32* %934, align 8
  %936 = icmp eq i32 %935, 0
  br i1 %936, label %937, label %961

937:                                              ; preds = %933
  call void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"* %0) #6
  br label %961

938:                                              ; preds = %925
  %939 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %940 = load i64, i64* %939, align 8
  %941 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 11, i32 0, i32 0
  store i64 %940, i64* %941, align 8
  %942 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %943 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %942, align 8
  %944 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %943, null
  br i1 %944, label %948, label %945

945:                                              ; preds = %938
  %946 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %943, i64 %927) #6
  %947 = ptrtoint i64* %946 to i64
  br label %961

948:                                              ; preds = %938
  %949 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %950 = load i64*, i64** %949, align 8
  %951 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %952 = load i64*, i64** %951, align 8
  %953 = icmp eq i64* %950, %952
  br i1 %953, label %954, label %956

954:                                              ; preds = %948
  %955 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %956

956:                                              ; preds = %954, %948
  %957 = phi i64* [ %955, %954 ], [ %950, %948 ]
  %958 = ptrtoint i64* %957 to i64
  %959 = add i64 %958, 8
  %960 = inttoptr i64 %959 to i64*
  store i64* %960, i64** %949, align 8
  store i64 %927, i64* %957, align 8
  br label %961

961:                                              ; preds = %956, %945, %937, %933, %739, %744, %812, %747
  %962 = phi i64 [ 0, %812 ], [ %754, %747 ], [ 0, %744 ], [ 0, %739 ], [ 0, %937 ], [ 0, %933 ], [ %947, %945 ], [ %958, %956 ]
  store i32 %734, i32* %733, align 8
  br label %963

963:                                              ; preds = %139, %692, %696, %961
  %964 = phi i64 [ %962, %961 ], [ %140, %139 ], [ 0, %692 ], [ 0, %696 ]
  %965 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %16, i64 0, i32 0
  %966 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %965, align 8
  %967 = icmp eq %"class.v8::internal::RuntimeCallStats"* %966, null
  br i1 %967, label %970, label %968, !prof !5

968:                                              ; preds = %963
  %969 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %16, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %966, %"class.v8::internal::RuntimeCallTimer"* %969) #6
  br label %970

970:                                              ; preds = %963, %968
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #6
  %971 = inttoptr i64 %964 to i64*
  ret i64* %971
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Execution11CallBuiltinEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEEiPS8_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1132"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.v8::internal::(anonymous namespace)::InvokeParams", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 68
  %8 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %8, i64 0, i32 5
  %10 = load i8, i8* %9, align 4, !range !6
  store i8 1, i8* %9, align 4
  %11 = bitcast %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 5, i32 0, i32 0
  store i64* null, i64** %12, align 8, !alias.scope !8
  %13 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 1
  %14 = bitcast %"class.v8::internal::Handle.1132"* %13 to i64*
  store i64 0, i64* %14, align 8, !alias.scope !8
  %15 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %15, align 8, !alias.scope !8
  %16 = ptrtoint i64* %2 to i64
  %17 = load i64, i64* %2, align 8, !noalias !8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %56, label %20

20:                                               ; preds = %5
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4, !noalias !8
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2, !noalias !8
  %30 = icmp eq i16 %29, 189
  br i1 %30, label %31, label %56

31:                                               ; preds = %20
  %32 = add i64 %17, 15
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4, !noalias !8
  %35 = zext i32 %34 to i64
  %36 = or i64 %21, %35
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8, !noalias !8
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %31
  %41 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %36) #6, !noalias !8
  %42 = ptrtoint i64* %41 to i64
  br label %56

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %47 = load i64*, i64** %46, align 8, !noalias !8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6, !noalias !8
  br label %51

51:                                               ; preds = %49, %43
  %52 = phi i64* [ %50, %49 ], [ %45, %43 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %44, align 8, !noalias !8
  store i64 %36, i64* %52, align 8, !noalias !8
  br label %56

56:                                               ; preds = %5, %20, %40, %51
  %57 = phi i64 [ %16, %20 ], [ %16, %5 ], [ %42, %40 ], [ %53, %51 ]
  %58 = inttoptr i64 %57 to i64*
  %59 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 1, i32 0, i32 0
  store i64* %58, i64** %59, align 8, !alias.scope !8
  %60 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 2
  store i32 %3, i32* %60, align 8, !alias.scope !8
  %61 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 4
  store %"class.v8::internal::Handle.1132"* %4, %"class.v8::internal::Handle.1132"** %61, align 8, !alias.scope !8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %63 = ptrtoint i64* %62 to i64
  %64 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 5
  %65 = bitcast %"class.v8::internal::Handle.1132"* %64 to i64*
  store i64 %63, i64* %65, align 8, !alias.scope !8
  %66 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 6
  store %"class.v8::internal::MicrotaskQueue"* null, %"class.v8::internal::MicrotaskQueue"** %66, align 8, !alias.scope !8
  %67 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 7
  store i32 0, i32* %67, align 8, !alias.scope !8
  %68 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 9
  store %"class.v8::internal::MaybeHandle"* null, %"class.v8::internal::MaybeHandle"** %68, align 8, !alias.scope !8
  %69 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 10
  store i8 0, i8* %69, align 8, !alias.scope !8
  %70 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 12
  store i32 0, i32* %70, align 4, !alias.scope !8
  %71 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 13
  store i8 1, i8* %71, align 8, !alias.scope !8
  %72 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_16InvokeEPNS0_7IsolateERKNS1_12InvokeParamsE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::(anonymous namespace)::InvokeParams"* nonnull dereferenceable(80) %6)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #6
  store i8 %10, i8* %9, align 4
  ret i64* %72
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Execution3NewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEiPS6_(%"class.v8::internal::Isolate"*, i64*, i32, %"class.v8::internal::Handle.1132"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.v8::internal::(anonymous namespace)::InvokeParams", align 8
  %6 = bitcast %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %8, align 8, !alias.scope !11
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %10 = ptrtoint i64* %9 to i64
  %11 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 1
  %12 = bitcast %"class.v8::internal::Handle.1132"* %11 to i64*
  store i64 %10, i64* %12, align 8, !alias.scope !11
  %13 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 2
  store i32 %2, i32* %13, align 8, !alias.scope !11
  %14 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 4
  store %"class.v8::internal::Handle.1132"* %3, %"class.v8::internal::Handle.1132"** %14, align 8, !alias.scope !11
  store i64* %1, i64** %7, align 8, !alias.scope !11
  %15 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 6
  store %"class.v8::internal::MicrotaskQueue"* null, %"class.v8::internal::MicrotaskQueue"** %15, align 8, !alias.scope !11
  %16 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 7
  store i32 0, i32* %16, align 8, !alias.scope !11
  %17 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 9
  store %"class.v8::internal::MaybeHandle"* null, %"class.v8::internal::MaybeHandle"** %17, align 8, !alias.scope !11
  %18 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 10
  store i8 1, i8* %18, align 8, !alias.scope !11
  %19 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 12
  store i32 0, i32* %19, align 4, !alias.scope !11
  %20 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %5, i64 0, i32 13
  store i8 1, i8* %20, align 8, !alias.scope !11
  %21 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_16InvokeEPNS0_7IsolateERKNS1_12InvokeParamsE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::(anonymous namespace)::InvokeParams"* nonnull dereferenceable(80) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #6
  ret i64* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Execution3NewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1132"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.v8::internal::(anonymous namespace)::InvokeParams", align 8
  %7 = bitcast %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %9, align 8, !alias.scope !14
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %11 = ptrtoint i64* %10 to i64
  %12 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 1
  %13 = bitcast %"class.v8::internal::Handle.1132"* %12 to i64*
  store i64 %11, i64* %13, align 8, !alias.scope !14
  %14 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 2
  store i32 %3, i32* %14, align 8, !alias.scope !14
  %15 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 4
  store %"class.v8::internal::Handle.1132"* %4, %"class.v8::internal::Handle.1132"** %15, align 8, !alias.scope !14
  store i64* %2, i64** %8, align 8, !alias.scope !14
  %16 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 6
  store %"class.v8::internal::MicrotaskQueue"* null, %"class.v8::internal::MicrotaskQueue"** %16, align 8, !alias.scope !14
  %17 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 7
  store i32 0, i32* %17, align 8, !alias.scope !14
  %18 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 9
  store %"class.v8::internal::MaybeHandle"* null, %"class.v8::internal::MaybeHandle"** %18, align 8, !alias.scope !14
  %19 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 10
  store i8 1, i8* %19, align 8, !alias.scope !14
  %20 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 12
  store i32 0, i32* %20, align 4, !alias.scope !14
  %21 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %6, i64 0, i32 13
  store i8 1, i8* %21, align 8, !alias.scope !14
  %22 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_16InvokeEPNS0_7IsolateERKNS1_12InvokeParamsE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::(anonymous namespace)::InvokeParams"* nonnull dereferenceable(80) %6)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #6
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Execution7TryCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_NS1_15MessageHandlingEPNS0_11MaybeHandleIS5_EEb(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1132"*, i32, %"class.v8::internal::MaybeHandle"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.v8::internal::(anonymous namespace)::InvokeParams", align 8
  %10 = bitcast %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #6
  %11 = zext i1 %7 to i8
  %12 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 5, i32 0, i32 0
  store i64* null, i64** %12, align 8, !alias.scope !17
  %13 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 1
  %14 = bitcast %"class.v8::internal::Handle.1132"* %13 to i64*
  store i64 0, i64* %14, align 8, !alias.scope !17
  %15 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %15, align 8, !alias.scope !17
  %16 = ptrtoint i64* %2 to i64
  %17 = load i64, i64* %2, align 8, !noalias !17
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %56, label %20

20:                                               ; preds = %8
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4, !noalias !17
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2, !noalias !17
  %30 = icmp eq i16 %29, 189
  br i1 %30, label %31, label %56

31:                                               ; preds = %20
  %32 = add i64 %17, 15
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4, !noalias !17
  %35 = zext i32 %34 to i64
  %36 = or i64 %21, %35
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8, !noalias !17
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %31
  %41 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %36) #6, !noalias !17
  %42 = ptrtoint i64* %41 to i64
  br label %56

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !17
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %47 = load i64*, i64** %46, align 8, !noalias !17
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6, !noalias !17
  br label %51

51:                                               ; preds = %49, %43
  %52 = phi i64* [ %50, %49 ], [ %45, %43 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %44, align 8, !noalias !17
  store i64 %36, i64* %52, align 8, !noalias !17
  br label %56

56:                                               ; preds = %8, %20, %40, %51
  %57 = phi i64 [ %16, %20 ], [ %16, %8 ], [ %42, %40 ], [ %53, %51 ]
  %58 = inttoptr i64 %57 to i64*
  %59 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 1, i32 0, i32 0
  store i64* %58, i64** %59, align 8, !alias.scope !17
  %60 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 2
  store i32 %3, i32* %60, align 8, !alias.scope !17
  %61 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 4
  store %"class.v8::internal::Handle.1132"* %4, %"class.v8::internal::Handle.1132"** %61, align 8, !alias.scope !17
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %63 = ptrtoint i64* %62 to i64
  %64 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 5
  %65 = bitcast %"class.v8::internal::Handle.1132"* %64 to i64*
  store i64 %63, i64* %65, align 8, !alias.scope !17
  %66 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 6
  store %"class.v8::internal::MicrotaskQueue"* null, %"class.v8::internal::MicrotaskQueue"** %66, align 8, !alias.scope !17
  %67 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 7
  store i32 %5, i32* %67, align 8, !alias.scope !17
  %68 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 9
  store %"class.v8::internal::MaybeHandle"* %6, %"class.v8::internal::MaybeHandle"** %68, align 8, !alias.scope !17
  %69 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 10
  store i8 0, i8* %69, align 8, !alias.scope !17
  %70 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 12
  store i32 0, i32* %70, align 4, !alias.scope !17
  %71 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %9, i64 0, i32 13
  store i8 %11, i8* %71, align 8, !alias.scope !17
  %72 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118InvokeWithTryCatchEPNS0_7IsolateERKNS1_12InvokeParamsE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::(anonymous namespace)::InvokeParams"* nonnull dereferenceable(80) %9)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #6
  ret i64* %72
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_118InvokeWithTryCatchEPNS0_7IsolateERKNS1_12InvokeParamsE(%"class.v8::internal::Isolate"*, %"struct.v8::internal::(anonymous namespace)::InvokeParams"* nocapture readonly dereferenceable(80)) unnamed_addr #0 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 9
  %5 = load %"class.v8::internal::MaybeHandle"*, %"class.v8::internal::MaybeHandle"** %4, align 8
  %6 = icmp eq %"class.v8::internal::MaybeHandle"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::MaybeHandle"* %5 to i64*
  store i64 0, i64* %8, align 8
  br label %9

9:                                                ; preds = %2, %7
  %10 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #6
  %11 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %11) #6
  call void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"* nonnull %3, i1 zeroext false) #6
  call void @_ZN2v88TryCatch17SetCaptureMessageEb(%"class.v8::TryCatch"* nonnull %3, i1 zeroext false) #6
  %12 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_16InvokeEPNS0_7IsolateERKNS1_12InvokeParamsE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::(anonymous namespace)::InvokeParams"* dereferenceable(80) %1)
  %13 = icmp eq i64* %12, null
  br i1 %13, label %14, label %43

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 33
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %16 to i32
  %20 = trunc i64 %18 to i32
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %36, label %22

22:                                               ; preds = %14
  %23 = load %"class.v8::internal::MaybeHandle"*, %"class.v8::internal::MaybeHandle"** %4, align 8
  %24 = icmp eq %"class.v8::internal::MaybeHandle"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #6
  %27 = ptrtoint %"class.v8::Value"* %26 to i64
  %28 = bitcast %"class.v8::internal::MaybeHandle"** %4 to i64**
  %29 = load i64*, i64** %28, align 8
  store i64 %27, i64* %29, align 8
  br label %30

30:                                               ; preds = %22, %25
  %31 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 7
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %0, i1 zeroext true) #6
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #6
  br label %44

36:                                               ; preds = %14
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #6
  %37 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %1, i64 0, i32 13
  %38 = load i8, i8* %37, align 8, !range !6
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %0, i1 zeroext false) #6
  br label %44

42:                                               ; preds = %30
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #6
  br label %44

43:                                               ; preds = %9
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #6
  br label %44

44:                                               ; preds = %43, %42, %34, %36, %40
  ret i64* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9Execution16TryRunMicrotasksEPNS0_7IsolateEPNS0_14MicrotaskQueueEPNS0_11MaybeHandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MaybeHandle"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.v8::internal::(anonymous namespace)::InvokeParams", align 8
  %5 = bitcast %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %7 = ptrtoint i64* %6 to i64
  %8 = bitcast %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4 to i64*
  store i64 %7, i64* %8, align 8, !alias.scope !20
  %9 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 1
  %10 = bitcast %"class.v8::internal::Handle.1132"* %9 to i64*
  store i64 %7, i64* %10, align 8, !alias.scope !20
  %11 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 2
  store i32 0, i32* %11, align 8, !alias.scope !20
  %12 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 4
  store %"class.v8::internal::Handle.1132"* null, %"class.v8::internal::Handle.1132"** %12, align 8, !alias.scope !20
  %13 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 5
  %14 = bitcast %"class.v8::internal::Handle.1132"* %13 to i64*
  store i64 %7, i64* %14, align 8, !alias.scope !20
  %15 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 6
  store %"class.v8::internal::MicrotaskQueue"* %1, %"class.v8::internal::MicrotaskQueue"** %15, align 8, !alias.scope !20
  %16 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 7
  store i32 0, i32* %16, align 8, !alias.scope !20
  %17 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 9
  store %"class.v8::internal::MaybeHandle"* %2, %"class.v8::internal::MaybeHandle"** %17, align 8, !alias.scope !20
  %18 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 10
  store i8 0, i8* %18, align 8, !alias.scope !20
  %19 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 12
  store i32 1, i32* %19, align 4, !alias.scope !20
  %20 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::InvokeParams", %"struct.v8::internal::(anonymous namespace)::InvokeParams"* %4, i64 0, i32 13
  store i8 1, i8* %20, align 8, !alias.scope !20
  %21 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_118InvokeWithTryCatchEPNS0_7IsolateERKNS1_12InvokeParamsE(%"class.v8::internal::Isolate"* %0, %"struct.v8::internal::(anonymous namespace)::InvokeParams"* nonnull dereferenceable(80) %4)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #6
  ret i64* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Execution8CallWasmEPNS0_7IsolateENS0_6HandleINS0_4CodeEEEmNS4_INS0_6ObjectEEEm(%"class.v8::internal::Isolate"*, i64*, i64, i64*, i64) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::SaveContext", align 8
  %8 = alloca %"struct.v8::internal::StackHandlerMarker", align 8
  %9 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %10 = bitcast %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  %11 = load i64, i64* %1, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = add i64 %11, 27
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 536870912
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18, !prof !5

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Code>::ObjectRef"* %6, i64 0, i32 0
  %20 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nonnull %19) #6
  br label %23

21:                                               ; preds = %5
  %22 = add i64 %11, 63
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %25 = inttoptr i64 %24 to i64 (i64, i64, i64, i64)*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  %26 = bitcast %"class.v8::internal::SaveContext"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #6
  call void @_ZN2v88internal11SaveContextC1EPNS0_7IsolateE(%"class.v8::internal::SaveContext"* nonnull %7, %"class.v8::internal::Isolate"* %0) #6
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 15
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 20
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  store i64 %33, i64* %29, align 8
  br label %34

34:                                               ; preds = %32, %23
  %35 = bitcast %"struct.v8::internal::StackHandlerMarker"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #6
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 16
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::StackHandlerMarker", %"struct.v8::internal::StackHandlerMarker"* %8, i64 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::StackHandlerMarker", %"struct.v8::internal::StackHandlerMarker"* %8, i64 0, i32 1
  store i64 0, i64* %39, align 8
  %40 = ptrtoint %"struct.v8::internal::StackHandlerMarker"* %8 to i64
  store i64 %40, i64* %36, align 8
  %41 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.152", %"struct.std::__1::atomic.152"* @_ZN2v88internal12trap_handler25g_can_enable_trap_handlerE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %34
  store atomic i8 0, i8* getelementptr inbounds (%"struct.std::__1::atomic.152", %"struct.std::__1::atomic.152"* @_ZN2v88internal12trap_handler25g_can_enable_trap_handlerE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  br label %45

45:                                               ; preds = %44, %34
  %46 = load i8, i8* @_ZN2v88internal12trap_handler25g_is_trap_handler_enabledE, align 1, !range !6
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  br i1 icmp ne (void ()* @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE, void ()* null), label %49, label %50

49:                                               ; preds = %48
  call void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE() #6
  br label %50

50:                                               ; preds = %49, %48
  store i32 1, i32* @_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE, align 4
  br label %51

51:                                               ; preds = %45, %50
  %52 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %52) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 40, i1 false) #6
  %53 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1180", %"struct.std::__1::atomic.1180"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %61, label %55, !prof !5

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %9, i64 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %9, i64 0, i32 1
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %59 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %59, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %60, %"class.v8::internal::RuntimeCallStats"** %56, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %60, %"class.v8::internal::RuntimeCallTimer"* %57, i32 177) #6
  br label %61

61:                                               ; preds = %51, %55
  %62 = load i64, i64* %3, align 8
  %63 = call i64 %25(i64 %2, i64 %62, i64 %4, i64 %28) #6
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  store i64 %63, i64* %66, align 8
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %9, i64 0, i32 0
  %69 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %68, align 8
  %70 = icmp eq %"class.v8::internal::RuntimeCallStats"* %69, null
  br i1 %70, label %73, label %71, !prof !5

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %9, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %69, %"class.v8::internal::RuntimeCallTimer"* %72) #6
  br label %73

73:                                               ; preds = %67, %71
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %52) #6
  br i1 icmp ne (void ()* @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE, void ()* null), label %74, label %75

74:                                               ; preds = %73
  call void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE() #6
  br label %75

75:                                               ; preds = %73, %74
  %76 = load i32, i32* @_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %89, label %78

78:                                               ; preds = %75
  %79 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.152", %"struct.std::__1::atomic.152"* @_ZN2v88internal12trap_handler25g_can_enable_trap_handlerE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %80 = and i8 %79, 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %78
  store atomic i8 0, i8* getelementptr inbounds (%"struct.std::__1::atomic.152", %"struct.std::__1::atomic.152"* @_ZN2v88internal12trap_handler25g_can_enable_trap_handlerE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  br label %83

83:                                               ; preds = %82, %78
  %84 = load i8, i8* @_ZN2v88internal12trap_handler25g_is_trap_handler_enabledE, align 1, !range !6
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  br i1 icmp ne (void ()* @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE, void ()* null), label %87, label %88

87:                                               ; preds = %86
  call void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE() #6
  br label %88

88:                                               ; preds = %87, %86
  store i32 0, i32* @_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE, align 4
  br label %89

89:                                               ; preds = %75, %88, %83
  %90 = load i64, i64* %38, align 8
  store i64 %90, i64* %36, align 8
  br i1 %31, label %91, label %92

91:                                               ; preds = %89
  store i64 0, i64* %29, align 8
  br label %92

92:                                               ; preds = %91, %89
  store i64 %28, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #6
  call void @_ZN2v88internal11SaveContextD1Ev(%"class.v8::internal::SaveContext"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #6
  ret void
}

declare void @_ZN2v88internal11SaveContextC1EPNS0_7IsolateE(%"class.v8::internal::SaveContext"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal11SaveContextD1Ev(%"class.v8::internal::SaveContext"*) unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal18SharedFunctionInfo12BreakAtEntryEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #3

declare void @_ZN2v88internal20SaveAndSwitchContextC1EPNS0_7IsolateENS0_7ContextE(%"class.v8::internal::SaveAndSwitchContext"*, %"class.v8::internal::Isolate"*, i64) unnamed_addr #3

declare i64* @_ZN2v88internal8Builtins17InvokeApiFunctionEPNS0_7IsolateEbNS0_6HandleINS0_10HeapObjectEEENS4_INS0_6ObjectEEEiPS8_S6_(%"class.v8::internal::Isolate"*, i1 zeroext, i64*, i64*, i32, %"class.v8::internal::Handle.1132"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal7Isolate21ReportPendingMessagesEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN2v88internal11SaveContextD2Ev(%"class.v8::internal::SaveContext"*) unnamed_addr #4

declare zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

declare zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE1ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal7Isolate21ThrowIllegalOperationEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE2ELb0EE9IsAllowedEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #6

declare zeroext i1 @_ZNK2v88internal9ScopeInfo15is_script_scopeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory12NewEvalErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"*, i32) local_unnamed_addr #3

declare zeroext i8 @_ZNK2v88internal9ScopeInfo16ContextLocalModeEi(%"class.v8::internal::ScopeInfo"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal18ScriptContextTable6LookupEPNS0_7IsolateES1_NS0_6StringEPNS0_20VariableLookupResultE(%"class.v8::internal::Isolate"*, i64, i64, %"struct.v8::internal::VariableLookupResult"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal9ScopeInfo15IsReplModeScopeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"*) local_unnamed_addr #3

declare void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"*, i64*, i32, i32) unnamed_addr #3

declare i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #3

declare i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare void @_ZN2v88internal14JSGlobalObject22InvalidatePropertyCellENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory16NewScriptContextENS0_6HandleINS0_13NativeContextEEENS2_INS0_9ScopeInfoEEE(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal7Context10InitializeEPNS0_7IsolateE(%"class.v8::internal::Context"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal18ScriptContextTable6ExtendENS0_6HandleIS1_EENS2_INS0_7ContextEEE(i64*, i64*) local_unnamed_addr #3

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"*, i32) local_unnamed_addr #3

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #3

declare void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2v88TryCatch17SetCaptureMessageEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

define weak_odr hidden i32* @_ZTWN2v88internal12trap_handler21g_thread_in_wasm_codeE() local_unnamed_addr #3 {
  br i1 icmp ne (void ()* @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE, void ()* null), label %1, label %2

1:                                                ; preds = %0
  tail call void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE()
  br label %2

2:                                                ; preds = %1, %0
  ret i32* @_ZN2v88internal12trap_handler21g_thread_in_wasm_codeE
}

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #3

declare extern_weak void @_ZTHN2v88internal12trap_handler21g_thread_in_wasm_codeE() #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams12SetUpForCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_: argument 0"}
!4 = distinct !{!4, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams12SetUpForCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{i8 0, i8 2}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams12SetUpForCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_: argument 0"}
!10 = distinct !{!10, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams12SetUpForCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams11SetUpForNewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_: argument 0"}
!13 = distinct !{!13, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams11SetUpForNewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams11SetUpForNewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_: argument 0"}
!16 = distinct !{!16, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams11SetUpForNewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams15SetUpForTryCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_NS0_9Execution15MessageHandlingEPNS0_11MaybeHandleIS6_EEb: argument 0"}
!19 = distinct !{!19, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams15SetUpForTryCallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES7_iPS7_NS0_9Execution15MessageHandlingEPNS0_11MaybeHandleIS6_EEb"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams21SetUpForRunMicrotasksEPNS0_7IsolateEPNS0_14MicrotaskQueueEPNS0_11MaybeHandleINS0_6ObjectEEE: argument 0"}
!22 = distinct !{!22, !"_ZN2v88internal12_GLOBAL__N_112InvokeParams21SetUpForRunMicrotasksEPNS0_7IsolateEPNS0_14MicrotaskQueueEPNS0_11MaybeHandleINS0_6ObjectEEE"}
