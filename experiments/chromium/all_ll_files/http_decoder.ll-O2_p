; ModuleID = '../../net/third_party/quiche/src/quic/core/http/http_decoder.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/http/http_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::HttpDecoder" = type <{ %"class.quic::HttpDecoder::Visitor"*, i8, [3 x i8], i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array", i8, i8, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.quic::HttpDecoder::Visitor" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.quic::SettingsFrame" = type { %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i64, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.quic::QuicDataReader" = type { %"class.quiche::QuicheDataReader.base", [4 x i8] }
%"class.quiche::QuicheDataReader.base" = type <{ i8*, i64, i64, i32 }>
%"class.absl::string_view" = type { i8*, i64 }
%"class.quiche::QuicheDataReader" = type <{ i8*, i64, i64, i32, [4 x i8] }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"struct.quic::CancelPushFrame" = type { i64 }
%"struct.quic::GoAwayFrame" = type { i64 }
%"struct.quic::MaxPushIdFrame" = type { i64 }
%"struct.quic::PriorityUpdateFrame" = type { i8, i64, %"class.std::__1::basic_string" }
%"struct.quic::AcceptChFrame" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.spdy::AcceptChOriginValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.spdy::AcceptChOriginValuePair"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE27drop_deletes_without_resizeEv = comdat any

$_ZNSt3__16vectorIN4spdy23AcceptChOriginValuePairENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@FLAGS_quic_reloadable_flag_quic_ignore_old_priority_update_frame = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_error_on_http3_push = external local_unnamed_addr global i8, align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"../../net/third_party/quiche/src/quic/core/http/http_decoder.cc\00", align 1
@.str.2 = private unnamed_addr constant [70 x i8] c"HttpDecoder called after an indefinite-length frame has been received\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"Invalid state: \00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"HTTP/2 frame received in a HTTP/3 connection: \00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"CANCEL_PUSH frame received.\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"PUSH_PROMISE frame received.\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"Frame is too large.\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"PUSH_PROMISE frame with empty payload.\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"Unable to read PUSH_PROMISE push_id.\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"Unable to read CANCEL_PUSH push_id.\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"Superfluous data in CANCEL_PUSH frame.\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"Unable to read GOAWAY ID.\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"Superfluous data in GOAWAY frame.\00", align 1
@.str.14 = private unnamed_addr constant [36 x i8] c"Unable to read MAX_PUSH_ID push_id.\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"Superfluous data in MAX_PUSH_ID frame.\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"Unable to read setting identifier.\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"Unable to read setting value.\00", align 1
@.str.18 = private unnamed_addr constant [30 x i8] c"Duplicate setting identifier.\00", align 1
@.str.19 = private unnamed_addr constant [41 x i8] c"Unable to read prioritized element type.\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"Invalid prioritized element type.\00", align 1
@.str.21 = private unnamed_addr constant [39 x i8] c"Unable to read prioritized element id.\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"Unable to read ACCEPT_CH origin.\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"Unable to read ACCEPT_CH value.\00", align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN4quic11HttpDecoderC1EPNS0_7VisitorE = hidden unnamed_addr alias void (%"class.quic::HttpDecoder"*, %"class.quic::HttpDecoder::Visitor"*), void (%"class.quic::HttpDecoder"*, %"class.quic::HttpDecoder::Visitor"*)* @_ZN4quic11HttpDecoderC2EPNS0_7VisitorE
@_ZN4quic11HttpDecoderC1EPNS0_7VisitorENS0_7OptionsE = hidden unnamed_addr alias void (%"class.quic::HttpDecoder"*, %"class.quic::HttpDecoder::Visitor"*, i8), void (%"class.quic::HttpDecoder"*, %"class.quic::HttpDecoder::Visitor"*, i8)* @_ZN4quic11HttpDecoderC2EPNS0_7VisitorENS0_7OptionsE
@_ZN4quic11HttpDecoderD1Ev = hidden unnamed_addr alias void (%"class.quic::HttpDecoder"*), void (%"class.quic::HttpDecoder"*)* @_ZN4quic11HttpDecoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic11HttpDecoderC2EPNS0_7VisitorE(%"class.quic::HttpDecoder"* nocapture, %"class.quic::HttpDecoder::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  store %"class.quic::HttpDecoder::Visitor"* %1, %"class.quic::HttpDecoder::Visitor"** %3, align 8
  %4 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 76, i1 false) #11
  store i8 0, i8* %9, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 16
  %13 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 20
  %15 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_ignore_old_priority_update_frame, align 1, !range !2
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 21
  %17 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_error_on_http3_push, align 1, !range !2
  store i8 %17, i8* %16, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic11HttpDecoderC2EPNS0_7VisitorENS0_7OptionsE(%"class.quic::HttpDecoder"*, %"class.quic::HttpDecoder::Visitor"*, i8) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  store %"class.quic::HttpDecoder::Visitor"* %1, %"class.quic::HttpDecoder::Visitor"** %4, align 8
  %5 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 1
  %6 = and i8 %2, 1
  store i8 %6, i8* %5, align 8
  %7 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 76, i1 false)
  store i8 0, i8* %11, align 1
  %13 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 16
  %15 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #11
  %16 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 20
  %17 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_ignore_old_priority_update_frame, align 1, !range !2
  store i8 %17, i8* %16, align 8
  %18 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 21
  %19 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_error_on_http3_push, align 1, !range !2
  store i8 %19, i8* %18, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic11HttpDecoderD2Ev(%"class.quic::HttpDecoder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 16
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder14DecodeSettingsEPKcmPNS_13SettingsFrameE(i8*, i64, %"struct.quic::SettingsFrame"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.quic::QuicDataReader", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.absl::string_view", align 8
  %7 = alloca %"class.quic::QuicDataReader", align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = bitcast %"class.quic::QuicDataReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = bitcast %"class.quic::QuicDataReader"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN4quic14QuicDataReaderC1EPKcm(%"class.quic::QuicDataReader"* nonnull %4, i8* %0, i64 %1) #11
  %12 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %13 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* nonnull %4, i64* nonnull %5) #11
  %14 = load i64, i64* %5, align 8
  %15 = icmp eq i64 %14, 4
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %111

17:                                               ; preds = %3
  %18 = bitcast %"class.absl::string_view"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #11
  %19 = call zeroext i1 @_ZN4quic14QuicDataReader23ReadStringPieceVarInt62EPN4absl11string_viewE(%"class.quic::QuicDataReader"* nonnull %4, %"class.absl::string_view"* nonnull %6) #11
  br i1 %19, label %20, label %109

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 0
  %22 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 1
  %23 = bitcast %"class.quic::QuicDataReader"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = bitcast %"class.quic::QuicDataReader"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  %25 = load i8*, i8** %21, align 8
  %26 = load i64, i64* %22, align 8
  call void @_ZN4quic14QuicDataReaderC1EN4absl11string_viewE(%"class.quic::QuicDataReader"* nonnull %7, i8* %25, i64 %26) #11
  %27 = bitcast %"class.quic::QuicDataReader"* %7 to %"class.quiche::QuicheDataReader"*
  %28 = call zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"* nonnull %27) #11
  br i1 %28, label %107, label %29

29:                                               ; preds = %20
  %30 = bitcast i64* %8 to i8*
  %31 = bitcast i64* %9 to i8*
  %32 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %2, i64 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %34 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %2, i64 0, i32 0, i32 0, i32 0, i32 3
  %36 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %29, %98
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  store i64 -6148914691236517206, i64* %8, align 8
  %38 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* nonnull %7, i64* nonnull %8) #11
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %107

40:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store i64 -6148914691236517206, i64* %9, align 8
  %41 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* nonnull %7, i64* nonnull %9) #11
  br i1 %41, label %42, label %97

42:                                               ; preds = %40
  %43 = load i64, i64* %8, align 8
  %44 = load i64, i64* %9, align 8
  %45 = add i64 %33, %43
  %46 = zext i64 %45 to i128
  %47 = mul nuw i128 %46, 11376068507788127593
  %48 = lshr i128 %47, 64
  %49 = xor i128 %48, %47
  %50 = trunc i128 %49 to i64
  %51 = load i8*, i8** %34, align 8, !noalias !3
  %52 = load i64, i64* %35, align 8, !noalias !3
  %53 = lshr i64 %50, 7
  %54 = ptrtoint i8* %51 to i64
  %55 = lshr i64 %54, 12
  %56 = xor i64 %53, %55
  %57 = trunc i128 %49 to i8
  %58 = and i8 %57, 127
  %59 = insertelement <16 x i8> undef, i8 %58, i32 0
  %60 = shufflevector <16 x i8> %59, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %61

61:                                               ; preds = %91, %42
  %62 = phi i64 [ %56, %42 ], [ %93, %91 ]
  %63 = phi i64 [ 0, %42 ], [ %92, %91 ]
  %64 = and i64 %62, %52
  %65 = getelementptr inbounds i8, i8* %51, i64 %64
  %66 = bitcast i8* %65 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1, !noalias !3
  %68 = icmp eq <16 x i8> %60, %67
  %69 = bitcast <16 x i1> %68 to i16
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %87, label %71

71:                                               ; preds = %61
  %72 = zext i16 %69 to i32
  %73 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %36, align 8, !noalias !3
  br label %74

74:                                               ; preds = %83, %71
  %75 = phi i32 [ %72, %71 ], [ %85, %83 ]
  %76 = call i32 @llvm.cttz.i32(i32 %75, i1 false) #11, !range !6
  %77 = zext i32 %76 to i64
  %78 = add i64 %64, %77
  %79 = and i64 %78, %52
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %73, i64 %79, i32 0, i32 0
  %81 = load i64, i64* %80, align 8, !noalias !3
  %82 = icmp eq i64 %81, %43
  br i1 %82, label %94, label %83, !prof !7

83:                                               ; preds = %74
  %84 = add i32 %75, -1
  %85 = and i32 %84, %75
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %74

87:                                               ; preds = %83, %61
  %88 = icmp eq <16 x i8> %67, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %89 = bitcast <16 x i1> %88 to i16
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %91, label %98, !prof !8

91:                                               ; preds = %87
  %92 = add i64 %63, 16
  %93 = add i64 %92, %64
  br label %61

94:                                               ; preds = %74
  %95 = getelementptr inbounds i8, i8* %51, i64 %79
  %96 = icmp ne i8* %95, null
  call void @llvm.assume(i1 %96) #11, !noalias !3
  br label %97

97:                                               ; preds = %40, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %107

98:                                               ; preds = %87
  %99 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %32, i64 %50) #11, !noalias !3
  %100 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %36, align 8, !noalias !3
  %101 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %99, i32 0, i32 0
  store i64 %43, i64* %101, align 8, !noalias !3
  %102 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %99, i32 0, i32 1
  store i64 %44, i64* %102, align 8, !noalias !3
  %103 = load i8*, i8** %34, align 8, !noalias !3
  %104 = getelementptr inbounds i8, i8* %103, i64 %99
  %105 = icmp ne i8* %104, null
  call void @llvm.assume(i1 %105) #11, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  %106 = call zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"* nonnull %27) #11
  br i1 %106, label %107, label %37

107:                                              ; preds = %98, %20, %97, %39
  %108 = phi i1 [ false, %39 ], [ false, %97 ], [ true, %20 ], [ true, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  br label %109

109:                                              ; preds = %17, %107
  %110 = phi i1 [ %108, %107 ], [ false, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  br label %111

111:                                              ; preds = %3, %109
  %112 = phi i1 [ %110, %109 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  ret i1 %112
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4quic14QuicDataReaderC1EPKcm(%"class.quic::QuicDataReader"*, i8*, i64) unnamed_addr #3

declare zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"*, i64*) local_unnamed_addr #3

declare zeroext i1 @_ZN4quic14QuicDataReader23ReadStringPieceVarInt62EPN4absl11string_viewE(%"class.quic::QuicDataReader"*, %"class.absl::string_view"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4quic14QuicDataReaderC1EN4absl11string_viewE(%"class.quic::QuicDataReader"*, i8*, i64) unnamed_addr #3

declare zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic11HttpDecoder12ProcessInputEPKcm(%"class.quic::HttpDecoder"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.quic::QuicDataReader", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = bitcast %"class.quic::QuicDataReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = bitcast %"class.quic::QuicDataReader"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  call void @_ZN4quic14QuicDataReaderC1EPKcm(%"class.quic::QuicDataReader"* nonnull %4, i8* %1, i64 %2) #11
  %10 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  %11 = bitcast %"class.quic::QuicDataReader"* %4 to %"class.quiche::QuicheDataReader"*
  %12 = bitcast %"class.logging::LogMessage"* %5 to i8*
  %13 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %13 to %"class.std::__1::basic_ostream"*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  %18 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %27 = bitcast %"class.logging::LogMessage"* %7 to i8*
  %28 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %29 = bitcast %"class.std::__1::basic_ostringstream"* %28 to %"class.std::__1::basic_ostream"*
  br label %30

30:                                               ; preds = %3, %74
  %31 = phi i8 [ 1, %3 ], [ %75, %74 ]
  %32 = call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* nonnull %11) #11
  %33 = icmp eq i64 %32, 0
  %34 = load i32, i32* %10, align 4
  br i1 %33, label %35, label %37

35:                                               ; preds = %30
  %36 = icmp eq i32 %34, 3
  br i1 %36, label %47, label %78

37:                                               ; preds = %30
  switch i32 %34, label %68 [
    i32 1, label %38
    i32 0, label %41
    i32 2, label %44
    i32 3, label %47
    i32 4, label %50
    i32 5, label %74
  ]

38:                                               ; preds = %37
  %39 = call zeroext i1 @_ZN4quic11HttpDecoder13ReadFrameTypeEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* nonnull %4)
  %40 = zext i1 %39 to i8
  br label %74

41:                                               ; preds = %37
  %42 = call zeroext i1 @_ZN4quic11HttpDecoder15ReadFrameLengthEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* nonnull %4)
  %43 = zext i1 %42 to i8
  br label %74

44:                                               ; preds = %37
  %45 = call zeroext i1 @_ZN4quic11HttpDecoder16ReadFramePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* nonnull %4)
  %46 = zext i1 %45 to i8
  br label %74

47:                                               ; preds = %35, %37
  %48 = call zeroext i1 @_ZN4quic11HttpDecoder13FinishParsingEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* nonnull %4)
  %49 = zext i1 %48 to i8
  br label %74

50:                                               ; preds = %37
  %51 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %12) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 125, i32 2) #11
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.2, i64 0, i64 0), i64 69) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %12) #11
  br label %54

54:                                               ; preds = %50, %52
  %55 = call i8* @_Znwm(i64 80) #14
  store i8* %55, i8** %15, align 8
  %56 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 69, i64 -9223372036854775728>, <2 x i64>* %56, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %55, i8* align 1 getelementptr inbounds ([70 x i8], [70 x i8]* @.str.2, i64 0, i64 0), i64 69, i1 false) #11
  %57 = getelementptr inbounds i8, i8* %55, i64 69
  store i8 0, i8* %57, align 1
  store i32 5, i32* %10, align 4
  store i32 1, i32* %17, align 8
  %58 = load i8, i8* %20, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %60, %54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %23, i64 24, i1 false) #11
  store i8 0, i8* %25, align 1
  store i8 0, i8* %23, align 8
  %63 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %26, align 8
  %64 = bitcast %"class.quic::HttpDecoder::Visitor"* %63 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %65 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %65, i64 2
  %67 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %66, align 8
  call void %67(%"class.quic::HttpDecoder::Visitor"* %63, %"class.quic::HttpDecoder"* %0) #11
  br label %78

68:                                               ; preds = %37
  %69 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %69, label %70, label %74

70:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %27) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 135, i32 2) #11
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 15) #11
  %72 = load i32, i32* %10, align 4
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %71, i32 %72) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %27) #11
  br label %74

74:                                               ; preds = %70, %68, %37, %47, %44, %41, %38
  %75 = phi i8 [ %31, %37 ], [ %49, %47 ], [ %46, %44 ], [ %43, %41 ], [ %40, %38 ], [ %31, %68 ], [ %31, %70 ]
  %76 = and i8 %75, 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %30

78:                                               ; preds = %74, %35, %62
  %79 = call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* nonnull %11) #11
  %80 = sub i64 %2, %79
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret i64 %80
}

declare i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder13ReadFrameTypeEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QuicDataReader", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %35

12:                                               ; preds = %2
  %13 = tail call zeroext i8 @_ZN4quic14QuicDataReader18PeekVarInt62LengthEv(%"class.quic::QuicDataReader"* %1) #11
  %14 = zext i8 %13 to i64
  store i64 %14, i64* %9, align 8
  %15 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %16 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %15) #11
  %17 = icmp ult i64 %16, %14
  br i1 %17, label %18, label %32

18:                                               ; preds = %12
  %19 = load i64, i64* %9, align 8
  %20 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 10
  store i64 %19, i64* %20, align 8
  %21 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %15) #11
  %22 = load i64, i64* %20, align 8
  %23 = icmp ult i64 %21, %22
  %24 = select i1 %23, i64 %21, i64 %22
  %25 = load i64, i64* %9, align 8
  %26 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 18, i32 0, i64 %25
  %27 = sub i64 0, %22
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = tail call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"* %15, i8* %28, i64 %24) #11
  %30 = load i64, i64* %20, align 8
  %31 = sub i64 %30, %24
  store i64 %31, i64* %20, align 8
  br label %163

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 4
  %34 = tail call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* %33) #11
  br label %57

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 10
  %37 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %38 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %37) #11
  %39 = load i64, i64* %36, align 8
  %40 = icmp ult i64 %38, %39
  %41 = select i1 %40, i64 %38, i64 %39
  %42 = load i64, i64* %9, align 8
  %43 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 18, i32 0, i64 %42
  %44 = sub i64 0, %39
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = tail call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"* %37, i8* %45, i64 %41) #11
  %47 = load i64, i64* %36, align 8
  %48 = sub i64 %47, %41
  store i64 %48, i64* %36, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %163

50:                                               ; preds = %35
  %51 = bitcast %"class.quic::QuicDataReader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 18, i32 0, i64 0
  %53 = bitcast %"class.quic::QuicDataReader"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 32, i1 false)
  %54 = load i64, i64* %9, align 8
  call void @_ZN4quic14QuicDataReaderC1EPKcm(%"class.quic::QuicDataReader"* nonnull %3, i8* %52, i64 %54) #11
  %55 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 4
  %56 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* nonnull %3, i64* %55) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #11
  br label %57

57:                                               ; preds = %50, %32
  %58 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 4
  %59 = load i64, i64* %58, align 8
  switch i64 %59, label %102 [
    i64 2, label %60
    i64 6, label %60
    i64 8, label %60
    i64 9, label %60
  ]

60:                                               ; preds = %57, %57, %57, %57
  %61 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %61) #11
  %62 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 46, i64* %63, align 8
  %64 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 1, i64 0
  %66 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %59, i8* %65) #11
  %67 = ptrtoint i8* %66 to i64
  %68 = ptrtoint i8* %65 to i64
  %69 = sub i64 %67, %68
  %70 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* %65, i8** %70, align 8
  %71 = icmp sgt i64 %69, -1
  br i1 %71, label %73, label %72, !prof !7

72:                                               ; preds = %60
  call void @llvm.trap() #11
  unreachable

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 %69, i64* %74, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6) #11
  %75 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %75, align 4
  %76 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 171, i32* %76, align 8
  %77 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %73, %82
  %86 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %87 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %87, i64 24, i1 false) #11
  %88 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  store i8 0, i8* %89, align 1
  store i8 0, i8* %87, align 8
  %90 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %91 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %90, align 8
  %92 = bitcast %"class.quic::HttpDecoder::Visitor"* %91 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %93 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %93, i64 2
  %95 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %94, align 8
  call void %95(%"class.quic::HttpDecoder::Visitor"* %91, %"class.quic::HttpDecoder"* %0) #11
  %96 = load i8, i8* %89, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %85
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #14
  br label %101

101:                                              ; preds = %85, %98
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %61) #11
  br label %163

102:                                              ; preds = %57
  %103 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 21
  %104 = load i8, i8* %103, align 1, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %161, label %106

106:                                              ; preds = %102
  switch i64 %59, label %161 [
    i64 3, label %107
    i64 5, label %134
  ]

107:                                              ; preds = %106
  %108 = call i8* @_Znwm(i64 32) #14
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %108, i8** %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = bitcast i64* %110 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %111, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %108, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i64 27, i1 false) #11
  %112 = getelementptr inbounds i8, i8* %108, i64 27
  store i8 0, i8* %112, align 1
  %113 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %113, align 4
  %114 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %114, align 8
  %115 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %116 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %107
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %107, %120
  %124 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  %125 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* nonnull align 8 %125, i64 24, i1 false) #11
  %126 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  store i8 0, i8* %127, align 1
  store i8 0, i8* %125, align 8
  %128 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %129 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %128, align 8
  %130 = bitcast %"class.quic::HttpDecoder::Visitor"* %129 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %131 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %131, i64 2
  %133 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %132, align 8
  call void %133(%"class.quic::HttpDecoder::Visitor"* %129, %"class.quic::HttpDecoder"* %0) #11
  br label %163

134:                                              ; preds = %106
  %135 = call i8* @_Znwm(i64 32) #14
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %135, i8** %136, align 8
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = bitcast i64* %137 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %138, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %135, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i64 28, i1 false) #11
  %139 = getelementptr inbounds i8, i8* %135, i64 28
  store i8 0, i8* %139, align 1
  %140 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %140, align 4
  %141 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %141, align 8
  %142 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %143 = bitcast %"class.std::__1::basic_string"* %142 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %134
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #14
  br label %150

150:                                              ; preds = %134, %147
  %151 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  %152 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* nonnull align 8 %152, i64 24, i1 false) #11
  %153 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  store i8 0, i8* %154, align 1
  store i8 0, i8* %152, align 8
  %155 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %156 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %155, align 8
  %157 = bitcast %"class.quic::HttpDecoder::Visitor"* %156 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %158 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %158, i64 2
  %160 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %159, align 8
  call void %160(%"class.quic::HttpDecoder::Visitor"* %156, %"class.quic::HttpDecoder"* %0) #11
  br label %163

161:                                              ; preds = %106, %102
  %162 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 0, i32* %162, align 4
  br label %163

163:                                              ; preds = %150, %123, %35, %161, %101, %18
  %164 = phi i1 [ true, %18 ], [ false, %101 ], [ true, %161 ], [ true, %35 ], [ false, %123 ], [ false, %150 ]
  ret i1 %164
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder15ReadFrameLengthEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QuicDataReader", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %2
  %10 = tail call zeroext i8 @_ZN4quic14QuicDataReader18PeekVarInt62LengthEv(%"class.quic::QuicDataReader"* %1) #11
  %11 = zext i8 %10 to i64
  store i64 %11, i64* %6, align 8
  %12 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %13 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %12) #11
  %14 = icmp ult i64 %13, %11
  br i1 %14, label %15, label %29

15:                                               ; preds = %9
  %16 = load i64, i64* %6, align 8
  %17 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 6
  store i64 %16, i64* %17, align 8
  %18 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %12) #11
  %19 = load i64, i64* %17, align 8
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i64 %18, i64 %19
  %22 = load i64, i64* %6, align 8
  %23 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 17, i32 0, i64 %22
  %24 = sub i64 0, %19
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = tail call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"* %12, i8* %25, i64 %21) #11
  %27 = load i64, i64* %17, align 8
  %28 = sub i64 %27, %21
  store i64 %28, i64* %17, align 8
  br label %228

29:                                               ; preds = %9
  %30 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 7
  %31 = tail call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* %30) #11
  br label %54

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 6
  %34 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %35 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %34) #11
  %36 = load i64, i64* %33, align 8
  %37 = icmp ult i64 %35, %36
  %38 = select i1 %37, i64 %35, i64 %36
  %39 = load i64, i64* %6, align 8
  %40 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 17, i32 0, i64 %39
  %41 = sub i64 0, %36
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = tail call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"* %34, i8* %42, i64 %38) #11
  %44 = load i64, i64* %33, align 8
  %45 = sub i64 %44, %38
  store i64 %45, i64* %33, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %228

47:                                               ; preds = %32
  %48 = bitcast %"class.quic::QuicDataReader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #11
  %49 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 17, i32 0, i64 0
  %50 = bitcast %"class.quic::QuicDataReader"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 32, i1 false)
  %51 = load i64, i64* %6, align 8
  call void @_ZN4quic14QuicDataReaderC1EPKcm(%"class.quic::QuicDataReader"* nonnull %3, i8* %49, i64 %51) #11
  %52 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 7
  %53 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* nonnull %3, i64* %52) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #11
  br label %54

54:                                               ; preds = %47, %29
  %55 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 1
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp ne i8 %56, 0
  %58 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 4
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 65
  %61 = and i1 %57, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %64 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %63, align 8
  %65 = load i64, i64* %6, align 8
  %66 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 9
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %65
  %69 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 7
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.quic::HttpDecoder::Visitor"* %64 to void (%"class.quic::HttpDecoder::Visitor"*, i64, i64)***
  %72 = load void (%"class.quic::HttpDecoder::Visitor"*, i64, i64)**, void (%"class.quic::HttpDecoder::Visitor"*, i64, i64)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, i64, i64)*, void (%"class.quic::HttpDecoder::Visitor"*, i64, i64)** %72, i64 22
  %74 = load void (%"class.quic::HttpDecoder::Visitor"*, i64, i64)*, void (%"class.quic::HttpDecoder::Visitor"*, i64, i64)** %73, align 8
  call void %74(%"class.quic::HttpDecoder::Visitor"* %64, i64 %68, i64 %70) #11
  %75 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 4, i32* %75, align 4
  br label %228

76:                                               ; preds = %54
  %77 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 7
  %78 = load i64, i64* %77, align 8
  switch i64 %59, label %109 [
    i64 3, label %83
    i64 4, label %79
    i64 7, label %83
    i64 13, label %83
    i64 15, label %80
    i64 984832, label %81
    i64 137, label %82
  ]

79:                                               ; preds = %76
  br label %83

80:                                               ; preds = %76
  br label %83

81:                                               ; preds = %76
  br label %83

82:                                               ; preds = %76
  br label %83

83:                                               ; preds = %76, %76, %76, %79, %80, %81, %82
  %84 = phi i64 [ 1048576, %82 ], [ 1048576, %81 ], [ 1048576, %80 ], [ 1048576, %79 ], [ 8, %76 ], [ 8, %76 ], [ 8, %76 ]
  %85 = icmp ugt i64 %78, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %83
  %87 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  store i8 19, i8* %88, align 1
  %89 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %89, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i64 19, i1 false) #11
  %90 = getelementptr inbounds i8, i8* %89, i64 19
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %91, align 4
  %92 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 131, i32* %92, align 8
  %93 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %94 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %86
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #14
  br label %101

101:                                              ; preds = %86, %98
  %102 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 8 %89, i64 24, i1 false) #11
  store i8 0, i8* %88, align 1
  store i8 0, i8* %89, align 8
  %103 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %104 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %103, align 8
  %105 = bitcast %"class.quic::HttpDecoder::Visitor"* %104 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %106 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %106, i64 2
  %108 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %107, align 8
  call void %108(%"class.quic::HttpDecoder::Visitor"* %104, %"class.quic::HttpDecoder"* %0) #11
  br label %228

109:                                              ; preds = %76, %83
  %110 = load i64, i64* %6, align 8
  %111 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 9
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, %110
  switch i64 %59, label %213 [
    i64 0, label %114
    i64 1, label %122
    i64 3, label %221
    i64 4, label %130
    i64 5, label %138
    i64 7, label %221
    i64 13, label %221
    i64 15, label %179
    i64 984832, label %197
    i64 137, label %205
  ]

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %116 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %115, align 8
  %117 = bitcast %"class.quic::HttpDecoder::Visitor"* %116 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)***
  %118 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)*** %117, align 8
  %119 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)** %118, i64 8
  %120 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)** %119, align 8
  %121 = call zeroext i1 %120(%"class.quic::HttpDecoder::Visitor"* %116, i64 %113, i64 %78) #11
  br label %221

122:                                              ; preds = %109
  %123 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %124 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %123, align 8
  %125 = bitcast %"class.quic::HttpDecoder::Visitor"* %124 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)***
  %126 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)*** %125, align 8
  %127 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)** %126, i64 11
  %128 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64)** %127, align 8
  %129 = call zeroext i1 %128(%"class.quic::HttpDecoder::Visitor"* %124, i64 %113, i64 %78) #11
  br label %221

130:                                              ; preds = %109
  %131 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %132 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %131, align 8
  %133 = bitcast %"class.quic::HttpDecoder::Visitor"* %132 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64)***
  %134 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*** %133, align 8
  %135 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %134, i64 6
  %136 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %135, align 8
  %137 = call zeroext i1 %136(%"class.quic::HttpDecoder::Visitor"* %132, i64 %113) #11
  br label %221

138:                                              ; preds = %109
  %139 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 21
  %140 = load i8, i8* %139, align 1, !range !2
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %221

142:                                              ; preds = %138
  %143 = icmp eq i64 %78, 0
  br i1 %143, label %144, label %171

144:                                              ; preds = %142
  %145 = call i8* @_Znwm(i64 48) #14
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %145, i8** %146, align 8
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = bitcast i64* %147 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %148, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %145, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i64 38, i1 false) #11
  %149 = getelementptr inbounds i8, i8* %145, i64 38
  store i8 0, i8* %149, align 1
  %150 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %150, align 4
  %151 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %151, align 8
  %152 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %153 = bitcast %"class.std::__1::basic_string"* %152 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %144
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #14
  br label %160

160:                                              ; preds = %144, %157
  %161 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  %162 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* nonnull align 8 %162, i64 24, i1 false) #11
  %163 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  store i8 0, i8* %164, align 1
  store i8 0, i8* %162, align 8
  %165 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %166 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %165, align 8
  %167 = bitcast %"class.quic::HttpDecoder::Visitor"* %166 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %168 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %168, i64 2
  %170 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %169, align 8
  call void %170(%"class.quic::HttpDecoder::Visitor"* %166, %"class.quic::HttpDecoder"* %0) #11
  br label %228

171:                                              ; preds = %142
  %172 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %173 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %172, align 8
  %174 = bitcast %"class.quic::HttpDecoder::Visitor"* %173 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64)***
  %175 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*** %174, align 8
  %176 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %175, i64 14
  %177 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %176, align 8
  %178 = call zeroext i1 %177(%"class.quic::HttpDecoder::Visitor"* %173, i64 %113) #11
  br label %221

179:                                              ; preds = %109
  %180 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 20
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp eq i8 %181, 0
  %183 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %184 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %183, align 8
  br i1 %182, label %191, label %185

185:                                              ; preds = %179
  %186 = bitcast %"class.quic::HttpDecoder::Visitor"* %184 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)***
  %187 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)** %187, i64 23
  %189 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)** %188, align 8
  %190 = call zeroext i1 %189(%"class.quic::HttpDecoder::Visitor"* %184, i64 15, i64 %113, i64 %78) #11
  br label %221

191:                                              ; preds = %179
  %192 = bitcast %"class.quic::HttpDecoder::Visitor"* %184 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64)***
  %193 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*** %192, align 8
  %194 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %193, i64 18
  %195 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %194, align 8
  %196 = call zeroext i1 %195(%"class.quic::HttpDecoder::Visitor"* %184, i64 %113) #11
  br label %221

197:                                              ; preds = %109
  %198 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %199 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %198, align 8
  %200 = bitcast %"class.quic::HttpDecoder::Visitor"* %199 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64)***
  %201 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*** %200, align 8
  %202 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %201, i64 18
  %203 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %202, align 8
  %204 = call zeroext i1 %203(%"class.quic::HttpDecoder::Visitor"* %199, i64 %113) #11
  br label %221

205:                                              ; preds = %109
  %206 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %207 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %206, align 8
  %208 = bitcast %"class.quic::HttpDecoder::Visitor"* %207 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64)***
  %209 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*** %208, align 8
  %210 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %209, i64 20
  %211 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64)** %210, align 8
  %212 = call zeroext i1 %211(%"class.quic::HttpDecoder::Visitor"* %207, i64 %113) #11
  br label %221

213:                                              ; preds = %109
  %214 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %215 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %214, align 8
  %216 = bitcast %"class.quic::HttpDecoder::Visitor"* %215 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)***
  %217 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*** %216, align 8
  %218 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)** %217, i64 23
  %219 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)** %218, align 8
  %220 = call zeroext i1 %219(%"class.quic::HttpDecoder::Visitor"* %215, i64 %59, i64 %113, i64 %78) #11
  br label %221

221:                                              ; preds = %138, %185, %191, %109, %213, %205, %197, %109, %109, %171, %130, %122, %114
  %222 = phi i1 [ %220, %213 ], [ %212, %205 ], [ %204, %197 ], [ %190, %185 ], [ %196, %191 ], [ true, %138 ], [ %178, %171 ], [ %137, %130 ], [ true, %109 ], [ true, %109 ], [ true, %109 ], [ %129, %122 ], [ %121, %114 ]
  %223 = load i64, i64* %77, align 8
  %224 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  store i64 %223, i64* %224, align 8
  %225 = icmp eq i64 %223, 0
  %226 = select i1 %225, i32 3, i32 2
  %227 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 %226, i32* %227, align 4
  br label %228

228:                                              ; preds = %160, %101, %221, %32, %62, %15
  %229 = phi i1 [ true, %15 ], [ false, %62 ], [ true, %32 ], [ %222, %221 ], [ false, %101 ], [ false, %160 ]
  ret i1 %229
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder16ReadFramePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::string_view", align 8
  %4 = alloca %"class.absl::string_view", align 8
  %5 = alloca %"class.absl::string_view", align 8
  %6 = alloca %"class.absl::string_view", align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.quic::QuicDataReader", align 8
  %10 = alloca %"class.absl::string_view", align 8
  %11 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %258 [
    i64 0, label %13
    i64 1, label %37
    i64 3, label %61
    i64 4, label %68
    i64 5, label %71
    i64 7, label %216
    i64 13, label %219
    i64 15, label %222
    i64 984832, label %252
    i64 137, label %255
  ]

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %15 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %16 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %15) #11
  %17 = load i64, i64* %14, align 8
  %18 = icmp ult i64 %16, %17
  %19 = select i1 %18, i64 %16, i64 %17
  %20 = bitcast %"class.absl::string_view"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  %22 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false) #11
  %23 = call zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"* %15, %"class.absl::string_view"* nonnull %5, i64 %19) #11
  %24 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %25 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %24, align 8
  %26 = load i8*, i8** %21, align 8
  %27 = load i64, i64* %22, align 8
  %28 = bitcast %"class.quic::HttpDecoder::Visitor"* %25 to i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)***
  %29 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %29, i64 9
  %31 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %30, align 8
  %32 = call zeroext i1 %31(%"class.quic::HttpDecoder::Visitor"* %25, i8* %26, i64 %27) #11
  %33 = zext i1 %32 to i8
  %34 = load i64, i64* %22, align 8
  %35 = load i64, i64* %14, align 8
  %36 = sub i64 %35, %34
  store i64 %36, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  br label %281

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %39 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %40 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %39) #11
  %41 = load i64, i64* %38, align 8
  %42 = icmp ult i64 %40, %41
  %43 = select i1 %42, i64 %40, i64 %41
  %44 = bitcast %"class.absl::string_view"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 0
  %46 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #11
  %47 = call zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"* %39, %"class.absl::string_view"* nonnull %6, i64 %43) #11
  %48 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %49 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %48, align 8
  %50 = load i8*, i8** %45, align 8
  %51 = load i64, i64* %46, align 8
  %52 = bitcast %"class.quic::HttpDecoder::Visitor"* %49 to i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)***
  %53 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %53, i64 12
  %55 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %54, align 8
  %56 = call zeroext i1 %55(%"class.quic::HttpDecoder::Visitor"* %49, i8* %50, i64 %51) #11
  %57 = zext i1 %56 to i8
  %58 = load i64, i64* %46, align 8
  %59 = load i64, i64* %38, align 8
  %60 = sub i64 %59, %58
  store i64 %60, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  br label %281

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 21
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %281

65:                                               ; preds = %61
  %66 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  %67 = zext i1 %66 to i8
  br label %281

68:                                               ; preds = %2
  %69 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  %70 = zext i1 %69 to i8
  br label %281

71:                                               ; preds = %2
  %72 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 21
  %73 = load i8, i8* %72, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %281

75:                                               ; preds = %71
  %76 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #11
  store i64 -6148914691236517206, i64* %7, align 8
  %77 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 7
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %78, %80
  br i1 %81, label %82, label %139

82:                                               ; preds = %75
  %83 = tail call zeroext i8 @_ZN4quic14QuicDataReader18PeekVarInt62LengthEv(%"class.quic::QuicDataReader"* %1) #11
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 11
  store i64 %84, i64* %85, align 8
  %86 = load i64, i64* %79, align 8
  %87 = icmp ult i64 %86, %84
  br i1 %87, label %88, label %104

88:                                               ; preds = %82
  %89 = tail call i8* @_Znwm(i64 48) #14
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %89, i8** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %92, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %89, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i64 36, i1 false) #11
  %93 = getelementptr inbounds i8, i8* %89, i64 36
  store i8 0, i8* %93, align 1
  %94 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %94, align 4
  %95 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %95, align 8
  %96 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %204

101:                                              ; preds = %88
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #14
  br label %204

104:                                              ; preds = %82
  %105 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %106 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %105) #11
  %107 = icmp ult i64 %106, %84
  br i1 %107, label %108, label %124

108:                                              ; preds = %104
  %109 = load i64, i64* %85, align 8
  %110 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 12
  store i64 %109, i64* %110, align 8
  %111 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %105) #11
  %112 = load i64, i64* %110, align 8
  %113 = icmp ult i64 %112, %111
  %114 = select i1 %113, i64 %112, i64 %111
  %115 = load i64, i64* %85, align 8
  %116 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 19, i32 0, i64 %115
  %117 = sub i64 0, %112
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = tail call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"* %105, i8* %118, i64 %114) #11
  %120 = load i64, i64* %110, align 8
  %121 = sub i64 %120, %114
  store i64 %121, i64* %110, align 8
  %122 = load i64, i64* %79, align 8
  %123 = sub i64 %122, %114
  store i64 %123, i64* %79, align 8
  br label %202

124:                                              ; preds = %104
  %125 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* nonnull %7) #11
  %126 = load i64, i64* %85, align 8
  %127 = load i64, i64* %79, align 8
  %128 = sub i64 %127, %126
  store i64 %128, i64* %79, align 8
  %129 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %130 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %129, align 8
  %131 = load i64, i64* %7, align 8
  %132 = load i64, i64* %77, align 8
  %133 = sub i64 %132, %126
  %134 = bitcast %"class.quic::HttpDecoder::Visitor"* %130 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)***
  %135 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*** %134, align 8
  %136 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)** %135, i64 15
  %137 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)** %136, align 8
  %138 = call zeroext i1 %137(%"class.quic::HttpDecoder::Visitor"* %130, i64 %131, i64 %126, i64 %133) #11
  store i64 0, i64* %85, align 8
  br i1 %138, label %177, label %215

139:                                              ; preds = %75
  %140 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 12
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, 0
  %143 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  br i1 %142, label %177, label %144

144:                                              ; preds = %139
  %145 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %143) #11
  %146 = load i64, i64* %140, align 8
  %147 = icmp ult i64 %146, %145
  %148 = select i1 %147, i64 %146, i64 %145
  %149 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 11
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 19, i32 0, i64 %150
  %152 = sub i64 0, %146
  %153 = getelementptr inbounds i8, i8* %151, i64 %152
  %154 = tail call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"* %143, i8* %153, i64 %148) #11
  %155 = load i64, i64* %140, align 8
  %156 = sub i64 %155, %148
  store i64 %156, i64* %140, align 8
  %157 = load i64, i64* %79, align 8
  %158 = sub i64 %157, %148
  store i64 %158, i64* %79, align 8
  %159 = icmp eq i64 %156, 0
  br i1 %159, label %160, label %202

160:                                              ; preds = %144
  %161 = bitcast %"class.quic::QuicDataReader"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %161) #11
  %162 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 19, i32 0, i64 0
  %163 = bitcast %"class.quic::QuicDataReader"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 32, i1 false)
  %164 = load i64, i64* %149, align 8
  call void @_ZN4quic14QuicDataReaderC1EPKcm(%"class.quic::QuicDataReader"* nonnull %9, i8* %162, i64 %164) #11
  %165 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* nonnull %9, i64* nonnull %7) #11
  %166 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %167 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %166, align 8
  %168 = load i64, i64* %7, align 8
  %169 = load i64, i64* %149, align 8
  %170 = load i64, i64* %77, align 8
  %171 = sub i64 %170, %169
  %172 = bitcast %"class.quic::HttpDecoder::Visitor"* %167 to i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)***
  %173 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*** %172, align 8
  %174 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)** %173, i64 15
  %175 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i64, i64, i64)** %174, align 8
  %176 = call zeroext i1 %175(%"class.quic::HttpDecoder::Visitor"* %167, i64 %168, i64 %169, i64 %171) #11
  store i64 0, i64* %149, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %161) #11
  br i1 %176, label %177, label %215

177:                                              ; preds = %139, %160, %124
  %178 = phi %"class.quiche::QuicheDataReader"* [ %143, %160 ], [ %105, %124 ], [ %143, %139 ]
  %179 = call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %178) #11
  %180 = load i64, i64* %79, align 8
  %181 = icmp ult i64 %179, %180
  %182 = select i1 %181, i64 %179, i64 %180
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %202, label %184

184:                                              ; preds = %177
  %185 = bitcast %"class.absl::string_view"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #11
  %186 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %10, i64 0, i32 0
  %187 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %10, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 0, i64 16, i1 false) #11
  %188 = call zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"* %178, %"class.absl::string_view"* nonnull %10, i64 %182) #11
  %189 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %190 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %189, align 8
  %191 = load i8*, i8** %186, align 8
  %192 = load i64, i64* %187, align 8
  %193 = bitcast %"class.quic::HttpDecoder::Visitor"* %190 to i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)***
  %194 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*** %193, align 8
  %195 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %194, i64 16
  %196 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %195, align 8
  %197 = call zeroext i1 %196(%"class.quic::HttpDecoder::Visitor"* %190, i8* %191, i64 %192) #11
  %198 = zext i1 %197 to i8
  %199 = load i64, i64* %187, align 8
  %200 = load i64, i64* %79, align 8
  %201 = sub i64 %200, %199
  store i64 %201, i64* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #11
  br label %202

202:                                              ; preds = %108, %144, %177, %184
  %203 = phi i8 [ 1, %177 ], [ %198, %184 ], [ 1, %144 ], [ 1, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  br label %281

204:                                              ; preds = %101, %88
  %205 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %206 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* nonnull align 8 %206, i64 24, i1 false) #11
  %207 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  store i8 0, i8* %208, align 1
  store i8 0, i8* %206, align 8
  %209 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %210 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %209, align 8
  %211 = bitcast %"class.quic::HttpDecoder::Visitor"* %210 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %212 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %212, i64 2
  %214 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %213, align 8
  tail call void %214(%"class.quic::HttpDecoder::Visitor"* %210, %"class.quic::HttpDecoder"* %0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  br label %294

215:                                              ; preds = %124, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  br label %281

216:                                              ; preds = %2
  %217 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  %218 = zext i1 %217 to i8
  br label %281

219:                                              ; preds = %2
  %220 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  %221 = zext i1 %220 to i8
  br label %281

222:                                              ; preds = %2
  %223 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 20
  %224 = load i8, i8* %223, align 8, !range !2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %249, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %228 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %229 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %228) #11
  %230 = load i64, i64* %227, align 8
  %231 = icmp ult i64 %229, %230
  %232 = select i1 %231, i64 %229, i64 %230
  %233 = bitcast %"class.absl::string_view"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %233) #11
  %234 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 0
  %235 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 0, i64 16, i1 false) #11
  %236 = call zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"* %228, %"class.absl::string_view"* nonnull %3, i64 %232) #11
  %237 = load i64, i64* %235, align 8
  %238 = load i64, i64* %227, align 8
  %239 = sub i64 %238, %237
  store i64 %239, i64* %227, align 8
  %240 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %241 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %240, align 8
  %242 = load i8*, i8** %234, align 8
  %243 = bitcast %"class.quic::HttpDecoder::Visitor"* %241 to i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)***
  %244 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*** %243, align 8
  %245 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %244, i64 24
  %246 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %245, align 8
  %247 = call zeroext i1 %246(%"class.quic::HttpDecoder::Visitor"* %241, i8* %242, i64 %237) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %233) #11
  %248 = zext i1 %247 to i8
  br label %281

249:                                              ; preds = %222
  %250 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  %251 = zext i1 %250 to i8
  br label %281

252:                                              ; preds = %2
  %253 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  %254 = zext i1 %253 to i8
  br label %281

255:                                              ; preds = %2
  %256 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  %257 = zext i1 %256 to i8
  br label %281

258:                                              ; preds = %2
  %259 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %260 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %261 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %260) #11
  %262 = load i64, i64* %259, align 8
  %263 = icmp ult i64 %261, %262
  %264 = select i1 %263, i64 %261, i64 %262
  %265 = bitcast %"class.absl::string_view"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %265) #11
  %266 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 0
  %267 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %265, i8 0, i64 16, i1 false) #11
  %268 = call zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"* %260, %"class.absl::string_view"* nonnull %4, i64 %264) #11
  %269 = load i64, i64* %267, align 8
  %270 = load i64, i64* %259, align 8
  %271 = sub i64 %270, %269
  store i64 %271, i64* %259, align 8
  %272 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %273 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %272, align 8
  %274 = load i8*, i8** %266, align 8
  %275 = bitcast %"class.quic::HttpDecoder::Visitor"* %273 to i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)***
  %276 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*** %275, align 8
  %277 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %276, i64 24
  %278 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %277, align 8
  %279 = call zeroext i1 %278(%"class.quic::HttpDecoder::Visitor"* %273, i8* %274, i64 %269) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %265) #11
  %280 = zext i1 %279 to i8
  br label %281

281:                                              ; preds = %215, %202, %61, %71, %226, %249, %65, %258, %255, %252, %219, %216, %68, %37, %13
  %282 = phi i8 [ %280, %258 ], [ %257, %255 ], [ %254, %252 ], [ %248, %226 ], [ %251, %249 ], [ %221, %219 ], [ %218, %216 ], [ 1, %71 ], [ 0, %215 ], [ %70, %68 ], [ 1, %61 ], [ %67, %65 ], [ %57, %37 ], [ %33, %13 ], [ %203, %202 ]
  %283 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  %284 = load i32, i32* %283, align 4
  %285 = icmp eq i32 %284, 2
  br i1 %285, label %286, label %291

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %288 = load i64, i64* %287, align 8
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %286
  store i32 3, i32* %283, align 4
  br label %291

291:                                              ; preds = %290, %286, %281
  %292 = and i8 %282, 1
  %293 = icmp ne i8 %292, 0
  br label %294

294:                                              ; preds = %204, %291
  %295 = phi i1 [ %293, %291 ], [ false, %204 ]
  ret i1 %295
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder13FinishParsingEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  switch i64 %4, label %63 [
    i64 0, label %5
    i64 1, label %13
    i64 3, label %21
    i64 4, label %27
    i64 5, label %29
    i64 7, label %41
    i64 13, label %43
    i64 15, label %45
    i64 984832, label %59
    i64 137, label %61
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %7 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %6, align 8
  %8 = bitcast %"class.quic::HttpDecoder::Visitor"* %7 to i1 (%"class.quic::HttpDecoder::Visitor"*)***
  %9 = load i1 (%"class.quic::HttpDecoder::Visitor"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %9, i64 10
  %11 = load i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.quic::HttpDecoder::Visitor"* %7) #11
  br label %71

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %15 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %14, align 8
  %16 = bitcast %"class.quic::HttpDecoder::Visitor"* %15 to i1 (%"class.quic::HttpDecoder::Visitor"*)***
  %17 = load i1 (%"class.quic::HttpDecoder::Visitor"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %17, i64 13
  %19 = load i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.quic::HttpDecoder::Visitor"* %15) #11
  br label %71

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 21
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %71

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  br label %71

27:                                               ; preds = %2
  %28 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  br label %71

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 21
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %71

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %35 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %34, align 8
  %36 = bitcast %"class.quic::HttpDecoder::Visitor"* %35 to i1 (%"class.quic::HttpDecoder::Visitor"*)***
  %37 = load i1 (%"class.quic::HttpDecoder::Visitor"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %37, i64 17
  %39 = load i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.quic::HttpDecoder::Visitor"* %35) #11
  br label %71

41:                                               ; preds = %2
  %42 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  br label %71

43:                                               ; preds = %2
  %44 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  br label %71

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 20
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %51 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %50, align 8
  %52 = bitcast %"class.quic::HttpDecoder::Visitor"* %51 to i1 (%"class.quic::HttpDecoder::Visitor"*)***
  %53 = load i1 (%"class.quic::HttpDecoder::Visitor"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %53, i64 25
  %55 = load i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.quic::HttpDecoder::Visitor"* %51) #11
  br label %71

57:                                               ; preds = %45
  %58 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  br label %71

59:                                               ; preds = %2
  %60 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  br label %71

61:                                               ; preds = %2
  %62 = tail call zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1)
  br label %71

63:                                               ; preds = %2
  %64 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %65 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %64, align 8
  %66 = bitcast %"class.quic::HttpDecoder::Visitor"* %65 to i1 (%"class.quic::HttpDecoder::Visitor"*)***
  %67 = load i1 (%"class.quic::HttpDecoder::Visitor"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*)*** %66, align 8
  %68 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %67, i64 25
  %69 = load i1 (%"class.quic::HttpDecoder::Visitor"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.quic::HttpDecoder::Visitor"* %65) #11
  br label %71

71:                                               ; preds = %21, %29, %49, %57, %33, %25, %63, %61, %59, %43, %41, %27, %13, %5
  %72 = phi i1 [ %70, %63 ], [ %62, %61 ], [ %60, %59 ], [ %56, %49 ], [ %58, %57 ], [ %44, %43 ], [ %42, %41 ], [ true, %29 ], [ %40, %33 ], [ %28, %27 ], [ true, %21 ], [ %26, %25 ], [ %20, %13 ], [ %12, %5 ]
  %73 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 5
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 9
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 1, i32* %75, align 4
  ret i1 %72
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic11HttpDecoder10RaiseErrorENS_13QuicErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::HttpDecoder"*, i32, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %4, align 4
  %5 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %3, %11
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #11
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 0, i8* %18, align 1
  store i8 0, i8* %16, align 1
  %19 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %20 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %19, align 8
  %21 = bitcast %"class.quic::HttpDecoder::Visitor"* %20 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %22 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %22, i64 2
  %24 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %23, align 8
  tail call void %24(%"class.quic::HttpDecoder::Visitor"* %20, %"class.quic::HttpDecoder"* %0) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare zeroext i8 @_ZN4quic14QuicDataReader18PeekVarInt62LengthEv(%"class.quic::QuicDataReader"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic11HttpDecoder15BufferFrameTypeEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 10
  %4 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %5 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %4) #11
  %6 = load i64, i64* %3, align 8
  %7 = icmp ult i64 %5, %6
  %8 = select i1 %7, i64 %5, i64 %6
  %9 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 18, i32 0, i64 %10
  %12 = sub i64 0, %6
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  %14 = tail call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"* %4, i8* %13, i64 %8) #11
  %15 = load i64, i64* %3, align 8
  %16 = sub i64 %15, %8
  store i64 %16, i64* %3, align 8
  ret void
}

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic11HttpDecoder17BufferFrameLengthEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 6
  %4 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %5 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %4) #11
  %6 = load i64, i64* %3, align 8
  %7 = icmp ult i64 %5, %6
  %8 = select i1 %7, i64 %5, i64 %6
  %9 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 17, i32 0, i64 %10
  %12 = sub i64 0, %6
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  %14 = tail call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"* %4, i8* %13, i64 %8) #11
  %15 = load i64, i64* %3, align 8
  %16 = sub i64 %15, %8
  store i64 %16, i64* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4quic11HttpDecoder14MaxFrameLengthEm(%"class.quic::HttpDecoder"* nocapture readnone, i64) local_unnamed_addr #5 align 2 {
  switch i64 %1, label %7 [
    i64 3, label %8
    i64 4, label %3
    i64 7, label %8
    i64 13, label %8
    i64 15, label %4
    i64 984832, label %5
    i64 137, label %6
  ]

3:                                                ; preds = %2
  br label %8

4:                                                ; preds = %2
  br label %8

5:                                                ; preds = %2
  br label %8

6:                                                ; preds = %2
  br label %8

7:                                                ; preds = %2
  br label %8

8:                                                ; preds = %2, %2, %2, %7, %6, %5, %4, %3
  %9 = phi i64 [ -1, %7 ], [ 1048576, %6 ], [ 1048576, %5 ], [ 1048576, %4 ], [ 1048576, %3 ], [ 8, %2 ], [ 8, %2 ], [ 8, %2 ]
  ret i64 %9
}

declare zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"*, %"class.absl::string_view"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder20BufferOrParsePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QuicDataReader", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.quic::QuicDataReader", align 8
  %6 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 16
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %2
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %37

19:                                               ; preds = %16
  %20 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %21 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %20) #11
  %22 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 7
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = load i8, i8* %8, align 1
  br label %37

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  store i64 0, i64* %28, align 8
  %29 = bitcast %"class.quic::QuicDataReader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #11
  %30 = bitcast %"class.quic::QuicDataReader"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = tail call { i8*, i64 } @_ZNK6quiche16QuicheDataReader20PeekRemainingPayloadEv(%"class.quiche::QuicheDataReader"* %20) #11
  %32 = extractvalue { i8*, i64 } %31, 0
  %33 = load i64, i64* %22, align 8
  call void @_ZN4quic14QuicDataReaderC1EPKcm(%"class.quic::QuicDataReader"* nonnull %3, i8* %32, i64 %33) #11
  %34 = call zeroext i1 @_ZN4quic11HttpDecoder18ParseEntirePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* nonnull %3)
  %35 = load i64, i64* %22, align 8
  %36 = call zeroext i1 @_ZN6quiche16QuicheDataReader4SeekEm(%"class.quiche::QuicheDataReader"* %20, i64 %35) #11
  br label %101

37:                                               ; preds = %25, %16
  %38 = phi i8 [ %26, %25 ], [ %9, %16 ]
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  br label %45

43:                                               ; preds = %37
  %44 = zext i8 %38 to i64
  br label %45

45:                                               ; preds = %40, %43
  %46 = phi i64 [ %42, %40 ], [ %44, %43 ]
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 7
  %50 = load i64, i64* %49, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %6, i64 %50) #11
  br label %51

51:                                               ; preds = %48, %45
  %52 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %53 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %54 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %53) #11
  %55 = load i64, i64* %52, align 8
  %56 = icmp ult i64 %54, %55
  %57 = select i1 %56, i64 %54, i64 %55
  %58 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %58) #11
  %59 = tail call { i8*, i64 } @_ZNK6quiche16QuicheDataReader20PeekRemainingPayloadEv(%"class.quiche::QuicheDataReader"* %53) #11
  %60 = extractvalue { i8*, i64 } %59, 1
  %61 = icmp ugt i64 %60, %57
  %62 = select i1 %61, i64 %57, i64 %60
  %63 = icmp sgt i64 %62, -1
  br i1 %63, label %65, label %64, !prof !7

64:                                               ; preds = %51
  tail call void @llvm.trap() #11
  unreachable

65:                                               ; preds = %51
  %66 = extractvalue { i8*, i64 } %59, 0
  %67 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %66, i8** %67, align 8
  %68 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %62, i64* %68, align 8
  call void @_ZN4absl9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_8AlphaNumE(%"class.std::__1::basic_string"* %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %58) #11
  %69 = call zeroext i1 @_ZN6quiche16QuicheDataReader4SeekEm(%"class.quiche::QuicheDataReader"* %53, i64 %57) #11
  %70 = load i64, i64* %52, align 8
  %71 = sub i64 %70, %57
  store i64 %71, i64* %52, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %107

73:                                               ; preds = %65
  %74 = bitcast %"class.quic::QuicDataReader"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #11
  %75 = bitcast %"class.quic::QuicDataReader"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 32, i1 false)
  %76 = load i8, i8* %8, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = zext i8 %76 to i64
  %80 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  br label %88

81:                                               ; preds = %73
  %82 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp sgt i64 %85, -1
  br i1 %86, label %88, label %87, !prof !7

87:                                               ; preds = %81
  call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %78, %81
  %89 = phi i64 [ %83, %81 ], [ %80, %78 ]
  %90 = phi i64 [ %85, %81 ], [ %79, %78 ]
  %91 = inttoptr i64 %89 to i8*
  call void @_ZN4quic14QuicDataReaderC1EN4absl11string_viewE(%"class.quic::QuicDataReader"* nonnull %5, i8* %91, i64 %90) #11
  %92 = call zeroext i1 @_ZN4quic11HttpDecoder18ParseEntirePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* nonnull %5)
  %93 = load i8, i8* %8, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %98, align 8
  br label %101

99:                                               ; preds = %88
  %100 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  store i8 0, i8* %100, align 1
  store i8 0, i8* %8, align 1
  br label %101

101:                                              ; preds = %95, %99, %27
  %102 = phi i8* [ %29, %27 ], [ %74, %99 ], [ %74, %95 ]
  %103 = phi i1 [ %34, %27 ], [ %92, %99 ], [ %92, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #11
  %104 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 5
  store i64 0, i64* %104, align 8
  %105 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 9
  store i64 0, i64* %105, align 8
  %106 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 1, i32* %106, align 4
  br label %107

107:                                              ; preds = %65, %101
  %108 = phi i1 [ %103, %101 ], [ true, %65 ]
  ret i1 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic11HttpDecoder12BufferPushIdEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %4 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %3) #11
  %5 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 12
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  %8 = select i1 %7, i64 %6, i64 %4
  %9 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 11
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 19, i32 0, i64 %10
  %12 = sub i64 0, %6
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  %14 = tail call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"* %3, i8* %13, i64 %8) #11
  %15 = load i64, i64* %5, align 8
  %16 = sub i64 %15, %8
  store i64 %16, i64* %5, align 8
  %17 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  store i64 %19, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder25HandleUnknownFramePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* nocapture, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::string_view", align 8
  %4 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %5 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %6 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %5) #11
  %7 = load i64, i64* %4, align 8
  %8 = icmp ult i64 %6, %7
  %9 = select i1 %8, i64 %6, i64 %7
  %10 = bitcast %"class.absl::string_view"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #11
  %13 = call zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"* %5, %"class.absl::string_view"* nonnull %3, i64 %9) #11
  %14 = load i64, i64* %12, align 8
  %15 = load i64, i64* %4, align 8
  %16 = sub i64 %15, %14
  store i64 %16, i64* %4, align 8
  %17 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %18 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %17, align 8
  %19 = load i8*, i8** %11, align 8
  %20 = bitcast %"class.quic::HttpDecoder::Visitor"* %18 to i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)***
  %21 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)**, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %21, i64 24
  %23 = load i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)*, i1 (%"class.quic::HttpDecoder::Visitor"*, i8*, i64)** %22, align 8
  %24 = call zeroext i1 %23(%"class.quic::HttpDecoder::Visitor"* %18, i8* %19, i64 %14) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic11HttpDecoder19DiscardFramePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"* nocapture, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::string_view", align 8
  %4 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 8
  %5 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %6 = tail call i64 @_ZNK6quiche16QuicheDataReader14BytesRemainingEv(%"class.quiche::QuicheDataReader"* %5) #11
  %7 = load i64, i64* %4, align 8
  %8 = icmp ult i64 %6, %7
  %9 = select i1 %8, i64 %6, i64 %7
  %10 = bitcast %"class.absl::string_view"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #11
  %12 = call zeroext i1 @_ZN6quiche16QuicheDataReader15ReadStringPieceEPN4absl11string_viewEm(%"class.quiche::QuicheDataReader"* %5, %"class.absl::string_view"* nonnull %3, i64 %9) #11
  %13 = load i64, i64* %11, align 8
  %14 = load i64, i64* %4, align 8
  %15 = sub i64 %14, %13
  store i64 %15, i64* %4, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 1, i32* %18, align 4
  %19 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 5
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 9
  store i64 0, i64* %20, align 8
  br label %21

21:                                               ; preds = %17, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret void
}

declare { i8*, i64 } @_ZNK6quiche16QuicheDataReader20PeekRemainingPayloadEv(%"class.quiche::QuicheDataReader"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder18ParseEntirePayloadEPNS_14QuicDataReaderE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.quic::CancelPushFrame", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.quic::SettingsFrame", align 8
  %7 = alloca %"struct.quic::GoAwayFrame", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"struct.quic::MaxPushIdFrame", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"struct.quic::PriorityUpdateFrame", align 8
  %14 = alloca %"struct.quic::PriorityUpdateFrame", align 8
  %15 = alloca %"struct.quic::AcceptChFrame", align 8
  %16 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %359 [
    i64 3, label %18
    i64 4, label %93
    i64 7, label %115
    i64 13, label %186
    i64 15, label %257
    i64 984832, label %286
    i64 137, label %311
  ]

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 21
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %359

22:                                               ; preds = %18
  %23 = bitcast %"struct.quic::CancelPushFrame"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"struct.quic::CancelPushFrame", %"struct.quic::CancelPushFrame"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %24, align 8
  %25 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* nonnull %24) #11
  br i1 %25, label %53, label %26

26:                                               ; preds = %22
  %27 = call i8* @_Znwm(i64 48) #14
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast i64* %29 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %30, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i64 35, i1 false) #11
  %31 = getelementptr inbounds i8, i8* %27, i64 35
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %32, align 4
  %33 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %33, align 8
  %34 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %26, %39
  %43 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %44, i64 24, i1 false) #11
  %45 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 0, i8* %46, align 1
  store i8 0, i8* %44, align 8
  %47 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %48 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %47, align 8
  %49 = bitcast %"class.quic::HttpDecoder::Visitor"* %48 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %50 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %50, i64 2
  %52 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %51, align 8
  call void %52(%"class.quic::HttpDecoder::Visitor"* %48, %"class.quic::HttpDecoder"* %0) #11
  br label %91

53:                                               ; preds = %22
  %54 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %55 = call zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"* %54) #11
  br i1 %55, label %83, label %56

56:                                               ; preds = %53
  %57 = call i8* @_Znwm(i64 48) #14
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast i64* %59 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %60, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0), i64 38, i1 false) #11
  %61 = getelementptr inbounds i8, i8* %57, i64 38
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %62, align 4
  %63 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %63, align 8
  %64 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %56, %69
  %73 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* nonnull align 8 %74, i64 24, i1 false) #11
  %75 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  store i8 0, i8* %76, align 1
  store i8 0, i8* %74, align 8
  %77 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %78 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %77, align 8
  %79 = bitcast %"class.quic::HttpDecoder::Visitor"* %78 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %80 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %80, i64 2
  %82 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %81, align 8
  call void %82(%"class.quic::HttpDecoder::Visitor"* %78, %"class.quic::HttpDecoder"* %0) #11
  br label %91

83:                                               ; preds = %53
  %84 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %85 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %84, align 8
  %86 = bitcast %"class.quic::HttpDecoder::Visitor"* %85 to i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::CancelPushFrame"*)***
  %87 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::CancelPushFrame"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::CancelPushFrame"*)*** %86, align 8
  %88 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::CancelPushFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::CancelPushFrame"*)** %87, i64 3
  %89 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::CancelPushFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::CancelPushFrame"*)** %88, align 8
  %90 = call zeroext i1 %89(%"class.quic::HttpDecoder::Visitor"* %85, %"struct.quic::CancelPushFrame"* nonnull dereferenceable(8) %3) #11
  br label %91

91:                                               ; preds = %72, %42, %83
  %92 = phi i1 [ %90, %83 ], [ false, %42 ], [ false, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %359

93:                                               ; preds = %2
  %94 = bitcast %"struct.quic::SettingsFrame"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %97 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %6, i64 0, i32 0, i32 0, i32 0, i32 3
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %95, align 8
  %98 = bitcast %"union.absl::container_internal::map_slot_type"** %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 32, i1 false) #11
  %99 = call zeroext i1 @_ZN4quic11HttpDecoder18ParseSettingsFrameEPNS_14QuicDataReaderEPNS_13SettingsFrameE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1, %"struct.quic::SettingsFrame"* nonnull %6)
  br i1 %99, label %100, label %108

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %102 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %101, align 8
  %103 = bitcast %"class.quic::HttpDecoder::Visitor"* %102 to i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::SettingsFrame"*)***
  %104 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::SettingsFrame"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::SettingsFrame"*)*** %103, align 8
  %105 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::SettingsFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::SettingsFrame"*)** %104, i64 7
  %106 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::SettingsFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::SettingsFrame"*)** %105, align 8
  %107 = call zeroext i1 %106(%"class.quic::HttpDecoder::Visitor"* %102, %"struct.quic::SettingsFrame"* nonnull dereferenceable(40) %6) #11
  br label %108

108:                                              ; preds = %93, %100
  %109 = phi i1 [ %107, %100 ], [ false, %93 ]
  %110 = load i64, i64* %97, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  %113 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %113) #14
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %95, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 32, i1 false) #11
  br label %114

114:                                              ; preds = %108, %112
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %94) #11
  br label %359

115:                                              ; preds = %2
  %116 = bitcast %"struct.quic::GoAwayFrame"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"struct.quic::GoAwayFrame", %"struct.quic::GoAwayFrame"* %7, i64 0, i32 0
  store i64 -6148914691236517206, i64* %117, align 8
  %118 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* nonnull %117) #11
  br i1 %118, label %146, label %119

119:                                              ; preds = %115
  %120 = call i8* @_Znwm(i64 32) #14
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %120, i8** %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = bitcast i64* %122 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %123, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %120, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0), i64 25, i1 false) #11
  %124 = getelementptr inbounds i8, i8* %120, i64 25
  store i8 0, i8* %124, align 1
  %125 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %125, align 4
  %126 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %126, align 8
  %127 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %128 = bitcast %"class.std::__1::basic_string"* %127 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %119
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %119, %132
  %136 = bitcast %"class.std::__1::basic_string"* %127 to i8*
  %137 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* nonnull align 8 %137, i64 24, i1 false) #11
  %138 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  store i8 0, i8* %139, align 1
  store i8 0, i8* %137, align 8
  %140 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %141 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %140, align 8
  %142 = bitcast %"class.quic::HttpDecoder::Visitor"* %141 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %143 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %143, i64 2
  %145 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %144, align 8
  call void %145(%"class.quic::HttpDecoder::Visitor"* %141, %"class.quic::HttpDecoder"* %0) #11
  br label %184

146:                                              ; preds = %115
  %147 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %148 = call zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"* %147) #11
  br i1 %148, label %176, label %149

149:                                              ; preds = %146
  %150 = call i8* @_Znwm(i64 48) #14
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %150, i8** %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %153 = bitcast i64* %152 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %153, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %150, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i64 33, i1 false) #11
  %154 = getelementptr inbounds i8, i8* %150, i64 33
  store i8 0, i8* %154, align 1
  %155 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %155, align 4
  %156 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %156, align 8
  %157 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %158 = bitcast %"class.std::__1::basic_string"* %157 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %149
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  call void @_ZdlPv(i8* %164) #14
  br label %165

165:                                              ; preds = %149, %162
  %166 = bitcast %"class.std::__1::basic_string"* %157 to i8*
  %167 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* nonnull align 8 %167, i64 24, i1 false) #11
  %168 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  store i8 0, i8* %169, align 1
  store i8 0, i8* %167, align 8
  %170 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %171 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %170, align 8
  %172 = bitcast %"class.quic::HttpDecoder::Visitor"* %171 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %173 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %173, i64 2
  %175 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %174, align 8
  call void %175(%"class.quic::HttpDecoder::Visitor"* %171, %"class.quic::HttpDecoder"* %0) #11
  br label %184

176:                                              ; preds = %146
  %177 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %178 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %177, align 8
  %179 = bitcast %"class.quic::HttpDecoder::Visitor"* %178 to i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::GoAwayFrame"*)***
  %180 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::GoAwayFrame"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::GoAwayFrame"*)*** %179, align 8
  %181 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::GoAwayFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::GoAwayFrame"*)** %180, i64 5
  %182 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::GoAwayFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::GoAwayFrame"*)** %181, align 8
  %183 = call zeroext i1 %182(%"class.quic::HttpDecoder::Visitor"* %178, %"struct.quic::GoAwayFrame"* nonnull dereferenceable(8) %7) #11
  br label %184

184:                                              ; preds = %165, %135, %176
  %185 = phi i1 [ %183, %176 ], [ false, %135 ], [ false, %165 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  br label %359

186:                                              ; preds = %2
  %187 = bitcast %"struct.quic::MaxPushIdFrame"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #11
  %188 = getelementptr inbounds %"struct.quic::MaxPushIdFrame", %"struct.quic::MaxPushIdFrame"* %10, i64 0, i32 0
  store i64 -6148914691236517206, i64* %188, align 8
  %189 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* nonnull %188) #11
  br i1 %189, label %217, label %190

190:                                              ; preds = %186
  %191 = call i8* @_Znwm(i64 48) #14
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %191, i8** %192, align 8
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %194 = bitcast i64* %193 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %194, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %191, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i64 0, i64 0), i64 35, i1 false) #11
  %195 = getelementptr inbounds i8, i8* %191, i64 35
  store i8 0, i8* %195, align 1
  %196 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %196, align 4
  %197 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %197, align 8
  %198 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %199 = bitcast %"class.std::__1::basic_string"* %198 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %190
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  call void @_ZdlPv(i8* %205) #14
  br label %206

206:                                              ; preds = %190, %203
  %207 = bitcast %"class.std::__1::basic_string"* %198 to i8*
  %208 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* nonnull align 8 %208, i64 24, i1 false) #11
  %209 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  store i8 0, i8* %210, align 1
  store i8 0, i8* %208, align 8
  %211 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %212 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %211, align 8
  %213 = bitcast %"class.quic::HttpDecoder::Visitor"* %212 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %214 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %214, i64 2
  %216 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %215, align 8
  call void %216(%"class.quic::HttpDecoder::Visitor"* %212, %"class.quic::HttpDecoder"* %0) #11
  br label %255

217:                                              ; preds = %186
  %218 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %219 = call zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"* %218) #11
  br i1 %219, label %247, label %220

220:                                              ; preds = %217
  %221 = call i8* @_Znwm(i64 48) #14
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %221, i8** %222, align 8
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %224 = bitcast i64* %223 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %224, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %221, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i64 38, i1 false) #11
  %225 = getelementptr inbounds i8, i8* %221, i64 38
  store i8 0, i8* %225, align 1
  %226 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %226, align 4
  %227 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %227, align 8
  %228 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %229 = bitcast %"class.std::__1::basic_string"* %228 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  %231 = load i8, i8* %230, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %220
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %228, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load i8*, i8** %234, align 8
  call void @_ZdlPv(i8* %235) #14
  br label %236

236:                                              ; preds = %220, %233
  %237 = bitcast %"class.std::__1::basic_string"* %228 to i8*
  %238 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* nonnull align 8 %238, i64 24, i1 false) #11
  %239 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  store i8 0, i8* %240, align 1
  store i8 0, i8* %238, align 8
  %241 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %242 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %241, align 8
  %243 = bitcast %"class.quic::HttpDecoder::Visitor"* %242 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %244 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %243, align 8
  %245 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %244, i64 2
  %246 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %245, align 8
  call void %246(%"class.quic::HttpDecoder::Visitor"* %242, %"class.quic::HttpDecoder"* %0) #11
  br label %255

247:                                              ; preds = %217
  %248 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %249 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %248, align 8
  %250 = bitcast %"class.quic::HttpDecoder::Visitor"* %249 to i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::MaxPushIdFrame"*)***
  %251 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::MaxPushIdFrame"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::MaxPushIdFrame"*)*** %250, align 8
  %252 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::MaxPushIdFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::MaxPushIdFrame"*)** %251, i64 4
  %253 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::MaxPushIdFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::MaxPushIdFrame"*)** %252, align 8
  %254 = call zeroext i1 %253(%"class.quic::HttpDecoder::Visitor"* %249, %"struct.quic::MaxPushIdFrame"* nonnull dereferenceable(8) %10) #11
  br label %255

255:                                              ; preds = %236, %206, %247
  %256 = phi i1 [ %254, %247 ], [ false, %206 ], [ false, %236 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #11
  br label %359

257:                                              ; preds = %2
  %258 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 20
  %259 = load i8, i8* %258, align 8, !range !2
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %261, label %359

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %262) #11
  %263 = bitcast %"struct.quic::PriorityUpdateFrame"* %13 to i64*
  store i64 -6148914691236517206, i64* %263, align 8
  store i8 0, i8* %262, align 8
  %264 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %13, i64 0, i32 1
  %265 = bitcast i64* %264 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %265, i8 0, i64 32, i1 false) #11
  %266 = call zeroext i1 @_ZN4quic11HttpDecoder24ParsePriorityUpdateFrameEPNS_14QuicDataReaderEPNS_19PriorityUpdateFrameE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1, %"struct.quic::PriorityUpdateFrame"* nonnull %13)
  br i1 %266, label %267, label %275

267:                                              ; preds = %261
  %268 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %269 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %268, align 8
  %270 = bitcast %"class.quic::HttpDecoder::Visitor"* %269 to i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)***
  %271 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)*** %270, align 8
  %272 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)** %271, i64 19
  %273 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)** %272, align 8
  %274 = call zeroext i1 %273(%"class.quic::HttpDecoder::Visitor"* %269, %"struct.quic::PriorityUpdateFrame"* nonnull dereferenceable(40) %13) #11
  br label %275

275:                                              ; preds = %261, %267
  %276 = phi i1 [ %274, %267 ], [ false, %261 ]
  %277 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %13, i64 0, i32 2
  %278 = bitcast %"class.std::__1::basic_string"* %277 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %279 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %278, i64 0, i32 1, i32 0
  %280 = load i8, i8* %279, align 1
  %281 = icmp slt i8 %280, 0
  br i1 %281, label %282, label %285

282:                                              ; preds = %275
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load i8*, i8** %283, align 8
  call void @_ZdlPv(i8* %284) #14
  br label %285

285:                                              ; preds = %275, %282
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %262) #11
  br label %359

286:                                              ; preds = %2
  %287 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %287) #11
  %288 = bitcast %"struct.quic::PriorityUpdateFrame"* %14 to i64*
  store i64 -6148914691236517206, i64* %288, align 8
  store i8 0, i8* %287, align 8
  %289 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %14, i64 0, i32 1
  %290 = bitcast i64* %289 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %290, i8 0, i64 32, i1 false) #11
  %291 = call zeroext i1 @_ZN4quic11HttpDecoder27ParseNewPriorityUpdateFrameEPNS_14QuicDataReaderEPNS_19PriorityUpdateFrameE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1, %"struct.quic::PriorityUpdateFrame"* nonnull %14)
  br i1 %291, label %292, label %300

292:                                              ; preds = %286
  %293 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %294 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %293, align 8
  %295 = bitcast %"class.quic::HttpDecoder::Visitor"* %294 to i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)***
  %296 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)*** %295, align 8
  %297 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)** %296, i64 19
  %298 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::PriorityUpdateFrame"*)** %297, align 8
  %299 = call zeroext i1 %298(%"class.quic::HttpDecoder::Visitor"* %294, %"struct.quic::PriorityUpdateFrame"* nonnull dereferenceable(40) %14) #11
  br label %300

300:                                              ; preds = %286, %292
  %301 = phi i1 [ %299, %292 ], [ false, %286 ]
  %302 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %14, i64 0, i32 2
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %303, i64 0, i32 1, i32 0
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %300
  %308 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #14
  br label %310

310:                                              ; preds = %300, %307
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %287) #11
  br label %359

311:                                              ; preds = %2
  %312 = bitcast %"struct.quic::AcceptChFrame"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %312) #11
  %313 = getelementptr inbounds %"struct.quic::AcceptChFrame", %"struct.quic::AcceptChFrame"* %15, i64 0, i32 0, i32 0, i32 0
  %314 = getelementptr inbounds %"struct.quic::AcceptChFrame", %"struct.quic::AcceptChFrame"* %15, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 0, i64 24, i1 false) #11
  %315 = call zeroext i1 @_ZN4quic11HttpDecoder18ParseAcceptChFrameEPNS_14QuicDataReaderEPNS_13AcceptChFrameE(%"class.quic::HttpDecoder"* %0, %"class.quic::QuicDataReader"* %1, %"struct.quic::AcceptChFrame"* nonnull %15)
  br i1 %315, label %316, label %324

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %318 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %317, align 8
  %319 = bitcast %"class.quic::HttpDecoder::Visitor"* %318 to i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::AcceptChFrame"*)***
  %320 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::AcceptChFrame"*)**, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::AcceptChFrame"*)*** %319, align 8
  %321 = getelementptr inbounds i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::AcceptChFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::AcceptChFrame"*)** %320, i64 21
  %322 = load i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::AcceptChFrame"*)*, i1 (%"class.quic::HttpDecoder::Visitor"*, %"struct.quic::AcceptChFrame"*)** %321, align 8
  %323 = call zeroext i1 %322(%"class.quic::HttpDecoder::Visitor"* %318, %"struct.quic::AcceptChFrame"* nonnull dereferenceable(24) %15) #11
  br label %324

324:                                              ; preds = %311, %316
  %325 = phi i1 [ %323, %316 ], [ false, %311 ]
  %326 = load %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"** %313, align 8
  %327 = icmp eq %"struct.spdy::AcceptChOriginValuePair"* %326, null
  br i1 %327, label %358, label %328

328:                                              ; preds = %324
  %329 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %326 to i8*
  %330 = load %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"** %314, align 8
  %331 = icmp eq %"struct.spdy::AcceptChOriginValuePair"* %330, %326
  br i1 %331, label %356, label %332

332:                                              ; preds = %328, %351
  %333 = phi %"struct.spdy::AcceptChOriginValuePair"* [ %334, %351 ], [ %330, %328 ]
  %334 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %333, i64 -1
  %335 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %333, i64 -1, i32 1
  %336 = bitcast %"class.std::__1::basic_string"* %335 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %337 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %336, i64 0, i32 1, i32 0
  %338 = load i8, i8* %337, align 1
  %339 = icmp slt i8 %338, 0
  br i1 %339, label %340, label %343

340:                                              ; preds = %332
  %341 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %335, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load i8*, i8** %341, align 8
  call void @_ZdlPv(i8* %342) #14
  br label %343

343:                                              ; preds = %340, %332
  %344 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %334 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %345 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %344, i64 0, i32 1, i32 0
  %346 = load i8, i8* %345, align 1
  %347 = icmp slt i8 %346, 0
  br i1 %347, label %348, label %351

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %334, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load i8*, i8** %349, align 8
  call void @_ZdlPv(i8* %350) #14
  br label %351

351:                                              ; preds = %348, %343
  %352 = icmp eq %"struct.spdy::AcceptChOriginValuePair"* %334, %326
  br i1 %352, label %353, label %332

353:                                              ; preds = %351
  %354 = bitcast %"struct.quic::AcceptChFrame"* %15 to i8**
  %355 = load i8*, i8** %354, align 8
  br label %356

356:                                              ; preds = %353, %328
  %357 = phi i8* [ %355, %353 ], [ %329, %328 ]
  store %"struct.spdy::AcceptChOriginValuePair"* %326, %"struct.spdy::AcceptChOriginValuePair"** %314, align 8
  call void @_ZdlPv(i8* %357) #14
  br label %358

358:                                              ; preds = %324, %356
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %312) #11
  br label %359

359:                                              ; preds = %2, %257, %18, %358, %310, %285, %255, %184, %114, %91
  %360 = phi i1 [ %325, %358 ], [ %301, %310 ], [ %276, %285 ], [ %256, %255 ], [ %185, %184 ], [ %109, %114 ], [ %92, %91 ], [ false, %18 ], [ false, %257 ], [ false, %2 ]
  ret i1 %360
}

declare zeroext i1 @_ZN6quiche16QuicheDataReader4SeekEm(%"class.quiche::QuicheDataReader"*, i64) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #3

declare void @_ZN4absl9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_8AlphaNumE(%"class.std::__1::basic_string"*, %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder18ParseSettingsFrameEPNS_14QuicDataReaderEPNS_13SettingsFrameE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*, %"struct.quic::SettingsFrame"*) local_unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %10 = call zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"* %9) #11
  br i1 %10, label %168, label %11

11:                                               ; preds = %3
  %12 = bitcast i64* %4 to i8*
  %13 = bitcast i64* %6 to i8*
  %14 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %16 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %2, i64 0, i32 0, i32 0, i32 0, i32 3
  %18 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %19

19:                                               ; preds = %11, %159
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %20 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* nonnull %4) #11
  br i1 %20, label %37, label %21

21:                                               ; preds = %19
  %22 = call i8* @_Znwm(i64 48) #14
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %25, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i64 0, i64 0), i64 34, i1 false) #11
  %26 = getelementptr inbounds i8, i8* %22, i64 34
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %27, align 4
  %28 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %28, align 8
  %29 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %147

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #14
  br label %147

37:                                               ; preds = %19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  store i64 -6148914691236517206, i64* %6, align 8
  %38 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* nonnull %6) #11
  br i1 %38, label %66, label %39

39:                                               ; preds = %37
  %40 = call i8* @_Znwm(i64 32) #14
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %40, i8** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast i64* %42 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %43, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i64 29, i1 false) #11
  %44 = getelementptr inbounds i8, i8* %40, i64 29
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %45, align 4
  %46 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %46, align 8
  %47 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %39
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %39, %52
  %56 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %57, i64 24, i1 false) #11
  %58 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 0, i8* %59, align 1
  store i8 0, i8* %57, align 8
  %60 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %61 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %60, align 8
  %62 = bitcast %"class.quic::HttpDecoder::Visitor"* %61 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %63 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %63, i64 2
  %65 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %64, align 8
  call void %65(%"class.quic::HttpDecoder::Visitor"* %61, %"class.quic::HttpDecoder"* %0) #11
  br label %158

66:                                               ; preds = %37
  %67 = load i64, i64* %4, align 8
  %68 = load i64, i64* %6, align 8
  %69 = add i64 %15, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  %75 = load i8*, i8** %16, align 8, !noalias !9
  %76 = load i64, i64* %17, align 8, !noalias !9
  %77 = lshr i64 %74, 7
  %78 = ptrtoint i8* %75 to i64
  %79 = lshr i64 %78, 12
  %80 = xor i64 %77, %79
  %81 = trunc i128 %73 to i8
  %82 = and i8 %81, 127
  %83 = insertelement <16 x i8> undef, i8 %82, i32 0
  %84 = shufflevector <16 x i8> %83, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %85

85:                                               ; preds = %115, %66
  %86 = phi i64 [ %80, %66 ], [ %117, %115 ]
  %87 = phi i64 [ 0, %66 ], [ %116, %115 ]
  %88 = and i64 %86, %76
  %89 = getelementptr inbounds i8, i8* %75, i64 %88
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1, !noalias !9
  %92 = icmp eq <16 x i8> %84, %91
  %93 = bitcast <16 x i1> %92 to i16
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %111, label %95

95:                                               ; preds = %85
  %96 = zext i16 %93 to i32
  %97 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %18, align 8, !noalias !9
  br label %98

98:                                               ; preds = %107, %95
  %99 = phi i32 [ %96, %95 ], [ %109, %107 ]
  %100 = call i32 @llvm.cttz.i32(i32 %99, i1 false) #11, !range !6
  %101 = zext i32 %100 to i64
  %102 = add i64 %88, %101
  %103 = and i64 %102, %76
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %97, i64 %103, i32 0, i32 0
  %105 = load i64, i64* %104, align 8, !noalias !9
  %106 = icmp eq i64 %105, %67
  br i1 %106, label %118, label %107, !prof !7

107:                                              ; preds = %98
  %108 = add i32 %99, -1
  %109 = and i32 %108, %99
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %98

111:                                              ; preds = %107, %85
  %112 = icmp eq <16 x i8> %91, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %113 = bitcast <16 x i1> %112 to i16
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %115, label %159, !prof !8

115:                                              ; preds = %111
  %116 = add i64 %87, 16
  %117 = add i64 %116, %88
  br label %85

118:                                              ; preds = %98
  %119 = getelementptr inbounds i8, i8* %75, i64 %103
  %120 = icmp ne i8* %119, null
  call void @llvm.assume(i1 %120) #11, !noalias !9
  %121 = call i8* @_Znwm(i64 32) #14
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %121, i8** %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = bitcast i64* %123 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %124, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %121, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i64 0, i64 0), i64 29, i1 false) #11
  %125 = getelementptr inbounds i8, i8* %121, i64 29
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %126, align 4
  %127 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 158, i32* %127, align 8
  %128 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %129 = bitcast %"class.std::__1::basic_string"* %128 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %118
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #14
  br label %136

136:                                              ; preds = %118, %133
  %137 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  %138 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* nonnull align 8 %138, i64 24, i1 false) #11
  %139 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  store i8 0, i8* %140, align 1
  store i8 0, i8* %138, align 8
  %141 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %142 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %141, align 8
  %143 = bitcast %"class.quic::HttpDecoder::Visitor"* %142 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %144 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %144, i64 2
  %146 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %145, align 8
  call void %146(%"class.quic::HttpDecoder::Visitor"* %142, %"class.quic::HttpDecoder"* %0) #11
  br label %158

147:                                              ; preds = %34, %21
  %148 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %149 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* nonnull align 8 %149, i64 24, i1 false) #11
  %150 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  store i8 0, i8* %151, align 1
  store i8 0, i8* %149, align 8
  %152 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %153 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %152, align 8
  %154 = bitcast %"class.quic::HttpDecoder::Visitor"* %153 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %155 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %155, i64 2
  %157 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %156, align 8
  call void %157(%"class.quic::HttpDecoder::Visitor"* %153, %"class.quic::HttpDecoder"* %0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %168

158:                                              ; preds = %136, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %168

159:                                              ; preds = %111
  %160 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %14, i64 %74) #11, !noalias !9
  %161 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %18, align 8, !noalias !9
  %162 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %161, i64 %160, i32 0, i32 0
  store i64 %67, i64* %162, align 8, !noalias !9
  %163 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %161, i64 %160, i32 0, i32 1
  store i64 %68, i64* %163, align 8, !noalias !9
  %164 = load i8*, i8** %16, align 8, !noalias !9
  %165 = getelementptr inbounds i8, i8* %164, i64 %160
  %166 = icmp ne i8* %165, null
  call void @llvm.assume(i1 %166) #11, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  %167 = call zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"* %9) #11
  br i1 %167, label %168, label %19

168:                                              ; preds = %159, %3, %158, %147
  %169 = phi i1 [ false, %147 ], [ false, %158 ], [ true, %3 ], [ true, %159 ]
  ret i1 %169
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder24ParsePriorityUpdateFrameEPNS_14QuicDataReaderEPNS_19PriorityUpdateFrameE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*, %"struct.quic::PriorityUpdateFrame"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %9 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %10 = call zeroext i1 @_ZN6quiche16QuicheDataReader9ReadUInt8EPh(%"class.quiche::QuicheDataReader"* %9, i8* nonnull %4) #11
  br i1 %10, label %38, label %11

11:                                               ; preds = %3
  %12 = call i8* @_Znwm(i64 48) #14
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 40, i64 -9223372036854775760>, <2 x i64>* %15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ([41 x i8], [41 x i8]* @.str.19, i64 0, i64 0), i64 40, i1 false) #11
  %16 = getelementptr inbounds i8, i8* %12, i64 40
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %17, align 4
  %18 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %18, align 8
  %19 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %11, %24
  %28 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %29, i64 24, i1 false) #11
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 0, i8* %31, align 1
  store i8 0, i8* %29, align 8
  %32 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %33 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %32, align 8
  %34 = bitcast %"class.quic::HttpDecoder::Visitor"* %33 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %35 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %35, i64 2
  %37 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %36, align 8
  call void %37(%"class.quic::HttpDecoder::Visitor"* %33, %"class.quic::HttpDecoder"* %0) #11
  br label %136

38:                                               ; preds = %3
  %39 = load i8, i8* %4, align 1
  switch i8 %39, label %40 [
    i8 0, label %67
    i8 -128, label %67
  ]

40:                                               ; preds = %38
  %41 = call i8* @_Znwm(i64 48) #14
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast i64* %43 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %44, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), i64 33, i1 false) #11
  %45 = getelementptr inbounds i8, i8* %41, i64 33
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %46, align 4
  %47 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %47, align 8
  %48 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %40
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %40, %53
  %57 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %58, i64 24, i1 false) #11
  %59 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 0, i8* %60, align 1
  store i8 0, i8* %58, align 8
  %61 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %62 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %61, align 8
  %63 = bitcast %"class.quic::HttpDecoder::Visitor"* %62 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %64 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %64, i64 2
  %66 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %65, align 8
  call void %66(%"class.quic::HttpDecoder::Visitor"* %62, %"class.quic::HttpDecoder"* %0) #11
  br label %136

67:                                               ; preds = %38, %38
  %68 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %2, i64 0, i32 0
  store i8 %39, i8* %68, align 8
  %69 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %2, i64 0, i32 1
  %70 = call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* %69) #11
  br i1 %70, label %98, label %71

71:                                               ; preds = %67
  %72 = call i8* @_Znwm(i64 48) #14
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %72, i8** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast i64* %74 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %75, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %72, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i64 38, i1 false) #11
  %76 = getelementptr inbounds i8, i8* %72, i64 38
  store i8 0, i8* %76, align 1
  %77 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %77, align 4
  %78 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %78, align 8
  %79 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %71
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #14
  br label %87

87:                                               ; preds = %71, %84
  %88 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %89 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* nonnull align 8 %89, i64 24, i1 false) #11
  %90 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 0, i8* %91, align 1
  store i8 0, i8* %89, align 8
  %92 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %93 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %92, align 8
  %94 = bitcast %"class.quic::HttpDecoder::Visitor"* %93 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %95 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %95, i64 2
  %97 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %96, align 8
  call void %97(%"class.quic::HttpDecoder::Visitor"* %93, %"class.quic::HttpDecoder"* %0) #11
  br label %136

98:                                               ; preds = %67
  %99 = call { i8*, i64 } @_ZN6quiche16QuicheDataReader20ReadRemainingPayloadEv(%"class.quiche::QuicheDataReader"* %9) #11
  %100 = extractvalue { i8*, i64 } %99, 0
  %101 = extractvalue { i8*, i64 } %99, 1
  %102 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #11
  %103 = icmp ugt i64 %101, -17
  br i1 %103, label %104, label %106

104:                                              ; preds = %98
  %105 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %105) #15
  unreachable

106:                                              ; preds = %98
  %107 = icmp ult i64 %101, 23
  br i1 %107, label %116, label %108

108:                                              ; preds = %106
  %109 = add nuw i64 %101, 16
  %110 = and i64 %109, -16
  %111 = call i8* @_Znwm(i64 %110) #14
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %111, i8** %112, align 8
  %113 = or i64 %110, -9223372036854775808
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %101, i64* %115, align 8
  br label %121

116:                                              ; preds = %106
  %117 = trunc i64 %101 to i8
  %118 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  store i8 %117, i8* %119, align 1
  %120 = icmp eq i64 %101, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %116, %108
  %122 = phi i8* [ %111, %108 ], [ %102, %116 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %122, i8* align 1 %100, i64 %101, i1 false) #11
  br label %123

123:                                              ; preds = %116, %121
  %124 = phi i8* [ %102, %116 ], [ %122, %121 ]
  %125 = getelementptr inbounds i8, i8* %124, i64 %101
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %2, i64 0, i32 2
  %127 = bitcast %"class.std::__1::basic_string"* %126 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #14
  br label %134

134:                                              ; preds = %131, %123
  %135 = bitcast %"class.std::__1::basic_string"* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* nonnull align 8 %102, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #11
  br label %136

136:                                              ; preds = %87, %56, %27, %134
  %137 = phi i1 [ true, %134 ], [ false, %27 ], [ false, %56 ], [ false, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder27ParseNewPriorityUpdateFrameEPNS_14QuicDataReaderEPNS_19PriorityUpdateFrameE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*, %"struct.quic::PriorityUpdateFrame"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %2, i64 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %2, i64 0, i32 1
  %8 = tail call zeroext i1 @_ZN4quic14QuicDataReader12ReadVarInt62EPm(%"class.quic::QuicDataReader"* %1, i64* %7) #11
  br i1 %8, label %36, label %9

9:                                                ; preds = %3
  %10 = tail call i8* @_Znwm(i64 48) #14
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), i64 38, i1 false) #11
  %14 = getelementptr inbounds i8, i8* %10, i64 38
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %15, align 4
  %16 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %16, align 8
  %17 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %9, %22
  %26 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %27, i64 24, i1 false) #11
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 0, i8* %29, align 1
  store i8 0, i8* %27, align 8
  %30 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %31 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %30, align 8
  %32 = bitcast %"class.quic::HttpDecoder::Visitor"* %31 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %33 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %33, i64 2
  %35 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %34, align 8
  tail call void %35(%"class.quic::HttpDecoder::Visitor"* %31, %"class.quic::HttpDecoder"* %0) #11
  br label %75

36:                                               ; preds = %3
  %37 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %38 = tail call { i8*, i64 } @_ZN6quiche16QuicheDataReader20ReadRemainingPayloadEv(%"class.quiche::QuicheDataReader"* %37) #11
  %39 = extractvalue { i8*, i64 } %38, 0
  %40 = extractvalue { i8*, i64 } %38, 1
  %41 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  %42 = icmp ugt i64 %40, -17
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %44) #15
  unreachable

45:                                               ; preds = %36
  %46 = icmp ult i64 %40, 23
  br i1 %46, label %55, label %47

47:                                               ; preds = %45
  %48 = add nuw i64 %40, 16
  %49 = and i64 %48, -16
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = or i64 %49, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %54, align 8
  br label %60

55:                                               ; preds = %45
  %56 = trunc i64 %40 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 %56, i8* %58, align 1
  %59 = icmp eq i64 %40, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %55, %47
  %61 = phi i8* [ %50, %47 ], [ %41, %55 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 %39, i64 %40, i1 false) #11
  br label %62

62:                                               ; preds = %55, %60
  %63 = phi i8* [ %41, %55 ], [ %61, %60 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 %40
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %2, i64 0, i32 2
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %70, %62
  %74 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %41, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  br label %75

75:                                               ; preds = %25, %73
  %76 = phi i1 [ true, %73 ], [ false, %25 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11HttpDecoder18ParseAcceptChFrameEPNS_14QuicDataReaderEPNS_13AcceptChFrameE(%"class.quic::HttpDecoder"*, %"class.quic::QuicDataReader"*, %"struct.quic::AcceptChFrame"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::string_view", align 8
  %5 = alloca %"class.absl::string_view", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.spdy::AcceptChOriginValuePair", align 8
  %9 = bitcast %"class.absl::string_view"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #11
  %12 = bitcast %"class.absl::string_view"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  %14 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #11
  %15 = bitcast %"class.quic::QuicDataReader"* %1 to %"class.quiche::QuicheDataReader"*
  %16 = call zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"* %15) #11
  br i1 %16, label %155, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"struct.quic::AcceptChFrame", %"struct.quic::AcceptChFrame"* %2, i64 0, i32 0
  %19 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %8 to i8*
  %20 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %8, i64 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %32 = getelementptr inbounds %"struct.quic::AcceptChFrame", %"struct.quic::AcceptChFrame"* %2, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.quic::AcceptChFrame", %"struct.quic::AcceptChFrame"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"struct.spdy::AcceptChOriginValuePair"** %32 to i64*
  br label %35

35:                                               ; preds = %17, %153
  %36 = call zeroext i1 @_ZN4quic14QuicDataReader23ReadStringPieceVarInt62EPN4absl11string_viewE(%"class.quic::QuicDataReader"* %1, %"class.absl::string_view"* nonnull %4) #11
  br i1 %36, label %64, label %37

37:                                               ; preds = %35
  %38 = call i8* @_Znwm(i64 48) #14
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %38, i8** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast i64* %40 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %41, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i64 32, i1 false) #11
  %42 = getelementptr inbounds i8, i8* %38, i64 32
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %43, align 4
  %44 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %44, align 8
  %45 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %37, %50
  %54 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %55, i64 24, i1 false) #11
  %56 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 0, i8* %57, align 1
  store i8 0, i8* %55, align 8
  %58 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %59 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %58, align 8
  %60 = bitcast %"class.quic::HttpDecoder::Visitor"* %59 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %61 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %61, i64 2
  %63 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %62, align 8
  call void %63(%"class.quic::HttpDecoder::Visitor"* %59, %"class.quic::HttpDecoder"* %0) #11
  br label %155

64:                                               ; preds = %35
  %65 = call zeroext i1 @_ZN4quic14QuicDataReader23ReadStringPieceVarInt62EPN4absl11string_viewE(%"class.quic::QuicDataReader"* %1, %"class.absl::string_view"* nonnull %5) #11
  br i1 %65, label %93, label %66

66:                                               ; preds = %64
  %67 = call i8* @_Znwm(i64 32) #14
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %67, i8** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %70, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %67, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i64 31, i1 false) #11
  %71 = getelementptr inbounds i8, i8* %67, i64 31
  store i8 0, i8* %71, align 1
  %72 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %72, align 4
  %73 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 13
  store i32 132, i32* %73, align 8
  %74 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 15
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %66
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %66, %79
  %83 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* nonnull align 8 %84, i64 24, i1 false) #11
  %85 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  store i8 0, i8* %86, align 1
  store i8 0, i8* %84, align 8
  %87 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %0, i64 0, i32 0
  %88 = load %"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder::Visitor"** %87, align 8
  %89 = bitcast %"class.quic::HttpDecoder::Visitor"* %88 to void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)***
  %90 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)**, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %90, i64 2
  %92 = load void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)*, void (%"class.quic::HttpDecoder::Visitor"*, %"class.quic::HttpDecoder"*)** %91, align 8
  call void %92(%"class.quic::HttpDecoder::Visitor"* %88, %"class.quic::HttpDecoder"* %0) #11
  br label %155

93:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #11
  %94 = load i8*, i8** %10, align 8
  %95 = load i64, i64* %11, align 8
  %96 = icmp ugt i64 %95, -17
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %98) #15
  unreachable

99:                                               ; preds = %93
  %100 = icmp ult i64 %95, 23
  br i1 %100, label %106, label %101

101:                                              ; preds = %99
  %102 = add nuw i64 %95, 16
  %103 = and i64 %102, -16
  %104 = call i8* @_Znwm(i64 %103) #14
  store i8* %104, i8** %20, align 8
  %105 = or i64 %103, -9223372036854775808
  store i64 %105, i64* %21, align 8
  store i64 %95, i64* %22, align 8
  br label %109

106:                                              ; preds = %99
  %107 = trunc i64 %95 to i8
  store i8 %107, i8* %24, align 1
  %108 = icmp eq i64 %95, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %106, %101
  %110 = phi i8* [ %104, %101 ], [ %19, %106 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %94, i64 %95, i1 false) #11
  br label %111

111:                                              ; preds = %106, %109
  %112 = phi i8* [ %19, %106 ], [ %110, %109 ]
  %113 = getelementptr inbounds i8, i8* %112, i64 %95
  store i8 0, i8* %113, align 1
  %114 = load i8*, i8** %13, align 8
  %115 = load i64, i64* %14, align 8
  %116 = icmp ugt i64 %115, -17
  br i1 %116, label %117, label %119

117:                                              ; preds = %111
  %118 = bitcast %"class.std::__1::basic_string"* %25 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %118) #15
  unreachable

119:                                              ; preds = %111
  %120 = icmp ult i64 %115, 23
  br i1 %120, label %126, label %121

121:                                              ; preds = %119
  %122 = add nuw i64 %115, 16
  %123 = and i64 %122, -16
  %124 = call i8* @_Znwm(i64 %123) #14
  store i8* %124, i8** %26, align 8
  %125 = or i64 %123, -9223372036854775808
  store i64 %125, i64* %27, align 8
  store i64 %115, i64* %28, align 8
  br label %129

126:                                              ; preds = %119
  %127 = trunc i64 %115 to i8
  store i8 %127, i8* %30, align 1
  %128 = icmp eq i64 %115, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %126, %121
  %130 = phi i8* [ %124, %121 ], [ %31, %126 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %130, i8* align 1 %114, i64 %115, i1 false) #11
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi i8* [ %31, %126 ], [ %130, %129 ]
  %133 = getelementptr inbounds i8, i8* %132, i64 %115
  store i8 0, i8* %133, align 1
  %134 = load %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"** %32, align 8
  %135 = load %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"** %33, align 8
  %136 = icmp ult %"struct.spdy::AcceptChOriginValuePair"* %134, %135
  br i1 %136, label %137, label %143

137:                                              ; preds = %131
  %138 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* nonnull align 8 %19, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %139 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %134, i64 0, i32 1
  %140 = bitcast %"class.std::__1::basic_string"* %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %31, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #11
  %141 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %134, i64 1
  %142 = ptrtoint %"struct.spdy::AcceptChOriginValuePair"* %141 to i64
  store i64 %142, i64* %34, align 8
  br label %148

143:                                              ; preds = %131
  call void @_ZNSt3__16vectorIN4spdy23AcceptChOriginValuePairENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %18, %"struct.spdy::AcceptChOriginValuePair"* nonnull dereferenceable(48) %8) #11
  %144 = load i8, i8* %30, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %147) #14
  br label %148

148:                                              ; preds = %137, %146, %143
  %149 = load i8, i8* %24, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %148
  %152 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #11
  %154 = call zeroext i1 @_ZNK6quiche16QuicheDataReader13IsDoneReadingEv(%"class.quiche::QuicheDataReader"* %15) #11
  br i1 %154, label %155, label %35

155:                                              ; preds = %153, %82, %53, %3
  %156 = phi i1 [ false, %53 ], [ false, %82 ], [ true, %3 ], [ true, %153 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i1 %156
}

declare zeroext i1 @_ZN6quiche16QuicheDataReader9ReadBytesEPvm(%"class.quiche::QuicheDataReader"*, i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN6quiche16QuicheDataReader9ReadUInt8EPh(%"class.quiche::QuicheDataReader"*, i8*) local_unnamed_addr #3

declare { i8*, i64 } @_ZN6quiche16QuicheDataReader20ReadRemainingPayloadEv(%"class.quiche::QuicheDataReader"*) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !6
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !7

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !6
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #14
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %94, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %90
  br i1 %24, label %94, label %93

28:                                               ; preds = %25, %90
  %29 = phi i64 [ 0, %25 ], [ %91, %90 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %90

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %34, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %26, %36
  %38 = zext i64 %37 to i128
  %39 = mul nuw i128 %38, 11376068507788127593
  %40 = lshr i128 %39, 64
  %41 = xor i128 %40, %39
  %42 = trunc i128 %41 to i64
  %43 = load i8*, i8** %3, align 8
  %44 = load i64, i64* %7, align 8
  %45 = lshr i64 %42, 7
  %46 = ptrtoint i8* %43 to i64
  %47 = lshr i64 %46, 12
  %48 = xor i64 %45, %47
  %49 = and i64 %48, %44
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp slt <16 x i8> %52, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %33, %56
  %57 = phi i64 [ %61, %56 ], [ %49, %33 ]
  %58 = phi i64 [ %59, %56 ], [ 0, %33 ]
  %59 = add i64 %58, 16
  %60 = add i64 %59, %57
  %61 = and i64 %60, %44
  %62 = getelementptr inbounds i8, i8* %43, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp slt <16 x i8> %64, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %56, label %68

68:                                               ; preds = %56, %33
  %69 = phi i64 [ %49, %33 ], [ %61, %56 ]
  %70 = phi i16 [ %54, %33 ], [ %66, %56 ]
  %71 = zext i16 %70 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 false) #11, !range !6
  %73 = zext i32 %72 to i64
  %74 = add i64 %69, %73
  %75 = and i64 %74, %44
  %76 = trunc i128 %41 to i8
  %77 = and i8 %76, 127
  %78 = getelementptr inbounds i8, i8* %43, i64 %75
  store i8 %77, i8* %78, align 1
  %79 = load i8*, i8** %3, align 8
  %80 = add i64 %75, -15
  %81 = load i64, i64* %7, align 8
  %82 = and i64 %80, %81
  %83 = and i64 %81, 15
  %84 = add i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  store i8 %77, i8* %85, align 1
  %86 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %86, i64 %75
  %88 = bitcast %"union.absl::container_internal::map_slot_type"* %87 to i8*
  %89 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false) #11
  br label %90

90:                                               ; preds = %28, %68
  %91 = add nuw i64 %29, 1
  %92 = icmp eq i64 %91, %8
  br i1 %92, label %27, label %28

93:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #14
  br label %94

94:                                               ; preds = %2, %27, %93
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %121, %1
  %12 = phi i64 [ 0, %1 ], [ %123, %121 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %121
  %20 = phi i64 [ %6, %8 ], [ %124, %121 ]
  %21 = phi i64 [ 0, %8 ], [ %123, %121 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %121

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %28, i64 %21, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %10, %30
  %32 = zext i64 %31 to i128
  %33 = mul nuw i128 %32, 11376068507788127593
  %34 = lshr i128 %33, 64
  %35 = xor i128 %34, %33
  %36 = trunc i128 %35 to i64
  %37 = lshr i64 %36, 7
  %38 = lshr i64 %27, 12
  %39 = xor i64 %37, %38
  %40 = and i64 %39, %20
  %41 = getelementptr inbounds i8, i8* %22, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp slt <16 x i8> %43, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %26, %47
  %48 = phi i64 [ %52, %47 ], [ %40, %26 ]
  %49 = phi i64 [ %50, %47 ], [ 0, %26 ]
  %50 = add i64 %49, 16
  %51 = add i64 %50, %48
  %52 = and i64 %51, %20
  %53 = getelementptr inbounds i8, i8* %22, i64 %52
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = icmp slt <16 x i8> %55, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %47, label %59

59:                                               ; preds = %47, %26
  %60 = phi i64 [ %40, %26 ], [ %52, %47 ]
  %61 = phi i16 [ %45, %26 ], [ %57, %47 ]
  %62 = zext i16 %61 to i32
  %63 = tail call i32 @llvm.cttz.i32(i32 %62, i1 false) #11, !range !6
  %64 = zext i32 %63 to i64
  %65 = add i64 %60, %64
  %66 = and i64 %65, %20
  %67 = sub i64 %66, %40
  %68 = sub i64 %21, %40
  %69 = xor i64 %67, %68
  %70 = and i64 %69, %20
  %71 = icmp ult i64 %70, 16
  br i1 %71, label %72, label %82, !prof !7

72:                                               ; preds = %59
  %73 = trunc i128 %35 to i8
  %74 = and i8 %73, 127
  store i8 %74, i8* %23, align 1
  %75 = load i8*, i8** %2, align 8
  %76 = add i64 %21, -15
  %77 = load i64, i64* %4, align 8
  %78 = and i64 %77, %76
  %79 = and i64 %77, 15
  %80 = add i64 %78, %79
  %81 = getelementptr inbounds i8, i8* %75, i64 %80
  store i8 %74, i8* %81, align 1
  br label %121

82:                                               ; preds = %59
  %83 = getelementptr inbounds i8, i8* %22, i64 %66
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, -128
  %86 = trunc i128 %35 to i8
  %87 = and i8 %86, 127
  store i8 %87, i8* %83, align 1
  %88 = load i8*, i8** %2, align 8
  %89 = add i64 %66, -15
  %90 = load i64, i64* %4, align 8
  %91 = and i64 %90, %89
  %92 = and i64 %90, 15
  %93 = add i64 %91, %92
  %94 = getelementptr inbounds i8, i8* %88, i64 %93
  store i8 %87, i8* %94, align 1
  %95 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  br i1 %85, label %96, label %110

96:                                               ; preds = %82
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %95, i64 %66
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %95, i64 %21
  %99 = bitcast %"union.absl::container_internal::map_slot_type"* %97 to i8*
  %100 = bitcast %"union.absl::container_internal::map_slot_type"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #11
  %101 = load i8*, i8** %2, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %21
  store i8 -128, i8* %102, align 1
  %103 = load i8*, i8** %2, align 8
  %104 = add i64 %21, -15
  %105 = load i64, i64* %4, align 8
  %106 = and i64 %105, %104
  %107 = and i64 %105, 15
  %108 = add i64 %106, %107
  %109 = getelementptr inbounds i8, i8* %103, i64 %108
  store i8 -128, i8* %109, align 1
  br label %121

110:                                              ; preds = %82
  %111 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %95, i64 %21
  %112 = bitcast %"union.absl::container_internal::map_slot_type"* %111 to i8*
  %113 = bitcast %"union.absl::container_internal::map_slot_type"* %111 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 8
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %95, i64 %66
  %116 = bitcast %"union.absl::container_internal::map_slot_type"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %116, i64 16, i1 false) #11
  %117 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %117, i64 %66
  %119 = bitcast %"union.absl::container_internal::map_slot_type"* %118 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %119, align 8
  %120 = add i64 %21, -1
  br label %121

121:                                              ; preds = %72, %110, %96, %19
  %122 = phi i64 [ %21, %19 ], [ %21, %72 ], [ %21, %96 ], [ %120, %110 ]
  %123 = add i64 %122, 1
  %124 = load i64, i64* %4, align 8
  %125 = icmp eq i64 %123, %124
  br i1 %125, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4spdy23AcceptChOriginValuePairENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.spdy::AcceptChOriginValuePair"* dereferenceable(48)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spdy::AcceptChOriginValuePair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spdy::AcceptChOriginValuePair"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"struct.spdy::AcceptChOriginValuePair"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spdy::AcceptChOriginValuePair"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %33, i64 %32
  %36 = ptrtoint %"struct.spdy::AcceptChOriginValuePair"* %35 to i64
  %37 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %34 to i8*
  %38 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %1, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #11
  %43 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %34, i64 1
  %44 = ptrtoint %"struct.spdy::AcceptChOriginValuePair"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"** %45, align 8
  %47 = load %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"** %3, align 8
  %48 = icmp eq %"struct.spdy::AcceptChOriginValuePair"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.spdy::AcceptChOriginValuePair"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.spdy::AcceptChOriginValuePair"* [ %54, %51 ], [ %34, %31 ]
  %53 = phi %"struct.spdy::AcceptChOriginValuePair"* [ %55, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %52, i64 -1
  %55 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %53, i64 -1
  %56 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %54 to i8*
  %57 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #11
  %58 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %52, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %53, i64 -1, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #11
  %62 = icmp eq %"struct.spdy::AcceptChOriginValuePair"* %55, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.spdy::AcceptChOriginValuePair"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.spdy::AcceptChOriginValuePair"* [ %34, %49 ], [ %54, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.spdy::AcceptChOriginValuePair"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.spdy::AcceptChOriginValuePair"*
  %72 = icmp eq %"struct.spdy::AcceptChOriginValuePair"* %67, %71
  br i1 %72, label %94, label %73

73:                                               ; preds = %66, %92
  %74 = phi %"struct.spdy::AcceptChOriginValuePair"* [ %75, %92 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %74, i64 -1, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %81, %73
  %85 = bitcast %"struct.spdy::AcceptChOriginValuePair"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.spdy::AcceptChOriginValuePair", %"struct.spdy::AcceptChOriginValuePair"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %89, %84
  %93 = icmp eq %"struct.spdy::AcceptChOriginValuePair"* %75, %71
  br i1 %93, label %94, label %73

94:                                               ; preds = %92, %66
  %95 = icmp eq i64 %69, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %94, %96
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE19EmplaceDecomposableclImJRKNS7_21piecewise_construct_tENS7_5tupleIJOmEEESN_EEENSB_INSF_8iteratorEbEERKT_DpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE19EmplaceDecomposableclImJRKNS7_21piecewise_construct_tENS7_5tupleIJOmEEESN_EEENSB_INSF_8iteratorEbEERKT_DpOT0_"}
!6 = !{i32 0, i32 33}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE19EmplaceDecomposableclImJRKNS7_21piecewise_construct_tENS7_5tupleIJOmEEESN_EEENSB_INSF_8iteratorEbEERKT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE19EmplaceDecomposableclImJRKNS7_21piecewise_construct_tENS7_5tupleIJOmEEESN_EEENSB_INSF_8iteratorEbEERKT_DpOT0_"}
