; ModuleID = '../../net/dns/mdns_client_impl.cc'
source_filename = "../../net/dns/mdns_client_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.net::MDnsConnection::SocketHandler" = type { %"class.std::__1::unique_ptr", %"class.net::MDnsConnection"*, %"class.net::IPEndPoint", %"class.net::DnsResponse", %"class.net::IPEndPoint", i8, %"class.std::__1::queue" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.net::DatagramServerSocket"* }
%"class.net::DnsResponse" = type { %class.scoped_refptr.44, i64, %"class.net::DnsRecordParser", i8, %"class.std::__1::vector.46", %"class.std::__1::vector.58" }
%class.scoped_refptr.44 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.45", i8* }
%"class.base::RefCountedThreadSafe.45" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::DnsRecordParser" = type { i8*, i64, i64, i64, i8* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { i16*, i16*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i16* }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.std::__1::pair.65"*, i64 }
%"struct.std::__1::pair.65" = type <{ %class.scoped_refptr.44, i32, [4 x i8] }>
%"class.net::DatagramServerSocket" = type { %"class.net::DatagramSocket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::MDnsConnection" = type { i32 (...)**, %"class.std::__1::vector.25", %"class.net::MDnsConnection::Delegate"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.net::MDnsConnection::SocketHandler"* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.27"* }
%"class.net::MDnsConnection::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.39" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i8 }
%"class.net::MDnsClientImpl::Core" = type { %"class.net::MDnsConnection::Delegate", %"class.base::SupportsWeakPtr", %"class.std::__1::map", %"class.net::MDnsCache", %"class.base::Clock"*, %"class.base::OneShotTimer"*, %"class.base::Time", %"class.std::__1::unique_ptr.96" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { i64 }
%"class.net::MDnsCache" = type { %"class.std::__1::map.82", %"class.base::Time", i64 }
%"class.std::__1::map.82" = type { %"class.std::__1::__tree.83" }
%"class.std::__1::__tree.83" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.net::MDnsConnection"* }
%"class.base::Clock" = type { i32 (...)** }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.72" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.93, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.95" }
%class.scoped_refptr.93 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.71" }>
%"class.base::RefCountedThreadSafe.71" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.94" }
%"class.base::time_internal::TimeBase.94" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.95" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback.72" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.66 }
%class.scoped_refptr.66 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.67", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.67" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::MDnsClientImpl::Core::ListenerKey" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.net::MDnsClientImpl" = type { %"class.net::MDnsClient", %"class.base::Clock"*, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179" }
%"class.net::MDnsClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.base::OneShotTimer"* }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.net::MDnsClientImpl::Core"* }
%"class.net::MDnsListenerImpl" = type { %"class.net::MDnsListener", %"class.base::SupportsWeakPtr.172", i16, %"class.std::__1::basic_string", %"class.base::Clock"*, %"class.net::MDnsClientImpl"*, %"class.net::MDnsListener::Delegate"*, %"class.base::Time", i32, i8, i8, %"class.base::internal::CancelableCallbackImpl" }
%"class.net::MDnsListener" = type { i32 (...)** }
%"class.base::SupportsWeakPtr.172" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.185" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.185" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::MDnsListener::Delegate" = type { i32 (...)** }
%"class.net::MDnsTransactionImpl" = type { %"class.net::MDnsTransaction", %"class.base::SupportsWeakPtr.202", %"class.net::MDnsListener::Delegate", i16, %"class.std::__1::basic_string", %"class.base::RepeatingCallback.201", %"class.std::__1::unique_ptr.189", %"class.base::internal::CancelableCallbackImpl.203", %"class.net::MDnsClientImpl"*, i8, i32 }
%"class.net::MDnsTransaction" = type { i32 (...)** }
%"class.base::SupportsWeakPtr.202" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::RepeatingCallback.201" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.net::MDnsListener"* }
%"class.base::internal::CancelableCallbackImpl.203" = type { %"class.base::OnceCallback.72", %"class.base::WeakPtrFactory.204" }
%"class.base::WeakPtrFactory.204" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::MDnsSocketFactoryImpl" = type { %"class.net::MDnsSocketFactory", %"class.net::NetLog"* }
%"class.net::MDnsSocketFactory" = type { i32 (...)** }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.3" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.73 }
%class.scoped_refptr.73 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%class.scoped_refptr.70 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.71", [4 x i8] }>
%"struct.std::__1::default_delete.31" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.158" }
%"struct.std::__1::pair.158" = type { %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.base::ObserverList"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.162", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.164" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.net::DnsQuery" = type { i64, %class.scoped_refptr.102, %"struct.net::dns_protocol::Header"* }
%class.scoped_refptr.102 = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"struct.net::dns_protocol::Header" = type { i16, i16, i16, i16, i16, i16 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::OptRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector.103", %"class.std::__1::vector.110" }
%"class.net::RecordRdata" = type { i32 (...)** }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"*, %"class.std::__1::__compressed_pair.105" }
%"class.net::OptRecordRdata::Opt" = type { i16, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.net::OptRecordRdata::Opt"* }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { i8*, i8*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { i8* }
%"class.std::__1::map.114" = type { %"class.std::__1::__tree.115" }
%"class.std::__1::__tree.115" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.net::MDnsCache::Key" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::pair.137" = type <{ %"class.net::MDnsCache::Key", i32, [4 x i8] }>
%"class.net::RecordParsed" = type { i32 (...)**, %"class.std::__1::basic_string", i16, i16, i32, %"class.std::__1::unique_ptr.126", %"class.base::Time" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.net::RecordRdata"* }
%"class.std::__1::__tree_node.224" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.225" }
%"struct.std::__1::__value_type.225" = type { %"struct.std::__1::pair.139" }
%"struct.std::__1::pair.139" = type <{ %"class.net::MDnsCache::Key", i32, [4 x i8] }>
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.net::RecordParsed"**, %"class.net::RecordParsed"**, %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.net::RecordParsed"** }
%"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.net::NsecRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector.141" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { i8*, i8*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { i8* }
%"class.std::__1::tuple.238" = type { %"struct.std::__1::__tuple_impl.239" }
%"struct.std::__1::__tuple_impl.239" = type { %"class.std::__1::__tuple_leaf.240" }
%"class.std::__1::__tuple_leaf.240" = type { %"class.net::MDnsClientImpl::Core::ListenerKey"* }
%"class.std::__1::tuple.241" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::WeakPtr.186" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.188" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::DefaultClock" = type { %"class.base::Clock" }
%"class.base::WeakPtr.205" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.206" = type { %"class.base::internal::WeakPtrBase" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.base::WeakPtr.275" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.286" = type { %"class.base::internal::WeakPtrBase" }

$_ZN3net17MDnsSocketFactoryD2Ev = comdat any

$_ZN3net21MDnsSocketFactoryImplD0Ev = comdat any

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE13DestructRangeIS8_Li0EEEvPS8_SB_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_ = comdat any

$_ZN3net12MDnsListenerD2Ev = comdat any

$_ZN3net12MDnsListenerD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3net20DatagramServerSocketENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_ = comdat any

$_ZNK4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm = comdat any

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZNKSt3__114default_deleteIN3net14MDnsConnection13SocketHandlerEEclEPS3_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3net14MDnsConnection13SocketHandlerENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS4_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS4_EEiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIS4_S5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSS_IJEEEEEENS_4pairINS_15__tree_iteratorISG_PNS_11__tree_nodeISG_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvRKNS5_11ListenerKeyEEJNS_7WeakPtrIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14MDnsClientImpl4CoreEFvRKNS4_11ListenerKeyEEJNS_7WeakPtrIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvRKNS5_11ListenerKeyEEJNS_7WeakPtrIS5_EES6_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE5eraseENS_21__tree_const_iteratorISG_PNS_11__tree_nodeISG_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14MDnsClientImpl4CoreEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIMN3net14MDnsClientImpl4CoreEFvPKNS2_12RecordParsedEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZNK4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE = comdat any

$_ZN4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE16ForwardRepeatingIJEEEvDpT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE = comdat any

$_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

$_ZTVN3net12MDnsListenerE = comdat any

@_ZTVN3net14MDnsConnectionE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::MDnsConnection"*)* @_ZN3net14MDnsConnectionD2Ev to i8*), i8* bitcast (void (%"class.net::MDnsConnection"*)* @_ZN3net14MDnsConnectionD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [34 x i8] c"../../net/dns/mdns_client_impl.cc\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Start failed, socket=\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c", error=\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"Sockets ready:\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"Socket error. id=\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"PostOnError\00", align 1
@_ZTVN3net14MDnsClientImpl4CoreE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::MDnsClientImpl::Core"*, %"class.net::DnsResponse"*, i32)* @_ZN3net14MDnsClientImpl4Core12HandlePacketEPNS_11DnsResponseEi to i8*), i8* bitcast (void (%"class.net::MDnsClientImpl::Core"*, i32)* @_ZN3net14MDnsClientImpl4Core17OnConnectionErrorEi to i8*), i8* bitcast (void (%"class.net::MDnsClientImpl::Core"*)* @_ZN3net14MDnsClientImpl4CoreD2Ev to i8*), i8* bitcast (void (%"class.net::MDnsClientImpl::Core"*)* @_ZN3net14MDnsClientImpl4CoreD0Ev to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [29 x i8] c"!cleanup_timer_->IsRunning()\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"MDNS OnConnectionError (code: \00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"RemoveListener\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"ScheduleCleanup\00", align 1
@_ZTVN3net14MDnsClientImplE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::MDnsClientImpl"*)* @_ZN3net14MDnsClientImplD2Ev to i8*), i8* bitcast (void (%"class.net::MDnsClientImpl"*)* @_ZN3net14MDnsClientImplD0Ev to i8*), i8* bitcast (%"class.net::MDnsListener"* (%"class.net::MDnsClientImpl"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)* @_ZN3net14MDnsClientImpl14CreateListenerEtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_12MDnsListener8DelegateE to i8*), i8* bitcast (%"class.net::MDnsTransaction"* (%"class.net::MDnsClientImpl"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback.201"*)* @_ZN3net14MDnsClientImpl17CreateTransactionEtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiRKN4base17RepeatingCallbackIFvNS_15MDnsTransaction6ResultEPKNS_12RecordParsedEEEE to i8*), i8* bitcast (i32 (%"class.net::MDnsClientImpl"*, %"class.net::MDnsSocketFactory"*)* @_ZN3net14MDnsClientImpl14StartListeningEPNS_17MDnsSocketFactoryE to i8*), i8* bitcast (void (%"class.net::MDnsClientImpl"*)* @_ZN3net14MDnsClientImpl13StopListeningEv to i8*), i8* bitcast (i1 (%"class.net::MDnsClientImpl"*)* @_ZNK3net14MDnsClientImpl11IsListeningEv to i8*)] }, align 8
@_ZTVN3net16MDnsListenerImplE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::MDnsListenerImpl"*)* @_ZN3net16MDnsListenerImplD2Ev to i8*), i8* bitcast (void (%"class.net::MDnsListenerImpl"*)* @_ZN3net16MDnsListenerImplD0Ev to i8*), i8* bitcast (i1 (%"class.net::MDnsListenerImpl"*)* @_ZN3net16MDnsListenerImpl5StartEv to i8*), i8* bitcast (void (%"class.net::MDnsListenerImpl"*, i1)* @_ZN3net16MDnsListenerImpl16SetActiveRefreshEb to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)* @_ZNK3net16MDnsListenerImpl7GetNameEv to i8*), i8* bitcast (i16 (%"class.net::MDnsListenerImpl"*)* @_ZNK3net16MDnsListenerImpl7GetTypeEv to i8*)] }, align 8
@.str.11 = private unnamed_addr constant [20 x i8] c"ScheduleNextRefresh\00", align 1
@_ZTVN3net19MDnsTransactionImplE = hidden unnamed_addr constant { [10 x i8*], [7 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::MDnsTransactionImpl"*)* @_ZN3net19MDnsTransactionImplD2Ev to i8*), i8* bitcast (void (%"class.net::MDnsTransactionImpl"*)* @_ZN3net19MDnsTransactionImplD0Ev to i8*), i8* bitcast (i1 (%"class.net::MDnsTransactionImpl"*)* @_ZN3net19MDnsTransactionImpl5StartEv to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.net::MDnsTransactionImpl"*)* @_ZNK3net19MDnsTransactionImpl7GetNameEv to i8*), i8* bitcast (i16 (%"class.net::MDnsTransactionImpl"*)* @_ZNK3net19MDnsTransactionImpl7GetTypeEv to i8*), i8* bitcast (void (%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*)* @_ZN3net19MDnsTransactionImpl14OnRecordUpdateENS_12MDnsListener10UpdateTypeEPKNS_12RecordParsedE to i8*), i8* bitcast (void (%"class.net::MDnsTransactionImpl"*, %"class.std::__1::basic_string"*, i32)* @_ZN3net19MDnsTransactionImpl12OnNsecRecordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj to i8*), i8* bitcast (void (%"class.net::MDnsTransactionImpl"*)* @_ZN3net19MDnsTransactionImpl13OnCachePurgedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.net::MDnsTransactionImpl"*)* @_ZThn16_N3net19MDnsTransactionImplD1Ev to i8*), i8* bitcast (void (%"class.net::MDnsTransactionImpl"*)* @_ZThn16_N3net19MDnsTransactionImplD0Ev to i8*), i8* bitcast (void (%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*)* @_ZThn16_N3net19MDnsTransactionImpl14OnRecordUpdateENS_12MDnsListener10UpdateTypeEPKNS_12RecordParsedE to i8*), i8* bitcast (void (%"class.net::MDnsTransactionImpl"*, %"class.std::__1::basic_string"*, i32)* @_ZThn16_N3net19MDnsTransactionImpl12OnNsecRecordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj to i8*), i8* bitcast (void (%"class.net::MDnsTransactionImpl"*)* @_ZThn16_N3net19MDnsTransactionImpl13OnCachePurgedEv to i8*)] }, align 8
@.str.12 = private unnamed_addr constant [15 x i8] c"QueryAndListen\00", align 1
@_ZN3net15MDnsTransaction19kTransactionTimeoutE = external local_unnamed_addr global %"class.base::TimeDelta", align 8
@_ZTVN3net21MDnsSocketFactoryImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::MDnsSocketFactory"*)* @_ZN3net17MDnsSocketFactoryD2Ev to i8*), i8* bitcast (void (%"class.net::MDnsSocketFactoryImpl"*)* @_ZN3net21MDnsSocketFactoryImplD0Ev to i8*), i8* bitcast (void (%"class.net::MDnsSocketFactoryImpl"*, %"class.std::__1::vector.8"*)* @_ZN3net21MDnsSocketFactoryImpl13CreateSocketsEPNSt3__16vectorINS1_10unique_ptrINS_20DatagramServerSocketENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE to i8*)] }, align 8
@.str.13 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@_ZTVN3net12MDnsListenerE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::MDnsListener"*)* @_ZN3net12MDnsListenerD2Ev to i8*), i8* bitcast (void (%"class.net::MDnsListener"*)* @_ZN3net12MDnsListenerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.19 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN3net14MDnsConnection13SocketHandlerC1ENSt3__110unique_ptrINS_20DatagramServerSocketENS2_14default_deleteIS4_EEEEPS0_ = hidden unnamed_addr alias void (%"class.net::MDnsConnection::SocketHandler"*, %"class.net::DatagramServerSocket"*, %"class.net::MDnsConnection"*), void (%"class.net::MDnsConnection::SocketHandler"*, %"class.net::DatagramServerSocket"*, %"class.net::MDnsConnection"*)* @_ZN3net14MDnsConnection13SocketHandlerC2ENSt3__110unique_ptrINS_20DatagramServerSocketENS2_14default_deleteIS4_EEEEPS0_
@_ZN3net14MDnsConnection13SocketHandlerD1Ev = hidden unnamed_addr alias void (%"class.net::MDnsConnection::SocketHandler"*), void (%"class.net::MDnsConnection::SocketHandler"*)* @_ZN3net14MDnsConnection13SocketHandlerD2Ev
@_ZN3net14MDnsConnectionC1EPNS0_8DelegateE = hidden unnamed_addr alias void (%"class.net::MDnsConnection"*, %"class.net::MDnsConnection::Delegate"*), void (%"class.net::MDnsConnection"*, %"class.net::MDnsConnection::Delegate"*)* @_ZN3net14MDnsConnectionC2EPNS0_8DelegateE
@_ZN3net14MDnsConnectionD1Ev = hidden unnamed_addr alias void (%"class.net::MDnsConnection"*), void (%"class.net::MDnsConnection"*)* @_ZN3net14MDnsConnectionD2Ev
@_ZN3net14MDnsClientImpl4CoreC1EPN4base5ClockEPNS2_12OneShotTimerE = hidden unnamed_addr alias void (%"class.net::MDnsClientImpl::Core"*, %"class.base::Clock"*, %"class.base::OneShotTimer"*), void (%"class.net::MDnsClientImpl::Core"*, %"class.base::Clock"*, %"class.base::OneShotTimer"*)* @_ZN3net14MDnsClientImpl4CoreC2EPN4base5ClockEPNS2_12OneShotTimerE
@_ZN3net14MDnsClientImpl4CoreD1Ev = hidden unnamed_addr alias void (%"class.net::MDnsClientImpl::Core"*), void (%"class.net::MDnsClientImpl::Core"*)* @_ZN3net14MDnsClientImpl4CoreD2Ev
@_ZN3net14MDnsClientImpl4Core11ListenerKeyC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEt = hidden unnamed_addr alias void (%"class.net::MDnsClientImpl::Core::ListenerKey"*, %"class.std::__1::basic_string"*, i16), void (%"class.net::MDnsClientImpl::Core::ListenerKey"*, %"class.std::__1::basic_string"*, i16)* @_ZN3net14MDnsClientImpl4Core11ListenerKeyC2ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEt
@_ZN3net14MDnsClientImplC1Ev = hidden unnamed_addr alias void (%"class.net::MDnsClientImpl"*), void (%"class.net::MDnsClientImpl"*)* @_ZN3net14MDnsClientImplC2Ev
@_ZN3net14MDnsClientImplC1EPN4base5ClockENSt3__110unique_ptrINS1_12OneShotTimerENS4_14default_deleteIS6_EEEE = hidden unnamed_addr alias void (%"class.net::MDnsClientImpl"*, %"class.base::Clock"*, %"class.base::OneShotTimer"*), void (%"class.net::MDnsClientImpl"*, %"class.base::Clock"*, %"class.base::OneShotTimer"*)* @_ZN3net14MDnsClientImplC2EPN4base5ClockENSt3__110unique_ptrINS1_12OneShotTimerENS4_14default_deleteIS6_EEEE
@_ZN3net14MDnsClientImplD1Ev = hidden unnamed_addr alias void (%"class.net::MDnsClientImpl"*), void (%"class.net::MDnsClientImpl"*)* @_ZN3net14MDnsClientImplD2Ev
@_ZN3net16MDnsListenerImplC1EtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base5ClockEPNS_12MDnsListener8DelegateEPNS_14MDnsClientImplE = hidden unnamed_addr alias void (%"class.net::MDnsListenerImpl"*, i16, %"class.std::__1::basic_string"*, %"class.base::Clock"*, %"class.net::MDnsListener::Delegate"*, %"class.net::MDnsClientImpl"*), void (%"class.net::MDnsListenerImpl"*, i16, %"class.std::__1::basic_string"*, %"class.base::Clock"*, %"class.net::MDnsListener::Delegate"*, %"class.net::MDnsClientImpl"*)* @_ZN3net16MDnsListenerImplC2EtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base5ClockEPNS_12MDnsListener8DelegateEPNS_14MDnsClientImplE
@_ZN3net16MDnsListenerImplD1Ev = hidden unnamed_addr alias void (%"class.net::MDnsListenerImpl"*), void (%"class.net::MDnsListenerImpl"*)* @_ZN3net16MDnsListenerImplD2Ev
@_ZN3net19MDnsTransactionImplC1EtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiRKN4base17RepeatingCallbackIFvNS_15MDnsTransaction6ResultEPKNS_12RecordParsedEEEEPNS_14MDnsClientImplE = hidden unnamed_addr alias void (%"class.net::MDnsTransactionImpl"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback.201"*, %"class.net::MDnsClientImpl"*), void (%"class.net::MDnsTransactionImpl"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback.201"*, %"class.net::MDnsClientImpl"*)* @_ZN3net19MDnsTransactionImplC2EtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiRKN4base17RepeatingCallbackIFvNS_15MDnsTransaction6ResultEPKNS_12RecordParsedEEEEPNS_14MDnsClientImplE
@_ZN3net19MDnsTransactionImplD1Ev = hidden unnamed_addr alias void (%"class.net::MDnsTransactionImpl"*), void (%"class.net::MDnsTransactionImpl"*)* @_ZN3net19MDnsTransactionImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21MDnsSocketFactoryImpl13CreateSocketsEPNSt3__16vectorINS1_10unique_ptrINS_20DatagramServerSocketENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.net::MDnsSocketFactoryImpl"* nocapture readonly, %"class.std::__1::vector.8"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.18", align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = bitcast %"class.std::__1::vector.18"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.18"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN3net23GetMDnsInterfacesToBindEv(%"class.std::__1::vector.18"* nonnull sret %3) #17
  %8 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.18"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  %13 = inttoptr i64 %11 to %"struct.std::__1::pair"*
  br i1 %12, label %23, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.net::MDnsSocketFactoryImpl", %"class.net::MDnsSocketFactoryImpl"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %1, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr"** %18 to i64*
  br label %30

21:                                               ; preds = %59
  %22 = inttoptr i64 %62 to %"struct.std::__1::pair"*
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi %"struct.std::__1::pair"* [ %13, %2 ], [ %22, %21 ]
  %25 = icmp eq %"struct.std::__1::pair"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = ptrtoint %"struct.std::__1::pair"* %24 to i64
  store i64 %27, i64* %8, align 8
  %28 = bitcast %"struct.std::__1::pair"* %24 to i8*
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %23, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void

30:                                               ; preds = %14, %59
  %31 = phi %"struct.std::__1::pair"* [ %13, %14 ], [ %66, %59 ]
  %32 = phi i64 [ 0, %14 ], [ %60, %59 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  store %"class.net::DatagramServerSocket"* inttoptr (i64 -6148914691236517206 to %"class.net::DatagramServerSocket"*), %"class.net::DatagramServerSocket"** %16, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 %32, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 %32, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = load %"class.net::NetLog"*, %"class.net::NetLog"** %17, align 8
  %38 = call %"class.net::DatagramServerSocket"* @_ZN3net23CreateAndBindMDnsSocketENS_13AddressFamilyEjPNS_6NetLogE(i32 %34, i32 %36, %"class.net::NetLog"* %37) #17
  store %"class.net::DatagramServerSocket"* %38, %"class.net::DatagramServerSocket"** %16, align 8
  %39 = icmp eq %"class.net::DatagramServerSocket"* %38, null
  %40 = ptrtoint %"class.net::DatagramServerSocket"* %38 to i64
  br i1 %39, label %41, label %42

41:                                               ; preds = %30
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %16, align 8
  br label %59

42:                                               ; preds = %30
  %43 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %45 = icmp ult %"class.std::__1::unique_ptr"* %43, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %16, align 8
  %47 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  store i64 %40, i64* %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 1
  %49 = ptrtoint %"class.std::__1::unique_ptr"* %48 to i64
  store i64 %49, i64* %20, align 8
  br label %51

50:                                               ; preds = %42
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net20DatagramServerSocketENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.8"* %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %51

51:                                               ; preds = %50, %46
  %52 = load %"class.net::DatagramServerSocket"*, %"class.net::DatagramServerSocket"** %16, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %16, align 8
  %53 = icmp eq %"class.net::DatagramServerSocket"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %51
  %55 = bitcast %"class.net::DatagramServerSocket"* %52 to void (%"class.net::DatagramServerSocket"*)***
  %56 = load void (%"class.net::DatagramServerSocket"*)**, void (%"class.net::DatagramServerSocket"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %56, i64 1
  %58 = load void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %57, align 8
  call void %58(%"class.net::DatagramServerSocket"* nonnull %52) #17
  br label %59

59:                                               ; preds = %41, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %60 = add nuw i64 %32, 1
  %61 = load i64, i64* %8, align 8
  %62 = load i64, i64* %10, align 8
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %60, %64
  %66 = inttoptr i64 %62 to %"struct.std::__1::pair"*
  br i1 %65, label %30, label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net23GetMDnsInterfacesToBindEv(%"class.std::__1::vector.18"* sret) local_unnamed_addr #2

declare %"class.net::DatagramServerSocket"* @_ZN3net23CreateAndBindMDnsSocketENS_13AddressFamilyEjPNS_6NetLogE(i32, i32, %"class.net::NetLog"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnection13SocketHandlerC2ENSt3__110unique_ptrINS_20DatagramServerSocketENS2_14default_deleteIS4_EEEEPS0_(%"class.net::MDnsConnection::SocketHandler"*, %"class.net::DatagramServerSocket"*, %"class.net::MDnsConnection"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.net::DatagramServerSocket"* %1 to i64
  %5 = bitcast %"class.net::MDnsConnection::SocketHandler"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 1
  store %"class.net::MDnsConnection"* %2, %"class.net::MDnsConnection"** %6, align 8
  %7 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 2
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %7) #17
  %8 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 3
  tail call void @_ZN3net11DnsResponseC1Em(%"class.net::DnsResponse"* %8, i64 9000) #17
  %9 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 4
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %9) #17
  %10 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 5
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6
  %12 = bitcast %"class.std::__1::queue"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #17
  ret void
}

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

declare void @_ZN3net11DnsResponseC1Em(%"class.net::DnsResponse"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnection13SocketHandlerD2Ev(%"class.net::MDnsConnection::SocketHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE13DestructRangeEmm(%"class.base::circular_deque"* %3, i64 %5, i64 %7) #17
  %8 = bitcast %"class.std::__1::queue"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #17
  %10 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 4
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %10) #17
  %11 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 3
  tail call void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"* %11) #17
  %12 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 2
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %12) #17
  %13 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.net::DatagramServerSocket"*, %"class.net::DatagramServerSocket"** %13, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %13, align 8
  %15 = icmp eq %"class.net::DatagramServerSocket"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.net::DatagramServerSocket"* %14 to void (%"class.net::DatagramServerSocket"*)***
  %18 = load void (%"class.net::DatagramServerSocket"*)**, void (%"class.net::DatagramServerSocket"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %18, i64 1
  %20 = load void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %19, align 8
  tail call void %20(%"class.net::DatagramServerSocket"* nonnull %14) #17
  br label %21

21:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14MDnsConnection13SocketHandler5StartEv(%"class.net::MDnsConnection::SocketHandler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.net::IPEndPoint", align 2
  %3 = alloca %"class.net::IPEndPoint", align 2
  %4 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %4, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %2) #17
  %5 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.net::DatagramServerSocket"*, %"class.net::DatagramServerSocket"** %5, align 8
  %7 = getelementptr inbounds %"class.net::DatagramServerSocket", %"class.net::DatagramServerSocket"* %6, i64 0, i32 0
  %8 = bitcast %"class.net::DatagramServerSocket"* %6 to i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)***
  %9 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %9, i64 4
  %11 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %10, align 8
  %12 = call i32 %11(%"class.net::DatagramSocket"* %7, %"class.net::IPEndPoint"* nonnull %2) #17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #17
  %16 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* nonnull %2) #17
  call void @_ZN3net8dns_util20GetMdnsGroupEndPointENS_13AddressFamilyE(%"class.net::IPEndPoint"* nonnull sret %3, i32 %16) #17
  %17 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 2 %15, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #17
  %18 = call i32 @_ZN3net14MDnsConnection13SocketHandler6DoLoopEi(%"class.net::MDnsConnection::SocketHandler"* %0, i32 0)
  br label %19

19:                                               ; preds = %1, %14
  %20 = phi i32 [ %18, %14 ], [ %12, %1 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #17
  ret i32 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net8dns_util20GetMdnsGroupEndPointENS_13AddressFamilyE(%"class.net::IPEndPoint"* sret, i32) local_unnamed_addr #2

declare i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14MDnsConnection13SocketHandler6DoLoopEi(%"class.net::MDnsConnection::SocketHandler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 3, i32 1
  %9 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 2
  %10 = ptrtoint %"class.net::MDnsConnection::SocketHandler"* %0 to i64
  %11 = bitcast %"class.base::OnceCallback"* %3 to i8**
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  br label %13

13:                                               ; preds = %23, %2
  %14 = phi i32 [ %1, %2 ], [ %38, %23 ]
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %13
  %17 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %4, align 8
  %18 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %17, i64 0, i32 2
  %19 = load %"class.net::MDnsConnection::Delegate"*, %"class.net::MDnsConnection::Delegate"** %18, align 8
  %20 = bitcast %"class.net::MDnsConnection::Delegate"* %19 to void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)***
  %21 = load void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)**, void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)*** %20, align 8
  %22 = load void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)*, void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)** %21, align 8
  call void %22(%"class.net::MDnsConnection::Delegate"* %19, %"class.net::DnsResponse"* %5, i32 %14) #17
  br label %23

23:                                               ; preds = %16, %13
  %24 = load %"class.net::DatagramServerSocket"*, %"class.net::DatagramServerSocket"** %6, align 8
  %25 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %7, align 8
  %26 = load i64, i64* %8, align 8
  %27 = trunc i64 %26 to i32
  %28 = call i8* @_Znwm(i64 56) #18, !noalias !2
  %29 = bitcast i8* %28 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %29, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !2
  %30 = getelementptr inbounds i8, i8* %28, i64 32
  %31 = bitcast i8* %30 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::MDnsConnection::SocketHandler"*, i32)* @_ZN3net14MDnsConnection13SocketHandler18OnDatagramReceivedEi to i64), i64 0>, <2 x i64>* %31, align 8, !noalias !2
  %32 = getelementptr inbounds i8, i8* %28, i64 48
  %33 = bitcast i8* %32 to i64*
  store i64 %10, i64* %33, align 8, !noalias !2
  store i8* %28, i8** %11, align 8, !alias.scope !2
  %34 = bitcast %"class.net::DatagramServerSocket"* %24 to i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)***
  %35 = load i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)**, i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)** %35, i64 10
  %37 = load i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)** %36, align 8
  %38 = call i32 %37(%"class.net::DatagramServerSocket"* %24, %"class.net::IOBuffer"* %25, i32 %27, %"class.net::IPEndPoint"* %9, %"class.base::OnceCallback"* nonnull %3) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #17
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %13, label %40

40:                                               ; preds = %23
  %41 = icmp eq i32 %38, -1
  %42 = select i1 %41, i32 0, i32 %38
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnection18OnDatagramReceivedEPNS_11DnsResponseERKNS_10IPEndPointEi(%"class.net::MDnsConnection"* nocapture readonly, %"class.net::DnsResponse"*, %"class.net::IPEndPoint"* nocapture readnone dereferenceable(20), i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 2
  %6 = load %"class.net::MDnsConnection::Delegate"*, %"class.net::MDnsConnection::Delegate"** %5, align 8
  %7 = bitcast %"class.net::MDnsConnection::Delegate"* %6 to void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)***
  %8 = load void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)**, void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)*** %7, align 8
  %9 = load void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)*, void (%"class.net::MDnsConnection::Delegate"*, %"class.net::DnsResponse"*, i32)** %8, align 8
  tail call void %9(%"class.net::MDnsConnection::Delegate"* %6, %"class.net::DnsResponse"* %1, i32 %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnection13SocketHandler18OnDatagramReceivedEi(%"class.net::MDnsConnection::SocketHandler"*, i32) #0 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i32 @_ZN3net14MDnsConnection13SocketHandler6DoLoopEi(%"class.net::MDnsConnection::SocketHandler"* %0, i32 %1)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2, %4
  %8 = phi i32 [ %5, %4 ], [ %1, %2 ]
  %9 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 1
  %10 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %9, align 8
  tail call void @_ZN3net14MDnsConnection11PostOnErrorEPNS0_13SocketHandlerEi(%"class.net::MDnsConnection"* %10, %"class.net::MDnsConnection::SocketHandler"* %0, i32 %8)
  br label %11

11:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnection11PostOnErrorEPNS0_13SocketHandlerEi(%"class.net::MDnsConnection"*, %"class.net::MDnsConnection::SocketHandler"* readnone, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback.72", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %9, align 8
  %11 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.27"* %10, %12
  br i1 %13, label %26, label %14

14:                                               ; preds = %3, %14
  %15 = phi i32 [ %22, %14 ], [ 0, %3 ]
  %16 = phi %"class.std::__1::unique_ptr.27"* [ %23, %14 ], [ %10, %3 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %17, align 8
  %19 = icmp eq %"class.net::MDnsConnection::SocketHandler"* %18, %1
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = add nuw nsw i32 %15, %21
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %16, i64 1
  %24 = icmp eq %"class.std::__1::unique_ptr.27"* %23, %12
  %25 = or i1 %19, %24
  br i1 %25, label %26, label %14

26:                                               ; preds = %14, %3
  %27 = phi i32 [ 0, %3 ], [ %22, %14 ]
  %28 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i64 34) #17
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  %31 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %31) #17
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 180, i32 -1) #17
  %32 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %32 to %"class.std::__1::basic_ostream"*
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i64 17) #17
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %34, i32 %27) #17
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %36, i32 %2) #17
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %31) #17
  br label %38

38:                                               ; preds = %26, %30
  %39 = call dereferenceable(8) %class.scoped_refptr.70* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #17
  %40 = bitcast %class.scoped_refptr.70* %39 to %"class.base::TaskRunner"**
  %41 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %40, align 8
  %42 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 183) #17
  %43 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #17
  %44 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #17, !noalias !7
  %45 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 3, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %45) #17, !noalias !7
  %46 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 3, i32 0, i32 1
  %47 = load i64, i64* %46, align 8, !noalias !7
  %48 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %48, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %47) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17, !noalias !7
  %49 = call i8* @_Znwm(i64 72) #18, !noalias !10
  %50 = bitcast i8* %49 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %50, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS4_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS4_EEiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #17, !noalias !10
  %51 = getelementptr inbounds i8, i8* %49, i64 32
  %52 = bitcast i8* %51 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::MDnsConnection"*, i32)* @_ZN3net14MDnsConnection7OnErrorEi to i64), i64 0>, <2 x i64>* %52, align 8, !noalias !10
  %53 = getelementptr inbounds i8, i8* %49, i64 48
  %54 = bitcast i8* %53 to %"class.base::internal::WeakReference"*
  %55 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %54, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %55) #17, !noalias !10
  %56 = getelementptr inbounds i8, i8* %49, i64 56
  %57 = bitcast i8* %56 to i64*
  %58 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8, !noalias !10
  store i64 %59, i64* %57, align 8, !noalias !10
  %60 = getelementptr inbounds i8, i8* %49, i64 64
  %61 = bitcast i8* %60 to i32*
  store i32 %2, i32* %61, align 4, !noalias !10
  %62 = bitcast %"class.base::OnceCallback.72"* %7 to i8**
  store i8* %49, i8** %62, align 8, !alias.scope !10
  %63 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %41, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback.72"* nonnull %7) #17
  %64 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #17
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %48) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnection13SocketHandler4SendERK13scoped_refptrINS_8IOBufferEEj(%"class.net::MDnsConnection::SocketHandler"*, %class.scoped_refptr.44* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 4, !range !15
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %38, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %1, i64 0, i32 0
  %11 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %10, align 8
  %12 = icmp eq %"class.net::IOBuffer"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %8, %13
  %17 = ptrtoint %"class.net::IOBuffer"* %11 to i64
  %18 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %9, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %18, i64 1) #17
  %19 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %9, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %21) #17
  %23 = bitcast %"struct.std::__1::pair.65"* %22 to i64*
  store i64 %17, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %22, i64 0, i32 1
  store i32 %2, i32* %24, align 8
  %25 = load i64, i64* %20, align 8
  %26 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  %29 = icmp eq i64 %25, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %16
  store i64 0, i64* %20, align 8
  br label %34

31:                                               ; preds = %16
  %32 = add i64 %25, 1
  store i64 %32, i64* %20, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31, %30
  br label %35

35:                                               ; preds = %34, %31
  %36 = phi i64 [ %28, %34 ], [ %25, %31 ]
  %37 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZNK4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %36) #17
  br label %65

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.net::DatagramServerSocket"*, %"class.net::DatagramServerSocket"** %39, align 8
  %41 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %1, i64 0, i32 0
  %42 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %41, align 8
  %43 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 4
  %44 = ptrtoint %"class.net::MDnsConnection::SocketHandler"* %0 to i64
  %45 = tail call i8* @_Znwm(i64 56) #18, !noalias !16
  %46 = bitcast i8* %45 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %46, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !16
  %47 = getelementptr inbounds i8, i8* %45, i64 32
  %48 = bitcast i8* %47 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::MDnsConnection::SocketHandler"*, i32)* @_ZN3net14MDnsConnection13SocketHandler8SendDoneEi to i64), i64 0>, <2 x i64>* %48, align 8, !noalias !16
  %49 = getelementptr inbounds i8, i8* %45, i64 48
  %50 = bitcast i8* %49 to i64*
  store i64 %44, i64* %50, align 8, !noalias !16
  %51 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %45, i8** %51, align 8, !alias.scope !16
  %52 = bitcast %"class.net::DatagramServerSocket"* %40 to i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)***
  %53 = load i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)**, i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)** %53, i64 11
  %55 = load i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::DatagramServerSocket"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*)** %54, align 8
  %56 = call i32 %55(%"class.net::DatagramServerSocket"* %40, %"class.net::IOBuffer"* %42, i32 %2, %"class.net::IPEndPoint"* dereferenceable(20) %43, %"class.base::OnceCallback"* nonnull %4) #17
  %57 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %57) #17
  %58 = icmp eq i32 %56, -1
  br i1 %58, label %59, label %60

59:                                               ; preds = %38
  store i8 1, i8* %5, align 4
  br label %65

60:                                               ; preds = %38
  %61 = icmp slt i32 %56, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 1
  %64 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %63, align 8
  call void @_ZN3net14MDnsConnection11PostOnErrorEPNS0_13SocketHandlerEi(%"class.net::MDnsConnection"* %64, %"class.net::MDnsConnection::SocketHandler"* %0, i32 %56)
  br label %65

65:                                               ; preds = %59, %62, %60, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnection13SocketHandler8SendDoneEi(%"class.net::MDnsConnection::SocketHandler"*, i32) #0 align 2 {
  %3 = alloca %"struct.std::__1::pair.65", align 8
  %4 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 5
  store i8 0, i8* %4, align 4
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 1
  %8 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %7, align 8
  tail call void @_ZN3net14MDnsConnection11PostOnErrorEPNS0_13SocketHandlerEi(%"class.net::MDnsConnection"* %8, %"class.net::MDnsConnection::SocketHandler"* %0, i32 %1)
  %9 = load i8, i8* %4, align 4, !range !15
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %64

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6, i32 0, i32 2
  %15 = bitcast %"struct.std::__1::pair.65"* %3 to i8*
  %16 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %3, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %3, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %12, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %12, i64 0, i32 0
  %21 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %3, i64 0, i32 1
  %23 = bitcast i32* %22 to i64*
  br label %24

24:                                               ; preds = %11, %61
  %25 = load i64, i64* %13, align 8
  %26 = load i64, i64* %14, align 8
  %27 = icmp eq i64 %25, %26
  br i1 %27, label %64, label %28

28:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #17
  store i64 -6148914691236517206, i64* %23, align 8
  %29 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %25) #17
  %30 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %30, align 8
  store %"class.net::IOBuffer"* %31, %"class.net::IOBuffer"** %17, align 8
  %32 = icmp eq %"class.net::IOBuffer"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %31, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  br label %36

36:                                               ; preds = %28, %33
  %37 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %29, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %18, align 8
  %39 = load i64, i64* %13, align 8
  %40 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %39) #17
  %41 = load i64, i64* %13, align 8
  %42 = add i64 %41, 1
  %43 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %42) #17
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %19, %"struct.std::__1::pair.65"* %40, %"struct.std::__1::pair.65"* %43) #17
  %44 = load i64, i64* %13, align 8
  %45 = add i64 %44, 1
  %46 = load i64, i64* %21, align 8
  %47 = icmp eq i64 %45, %46
  %48 = select i1 %47, i64 0, i64 %45
  store i64 %48, i64* %13, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %20) #17
  call void @_ZN3net14MDnsConnection13SocketHandler4SendERK13scoped_refptrINS_8IOBufferEEj(%"class.net::MDnsConnection::SocketHandler"* %0, %class.scoped_refptr.44* nonnull dereferenceable(8) %16, i32 %38)
  br i1 %32, label %61, label %49

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %31, i64 0, i32 1
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe.45", %"class.base::RefCountedThreadSafe.45"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw sub i32* %51, i32 1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe.45", %"class.base::RefCountedThreadSafe.45"* %50, i64 -2
  %56 = bitcast %"class.base::RefCountedThreadSafe.45"* %55 to %"class.net::IOBuffer"*
  %57 = bitcast %"class.base::RefCountedThreadSafe.45"* %55 to void (%"class.net::IOBuffer"*)***
  %58 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %58, i64 1
  %60 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %59, align 8
  tail call void %60(%"class.net::IOBuffer"* nonnull %56) #17
  br label %61

61:                                               ; preds = %36, %49, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #17
  %62 = load i8, i8* %4, align 4, !range !15
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %24, label %64

64:                                               ; preds = %61, %24, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnectionC2EPNS0_8DelegateE(%"class.net::MDnsConnection"*, %"class.net::MDnsConnection::Delegate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net14MDnsConnectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.25"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #17
  %6 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 2
  store %"class.net::MDnsConnection::Delegate"* %1, %"class.net::MDnsConnection::Delegate"** %6, align 8
  %7 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 3, i32 0
  %8 = ptrtoint %"class.net::MDnsConnection"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %7, i64 %8) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnectionD2Ev(%"class.net::MDnsConnection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net14MDnsConnectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #17
  %4 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.27"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::unique_ptr.27"* %6 to i8*
  %10 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.27"* %11, %6
  br i1 %12, label %26, label %13

13:                                               ; preds = %8, %21
  %14 = phi %"class.std::__1::unique_ptr.27"* [ %15, %21 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %14, i64 -1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %16, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %16, align 8
  %18 = icmp eq %"class.net::MDnsConnection::SocketHandler"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::unique_ptr.27"* %15 to %"struct.std::__1::default_delete.31"*
  tail call void @_ZNKSt3__114default_deleteIN3net14MDnsConnection13SocketHandlerEEclEPS3_(%"struct.std::__1::default_delete.31"* %20, %"class.net::MDnsConnection::SocketHandler"* nonnull %17) #17
  br label %21

21:                                               ; preds = %19, %13
  %22 = icmp eq %"class.std::__1::unique_ptr.27"* %15, %6
  br i1 %22, label %23, label %13

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.25"* %4 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %8
  %27 = phi i8* [ %25, %23 ], [ %9, %8 ]
  store %"class.std::__1::unique_ptr.27"* %6, %"class.std::__1::unique_ptr.27"** %10, align 8
  tail call void @_ZdlPv(i8* %27) #18
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnectionD0Ev(%"class.net::MDnsConnection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net14MDnsConnectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #17
  %4 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.27"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::unique_ptr.27"* %6 to i8*
  %10 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.27"* %11, %6
  br i1 %12, label %26, label %13

13:                                               ; preds = %8, %21
  %14 = phi %"class.std::__1::unique_ptr.27"* [ %15, %21 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %14, i64 -1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %16, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %16, align 8
  %18 = icmp eq %"class.net::MDnsConnection::SocketHandler"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::unique_ptr.27"* %15 to %"struct.std::__1::default_delete.31"*
  tail call void @_ZNKSt3__114default_deleteIN3net14MDnsConnection13SocketHandlerEEclEPS3_(%"struct.std::__1::default_delete.31"* %20, %"class.net::MDnsConnection::SocketHandler"* nonnull %17) #17
  br label %21

21:                                               ; preds = %19, %13
  %22 = icmp eq %"class.std::__1::unique_ptr.27"* %15, %6
  br i1 %22, label %23, label %13

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.25"* %4 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %8
  %27 = phi i8* [ %25, %23 ], [ %9, %8 ]
  store %"class.std::__1::unique_ptr.27"* %6, %"class.std::__1::unique_ptr.27"** %10, align 8
  tail call void @_ZdlPv(i8* %27) #18
  br label %28

28:                                               ; preds = %1, %26
  %29 = bitcast %"class.net::MDnsConnection"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14MDnsConnection4InitEPNS_17MDnsSocketFactoryE(%"class.net::MDnsConnection"*, %"class.net::MDnsSocketFactory"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.8", align 8
  %4 = alloca %"class.std::__1::unique_ptr.27", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = bitcast %"class.std::__1::vector.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #17
  %10 = bitcast %"class.net::MDnsSocketFactory"* %1 to void (%"class.net::MDnsSocketFactory"*, %"class.std::__1::vector.8"*)***
  %11 = load void (%"class.net::MDnsSocketFactory"*, %"class.std::__1::vector.8"*)**, void (%"class.net::MDnsSocketFactory"*, %"class.std::__1::vector.8"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::MDnsSocketFactory"*, %"class.std::__1::vector.8"*)*, void (%"class.net::MDnsSocketFactory"*, %"class.std::__1::vector.8"*)** %11, i64 2
  %13 = load void (%"class.net::MDnsSocketFactory"*, %"class.std::__1::vector.8"*)*, void (%"class.net::MDnsSocketFactory"*, %"class.std::__1::vector.8"*)** %12, align 8
  call void %13(%"class.net::MDnsSocketFactory"* %1, %"class.std::__1::vector.8"* nonnull %3) #17
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %15 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr"* %14, %15
  br i1 %16, label %27, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::unique_ptr.27"* %4 to i8*
  %19 = ptrtoint %"class.net::MDnsConnection"* %0 to i64
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.27"* %4 to i8**
  %22 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.27"** %22 to i64*
  %26 = bitcast %"class.std::__1::unique_ptr.27"* %4 to %"struct.std::__1::default_delete.31"*
  br label %40

27:                                               ; preds = %70, %2
  %28 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1, i32 0, i32 1
  %30 = bitcast %"class.std::__1::unique_ptr.27"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.25"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %73, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %28, i64 0, i32 0, i32 0
  %37 = bitcast %"class.logging::LogMessage"* %5 to i8*
  %38 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %38 to %"class.std::__1::basic_ostream"*
  br label %77

40:                                               ; preds = %17, %70
  %41 = phi %"class.std::__1::unique_ptr"* [ %14, %17 ], [ %71, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %42 = call i8* @_Znwm(i64 208) #18
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::unique_ptr"* %41 to i64*
  %45 = load i64, i64* %44, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %43, align 8
  %46 = bitcast i8* %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %42, i64 8
  %48 = bitcast i8* %47 to i64*
  store i64 %19, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %42, i64 16
  %50 = bitcast i8* %49 to %"class.net::IPEndPoint"*
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %50) #17
  %51 = getelementptr inbounds i8, i8* %42, i64 40
  %52 = bitcast i8* %51 to %"class.net::DnsResponse"*
  call void @_ZN3net11DnsResponseC1Em(%"class.net::DnsResponse"* %52, i64 9000) #17
  %53 = getelementptr inbounds i8, i8* %42, i64 152
  %54 = bitcast i8* %53 to %"class.net::IPEndPoint"*
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %54) #17
  %55 = getelementptr inbounds i8, i8* %42, i64 172
  store i8 0, i8* %55, align 4
  %56 = getelementptr inbounds i8, i8* %42, i64 176
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #17
  store i8* %42, i8** %21, align 8
  %57 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %22, align 8
  %58 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %23, align 8
  %59 = icmp ult %"class.std::__1::unique_ptr.27"* %57, %58
  br i1 %59, label %60, label %65

60:                                               ; preds = %40
  %61 = ptrtoint i8* %42 to i64
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %20, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.27"* %57 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %57, i64 1
  %64 = ptrtoint %"class.std::__1::unique_ptr.27"* %63 to i64
  store i64 %64, i64* %25, align 8
  br label %66

65:                                               ; preds = %40
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net14MDnsConnection13SocketHandlerENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.25"* %24, %"class.std::__1::unique_ptr.27"* nonnull dereferenceable(8) %4) #17
  br label %66

66:                                               ; preds = %60, %65
  %67 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %20, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %20, align 8
  %68 = icmp eq %"class.net::MDnsConnection::SocketHandler"* %67, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  call void @_ZNKSt3__114default_deleteIN3net14MDnsConnection13SocketHandlerEEclEPS3_(%"struct.std::__1::default_delete.31"* nonnull %26, %"class.net::MDnsConnection::SocketHandler"* nonnull %67) #17
  br label %70

70:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 1
  %72 = icmp eq %"class.std::__1::unique_ptr"* %71, %15
  br i1 %72, label %27, label %40

73:                                               ; preds = %135, %27
  %74 = phi i32 [ -2, %27 ], [ %137, %135 ]
  %75 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i64 34) #17
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %143, label %153

77:                                               ; preds = %35, %135
  %78 = phi i64 [ %33, %35 ], [ %139, %135 ]
  %79 = phi i32 [ -2, %35 ], [ %137, %135 ]
  %80 = phi i64 [ 0, %35 ], [ %136, %135 ]
  %81 = inttoptr i64 %78 to %"class.std::__1::unique_ptr.27"*
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %81, i64 %80, i32 0, i32 0, i32 0
  %83 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %82, align 8
  %84 = call i32 @_ZN3net14MDnsConnection13SocketHandler5StartEv(%"class.net::MDnsConnection::SocketHandler"* %83)
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %133, label %86

86:                                               ; preds = %77
  %87 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %36, align 8
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %87, i64 %80
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %88, i64 1
  %90 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %29, align 8
  %91 = icmp eq %"class.std::__1::unique_ptr.27"* %89, %90
  br i1 %91, label %111, label %92

92:                                               ; preds = %86, %104
  %93 = phi %"class.std::__1::unique_ptr.27"* [ %106, %104 ], [ %88, %86 ]
  %94 = phi %"class.std::__1::unique_ptr.27"* [ %105, %104 ], [ %89, %86 ]
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.std::__1::unique_ptr.27"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %95, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %93, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.27"* %93 to i64*
  store i64 %97, i64* %100, align 8
  %101 = icmp eq %"class.net::MDnsConnection::SocketHandler"* %99, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %92
  %103 = bitcast %"class.std::__1::unique_ptr.27"* %93 to %"struct.std::__1::default_delete.31"*
  call void @_ZNKSt3__114default_deleteIN3net14MDnsConnection13SocketHandlerEEclEPS3_(%"struct.std::__1::default_delete.31"* %103, %"class.net::MDnsConnection::SocketHandler"* nonnull %99) #17
  br label %104

104:                                              ; preds = %102, %92
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %94, i64 1
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %93, i64 1
  %107 = icmp eq %"class.std::__1::unique_ptr.27"* %105, %90
  br i1 %107, label %108, label %92

108:                                              ; preds = %104
  %109 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %29, align 8
  %110 = icmp eq %"class.std::__1::unique_ptr.27"* %109, %106
  br i1 %110, label %124, label %111

111:                                              ; preds = %108, %86
  %112 = phi %"class.std::__1::unique_ptr.27"* [ %106, %108 ], [ %88, %86 ]
  %113 = phi %"class.std::__1::unique_ptr.27"* [ %109, %108 ], [ %89, %86 ]
  br label %114

114:                                              ; preds = %122, %111
  %115 = phi %"class.std::__1::unique_ptr.27"* [ %116, %122 ], [ %113, %111 ]
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %115, i64 -1
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %117, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %117, align 8
  %119 = icmp eq %"class.net::MDnsConnection::SocketHandler"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %114
  %121 = bitcast %"class.std::__1::unique_ptr.27"* %116 to %"struct.std::__1::default_delete.31"*
  call void @_ZNKSt3__114default_deleteIN3net14MDnsConnection13SocketHandlerEEclEPS3_(%"struct.std::__1::default_delete.31"* %121, %"class.net::MDnsConnection::SocketHandler"* nonnull %118) #17
  br label %122

122:                                              ; preds = %120, %114
  %123 = icmp eq %"class.std::__1::unique_ptr.27"* %116, %112
  br i1 %123, label %124, label %114

124:                                              ; preds = %122, %108
  %125 = phi %"class.std::__1::unique_ptr.27"* [ %106, %108 ], [ %112, %122 ]
  store %"class.std::__1::unique_ptr.27"* %125, %"class.std::__1::unique_ptr.27"** %29, align 8
  %126 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i64 34) #17
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %135

128:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %37) #17
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 157, i32 -1) #17
  %129 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i64 21) #17
  %130 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %129, i64 %80) #17
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %130, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #17
  %132 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %131, i32 %84) #17
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %37) #17
  br label %135

133:                                              ; preds = %77
  %134 = add nuw i64 %80, 1
  br label %135

135:                                              ; preds = %128, %124, %133
  %136 = phi i64 [ %134, %133 ], [ %80, %124 ], [ %80, %128 ]
  %137 = phi i32 [ %79, %133 ], [ %84, %124 ], [ %84, %128 ]
  %138 = load i64, i64* %30, align 8
  %139 = load i64, i64* %32, align 8
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 3
  %142 = icmp ult i64 %136, %141
  br i1 %142, label %77, label %73

143:                                              ; preds = %73
  %144 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %144) #17
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 162, i32 -1) #17
  %145 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %146 = bitcast %"class.std::__1::basic_ostringstream"* %145 to %"class.std::__1::basic_ostream"*
  %147 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %146, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 14) #17
  %148 = load i64, i64* %30, align 8
  %149 = load i64, i64* %32, align 8
  %150 = sub i64 %148, %149
  %151 = ashr exact i64 %150, 3
  %152 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %147, i64 %151) #17
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %144) #17
  br label %153

153:                                              ; preds = %73, %143
  %154 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %28, i64 0, i32 0, i32 0
  %155 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %154, align 8
  %156 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %29, align 8
  %157 = icmp eq %"class.std::__1::unique_ptr.27"* %155, %156
  %158 = select i1 %157, i32 %74, i32 0
  %159 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %160 = icmp eq %"class.std::__1::unique_ptr"* %159, null
  br i1 %160, label %183, label %161

161:                                              ; preds = %153
  %162 = bitcast %"class.std::__1::unique_ptr"* %159 to i8*
  %163 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %164 = icmp eq %"class.std::__1::unique_ptr"* %163, %159
  br i1 %164, label %181, label %165

165:                                              ; preds = %161, %176
  %166 = phi %"class.std::__1::unique_ptr"* [ %167, %176 ], [ %163, %161 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %166, i64 -1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.net::DatagramServerSocket"*, %"class.net::DatagramServerSocket"** %168, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %168, align 8
  %170 = icmp eq %"class.net::DatagramServerSocket"* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.net::DatagramServerSocket"* %169 to void (%"class.net::DatagramServerSocket"*)***
  %173 = load void (%"class.net::DatagramServerSocket"*)**, void (%"class.net::DatagramServerSocket"*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %173, i64 1
  %175 = load void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %174, align 8
  call void %175(%"class.net::DatagramServerSocket"* nonnull %169) #17
  br label %176

176:                                              ; preds = %171, %165
  %177 = icmp eq %"class.std::__1::unique_ptr"* %167, %159
  br i1 %177, label %178, label %165

178:                                              ; preds = %176
  %179 = bitcast %"class.std::__1::vector.8"* %3 to i8**
  %180 = load i8*, i8** %179, align 8
  br label %181

181:                                              ; preds = %178, %161
  %182 = phi i8* [ %180, %178 ], [ %162, %161 ]
  store %"class.std::__1::unique_ptr"* %159, %"class.std::__1::unique_ptr"** %9, align 8
  call void @_ZdlPv(i8* %182) #18
  br label %183

183:                                              ; preds = %153, %181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  ret i32 %158
}

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnection4SendERK13scoped_refptrINS_8IOBufferEEj(%"class.net::MDnsConnection"* nocapture readonly, %class.scoped_refptr.44* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %4, align 8
  %6 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.27"* %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %3
  ret void

10:                                               ; preds = %3, %10
  %11 = phi %"class.std::__1::unique_ptr.27"* [ %14, %10 ], [ %5, %3 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %12, align 8
  tail call void @_ZN3net14MDnsConnection13SocketHandler4SendERK13scoped_refptrINS_8IOBufferEEj(%"class.net::MDnsConnection::SocketHandler"* %13, %class.scoped_refptr.44* dereferenceable(8) %1, i32 %2)
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %11, i64 1
  %15 = icmp eq %"class.std::__1::unique_ptr.27"* %14, %7
  br i1 %15, label %9, label %10
}

declare dereferenceable(8) %class.scoped_refptr.70* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.72"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsConnection7OnErrorEi(%"class.net::MDnsConnection"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %0, i64 0, i32 2
  %4 = load %"class.net::MDnsConnection::Delegate"*, %"class.net::MDnsConnection::Delegate"** %3, align 8
  %5 = bitcast %"class.net::MDnsConnection::Delegate"* %4 to void (%"class.net::MDnsConnection::Delegate"*, i32)***
  %6 = load void (%"class.net::MDnsConnection::Delegate"*, i32)**, void (%"class.net::MDnsConnection::Delegate"*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.net::MDnsConnection::Delegate"*, i32)*, void (%"class.net::MDnsConnection::Delegate"*, i32)** %6, i64 1
  %8 = load void (%"class.net::MDnsConnection::Delegate"*, i32)*, void (%"class.net::MDnsConnection::Delegate"*, i32)** %7, align 8
  tail call void %8(%"class.net::MDnsConnection::Delegate"* %4, i32 %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4CoreC2EPN4base5ClockEPNS2_12OneShotTimerE(%"class.net::MDnsClientImpl::Core"*, %"class.base::Clock"*, %"class.base::OneShotTimer"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %4) #17
  %5 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14MDnsClientImpl4CoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3
  tail call void @_ZN3net9MDnsCacheC1Ev(%"class.net::MDnsCache"* %11) #17
  %12 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 4
  store %"class.base::Clock"* %1, %"class.base::Clock"** %12, align 8
  %13 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 5
  store %"class.base::OneShotTimer"* %2, %"class.base::OneShotTimer"** %13, align 8
  %14 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 7
  %16 = tail call i8* @_Znwm(i64 56) #18
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net14MDnsConnectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #17
  %19 = getelementptr inbounds i8, i8* %16, i64 32
  %20 = bitcast i8* %19 to %"class.net::MDnsConnection::Delegate"**
  store %"class.net::MDnsConnection::Delegate"* %5, %"class.net::MDnsConnection::Delegate"** %20, align 8
  %21 = getelementptr inbounds i8, i8* %16, i64 40
  %22 = bitcast i8* %21 to %"class.base::internal::WeakPtrFactoryBase"*
  %23 = ptrtoint i8* %16 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %22, i64 %23) #17
  %24 = bitcast %"class.std::__1::unique_ptr.96"* %15 to i64*
  store i64 %23, i64* %24, align 8
  ret void
}

declare void @_ZN3net9MDnsCacheC1Ev(%"class.net::MDnsCache"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4CoreD2Ev(%"class.net::MDnsClientImpl::Core"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14MDnsClientImpl4CoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 5
  %4 = bitcast %"class.base::OneShotTimer"** %3 to %"class.base::internal::TimerBase"**
  %5 = load %"class.base::internal::TimerBase"*, %"class.base::internal::TimerBase"** %4, align 8
  %6 = bitcast %"class.base::internal::TimerBase"* %5 to void (%"class.base::internal::TimerBase"*)***
  %7 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %7, i64 3
  %9 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %8, align 8
  tail call void %9(%"class.base::internal::TimerBase"* %5) #17
  %10 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %11 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %10, align 8
  store %"class.net::MDnsConnection"* null, %"class.net::MDnsConnection"** %10, align 8
  %12 = icmp eq %"class.net::MDnsConnection"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.net::MDnsConnection"* %11 to void (%"class.net::MDnsConnection"*)***
  %15 = load void (%"class.net::MDnsConnection"*)**, void (%"class.net::MDnsConnection"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::MDnsConnection"*)*, void (%"class.net::MDnsConnection"*)** %15, i64 1
  %17 = load void (%"class.net::MDnsConnection"*)*, void (%"class.net::MDnsConnection"*)** %16, align 8
  tail call void %17(%"class.net::MDnsConnection"* nonnull %11) #17
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3
  tail call void @_ZN3net9MDnsCacheD1Ev(%"class.net::MDnsCache"* %19) #17
  %20 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node"**
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE(%"class.std::__1::__tree"* %20, %"class.std::__1::__tree_node"* %23) #17
  %24 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %24) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net9MDnsCacheD1Ev(%"class.net::MDnsCache"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4CoreD0Ev(%"class.net::MDnsClientImpl::Core"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14MDnsClientImpl4CoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 5
  %4 = bitcast %"class.base::OneShotTimer"** %3 to %"class.base::internal::TimerBase"**
  %5 = load %"class.base::internal::TimerBase"*, %"class.base::internal::TimerBase"** %4, align 8
  %6 = bitcast %"class.base::internal::TimerBase"* %5 to void (%"class.base::internal::TimerBase"*)***
  %7 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %7, i64 3
  %9 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %8, align 8
  tail call void %9(%"class.base::internal::TimerBase"* %5) #17
  %10 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %11 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %10, align 8
  store %"class.net::MDnsConnection"* null, %"class.net::MDnsConnection"** %10, align 8
  %12 = icmp eq %"class.net::MDnsConnection"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.net::MDnsConnection"* %11 to void (%"class.net::MDnsConnection"*)***
  %15 = load void (%"class.net::MDnsConnection"*)**, void (%"class.net::MDnsConnection"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::MDnsConnection"*)*, void (%"class.net::MDnsConnection"*)** %15, i64 1
  %17 = load void (%"class.net::MDnsConnection"*)*, void (%"class.net::MDnsConnection"*)** %16, align 8
  tail call void %17(%"class.net::MDnsConnection"* nonnull %11) #17
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3
  tail call void @_ZN3net9MDnsCacheD1Ev(%"class.net::MDnsCache"* %19) #17
  %20 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node"**
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE(%"class.std::__1::__tree"* %20, %"class.std::__1::__tree_node"* %23) #17
  %24 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %24) #17
  %25 = bitcast %"class.net::MDnsClientImpl::Core"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14MDnsClientImpl4Core4InitEPNS_17MDnsSocketFactoryE(%"class.net::MDnsClientImpl::Core"* nocapture readonly, %"class.net::MDnsSocketFactory"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 5
  %5 = bitcast %"class.base::OneShotTimer"** %4 to %"class.base::internal::TimerBase"**
  %6 = load %"class.base::internal::TimerBase"*, %"class.base::internal::TimerBase"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %6) #17
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 215, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #17
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %13 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %12, align 8
  %14 = call i32 @_ZN3net14MDnsConnection4InitEPNS_17MDnsSocketFactoryE(%"class.net::MDnsConnection"* %13, %"class.net::MDnsSocketFactory"* %1)
  ret i32 %14
}

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14MDnsClientImpl4Core9SendQueryEtRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::MDnsClientImpl::Core"* nocapture readonly, i16 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.net::DnsQuery", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %class.scoped_refptr.44, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #17
  %11 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %20 = select i1 %16, i8* %18, i8* %19
  store i8* %20, i8** %12, align 8
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %15 to i64
  %25 = select i1 %16, i64 %23, i64 %24
  store i64 %25, i64* %21, align 8
  %26 = call zeroext i1 @_ZN3net28DNSDomainFromUnrestrictedDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #17
  br i1 %26, label %29, label %27

27:                                               ; preds = %3
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %86

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.net::DnsQuery"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.net::DnsQuery", %"class.net::DnsQuery"* %6, i64 0, i32 1, i32 0
  %33 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %34 = bitcast %"class.net::DnsQuery"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #17
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i8*, i8** %10, align 8
  %41 = select i1 %39, i8* %40, i8* %9
  store i8* %41, i8** %35, align 8
  %42 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %43 = load i64, i64* %30, align 8
  %44 = zext i8 %38 to i64
  %45 = select i1 %39, i64 %43, i64 %44
  store i64 %45, i64* %42, align 8
  call void @_ZN3net8DnsQueryC1EtRKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtPKNS_14OptRecordRdataENS0_15PaddingStrategyE(%"class.net::DnsQuery"* nonnull %6, i16 zeroext 0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, i16 zeroext %1, %"class.net::OptRecordRdata"* null, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #17
  call void @_ZN3net8DnsQuery9set_flagsEt(%"class.net::DnsQuery"* nonnull %6, i16 zeroext 0) #17
  %46 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %47 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %46, align 8
  %48 = bitcast %class.scoped_refptr.44* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #17
  %49 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %32, align 8
  %50 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %49, i64 0, i32 0
  %51 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %8, i64 0, i32 0
  store %"class.net::IOBuffer"* %50, %"class.net::IOBuffer"** %51, align 8
  %52 = icmp eq %"class.net::IOBufferWithSize"* %49, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %29
  %54 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %49, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic
  %56 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %32, align 8
  br label %57

57:                                               ; preds = %29, %53
  %58 = phi %"class.net::IOBufferWithSize"* [ null, %29 ], [ %56, %53 ]
  %59 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %58, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %47, i64 0, i32 1, i32 0, i32 0
  %62 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %61, align 8
  %63 = getelementptr inbounds %"class.net::MDnsConnection", %"class.net::MDnsConnection"* %47, i64 0, i32 1, i32 0, i32 1
  %64 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %63, align 8
  %65 = icmp eq %"class.std::__1::unique_ptr.27"* %62, %64
  br i1 %65, label %72, label %66

66:                                               ; preds = %57, %66
  %67 = phi %"class.std::__1::unique_ptr.27"* [ %70, %66 ], [ %62, %57 ]
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %68, align 8
  call void @_ZN3net14MDnsConnection13SocketHandler4SendERK13scoped_refptrINS_8IOBufferEEj(%"class.net::MDnsConnection::SocketHandler"* %69, %class.scoped_refptr.44* nonnull dereferenceable(8) %8, i32 %60) #17
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %67, i64 1
  %71 = icmp eq %"class.std::__1::unique_ptr.27"* %70, %64
  br i1 %71, label %72, label %66

72:                                               ; preds = %66, %57
  br i1 %52, label %85, label %73

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %49, i64 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe.45", %"class.base::RefCountedThreadSafe.45"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %85

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe.45", %"class.base::RefCountedThreadSafe.45"* %74, i64 -2
  %80 = bitcast %"class.base::RefCountedThreadSafe.45"* %79 to %"class.net::IOBuffer"*
  %81 = bitcast %"class.base::RefCountedThreadSafe.45"* %79 to void (%"class.net::IOBuffer"*)***
  %82 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %82, i64 1
  %84 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %83, align 8
  call void %84(%"class.net::IOBuffer"* nonnull %80) #17
  br label %85

85:                                               ; preds = %72, %73, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #17
  call void @_ZN3net8DnsQueryD1Ev(%"class.net::DnsQuery"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br label %86

86:                                               ; preds = %27, %85
  %87 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %27 ], [ %36, %85 ]
  %88 = phi i1 [ false, %27 ], [ true, %85 ]
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  %93 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %93) #18
  br label %94

94:                                               ; preds = %86, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  ret i1 %88
}

declare zeroext i1 @_ZN3net28DNSDomainFromUnrestrictedDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN3net8DnsQueryC1EtRKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtPKNS_14OptRecordRdataENS0_15PaddingStrategyE(%"class.net::DnsQuery"*, i16 zeroext, %"class.base::BasicStringPiece"* dereferenceable(16), i16 zeroext, %"class.net::OptRecordRdata"*, i32) unnamed_addr #2

declare void @_ZN3net8DnsQuery9set_flagsEt(%"class.net::DnsQuery"*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net8DnsQueryD1Ev(%"class.net::DnsQuery"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core12HandlePacketEPNS_11DnsResponseEi(%"class.net::MDnsClientImpl::Core"*, %"class.net::DnsResponse"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::map.114", align 8
  %5 = alloca %"class.net::DnsRecordParser", align 8
  %6 = alloca %"class.net::MDnsCache::Key", align 8
  %7 = alloca %"struct.std::__1::pair.137", align 8
  %8 = alloca %"class.net::MDnsClientImpl::Core::ListenerKey", align 8
  %9 = bitcast %"class.std::__1::map.114"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.std::__1::map.114", %"class.std::__1::map.114"* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::map.114", %"class.std::__1::map.114"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::map.114", %"class.std::__1::map.114"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node_base"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %10, align 8
  %14 = sext i32 %2 to i64
  %15 = call zeroext i1 @_ZN3net11DnsResponse21InitParseWithoutQueryEm(%"class.net::DnsResponse"* %1, i64 %14) #17
  br i1 %15, label %16, label %150

16:                                               ; preds = %3
  %17 = call zeroext i16 @_ZNK3net11DnsResponse5flagsEv(%"class.net::DnsResponse"* %1) #17
  %18 = icmp slt i16 %17, 0
  br i1 %18, label %19, label %150

19:                                               ; preds = %16
  %20 = bitcast %"class.net::DnsRecordParser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #17
  %21 = bitcast %"class.net::DnsRecordParser"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 40, i1 false)
  call void @_ZNK3net11DnsResponse6ParserEv(%"class.net::DnsRecordParser"* nonnull sret %5, %"class.net::DnsResponse"* %1) #17
  %22 = call i32 @_ZNK3net11DnsResponse12answer_countEv(%"class.net::DnsResponse"* %1) #17
  %23 = call i32 @_ZNK3net11DnsResponse23additional_answer_countEv(%"class.net::DnsResponse"* %1) #17
  %24 = add i32 %23, %22
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %74, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.net::DnsRecordParser", %"class.net::DnsRecordParser"* %5, i64 0, i32 4
  %28 = bitcast i8** %27 to i64*
  %29 = bitcast %"class.net::DnsRecordParser"* %5 to i64*
  %30 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 4
  %31 = bitcast %"class.net::MDnsCache::Key"* %6 to i8*
  %32 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3
  %33 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.137"* %7 to i8*
  %35 = getelementptr inbounds %"struct.std::__1::pair.137", %"struct.std::__1::pair.137"* %7, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::pair.137", %"struct.std::__1::pair.137"* %7, i64 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::map.114", %"class.std::__1::map.114"* %4, i64 0, i32 0
  br label %38

38:                                               ; preds = %71, %26
  %39 = phi i32 [ 0, %26 ], [ %72, %71 ]
  %40 = load i64, i64* %28, align 8
  %41 = load i64, i64* %29, align 8
  %42 = load %"class.base::Clock"*, %"class.base::Clock"** %30, align 8
  %43 = bitcast %"class.base::Clock"* %42 to i64 (%"class.base::Clock"*)***
  %44 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %44, i64 2
  %46 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %45, align 8
  %47 = call i64 %46(%"class.base::Clock"* %42) #17
  %48 = call %"class.net::RecordParsed"* @_ZN3net12RecordParsed10CreateFromEPNS_15DnsRecordParserEN4base4TimeE(%"class.net::DnsRecordParser"* nonnull %5, i64 %47) #17
  %49 = icmp eq %"class.net::RecordParsed"* %48, null
  br i1 %49, label %64, label %50

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %48, i64 0, i32 3
  %52 = load i16, i16* %51, align 2
  %53 = and i16 %52, 32767
  %54 = icmp eq i16 %53, 1
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %31) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  call void @_ZN3net9MDnsCache3Key9CreateForEPKNS_12RecordParsedE(%"class.net::MDnsCache::Key"* nonnull sret %6, %"class.net::RecordParsed"* nonnull %48) #17
  %56 = call i32 @_ZN3net9MDnsCache15UpdateDnsRecordENSt3__110unique_ptrIKNS_12RecordParsedENS1_14default_deleteIS4_EEEE(%"class.net::MDnsCache"* %32, %"class.net::RecordParsed"* nonnull %48) #17
  %57 = load i64, i64* %33, align 8
  call void @_ZN3net14MDnsClientImpl4Core15ScheduleCleanupEN4base4TimeE(%"class.net::MDnsClientImpl::Core"* %0, i64 %57)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %34) #17
  call void @_ZN3net9MDnsCache3KeyC1ERKS1_(%"class.net::MDnsCache::Key"* nonnull %35, %"class.net::MDnsCache::Key"* nonnull dereferenceable(56) %6) #17
  store i32 %56, i32* %36, align 8, !alias.scope !21
  %58 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIS4_S5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.115"* nonnull %37, %"class.net::MDnsCache::Key"* nonnull dereferenceable(56) %35, %"struct.std::__1::pair.137"* nonnull dereferenceable(64) %7) #17
  call void @_ZN3net9MDnsCache3KeyD1Ev(%"class.net::MDnsCache::Key"* nonnull %35) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %34) #17
  call void @_ZN3net9MDnsCache3KeyD1Ev(%"class.net::MDnsCache::Key"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %31) #17
  br label %71

59:                                               ; preds = %50
  %60 = bitcast %"class.net::RecordParsed"* %48 to void (%"class.net::RecordParsed"*)***
  %61 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %61, i64 1
  %63 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %62, align 8
  call void %63(%"class.net::RecordParsed"* nonnull %48) #17
  br label %71

64:                                               ; preds = %38
  %65 = sub i64 %40, %41
  %66 = and i64 %65, 4294967295
  %67 = load i64, i64* %28, align 8
  %68 = load i64, i64* %29, align 8
  %69 = sub i64 %67, %68
  %70 = icmp eq i64 %66, %69
  br i1 %70, label %149, label %71

71:                                               ; preds = %64, %59, %55
  %72 = add nuw i32 %39, 1
  %73 = icmp eq i32 %72, %24
  br i1 %73, label %74, label %38

74:                                               ; preds = %71, %19
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %75, %12
  br i1 %76, label %149, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3
  %79 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %8 to i8*
  %80 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %8, i64 0, i32 0
  %81 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %8, i64 0, i32 1
  %82 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %85

85:                                               ; preds = %77, %146
  %86 = phi %"class.std::__1::__tree_end_node"* [ %75, %77 ], [ %147, %146 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 4
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to %"class.net::MDnsCache::Key"*
  %89 = call %"class.net::RecordParsed"* @_ZN3net9MDnsCache9LookupKeyERKNS0_3KeyE(%"class.net::MDnsCache"* %78, %"class.net::MDnsCache::Key"* dereferenceable(56) %88) #17
  %90 = icmp eq %"class.net::RecordParsed"* %89, null
  br i1 %90, label %118, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %89, i64 0, i32 2
  %93 = load i16, i16* %92, align 8
  %94 = icmp eq i16 %93, 47
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  call void @_ZN3net14MDnsClientImpl4Core16NotifyNsecRecordEPKNS_12RecordParsedE(%"class.net::MDnsClientImpl::Core"* %0, %"class.net::RecordParsed"* nonnull %89)
  br label %118

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 11
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to i32*
  %99 = load i32, i32* %98, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #17
  %100 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %89, i64 0, i32 1
  %101 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  %108 = select i1 %104, i8* %106, i8* %107
  %109 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %89, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = zext i8 %103 to i64
  %112 = select i1 %104, i64 %110, i64 %111
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %80, i8* %108, i64 %112) #17
  store i16 %93, i16* %81, align 8
  call void @_ZN3net14MDnsClientImpl4Core14AlertListenersENS_9MDnsCache10UpdateTypeERKNS1_11ListenerKeyEPKNS_12RecordParsedE(%"class.net::MDnsClientImpl::Core"* %0, i32 %99, %"class.net::MDnsClientImpl::Core::ListenerKey"* nonnull dereferenceable(32) %8, %"class.net::RecordParsed"* nonnull %89)
  %113 = load i8, i8* %83, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %96
  %116 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %116) #18
  br label %117

117:                                              ; preds = %96, %115
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #17
  br label %118

118:                                              ; preds = %95, %117, %85
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 1, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %130

122:                                              ; preds = %118
  %123 = bitcast %"class.std::__1::__tree_end_node"* %86 to %"class.std::__1::__tree_node_base"*
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 2
  %125 = bitcast %"class.std::__1::__tree_end_node"* %124 to %"class.std::__1::__tree_end_node"**
  %126 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %126, i64 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, %123
  br i1 %129, label %146, label %137

130:                                              ; preds = %118, %130
  %131 = phi %"class.std::__1::__tree_node_base"* [ %133, %130 ], [ %120, %118 ]
  %132 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %134, label %135, label %130

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 0
  br label %146

137:                                              ; preds = %122, %137
  %138 = phi %"class.std::__1::__tree_end_node"** [ %141, %137 ], [ %125, %122 ]
  %139 = bitcast %"class.std::__1::__tree_end_node"** %138 to %"class.std::__1::__tree_node_base"**
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %140, i64 0, i32 2
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %140
  br i1 %145, label %146, label %137

146:                                              ; preds = %137, %122, %135
  %147 = phi %"class.std::__1::__tree_end_node"* [ %136, %135 ], [ %126, %122 ], [ %142, %137 ]
  %148 = icmp eq %"class.std::__1::__tree_end_node"* %147, %12
  br i1 %148, label %149, label %85

149:                                              ; preds = %64, %146, %74
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #17
  br label %150

150:                                              ; preds = %16, %3, %149
  %151 = getelementptr inbounds %"class.std::__1::map.114", %"class.std::__1::map.114"* %4, i64 0, i32 0
  %152 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.224"**
  %153 = load %"class.std::__1::__tree_node.224"*, %"class.std::__1::__tree_node.224"** %152, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.115"* nonnull %151, %"class.std::__1::__tree_node.224"* %153) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  ret void
}

declare zeroext i1 @_ZN3net11DnsResponse21InitParseWithoutQueryEm(%"class.net::DnsResponse"*, i64) local_unnamed_addr #2

declare zeroext i16 @_ZNK3net11DnsResponse5flagsEv(%"class.net::DnsResponse"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK3net11DnsResponse6ParserEv(%"class.net::DnsRecordParser"* sret, %"class.net::DnsResponse"*) local_unnamed_addr #2

declare i32 @_ZNK3net11DnsResponse12answer_countEv(%"class.net::DnsResponse"*) local_unnamed_addr #2

declare i32 @_ZNK3net11DnsResponse23additional_answer_countEv(%"class.net::DnsResponse"*) local_unnamed_addr #2

declare %"class.net::RecordParsed"* @_ZN3net12RecordParsed10CreateFromEPNS_15DnsRecordParserEN4base4TimeE(%"class.net::DnsRecordParser"*, i64) local_unnamed_addr #2

declare void @_ZN3net9MDnsCache3Key9CreateForEPKNS_12RecordParsedE(%"class.net::MDnsCache::Key"* sret, %"class.net::RecordParsed"*) local_unnamed_addr #2

declare i32 @_ZN3net9MDnsCache15UpdateDnsRecordENSt3__110unique_ptrIKNS_12RecordParsedENS1_14default_deleteIS4_EEEE(%"class.net::MDnsCache"*, %"class.net::RecordParsed"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core15ScheduleCleanupEN4base4TimeE(%"class.net::MDnsClientImpl::Core"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.72", align 8
  %5 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3
  %6 = tail call zeroext i1 @_ZNK3net9MDnsCache17IsCacheOverfilledEv(%"class.net::MDnsCache"* %5) #17
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 4
  %9 = load %"class.base::Clock"*, %"class.base::Clock"** %8, align 8
  %10 = bitcast %"class.base::Clock"* %9 to i64 (%"class.base::Clock"*)***
  %11 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %11, i64 2
  %13 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %12, align 8
  %14 = tail call i64 %13(%"class.base::Clock"* %9) #17
  br label %15

15:                                               ; preds = %7, %2
  %16 = phi i64 [ %14, %7 ], [ %1, %2 ]
  %17 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 6, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %55, label %20

20:                                               ; preds = %15
  store i64 %16, i64* %17, align 8
  %21 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 5
  %22 = bitcast %"class.base::OneShotTimer"** %21 to %"class.base::internal::TimerBase"**
  %23 = load %"class.base::internal::TimerBase"*, %"class.base::internal::TimerBase"** %22, align 8
  %24 = bitcast %"class.base::internal::TimerBase"* %23 to void (%"class.base::internal::TimerBase"*)***
  %25 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %25, i64 3
  %27 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %26, align 8
  tail call void %27(%"class.base::internal::TimerBase"* %23) #17
  %28 = icmp eq i64 %16, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %20
  %30 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %21, align 8
  %31 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 413) #17
  %32 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 4
  %33 = load %"class.base::Clock"*, %"class.base::Clock"** %32, align 8
  %34 = bitcast %"class.base::Clock"* %33 to i64 (%"class.base::Clock"*)***
  %35 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %35, i64 2
  %37 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %36, align 8
  %38 = call i64 %37(%"class.base::Clock"* %33) #17
  %39 = sub nsw i64 %16, %38
  %40 = icmp sgt i64 %39, 0
  %41 = select i1 %40, i64 %39, i64 0
  %42 = ptrtoint %"class.net::MDnsClientImpl::Core"* %0 to i64
  %43 = call i8* @_Znwm(i64 56) #18, !noalias !24
  %44 = bitcast i8* %43 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %44, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14MDnsClientImpl4CoreEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !24
  %45 = getelementptr inbounds i8, i8* %43, i64 32
  %46 = bitcast i8* %45 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::MDnsClientImpl::Core"*)* @_ZN3net14MDnsClientImpl4Core9DoCleanupEv to i64), i64 0>, <2 x i64>* %46, align 8, !noalias !24
  %47 = getelementptr inbounds i8, i8* %43, i64 48
  %48 = bitcast i8* %47 to i64*
  store i64 %42, i64* %48, align 8, !noalias !24
  %49 = bitcast %"class.base::OnceCallback.72"* %4 to i8**
  store i8* %43, i8** %49, align 8, !alias.scope !24
  %50 = bitcast %"class.base::OneShotTimer"* %30 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback.72"*)***
  %51 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback.72"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback.72"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback.72"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback.72"*)** %51, i64 7
  %53 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback.72"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback.72"*)** %52, align 8
  call void %53(%"class.base::OneShotTimer"* %30, %"class.base::Location"* nonnull dereferenceable(32) %3, i64 %41, %"class.base::OnceCallback.72"* nonnull %4) #17
  %54 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #17
  br label %55

55:                                               ; preds = %20, %15, %29
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net9MDnsCache3KeyD1Ev(%"class.net::MDnsCache::Key"*) unnamed_addr #3

declare %"class.net::RecordParsed"* @_ZN3net9MDnsCache9LookupKeyERKNS0_3KeyE(%"class.net::MDnsCache"*, %"class.net::MDnsCache::Key"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core16NotifyNsecRecordEPKNS_12RecordParsedE(%"class.net::MDnsClientImpl::Core"*, %"class.net::RecordParsed"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::MDnsClientImpl::Core::ListenerKey", align 8
  %4 = alloca %"class.std::__1::vector.148", align 8
  %5 = alloca %"class.net::MDnsClientImpl::Core::ListenerKey", align 8
  %6 = alloca %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = alloca %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %8 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 2
  %9 = load i16, i16* %8, align 8
  %10 = icmp eq i16 %9, 47
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = bitcast %"class.net::RecordRdata"** %12 to %"class.net::NsecRecordRdata"**
  %14 = load %"class.net::NsecRecordRdata"*, %"class.net::NsecRecordRdata"** %13, align 8
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi %"class.net::NsecRecordRdata"* [ %14, %11 ], [ null, %2 ]
  %17 = bitcast %"class.std::__1::vector.148"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.std::__1::vector.148", %"class.std::__1::vector.148"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.148", %"class.std::__1::vector.148"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #17
  %20 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 1
  %22 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 4
  %23 = load %"class.base::Clock"*, %"class.base::Clock"** %22, align 8
  %24 = bitcast %"class.base::Clock"* %23 to i64 (%"class.base::Clock"*)***
  %25 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %25, i64 2
  %27 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %26, align 8
  %28 = tail call i64 %27(%"class.base::Clock"* %23) #17
  call void @_ZNK3net9MDnsCache14FindDnsRecordsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorIPKNS_12RecordParsedENS5_ISD_EEEEN4base4TimeE(%"class.net::MDnsCache"* %20, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %21, %"class.std::__1::vector.148"* nonnull %4, i64 %28) #17
  %29 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %18, align 8
  %30 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %19, align 8
  %31 = icmp eq %"class.net::RecordParsed"** %29, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %15
  %33 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %3 to i8*
  %34 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %3, i64 0, i32 0
  %35 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %3, i64 0, i32 1
  %36 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %96

39:                                               ; preds = %134, %15
  %40 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #17
  %41 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %5, i64 0, i32 1
  %44 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %5, i64 0, i32 0
  %45 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 32, i1 false)
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %53 = select i1 %49, i8* %51, i8* %52
  %54 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %48 to i64
  %57 = select i1 %49, i64 %55, i64 %56
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %44, i8* %53, i64 %57) #17
  store i16 0, i16* %43, align 8
  %58 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node"**
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node"* %60, null
  br i1 %61, label %77, label %62

62:                                               ; preds = %39, %62
  %63 = phi %"class.std::__1::__tree_end_node"* [ %72, %62 ], [ %58, %39 ]
  %64 = phi %"class.std::__1::__tree_node"* [ %73, %62 ], [ %60, %39 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 1, i32 0, i32 0
  %66 = call zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* nonnull %5, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32) %65) #17
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_node"* %64 to %"class.std::__1::__tree_node"**
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::__tree_node_base"** %69 to %"class.std::__1::__tree_node"**
  %71 = select i1 %66, %"class.std::__1::__tree_node"** %68, %"class.std::__1::__tree_node"** %70
  %72 = select i1 %66, %"class.std::__1::__tree_end_node"* %67, %"class.std::__1::__tree_end_node"* %63
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %71, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %75, label %62

75:                                               ; preds = %62
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %72, %58
  br i1 %76, label %77, label %79

77:                                               ; preds = %39, %75
  %78 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %551

79:                                               ; preds = %75
  %80 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = bitcast %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  %83 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %85 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %86 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.base::ObserverList"** %83 to i8*
  %88 = bitcast %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  %89 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 1
  %91 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 2
  %92 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.base::ObserverList"** %89 to i8*
  %94 = bitcast %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  %95 = bitcast %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %7 to i8*
  br label %138

96:                                               ; preds = %32, %134
  %97 = phi %"class.net::RecordParsed"** [ %29, %32 ], [ %135, %134 ]
  %98 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %97, align 8
  %99 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %98, i64 0, i32 2
  %100 = load i16, i16* %99, align 8
  %101 = icmp eq i16 %100, 47
  br i1 %101, label %134, label %102

102:                                              ; preds = %96
  %103 = zext i16 %100 to i32
  %104 = call zeroext i1 @_ZNK3net15NsecRecordRdata6GetBitEj(%"class.net::NsecRecordRdata"* %16, i32 %103) #17
  br i1 %104, label %134, label %105

105:                                              ; preds = %102
  %106 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %97, align 8
  %107 = call %"class.net::RecordParsed"* @_ZN3net9MDnsCache12RemoveRecordEPKNS_12RecordParsedE(%"class.net::MDnsCache"* %20, %"class.net::RecordParsed"* %106) #17
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #17
  %108 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %107, i64 0, i32 1
  %109 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %107, i64 0, i32 2
  %110 = load i16, i16* %109, align 8
  %111 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  %118 = select i1 %114, i8* %116, i8* %117
  %119 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %107, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = zext i8 %113 to i64
  %122 = select i1 %114, i64 %120, i64 %121
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %34, i8* %118, i64 %122) #17
  store i16 %110, i16* %35, align 8
  call void @_ZN3net14MDnsClientImpl4Core14AlertListenersENS_9MDnsCache10UpdateTypeERKNS1_11ListenerKeyEPKNS_12RecordParsedE(%"class.net::MDnsClientImpl::Core"* %0, i32 2, %"class.net::MDnsClientImpl::Core::ListenerKey"* nonnull dereferenceable(32) %3, %"class.net::RecordParsed"* %107) #17
  %123 = load i8, i8* %37, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %105
  %126 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %126) #18
  br label %127

127:                                              ; preds = %105, %125
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #17
  %128 = icmp eq %"class.net::RecordParsed"* %107, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %127
  %130 = bitcast %"class.net::RecordParsed"* %107 to void (%"class.net::RecordParsed"*)***
  %131 = load void (%"class.net::RecordParsed"*)**, void (%"class.net::RecordParsed"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %131, i64 1
  %133 = load void (%"class.net::RecordParsed"*)*, void (%"class.net::RecordParsed"*)** %132, align 8
  call void %133(%"class.net::RecordParsed"* nonnull %107) #17
  br label %134

134:                                              ; preds = %129, %127, %102, %96
  %135 = getelementptr inbounds %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %97, i64 1
  %136 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %19, align 8
  %137 = icmp eq %"class.net::RecordParsed"** %135, %136
  br i1 %137, label %39, label %96

138:                                              ; preds = %79, %548
  %139 = phi %"class.std::__1::__tree_end_node"* [ %72, %79 ], [ %549, %548 ]
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 4
  %141 = bitcast %"class.std::__1::__tree_end_node"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 5
  %146 = bitcast %"class.std::__1::__tree_end_node"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = zext i8 %143 to i64
  %149 = select i1 %144, i64 %147, i64 %148
  %150 = load i8, i8* %81, align 1
  %151 = icmp slt i8 %150, 0
  %152 = load i64, i64* %42, align 8
  %153 = zext i8 %150 to i64
  %154 = select i1 %151, i64 %152, i64 %153
  %155 = icmp eq i64 %149, %154
  br i1 %155, label %156, label %551

156:                                              ; preds = %138
  %157 = bitcast %"class.std::__1::__tree_end_node"* %140 to i8**
  %158 = load i8*, i8** %157, align 8
  %159 = bitcast %"class.std::__1::__tree_end_node"* %140 to i8*
  %160 = select i1 %144, i8* %158, i8* %159
  %161 = load i8*, i8** %41, align 8
  %162 = select i1 %151, i8* %161, i8* %40
  %163 = icmp eq i64 %149, 0
  br i1 %144, label %170, label %164

164:                                              ; preds = %156
  br i1 %163, label %186, label %165

165:                                              ; preds = %164
  %166 = ptrtoint i8* %158 to i64
  %167 = trunc i64 %166 to i8
  %168 = load i8, i8* %162, align 1
  %169 = icmp eq i8 %168, %167
  br i1 %169, label %171, label %551

170:                                              ; preds = %156
  br i1 %163, label %186, label %183

171:                                              ; preds = %165, %178
  %172 = phi i64 [ %175, %178 ], [ %148, %165 ]
  %173 = phi i8* [ %176, %178 ], [ %159, %165 ]
  %174 = phi i8* [ %179, %178 ], [ %162, %165 ]
  %175 = add i64 %172, -1
  %176 = getelementptr inbounds i8, i8* %173, i64 1
  %177 = icmp eq i64 %175, 0
  br i1 %177, label %186, label %178

178:                                              ; preds = %171
  %179 = getelementptr inbounds i8, i8* %174, i64 1
  %180 = load i8, i8* %176, align 1
  %181 = load i8, i8* %179, align 1
  %182 = icmp eq i8 %180, %181
  br i1 %182, label %171, label %551

183:                                              ; preds = %170
  %184 = call i32 @bcmp(i8* %160, i8* %162, i64 %149) #17
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %551

186:                                              ; preds = %171, %164, %170, %183
  %187 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 7
  %188 = bitcast %"class.std::__1::__tree_end_node"* %187 to i16*
  %189 = load i16, i16* %188, align 8
  %190 = zext i16 %189 to i32
  %191 = call zeroext i1 @_ZNK3net15NsecRecordRdata6GetBitEj(%"class.net::NsecRecordRdata"* %16, i32 %190) #17
  br i1 %191, label %520, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 8
  %194 = bitcast %"class.std::__1::__tree_end_node"* %193 to %"class.base::ObserverList"**
  %195 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %194, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %82) #17
  %196 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %195, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 40, i1 false)
  %197 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %196, align 8, !noalias !29
  %198 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %195, i64 0, i32 0, i32 0, i32 1
  %199 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %198, align 8, !noalias !29
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %197, %199
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %86) #17
  br i1 %200, label %201, label %202

201:                                              ; preds = %192
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #17, !alias.scope !29
  br label %242

202:                                              ; preds = %192
  store %"class.base::ObserverList"* %195, %"class.base::ObserverList"** %83, align 8
  %203 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %195, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %86, %"class.base::internal::LinkNodeBase"* %203) #17
  store i64 0, i64* %84, align 8
  %204 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %195, i64 0, i32 3
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %214, label %207

207:                                              ; preds = %202
  %208 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %198 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.base::ObserverList"* %195 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = sub i64 %209, %211
  %213 = ashr exact i64 %212, 3
  br label %214

214:                                              ; preds = %207, %202
  %215 = phi i64 [ %213, %207 ], [ -1, %202 ]
  store i64 %215, i64* %85, align 8
  %216 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 0, i32 0, i32 1
  %218 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.base::ObserverList"* %216 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = sub i64 %219, %221
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %223, %215
  %225 = select i1 %224, i64 %223, i64 %215
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %242, label %227

227:                                              ; preds = %214
  %228 = inttoptr i64 %221 to %"class.base::internal::UncheckedObserverAdapter"*
  %229 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 0, i32 0, i32 0
  %230 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 0, i32 0
  %231 = load i8*, i8** %230, align 8
  %232 = icmp eq i8* %231, null
  br i1 %232, label %233, label %242

233:                                              ; preds = %227, %237
  %234 = phi i64 [ %235, %237 ], [ 0, %227 ]
  %235 = add nuw i64 %234, 1
  store i64 %235, i64* %84, align 8
  %236 = icmp ult i64 %235, %225
  br i1 %236, label %237, label %242

237:                                              ; preds = %233
  %238 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %229, align 8
  %239 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 %235, i32 0
  %240 = load i8*, i8** %239, align 8
  %241 = icmp eq i8* %240, null
  br i1 %241, label %233, label %242

242:                                              ; preds = %237, %233, %227, %214, %201
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %88) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %92) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #17, !alias.scope !32
  %243 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8
  br label %244

244:                                              ; preds = %490, %242
  %245 = phi %"class.base::ObserverList"* [ %243, %242 ], [ %488, %490 ]
  %246 = icmp eq %"class.base::ObserverList"* %245, null
  br i1 %246, label %262, label %247

247:                                              ; preds = %244
  %248 = load i64, i64* %84, align 8
  %249 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %245, i64 0, i32 0, i32 0, i32 1
  %250 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.base::ObserverList"* %245 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = sub i64 %251, %253
  %255 = ashr exact i64 %254, 3
  %256 = load i64, i64* %85, align 8
  %257 = icmp ult i64 %255, %256
  %258 = select i1 %257, i64 %255, i64 %256
  %259 = icmp eq i64 %248, %258
  br i1 %259, label %262, label %260

260:                                              ; preds = %247
  %261 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %89, align 8
  br label %278

262:                                              ; preds = %247, %244
  %263 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %89, align 8
  %264 = icmp eq %"class.base::ObserverList"* %263, null
  br i1 %264, label %378, label %265

265:                                              ; preds = %262
  %266 = load i64, i64* %90, align 8
  %267 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %263, i64 0, i32 0, i32 0, i32 1
  %268 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast %"class.base::ObserverList"* %263 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = sub i64 %269, %271
  %273 = ashr exact i64 %272, 3
  %274 = load i64, i64* %91, align 8
  %275 = icmp ult i64 %273, %274
  %276 = select i1 %275, i64 %273, i64 %274
  %277 = icmp eq i64 %266, %276
  br i1 %277, label %287, label %278

278:                                              ; preds = %265, %260
  %279 = phi %"class.base::ObserverList"* [ %261, %260 ], [ %263, %265 ]
  %280 = icmp eq %"class.base::ObserverList"* %245, %279
  %281 = load i64, i64* %84, align 8
  %282 = load i64, i64* %90, align 8
  %283 = icmp eq i64 %281, %282
  %284 = and i1 %280, %283
  br i1 %284, label %285, label %472

285:                                              ; preds = %278
  %286 = icmp eq %"class.base::ObserverList"* %245, null
  br i1 %286, label %378, label %287

287:                                              ; preds = %265, %285
  %288 = phi %"class.base::ObserverList"* [ %245, %285 ], [ %263, %265 ]
  %289 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %288, i64 0, i32 1
  %290 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %288, i64 0, i32 1, i32 0, i32 0, i32 1
  %291 = bitcast %"class.base::internal::LinkNodeBase"** %290 to %"class.base::LinkNode"**
  %292 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %291, align 8
  %293 = bitcast %"class.base::LinkedList"* %289 to %"class.base::LinkNode"**
  %294 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %293, align 8
  %295 = icmp eq %"class.base::LinkNode"* %292, %294
  br i1 %295, label %296, label %374

296:                                              ; preds = %287
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %288, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %288, i64 0, i32 0, i32 0, i32 1
  %300 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %299, align 8
  %301 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %298, %300
  br i1 %301, label %310, label %302

302:                                              ; preds = %296, %307
  %303 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %308, %307 ], [ %298, %296 ]
  %304 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %303, i64 0, i32 0
  %305 = load i8*, i8** %304, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %310, label %307

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %303, i64 1
  %309 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %308, %300
  br i1 %309, label %374, label %302

310:                                              ; preds = %302, %296
  %311 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %298, %296 ], [ %303, %302 ]
  %312 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %311 to i64
  %313 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %311, %300
  br i1 %313, label %374, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %311, i64 1
  %316 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %315, %300
  br i1 %316, label %369, label %317

317:                                              ; preds = %314
  %318 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %300, i64 -2
  %319 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %318 to i64
  %320 = sub i64 %319, %312
  %321 = lshr i64 %320, 3
  %322 = add nuw nsw i64 %321, 1
  %323 = and i64 %322, 3
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %343, label %325

325:                                              ; preds = %317, %338
  %326 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %340, %338 ], [ %315, %317 ]
  %327 = phi i64 [ %339, %338 ], [ %312, %317 ]
  %328 = phi i64 [ %341, %338 ], [ %323, %317 ]
  %329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %326, i64 0, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %338, label %332

332:                                              ; preds = %325
  %333 = ptrtoint i8* %330 to i64
  %334 = inttoptr i64 %327 to %"class.base::internal::UncheckedObserverAdapter"*
  %335 = inttoptr i64 %327 to i64*
  store i64 %333, i64* %335, align 8
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 1
  %337 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %336 to i64
  br label %338

338:                                              ; preds = %332, %325
  %339 = phi i64 [ %327, %325 ], [ %337, %332 ]
  %340 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %326, i64 1
  %341 = add i64 %328, -1
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %325, !llvm.loop !35

343:                                              ; preds = %338, %317
  %344 = phi i64 [ undef, %317 ], [ %339, %338 ]
  %345 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %315, %317 ], [ %340, %338 ]
  %346 = phi i64 [ %312, %317 ], [ %339, %338 ]
  %347 = icmp ult i64 %320, 24
  br i1 %347, label %365, label %348

348:                                              ; preds = %343, %594
  %349 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %596, %594 ], [ %345, %343 ]
  %350 = phi i64 [ %595, %594 ], [ %346, %343 ]
  %351 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 0, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = icmp eq i8* %352, null
  br i1 %353, label %360, label %354

354:                                              ; preds = %348
  %355 = ptrtoint i8* %352 to i64
  %356 = inttoptr i64 %350 to %"class.base::internal::UncheckedObserverAdapter"*
  %357 = inttoptr i64 %350 to i64*
  store i64 %355, i64* %357, align 8
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 1
  %359 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %358 to i64
  br label %360

360:                                              ; preds = %354, %348
  %361 = phi i64 [ %350, %348 ], [ %359, %354 ]
  %362 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 1, i32 0
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, null
  br i1 %364, label %572, label %566

365:                                              ; preds = %594, %343
  %366 = phi i64 [ %344, %343 ], [ %595, %594 ]
  %367 = inttoptr i64 %366 to %"class.base::internal::UncheckedObserverAdapter"*
  %368 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %299, align 8
  br label %369

369:                                              ; preds = %365, %314
  %370 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %300, %314 ], [ %368, %365 ]
  %371 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %311, %314 ], [ %367, %365 ]
  %372 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %371, %370
  br i1 %372, label %374, label %373

373:                                              ; preds = %369
  store %"class.base::internal::UncheckedObserverAdapter"* %371, %"class.base::internal::UncheckedObserverAdapter"** %299, align 8
  br label %374

374:                                              ; preds = %307, %373, %369, %310, %287
  %375 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %89, align 8
  %376 = icmp eq %"class.base::ObserverList"* %375, null
  br i1 %376, label %378, label %377

377:                                              ; preds = %374
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %89, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %92) #17
  br label %378

378:                                              ; preds = %262, %285, %374, %377
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %88) #17
  %379 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8
  %380 = icmp eq %"class.base::ObserverList"* %379, null
  br i1 %380, label %471, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %379, i64 0, i32 1
  %383 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %379, i64 0, i32 1, i32 0, i32 0, i32 1
  %384 = bitcast %"class.base::internal::LinkNodeBase"** %383 to %"class.base::LinkNode"**
  %385 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %384, align 8
  %386 = bitcast %"class.base::LinkedList"* %382 to %"class.base::LinkNode"**
  %387 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %386, align 8
  %388 = icmp eq %"class.base::LinkNode"* %385, %387
  br i1 %388, label %389, label %467

389:                                              ; preds = %381
  %390 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %379, i64 0, i32 0, i32 0, i32 0
  %391 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %390, align 8
  %392 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %379, i64 0, i32 0, i32 0, i32 1
  %393 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %392, align 8
  %394 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %391, %393
  br i1 %394, label %403, label %395

395:                                              ; preds = %389, %400
  %396 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %401, %400 ], [ %391, %389 ]
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 0, i32 0
  %398 = load i8*, i8** %397, align 8
  %399 = icmp eq i8* %398, null
  br i1 %399, label %403, label %400

400:                                              ; preds = %395
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 1
  %402 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %401, %393
  br i1 %402, label %467, label %395

403:                                              ; preds = %395, %389
  %404 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %391, %389 ], [ %396, %395 ]
  %405 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %404 to i64
  %406 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %404, %393
  br i1 %406, label %467, label %407

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %404, i64 1
  %409 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %408, %393
  br i1 %409, label %462, label %410

410:                                              ; preds = %407
  %411 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 -2
  %412 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %411 to i64
  %413 = sub i64 %412, %405
  %414 = lshr i64 %413, 3
  %415 = add nuw nsw i64 %414, 1
  %416 = and i64 %415, 3
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %436, label %418

418:                                              ; preds = %410, %431
  %419 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %433, %431 ], [ %408, %410 ]
  %420 = phi i64 [ %432, %431 ], [ %405, %410 ]
  %421 = phi i64 [ %434, %431 ], [ %416, %410 ]
  %422 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %419, i64 0, i32 0
  %423 = load i8*, i8** %422, align 8
  %424 = icmp eq i8* %423, null
  br i1 %424, label %431, label %425

425:                                              ; preds = %418
  %426 = ptrtoint i8* %423 to i64
  %427 = inttoptr i64 %420 to %"class.base::internal::UncheckedObserverAdapter"*
  %428 = inttoptr i64 %420 to i64*
  store i64 %426, i64* %428, align 8
  %429 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %427, i64 1
  %430 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %429 to i64
  br label %431

431:                                              ; preds = %425, %418
  %432 = phi i64 [ %420, %418 ], [ %430, %425 ]
  %433 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %419, i64 1
  %434 = add i64 %421, -1
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %436, label %418, !llvm.loop !37

436:                                              ; preds = %431, %410
  %437 = phi i64 [ undef, %410 ], [ %432, %431 ]
  %438 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %408, %410 ], [ %433, %431 ]
  %439 = phi i64 [ %405, %410 ], [ %432, %431 ]
  %440 = icmp ult i64 %413, 24
  br i1 %440, label %458, label %441

441:                                              ; preds = %436, %626
  %442 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %628, %626 ], [ %438, %436 ]
  %443 = phi i64 [ %627, %626 ], [ %439, %436 ]
  %444 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %442, i64 0, i32 0
  %445 = load i8*, i8** %444, align 8
  %446 = icmp eq i8* %445, null
  br i1 %446, label %453, label %447

447:                                              ; preds = %441
  %448 = ptrtoint i8* %445 to i64
  %449 = inttoptr i64 %443 to %"class.base::internal::UncheckedObserverAdapter"*
  %450 = inttoptr i64 %443 to i64*
  store i64 %448, i64* %450, align 8
  %451 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %449, i64 1
  %452 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %451 to i64
  br label %453

453:                                              ; preds = %447, %441
  %454 = phi i64 [ %443, %441 ], [ %452, %447 ]
  %455 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %442, i64 1, i32 0
  %456 = load i8*, i8** %455, align 8
  %457 = icmp eq i8* %456, null
  br i1 %457, label %604, label %598

458:                                              ; preds = %626, %436
  %459 = phi i64 [ %437, %436 ], [ %627, %626 ]
  %460 = inttoptr i64 %459 to %"class.base::internal::UncheckedObserverAdapter"*
  %461 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %392, align 8
  br label %462

462:                                              ; preds = %458, %407
  %463 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %393, %407 ], [ %461, %458 ]
  %464 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %404, %407 ], [ %460, %458 ]
  %465 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %464, %463
  br i1 %465, label %467, label %466

466:                                              ; preds = %462
  store %"class.base::internal::UncheckedObserverAdapter"* %464, %"class.base::internal::UncheckedObserverAdapter"** %392, align 8
  br label %467

467:                                              ; preds = %400, %466, %462, %403, %381
  %468 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8
  %469 = icmp eq %"class.base::ObserverList"* %468, null
  br i1 %469, label %471, label %470

470:                                              ; preds = %467
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %83, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %86) #17
  br label %471

471:                                              ; preds = %378, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %82) #17
  br label %520

472:                                              ; preds = %278
  %473 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %245, i64 0, i32 0, i32 0, i32 0
  %474 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %473, align 8
  %475 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %474, i64 %281
  %476 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %475 to %"class.net::MDnsListenerImpl"**
  %477 = load %"class.net::MDnsListenerImpl"*, %"class.net::MDnsListenerImpl"** %476, align 8
  %478 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %477, i64 0, i32 6
  %479 = load %"class.net::MDnsListener::Delegate"*, %"class.net::MDnsListener::Delegate"** %478, align 8
  %480 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %477, i64 0, i32 3
  %481 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %477, i64 0, i32 2
  %482 = load i16, i16* %481, align 8
  %483 = zext i16 %482 to i32
  %484 = bitcast %"class.net::MDnsListener::Delegate"* %479 to void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)***
  %485 = load void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)**, void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)*** %484, align 8
  %486 = getelementptr inbounds void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)*, void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)** %485, i64 3
  %487 = load void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)*, void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)** %486, align 8
  call void %487(%"class.net::MDnsListener::Delegate"* %479, %"class.std::__1::basic_string"* dereferenceable(24) %480, i32 %483) #17
  %488 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8
  %489 = icmp eq %"class.base::ObserverList"* %488, null
  br i1 %489, label %490, label %491

490:                                              ; preds = %515, %511, %472, %491, %505
  br label %244

491:                                              ; preds = %472
  %492 = load i64, i64* %84, align 8
  %493 = add i64 %492, 1
  store i64 %493, i64* %84, align 8
  %494 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %488, i64 0, i32 0, i32 0, i32 1
  %495 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %494 to i64*
  %496 = load i64, i64* %495, align 8
  %497 = bitcast %"class.base::ObserverList"* %488 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = sub i64 %496, %498
  %500 = ashr exact i64 %499, 3
  %501 = load i64, i64* %85, align 8
  %502 = icmp ult i64 %500, %501
  %503 = select i1 %502, i64 %500, i64 %501
  %504 = icmp ult i64 %493, %503
  br i1 %504, label %505, label %490

505:                                              ; preds = %491
  %506 = inttoptr i64 %498 to %"class.base::internal::UncheckedObserverAdapter"*
  %507 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %488, i64 0, i32 0, i32 0, i32 0
  %508 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %506, i64 %493, i32 0
  %509 = load i8*, i8** %508, align 8
  %510 = icmp eq i8* %509, null
  br i1 %510, label %511, label %490

511:                                              ; preds = %505, %515
  %512 = phi i64 [ %513, %515 ], [ %493, %505 ]
  %513 = add nuw i64 %512, 1
  store i64 %513, i64* %84, align 8
  %514 = icmp ult i64 %513, %503
  br i1 %514, label %515, label %490

515:                                              ; preds = %511
  %516 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %507, align 8
  %517 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %516, i64 %513, i32 0
  %518 = load i8*, i8** %517, align 8
  %519 = icmp eq i8* %518, null
  br i1 %519, label %511, label %490

520:                                              ; preds = %186, %471
  %521 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 1, i32 0
  %522 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %521, align 8
  %523 = icmp eq %"class.std::__1::__tree_node_base"* %522, null
  br i1 %523, label %524, label %532

524:                                              ; preds = %520
  %525 = bitcast %"class.std::__1::__tree_end_node"* %139 to %"class.std::__1::__tree_node_base"*
  %526 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 2
  %527 = bitcast %"class.std::__1::__tree_end_node"* %526 to %"class.std::__1::__tree_end_node"**
  %528 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %527, align 8
  %529 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %528, i64 0, i32 0
  %530 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %529, align 8
  %531 = icmp eq %"class.std::__1::__tree_node_base"* %530, %525
  br i1 %531, label %548, label %539

532:                                              ; preds = %520, %532
  %533 = phi %"class.std::__1::__tree_node_base"* [ %535, %532 ], [ %522, %520 ]
  %534 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %533, i64 0, i32 0, i32 0
  %535 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %534, align 8
  %536 = icmp eq %"class.std::__1::__tree_node_base"* %535, null
  br i1 %536, label %537, label %532

537:                                              ; preds = %532
  %538 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %533, i64 0, i32 0
  br label %548

539:                                              ; preds = %524, %539
  %540 = phi %"class.std::__1::__tree_end_node"** [ %543, %539 ], [ %527, %524 ]
  %541 = bitcast %"class.std::__1::__tree_end_node"** %540 to %"class.std::__1::__tree_node_base"**
  %542 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %541, align 8
  %543 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %542, i64 0, i32 2
  %544 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %543, align 8
  %545 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %544, i64 0, i32 0
  %546 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %545, align 8
  %547 = icmp eq %"class.std::__1::__tree_node_base"* %546, %542
  br i1 %547, label %548, label %539

548:                                              ; preds = %539, %524, %537
  %549 = phi %"class.std::__1::__tree_end_node"* [ %538, %537 ], [ %528, %524 ], [ %544, %539 ]
  %550 = icmp eq %"class.std::__1::__tree_end_node"* %549, %58
  br i1 %550, label %551, label %138

551:                                              ; preds = %183, %138, %548, %165, %178, %77
  %552 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %78, %77 ], [ %80, %178 ], [ %80, %165 ], [ %80, %548 ], [ %80, %138 ], [ %80, %183 ]
  %553 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %552, i64 0, i32 1, i32 0
  %554 = load i8, i8* %553, align 1
  %555 = icmp slt i8 %554, 0
  br i1 %555, label %556, label %558

556:                                              ; preds = %551
  %557 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %557) #18
  br label %558

558:                                              ; preds = %551, %556
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #17
  %559 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %18, align 8
  %560 = icmp eq %"class.net::RecordParsed"** %559, null
  br i1 %560, label %565, label %561

561:                                              ; preds = %558
  %562 = ptrtoint %"class.net::RecordParsed"** %559 to i64
  %563 = bitcast %"class.net::RecordParsed"*** %19 to i64*
  store i64 %562, i64* %563, align 8
  %564 = bitcast %"class.net::RecordParsed"** %559 to i8*
  call void @_ZdlPv(i8* %564) #18
  br label %565

565:                                              ; preds = %558, %561
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  ret void

566:                                              ; preds = %360
  %567 = ptrtoint i8* %363 to i64
  %568 = inttoptr i64 %361 to %"class.base::internal::UncheckedObserverAdapter"*
  %569 = inttoptr i64 %361 to i64*
  store i64 %567, i64* %569, align 8
  %570 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %568, i64 1
  %571 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %570 to i64
  br label %572

572:                                              ; preds = %566, %360
  %573 = phi i64 [ %361, %360 ], [ %571, %566 ]
  %574 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 2, i32 0
  %575 = load i8*, i8** %574, align 8
  %576 = icmp eq i8* %575, null
  br i1 %576, label %583, label %577

577:                                              ; preds = %572
  %578 = ptrtoint i8* %575 to i64
  %579 = inttoptr i64 %573 to %"class.base::internal::UncheckedObserverAdapter"*
  %580 = inttoptr i64 %573 to i64*
  store i64 %578, i64* %580, align 8
  %581 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %579, i64 1
  %582 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %581 to i64
  br label %583

583:                                              ; preds = %577, %572
  %584 = phi i64 [ %573, %572 ], [ %582, %577 ]
  %585 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 3, i32 0
  %586 = load i8*, i8** %585, align 8
  %587 = icmp eq i8* %586, null
  br i1 %587, label %594, label %588

588:                                              ; preds = %583
  %589 = ptrtoint i8* %586 to i64
  %590 = inttoptr i64 %584 to %"class.base::internal::UncheckedObserverAdapter"*
  %591 = inttoptr i64 %584 to i64*
  store i64 %589, i64* %591, align 8
  %592 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %590, i64 1
  %593 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %592 to i64
  br label %594

594:                                              ; preds = %588, %583
  %595 = phi i64 [ %584, %583 ], [ %593, %588 ]
  %596 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 4
  %597 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %596, %300
  br i1 %597, label %365, label %348

598:                                              ; preds = %453
  %599 = ptrtoint i8* %456 to i64
  %600 = inttoptr i64 %454 to %"class.base::internal::UncheckedObserverAdapter"*
  %601 = inttoptr i64 %454 to i64*
  store i64 %599, i64* %601, align 8
  %602 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %600, i64 1
  %603 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %602 to i64
  br label %604

604:                                              ; preds = %598, %453
  %605 = phi i64 [ %454, %453 ], [ %603, %598 ]
  %606 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %442, i64 2, i32 0
  %607 = load i8*, i8** %606, align 8
  %608 = icmp eq i8* %607, null
  br i1 %608, label %615, label %609

609:                                              ; preds = %604
  %610 = ptrtoint i8* %607 to i64
  %611 = inttoptr i64 %605 to %"class.base::internal::UncheckedObserverAdapter"*
  %612 = inttoptr i64 %605 to i64*
  store i64 %610, i64* %612, align 8
  %613 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %611, i64 1
  %614 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %613 to i64
  br label %615

615:                                              ; preds = %609, %604
  %616 = phi i64 [ %605, %604 ], [ %614, %609 ]
  %617 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %442, i64 3, i32 0
  %618 = load i8*, i8** %617, align 8
  %619 = icmp eq i8* %618, null
  br i1 %619, label %626, label %620

620:                                              ; preds = %615
  %621 = ptrtoint i8* %618 to i64
  %622 = inttoptr i64 %616 to %"class.base::internal::UncheckedObserverAdapter"*
  %623 = inttoptr i64 %616 to i64*
  store i64 %621, i64* %623, align 8
  %624 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %622, i64 1
  %625 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %624 to i64
  br label %626

626:                                              ; preds = %620, %615
  %627 = phi i64 [ %616, %615 ], [ %625, %620 ]
  %628 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %442, i64 4
  %629 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %628, %393
  br i1 %629, label %458, label %441
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core14AlertListenersENS_9MDnsCache10UpdateTypeERKNS1_11ListenerKeyEPKNS_12RecordParsedE(%"class.net::MDnsClientImpl::Core"*, i32, %"class.net::MDnsClientImpl::Core::ListenerKey"* nocapture readonly dereferenceable(32), %"class.net::RecordParsed"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %381, label %11

11:                                               ; preds = %4, %11
  %12 = phi %"class.std::__1::__tree_end_node"* [ %21, %11 ], [ %7, %4 ]
  %13 = phi %"class.std::__1::__tree_node"* [ %22, %11 ], [ %9, %4 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* %14, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32) %2) #17
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %11

24:                                               ; preds = %11
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %7
  br i1 %25, label %381, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.net::MDnsClientImpl::Core::ListenerKey"*
  %29 = tail call zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* %2, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32) %28) #17
  br i1 %29, label %381, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 8
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.base::ObserverList"**
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %32, align 8
  %34 = bitcast %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #17
  %35 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %38 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 40, i1 false)
  %40 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %38, align 8, !noalias !38
  %41 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %42 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %41, align 8, !noalias !38
  %43 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %40, %42
  %44 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %44) #17
  br i1 %43, label %45, label %47

45:                                               ; preds = %30
  %46 = bitcast %"class.base::ObserverList"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #17, !alias.scope !38
  br label %87

47:                                               ; preds = %30
  store %"class.base::ObserverList"* %33, %"class.base::ObserverList"** %35, align 8
  %48 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %44, %"class.base::internal::LinkNodeBase"* %48) #17
  store i64 0, i64* %36, align 8
  %49 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %41 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.base::ObserverList"* %33 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 3
  br label %59

59:                                               ; preds = %52, %47
  %60 = phi i64 [ %58, %52 ], [ -1, %47 ]
  store i64 %60, i64* %37, align 8
  %61 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %62 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %61, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.base::ObserverList"* %61 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = ashr exact i64 %67, 3
  %69 = icmp ult i64 %68, %60
  %70 = select i1 %69, i64 %68, i64 %60
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %87, label %72

72:                                               ; preds = %59
  %73 = inttoptr i64 %66 to %"class.base::internal::UncheckedObserverAdapter"*
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %61, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %78, label %87

78:                                               ; preds = %72, %82
  %79 = phi i64 [ %80, %82 ], [ 0, %72 ]
  %80 = add nuw i64 %79, 1
  store i64 %80, i64* %36, align 8
  %81 = icmp ult i64 %80, %70
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %74, align 8
  %84 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %83, i64 %80, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %78, label %87

87:                                               ; preds = %82, %78, %72, %59, %45
  %88 = bitcast %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %88) #17
  %89 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %91 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %92 = getelementptr inbounds %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.base::ObserverList<net::MDnsListenerImpl, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %92) #17
  %94 = bitcast %"class.base::ObserverList"** %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #17, !alias.scope !41
  %95 = icmp eq i32 %1, 2
  %96 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 4
  %97 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 6, i32 0, i32 0
  %98 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  br label %99

99:                                               ; preds = %351, %87
  %100 = phi %"class.base::ObserverList"* [ %98, %87 ], [ %349, %351 ]
  %101 = icmp eq %"class.base::ObserverList"* %100, null
  br i1 %101, label %117, label %102

102:                                              ; preds = %99
  %103 = load i64, i64* %36, align 8
  %104 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 1
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.base::ObserverList"* %100 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = ashr exact i64 %109, 3
  %111 = load i64, i64* %37, align 8
  %112 = icmp ult i64 %110, %111
  %113 = select i1 %112, i64 %110, i64 %111
  %114 = icmp eq i64 %103, %113
  br i1 %114, label %117, label %115

115:                                              ; preds = %102
  %116 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %89, align 8
  br label %133

117:                                              ; preds = %102, %99
  %118 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %89, align 8
  %119 = icmp eq %"class.base::ObserverList"* %118, null
  br i1 %119, label %233, label %120

120:                                              ; preds = %117
  %121 = load i64, i64* %90, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %118, i64 0, i32 0, i32 0, i32 1
  %123 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.base::ObserverList"* %118 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = ashr exact i64 %127, 3
  %129 = load i64, i64* %91, align 8
  %130 = icmp ult i64 %128, %129
  %131 = select i1 %130, i64 %128, i64 %129
  %132 = icmp eq i64 %121, %131
  br i1 %132, label %142, label %133

133:                                              ; preds = %120, %115
  %134 = phi %"class.base::ObserverList"* [ %116, %115 ], [ %118, %120 ]
  %135 = icmp eq %"class.base::ObserverList"* %100, %134
  %136 = load i64, i64* %36, align 8
  %137 = load i64, i64* %90, align 8
  %138 = icmp eq i64 %136, %137
  %139 = and i1 %135, %138
  br i1 %139, label %140, label %327

140:                                              ; preds = %133
  %141 = icmp eq %"class.base::ObserverList"* %100, null
  br i1 %141, label %233, label %142

142:                                              ; preds = %120, %140
  %143 = phi %"class.base::ObserverList"* [ %100, %140 ], [ %118, %120 ]
  %144 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 1
  %145 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 1, i32 0, i32 0, i32 1
  %146 = bitcast %"class.base::internal::LinkNodeBase"** %145 to %"class.base::LinkNode"**
  %147 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %146, align 8
  %148 = bitcast %"class.base::LinkedList"* %144 to %"class.base::LinkNode"**
  %149 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %148, align 8
  %150 = icmp eq %"class.base::LinkNode"* %147, %149
  br i1 %150, label %151, label %229

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %152, align 8
  %154 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %143, i64 0, i32 0, i32 0, i32 1
  %155 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  %156 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %153, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %151, %162
  %158 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %162 ], [ %153, %151 ]
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 0, i32 0
  %160 = load i8*, i8** %159, align 8
  %161 = icmp eq i8* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %164 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %163, %155
  br i1 %164, label %229, label %157

165:                                              ; preds = %157, %151
  %166 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %153, %151 ], [ %158, %157 ]
  %167 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %166 to i64
  %168 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %166, %155
  br i1 %168, label %229, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %166, i64 1
  %171 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %170, %155
  br i1 %171, label %224, label %172

172:                                              ; preds = %169
  %173 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %155, i64 -2, i32 0
  %174 = ptrtoint i8** %173 to i64
  %175 = sub i64 %174, %167
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %198, label %180

180:                                              ; preds = %172, %193
  %181 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %195, %193 ], [ %170, %172 ]
  %182 = phi i64 [ %194, %193 ], [ %167, %172 ]
  %183 = phi i64 [ %196, %193 ], [ %178, %172 ]
  %184 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = icmp eq i8* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %180
  %188 = ptrtoint i8* %185 to i64
  %189 = inttoptr i64 %182 to %"class.base::internal::UncheckedObserverAdapter"*
  %190 = inttoptr i64 %182 to i64*
  store i64 %188, i64* %190, align 8
  %191 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 1
  %192 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %191 to i64
  br label %193

193:                                              ; preds = %187, %180
  %194 = phi i64 [ %182, %180 ], [ %192, %187 ]
  %195 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %196 = add i64 %183, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %180, !llvm.loop !44

198:                                              ; preds = %193, %172
  %199 = phi i64 [ undef, %172 ], [ %194, %193 ]
  %200 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %170, %172 ], [ %195, %193 ]
  %201 = phi i64 [ %167, %172 ], [ %194, %193 ]
  %202 = icmp ult i64 %175, 24
  br i1 %202, label %220, label %203

203:                                              ; preds = %198, %442
  %204 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %444, %442 ], [ %200, %198 ]
  %205 = phi i64 [ %443, %442 ], [ %201, %198 ]
  %206 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = icmp eq i8* %207, null
  br i1 %208, label %215, label %209

209:                                              ; preds = %203
  %210 = ptrtoint i8* %207 to i64
  %211 = inttoptr i64 %205 to %"class.base::internal::UncheckedObserverAdapter"*
  %212 = inttoptr i64 %205 to i64*
  store i64 %210, i64* %212, align 8
  %213 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 1
  %214 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %213 to i64
  br label %215

215:                                              ; preds = %209, %203
  %216 = phi i64 [ %205, %203 ], [ %214, %209 ]
  %217 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 1, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = icmp eq i8* %218, null
  br i1 %219, label %420, label %414

220:                                              ; preds = %442, %198
  %221 = phi i64 [ %199, %198 ], [ %443, %442 ]
  %222 = inttoptr i64 %221 to %"class.base::internal::UncheckedObserverAdapter"*
  %223 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  br label %224

224:                                              ; preds = %220, %169
  %225 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %155, %169 ], [ %223, %220 ]
  %226 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %166, %169 ], [ %222, %220 ]
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %225
  br i1 %227, label %229, label %228

228:                                              ; preds = %224
  store %"class.base::internal::UncheckedObserverAdapter"* %226, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  br label %229

229:                                              ; preds = %162, %228, %224, %165, %142
  %230 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %89, align 8
  %231 = icmp eq %"class.base::ObserverList"* %230, null
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %89, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %92) #17
  br label %233

233:                                              ; preds = %117, %140, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %88) #17
  %234 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %235 = icmp eq %"class.base::ObserverList"* %234, null
  br i1 %235, label %326, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 1
  %238 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 1, i32 0, i32 0, i32 1
  %239 = bitcast %"class.base::internal::LinkNodeBase"** %238 to %"class.base::LinkNode"**
  %240 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %239, align 8
  %241 = bitcast %"class.base::LinkedList"* %237 to %"class.base::LinkNode"**
  %242 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %241, align 8
  %243 = icmp eq %"class.base::LinkNode"* %240, %242
  br i1 %243, label %244, label %322

244:                                              ; preds = %236
  %245 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %245, align 8
  %247 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %234, i64 0, i32 0, i32 0, i32 1
  %248 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  %249 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %246, %248
  br i1 %249, label %258, label %250

250:                                              ; preds = %244, %255
  %251 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %255 ], [ %246, %244 ]
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = icmp eq i8* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %257 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %256, %248
  br i1 %257, label %322, label %250

258:                                              ; preds = %250, %244
  %259 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %246, %244 ], [ %251, %250 ]
  %260 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %259 to i64
  %261 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %259, %248
  br i1 %261, label %322, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %259, i64 1
  %264 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %263, %248
  br i1 %264, label %317, label %265

265:                                              ; preds = %262
  %266 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %248, i64 -2, i32 0
  %267 = ptrtoint i8** %266 to i64
  %268 = sub i64 %267, %260
  %269 = lshr i64 %268, 3
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 3
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %291, label %273

273:                                              ; preds = %265, %286
  %274 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %288, %286 ], [ %263, %265 ]
  %275 = phi i64 [ %287, %286 ], [ %260, %265 ]
  %276 = phi i64 [ %289, %286 ], [ %271, %265 ]
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 0, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = icmp eq i8* %278, null
  br i1 %279, label %286, label %280

280:                                              ; preds = %273
  %281 = ptrtoint i8* %278 to i64
  %282 = inttoptr i64 %275 to %"class.base::internal::UncheckedObserverAdapter"*
  %283 = inttoptr i64 %275 to i64*
  store i64 %281, i64* %283, align 8
  %284 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 1
  %285 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %284 to i64
  br label %286

286:                                              ; preds = %280, %273
  %287 = phi i64 [ %275, %273 ], [ %285, %280 ]
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %289 = add i64 %276, -1
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %291, label %273, !llvm.loop !45

291:                                              ; preds = %286, %265
  %292 = phi i64 [ undef, %265 ], [ %287, %286 ]
  %293 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %263, %265 ], [ %288, %286 ]
  %294 = phi i64 [ %260, %265 ], [ %287, %286 ]
  %295 = icmp ult i64 %268, 24
  br i1 %295, label %313, label %296

296:                                              ; preds = %291, %410
  %297 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %412, %410 ], [ %293, %291 ]
  %298 = phi i64 [ %411, %410 ], [ %294, %291 ]
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %308, label %302

302:                                              ; preds = %296
  %303 = ptrtoint i8* %300 to i64
  %304 = inttoptr i64 %298 to %"class.base::internal::UncheckedObserverAdapter"*
  %305 = inttoptr i64 %298 to i64*
  store i64 %303, i64* %305, align 8
  %306 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 1
  %307 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %306 to i64
  br label %308

308:                                              ; preds = %302, %296
  %309 = phi i64 [ %298, %296 ], [ %307, %302 ]
  %310 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 1, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = icmp eq i8* %311, null
  br i1 %312, label %388, label %382

313:                                              ; preds = %410, %291
  %314 = phi i64 [ %292, %291 ], [ %411, %410 ]
  %315 = inttoptr i64 %314 to %"class.base::internal::UncheckedObserverAdapter"*
  %316 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  br label %317

317:                                              ; preds = %313, %262
  %318 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %248, %262 ], [ %316, %313 ]
  %319 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %259, %262 ], [ %315, %313 ]
  %320 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %319, %318
  br i1 %320, label %322, label %321

321:                                              ; preds = %317
  store %"class.base::internal::UncheckedObserverAdapter"* %319, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  br label %322

322:                                              ; preds = %255, %321, %317, %258, %236
  %323 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %324 = icmp eq %"class.base::ObserverList"* %323, null
  br i1 %324, label %326, label %325

325:                                              ; preds = %322
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %35, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %44) #17
  br label %326

326:                                              ; preds = %233, %322, %325
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #17
  br label %381

327:                                              ; preds = %133
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 0
  %329 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %328, align 8
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %329, i64 %136
  %331 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %330 to %"class.net::MDnsListenerImpl"**
  %332 = load %"class.net::MDnsListenerImpl"*, %"class.net::MDnsListenerImpl"** %331, align 8
  br i1 %95, label %340, label %333

333:                                              ; preds = %327
  %334 = load i32, i32* %96, align 4
  %335 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %332, i64 0, i32 8
  store i32 %334, i32* %335, align 8
  %336 = load i64, i64* %97, align 8
  %337 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %332, i64 0, i32 7, i32 0, i32 0
  store i64 %336, i64* %337, align 8
  call void @_ZN3net16MDnsListenerImpl19ScheduleNextRefreshEv(%"class.net::MDnsListenerImpl"* %332) #17
  switch i32 %1, label %339 [
    i32 3, label %348
    i32 0, label %340
    i32 1, label %338
  ]

338:                                              ; preds = %333
  br label %340

339:                                              ; preds = %333
  br label %340

340:                                              ; preds = %339, %338, %333, %327
  %341 = phi i32 [ 1, %339 ], [ 1, %338 ], [ %1, %333 ], [ 2, %327 ]
  %342 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %332, i64 0, i32 6
  %343 = load %"class.net::MDnsListener::Delegate"*, %"class.net::MDnsListener::Delegate"** %342, align 8
  %344 = bitcast %"class.net::MDnsListener::Delegate"* %343 to void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)***
  %345 = load void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)**, void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)*** %344, align 8
  %346 = getelementptr inbounds void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)*, void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)** %345, i64 2
  %347 = load void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)*, void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)** %346, align 8
  call void %347(%"class.net::MDnsListener::Delegate"* %343, i32 %341, %"class.net::RecordParsed"* %3) #17
  br label %348

348:                                              ; preds = %333, %340
  %349 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %350 = icmp eq %"class.base::ObserverList"* %349, null
  br i1 %350, label %351, label %352

351:                                              ; preds = %376, %372, %348, %352, %366
  br label %99

352:                                              ; preds = %348
  %353 = load i64, i64* %36, align 8
  %354 = add i64 %353, 1
  store i64 %354, i64* %36, align 8
  %355 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %349, i64 0, i32 0, i32 0, i32 1
  %356 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"class.base::ObserverList"* %349 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = sub i64 %357, %359
  %361 = ashr exact i64 %360, 3
  %362 = load i64, i64* %37, align 8
  %363 = icmp ult i64 %361, %362
  %364 = select i1 %363, i64 %361, i64 %362
  %365 = icmp ult i64 %354, %364
  br i1 %365, label %366, label %351

366:                                              ; preds = %352
  %367 = inttoptr i64 %359 to %"class.base::internal::UncheckedObserverAdapter"*
  %368 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %349, i64 0, i32 0, i32 0, i32 0
  %369 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %367, i64 %354, i32 0
  %370 = load i8*, i8** %369, align 8
  %371 = icmp eq i8* %370, null
  br i1 %371, label %372, label %351

372:                                              ; preds = %366, %376
  %373 = phi i64 [ %374, %376 ], [ %354, %366 ]
  %374 = add nuw i64 %373, 1
  store i64 %374, i64* %36, align 8
  %375 = icmp ult i64 %374, %364
  br i1 %375, label %376, label %351

376:                                              ; preds = %372
  %377 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %368, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %377, i64 %374, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %372, label %351

381:                                              ; preds = %26, %24, %4, %326
  ret void

382:                                              ; preds = %308
  %383 = ptrtoint i8* %311 to i64
  %384 = inttoptr i64 %309 to %"class.base::internal::UncheckedObserverAdapter"*
  %385 = inttoptr i64 %309 to i64*
  store i64 %383, i64* %385, align 8
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %384, i64 1
  %387 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %386 to i64
  br label %388

388:                                              ; preds = %382, %308
  %389 = phi i64 [ %309, %308 ], [ %387, %382 ]
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 2, i32 0
  %391 = load i8*, i8** %390, align 8
  %392 = icmp eq i8* %391, null
  br i1 %392, label %399, label %393

393:                                              ; preds = %388
  %394 = ptrtoint i8* %391 to i64
  %395 = inttoptr i64 %389 to %"class.base::internal::UncheckedObserverAdapter"*
  %396 = inttoptr i64 %389 to i64*
  store i64 %394, i64* %396, align 8
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %395, i64 1
  %398 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %397 to i64
  br label %399

399:                                              ; preds = %393, %388
  %400 = phi i64 [ %389, %388 ], [ %398, %393 ]
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 3, i32 0
  %402 = load i8*, i8** %401, align 8
  %403 = icmp eq i8* %402, null
  br i1 %403, label %410, label %404

404:                                              ; preds = %399
  %405 = ptrtoint i8* %402 to i64
  %406 = inttoptr i64 %400 to %"class.base::internal::UncheckedObserverAdapter"*
  %407 = inttoptr i64 %400 to i64*
  store i64 %405, i64* %407, align 8
  %408 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %406, i64 1
  %409 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %408 to i64
  br label %410

410:                                              ; preds = %404, %399
  %411 = phi i64 [ %400, %399 ], [ %409, %404 ]
  %412 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 4
  %413 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %412, %248
  br i1 %413, label %313, label %296

414:                                              ; preds = %215
  %415 = ptrtoint i8* %218 to i64
  %416 = inttoptr i64 %216 to %"class.base::internal::UncheckedObserverAdapter"*
  %417 = inttoptr i64 %216 to i64*
  store i64 %415, i64* %417, align 8
  %418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %416, i64 1
  %419 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %418 to i64
  br label %420

420:                                              ; preds = %414, %215
  %421 = phi i64 [ %216, %215 ], [ %419, %414 ]
  %422 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 2, i32 0
  %423 = load i8*, i8** %422, align 8
  %424 = icmp eq i8* %423, null
  br i1 %424, label %431, label %425

425:                                              ; preds = %420
  %426 = ptrtoint i8* %423 to i64
  %427 = inttoptr i64 %421 to %"class.base::internal::UncheckedObserverAdapter"*
  %428 = inttoptr i64 %421 to i64*
  store i64 %426, i64* %428, align 8
  %429 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %427, i64 1
  %430 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %429 to i64
  br label %431

431:                                              ; preds = %425, %420
  %432 = phi i64 [ %421, %420 ], [ %430, %425 ]
  %433 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 3, i32 0
  %434 = load i8*, i8** %433, align 8
  %435 = icmp eq i8* %434, null
  br i1 %435, label %442, label %436

436:                                              ; preds = %431
  %437 = ptrtoint i8* %434 to i64
  %438 = inttoptr i64 %432 to %"class.base::internal::UncheckedObserverAdapter"*
  %439 = inttoptr i64 %432 to i64*
  store i64 %437, i64* %439, align 8
  %440 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %438, i64 1
  %441 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %440 to i64
  br label %442

442:                                              ; preds = %436, %431
  %443 = phi i64 [ %432, %431 ], [ %441, %436 ]
  %444 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 4
  %445 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %444, %155
  br i1 %445, label %220, label %203
}

declare void @_ZNK3net9MDnsCache14FindDnsRecordsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorIPKNS_12RecordParsedENS5_ISD_EEEEN4base4TimeE(%"class.net::MDnsCache"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.148"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net15NsecRecordRdata6GetBitEj(%"class.net::NsecRecordRdata"*, i32) local_unnamed_addr #2

declare %"class.net::RecordParsed"* @_ZN3net9MDnsCache12RemoveRecordEPKNS_12RecordParsedE(%"class.net::MDnsCache"*, %"class.net::RecordParsed"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core15OnRecordRemovedEPKNS_12RecordParsedE(%"class.net::MDnsClientImpl::Core"*, %"class.net::RecordParsed"*) #0 align 2 {
  %3 = alloca %"class.net::MDnsClientImpl::Core::ListenerKey", align 8
  %4 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %3, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i8* %16, i64 %20) #17
  %21 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %3, i64 0, i32 1
  store i16 %7, i16* %21, align 8
  call void @_ZN3net14MDnsClientImpl4Core14AlertListenersENS_9MDnsCache10UpdateTypeERKNS1_11ListenerKeyEPKNS_12RecordParsedE(%"class.net::MDnsClientImpl::Core"* %0, i32 2, %"class.net::MDnsClientImpl::Core::ListenerKey"* nonnull dereferenceable(32) %3, %"class.net::RecordParsed"* %1)
  %22 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %2, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16MDnsListenerImpl15AlertNsecRecordEv(%"class.net::MDnsListenerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 6
  %3 = load %"class.net::MDnsListener::Delegate"*, %"class.net::MDnsListener::Delegate"** %2, align 8
  %4 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = zext i16 %6 to i32
  %8 = bitcast %"class.net::MDnsListener::Delegate"* %3 to void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)***
  %9 = load void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)**, void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)*, void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)** %9, i64 3
  %11 = load void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)*, void (%"class.net::MDnsListener::Delegate"*, %"class.std::__1::basic_string"*, i32)** %10, align 8
  tail call void %11(%"class.net::MDnsListener::Delegate"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %4, i32 %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core17OnConnectionErrorEi(%"class.net::MDnsClientImpl::Core"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i64 34) #17
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %7) #17
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 335, i32 -1) #17
  %8 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i64 30) #17
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %10, i32 %1) #17
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1) #17
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %7) #17
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core11ListenerKeyC2ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEt(%"class.net::MDnsClientImpl::Core::ListenerKey"*, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %0, i64 0, i32 0
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  tail call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %4, i8* %12, i64 %16) #17
  %17 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %0, i64 0, i32 1
  store i16 %2, i16* %17, align 8
  ret void
}

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* nocapture readonly, %"class.net::MDnsClientImpl::Core::ListenerKey"* nocapture readonly dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %3 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %58

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %58

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #17
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %37, %30, %36, %49
  %53 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %0, i64 0, i32 1
  %54 = load i16, i16* %53, align 8
  %55 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %1, i64 0, i32 1
  %56 = load i16, i16* %55, align 8
  %57 = icmp ult i16 %54, %56
  br label %80

58:                                               ; preds = %44, %31, %2, %49
  %59 = icmp ult i64 %18, %10
  %60 = select i1 %59, i64 %18, i64 %10
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %0 to i8*
  %66 = select i1 %6, i8* %64, i8* %65
  %67 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %1 to i8*
  %70 = select i1 %14, i8* %68, i8* %69
  %71 = tail call i32 @memcmp(i8* %66, i8* %70, i64 %60) #17
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %62, %58
  %74 = icmp ult i64 %10, %18
  %75 = zext i1 %59 to i32
  %76 = select i1 %74, i32 -1, i32 %75
  br label %77

77:                                               ; preds = %62, %73
  %78 = phi i32 [ %76, %73 ], [ %71, %62 ]
  %79 = icmp slt i32 %78, 0
  br label %80

80:                                               ; preds = %77, %52
  %81 = phi i1 [ %57, %52 ], [ %79, %77 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16MDnsListenerImpl18HandleRecordUpdateENS_9MDnsCache10UpdateTypeEPKNS_12RecordParsedE(%"class.net::MDnsListenerImpl"*, i32, %"class.net::RecordParsed"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 2
  br i1 %4, label %14, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %2, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 8
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %2, i64 0, i32 6, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  tail call void @_ZN3net16MDnsListenerImpl19ScheduleNextRefreshEv(%"class.net::MDnsListenerImpl"* %0)
  switch i32 %1, label %13 [
    i32 3, label %22
    i32 0, label %14
    i32 1, label %12
  ]

12:                                               ; preds = %5
  br label %14

13:                                               ; preds = %5
  br label %14

14:                                               ; preds = %3, %5, %13, %12
  %15 = phi i32 [ 1, %13 ], [ 1, %12 ], [ %1, %5 ], [ 2, %3 ]
  %16 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 6
  %17 = load %"class.net::MDnsListener::Delegate"*, %"class.net::MDnsListener::Delegate"** %16, align 8
  %18 = bitcast %"class.net::MDnsListener::Delegate"* %17 to void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)***
  %19 = load void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)**, void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)*, void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)** %19, i64 2
  %21 = load void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)*, void (%"class.net::MDnsListener::Delegate"*, i32, %"class.net::RecordParsed"*)** %20, align 8
  tail call void %21(%"class.net::MDnsListener::Delegate"* %17, i32 %15, %"class.net::RecordParsed"* %2) #17
  br label %22

22:                                               ; preds = %5, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core11AddListenerEPNS_16MDnsListenerImplE(%"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsListenerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.238", align 8
  %4 = alloca %"class.std::__1::tuple.241", align 1
  %5 = alloca %"class.net::MDnsClientImpl::Core::ListenerKey", align 8
  %6 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %5, i64 0, i32 1
  %9 = bitcast %"class.net::MDnsListenerImpl"* %1 to %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)***
  %10 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = load %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)**, %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)*** %9, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)*, %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)** %11, i64 4
  %13 = load %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)*, %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)** %12, align 8
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %13(%"class.net::MDnsListenerImpl"* %1) #17
  %15 = bitcast %"class.net::MDnsListenerImpl"* %1 to i16 (%"class.net::MDnsListenerImpl"*)***
  %16 = load i16 (%"class.net::MDnsListenerImpl"*)**, i16 (%"class.net::MDnsListenerImpl"*)*** %15, align 8
  %17 = getelementptr inbounds i16 (%"class.net::MDnsListenerImpl"*)*, i16 (%"class.net::MDnsListenerImpl"*)** %16, i64 5
  %18 = load i16 (%"class.net::MDnsListenerImpl"*)*, i16 (%"class.net::MDnsListenerImpl"*)** %17, align 8
  %19 = tail call zeroext i16 %18(%"class.net::MDnsListenerImpl"* %1) #17
  %20 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %5, i64 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %28 = select i1 %24, i8* %26, i8* %27
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %23 to i64
  %32 = select i1 %24, i64 %30, i64 %31
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %20, i8* %28, i64 %32) #17
  store i16 %19, i16* %8, align 8
  %33 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0
  %34 = bitcast %"class.std::__1::tuple.238"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #17
  %35 = getelementptr inbounds %"class.std::__1::tuple.238", %"class.std::__1::tuple.238"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.net::MDnsClientImpl::Core::ListenerKey"* %5, %"class.net::MDnsClientImpl::Core::ListenerKey"** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::tuple.241", %"class.std::__1::tuple.241"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #17
  %37 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSS_IJEEEEEENS_4pairINS_15__tree_iteratorISG_PNS_11__tree_nodeISG_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %33, %"class.net::MDnsClientImpl::Core::ListenerKey"* nonnull dereferenceable(32) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.238"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.241"* nonnull dereferenceable(1) %4) #17
  %38 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %37, 0
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #17
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.base::ObserverList"**
  %41 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %40, align 8
  %42 = icmp eq %"class.base::ObserverList"* %41, null
  br i1 %42, label %43, label %86

43:                                               ; preds = %2
  %44 = call i8* @_Znwm(i64 56) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #17
  %45 = getelementptr inbounds i8, i8* %44, i64 24
  %46 = bitcast i8* %45 to %"class.base::internal::LinkNodeBase"*
  call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %46, %"class.base::internal::LinkNodeBase"* %46, %"class.base::internal::LinkNodeBase"* %46) #17
  %47 = getelementptr inbounds i8, i8* %44, i64 40
  %48 = bitcast i8* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %44, i64 48
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 8
  %51 = ptrtoint i8* %44 to i64
  %52 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %40, align 8
  %53 = bitcast %"class.std::__1::__tree_end_node"* %39 to i64*
  store i64 %51, i64* %53, align 8
  %54 = icmp eq %"class.base::ObserverList"* %52, null
  %55 = bitcast i8* %44 to %"class.base::ObserverList"*
  br i1 %54, label %86, label %56

56:                                               ; preds = %43
  %57 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %52, i64 0, i32 1, i32 0, i32 0, i32 1
  %58 = bitcast %"class.base::internal::LinkNodeBase"** %57 to %"class.base::LinkNode"**
  %59 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %52, i64 0, i32 1, i32 0
  %60 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %58, align 8
  %61 = icmp eq %"class.base::LinkNode"* %60, %59
  br i1 %61, label %74, label %62

62:                                               ; preds = %56, %71
  %63 = phi %"class.base::LinkNode"* [ %72, %71 ], [ %60, %56 ]
  %64 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %63, i64 1
  %65 = bitcast %"class.base::LinkNode"* %64 to %"class.base::ObserverList"**
  %66 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %67 = icmp eq %"class.base::ObserverList"* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %65, align 8
  %69 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %63, i64 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %69) #17
  %70 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %58, align 8
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi %"class.base::LinkNode"* [ %63, %62 ], [ %70, %68 ]
  %73 = icmp eq %"class.base::LinkNode"* %72, %59
  br i1 %73, label %74, label %62

74:                                               ; preds = %71, %56
  %75 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %52, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %75, align 8
  %77 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %76 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %52, i64 0, i32 0, i32 0, i32 1
  %81 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %76 to i8*
  call void @_ZdlPv(i8* %82) #18
  br label %83

83:                                               ; preds = %78, %74
  %84 = bitcast %"class.base::ObserverList"* %52 to i8*
  call void @_ZdlPv(i8* %84) #18
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %40, align 8
  br label %86

86:                                               ; preds = %2, %43, %83
  %87 = phi %"class.base::ObserverList"* [ %41, %2 ], [ %55, %43 ], [ %85, %83 ]
  %88 = icmp eq %"class.net::MDnsListenerImpl"* %1, null
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %91 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %90, align 8
  br label %110

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %93, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %96 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %95, align 8
  %97 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %94, %96
  %98 = bitcast %"class.net::MDnsListenerImpl"* %1 to i8*
  br i1 %97, label %107, label %99

99:                                               ; preds = %92, %104
  %100 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %105, %104 ], [ %94, %92 ]
  %101 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %100, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, %98
  br i1 %103, label %107, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %100, i64 1
  %106 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %105, %96
  br i1 %106, label %110, label %99

107:                                              ; preds = %99, %92
  %108 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %94, %92 ], [ %100, %99 ]
  %109 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %108, %96
  br i1 %109, label %110, label %183

110:                                              ; preds = %104, %89, %107
  %111 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %91, %89 ], [ %96, %107 ], [ %96, %104 ]
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %112, align 8
  %115 = ptrtoint %"class.net::MDnsListenerImpl"* %1 to i64
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %118 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %117, align 8
  %119 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %111, %118
  %120 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %118 to i64
  br i1 %119, label %121, label %126

121:                                              ; preds = %110
  %122 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %111 to i64*
  store i64 %115, i64* %122, align 8
  %123 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %111, i64 1
  %124 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %123 to i64
  %125 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %116 to i64*
  store i64 %124, i64* %125, align 8
  br label %183

126:                                              ; preds = %110
  %127 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %111 to i64
  %128 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %116 to i64*
  %129 = bitcast %"class.base::ObserverList"* %87 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = sub i64 %127, %130
  %132 = ashr exact i64 %131, 3
  %133 = add nsw i64 %132, 1
  %134 = icmp ugt i64 %133, 2305843009213693951
  br i1 %134, label %135, label %137

135:                                              ; preds = %126
  %136 = bitcast %"class.base::ObserverList"* %87 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %136) #19
  unreachable

137:                                              ; preds = %126
  %138 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %117 to i64*
  %139 = sub i64 %120, %130
  %140 = ashr exact i64 %139, 3
  %141 = icmp ult i64 %140, 1152921504606846975
  br i1 %141, label %142, label %150

142:                                              ; preds = %137
  %143 = ashr exact i64 %139, 2
  %144 = icmp ult i64 %143, %133
  %145 = select i1 %144, i64 %133, i64 %143
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %142
  %148 = icmp ugt i64 %145, 2305843009213693951
  br i1 %148, label %149, label %150

149:                                              ; preds = %147
  call void @abort() #19
  unreachable

150:                                              ; preds = %147, %137
  %151 = phi i64 [ %145, %147 ], [ 2305843009213693951, %137 ]
  %152 = shl i64 %151, 3
  %153 = call i8* @_Znwm(i64 %152) #18
  %154 = bitcast i8* %153 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %155

155:                                              ; preds = %150, %142
  %156 = phi i64 [ %151, %150 ], [ 0, %142 ]
  %157 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %154, %150 ], [ null, %142 ]
  %158 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 %132
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 %156
  %160 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %159 to i64
  %161 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %158 to i64*
  store i64 %115, i64* %161, align 8
  %162 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %163 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %162 to i64
  %164 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %164, align 8
  %166 = load i64, i64* %128, align 8
  %167 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %165 to i64
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 3
  %170 = sub nsw i64 0, %169
  %171 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 %170
  %172 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %171 to i64
  %173 = icmp sgt i64 %168, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %155
  %175 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %171 to i8*
  %176 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %176, i64 %168, i1 false) #17
  %177 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %164, align 8
  br label %178

178:                                              ; preds = %174, %155
  %179 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %165, %155 ], [ %177, %174 ]
  store i64 %172, i64* %129, align 8
  store i64 %163, i64* %128, align 8
  store i64 %160, i64* %138, align 8
  %180 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %178
  %182 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %179 to i8*
  call void @_ZdlPv(i8* %182) #18
  br label %183

183:                                              ; preds = %181, %178, %121, %107
  %184 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %190

188:                                              ; preds = %183
  %189 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %189) #18
  br label %190

190:                                              ; preds = %183, %188
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core14RemoveListenerEPNS_16MDnsListenerImplE(%"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsListenerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.net::MDnsClientImpl::Core::ListenerKey", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback.72", align 8
  %7 = alloca %"class.base::WeakPtr.186", align 8
  %8 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %4, i64 0, i32 1
  %12 = bitcast %"class.net::MDnsListenerImpl"* %1 to %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)***
  %13 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = load %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)**, %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)*** %12, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)*, %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)** %14, i64 4
  %16 = load %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)*, %"class.std::__1::basic_string"* (%"class.net::MDnsListenerImpl"*)** %15, align 8
  %17 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %16(%"class.net::MDnsListenerImpl"* %1) #17
  %18 = bitcast %"class.net::MDnsListenerImpl"* %1 to i16 (%"class.net::MDnsListenerImpl"*)***
  %19 = load i16 (%"class.net::MDnsListenerImpl"*)**, i16 (%"class.net::MDnsListenerImpl"*)*** %18, align 8
  %20 = getelementptr inbounds i16 (%"class.net::MDnsListenerImpl"*)*, i16 (%"class.net::MDnsListenerImpl"*)** %19, i64 5
  %21 = load i16 (%"class.net::MDnsListenerImpl"*)*, i16 (%"class.net::MDnsListenerImpl"*)** %20, align 8
  %22 = tail call zeroext i16 %21(%"class.net::MDnsListenerImpl"* %1) #17
  %23 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %4, i64 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %31 = select i1 %27, i8* %29, i8* %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %23, i8* %31, i64 %35) #17
  store i16 %22, i16* %11, align 8
  %36 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node"**
  %38 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node"* %38, null
  br i1 %39, label %59, label %40

40:                                               ; preds = %2, %40
  %41 = phi %"class.std::__1::__tree_end_node"* [ %50, %40 ], [ %36, %2 ]
  %42 = phi %"class.std::__1::__tree_node"* [ %51, %40 ], [ %38, %2 ]
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 1, i32 0, i32 0
  %44 = call zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* %43, %"class.net::MDnsClientImpl::Core::ListenerKey"* nonnull dereferenceable(32) %4) #17
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::__tree_node_base"** %45 to %"class.std::__1::__tree_node"**
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %42, i64 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_node"* %42 to %"class.std::__1::__tree_node"**
  %49 = select i1 %44, %"class.std::__1::__tree_node"** %46, %"class.std::__1::__tree_node"** %48
  %50 = select i1 %44, %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"* %47
  %51 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %49, align 8
  %52 = icmp eq %"class.std::__1::__tree_node"* %51, null
  br i1 %52, label %53, label %40

53:                                               ; preds = %40
  %54 = icmp eq %"class.std::__1::__tree_end_node"* %50, %36
  br i1 %54, label %59, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 4
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.net::MDnsClientImpl::Core::ListenerKey"*
  %58 = call zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* nonnull %4, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32) %57) #17
  br i1 %58, label %59, label %60

59:                                               ; preds = %55, %53, %2
  br label %60

60:                                               ; preds = %55, %59
  %61 = phi %"class.std::__1::__tree_end_node"* [ %36, %59 ], [ %50, %55 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 8
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.base::ObserverList"**
  %64 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %65 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %65, align 8
  %67 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %64, i64 0, i32 0, i32 0, i32 1
  %68 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %67, align 8
  %69 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %66, %68
  %70 = bitcast %"class.net::MDnsListenerImpl"* %1 to i8*
  %71 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %68 to i64
  br i1 %69, label %80, label %72

72:                                               ; preds = %60, %77
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %78, %77 ], [ %66, %60 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, %70
  br i1 %76, label %80, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 1
  %79 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %78, %68
  br i1 %79, label %109, label %72

80:                                               ; preds = %72, %60
  %81 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %66, %60 ], [ %73, %72 ]
  %82 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %81, %68
  br i1 %82, label %109, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %81, i64 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %64, i64 0, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, -1
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %87, %83
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %64, i64 0, i32 1, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::LinkNodeBase"** %92 to %"class.base::LinkNode"**
  %94 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %93, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %64, i64 0, i32 1, i32 0
  %96 = icmp eq %"class.base::LinkNode"* %94, %95
  br i1 %96, label %97, label %108

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %81, i64 1
  %99 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %98 to i64
  %100 = sub i64 %71, %99
  %101 = ashr exact i64 %100, 3
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %98 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 %100, i1 false) #17
  br label %106

106:                                              ; preds = %103, %97
  %107 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %81, i64 %101
  store %"class.base::internal::UncheckedObserverAdapter"* %107, %"class.base::internal::UncheckedObserverAdapter"** %67, align 8
  br label %109

108:                                              ; preds = %91
  store i8* null, i8** %84, align 8
  br label %109

109:                                              ; preds = %77, %80, %106, %108
  %110 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %111 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %110, i64 0, i32 2
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %156

116:                                              ; preds = %109
  %117 = call dereferenceable(8) %class.scoped_refptr.70* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #17
  %118 = bitcast %class.scoped_refptr.70* %117 to %"class.base::TaskRunner"**
  %119 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %118, align 8
  %120 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 385) #17
  %121 = bitcast %"class.base::WeakPtr.186"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #17
  %122 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 1
  %123 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #17, !noalias !46
  %124 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %122, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %124) #17, !noalias !46
  %125 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %122, i64 -1
  %126 = getelementptr inbounds %"class.base::WeakPtr.186", %"class.base::WeakPtr.186"* %7, i64 0, i32 0
  %127 = ptrtoint %"class.base::SupportsWeakPtr"* %125 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %126, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %127) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #17, !noalias !46
  %128 = call i8* @_Znwm(i64 96) #18, !noalias !49
  %129 = bitcast i8* %128 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %129, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvRKNS5_11ListenerKeyEEJNS_7WeakPtrIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14MDnsClientImpl4CoreEFvRKNS4_11ListenerKeyEEJNS_7WeakPtrIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvRKNS5_11ListenerKeyEEJNS_7WeakPtrIS5_EES6_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #17, !noalias !49
  %130 = getelementptr inbounds i8, i8* %128, i64 32
  %131 = bitcast i8* %130 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core::ListenerKey"*)* @_ZN3net14MDnsClientImpl4Core19CleanupObserverListERKNS1_11ListenerKeyE to i64), i64 0>, <2 x i64>* %131, align 8, !noalias !49
  %132 = getelementptr inbounds i8, i8* %128, i64 48
  %133 = bitcast i8* %132 to %"class.base::internal::WeakReference"*
  %134 = getelementptr inbounds %"class.base::WeakPtr.186", %"class.base::WeakPtr.186"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %133, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %134) #17, !noalias !49
  %135 = getelementptr inbounds i8, i8* %128, i64 56
  %136 = bitcast i8* %135 to i64*
  %137 = getelementptr inbounds %"class.base::WeakPtr.186", %"class.base::WeakPtr.186"* %7, i64 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8, !noalias !49
  store i64 %138, i64* %136, align 8, !noalias !49
  %139 = getelementptr inbounds i8, i8* %128, i64 64
  %140 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1, !noalias !49
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %145, label %144

144:                                              ; preds = %116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* nonnull align 8 %8, i64 24, i1 false) #17, !noalias !49
  br label %149

145:                                              ; preds = %116
  %146 = bitcast i8* %139 to %"class.std::__1::basic_string"*
  %147 = load i8*, i8** %9, align 8, !noalias !49
  %148 = load i64, i64* %10, align 8, !noalias !49
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %146, i8* %147, i64 %148) #17, !noalias !49
  br label %149

149:                                              ; preds = %144, %145
  %150 = getelementptr inbounds i8, i8* %128, i64 88
  %151 = bitcast i8* %150 to i16*
  %152 = load i16, i16* %11, align 8, !noalias !49
  store i16 %152, i16* %151, align 8, !noalias !49
  %153 = bitcast %"class.base::OnceCallback.72"* %6 to i8**
  store i8* %128, i8** %153, align 8, !alias.scope !49
  %154 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %119, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback.72"* nonnull %6) #17
  %155 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %155) #17
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %126) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120) #17
  br label %156

156:                                              ; preds = %114, %149
  %157 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %115, %114 ], [ %140, %149 ]
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %156
  %162 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %162) #18
  br label %163

163:                                              ; preds = %156, %161
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core19CleanupObserverListERKNS1_11ListenerKeyE(%"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core::ListenerKey"* nocapture readonly dereferenceable(32)) #0 align 2 {
  %3 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %17, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %18, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* %10, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32) %1) #17
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::__tree_node_base"** %12 to %"class.std::__1::__tree_node"**
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %16 = select i1 %11, %"class.std::__1::__tree_node"** %13, %"class.std::__1::__tree_node"** %15
  %17 = select i1 %11, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %14
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %19 = icmp eq %"class.std::__1::__tree_node"* %18, null
  br i1 %19, label %20, label %7

20:                                               ; preds = %7
  %21 = icmp eq %"class.std::__1::__tree_end_node"* %17, %3
  br i1 %21, label %36, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 4
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.net::MDnsClientImpl::Core::ListenerKey"*
  %25 = tail call zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* %1, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32) %24) #17
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 8
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.base::ObserverList"**
  %29 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %28, align 8
  %30 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %29, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 2, i32 0
  %35 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE5eraseENS_21__tree_const_iteratorISG_PNS_11__tree_nodeISG_PvEElEE(%"class.std::__1::__tree"* %34, %"class.std::__1::__tree_end_node"* %17) #17
  br label %36

36:                                               ; preds = %22, %20, %2, %33, %26
  ret void
}

declare zeroext i1 @_ZNK3net9MDnsCache17IsCacheOverfilledEv(%"class.net::MDnsCache"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl4Core9DoCleanupEv(%"class.net::MDnsClientImpl::Core"*) #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback.188", align 8
  %3 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 4
  %5 = load %"class.base::Clock"*, %"class.base::Clock"** %4, align 8
  %6 = bitcast %"class.base::Clock"* %5 to i64 (%"class.base::Clock"*)***
  %7 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %7, i64 2
  %9 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %8, align 8
  %10 = tail call i64 %9(%"class.base::Clock"* %5) #17
  %11 = bitcast %"class.base::RepeatingCallback.188"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = ptrtoint %"class.net::MDnsClientImpl::Core"* %0 to i64
  %13 = tail call i8* @_Znwm(i64 56) #18, !noalias !54
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.net::RecordParsed"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14MDnsClientImpl4CoreEFvPKNS2_12RecordParsedEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !54
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::MDnsClientImpl::Core"*, %"class.net::RecordParsed"*)* @_ZN3net14MDnsClientImpl4Core15OnRecordRemovedEPKNS_12RecordParsedE to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !54
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %12, i64* %18, align 8, !noalias !54
  %19 = bitcast %"class.base::RepeatingCallback.188"* %2 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !54
  call void @_ZN3net9MDnsCache14CleanupRecordsEN4base4TimeERKNS1_17RepeatingCallbackIFvPKNS_12RecordParsedEEEE(%"class.net::MDnsCache"* %3, i64 %10, %"class.base::RepeatingCallback.188"* nonnull dereferenceable(8) %2) #17
  %20 = getelementptr inbounds %"class.base::RepeatingCallback.188", %"class.base::RepeatingCallback.188"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  %21 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  call void @_ZN3net14MDnsClientImpl4Core15ScheduleCleanupEN4base4TimeE(%"class.net::MDnsClientImpl::Core"* %0, i64 %22)
  ret void
}

declare void @_ZN3net9MDnsCache14CleanupRecordsEN4base4TimeERKNS1_17RepeatingCallbackIFvPKNS_12RecordParsedEEEE(%"class.net::MDnsCache"*, i64, %"class.base::RepeatingCallback.188"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net14MDnsClientImpl4Core10QueryCacheEtRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS2_6vectorIPKNS_12RecordParsedENS6_ISE_EEEE(%"class.net::MDnsClientImpl::Core"*, i16 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.148"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 3
  %6 = zext i16 %1 to i32
  %7 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %0, i64 0, i32 4
  %8 = load %"class.base::Clock"*, %"class.base::Clock"** %7, align 8
  %9 = bitcast %"class.base::Clock"* %8 to i64 (%"class.base::Clock"*)***
  %10 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %10, i64 2
  %12 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::Clock"* %8) #17
  tail call void @_ZNK3net9MDnsCache14FindDnsRecordsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorIPKNS_12RecordParsedENS5_ISD_EEEEN4base4TimeE(%"class.net::MDnsCache"* %5, i32 %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::vector.148"* %3, i64 %13) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImplC2Ev(%"class.net::MDnsClientImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net14MDnsClientImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 1
  %4 = tail call %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() #17
  %5 = getelementptr inbounds %"class.base::DefaultClock", %"class.base::DefaultClock"* %4, i64 0, i32 0
  store %"class.base::Clock"* %5, %"class.base::Clock"** %3, align 8
  %6 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 2
  %7 = tail call i8* @_Znwm(i64 128) #18
  %8 = bitcast i8* %7 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* nonnull %8) #17
  %9 = ptrtoint i8* %7 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.173"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 3
  %12 = bitcast %"class.std::__1::unique_ptr.179"* %11 to i64*
  store i64 0, i64* %12, align 8
  ret void
}

declare %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImplC2EPN4base5ClockENSt3__110unique_ptrINS1_12OneShotTimerENS4_14default_deleteIS6_EEEE(%"class.net::MDnsClientImpl"* nocapture, %"class.base::Clock"*, %"class.base::OneShotTimer"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.base::OneShotTimer"* %2 to i64
  %5 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net14MDnsClientImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 1
  store %"class.base::Clock"* %1, %"class.base::Clock"** %6, align 8
  %7 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::unique_ptr.173"* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr.179"* %9 to i64*
  store i64 0, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImplD2Ev(%"class.net::MDnsClientImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net14MDnsClientImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %3, align 8
  store %"class.net::MDnsClientImpl::Core"* null, %"class.net::MDnsClientImpl::Core"** %3, align 8
  %5 = icmp eq %"class.net::MDnsClientImpl::Core"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store %"class.net::MDnsClientImpl::Core"* null, %"class.net::MDnsClientImpl::Core"** %3, align 8
  br label %19

7:                                                ; preds = %1
  %8 = bitcast %"class.net::MDnsClientImpl::Core"* %4 to void (%"class.net::MDnsClientImpl::Core"*)***
  %9 = load void (%"class.net::MDnsClientImpl::Core"*)**, void (%"class.net::MDnsClientImpl::Core"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %9, i64 3
  %11 = load void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %10, align 8
  tail call void %11(%"class.net::MDnsClientImpl::Core"* nonnull %4) #17
  %12 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %3, align 8
  store %"class.net::MDnsClientImpl::Core"* null, %"class.net::MDnsClientImpl::Core"** %3, align 8
  %13 = icmp eq %"class.net::MDnsClientImpl::Core"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.net::MDnsClientImpl::Core"* %12 to void (%"class.net::MDnsClientImpl::Core"*)***
  %16 = load void (%"class.net::MDnsClientImpl::Core"*)**, void (%"class.net::MDnsClientImpl::Core"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %16, i64 3
  %18 = load void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %17, align 8
  tail call void %18(%"class.net::MDnsClientImpl::Core"* nonnull %12) #17
  br label %19

19:                                               ; preds = %6, %7, %14
  %20 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %20, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %20, align 8
  %22 = icmp eq %"class.base::OneShotTimer"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.base::OneShotTimer"* %21 to void (%"class.base::OneShotTimer"*)***
  %25 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %25, i64 1
  %27 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %26, align 8
  tail call void %27(%"class.base::OneShotTimer"* nonnull %21) #17
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImplD0Ev(%"class.net::MDnsClientImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net14MDnsClientImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %3, align 8
  store %"class.net::MDnsClientImpl::Core"* null, %"class.net::MDnsClientImpl::Core"** %3, align 8
  %5 = icmp eq %"class.net::MDnsClientImpl::Core"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store %"class.net::MDnsClientImpl::Core"* null, %"class.net::MDnsClientImpl::Core"** %3, align 8
  br label %19

7:                                                ; preds = %1
  %8 = bitcast %"class.net::MDnsClientImpl::Core"* %4 to void (%"class.net::MDnsClientImpl::Core"*)***
  %9 = load void (%"class.net::MDnsClientImpl::Core"*)**, void (%"class.net::MDnsClientImpl::Core"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %9, i64 3
  %11 = load void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %10, align 8
  tail call void %11(%"class.net::MDnsClientImpl::Core"* nonnull %4) #17
  %12 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %3, align 8
  store %"class.net::MDnsClientImpl::Core"* null, %"class.net::MDnsClientImpl::Core"** %3, align 8
  %13 = icmp eq %"class.net::MDnsClientImpl::Core"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.net::MDnsClientImpl::Core"* %12 to void (%"class.net::MDnsClientImpl::Core"*)***
  %16 = load void (%"class.net::MDnsClientImpl::Core"*)**, void (%"class.net::MDnsClientImpl::Core"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %16, i64 3
  %18 = load void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %17, align 8
  tail call void %18(%"class.net::MDnsClientImpl::Core"* nonnull %12) #17
  br label %19

19:                                               ; preds = %14, %7, %6
  %20 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %20, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %20, align 8
  %22 = icmp eq %"class.base::OneShotTimer"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.base::OneShotTimer"* %21 to void (%"class.base::OneShotTimer"*)***
  %25 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %25, i64 1
  %27 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %26, align 8
  tail call void %27(%"class.base::OneShotTimer"* nonnull %21) #17
  br label %28

28:                                               ; preds = %19, %23
  %29 = bitcast %"class.net::MDnsClientImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14MDnsClientImpl14StartListeningEPNS_17MDnsSocketFactoryE(%"class.net::MDnsClientImpl"* nocapture, %"class.net::MDnsSocketFactory"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OneShotTimer"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_Znwm(i64 112) #18
  %9 = bitcast %"class.base::Clock"** %4 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"class.base::internal::WeakReferenceOwner"*
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %12) #17
  %13 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14MDnsClientImpl4CoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 24
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #17
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 40
  %18 = bitcast i8* %17 to %"class.net::MDnsCache"*
  tail call void @_ZN3net9MDnsCacheC1Ev(%"class.net::MDnsCache"* %18) #17
  %19 = getelementptr inbounds i8, i8* %8, i64 80
  %20 = bitcast i8* %19 to i64*
  store i64 %10, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %8, i64 88
  %22 = bitcast i8* %21 to i64*
  store i64 %7, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %8, i64 96
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %8, i64 104
  %26 = tail call i8* @_Znwm(i64 56) #18
  %27 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net14MDnsConnectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #17
  %29 = getelementptr inbounds i8, i8* %26, i64 32
  %30 = bitcast i8* %29 to i8**
  store i8* %8, i8** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 40
  %32 = bitcast i8* %31 to %"class.base::internal::WeakPtrFactoryBase"*
  %33 = ptrtoint i8* %26 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %32, i64 %33) #17
  %34 = bitcast i8* %25 to i64*
  store i64 %33, i64* %34, align 8
  %35 = ptrtoint i8* %8 to i64
  %36 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 3
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.179"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.179"* %36 to i64*
  store i64 %35, i64* %39, align 8
  %40 = icmp eq %"class.net::MDnsClientImpl::Core"* %38, null
  %41 = bitcast i8* %8 to %"class.net::MDnsClientImpl::Core"*
  br i1 %40, label %48, label %42

42:                                               ; preds = %2
  %43 = bitcast %"class.net::MDnsClientImpl::Core"* %38 to void (%"class.net::MDnsClientImpl::Core"*)***
  %44 = load void (%"class.net::MDnsClientImpl::Core"*)**, void (%"class.net::MDnsClientImpl::Core"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %44, i64 3
  %46 = load void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %45, align 8
  tail call void %46(%"class.net::MDnsClientImpl::Core"* nonnull %38) #17
  %47 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %37, align 8
  br label %48

48:                                               ; preds = %42, %2
  %49 = phi %"class.net::MDnsClientImpl::Core"* [ %47, %42 ], [ %41, %2 ]
  %50 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %49, i64 0, i32 5
  %51 = bitcast %"class.base::OneShotTimer"** %50 to %"class.base::internal::TimerBase"**
  %52 = load %"class.base::internal::TimerBase"*, %"class.base::internal::TimerBase"** %51, align 8
  %53 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %52) #17
  br i1 %53, label %54, label %57

54:                                               ; preds = %48
  %55 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 215, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #17
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #17
  br label %57

57:                                               ; preds = %48, %54
  %58 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %49, i64 0, i32 7, i32 0, i32 0, i32 0
  %59 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %58, align 8
  %60 = call i32 @_ZN3net14MDnsConnection4InitEPNS_17MDnsSocketFactoryE(%"class.net::MDnsConnection"* %59, %"class.net::MDnsSocketFactory"* %1) #17
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %37, align 8
  store %"class.net::MDnsClientImpl::Core"* null, %"class.net::MDnsClientImpl::Core"** %37, align 8
  %64 = icmp eq %"class.net::MDnsClientImpl::Core"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.net::MDnsClientImpl::Core"* %63 to void (%"class.net::MDnsClientImpl::Core"*)***
  %67 = load void (%"class.net::MDnsClientImpl::Core"*)**, void (%"class.net::MDnsClientImpl::Core"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %67, i64 3
  %69 = load void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %68, align 8
  call void %69(%"class.net::MDnsClientImpl::Core"* nonnull %63) #17
  br label %70

70:                                               ; preds = %65, %62, %57
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14MDnsClientImpl13StopListeningEv(%"class.net::MDnsClientImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %2, align 8
  store %"class.net::MDnsClientImpl::Core"* null, %"class.net::MDnsClientImpl::Core"** %2, align 8
  %4 = icmp eq %"class.net::MDnsClientImpl::Core"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::MDnsClientImpl::Core"* %3 to void (%"class.net::MDnsClientImpl::Core"*)***
  %7 = load void (%"class.net::MDnsClientImpl::Core"*)**, void (%"class.net::MDnsClientImpl::Core"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %7, i64 3
  %9 = load void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %8, align 8
  tail call void %9(%"class.net::MDnsClientImpl::Core"* nonnull %3) #17
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net14MDnsClientImpl11IsListeningEv(%"class.net::MDnsClientImpl"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %2, align 8
  %4 = icmp ne %"class.net::MDnsClientImpl::Core"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::MDnsListener"* @_ZN3net14MDnsClientImpl14CreateListenerEtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_12MDnsListener8DelegateE(%"class.net::MDnsClientImpl"*, i16 zeroext, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.net::MDnsListener::Delegate"*) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 112) #18
  %6 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %0, i64 0, i32 1
  %7 = bitcast %"class.base::Clock"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net12MDnsListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  %11 = bitcast i8* %10 to %"class.base::internal::WeakReferenceOwner"*
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %11) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net16MDnsListenerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 16
  %13 = bitcast i8* %12 to i16*
  store i16 %1, i16* %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 24
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %20, i64 24, i1 false) #17
  br label %27

21:                                               ; preds = %4
  %22 = bitcast i8* %14 to %"class.std::__1::basic_string"*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %22, i8* %24, i64 %26) #17
  br label %27

27:                                               ; preds = %19, %21
  %28 = getelementptr inbounds i8, i8* %5, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %8, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %5, i64 56
  %31 = bitcast i8* %30 to %"class.net::MDnsClientImpl"**
  store %"class.net::MDnsClientImpl"* %0, %"class.net::MDnsClientImpl"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %5, i64 64
  %33 = bitcast i8* %32 to %"class.net::MDnsListener::Delegate"**
  store %"class.net::MDnsListener::Delegate"* %3, %"class.net::MDnsListener::Delegate"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %5, i64 72
  %35 = bitcast i8* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 84
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds i8, i8* %5, i64 85
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds i8, i8* %5, i64 88
  %39 = bitcast i8* %38 to %"class.base::internal::BindStateBase"**
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8
  %40 = getelementptr inbounds i8, i8* %5, i64 96
  %41 = bitcast i8* %40 to %"class.base::internal::WeakPtrFactoryBase"*
  %42 = ptrtoint i8* %38 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %41, i64 %42) #17
  %43 = bitcast i8* %5 to %"class.net::MDnsListener"*
  ret %"class.net::MDnsListener"* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::MDnsTransaction"* @_ZN3net14MDnsClientImpl17CreateTransactionEtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiRKN4base17RepeatingCallbackIFvNS_15MDnsTransaction6ResultEPKNS_12RecordParsedEEEE(%"class.net::MDnsClientImpl"*, i16 zeroext, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, %"class.base::RepeatingCallback.201"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = tail call i8* @_Znwm(i64 112) #18
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to %"class.base::internal::WeakReferenceOwner"*
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %8) #17
  %9 = bitcast i8* %6 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [7 x i8*] }, { [10 x i8*], [7 x i8*] }* @_ZTVN3net19MDnsTransactionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [7 x i8*] }, { [10 x i8*], [7 x i8*] }* @_ZTVN3net19MDnsTransactionImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 24
  %13 = bitcast i8* %12 to i16*
  store i16 %1, i16* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 32
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %5
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %20, i64 24, i1 false) #17
  br label %27

21:                                               ; preds = %5
  %22 = bitcast i8* %14 to %"class.std::__1::basic_string"*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %22, i8* %24, i64 %26) #17
  br label %27

27:                                               ; preds = %19, %21
  %28 = getelementptr inbounds i8, i8* %6, i64 56
  %29 = bitcast i8* %28 to %"class.base::internal::CallbackBaseCopyable"*
  %30 = getelementptr inbounds %"class.base::RepeatingCallback.201", %"class.base::RepeatingCallback.201"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %29, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %30) #17
  %31 = getelementptr inbounds i8, i8* %6, i64 64
  %32 = getelementptr inbounds i8, i8* %6, i64 72
  %33 = getelementptr inbounds i8, i8* %6, i64 80
  %34 = bitcast i8* %33 to %"class.base::internal::WeakPtrFactoryBase"*
  %35 = ptrtoint i8* %32 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #17
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %34, i64 %35) #17
  %36 = getelementptr inbounds i8, i8* %6, i64 96
  %37 = bitcast i8* %36 to %"class.net::MDnsClientImpl"**
  store %"class.net::MDnsClientImpl"* %0, %"class.net::MDnsClientImpl"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %6, i64 104
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %6, i64 108
  %40 = bitcast i8* %39 to i32*
  store i32 %3, i32* %40, align 4
  %41 = bitcast i8* %6 to %"class.net::MDnsTransaction"*
  ret %"class.net::MDnsTransaction"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16MDnsListenerImplC2EtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base5ClockEPNS_12MDnsListener8DelegateEPNS_14MDnsClientImplE(%"class.net::MDnsListenerImpl"*, i16 zeroext, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.base::Clock"*, %"class.net::MDnsListener::Delegate"*, %"class.net::MDnsClientImpl"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net12MDnsListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %8) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net16MDnsListenerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 2
  store i16 %1, i16* %9, align 8
  %10 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #17
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %20, i64 %22) #17
  br label %23

23:                                               ; preds = %15, %18
  %24 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 4
  store %"class.base::Clock"* %3, %"class.base::Clock"** %24, align 8
  %25 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 5
  store %"class.net::MDnsClientImpl"* %5, %"class.net::MDnsClientImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 6
  store %"class.net::MDnsListener::Delegate"* %4, %"class.net::MDnsListener::Delegate"** %26, align 8
  %27 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 9
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 10
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11
  %31 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  %32 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11, i32 1, i32 0
  %33 = ptrtoint %"class.base::internal::CancelableCallbackImpl"* %30 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %32, i64 %33) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16MDnsListenerImplD2Ev(%"class.net::MDnsListenerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net16MDnsListenerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 4, !range !15
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 5
  %8 = load %"class.net::MDnsClientImpl"*, %"class.net::MDnsClientImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %9, align 8
  tail call void @_ZN3net14MDnsClientImpl4Core14RemoveListenerEPNS_16MDnsListenerImplE(%"class.net::MDnsClientImpl::Core"* %10, %"class.net::MDnsListenerImpl"* %0)
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %12) #17
  %13 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %13) #17
  %14 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 3
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #18
  br label %22

22:                                               ; preds = %11, %19
  %23 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %23) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16MDnsListenerImplD0Ev(%"class.net::MDnsListenerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net16MDnsListenerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 4, !range !15
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 5
  %8 = load %"class.net::MDnsClientImpl"*, %"class.net::MDnsClientImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %9, align 8
  tail call void @_ZN3net14MDnsClientImpl4Core14RemoveListenerEPNS_16MDnsListenerImplE(%"class.net::MDnsClientImpl::Core"* %10, %"class.net::MDnsListenerImpl"* %0) #17
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %12) #17
  %13 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %13) #17
  %14 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 3
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #18
  br label %22

22:                                               ; preds = %11, %19
  %23 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %23) #17
  %24 = bitcast %"class.net::MDnsListenerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16MDnsListenerImpl5StartEv(%"class.net::MDnsListenerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 9
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 5
  %4 = load %"class.net::MDnsClientImpl"*, %"class.net::MDnsClientImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %5, align 8
  tail call void @_ZN3net14MDnsClientImpl4Core11AddListenerEPNS_16MDnsListenerImplE(%"class.net::MDnsClientImpl::Core"* %6, %"class.net::MDnsListenerImpl"* %0)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16MDnsListenerImpl16SetActiveRefreshEb(%"class.net::MDnsListenerImpl"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 10
  store i8 %3, i8* %4, align 1
  %5 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 4, !range !15
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  br i1 %1, label %12, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %10) #17
  %11 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %11) #17
  br label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 7, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_ZN3net16MDnsListenerImpl19ScheduleNextRefreshEv(%"class.net::MDnsListenerImpl"* %0)
  br label %17

17:                                               ; preds = %12, %2, %9, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16MDnsListenerImpl19ScheduleNextRefreshEv(%"class.net::MDnsListenerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::internal::WeakReference", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = alloca %"class.base::WeakPtr.205", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.base::OnceCallback.72", align 8
  %11 = alloca %"class.base::RepeatingCallback", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.base::OnceCallback.72", align 8
  %14 = alloca %"class.base::RepeatingCallback", align 8
  %15 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 10
  %16 = load i8, i8* %15, align 1, !range !15
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %169, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 8
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11
  br i1 %21, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %24) #17
  %25 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %25) #17
  br label %169

26:                                               ; preds = %18
  %27 = bitcast %"class.base::WeakPtr.205"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #17
  %28 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 1
  %29 = bitcast %"class.base::internal::WeakReference"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17, !noalias !59
  %30 = getelementptr inbounds %"class.base::SupportsWeakPtr.172", %"class.base::SupportsWeakPtr.172"* %28, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %6, %"class.base::internal::WeakReferenceOwner"* %30) #17, !noalias !59
  %31 = getelementptr inbounds %"class.base::SupportsWeakPtr.172", %"class.base::SupportsWeakPtr.172"* %28, i64 -1
  %32 = getelementptr inbounds %"class.base::WeakPtr.205", %"class.base::WeakPtr.205"* %8, i64 0, i32 0
  %33 = ptrtoint %"class.base::SupportsWeakPtr.172"* %31 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %32, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %6, i64 %33) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17, !noalias !59
  %34 = call i8* @_Znwm(i64 64) #18, !noalias !62
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #17, !noalias !62
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::MDnsListenerImpl"*)* @_ZN3net16MDnsListenerImpl9DoRefreshEv to i64), i64 0>, <2 x i64>* %37, align 8, !noalias !62
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = bitcast i8* %38 to %"class.base::internal::WeakReference"*
  %40 = getelementptr inbounds %"class.base::WeakPtr.205", %"class.base::WeakPtr.205"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %39, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %40) #17, !noalias !62
  %41 = getelementptr inbounds i8, i8* %34, i64 56
  %42 = bitcast i8* %41 to i64*
  %43 = getelementptr inbounds %"class.base::WeakPtr.205", %"class.base::WeakPtr.205"* %8, i64 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8, !noalias !62
  store i64 %44, i64* %42, align 8, !noalias !62
  %45 = bitcast %"class.base::RepeatingCallback"* %7 to i8**
  store i8* %34, i8** %45, align 8, !alias.scope !62
  %46 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %46) #17
  %47 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %22, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %47) #17
  %48 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %22, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0
  %50 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %48, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %49) #17
  %51 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #17
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %32) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #17
  %52 = load i32, i32* %19, align 8
  %53 = uitofp i32 %52 to double
  %54 = fmul double %53, 8.500000e+02
  %55 = fptosi double %54 to i32
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %56, 1000
  %58 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 7, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %57, -9223372036854775808
  br i1 %60, label %68, label %61

61:                                               ; preds = %26
  %62 = icmp slt i32 %55, 0
  %63 = select i1 %62, i64 -9223372036854775808, i64 9223372036854775807
  %64 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %59, i64 %57) #17
  %65 = extractvalue { i64, i1 } %64, 1
  %66 = extractvalue { i64, i1 } %64, 0
  %67 = select i1 %65, i64 %63, i64 %66, !prof !67
  br label %79

68:                                               ; preds = %26
  %69 = add i64 %59, -9223372036854775807
  %70 = icmp ugt i64 %69, 1
  %71 = icmp eq i64 %59, -9223372036854775808
  %72 = or i1 %70, %71
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0)) #17
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #17
  %76 = load i32, i32* %19, align 8
  %77 = load i64, i64* %58, align 8
  %78 = uitofp i32 %76 to double
  br label %79

79:                                               ; preds = %61, %68, %73
  %80 = phi double [ %53, %61 ], [ %53, %68 ], [ %78, %73 ]
  %81 = phi i64 [ %59, %61 ], [ %59, %68 ], [ %77, %73 ]
  %82 = phi i64 [ %67, %61 ], [ -9223372036854775808, %68 ], [ -9223372036854775808, %73 ]
  %83 = fmul double %80, 9.500000e+02
  %84 = fptosi double %83 to i32
  %85 = sext i32 %84 to i64
  %86 = mul nsw i64 %85, 1000
  %87 = icmp eq i64 %86, -9223372036854775808
  br i1 %87, label %95, label %88

88:                                               ; preds = %79
  %89 = icmp slt i32 %84, 0
  %90 = select i1 %89, i64 -9223372036854775808, i64 9223372036854775807
  %91 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %81, i64 %86) #17
  %92 = extractvalue { i64, i1 } %91, 1
  %93 = extractvalue { i64, i1 } %91, 0
  %94 = select i1 %92, i64 %90, i64 %93, !prof !67
  br label %103

95:                                               ; preds = %79
  %96 = add i64 %81, -9223372036854775807
  %97 = icmp ugt i64 %96, 1
  %98 = icmp eq i64 %81, -9223372036854775808
  %99 = or i1 %97, %98
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0)) #17
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #17
  br label %103

103:                                              ; preds = %88, %95, %100
  %104 = phi i64 [ %94, %88 ], [ -9223372036854775808, %95 ], [ -9223372036854775808, %100 ]
  %105 = call dereferenceable(8) %class.scoped_refptr.70* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #17
  %106 = getelementptr inbounds %class.scoped_refptr.70, %class.scoped_refptr.70* %105, i64 0, i32 0
  %107 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %106, align 8
  %108 = bitcast %"class.base::SingleThreadTaskRunner"* %107 to %"class.base::TaskRunner"*
  %109 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 608) #17
  %110 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %110, align 8, !noalias !68
  %112 = icmp eq %"class.base::internal::BindStateBase"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %114, align 8, !alias.scope !68
  br label %122

115:                                              ; preds = %103
  %116 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #17, !noalias !68
  %117 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8, !noalias !68
  call void @_ZNK4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"* %22, %"class.base::RepeatingCallback"* nonnull %3) #17, !noalias !68
  %118 = bitcast %"class.base::RepeatingCallback"* %3 to i64*
  %119 = load i64, i64* %118, align 8, !noalias !68
  %120 = bitcast %"class.base::RepeatingCallback"* %11 to i64*
  store i64 %119, i64* %120, align 8, !alias.scope !68
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8, !noalias !68
  %121 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %121) #17, !noalias !68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #17, !noalias !68
  br label %122

122:                                              ; preds = %113, %115
  %123 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %10, i64 0, i32 0
  %124 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %123, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %124) #17
  %125 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 4
  %126 = load %"class.base::Clock"*, %"class.base::Clock"** %125, align 8
  %127 = bitcast %"class.base::Clock"* %126 to i64 (%"class.base::Clock"*)***
  %128 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %127, align 8
  %129 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %128, i64 2
  %130 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %129, align 8
  %131 = call i64 %130(%"class.base::Clock"* %126) #17
  %132 = sub nsw i64 %82, %131
  %133 = bitcast %"class.base::SingleThreadTaskRunner"* %107 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)***
  %134 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)*** %133, align 8
  %135 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)** %134, align 8
  %136 = call zeroext i1 %135(%"class.base::TaskRunner"* %108, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback.72"* nonnull %10, i64 %132) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %123) #17
  %137 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %137) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #17
  %138 = call dereferenceable(8) %class.scoped_refptr.70* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #17
  %139 = getelementptr inbounds %class.scoped_refptr.70, %class.scoped_refptr.70* %138, i64 0, i32 0
  %140 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %139, align 8
  %141 = bitcast %"class.base::SingleThreadTaskRunner"* %140 to %"class.base::TaskRunner"*
  %142 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %142) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 611) #17
  %143 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %110, align 8, !noalias !71
  %144 = icmp eq %"class.base::internal::BindStateBase"* %143, null
  br i1 %144, label %145, label %147

145:                                              ; preds = %122
  %146 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %146, align 8, !alias.scope !71
  br label %154

147:                                              ; preds = %122
  %148 = bitcast %"class.base::RepeatingCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #17, !noalias !71
  %149 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %149, align 8, !noalias !71
  call void @_ZNK4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"* %22, %"class.base::RepeatingCallback"* nonnull %2) #17, !noalias !71
  %150 = bitcast %"class.base::RepeatingCallback"* %2 to i64*
  %151 = load i64, i64* %150, align 8, !noalias !71
  %152 = bitcast %"class.base::RepeatingCallback"* %14 to i64*
  store i64 %151, i64* %152, align 8, !alias.scope !71
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %149, align 8, !noalias !71
  %153 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %153) #17, !noalias !71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #17, !noalias !71
  br label %154

154:                                              ; preds = %145, %147
  %155 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %13, i64 0, i32 0
  %156 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %155, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %156) #17
  %157 = load %"class.base::Clock"*, %"class.base::Clock"** %125, align 8
  %158 = bitcast %"class.base::Clock"* %157 to i64 (%"class.base::Clock"*)***
  %159 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %158, align 8
  %160 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %159, i64 2
  %161 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %160, align 8
  %162 = call i64 %161(%"class.base::Clock"* %157) #17
  %163 = sub nsw i64 %104, %162
  %164 = bitcast %"class.base::SingleThreadTaskRunner"* %140 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)***
  %165 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)*** %164, align 8
  %166 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)** %165, align 8
  %167 = call zeroext i1 %166(%"class.base::TaskRunner"* %141, %"class.base::Location"* nonnull dereferenceable(32) %12, %"class.base::OnceCallback.72"* nonnull %13, i64 %163) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %155) #17
  %168 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %14, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %168) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %142) #17
  br label %169

169:                                              ; preds = %1, %154, %23
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3net16MDnsListenerImpl7GetNameEv(%"class.net::MDnsListenerImpl"* readnone) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 3
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK3net16MDnsListenerImpl7GetTypeEv(%"class.net::MDnsListenerImpl"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 2
  %3 = load i16, i16* %2, align 8
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16MDnsListenerImpl9DoRefreshEv(%"class.net::MDnsListenerImpl"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 5
  %3 = load %"class.net::MDnsClientImpl"*, %"class.net::MDnsClientImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %4, align 8
  %6 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = getelementptr inbounds %"class.net::MDnsListenerImpl", %"class.net::MDnsListenerImpl"* %0, i64 0, i32 3
  %9 = tail call zeroext i1 @_ZN3net14MDnsClientImpl4Core9SendQueryEtRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::MDnsClientImpl::Core"* %5, i16 zeroext %7, %"class.std::__1::basic_string"* dereferenceable(24) %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImplC2EtRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiRKN4base17RepeatingCallbackIFvNS_15MDnsTransaction6ResultEPKNS_12RecordParsedEEEEPNS_14MDnsClientImplE(%"class.net::MDnsTransactionImpl"*, i16 zeroext, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, %"class.base::RepeatingCallback.201"* dereferenceable(8), %"class.net::MDnsClientImpl"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %7) #17
  %8 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [7 x i8*] }, { [10 x i8*], [7 x i8*] }* @_ZTVN3net19MDnsTransactionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [7 x i8*] }, { [10 x i8*], [7 x i8*] }* @_ZTVN3net19MDnsTransactionImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 3
  store i16 %1, i16* %10, align 8
  %11 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #17
  br label %24

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %21, i64 %23) #17
  br label %24

24:                                               ; preds = %16, %19
  %25 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 5, i32 0
  %26 = getelementptr inbounds %"class.base::RepeatingCallback.201", %"class.base::RepeatingCallback.201"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %25, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %26) #17
  %27 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 6
  %28 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7
  %29 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7, i32 1, i32 0
  %30 = ptrtoint %"class.base::internal::CancelableCallbackImpl.203"* %28 to i64
  %31 = bitcast %"class.std::__1::unique_ptr.189"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %29, i64 %30) #17
  %32 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 8
  store %"class.net::MDnsClientImpl"* %5, %"class.net::MDnsClientImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 9
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 10
  store i32 %3, i32* %34, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImplD2Ev(%"class.net::MDnsTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [7 x i8*] }, { [10 x i8*], [7 x i8*] }* @_ZTVN3net19MDnsTransactionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [7 x i8*] }, { [10 x i8*], [7 x i8*] }* @_ZTVN3net19MDnsTransactionImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %4) #17
  %5 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %5) #17
  %6 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #17
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #17
  %7 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"class.net::MDnsListener"*, %"class.net::MDnsListener"** %7, align 8
  store %"class.net::MDnsListener"* null, %"class.net::MDnsListener"** %7, align 8
  %9 = icmp eq %"class.net::MDnsListener"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.net::MDnsListener"* %8 to void (%"class.net::MDnsListener"*)***
  %12 = load void (%"class.net::MDnsListener"*)**, void (%"class.net::MDnsListener"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %12, i64 1
  %14 = load void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %13, align 8
  tail call void %14(%"class.net::MDnsListener"* nonnull %8) #17
  br label %15

15:                                               ; preds = %1, %10
  %16 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %16) #17
  %17 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 4
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %15, %22
  %26 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %26) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net19MDnsTransactionImplD1Ev(%"class.net::MDnsTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 -1, i32 8
  %3 = bitcast %"class.net::MDnsClientImpl"** %2 to %"class.net::MDnsTransactionImpl"*
  tail call void @_ZN3net19MDnsTransactionImplD2Ev(%"class.net::MDnsTransactionImpl"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImplD0Ev(%"class.net::MDnsTransactionImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net19MDnsTransactionImplD2Ev(%"class.net::MDnsTransactionImpl"* %0) #17
  %2 = bitcast %"class.net::MDnsTransactionImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net19MDnsTransactionImplD0Ev(%"class.net::MDnsTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 -1, i32 8
  %3 = bitcast %"class.net::MDnsClientImpl"** %2 to %"class.net::MDnsTransactionImpl"*
  tail call void @_ZN3net19MDnsTransactionImplD2Ev(%"class.net::MDnsTransactionImpl"* %3) #17
  %4 = bitcast %"class.net::MDnsClientImpl"** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19MDnsTransactionImpl5StartEv(%"class.net::MDnsTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::WeakPtr.206", align 8
  %4 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 9
  store i8 1, i8* %4, align 8
  %5 = bitcast %"class.base::WeakPtr.206"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 1
  %8 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  %9 = bitcast %"class.base::WeakPtr.206"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17, !noalias !74
  %10 = getelementptr inbounds %"class.base::SupportsWeakPtr.202", %"class.base::SupportsWeakPtr.202"* %7, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %10) #17, !noalias !74
  %11 = getelementptr inbounds %"class.base::SupportsWeakPtr.202", %"class.base::SupportsWeakPtr.202"* %7, i64 -1
  %12 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %3, i64 0, i32 0
  %13 = ptrtoint %"class.base::SupportsWeakPtr.202"* %11 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %13) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17, !noalias !74
  %14 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 10
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  call void @_ZN3net19MDnsTransactionImpl21ServeRecordsFromCacheEv(%"class.net::MDnsTransactionImpl"* %0)
  %19 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %3, i64 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %19) #17
  br i1 %20, label %21, label %42

21:                                               ; preds = %18
  %22 = bitcast i64* %6 to %"class.net::MDnsTransactionImpl"**
  %23 = load %"class.net::MDnsTransactionImpl"*, %"class.net::MDnsTransactionImpl"** %22, align 8
  %24 = icmp eq %"class.net::MDnsTransactionImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %26, align 8
  %28 = icmp eq %"class.base::internal::BindStateBase"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* %14, align 4
  br label %31

31:                                               ; preds = %29, %1
  %32 = phi i32 [ %30, %29 ], [ %15, %1 ]
  %33 = and i32 %32, 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = call zeroext i1 @_ZN3net19MDnsTransactionImpl14QueryAndListenEv(%"class.net::MDnsTransactionImpl"* %0)
  br label %42

37:                                               ; preds = %31
  %38 = and i32 %32, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"* %0, i32 2, %"class.net::RecordParsed"* null) #17
  br label %42

41:                                               ; preds = %37
  call void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"* %0, i32 1, %"class.net::RecordParsed"* null) #17
  br label %42

42:                                               ; preds = %25, %21, %18, %41, %40, %35
  %43 = phi i1 [ %36, %35 ], [ true, %25 ], [ true, %21 ], [ true, %40 ], [ true, %41 ], [ true, %18 ]
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #17
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImpl21ServeRecordsFromCacheEv(%"class.net::MDnsTransactionImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.std::__1::vector.148", align 8
  %6 = alloca %"class.base::WeakPtr.206", align 8
  %7 = bitcast %"class.std::__1::vector.148"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.std::__1::vector.148", %"class.std::__1::vector.148"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.148", %"class.std::__1::vector.148"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #17
  %10 = bitcast %"class.base::WeakPtr.206"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 1
  %12 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  %13 = bitcast %"class.base::WeakPtr.206"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17, !noalias !77
  %14 = getelementptr inbounds %"class.base::SupportsWeakPtr.202", %"class.base::SupportsWeakPtr.202"* %11, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %14) #17, !noalias !77
  %15 = getelementptr inbounds %"class.base::SupportsWeakPtr.202", %"class.base::SupportsWeakPtr.202"* %11, i64 -1
  %16 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %6, i64 0, i32 0
  %17 = ptrtoint %"class.base::SupportsWeakPtr.202"* %15 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %16, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %17) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17, !noalias !77
  %18 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 8
  %19 = load %"class.net::MDnsClientImpl"*, %"class.net::MDnsClientImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %20, align 8
  %22 = icmp eq %"class.net::MDnsClientImpl::Core"* %21, null
  br i1 %22, label %108, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %6, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 3
  %26 = load i16, i16* %25, align 8
  %27 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %21, i64 0, i32 3
  %29 = zext i16 %26 to i32
  %30 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %21, i64 0, i32 4
  %31 = load %"class.base::Clock"*, %"class.base::Clock"** %30, align 8
  %32 = bitcast %"class.base::Clock"* %31 to i64 (%"class.base::Clock"*)***
  %33 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %33, i64 2
  %35 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %34, align 8
  %36 = call i64 %35(%"class.base::Clock"* %31) #17
  call void @_ZNK3net9MDnsCache14FindDnsRecordsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorIPKNS_12RecordParsedENS5_ISD_EEEEN4base4TimeE(%"class.net::MDnsCache"* %28, i32 %29, %"class.std::__1::basic_string"* dereferenceable(24) %27, %"class.std::__1::vector.148"* nonnull %5, i64 %36) #17
  %37 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %8, align 8
  %38 = bitcast i64* %24 to %"class.net::MDnsTransactionImpl"**
  %39 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %9, align 8
  %40 = icmp eq %"class.net::RecordParsed"** %37, %39
  br i1 %40, label %69, label %41

41:                                               ; preds = %23
  %42 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %6, i64 0, i32 0, i32 0
  %43 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %44

44:                                               ; preds = %41, %61
  %45 = phi %"class.net::RecordParsed"** [ %37, %41 ], [ %66, %61 ]
  %46 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %42) #17
  %47 = xor i1 %46, true
  %48 = load %"class.net::MDnsTransactionImpl"*, %"class.net::MDnsTransactionImpl"** %38, align 8
  %49 = icmp eq %"class.net::MDnsTransactionImpl"* %48, null
  %50 = or i1 %49, %47
  br i1 %50, label %51, label %57

51:                                               ; preds = %44
  %52 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %9, align 8
  br label %53

53:                                               ; preds = %61, %51
  %54 = phi %"class.net::RecordParsed"** [ %52, %51 ], [ %66, %61 ]
  %55 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %8, align 8
  %56 = icmp eq %"class.net::RecordParsed"** %55, %54
  br i1 %56, label %69, label %108

57:                                               ; preds = %44
  %58 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %42) #17
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #17
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17
  br label %61

61:                                               ; preds = %59, %57
  %62 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %42) #17
  %63 = load %"class.net::MDnsTransactionImpl"*, %"class.net::MDnsTransactionImpl"** %38, align 8
  %64 = select i1 %62, %"class.net::MDnsTransactionImpl"* %63, %"class.net::MDnsTransactionImpl"* null
  %65 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %45, align 8
  call void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"* %64, i32 0, %"class.net::RecordParsed"* %65)
  %66 = getelementptr inbounds %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %45, i64 1
  %67 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %9, align 8
  %68 = icmp eq %"class.net::RecordParsed"** %66, %67
  br i1 %68, label %53, label %44

69:                                               ; preds = %23, %53
  %70 = load %"class.net::MDnsClientImpl"*, %"class.net::MDnsClientImpl"** %18, align 8
  %71 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %71, align 8
  %73 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %72, i64 0, i32 3
  %74 = getelementptr inbounds %"class.net::MDnsClientImpl::Core", %"class.net::MDnsClientImpl::Core"* %72, i64 0, i32 4
  %75 = load %"class.base::Clock"*, %"class.base::Clock"** %74, align 8
  %76 = bitcast %"class.base::Clock"* %75 to i64 (%"class.base::Clock"*)***
  %77 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %76, align 8
  %78 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %77, i64 2
  %79 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %78, align 8
  %80 = call i64 %79(%"class.base::Clock"* %75) #17
  call void @_ZNK3net9MDnsCache14FindDnsRecordsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorIPKNS_12RecordParsedENS5_ISD_EEEEN4base4TimeE(%"class.net::MDnsCache"* %73, i32 47, %"class.std::__1::basic_string"* dereferenceable(24) %27, %"class.std::__1::vector.148"* nonnull %5, i64 %80) #17
  %81 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %8, align 8
  %82 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %9, align 8
  %83 = icmp eq %"class.net::RecordParsed"** %81, %82
  br i1 %83, label %108, label %84

84:                                               ; preds = %69
  %85 = load %"class.net::RecordParsed"*, %"class.net::RecordParsed"** %81, align 8
  %86 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %85, i64 0, i32 2
  %87 = load i16, i16* %86, align 8
  %88 = icmp eq i16 %87, 47
  br i1 %88, label %89, label %93

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %85, i64 0, i32 5, i32 0, i32 0, i32 0
  %91 = bitcast %"class.net::RecordRdata"** %90 to %"class.net::NsecRecordRdata"**
  %92 = load %"class.net::NsecRecordRdata"*, %"class.net::NsecRecordRdata"** %91, align 8
  br label %93

93:                                               ; preds = %84, %89
  %94 = phi %"class.net::NsecRecordRdata"* [ %92, %89 ], [ null, %84 ]
  %95 = load i16, i16* %25, align 8
  %96 = zext i16 %95 to i32
  %97 = call zeroext i1 @_ZNK3net15NsecRecordRdata6GetBitEj(%"class.net::NsecRecordRdata"* %94, i32 %96) #17
  br i1 %97, label %108, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %6, i64 0, i32 0, i32 0
  %100 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %99) #17
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #17
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #17
  br label %104

104:                                              ; preds = %101, %98
  %105 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %99) #17
  %106 = load %"class.net::MDnsTransactionImpl"*, %"class.net::MDnsTransactionImpl"** %38, align 8
  %107 = select i1 %105, %"class.net::MDnsTransactionImpl"* %106, %"class.net::MDnsTransactionImpl"* null
  call void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"* %107, i32 3, %"class.net::RecordParsed"* null)
  br label %108

108:                                              ; preds = %93, %104, %1, %53, %69
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #17
  %109 = load %"class.net::RecordParsed"**, %"class.net::RecordParsed"*** %8, align 8
  %110 = icmp eq %"class.net::RecordParsed"** %109, null
  br i1 %110, label %115, label %111

111:                                              ; preds = %108
  %112 = ptrtoint %"class.net::RecordParsed"** %109 to i64
  %113 = bitcast %"class.net::RecordParsed"*** %9 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"class.net::RecordParsed"** %109 to i8*
  call void @_ZdlPv(i8* %114) #18
  br label %115

115:                                              ; preds = %108, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19MDnsTransactionImpl14QueryAndListenEv(%"class.net::MDnsTransactionImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::OnceCallback.72", align 8
  %4 = alloca %"class.base::OnceCallback.72", align 8
  %5 = alloca %"class.base::WeakPtr.206", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback.72", align 8
  %8 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 8
  %9 = load %"class.net::MDnsClientImpl"*, %"class.net::MDnsClientImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 3
  %11 = load i16, i16* %10, align 8
  %12 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 2
  %14 = bitcast %"class.net::MDnsClientImpl"* %9 to %"class.net::MDnsListener"* (%"class.net::MDnsClientImpl"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)***
  %15 = load %"class.net::MDnsListener"* (%"class.net::MDnsClientImpl"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)**, %"class.net::MDnsListener"* (%"class.net::MDnsClientImpl"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.net::MDnsListener"* (%"class.net::MDnsClientImpl"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)*, %"class.net::MDnsListener"* (%"class.net::MDnsClientImpl"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)** %15, i64 2
  %17 = load %"class.net::MDnsListener"* (%"class.net::MDnsClientImpl"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)*, %"class.net::MDnsListener"* (%"class.net::MDnsClientImpl"*, i16, %"class.std::__1::basic_string"*, %"class.net::MDnsListener::Delegate"*)** %16, align 8
  %18 = tail call %"class.net::MDnsListener"* %17(%"class.net::MDnsClientImpl"* %9, i16 zeroext %11, %"class.std::__1::basic_string"* dereferenceable(24) %12, %"class.net::MDnsListener::Delegate"* %13) #17
  %19 = ptrtoint %"class.net::MDnsListener"* %18 to i64
  %20 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.189"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.net::MDnsListener"*, %"class.net::MDnsListener"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.189"* %20 to i64*
  store i64 %19, i64* %23, align 8
  %24 = icmp eq %"class.net::MDnsListener"* %22, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %1
  %26 = bitcast %"class.net::MDnsListener"* %22 to void (%"class.net::MDnsListener"*)***
  %27 = load void (%"class.net::MDnsListener"*)**, void (%"class.net::MDnsListener"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %27, i64 1
  %29 = load void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %28, align 8
  tail call void %29(%"class.net::MDnsListener"* nonnull %22) #17
  %30 = load %"class.net::MDnsListener"*, %"class.net::MDnsListener"** %21, align 8
  br label %31

31:                                               ; preds = %25, %1
  %32 = phi %"class.net::MDnsListener"* [ %30, %25 ], [ %18, %1 ]
  %33 = bitcast %"class.net::MDnsListener"* %32 to i1 (%"class.net::MDnsListener"*)***
  %34 = load i1 (%"class.net::MDnsListener"*)**, i1 (%"class.net::MDnsListener"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.net::MDnsListener"*)*, i1 (%"class.net::MDnsListener"*)** %34, i64 2
  %36 = load i1 (%"class.net::MDnsListener"*)*, i1 (%"class.net::MDnsListener"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.net::MDnsListener"* %32) #17
  br i1 %37, label %38, label %93

38:                                               ; preds = %31
  %39 = load %"class.net::MDnsClientImpl"*, %"class.net::MDnsClientImpl"** %8, align 8
  %40 = getelementptr inbounds %"class.net::MDnsClientImpl", %"class.net::MDnsClientImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %40, align 8
  %42 = load i16, i16* %10, align 8
  %43 = tail call zeroext i1 @_ZN3net14MDnsClientImpl4Core9SendQueryEtRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::MDnsClientImpl::Core"* %41, i16 zeroext %42, %"class.std::__1::basic_string"* dereferenceable(24) %12)
  br i1 %43, label %44, label %93

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7
  %46 = bitcast %"class.base::WeakPtr.206"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 1
  %48 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #17, !noalias !80
  %49 = getelementptr inbounds %"class.base::SupportsWeakPtr.202", %"class.base::SupportsWeakPtr.202"* %47, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %49) #17, !noalias !80
  %50 = getelementptr inbounds %"class.base::SupportsWeakPtr.202", %"class.base::SupportsWeakPtr.202"* %47, i64 -1
  %51 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %5, i64 0, i32 0
  %52 = ptrtoint %"class.base::SupportsWeakPtr.202"* %50 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %51, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %52) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #17, !noalias !80
  %53 = call i8* @_Znwm(i64 64) #18, !noalias !83
  %54 = bitcast i8* %53 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %54, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #17, !noalias !83
  %55 = getelementptr inbounds i8, i8* %53, i64 32
  %56 = bitcast i8* %55 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::MDnsTransactionImpl"*)* @_ZN3net19MDnsTransactionImpl21SignalTransactionOverEv to i64), i64 0>, <2 x i64>* %56, align 8, !noalias !83
  %57 = getelementptr inbounds i8, i8* %53, i64 48
  %58 = bitcast i8* %57 to %"class.base::internal::WeakReference"*
  %59 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %58, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %59) #17, !noalias !83
  %60 = getelementptr inbounds i8, i8* %53, i64 56
  %61 = bitcast i8* %60 to i64*
  %62 = getelementptr inbounds %"class.base::WeakPtr.206", %"class.base::WeakPtr.206"* %5, i64 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8, !noalias !83
  store i64 %63, i64* %61, align 8, !noalias !83
  %64 = bitcast %"class.base::OnceCallback.72"* %4 to i8**
  store i8* %53, i8** %64, align 8, !alias.scope !83
  %65 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %65) #17
  %66 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.203", %"class.base::internal::CancelableCallbackImpl.203"* %45, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %66) #17
  %67 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %4, i64 0, i32 0
  %68 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %66, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %67) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #17
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %51) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #17
  %69 = call dereferenceable(8) %class.scoped_refptr.70* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #17
  %70 = getelementptr inbounds %class.scoped_refptr.70, %class.scoped_refptr.70* %69, i64 0, i32 0
  %71 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %70, align 8
  %72 = bitcast %"class.base::SingleThreadTaskRunner"* %71 to %"class.base::TaskRunner"*
  %73 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %73) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 753) #17
  %74 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.203", %"class.base::internal::CancelableCallbackImpl.203"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %74, align 8, !noalias !88
  %76 = icmp eq %"class.base::internal::BindStateBase"* %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %44
  %78 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %78, align 8, !alias.scope !88
  br label %86

79:                                               ; preds = %44
  %80 = bitcast %"class.base::OnceCallback.72"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #17, !noalias !88
  %81 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8, !noalias !88
  call void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl.203"* %45, %"class.base::OnceCallback.72"* nonnull %3) #17, !noalias !88
  %82 = bitcast %"class.base::OnceCallback.72"* %3 to i64*
  %83 = load i64, i64* %82, align 8, !noalias !88
  %84 = bitcast %"class.base::OnceCallback.72"* %7 to i64*
  store i64 %83, i64* %84, align 8, !alias.scope !88
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8, !noalias !88
  %85 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #17, !noalias !88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #17, !noalias !88
  br label %86

86:                                               ; preds = %77, %79
  %87 = load i64, i64* getelementptr inbounds (%"class.base::TimeDelta", %"class.base::TimeDelta"* @_ZN3net15MDnsTransaction19kTransactionTimeoutE, i64 0, i32 0), align 8
  %88 = bitcast %"class.base::SingleThreadTaskRunner"* %71 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)***
  %89 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)*** %88, align 8
  %90 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.72"*, i64)** %89, align 8
  %91 = call zeroext i1 %90(%"class.base::TaskRunner"* %72, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback.72"* nonnull %7, i64 %87) #17
  %92 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %73) #17
  br label %93

93:                                               ; preds = %38, %31, %86
  %94 = phi i1 [ true, %86 ], [ false, %31 ], [ false, %38 ]
  ret i1 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImpl21SignalTransactionOverEv(%"class.net::MDnsTransactionImpl"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i32 1, i32 2
  tail call void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"* %0, i32 %6, %"class.net::RecordParsed"* null)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3net19MDnsTransactionImpl7GetNameEv(%"class.net::MDnsTransactionImpl"* readnone) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 4
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK3net19MDnsTransactionImpl7GetTypeEv(%"class.net::MDnsTransactionImpl"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 3
  %3 = load i16, i16* %2, align 8
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImpl16CacheRecordFoundEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"*, %"class.net::RecordParsed"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::MDnsTransactionImpl"* %0 to void (%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*)***
  %4 = load void (%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*)**, void (%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*)*, void (%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*)** %4, i64 5
  %6 = load void (%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*)*, void (%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*)** %5, align 8
  tail call void %6(%"class.net::MDnsTransactionImpl"* %0, i32 0, %"class.net::RecordParsed"* %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RepeatingCallback.201", align 8
  %5 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %5, align 8
  %7 = icmp eq %"class.base::internal::BindStateBase"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.base::RepeatingCallback.201"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.base::RepeatingCallback.201", %"class.base::RepeatingCallback.201"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %10, align 8
  %11 = getelementptr inbounds %"class.base::RepeatingCallback.201", %"class.base::RepeatingCallback.201"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 5, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %11, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %12) #17
  %13 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 10
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = or i32 %15, %1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %19) #17
  %20 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %21 = load %"class.net::MDnsListener"*, %"class.net::MDnsListener"** %20, align 8
  store %"class.net::MDnsListener"* null, %"class.net::MDnsListener"** %20, align 8
  %22 = icmp eq %"class.net::MDnsListener"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.net::MDnsListener"* %21 to void (%"class.net::MDnsListener"*)***
  %25 = load void (%"class.net::MDnsListener"*)**, void (%"class.net::MDnsListener"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %25, i64 1
  %27 = load void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %26, align 8
  call void %27(%"class.net::MDnsListener"* nonnull %21) #17
  br label %28

28:                                               ; preds = %18, %23
  %29 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %29) #17
  %30 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %30) #17
  br label %31

31:                                               ; preds = %8, %28
  %32 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %33 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %32, i64 0, i32 1
  %34 = bitcast void ()** %33 to void (%"class.base::internal::BindStateBase"*, i32, %"class.net::RecordParsed"*)**
  %35 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.net::RecordParsed"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.net::RecordParsed"*)** %34, align 8
  call void %35(%"class.base::internal::BindStateBase"* %32, i32 %1, %"class.net::RecordParsed"* %2) #17
  %36 = getelementptr inbounds %"class.base::RepeatingCallback.201", %"class.base::RepeatingCallback.201"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  br label %37

37:                                               ; preds = %3, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImpl5ResetEv(%"class.net::MDnsTransactionImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %2) #17
  %3 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.net::MDnsListener"*, %"class.net::MDnsListener"** %3, align 8
  store %"class.net::MDnsListener"* null, %"class.net::MDnsListener"** %3, align 8
  %5 = icmp eq %"class.net::MDnsListener"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::MDnsListener"* %4 to void (%"class.net::MDnsListener"*)***
  %8 = load void (%"class.net::MDnsListener"*)**, void (%"class.net::MDnsListener"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %8, i64 1
  %10 = load void (%"class.net::MDnsListener"*)*, void (%"class.net::MDnsListener"*)** %9, align 8
  tail call void %10(%"class.net::MDnsListener"* nonnull %4) #17
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %12) #17
  %13 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %13) #17
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImpl14OnRecordUpdateENS_12MDnsListener10UpdateTypeEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*) unnamed_addr #0 align 2 {
  %4 = icmp ult i32 %1, 2
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"* %0, i32 0, %"class.net::RecordParsed"* %2)
  br label %6

6:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net19MDnsTransactionImpl14OnRecordUpdateENS_12MDnsListener10UpdateTypeEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"*, i32, %"class.net::RecordParsed"*) unnamed_addr #0 align 2 {
  %4 = icmp ult i32 %1, 2
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 -1, i32 8
  %7 = bitcast %"class.net::MDnsClientImpl"** %6 to %"class.net::MDnsTransactionImpl"*
  tail call void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"* %7, i32 0, %"class.net::RecordParsed"* %2) #17
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImpl12OnNsecRecordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj(%"class.net::MDnsTransactionImpl"*, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), i32) unnamed_addr #0 align 2 {
  tail call void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"* %0, i32 3, %"class.net::RecordParsed"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net19MDnsTransactionImpl12OnNsecRecordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj(%"class.net::MDnsTransactionImpl"*, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::MDnsTransactionImpl", %"class.net::MDnsTransactionImpl"* %0, i64 -1, i32 8
  %5 = bitcast %"class.net::MDnsClientImpl"** %4 to %"class.net::MDnsTransactionImpl"*
  tail call void @_ZN3net19MDnsTransactionImpl15TriggerCallbackENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::MDnsTransactionImpl"* %5, i32 3, %"class.net::RecordParsed"* null) #17
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net19MDnsTransactionImpl13OnCachePurgedEv(%"class.net::MDnsTransactionImpl"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZThn16_N3net19MDnsTransactionImpl13OnCachePurgedEv(%"class.net::MDnsTransactionImpl"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net17MDnsSocketFactoryD2Ev(%"class.net::MDnsSocketFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net21MDnsSocketFactoryImplD0Ev(%"class.net::MDnsSocketFactoryImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.net::MDnsSocketFactoryImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"struct.std::__1::pair.65"* %8, %"struct.std::__1::pair.65"* %12)
  %13 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"struct.std::__1::pair.65"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"struct.std::__1::pair.65"* %15, %"struct.std::__1::pair.65"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"*, %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"struct.std::__1::pair.65"*, align 8
  %6 = alloca %"struct.std::__1::pair.65"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"struct.std::__1::pair.65"* %1, %"struct.std::__1::pair.65"** %5, align 8
  store %"struct.std::__1::pair.65"* %2, %"struct.std::__1::pair.65"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"struct.std::__1::pair.65"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"struct.std::__1::pair.65"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #17
  %17 = bitcast %"struct.std::__1::pair.65"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* %16, i8* %18) #17
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #17
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  %26 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %5, align 8
  %27 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %6, align 8
  %28 = icmp eq %"struct.std::__1::pair.65"* %26, %27
  br i1 %28, label %51, label %29

29:                                               ; preds = %25, %46
  %30 = phi %"struct.std::__1::pair.65"* [ %48, %46 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %31, align 8
  %33 = icmp eq %"class.net::IOBuffer"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.45", %"class.base::RefCountedThreadSafe.45"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.45", %"class.base::RefCountedThreadSafe.45"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe.45"* %40 to %"class.net::IOBuffer"*
  %42 = bitcast %"class.base::RefCountedThreadSafe.45"* %40 to void (%"class.net::IOBuffer"*)***
  %43 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %43, i64 1
  %45 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %44, align 8
  call void %45(%"class.net::IOBuffer"* nonnull %41) #17
  br label %46

46:                                               ; preds = %29, %34, %39
  %47 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %5, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %47, i64 1
  store %"struct.std::__1::pair.65"* %48, %"struct.std::__1::pair.65"** %5, align 8
  %49 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %6, align 8
  %50 = icmp eq %"struct.std::__1::pair.65"* %48, %49
  br i1 %50, label %51, label %29

51:                                               ; preds = %46, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %24, i64 %1
  ret %"struct.std::__1::pair.65"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #9 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #17
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #3

declare void @_ZN3net9MDnsCache3KeyC1ERKS1_(%"class.net::MDnsCache::Key"*, %"class.net::MDnsCache::Key"* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net12MDnsListenerD2Ev(%"class.net::MDnsListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net12MDnsListenerD0Ev(%"class.net::MDnsListener"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !15
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3net20DatagramServerSocketENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.8"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.net::DatagramServerSocket"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !91

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.net::DatagramServerSocket"*, %"class.net::DatagramServerSocket"** %142, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %142, align 8
  %144 = icmp eq %"class.net::DatagramServerSocket"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.net::DatagramServerSocket"* %143 to void (%"class.net::DatagramServerSocket"*)***
  %147 = load void (%"class.net::DatagramServerSocket"*)**, void (%"class.net::DatagramServerSocket"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %147, i64 1
  %149 = load void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %148, align 8
  tail call void %149(%"class.net::DatagramServerSocket"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::MDnsConnection::SocketHandler"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::MDnsConnection::SocketHandler"*, i32)**
  %22 = load void (%"class.net::MDnsConnection::SocketHandler"*, i32)*, void (%"class.net::MDnsConnection::SocketHandler"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::MDnsConnection::SocketHandler"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::MDnsConnection::SocketHandler"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::MDnsConnection::SocketHandler"* %13, i32 %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #17
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 16) #17
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #17
  br i1 %37, label %38, label %39, !prof !67

38:                                               ; preds = %27
  tail call void @llvm.trap() #17
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #17
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #17
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #17
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #17
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"struct.std::__1::pair.65"* %11, %"struct.std::__1::pair.65"* %12, %"struct.std::__1::pair.65"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"struct.std::__1::pair.65"* %19, %"struct.std::__1::pair.65"* %20, %"struct.std::__1::pair.65"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(16) %"struct.std::__1::pair.65"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"struct.std::__1::pair.65"* %24, %"struct.std::__1::pair.65"* %25, %"struct.std::__1::pair.65"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"struct.std::__1::pair.65"* %0 to i64
  %6 = icmp ult %"struct.std::__1::pair.65"* %2, %1
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = ptrtoint %"struct.std::__1::pair.65"* %2 to i64
  %9 = ptrtoint %"struct.std::__1::pair.65"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #17
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #17
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !67

16:                                               ; preds = %7
  tail call void @llvm.trap() #17
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.19, i64 0, i64 0)) #17
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  br label %23

23:                                               ; preds = %3, %17, %20
  %24 = icmp eq %"struct.std::__1::pair.65"* %0, %1
  br i1 %24, label %53, label %25

25:                                               ; preds = %23, %49
  %26 = phi %"struct.std::__1::pair.65"* [ %51, %49 ], [ %2, %23 ]
  %27 = phi %"struct.std::__1::pair.65"* [ %50, %49 ], [ %0, %23 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %27, i64 0, i32 0, i32 0
  %29 = bitcast %"struct.std::__1::pair.65"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"struct.std::__1::pair.65"* %26 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %26, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %27, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %32, align 8
  %35 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %28, align 8
  %36 = icmp eq %"class.net::IOBuffer"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %35, i64 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.45", %"class.base::RefCountedThreadSafe.45"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.45", %"class.base::RefCountedThreadSafe.45"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe.45"* %43 to %"class.net::IOBuffer"*
  %45 = bitcast %"class.base::RefCountedThreadSafe.45"* %43 to void (%"class.net::IOBuffer"*)***
  %46 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %46, i64 1
  %48 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %47, align 8
  call void %48(%"class.net::IOBuffer"* nonnull %44) #17
  br label %49

49:                                               ; preds = %25, %37, %42
  %50 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %27, i64 1
  %51 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %26, i64 1
  %52 = icmp eq %"struct.std::__1::pair.65"* %50, %1
  br i1 %52, label %53, label %25

53:                                               ; preds = %49, %23
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair.65"* @_ZNK4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %24, i64 %1
  ret %"struct.std::__1::pair.65"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #17
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 16) #17
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #17
  br i1 %31, label %32, label %33, !prof !67

32:                                               ; preds = %27
  tail call void @llvm.trap() #17
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #17
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #17
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #17
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #17
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN3net14MDnsConnection13SocketHandlerEEclEPS3_(%"struct.std::__1::default_delete.31"*, %"class.net::MDnsConnection::SocketHandler"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.net::MDnsConnection::SocketHandler"* %1, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %1, i64 0, i32 6
  %6 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %1, i64 0, i32 6, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %1, i64 0, i32 6, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEjEEE13DestructRangeEmm(%"class.base::circular_deque"* %6, i64 %8, i64 %10) #17
  %11 = bitcast %"class.std::__1::queue"* %5 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @free(i8* %12) #17
  %13 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %1, i64 0, i32 4
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %13) #17
  %14 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %1, i64 0, i32 3
  tail call void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"* %14) #17
  %15 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %1, i64 0, i32 2
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %15) #17
  %16 = getelementptr inbounds %"class.net::MDnsConnection::SocketHandler", %"class.net::MDnsConnection::SocketHandler"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.net::DatagramServerSocket"*, %"class.net::DatagramServerSocket"** %16, align 8
  store %"class.net::DatagramServerSocket"* null, %"class.net::DatagramServerSocket"** %16, align 8
  %18 = icmp eq %"class.net::DatagramServerSocket"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.net::DatagramServerSocket"* %17 to void (%"class.net::DatagramServerSocket"*)***
  %21 = load void (%"class.net::DatagramServerSocket"*)**, void (%"class.net::DatagramServerSocket"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %21, i64 1
  %23 = load void (%"class.net::DatagramServerSocket"*)*, void (%"class.net::DatagramServerSocket"*)** %22, align 8
  tail call void %23(%"class.net::DatagramServerSocket"* nonnull %17) #17
  br label %24

24:                                               ; preds = %4, %19
  %25 = bitcast %"class.net::MDnsConnection::SocketHandler"* %1 to i8*
  tail call void @_ZdlPv(i8* %25) #18
  br label %26

26:                                               ; preds = %24, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3net14MDnsConnection13SocketHandlerENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.25"*, %"class.std::__1::unique_ptr.27"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.27"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.27"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.27"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.27"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.27"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.27"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.27"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.27"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.27"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.27"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.net::MDnsConnection::SocketHandler"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.27"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.27"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.27"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.27"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !92

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.27"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.27"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.27"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.27"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.27"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.27"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.27"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.27"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.27"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.27"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.27"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.27"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.27"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.27"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.27"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.27"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.27"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.27"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.27"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.27"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.27"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.27"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.27"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.27"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.27"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.27"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.27"*
  %138 = icmp eq %"class.std::__1::unique_ptr.27"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.27"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.net::MDnsConnection::SocketHandler"*, %"class.net::MDnsConnection::SocketHandler"** %142, align 8
  store %"class.net::MDnsConnection::SocketHandler"* null, %"class.net::MDnsConnection::SocketHandler"** %142, align 8
  %144 = icmp eq %"class.net::MDnsConnection::SocketHandler"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.std::__1::unique_ptr.27"* %141 to %"struct.std::__1::default_delete.31"*
  tail call void @_ZNKSt3__114default_deleteIN3net14MDnsConnection13SocketHandlerEEclEPS3_(%"struct.std::__1::default_delete.31"* %146, %"class.net::MDnsConnection::SocketHandler"* nonnull %143) #17
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.27"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #18
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS4_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #17
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.net::MDnsConnection"**
  %12 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %11, align 8
  %13 = icmp eq %"class.net::MDnsConnection"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #17
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #17
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #17
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.net::MDnsConnection"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.net::MDnsConnection"*, i32)**
  %39 = load void (%"class.net::MDnsConnection"*, i32)*, void (%"class.net::MDnsConnection"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.net::MDnsConnection"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.net::MDnsConnection"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.net::MDnsConnection"* %30, i32 %44) #17
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS4_EEiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::MDnsConnection"**
  %9 = load %"class.net::MDnsConnection"*, %"class.net::MDnsConnection"** %8, align 8
  %10 = icmp ne %"class.net::MDnsConnection"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #17
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %53, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #17
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList"* %12, null
  br i1 %13, label %43, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %12, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast %"class.base::internal::LinkNodeBase"** %15 to %"class.base::LinkNode"**
  %17 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %12, i64 0, i32 1, i32 0
  %18 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %16, align 8
  %19 = icmp eq %"class.base::LinkNode"* %18, %17
  br i1 %19, label %32, label %20

20:                                               ; preds = %14, %29
  %21 = phi %"class.base::LinkNode"* [ %30, %29 ], [ %18, %14 ]
  %22 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %21, i64 1
  %23 = bitcast %"class.base::LinkNode"* %22 to %"class.base::ObserverList"**
  %24 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  %25 = icmp eq %"class.base::ObserverList"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %23, align 8
  %27 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %21, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %27) #17
  %28 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %16, align 8
  br label %29

29:                                               ; preds = %26, %20
  %30 = phi %"class.base::LinkNode"* [ %21, %20 ], [ %28, %26 ]
  %31 = icmp eq %"class.base::LinkNode"* %30, %17
  br i1 %31, label %32, label %20

32:                                               ; preds = %29, %14
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %12, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  %38 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %12, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #18
  br label %41

41:                                               ; preds = %36, %32
  %42 = bitcast %"class.base::ObserverList"* %12 to i8*
  tail call void @_ZdlPv(i8* %42) #18
  br label %43

43:                                               ; preds = %41, %4
  %44 = bitcast %"struct.std::__1::pair.158"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::pair.158", %"struct.std::__1::pair.158"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %43, %48
  %52 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %2, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.115"*, %"class.std::__1::__tree_node.224"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.224"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.224"* %1 to %"class.std::__1::__tree_node.224"**
  %6 = load %"class.std::__1::__tree_node.224"*, %"class.std::__1::__tree_node.224"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.115"* %0, %"class.std::__1::__tree_node.224"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.224", %"class.std::__1::__tree_node.224"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.224"**
  %9 = load %"class.std::__1::__tree_node.224"*, %"class.std::__1::__tree_node.224"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.115"* %0, %"class.std::__1::__tree_node.224"* %9) #17
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.224", %"class.std::__1::__tree_node.224"* %1, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN3net9MDnsCache3KeyD1Ev(%"class.net::MDnsCache::Key"* %10) #17
  %11 = bitcast %"class.std::__1::__tree_node.224"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #18
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIS4_S5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.115"*, %"class.net::MDnsCache::Key"* dereferenceable(56), %"struct.std::__1::pair.137"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.115", %"class.std::__1::__tree.115"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.224"**
  %6 = load %"class.std::__1::__tree_node.224"*, %"class.std::__1::__tree_node.224"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.224"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.115", %"class.std::__1::__tree.115"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node.224"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.224", %"class.std::__1::__tree_node.224"* %11, i64 0, i32 2, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK3net9MDnsCache3KeyltERKS1_(%"class.net::MDnsCache::Key"* %1, %"class.net::MDnsCache::Key"* dereferenceable(56) %13) #17
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.224", %"class.std::__1::__tree_node.224"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.224", %"class.std::__1::__tree_node.224"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK3net9MDnsCache3KeyltERKS1_(%"class.net::MDnsCache::Key"* %13, %"class.net::MDnsCache::Key"* dereferenceable(56) %1) #17
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.224", %"class.std::__1::__tree_node.224"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.224", %"class.std::__1::__tree_node.224"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.224", %"class.std::__1::__tree_node.224"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node.224"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node.224"**
  %41 = load %"class.std::__1::__tree_node.224"*, %"class.std::__1::__tree_node.224"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node.224"* %41, null
  br i1 %42, label %43, label %73

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 96) #18, !noalias !93
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast i8* %45 to %"class.net::MDnsCache::Key"*
  %47 = getelementptr inbounds %"struct.std::__1::pair.137", %"struct.std::__1::pair.137"* %2, i64 0, i32 0
  tail call void @_ZN3net9MDnsCache3KeyC1ERKS1_(%"class.net::MDnsCache::Key"* %46, %"class.net::MDnsCache::Key"* dereferenceable(56) %47) #17, !noalias !93
  %48 = getelementptr inbounds i8, i8* %44, i64 88
  %49 = bitcast i8* %48 to i32*
  %50 = getelementptr inbounds %"struct.std::__1::pair.137", %"struct.std::__1::pair.137"* %2, i64 0, i32 1
  %51 = load i32, i32* %50, align 4, !noalias !93
  store i32 %51, i32* %49, align 8, !noalias !93
  %52 = bitcast i8* %44 to %"class.std::__1::__tree_node.224"*
  %53 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds i8, i8* %44, i64 16
  %55 = bitcast i8* %54 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree.115", %"class.std::__1::__tree.115"* %0, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %43
  %63 = ptrtoint %"class.std::__1::__tree_node_base"* %60 to i64
  %64 = bitcast %"class.std::__1::__tree.115"* %0 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %66

66:                                               ; preds = %62, %43
  %67 = phi %"class.std::__1::__tree_node_base"* [ %53, %43 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.std::__1::__tree.115", %"class.std::__1::__tree.115"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"* %67) #17
  %70 = getelementptr inbounds %"class.std::__1::__tree.115", %"class.std::__1::__tree.115"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  br label %73

73:                                               ; preds = %66, %37
  %74 = phi i8 [ 1, %66 ], [ 0, %37 ]
  %75 = phi %"class.std::__1::__tree_node.224"* [ %52, %66 ], [ %41, %37 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node.224", %"class.std::__1::__tree_node.224"* %75, i64 0, i32 0, i32 0
  %77 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %76, 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %77, i8 %74, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %78
}

declare zeroext i1 @_ZNK3net9MDnsCache3KeyltERKS1_(%"class.net::MDnsCache::Key"*, %"class.net::MDnsCache::Key"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !15
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !15
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !15
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSS_IJEEEEEENS_4pairINS_15__tree_iteratorISG_PNS_11__tree_nodeISG_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.238"* dereferenceable(8), %"class.std::__1::tuple.241"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* %1, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32) %15) #17
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZNK3net14MDnsClientImpl4Core11ListenerKeyltERKS2_(%"class.net::MDnsClientImpl::Core::ListenerKey"* %15, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32) %1) #17
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %90

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 72) #18, !noalias !96
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"class.std::__1::tuple.238", %"class.std::__1::tuple.238"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.net::MDnsClientImpl::Core::ListenerKey"*, %"class.net::MDnsClientImpl::Core::ListenerKey"** %48, align 8, !noalias !96
  %50 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1, !noalias !96
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %45
  %55 = bitcast %"class.net::MDnsClientImpl::Core::ListenerKey"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %55, i64 24, i1 false) #17, !noalias !96
  br label %62

56:                                               ; preds = %45
  %57 = bitcast i8* %47 to %"class.std::__1::basic_string"*
  %58 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8, !noalias !96
  %60 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8, !noalias !96
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %57, i8* %59, i64 %61) #17, !noalias !96
  br label %62

62:                                               ; preds = %54, %56
  %63 = getelementptr inbounds i8, i8* %46, i64 56
  %64 = bitcast i8* %63 to i16*
  %65 = getelementptr inbounds %"class.net::MDnsClientImpl::Core::ListenerKey", %"class.net::MDnsClientImpl::Core::ListenerKey"* %49, i64 0, i32 1
  %66 = load i16, i16* %65, align 8, !noalias !96
  store i16 %66, i16* %64, align 8, !noalias !96
  %67 = getelementptr inbounds i8, i8* %46, i64 64
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8, !noalias !96
  %69 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %70 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds i8, i8* %46, i64 16
  %72 = bitcast i8* %71 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %72, align 8
  %73 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %62
  %80 = ptrtoint %"class.std::__1::__tree_node_base"* %77 to i64
  %81 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %80, i64* %81, align 8
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %83

83:                                               ; preds = %62, %79
  %84 = phi %"class.std::__1::__tree_node_base"* [ %70, %62 ], [ %82, %79 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %86, %"class.std::__1::__tree_node_base"* %84) #17
  %87 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %87, align 8
  br label %90

90:                                               ; preds = %83, %39
  %91 = phi i8 [ 0, %39 ], [ 1, %83 ]
  %92 = phi %"class.std::__1::__tree_node"* [ %43, %39 ], [ %69, %83 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0
  %94 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %93, 0
  %95 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %94, i8 %91, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %95
}

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvRKNS5_11ListenerKeyEEJNS_7WeakPtrIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.net::MDnsClientImpl::Core::ListenerKey"*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #17
  br i1 %8, label %9, label %44

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.net::MDnsClientImpl::Core"**
  %12 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %11, align 8
  %13 = icmp eq %"class.net::MDnsClientImpl::Core"* %12, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #17
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #17
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #17
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.net::MDnsClientImpl::Core"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core::ListenerKey"*)**
  %39 = load void (%"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core::ListenerKey"*)*, void (%"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core::ListenerKey"*)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core::ListenerKey"*)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core::ListenerKey"*)* [ %39, %33 ], [ %41, %40 ]
  call void %43(%"class.net::MDnsClientImpl::Core"* %30, %"class.net::MDnsClientImpl::Core::ListenerKey"* dereferenceable(32) %6) #17
  br label %44

44:                                               ; preds = %1, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14MDnsClientImpl4CoreEFvRKNS4_11ListenerKeyEEJNS_7WeakPtrIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.base::internal::BindStateBase"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #18
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %14) #17
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #18
  br label %16

16:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvRKNS5_11ListenerKeyEEJNS_7WeakPtrIS5_EES6_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::MDnsClientImpl::Core"**
  %9 = load %"class.net::MDnsClientImpl::Core"*, %"class.net::MDnsClientImpl::Core"** %8, align 8
  %10 = icmp ne %"class.net::MDnsClientImpl::Core"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #17
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE5eraseENS_21__tree_const_iteratorISG_PNS_11__tree_nodeISG_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #17
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 8
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.base::ObserverList"**
  %48 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %47, align 8
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %47, align 8
  %49 = icmp eq %"class.base::ObserverList"* %48, null
  br i1 %49, label %79, label %50

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %48, i64 0, i32 1, i32 0, i32 0, i32 1
  %52 = bitcast %"class.base::internal::LinkNodeBase"** %51 to %"class.base::LinkNode"**
  %53 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %48, i64 0, i32 1, i32 0
  %54 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %52, align 8
  %55 = icmp eq %"class.base::LinkNode"* %54, %53
  br i1 %55, label %68, label %56

56:                                               ; preds = %50, %65
  %57 = phi %"class.base::LinkNode"* [ %66, %65 ], [ %54, %50 ]
  %58 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %57, i64 1
  %59 = bitcast %"class.base::LinkNode"* %58 to %"class.base::ObserverList"**
  %60 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %59, align 8
  %61 = icmp eq %"class.base::ObserverList"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %59, align 8
  %63 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %57, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %63) #17
  %64 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %52, align 8
  br label %65

65:                                               ; preds = %62, %56
  %66 = phi %"class.base::LinkNode"* [ %57, %56 ], [ %64, %62 ]
  %67 = icmp eq %"class.base::LinkNode"* %66, %53
  br i1 %67, label %68, label %56

68:                                               ; preds = %65, %50
  %69 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %48, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %69, align 8
  %71 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %70 to i64
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %48, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %70 to i8*
  tail call void @_ZdlPv(i8* %76) #18
  br label %77

77:                                               ; preds = %72, %68
  %78 = bitcast %"class.base::ObserverList"* %48 to i8*
  tail call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %77, %38
  %80 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %86 = load i8*, i8** %85, align 8
  tail call void @_ZdlPv(i8* %86) #18
  br label %87

87:                                               ; preds = %79, %84
  %88 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %88) #18
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !15
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !15
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !15
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !15
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !15
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !15
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !15
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !15
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !15
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !15
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !15
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !15
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !15
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.net::MDnsClientImpl::Core"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::MDnsClientImpl::Core"*)**
  %21 = load void (%"class.net::MDnsClientImpl::Core"*)*, void (%"class.net::MDnsClientImpl::Core"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.net::MDnsClientImpl::Core"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::MDnsClientImpl::Core"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::MDnsClientImpl::Core"* %12) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14MDnsClientImpl4CoreEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14MDnsClientImpl4CoreEFvPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"class.net::RecordParsed"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::MDnsClientImpl::Core"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::MDnsClientImpl::Core"*, %"class.net::RecordParsed"*)**
  %22 = load void (%"class.net::MDnsClientImpl::Core"*, %"class.net::RecordParsed"*)*, void (%"class.net::MDnsClientImpl::Core"*, %"class.net::RecordParsed"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::MDnsClientImpl::Core"*, %"class.net::RecordParsed"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::MDnsClientImpl::Core"*, %"class.net::RecordParsed"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::MDnsClientImpl::Core"* %13, %"class.net::RecordParsed"* %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14MDnsClientImpl4CoreEFvPKNS2_12RecordParsedEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::MDnsListenerImpl"**
  %10 = load %"class.net::MDnsListenerImpl"*, %"class.net::MDnsListenerImpl"** %9, align 8
  %11 = icmp eq %"class.net::MDnsListenerImpl"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.net::MDnsListenerImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.net::MDnsListenerImpl"*)**
  %37 = load void (%"class.net::MDnsListenerImpl"*)*, void (%"class.net::MDnsListenerImpl"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.net::MDnsListenerImpl"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.net::MDnsListenerImpl"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.net::MDnsListenerImpl"* %28) #17
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::MDnsListenerImpl"**
  %9 = load %"class.net::MDnsListenerImpl"*, %"class.net::MDnsListenerImpl"** %8, align 8
  %10 = icmp ne %"class.net::MDnsListenerImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #17
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = alloca %"class.base::WeakPtr.275", align 8
  %6 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = bitcast %"class.base::WeakPtr.275"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #17
  %8 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17, !noalias !99
  %9 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %9) #17, !noalias !99
  %10 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !99
  %12 = getelementptr inbounds %"class.base::WeakPtr.275", %"class.base::WeakPtr.275"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %11) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17, !noalias !99
  %13 = call i8* @_Znwm(i64 64) #18, !noalias !102
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #17, !noalias !102
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::CancelableCallbackImpl"*)* @_ZN4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE16ForwardRepeatingIJEEEvDpT_ to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !102
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to %"class.base::internal::WeakReference"*
  %19 = getelementptr inbounds %"class.base::WeakPtr.275", %"class.base::WeakPtr.275"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #17, !noalias !102
  %20 = getelementptr inbounds i8, i8* %13, i64 56
  %21 = bitcast i8* %20 to i64*
  %22 = getelementptr inbounds %"class.base::WeakPtr.275", %"class.base::WeakPtr.275"* %5, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !102
  store i64 %23, i64* %21, align 8, !noalias !102
  %24 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %13, i8** %24, align 8, !alias.scope !102
  %25 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  %27 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %25, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %26) #17
  %28 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #17
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE16ForwardRepeatingIJEEEvDpT_(%"class.base::internal::CancelableCallbackImpl"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %5 = bitcast void ()** %4 to void (%"class.base::internal::BindStateBase"*)**
  %6 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, align 8
  tail call void %6(%"class.base::internal::BindStateBase"* %3) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::CancelableCallbackImpl"**
  %10 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %9, align 8
  %11 = icmp eq %"class.base::internal::CancelableCallbackImpl"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.base::internal::CancelableCallbackImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.base::internal::CancelableCallbackImpl"*)**
  %37 = load void (%"class.base::internal::CancelableCallbackImpl"*)*, void (%"class.base::internal::CancelableCallbackImpl"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.base::internal::CancelableCallbackImpl"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.base::internal::CancelableCallbackImpl"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.base::internal::CancelableCallbackImpl"* %28) #17
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::CancelableCallbackImpl"**
  %9 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %8, align 8
  %10 = icmp ne %"class.base::internal::CancelableCallbackImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #17
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::MDnsTransactionImpl"**
  %10 = load %"class.net::MDnsTransactionImpl"*, %"class.net::MDnsTransactionImpl"** %9, align 8
  %11 = icmp eq %"class.net::MDnsTransactionImpl"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.net::MDnsTransactionImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.net::MDnsTransactionImpl"*)**
  %37 = load void (%"class.net::MDnsTransactionImpl"*)*, void (%"class.net::MDnsTransactionImpl"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.net::MDnsTransactionImpl"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.net::MDnsTransactionImpl"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.net::MDnsTransactionImpl"* %28) #17
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::MDnsTransactionImpl"**
  %9 = load %"class.net::MDnsTransactionImpl"*, %"class.net::MDnsTransactionImpl"** %8, align 8
  %10 = icmp ne %"class.net::MDnsTransactionImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #17
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl.203"*, %"class.base::OnceCallback.72"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback.72", align 8
  %5 = alloca %"class.base::WeakPtr.286", align 8
  %6 = bitcast %"class.base::OnceCallback.72"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = bitcast %"class.base::WeakPtr.286"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #17
  %8 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17, !noalias !107
  %9 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.203", %"class.base::internal::CancelableCallbackImpl.203"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %9) #17, !noalias !107
  %10 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.203", %"class.base::internal::CancelableCallbackImpl.203"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !107
  %12 = getelementptr inbounds %"class.base::WeakPtr.286", %"class.base::WeakPtr.286"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %11) #17
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17, !noalias !107
  %13 = call i8* @_Znwm(i64 64) #18, !noalias !110
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #17, !noalias !110
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::CancelableCallbackImpl.203"*)* @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !110
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to %"class.base::internal::WeakReference"*
  %19 = getelementptr inbounds %"class.base::WeakPtr.286", %"class.base::WeakPtr.286"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #17, !noalias !110
  %20 = getelementptr inbounds i8, i8* %13, i64 56
  %21 = bitcast i8* %20 to i64*
  %22 = getelementptr inbounds %"class.base::WeakPtr.286", %"class.base::WeakPtr.286"* %5, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !110
  store i64 %23, i64* %21, align 8, !noalias !110
  %24 = bitcast %"class.base::OnceCallback.72"* %4 to i8**
  store i8* %13, i8** %24, align 8, !alias.scope !110
  %25 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %4, i64 0, i32 0
  %27 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %25, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %26) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #17
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_(%"class.base::internal::CancelableCallbackImpl.203"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.72", align 8
  %3 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.203", %"class.base::internal::CancelableCallbackImpl.203"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %3) #17
  %4 = bitcast %"class.base::OnceCallback.72"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl.203", %"class.base::internal::CancelableCallbackImpl.203"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::internal::CancelableCallbackImpl.203"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback.72"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback.72", %"class.base::OnceCallback.72"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::CancelableCallbackImpl.203"**
  %10 = load %"class.base::internal::CancelableCallbackImpl.203"*, %"class.base::internal::CancelableCallbackImpl.203"** %9, align 8
  %11 = icmp eq %"class.base::internal::CancelableCallbackImpl.203"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.base::internal::CancelableCallbackImpl.203"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.base::internal::CancelableCallbackImpl.203"*)**
  %37 = load void (%"class.base::internal::CancelableCallbackImpl.203"*)*, void (%"class.base::internal::CancelableCallbackImpl.203"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.base::internal::CancelableCallbackImpl.203"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.base::internal::CancelableCallbackImpl.203"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.base::internal::CancelableCallbackImpl.203"* %28) #17
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #17
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::CancelableCallbackImpl.203"**
  %9 = load %"class.base::internal::CancelableCallbackImpl.203"*, %"class.base::internal::CancelableCallbackImpl.203"** %8, align 8
  %10 = icmp ne %"class.base::internal::CancelableCallbackImpl.203"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #17
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN3net14MDnsConnection13SocketHandlerEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN3net14MDnsConnection13SocketHandlerEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base14WeakPtrFactoryIN3net14MDnsConnectionEE10GetWeakPtrEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base14WeakPtrFactoryIN3net14MDnsConnectionEE10GetWeakPtrEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS4_EERiEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS4_EERiEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS2_EERiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMN3net14MDnsConnectionEFviEJNS_7WeakPtrIS2_EERiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!15 = !{i8 0, i8 2}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsConnection13SocketHandlerEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN3net14MDnsConnection13SocketHandlerEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN3net14MDnsConnection13SocketHandlerEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__19make_pairIRN3net9MDnsCache3KeyERNS2_10UpdateTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__19make_pairIRN3net9MDnsCache3KeyERNS2_10UpdateTypeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsClientImpl4CoreEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsClientImpl4CoreEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIMN3net14MDnsClientImpl4CoreEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIMN3net14MDnsClientImpl4CoreEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK4base12ObserverListIN3net16MDnsListenerImplELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK4base12ObserverListIN3net16MDnsListenerImplELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base12ObserverListIN3net16MDnsListenerImplELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base12ObserverListIN3net16MDnsListenerImplELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!35 = distinct !{!35, !36}
!36 = !{!"llvm.loop.unroll.disable"}
!37 = distinct !{!37, !36}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4base12ObserverListIN3net16MDnsListenerImplELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base12ObserverListIN3net16MDnsListenerImplELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK4base12ObserverListIN3net16MDnsListenerImplELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!43 = distinct !{!43, !"_ZNK4base12ObserverListIN3net16MDnsListenerImplELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!44 = distinct !{!44, !36}
!45 = distinct !{!45, !36}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN4base15SupportsWeakPtrIN3net14MDnsClientImpl4CoreEE9AsWeakPtrEv: argument 0"}
!48 = distinct !{!48, !"_ZN4base15SupportsWeakPtrIN3net14MDnsClientImpl4CoreEE9AsWeakPtrEv"}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsClientImpl4CoreEFvRKNS5_11ListenerKeyEEJNS_7WeakPtrIS5_EERS6_EEEDcOT0_DpOT1_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14MDnsClientImpl4CoreEFvRKNS5_11ListenerKeyEEJNS_7WeakPtrIS5_EERS6_EEEDcOT0_DpOT1_"}
!52 = distinct !{!52, !53, !"_ZN4base8BindOnceIMN3net14MDnsClientImpl4CoreEFvRKNS3_11ListenerKeyEEJNS_7WeakPtrIS3_EERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!53 = distinct !{!53, !"_ZN4base8BindOnceIMN3net14MDnsClientImpl4CoreEFvRKNS3_11ListenerKeyEEJNS_7WeakPtrIS3_EERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net14MDnsClientImpl4CoreEFvPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!56 = distinct !{!56, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net14MDnsClientImpl4CoreEFvPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!57 = distinct !{!57, !58, !"_ZN4base13BindRepeatingIMN3net14MDnsClientImpl4CoreEFvPKNS1_12RecordParsedEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!58 = distinct !{!58, !"_ZN4base13BindRepeatingIMN3net14MDnsClientImpl4CoreEFvPKNS1_12RecordParsedEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN4base15SupportsWeakPtrIN3net16MDnsListenerImplEE9AsWeakPtrEv: argument 0"}
!61 = distinct !{!61, !"_ZN4base15SupportsWeakPtrIN3net16MDnsListenerImplEE9AsWeakPtrEv"}
!62 = !{!63, !65}
!63 = distinct !{!63, !64, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!64 = distinct !{!64, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!65 = distinct !{!65, !66, !"_ZN4base13BindRepeatingIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!66 = distinct !{!66, !"_ZN4base13BindRepeatingIMN3net16MDnsListenerImplEFvvEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!67 = !{!"branch_weights", i32 1, i32 2000}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE8callbackEv: argument 0"}
!70 = distinct !{!70, !"_ZNK4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE8callbackEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE8callbackEv: argument 0"}
!73 = distinct !{!73, !"_ZNK4base8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEE8callbackEv"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN4base15SupportsWeakPtrIN3net19MDnsTransactionImplEE9AsWeakPtrEv: argument 0"}
!76 = distinct !{!76, !"_ZN4base15SupportsWeakPtrIN3net19MDnsTransactionImplEE9AsWeakPtrEv"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN4base15SupportsWeakPtrIN3net19MDnsTransactionImplEE9AsWeakPtrEv: argument 0"}
!79 = distinct !{!79, !"_ZN4base15SupportsWeakPtrIN3net19MDnsTransactionImplEE9AsWeakPtrEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN4base15SupportsWeakPtrIN3net19MDnsTransactionImplEE9AsWeakPtrEv: argument 0"}
!82 = distinct !{!82, !"_ZN4base15SupportsWeakPtrIN3net19MDnsTransactionImplEE9AsWeakPtrEv"}
!83 = !{!84, !86}
!84 = distinct !{!84, !85, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!85 = distinct !{!85, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!86 = distinct !{!86, !87, !"_ZN4base8BindOnceIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!87 = distinct !{!87, !"_ZN4base8BindOnceIMN3net19MDnsTransactionImplEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv: argument 0"}
!90 = distinct !{!90, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv"}
!91 = distinct !{!91, !36}
!92 = distinct !{!92, !36}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIS4_S5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_: argument 0"}
!95 = distinct !{!95, !"_ZNSt3__16__treeINS_12__value_typeIN3net9MDnsCache3KeyENS3_10UpdateTypeEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIS4_S5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSS_IJEEEEEENS6_INS_11__tree_nodeISG_PvEENS_22__tree_node_destructorINSL_ISZ_EEEEEEDpOT_: argument 0"}
!98 = distinct !{!98, !"_ZNSt3__16__treeINS_12__value_typeIN3net14MDnsClientImpl4Core11ListenerKeyENS_10unique_ptrIN4base12ObserverListINS2_16MDnsListenerImplELb0ELb1ENS7_8internal24UncheckedObserverAdapterEEENS_14default_deleteISC_EEEEEENS_19__map_value_compareIS5_SG_NS_4lessIS5_EELb1EEENS_9allocatorISG_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSS_IJEEEEEENS6_INS_11__tree_nodeISG_PvEENS_22__tree_node_destructorINSL_ISZ_EEEEEEDpOT_"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEE10GetWeakPtrEv: argument 0"}
!101 = distinct !{!101, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEE10GetWeakPtrEv"}
!102 = !{!103, !105}
!103 = distinct !{!103, !104, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_: argument 0"}
!104 = distinct !{!104, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_"}
!105 = distinct !{!105, !106, !"_ZN4base13BindRepeatingIRMNS_8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!106 = distinct !{!106, !"_ZN4base13BindRepeatingIRMNS_8internal22CancelableCallbackImplINS_17RepeatingCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv: argument 0"}
!109 = distinct !{!109, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv"}
!110 = !{!111, !113}
!111 = distinct !{!111, !112, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_: argument 0"}
!112 = distinct !{!112, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_"}
!113 = distinct !{!113, !114, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!114 = distinct !{!114, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
