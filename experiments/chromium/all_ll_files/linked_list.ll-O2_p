; ModuleID = '../../base/containers/linked_list.cc'
source_filename = "../../base/containers/linked_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type opaque

@.str = private unnamed_addr constant [21 x i8] c"previous_ == nullptr\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"../../base/containers/linked_list.cc\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"next_ == nullptr\00", align 1

@_ZN4base8internal12LinkNodeBaseC1Ev = hidden unnamed_addr alias void (%"class.base::internal::LinkNodeBase"*), void (%"class.base::internal::LinkNodeBase"*)* @_ZN4base8internal12LinkNodeBaseC2Ev
@_ZN4base8internal12LinkNodeBaseC1EPS1_S2_ = hidden unnamed_addr alias void (%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*), void (%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*)* @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_
@_ZN4base8internal12LinkNodeBaseC1EOS1_ = hidden unnamed_addr alias void (%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*), void (%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*)* @_ZN4base8internal12LinkNodeBaseC2EOS1_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::internal::LinkNodeBase"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* nocapture, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 0
  store %"class.base::internal::LinkNodeBase"* %1, %"class.base::internal::LinkNodeBase"** %4, align 8
  %5 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 1
  store %"class.base::internal::LinkNodeBase"* %2, %"class.base::internal::LinkNodeBase"** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base8internal12LinkNodeBaseC2EOS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* nocapture dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %1, i64 0, i32 1
  %5 = bitcast %"class.base::internal::LinkNodeBase"** %4 to i64*
  %6 = bitcast %"class.base::internal::LinkNodeBase"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  %7 = load i64, i64* %5, align 8
  %8 = bitcast %"class.base::internal::LinkNodeBase"** %3 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::LinkNodeBase"* null, %"class.base::internal::LinkNodeBase"** %4, align 8
  %9 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %1, i64 0, i32 0
  %10 = bitcast %"class.base::internal::LinkNodeBase"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::internal::LinkNodeBase"* %0 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::LinkNodeBase"* null, %"class.base::internal::LinkNodeBase"** %9, align 8
  %13 = load %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %3, align 8
  %14 = icmp eq %"class.base::internal::LinkNodeBase"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %13, i64 0, i32 0
  store %"class.base::internal::LinkNodeBase"* %0, %"class.base::internal::LinkNodeBase"** %17, align 8
  %18 = load %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %16, align 8
  %19 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %18, i64 0, i32 1
  store %"class.base::internal::LinkNodeBase"* %0, %"class.base::internal::LinkNodeBase"** %19, align 8
  br label %20

20:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 0
  %6 = load %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %6, i64 0, i32 1
  %8 = bitcast %"class.base::internal::LinkNodeBase"** %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = bitcast %"class.base::internal::LinkNodeBase"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::internal::LinkNodeBase"** %2 to i64**
  %12 = load i64*, i64** %11, align 8
  store i64 %10, i64* %12, align 8
  %13 = bitcast %"class.base::internal::LinkNodeBase"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 0
  %12 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = load %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %11, align 8
  %14 = icmp eq %"class.base::internal::LinkNodeBase"* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* null, i8** %10, align 8
  br label %26

16:                                               ; preds = %2
  %17 = bitcast %"class.base::internal::LinkNodeBase"* %13 to i8*
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEPKv(i8* nonnull %17) #6
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEDn(i8* null) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* %18, i8* %19) #6
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* %21, i8** %10, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 42, %"class.logging::CheckOpResult"* nonnull %5) #6
  %25 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  br label %26

26:                                               ; preds = %15, %16, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %27 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 1
  %30 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = load %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %29, align 8
  %32 = icmp eq %"class.base::internal::LinkNodeBase"* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %28, align 8
  br label %44

34:                                               ; preds = %26
  %35 = bitcast %"class.base::internal::LinkNodeBase"* %31 to i8*
  %36 = call i8* @_ZN7logging15CheckOpValueStrEPKv(i8* nonnull %35) #6
  %37 = call i8* @_ZN7logging15CheckOpValueStrEDn(i8* null) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %36, i8* %37) #6
  %38 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %39, i8** %28, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 43, %"class.logging::CheckOpResult"* nonnull %7) #6
  %43 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  br label %44

44:                                               ; preds = %33, %34, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  store %"class.base::internal::LinkNodeBase"* %1, %"class.base::internal::LinkNodeBase"** %29, align 8
  %45 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %1, i64 0, i32 0
  %46 = bitcast %"class.base::internal::LinkNodeBase"* %1 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.base::internal::LinkNodeBase"* %0 to i64*
  store i64 %47, i64* %48, align 8
  %49 = load %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %45, align 8
  %50 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %49, i64 0, i32 1
  store %"class.base::internal::LinkNodeBase"* %0, %"class.base::internal::LinkNodeBase"** %50, align 8
  store %"class.base::internal::LinkNodeBase"* %0, %"class.base::internal::LinkNodeBase"** %45, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal12LinkNodeBase15InsertAfterBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 0
  %12 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = load %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %11, align 8
  %14 = icmp eq %"class.base::internal::LinkNodeBase"* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* null, i8** %10, align 8
  br label %26

16:                                               ; preds = %2
  %17 = bitcast %"class.base::internal::LinkNodeBase"* %13 to i8*
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEPKv(i8* nonnull %17) #6
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEDn(i8* null) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* %18, i8* %19) #6
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* %21, i8** %10, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 51, %"class.logging::CheckOpResult"* nonnull %5) #6
  %25 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  br label %26

26:                                               ; preds = %15, %16, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %27 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %0, i64 0, i32 1
  %30 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = load %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %29, align 8
  %32 = icmp eq %"class.base::internal::LinkNodeBase"* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %28, align 8
  br label %44

34:                                               ; preds = %26
  %35 = bitcast %"class.base::internal::LinkNodeBase"* %31 to i8*
  %36 = call i8* @_ZN7logging15CheckOpValueStrEPKv(i8* nonnull %35) #6
  %37 = call i8* @_ZN7logging15CheckOpValueStrEDn(i8* null) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %36, i8* %37) #6
  %38 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %39, i8** %28, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 52, %"class.logging::CheckOpResult"* nonnull %7) #6
  %43 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  br label %44

44:                                               ; preds = %33, %34, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  %45 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %1, i64 0, i32 1
  %46 = bitcast %"class.base::internal::LinkNodeBase"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.base::internal::LinkNodeBase"** %29 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.base::internal::LinkNodeBase"* %1, %"class.base::internal::LinkNodeBase"** %11, align 8
  %49 = load %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %45, align 8
  %50 = getelementptr inbounds %"class.base::internal::LinkNodeBase", %"class.base::internal::LinkNodeBase"* %49, i64 0, i32 0
  store %"class.base::internal::LinkNodeBase"* %0, %"class.base::internal::LinkNodeBase"** %50, align 8
  store %"class.base::internal::LinkNodeBase"* %0, %"class.base::internal::LinkNodeBase"** %45, align 8
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEPKv(i8*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEDn(i8*) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
