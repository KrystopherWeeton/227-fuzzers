; ModuleID = '../../gpu/ipc/gpu_task_scheduler_helper.cc'
source_filename = "../../gpu/ipc/gpu_task_scheduler_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::GpuTaskSchedulerHelper" = type { i8, %"class.std::__1::unique_ptr", i8, %"class.gpu::CommandBufferHelper"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gpu::SingleTaskSequence"* }
%"class.gpu::CommandBufferHelper" = type <{ i32 (...)**, %"class.gpu::CommandBuffer"*, i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.gpu::CommandBuffer" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr.2", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"union.gpu::CommandBufferEntry" = type { %"struct.gpu::CommandHeader" }
%"struct.gpu::CommandHeader" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gpu::SingleTaskSequence" = type { i32 (...)** }
%"class.gpu::CommandBufferTaskExecutor" = type { i32 (...)**, %"struct.gpu::GpuPreferences", %"struct.gpu::GpuFeatureInfo", %"class.gpu::SyncPointManager"*, %"class.gpu::MailboxManager"*, %"class.std::__1::unique_ptr.44", %"class.gl::GLSurfaceFormat", %"class.std::__1::unique_ptr.50", %"class.gpu::gles2::ProgramCache"*, %"class.gpu::gles2::ImageManager", %"class.gpu::ServiceDiscardableManager", %"class.gpu::PassthroughDiscardableManager", %"class.gpu::gles2::ShaderTranslatorCache", %"class.gpu::gles2::FramebufferCompletenessCache", %"class.gpu::SharedImageManager"*, %"class.gpu::GpuProcessActivityFlags" }
%"struct.gpu::GpuPreferences" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector", i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.11", %"class.std::__1::vector.11", i8, i8, [2 x i8], i32, i8, i8, [6 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.8" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::basic_string"* }
%"struct.gpu::GpuFeatureInfo" = type { [10 x i32], %"class.std::__1::vector.23", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.30", %"class.std::__1::vector.30", %"class.std::__1::vector.37" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { i32*, i32*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i32* }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i32*, i32*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i32* }
%"class.gpu::SyncPointManager" = type opaque
%"class.gpu::MailboxManager" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.gpu::gles2::Outputter"* }
%"class.gpu::gles2::Outputter" = type opaque
%"class.gl::GLSurfaceFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.gpu::gles2::ProgramCache"* }
%"class.gpu::gles2::ProgramCache" = type opaque
%"class.gpu::gles2::ImageManager" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.56", %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.72", [4 x i8] }>
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i64 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { float }
%"class.gpu::ServiceDiscardableManager" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::MRUCache", i64, i64 }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.75" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"class.gpu::PassthroughDiscardableManager" = type { %"class.base::MRUCache.86", i64, i64 }
%"class.base::MRUCache.86" = type { %"class.base::MRUCacheBase.87" }
%"class.base::MRUCacheBase.87" = type { i32 (...)**, %"class.std::__1::list.88", %"class.std::__1::map.95", i64 }
%"class.std::__1::list.88" = type { %"class.std::__1::__list_imp.89" }
%"class.std::__1::__list_imp.89" = type { %"struct.std::__1::__list_node_base.90", %"class.std::__1::__compressed_pair.91" }
%"struct.std::__1::__list_node_base.90" = type { %"struct.std::__1::__list_node_base.90"*, %"struct.std::__1::__list_node_base.90"* }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"class.std::__1::map.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"class.gpu::gles2::ShaderTranslatorCache" = type { %"class.gpu::gles2::ShaderTranslator::DestructionObserver", %"struct.gpu::GpuPreferences", %"class.std::__1::map.105" }
%"class.gpu::gles2::ShaderTranslator::DestructionObserver" = type { i32 (...)** }
%"class.std::__1::map.105" = type { %"class.std::__1::__tree.106" }
%"class.std::__1::__tree.106" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"class.gpu::gles2::FramebufferCompletenessCache" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.116" }
%"class.std::__1::__hash_table.116" = type <{ %"class.std::__1::unique_ptr.117", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.136", [4 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base.120"** }
%"struct.std::__1::__hash_node_base.120" = type { %"struct.std::__1::__hash_node_base.120"* }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::__bucket_list_deallocator.122" }
%"class.std::__1::__bucket_list_deallocator.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.std::__1::__hash_node_base.120" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.141 }
%union.anon.141 = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.142" }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"*, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::unique_ptr.144" = type opaque
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.std::__1::unique_ptr.144"* }
%"class.gpu::GpuProcessActivityFlags" = type { %"class.gpu::ActivityFlagsBase" }
%"class.gpu::ActivityFlagsBase" = type { %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.150" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.154 }
%class.scoped_refptr.154 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.155", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.155" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"*, %"class.std::__1::__compressed_pair.158" }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.gpu::SyncToken"* }
%"class.base::OnceCallback.163" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN3gpu22GpuTaskSchedulerHelperC1ENSt3__110unique_ptrINS_18SingleTaskSequenceENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.gpu::GpuTaskSchedulerHelper"*, %"class.gpu::SingleTaskSequence"*), void (%"class.gpu::GpuTaskSchedulerHelper"*, %"class.gpu::SingleTaskSequence"*)* @_ZN3gpu22GpuTaskSchedulerHelperC2ENSt3__110unique_ptrINS_18SingleTaskSequenceENS1_14default_deleteIS3_EEEE
@_ZN3gpu22GpuTaskSchedulerHelperC1EPNS_25CommandBufferTaskExecutorE = hidden unnamed_addr alias void (%"class.gpu::GpuTaskSchedulerHelper"*, %"class.gpu::CommandBufferTaskExecutor"*), void (%"class.gpu::GpuTaskSchedulerHelper"*, %"class.gpu::CommandBufferTaskExecutor"*)* @_ZN3gpu22GpuTaskSchedulerHelperC2EPNS_25CommandBufferTaskExecutorE
@_ZN3gpu22GpuTaskSchedulerHelperD1Ev = hidden unnamed_addr alias void (%"class.gpu::GpuTaskSchedulerHelper"*), void (%"class.gpu::GpuTaskSchedulerHelper"*)* @_ZN3gpu22GpuTaskSchedulerHelperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu22GpuTaskSchedulerHelperC2ENSt3__110unique_ptrINS_18SingleTaskSequenceENS1_14default_deleteIS3_EEEE(%"class.gpu::GpuTaskSchedulerHelper"* nocapture, %"class.gpu::SingleTaskSequence"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.gpu::SingleTaskSequence"* %1 to i64
  %4 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 2
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 3
  store %"class.gpu::CommandBufferHelper"* null, %"class.gpu::CommandBufferHelper"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu22GpuTaskSchedulerHelperC2EPNS_25CommandBufferTaskExecutorE(%"class.gpu::GpuTaskSchedulerHelper"* nocapture, %"class.gpu::CommandBufferTaskExecutor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 0
  store i8 1, i8* %3, align 8
  %4 = bitcast %"class.gpu::CommandBufferTaskExecutor"* %1 to %"class.gpu::SingleTaskSequence"* (%"class.gpu::CommandBufferTaskExecutor"*)***
  %5 = load %"class.gpu::SingleTaskSequence"* (%"class.gpu::CommandBufferTaskExecutor"*)**, %"class.gpu::SingleTaskSequence"* (%"class.gpu::CommandBufferTaskExecutor"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.gpu::SingleTaskSequence"* (%"class.gpu::CommandBufferTaskExecutor"*)*, %"class.gpu::SingleTaskSequence"* (%"class.gpu::CommandBufferTaskExecutor"*)** %5, i64 6
  %7 = load %"class.gpu::SingleTaskSequence"* (%"class.gpu::CommandBufferTaskExecutor"*)*, %"class.gpu::SingleTaskSequence"* (%"class.gpu::CommandBufferTaskExecutor"*)** %6, align 8
  %8 = tail call %"class.gpu::SingleTaskSequence"* %7(%"class.gpu::CommandBufferTaskExecutor"* %1) #9
  %9 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.gpu::SingleTaskSequence"* %8, %"class.gpu::SingleTaskSequence"** %9, align 8
  %10 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 2
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 3
  store %"class.gpu::CommandBufferHelper"* null, %"class.gpu::CommandBufferHelper"** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu22GpuTaskSchedulerHelperD2Ev(%"class.gpu::GpuTaskSchedulerHelper"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gpu::SingleTaskSequence"*, %"class.gpu::SingleTaskSequence"** %2, align 8
  store %"class.gpu::SingleTaskSequence"* null, %"class.gpu::SingleTaskSequence"** %2, align 8
  %4 = icmp eq %"class.gpu::SingleTaskSequence"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.gpu::SingleTaskSequence"* %3 to void (%"class.gpu::SingleTaskSequence"*)***
  %7 = load void (%"class.gpu::SingleTaskSequence"*)**, void (%"class.gpu::SingleTaskSequence"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gpu::SingleTaskSequence"*)*, void (%"class.gpu::SingleTaskSequence"*)** %7, i64 1
  %9 = load void (%"class.gpu::SingleTaskSequence"*)*, void (%"class.gpu::SingleTaskSequence"*)** %8, align 8
  tail call void %9(%"class.gpu::SingleTaskSequence"* nonnull %3) #9
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu22GpuTaskSchedulerHelper10InitializeEPNS_19CommandBufferHelperE(%"class.gpu::GpuTaskSchedulerHelper"* nocapture, %"class.gpu::CommandBufferHelper"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 3
  store %"class.gpu::CommandBufferHelper"* %1, %"class.gpu::CommandBufferHelper"** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 2
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu22GpuTaskSchedulerHelper15ScheduleGpuTaskEN4base12OnceCallbackIFvvEEENSt3__16vectorINS_9SyncTokenENS5_9allocatorIS7_EEEENS2_IFvNS1_9TimeTicksEEEE(%"class.gpu::GpuTaskSchedulerHelper"* nocapture readonly, %"class.base::OnceCallback"* nocapture, %"class.std::__1::vector.156"* nocapture, %"class.base::OnceCallback.163"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.std::__1::vector.156", align 16
  %7 = alloca %"class.base::OnceCallback.163", align 8
  %8 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 3
  %9 = load %"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBufferHelper"** %8, align 8
  %10 = icmp eq %"class.gpu::CommandBufferHelper"* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %4
  tail call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* nonnull %9) #9
  br label %12

12:                                               ; preds = %4, %11
  %13 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.gpu::SingleTaskSequence"*, %"class.gpu::SingleTaskSequence"** %13, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = bitcast %"class.std::__1::vector.156"* %2 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = bitcast %"class.std::__1::vector.156"* %6 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %21, align 16
  %22 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"struct.gpu::SyncToken"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"struct.gpu::SyncToken"** %25 to i64*
  store i64 %24, i64* %26, align 16
  %27 = bitcast %"class.std::__1::vector.156"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #9
  %28 = getelementptr inbounds %"class.base::OnceCallback.163", %"class.base::OnceCallback.163"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback.163"* %3 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::OnceCallback.163"* %7 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %32 = bitcast %"class.gpu::SingleTaskSequence"* %14 to void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)***
  %33 = load void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)**, void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)*, void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)** %33, i64 4
  %35 = load void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)*, void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)** %34, align 8
  call void %35(%"class.gpu::SingleTaskSequence"* %14, %"class.base::OnceCallback"* nonnull %5, %"class.std::__1::vector.156"* nonnull %6, %"class.base::OnceCallback.163"* nonnull %7) #9
  %36 = getelementptr inbounds %"class.base::OnceCallback.163", %"class.base::OnceCallback.163"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #9
  %37 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %6, i64 0, i32 0, i32 0
  %38 = load %"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"** %37, align 16
  %39 = icmp eq %"struct.gpu::SyncToken"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %12
  %41 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %6, i64 0, i32 0, i32 1
  %42 = bitcast %"struct.gpu::SyncToken"** %41 to i64*
  %43 = ptrtoint %"struct.gpu::SyncToken"* %38 to i64
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %38, i64 0, i32 0
  call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %12, %40
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #9
  ret void
}

declare void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu22GpuTaskSchedulerHelper23ScheduleOrRetainGpuTaskEN4base12OnceCallbackIFvvEEENSt3__16vectorINS_9SyncTokenENS5_9allocatorIS7_EEEE(%"class.gpu::GpuTaskSchedulerHelper"* nocapture readonly, %"class.base::OnceCallback"* nocapture, %"class.std::__1::vector.156"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.std::__1::vector.156", align 8
  %6 = alloca %"class.base::OnceCallback.163", align 8
  %7 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.gpu::SingleTaskSequence"*, %"class.gpu::SingleTaskSequence"** %7, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.std::__1::vector.156"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #9
  %14 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %2, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.gpu::SyncToken"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.156"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp eq i64 %19, 0
  %22 = inttoptr i64 %18 to %"struct.gpu::SyncToken"*
  %23 = inttoptr i64 %16 to %"struct.gpu::SyncToken"*
  br i1 %21, label %49, label %24

24:                                               ; preds = %3
  %25 = icmp ugt i64 %20, 768614336404564650
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.156"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #11
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %19) #10
  %30 = bitcast i8* %29 to %"struct.gpu::SyncToken"*
  %31 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %5, i64 0, i32 0, i32 1
  %32 = bitcast %"struct.gpu::SyncToken"** %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector.156"* %5 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %30, i64 %20
  %35 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.gpu::SyncToken"* %34, %"struct.gpu::SyncToken"** %35, align 8
  %36 = bitcast %"struct.gpu::SyncToken"** %31 to i64*
  %37 = ptrtoint i8* %29 to i64
  %38 = icmp eq %"struct.gpu::SyncToken"* %22, %23
  br i1 %38, label %47, label %39

39:                                               ; preds = %28, %39
  %40 = phi %"struct.gpu::SyncToken"* [ %43, %39 ], [ %30, %28 ]
  %41 = phi %"struct.gpu::SyncToken"* [ %42, %39 ], [ %22, %28 ]
  tail call void @_ZN3gpu9SyncTokenC1ERKS0_(%"struct.gpu::SyncToken"* %40, %"struct.gpu::SyncToken"* dereferenceable(24) %41) #9
  %42 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %41, i64 1
  %43 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %40, i64 1
  %44 = icmp eq %"struct.gpu::SyncToken"* %42, %23
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = ptrtoint %"struct.gpu::SyncToken"* %43 to i64
  br label %47

47:                                               ; preds = %45, %28
  %48 = phi i64 [ %37, %28 ], [ %46, %45 ]
  store i64 %48, i64* %36, align 8
  br label %49

49:                                               ; preds = %3, %47
  %50 = getelementptr inbounds %"class.base::OnceCallback.163", %"class.base::OnceCallback.163"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %50, align 8
  %51 = bitcast %"class.gpu::SingleTaskSequence"* %8 to void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)***
  %52 = load void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)**, void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)*, void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)** %52, i64 5
  %54 = load void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)*, void (%"class.gpu::SingleTaskSequence"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.156"*, %"class.base::OnceCallback.163"*)** %53, align 8
  call void %54(%"class.gpu::SingleTaskSequence"* %8, %"class.base::OnceCallback"* nonnull %4, %"class.std::__1::vector.156"* nonnull %5, %"class.base::OnceCallback.163"* nonnull %6) #9
  %55 = getelementptr inbounds %"class.base::OnceCallback.163", %"class.base::OnceCallback.163"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #9
  %56 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %5, i64 0, i32 0, i32 0
  %57 = load %"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"** %56, align 8
  %58 = icmp eq %"struct.gpu::SyncToken"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %49
  %60 = ptrtoint %"struct.gpu::SyncToken"* %57 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.156", %"class.std::__1::vector.156"* %5, i64 0, i32 0, i32 1
  %62 = bitcast %"struct.gpu::SyncToken"** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %57, i64 0, i32 0
  call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %49, %59
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu22GpuTaskSchedulerHelper13GetSequenceIdEv(%"class.gpu::GpuTaskSchedulerHelper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gpu::SingleTaskSequence"*, %"class.gpu::SingleTaskSequence"** %2, align 8
  %4 = bitcast %"class.gpu::SingleTaskSequence"* %3 to i32 (%"class.gpu::SingleTaskSequence"*)***
  %5 = load i32 (%"class.gpu::SingleTaskSequence"*)**, i32 (%"class.gpu::SingleTaskSequence"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gpu::SingleTaskSequence"*)*, i32 (%"class.gpu::SingleTaskSequence"*)** %5, i64 2
  %7 = load i32 (%"class.gpu::SingleTaskSequence"*)*, i32 (%"class.gpu::SingleTaskSequence"*)** %6, align 8
  %8 = tail call i32 %7(%"class.gpu::SingleTaskSequence"* %3) #9
  ret i32 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gpu::SingleTaskSequence"* @_ZNK3gpu22GpuTaskSchedulerHelper15GetTaskSequenceEv(%"class.gpu::GpuTaskSchedulerHelper"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuTaskSchedulerHelper", %"class.gpu::GpuTaskSchedulerHelper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gpu::SingleTaskSequence"*, %"class.gpu::SingleTaskSequence"** %2, align 8
  ret %"class.gpu::SingleTaskSequence"* %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN3gpu9SyncTokenC1ERKS0_(%"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"* dereferenceable(24)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
