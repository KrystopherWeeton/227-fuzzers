; ModuleID = '../../cc/input/layer_selection_bound.cc'
source_filename = "../../cc/input/layer_selection_bound.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [32 x i8] c"LayerSelectionBound(%s, %s, %d)\00", align 1

@_ZN2cc19LayerSelectionBoundC1Ev = hidden unnamed_addr alias void (%"struct.cc::LayerSelectionBound"*), void (%"struct.cc::LayerSelectionBound"*)* @_ZN2cc19LayerSelectionBoundC2Ev
@_ZN2cc19LayerSelectionBoundD1Ev = hidden unnamed_addr alias void (%"struct.cc::LayerSelectionBound"*), void (%"struct.cc::LayerSelectionBound"*)* @_ZN2cc19LayerSelectionBoundD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc19LayerSelectionBoundC2Ev(%"struct.cc::LayerSelectionBound"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 0
  store i32 3, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 21, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc19LayerSelectionBoundD2Ev(%"struct.cc::LayerSelectionBound"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc19LayerSelectionBoundeqERKS0_(%"struct.cc::LayerSelectionBound"* nocapture readonly, %"struct.cc::LayerSelectionBound"* nocapture readonly dereferenceable(28)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %44

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %44

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %44

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 2, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 2, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 2, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 2, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 4
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 4
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %40, %42
  br label %44

44:                                               ; preds = %26, %14, %38, %32, %20, %8, %2
  %45 = phi i1 [ false, %32 ], [ false, %20 ], [ false, %8 ], [ false, %2 ], [ %43, %38 ], [ false, %14 ], [ false, %26 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc19LayerSelectionBoundneERKS0_(%"struct.cc::LayerSelectionBound"* nocapture readonly, %"struct.cc::LayerSelectionBound"* nocapture readonly dereferenceable(28)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %44

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %44

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %44

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 2, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 2, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 2, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 2, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %0, i64 0, i32 4
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 4
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp ne i8 %40, %42
  br label %44

44:                                               ; preds = %2, %8, %14, %20, %26, %32, %38
  %45 = phi i1 [ true, %32 ], [ true, %20 ], [ true, %8 ], [ true, %2 ], [ %43, %38 ], [ true, %14 ], [ true, %26 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc19LayerSelectionBound8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"struct.cc::LayerSelectionBound"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 1
  call void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gfx::Point"* %6) #7
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = select i1 %10, i8* %12, i8* %5
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 2
  call void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.gfx::Point"* %15) #7
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %19, i8* %21, i8* %14
  %23 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = zext i8 %24 to i32
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* %13, i8* %22, i32 %25) #7
  %26 = load i8, i8* %17, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %2
  %29 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %29) #8
  br label %30

30:                                               ; preds = %2, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  %31 = load i8, i8* %8, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %34) #8
  br label %35

35:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::Point"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
