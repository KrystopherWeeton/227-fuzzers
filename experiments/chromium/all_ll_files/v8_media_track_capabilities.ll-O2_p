; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_media_track_capabilities.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_media_track_capabilities.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.92", i32, [4 x i8], %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.228", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.244", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.269", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.208", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.128" = type { %"struct.std::__1::__atomic_base.129" }
%"struct.std::__1::__atomic_base.129" = type { %"struct.std::__1::__atomic_base.130" }
%"struct.std::__1::__atomic_base.130" = type { %"struct.std::__1::__cxx_atomic_impl.131" }
%"struct.std::__1::__cxx_atomic_impl.131" = type { %"struct.std::__1::__cxx_atomic_base_impl.132" }
%"struct.std::__1::__cxx_atomic_base_impl.132" = type { i64 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::Worklist.139"* }
%"class.blink::Worklist.139" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist.146"* }
%"class.blink::Worklist.146" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::Worklist.174"* }
%"class.blink::Worklist.174" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::Worklist.181"* }
%"class.blink::Worklist.181" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.188", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.202", [4 x i8] }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190", %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { i64 }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { float }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.211", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.220" }
%"class.WTF::Vector.220" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.236" }
%"class.WTF::VectorBuffer.236" = type { %"class.WTF::VectorBufferBase.237" }
%"class.WTF::VectorBufferBase.237" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.250" }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.139"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.146"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.153"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.160"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.167"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.302" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.268 }
%class.scoped_refptr.268 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.269" = type { %"struct.std::__1::__atomic_base.270" }
%"struct.std::__1::__atomic_base.270" = type { %"struct.std::__1::__cxx_atomic_impl.271" }
%"struct.std::__1::__cxx_atomic_impl.271" = type { %"struct.std::__1::__cxx_atomic_base_impl.272" }
%"struct.std::__1::__cxx_atomic_base_impl.272" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::MediaTrackCapabilities" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member", %"class.WTF::Vector", %"class.blink::Member.0", %"class.blink::Member.2", %"class.blink::Member.0", %"class.blink::Member.0", %"class.WTF::String", %"class.WTF::Vector", %"class.blink::Member.0", %"class.WTF::Vector.5", %"class.blink::Member.0", %"class.WTF::Vector.5", %"class.blink::Member.0", %"class.WTF::Vector.5", %"class.blink::Member", %"class.WTF::String", %"class.blink::Member.2", %"class.blink::Member.0", %"class.blink::Member", %"class.WTF::Vector", %"class.blink::Member.0", %"class.WTF::Vector.5", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.0", %"class.blink::Member.0", %"class.blink::Member.0", i8, %"class.WTF::Vector.5", %"class.blink::Member.2", %"class.blink::Member.0" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DoubleRange"* }
%"class.blink::DoubleRange" = type { %"class.blink::IDLDictionaryBase", i8, i8, double, double }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::LongRange"* }
%"class.blink::LongRange" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::MediaSettingsRange"* }
%"class.blink::MediaSettingsRange" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, double, double, double }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.36", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.86", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.273", %"class.std::__1::unique_ptr.278", %"class.blink::Persistent.284", %"class.blink::Persistent.288", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.18", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", i32, i32 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.36" = type { %"class.WTF::HashTable.37" }
%"class.WTF::HashTable.37" = type <{ %"struct.WTF::KeyValuePair.40"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.40" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.49", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.44", i8* }
%"class.WTF::HashMap.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %"struct.WTF::KeyValuePair.48"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.48" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.49" = type { %"class.v8::PersistentValueMapBase.50" }
%"class.v8::PersistentValueMapBase.50" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.51", i8* }
%"class.WTF::HashMap.51" = type { %"class.WTF::HashTable.52" }
%"class.WTF::HashTable.52" = type <{ %"struct.WTF::KeyValuePair.55"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.55" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.56" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.70", %"class.WTF::Vector.76", i8, i32 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.WTF::Vector.62"* }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.64", [32 x i8] }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.309, %"class.blink::Member.328", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.309 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.310", i32, i32, %"class.blink::Persistent.312" }
%"class.WTF::RefCounted.310" = type { %"class.base::RefCounted.311" }
%"class.base::RefCounted.311" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.312" = type { %"class.blink::PersistentBase.313" }
%"class.blink::PersistentBase.313" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.318" }
%"class.WTF::HashMap.318" = type { %"class.WTF::HashTable.319" }
%"class.WTF::HashTable.319" = type <{ %"struct.WTF::KeyValuePair.321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.321" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.325" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.325" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.325" = type { %"class.v8::TracedReference.326" }
%"class.v8::TracedReference.326" = type { %"class.v8::BasicTracedReference.327" }
%"class.v8::BasicTracedReference.327" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.273" = type { %"class.WTF::VectorBuffer.274" }
%"class.WTF::VectorBuffer.274" = type { %"class.WTF::VectorBufferBase.275" }
%"class.WTF::VectorBufferBase.275" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.284" = type { %"class.blink::PersistentBase.285" }
%"class.blink::PersistentBase.285" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.288" = type { %"class.blink::PersistentBase.289" }
%"class.blink::PersistentBase.289" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.294" }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"struct.std::__1::pair.297"*, i32, i32 }
%"struct.std::__1::pair.297" = type { %"class.blink::UntracedMember", %"class.blink::Member.299" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.330" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.10", %"class.v8::Local", %"class.v8::Local.16", %"class.v8::Local.16", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.10" = type { %"class.v8::Object"* }
%"class.v8::Local.16" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::ExecutionContext" = type opaque
%"class.v8::Int32" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.366 }
%union.anon.366 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_10IDLBooleanEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_10IDLBooleanEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_10IDLBooleanEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm = comdat any

$_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIbEEvOT_ = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE = comdat any

$_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blinkL35eternalV8MediaTrackCapabilitiesKeysEPN2v87IsolateEE5kKeys = internal constant [31 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [12 x i8] c"aspectRatio\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"autoGainControl\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"brightness\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"channelCount\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"colorTemperature\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"contrast\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"deviceId\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"echoCancellation\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"exposureCompensation\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"exposureMode\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"exposureTime\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"facingMode\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"focusDistance\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"focusMode\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"frameRate\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"groupId\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"iso\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"latency\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"noiseSuppression\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"pan\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"resizeMode\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"sampleRate\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"sampleSize\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"saturation\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"sharpness\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"tilt\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"torch\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"whiteBalanceMode\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"zoom\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 31, i8** getelementptr inbounds ([31 x i8*], [31 x i8*]* @_ZZN5blinkL35eternalV8MediaTrackCapabilitiesKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.33 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.34 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.35 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.36 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.38 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.39 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv = private unnamed_addr constant [52 x i8] c"const char *WTF::GetStringWithTypeName() [T = bool]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24V8MediaTrackCapabilities6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_22MediaTrackCapabilitiesERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::MediaTrackCapabilities"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.WTF::Vector", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = alloca %"class.WTF::Vector", align 8
  %11 = alloca %"class.WTF::Vector.5", align 8
  %12 = alloca %"class.WTF::Vector.5", align 8
  %13 = alloca %"class.WTF::Vector.5", align 8
  %14 = alloca %"class.blink::V8StringResource", align 8
  %15 = alloca %"class.WTF::Vector", align 8
  %16 = alloca %"class.WTF::Vector.5", align 8
  %17 = alloca %"class.WTF::Vector.5", align 8
  %18 = icmp eq %"class.v8::Value"* %1, null
  br i1 %18, label %2040, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.v8::Value"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 3
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %24, label %40

24:                                               ; preds = %19
  %25 = add i64 %21, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %21, -4294967296
  %29 = zext i32 %27 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 67
  br i1 %34, label %35, label %40

35:                                               ; preds = %24
  %36 = add i64 %21, 23
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = ashr i32 %38, 1
  switch i32 %39, label %40 [
    i32 5, label %2040
    i32 3, label %2040
  ]

40:                                               ; preds = %35, %24, %19
  %41 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #8
  br i1 %41, label %43, label %42

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #8
  br label %2040

43:                                               ; preds = %40
  %44 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %45 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to %"class.blink::V8PerIsolateData"**
  %48 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %47, align 8
  %49 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %48, i8* bitcast ([31 x i8*]* @_ZZN5blinkL35eternalV8MediaTrackCapabilitiesKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.330"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.330"*)) #8
  %50 = extractvalue { i64, %"class.v8::Eternal"* } %49, 1
  %51 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %51) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %0) #8
  %52 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %53 = bitcast %"class.v8::Eternal"* %50 to %"class.v8::Value"**
  %54 = load %"class.v8::Value"*, %"class.v8::Value"** %53, align 8
  %55 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %54) #8
  %56 = icmp eq %"class.v8::Value"* %55, null
  br i1 %56, label %57, label %63

57:                                               ; preds = %43
  %58 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %59 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %60 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %60, i64 5
  %62 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %61, align 8
  call void %62(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %58) #8
  br label %2039

63:                                               ; preds = %43
  %64 = bitcast %"class.v8::Value"* %55 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 1
  br i1 %67, label %68, label %85

68:                                               ; preds = %63
  %69 = add i64 %65, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i64 %65, -4294967296
  %73 = zext i32 %71 to i64
  %74 = or i64 %72, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, 67
  br i1 %78, label %79, label %85

79:                                               ; preds = %68
  %80 = add i64 %65, 23
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, -2
  %84 = icmp eq i32 %83, 10
  br i1 %84, label %91, label %85

85:                                               ; preds = %68, %63, %79
  %86 = call %"class.blink::DoubleRange"* @_ZN5blink17NativeValueTraitsINS_11DoubleRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %55, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %87 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %2039

90:                                               ; preds = %85
  call void @_ZN5blink22MediaTrackCapabilities14setAspectRatioEPNS_11DoubleRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::DoubleRange"* %86) #8
  br label %91

91:                                               ; preds = %90, %79
  %92 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 1, i32 0
  %93 = bitcast %"class.v8::Name"** %92 to %"class.v8::Value"**
  %94 = load %"class.v8::Value"*, %"class.v8::Value"** %93, align 8
  %95 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %94) #8
  %96 = icmp eq %"class.v8::Value"* %95, null
  br i1 %96, label %97, label %103

97:                                               ; preds = %91
  %98 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %99 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %100 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %100, i64 5
  %102 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %101, align 8
  call void %102(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %98) #8
  br label %2039

103:                                              ; preds = %91
  %104 = bitcast %"class.v8::Value"* %95 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = and i64 %105, 3
  %107 = icmp eq i64 %106, 1
  br i1 %107, label %108, label %125

108:                                              ; preds = %103
  %109 = add i64 %105, -1
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = and i64 %105, -4294967296
  %113 = zext i32 %111 to i64
  %114 = or i64 %112, %113
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i16*
  %117 = load i16, i16* %116, align 2
  %118 = icmp eq i16 %117, 67
  br i1 %118, label %119, label %125

119:                                              ; preds = %108
  %120 = add i64 %105, 23
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, -2
  %124 = icmp eq i32 %123, 10
  br i1 %124, label %151, label %125

125:                                              ; preds = %108, %103, %119
  %126 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #8
  %127 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %129 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_10IDLBooleanEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %8, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %95, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %130 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %142

133:                                              ; preds = %125
  call void @_ZN5blink22MediaTrackCapabilities18setAutoGainControlERKN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"* %2, %"class.WTF::Vector"* nonnull dereferenceable(16) %8) #8
  %134 = load i8*, i8** %127, align 8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %141, label %136, !prof !2

136:                                              ; preds = %133
  %137 = load i32, i32* %128, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %140, label %139, !prof !3

139:                                              ; preds = %136
  store i32 0, i32* %128, align 4
  br label %140

140:                                              ; preds = %139, %136
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %134) #8
  store i8* null, i8** %127, align 8
  br label %141

141:                                              ; preds = %133, %140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #8
  br label %151

142:                                              ; preds = %125
  %143 = load i8*, i8** %127, align 8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %150, label %145, !prof !2

145:                                              ; preds = %142
  %146 = load i32, i32* %128, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %149, label %148, !prof !3

148:                                              ; preds = %145
  store i32 0, i32* %128, align 4
  br label %149

149:                                              ; preds = %148, %145
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %143) #8
  store i8* null, i8** %127, align 8
  br label %150

150:                                              ; preds = %142, %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #8
  br label %2039

151:                                              ; preds = %141, %119
  %152 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 2, i32 0
  %153 = bitcast %"class.v8::Name"** %152 to %"class.v8::Value"**
  %154 = load %"class.v8::Value"*, %"class.v8::Value"** %153, align 8
  %155 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %154) #8
  %156 = icmp eq %"class.v8::Value"* %155, null
  br i1 %156, label %157, label %163

157:                                              ; preds = %151
  %158 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %159 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %160 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %160, i64 5
  %162 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %161, align 8
  call void %162(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %158) #8
  br label %2039

163:                                              ; preds = %151
  %164 = bitcast %"class.v8::Value"* %155 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = and i64 %165, 3
  %167 = icmp eq i64 %166, 1
  br i1 %167, label %168, label %185

168:                                              ; preds = %163
  %169 = add i64 %165, -1
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = and i64 %165, -4294967296
  %173 = zext i32 %171 to i64
  %174 = or i64 %172, %173
  %175 = add i64 %174, 7
  %176 = inttoptr i64 %175 to i16*
  %177 = load i16, i16* %176, align 2
  %178 = icmp eq i16 %177, 67
  br i1 %178, label %179, label %185

179:                                              ; preds = %168
  %180 = add i64 %165, 23
  %181 = inttoptr i64 %180 to i32*
  %182 = load i32, i32* %181, align 4
  %183 = and i32 %182, -2
  %184 = icmp eq i32 %183, 10
  br i1 %184, label %191, label %185

185:                                              ; preds = %168, %163, %179
  %186 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %155, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %187 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %188 = load i32, i32* %187, align 8
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %2039

190:                                              ; preds = %185
  call void @_ZN5blink22MediaTrackCapabilities13setBrightnessEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %186) #8
  br label %191

191:                                              ; preds = %190, %179
  %192 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 3, i32 0
  %193 = bitcast %"class.v8::Name"** %192 to %"class.v8::Value"**
  %194 = load %"class.v8::Value"*, %"class.v8::Value"** %193, align 8
  %195 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %194) #8
  %196 = icmp eq %"class.v8::Value"* %195, null
  br i1 %196, label %197, label %203

197:                                              ; preds = %191
  %198 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %199 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %200 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %200, i64 5
  %202 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %201, align 8
  call void %202(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %198) #8
  br label %2039

203:                                              ; preds = %191
  %204 = bitcast %"class.v8::Value"* %195 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = and i64 %205, 3
  %207 = icmp eq i64 %206, 1
  br i1 %207, label %208, label %225

208:                                              ; preds = %203
  %209 = add i64 %205, -1
  %210 = inttoptr i64 %209 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = and i64 %205, -4294967296
  %213 = zext i32 %211 to i64
  %214 = or i64 %212, %213
  %215 = add i64 %214, 7
  %216 = inttoptr i64 %215 to i16*
  %217 = load i16, i16* %216, align 2
  %218 = icmp eq i16 %217, 67
  br i1 %218, label %219, label %225

219:                                              ; preds = %208
  %220 = add i64 %205, 23
  %221 = inttoptr i64 %220 to i32*
  %222 = load i32, i32* %221, align 4
  %223 = and i32 %222, -2
  %224 = icmp eq i32 %223, 10
  br i1 %224, label %231, label %225

225:                                              ; preds = %208, %203, %219
  %226 = call %"class.blink::LongRange"* @_ZN5blink17NativeValueTraitsINS_9LongRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %195, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %227 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %228 = load i32, i32* %227, align 8
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %2039

230:                                              ; preds = %225
  call void @_ZN5blink22MediaTrackCapabilities15setChannelCountEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::LongRange"* %226) #8
  br label %231

231:                                              ; preds = %230, %219
  %232 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 4, i32 0
  %233 = bitcast %"class.v8::Name"** %232 to %"class.v8::Value"**
  %234 = load %"class.v8::Value"*, %"class.v8::Value"** %233, align 8
  %235 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %234) #8
  %236 = icmp eq %"class.v8::Value"* %235, null
  br i1 %236, label %237, label %243

237:                                              ; preds = %231
  %238 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %239 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %240 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %240, i64 5
  %242 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %241, align 8
  call void %242(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %238) #8
  br label %2039

243:                                              ; preds = %231
  %244 = bitcast %"class.v8::Value"* %235 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = and i64 %245, 3
  %247 = icmp eq i64 %246, 1
  br i1 %247, label %248, label %265

248:                                              ; preds = %243
  %249 = add i64 %245, -1
  %250 = inttoptr i64 %249 to i32*
  %251 = load i32, i32* %250, align 4
  %252 = and i64 %245, -4294967296
  %253 = zext i32 %251 to i64
  %254 = or i64 %252, %253
  %255 = add i64 %254, 7
  %256 = inttoptr i64 %255 to i16*
  %257 = load i16, i16* %256, align 2
  %258 = icmp eq i16 %257, 67
  br i1 %258, label %259, label %265

259:                                              ; preds = %248
  %260 = add i64 %245, 23
  %261 = inttoptr i64 %260 to i32*
  %262 = load i32, i32* %261, align 4
  %263 = and i32 %262, -2
  %264 = icmp eq i32 %263, 10
  br i1 %264, label %271, label %265

265:                                              ; preds = %248, %243, %259
  %266 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %235, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %267 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %268 = load i32, i32* %267, align 8
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %2039

270:                                              ; preds = %265
  call void @_ZN5blink22MediaTrackCapabilities19setColorTemperatureEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %266) #8
  br label %271

271:                                              ; preds = %270, %259
  %272 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 5, i32 0
  %273 = bitcast %"class.v8::Name"** %272 to %"class.v8::Value"**
  %274 = load %"class.v8::Value"*, %"class.v8::Value"** %273, align 8
  %275 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %274) #8
  %276 = icmp eq %"class.v8::Value"* %275, null
  br i1 %276, label %277, label %283

277:                                              ; preds = %271
  %278 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %279 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %280 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %279, align 8
  %281 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %280, i64 5
  %282 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %281, align 8
  call void %282(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %278) #8
  br label %2039

283:                                              ; preds = %271
  %284 = bitcast %"class.v8::Value"* %275 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = and i64 %285, 3
  %287 = icmp eq i64 %286, 1
  br i1 %287, label %288, label %305

288:                                              ; preds = %283
  %289 = add i64 %285, -1
  %290 = inttoptr i64 %289 to i32*
  %291 = load i32, i32* %290, align 4
  %292 = and i64 %285, -4294967296
  %293 = zext i32 %291 to i64
  %294 = or i64 %292, %293
  %295 = add i64 %294, 7
  %296 = inttoptr i64 %295 to i16*
  %297 = load i16, i16* %296, align 2
  %298 = icmp eq i16 %297, 67
  br i1 %298, label %299, label %305

299:                                              ; preds = %288
  %300 = add i64 %285, 23
  %301 = inttoptr i64 %300 to i32*
  %302 = load i32, i32* %301, align 4
  %303 = and i32 %302, -2
  %304 = icmp eq i32 %303, 10
  br i1 %304, label %311, label %305

305:                                              ; preds = %288, %283, %299
  %306 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %275, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %307 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %308 = load i32, i32* %307, align 8
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %2039

310:                                              ; preds = %305
  call void @_ZN5blink22MediaTrackCapabilities11setContrastEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %306) #8
  br label %311

311:                                              ; preds = %310, %299
  %312 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 6, i32 0
  %313 = bitcast %"class.v8::Name"** %312 to %"class.v8::Value"**
  %314 = load %"class.v8::Value"*, %"class.v8::Value"** %313, align 8
  %315 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %314) #8
  %316 = icmp eq %"class.v8::Value"* %315, null
  br i1 %316, label %317, label %323

317:                                              ; preds = %311
  %318 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %319 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %320 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %320, i64 5
  %322 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %321, align 8
  call void %322(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %318) #8
  br label %2039

323:                                              ; preds = %311
  %324 = bitcast %"class.v8::Value"* %315 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = and i64 %325, 3
  %327 = icmp eq i64 %326, 1
  br i1 %327, label %328, label %345

328:                                              ; preds = %323
  %329 = add i64 %325, -1
  %330 = inttoptr i64 %329 to i32*
  %331 = load i32, i32* %330, align 4
  %332 = and i64 %325, -4294967296
  %333 = zext i32 %331 to i64
  %334 = or i64 %332, %333
  %335 = add i64 %334, 7
  %336 = inttoptr i64 %335 to i16*
  %337 = load i16, i16* %336, align 2
  %338 = icmp eq i16 %337, 67
  br i1 %338, label %339, label %345

339:                                              ; preds = %328
  %340 = add i64 %325, 23
  %341 = inttoptr i64 %340 to i32*
  %342 = load i32, i32* %341, align 4
  %343 = and i32 %342, -2
  %344 = icmp eq i32 %343, 10
  br i1 %344, label %500, label %345

345:                                              ; preds = %328, %323, %339
  %346 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %346) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %346, i8 -86, i64 152, i1 false)
  %347 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %315, %"class.v8::Value"** %347, align 8
  %348 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %348, align 8
  %349 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %349, align 8
  %350 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %351 = bitcast %"class.std::__1::unique_ptr"* %350 to i64*
  store i64 0, i64* %351, align 8
  %352 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %9) #8
  br i1 %352, label %363, label %353

353:                                              ; preds = %345
  %354 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %355 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %355) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %355, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %354) #8
  %356 = load %"class.v8::Value"*, %"class.v8::Value"** %347, align 8
  %357 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %354) #8
  %358 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %356, %"class.v8::Context"* %357) #8
  %359 = ptrtoint %"class.v8::String"* %358 to i64
  %360 = bitcast %"class.blink::V8StringResource"* %9 to i64*
  store i64 %359, i64* %360, align 8
  %361 = icmp eq %"class.v8::String"* %358, null
  br i1 %361, label %473, label %362

362:                                              ; preds = %353
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %355) #8
  br label %363

363:                                              ; preds = %345, %362
  %364 = load %"class.v8::Value"*, %"class.v8::Value"** %347, align 8
  %365 = icmp eq %"class.v8::Value"* %364, null
  br i1 %365, label %366, label %390, !prof !3

366:                                              ; preds = %363
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %349, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %369, label %371

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %2, i64 0, i32 16
  br label %415

371:                                              ; preds = %366
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %388

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %378 = load i32, i32* %377, align 4
  %379 = zext i32 %378 to i33
  %380 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %379, i33 1) #8
  %381 = extractvalue { i33, i1 } %380, 1
  %382 = extractvalue { i33, i1 } %380, 0
  %383 = icmp slt i33 %382, 0
  %384 = or i1 %381, %383
  br i1 %384, label %385, label %386, !prof !3

385:                                              ; preds = %376
  call void @llvm.trap() #8
  unreachable

386:                                              ; preds = %376
  %387 = trunc i33 %382 to i32
  store i32 %387, i32* %377, align 4
  br label %388

388:                                              ; preds = %371, %386
  %389 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %2, i64 0, i32 16
  br label %396

390:                                              ; preds = %363
  %391 = bitcast %"class.v8::Value"* %364 to %"class.v8::String"*
  %392 = load i32, i32* %348, align 8
  %393 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %391, i32 %392) #8
  %394 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %2, i64 0, i32 16
  %395 = icmp eq %"class.WTF::StringImpl"* %393, null
  br i1 %395, label %415, label %396

396:                                              ; preds = %388, %390
  %397 = phi %"class.WTF::String"* [ %389, %388 ], [ %394, %390 ]
  %398 = phi %"class.WTF::StringImpl"* [ %367, %388 ], [ %393, %390 ]
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %415

403:                                              ; preds = %396
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = zext i32 %405 to i33
  %407 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %406, i33 1) #8
  %408 = extractvalue { i33, i1 } %407, 1
  %409 = extractvalue { i33, i1 } %407, 0
  %410 = icmp slt i33 %409, 0
  %411 = or i1 %408, %410
  br i1 %411, label %412, label %413, !prof !3

412:                                              ; preds = %403
  call void @llvm.trap() #8
  unreachable

413:                                              ; preds = %403
  %414 = trunc i33 %409 to i32
  store i32 %414, i32* %404, align 4
  br label %415

415:                                              ; preds = %369, %413, %396, %390
  %416 = phi i1 [ false, %413 ], [ false, %396 ], [ true, %390 ], [ true, %369 ]
  %417 = phi %"class.WTF::String"* [ %397, %413 ], [ %397, %396 ], [ %394, %390 ], [ %370, %369 ]
  %418 = phi %"class.WTF::StringImpl"* [ %398, %413 ], [ %398, %396 ], [ null, %390 ], [ null, %369 ]
  %419 = ptrtoint %"class.WTF::StringImpl"* %418 to i64
  %420 = bitcast %"class.WTF::String"* %417 to i64*
  %421 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %417, i64 0, i32 0, i32 0
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  store i64 %419, i64* %420, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %437, label %424

424:                                              ; preds = %415
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 0
  %430 = load i32, i32* %429, align 4
  br i1 %428, label %431, label %433

431:                                              ; preds = %424
  %432 = add i32 %430, -1
  store i32 %432, i32* %429, align 4
  br label %433

433:                                              ; preds = %431, %424
  %434 = phi i32 [ %432, %431 ], [ %430, %424 ]
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %437

436:                                              ; preds = %433
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %422) #8
  br label %437

437:                                              ; preds = %415, %433, %436
  br i1 %416, label %451, label %438

438:                                              ; preds = %437
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  br i1 %442, label %445, label %447

445:                                              ; preds = %438
  %446 = add i32 %444, -1
  store i32 %446, i32* %443, align 4
  br label %447

447:                                              ; preds = %445, %438
  %448 = phi i32 [ %446, %445 ], [ %444, %438 ]
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %418) #8
  br label %451

451:                                              ; preds = %437, %447, %450
  %452 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %453 = load i8*, i8** %452, align 8
  store i8* null, i8** %452, align 8
  %454 = icmp eq i8* %453, null
  br i1 %454, label %456, label %455

455:                                              ; preds = %451
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %453) #8
  br label %456

456:                                              ; preds = %455, %451
  %457 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %349, align 8
  %458 = icmp eq %"class.WTF::StringImpl"* %457, null
  br i1 %458, label %472, label %459

459:                                              ; preds = %456
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  br i1 %463, label %466, label %468

466:                                              ; preds = %459
  %467 = add i32 %465, -1
  store i32 %467, i32* %464, align 4
  br label %468

468:                                              ; preds = %466, %459
  %469 = phi i32 [ %467, %466 ], [ %465, %459 ]
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %468
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %457) #8
  br label %472

472:                                              ; preds = %456, %468, %471
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %346) #8
  br label %500

473:                                              ; preds = %353
  %474 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %475 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %476 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %475, align 8
  %477 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %476, i64 5
  %478 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %477, align 8
  call void %478(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %474) #8
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %355) #8
  %479 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %480 = load i8*, i8** %479, align 8
  store i8* null, i8** %479, align 8
  %481 = icmp eq i8* %480, null
  br i1 %481, label %483, label %482

482:                                              ; preds = %473
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %480) #8
  br label %483

483:                                              ; preds = %482, %473
  %484 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %349, align 8
  %485 = icmp eq %"class.WTF::StringImpl"* %484, null
  br i1 %485, label %499, label %486

486:                                              ; preds = %483
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = load atomic i32, i32* %487 monotonic, align 4
  %489 = and i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  br i1 %490, label %493, label %495

493:                                              ; preds = %486
  %494 = add i32 %492, -1
  store i32 %494, i32* %491, align 4
  br label %495

495:                                              ; preds = %493, %486
  %496 = phi i32 [ %494, %493 ], [ %492, %486 ]
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %499

498:                                              ; preds = %495
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %484) #8
  br label %499

499:                                              ; preds = %483, %495, %498
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %346) #8
  br label %2039

500:                                              ; preds = %472, %339
  %501 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 7, i32 0
  %502 = bitcast %"class.v8::Name"** %501 to %"class.v8::Value"**
  %503 = load %"class.v8::Value"*, %"class.v8::Value"** %502, align 8
  %504 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %503) #8
  %505 = icmp eq %"class.v8::Value"* %504, null
  br i1 %505, label %506, label %512

506:                                              ; preds = %500
  %507 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %508 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %509 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %508, align 8
  %510 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %509, i64 5
  %511 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %510, align 8
  call void %511(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %507) #8
  br label %2039

512:                                              ; preds = %500
  %513 = bitcast %"class.v8::Value"* %504 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = and i64 %514, 3
  %516 = icmp eq i64 %515, 1
  br i1 %516, label %517, label %534

517:                                              ; preds = %512
  %518 = add i64 %514, -1
  %519 = inttoptr i64 %518 to i32*
  %520 = load i32, i32* %519, align 4
  %521 = and i64 %514, -4294967296
  %522 = zext i32 %520 to i64
  %523 = or i64 %521, %522
  %524 = add i64 %523, 7
  %525 = inttoptr i64 %524 to i16*
  %526 = load i16, i16* %525, align 2
  %527 = icmp eq i16 %526, 67
  br i1 %527, label %528, label %534

528:                                              ; preds = %517
  %529 = add i64 %514, 23
  %530 = inttoptr i64 %529 to i32*
  %531 = load i32, i32* %530, align 4
  %532 = and i32 %531, -2
  %533 = icmp eq i32 %532, 10
  br i1 %533, label %560, label %534

534:                                              ; preds = %517, %512, %528
  %535 = bitcast %"class.WTF::Vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %535) #8
  %536 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  %537 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 2
  %538 = bitcast %"class.WTF::Vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %538, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_10IDLBooleanEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %10, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %504, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %539 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %540 = load i32, i32* %539, align 8
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %551

542:                                              ; preds = %534
  call void @_ZN5blink22MediaTrackCapabilities19setEchoCancellationERKN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"* %2, %"class.WTF::Vector"* nonnull dereferenceable(16) %10) #8
  %543 = load i8*, i8** %536, align 8
  %544 = icmp eq i8* %543, null
  br i1 %544, label %550, label %545, !prof !2

545:                                              ; preds = %542
  %546 = load i32, i32* %537, align 4
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %549, label %548, !prof !3

548:                                              ; preds = %545
  store i32 0, i32* %537, align 4
  br label %549

549:                                              ; preds = %548, %545
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %543) #8
  store i8* null, i8** %536, align 8
  br label %550

550:                                              ; preds = %542, %549
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %535) #8
  br label %560

551:                                              ; preds = %534
  %552 = load i8*, i8** %536, align 8
  %553 = icmp eq i8* %552, null
  br i1 %553, label %559, label %554, !prof !2

554:                                              ; preds = %551
  %555 = load i32, i32* %537, align 4
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %558, label %557, !prof !3

557:                                              ; preds = %554
  store i32 0, i32* %537, align 4
  br label %558

558:                                              ; preds = %557, %554
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %552) #8
  store i8* null, i8** %536, align 8
  br label %559

559:                                              ; preds = %551, %558
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %535) #8
  br label %2039

560:                                              ; preds = %550, %528
  %561 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 8, i32 0
  %562 = bitcast %"class.v8::Name"** %561 to %"class.v8::Value"**
  %563 = load %"class.v8::Value"*, %"class.v8::Value"** %562, align 8
  %564 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %563) #8
  %565 = icmp eq %"class.v8::Value"* %564, null
  br i1 %565, label %566, label %572

566:                                              ; preds = %560
  %567 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %568 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %569 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %568, align 8
  %570 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %569, i64 5
  %571 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %570, align 8
  call void %571(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %567) #8
  br label %2039

572:                                              ; preds = %560
  %573 = bitcast %"class.v8::Value"* %564 to i64*
  %574 = load i64, i64* %573, align 8
  %575 = and i64 %574, 3
  %576 = icmp eq i64 %575, 1
  br i1 %576, label %577, label %594

577:                                              ; preds = %572
  %578 = add i64 %574, -1
  %579 = inttoptr i64 %578 to i32*
  %580 = load i32, i32* %579, align 4
  %581 = and i64 %574, -4294967296
  %582 = zext i32 %580 to i64
  %583 = or i64 %581, %582
  %584 = add i64 %583, 7
  %585 = inttoptr i64 %584 to i16*
  %586 = load i16, i16* %585, align 2
  %587 = icmp eq i16 %586, 67
  br i1 %587, label %588, label %594

588:                                              ; preds = %577
  %589 = add i64 %574, 23
  %590 = inttoptr i64 %589 to i32*
  %591 = load i32, i32* %590, align 4
  %592 = and i32 %591, -2
  %593 = icmp eq i32 %592, 10
  br i1 %593, label %600, label %594

594:                                              ; preds = %577, %572, %588
  %595 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %564, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %596 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %597 = load i32, i32* %596, align 8
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %599, label %2039

599:                                              ; preds = %594
  call void @_ZN5blink22MediaTrackCapabilities23setExposureCompensationEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %595) #8
  br label %600

600:                                              ; preds = %599, %588
  %601 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 9, i32 0
  %602 = bitcast %"class.v8::Name"** %601 to %"class.v8::Value"**
  %603 = load %"class.v8::Value"*, %"class.v8::Value"** %602, align 8
  %604 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %603) #8
  %605 = icmp eq %"class.v8::Value"* %604, null
  br i1 %605, label %606, label %612

606:                                              ; preds = %600
  %607 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %608 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %609 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %608, align 8
  %610 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %609, i64 5
  %611 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %610, align 8
  call void %611(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %607) #8
  br label %2039

612:                                              ; preds = %600
  %613 = bitcast %"class.v8::Value"* %604 to i64*
  %614 = load i64, i64* %613, align 8
  %615 = and i64 %614, 3
  %616 = icmp eq i64 %615, 1
  br i1 %616, label %617, label %634

617:                                              ; preds = %612
  %618 = add i64 %614, -1
  %619 = inttoptr i64 %618 to i32*
  %620 = load i32, i32* %619, align 4
  %621 = and i64 %614, -4294967296
  %622 = zext i32 %620 to i64
  %623 = or i64 %621, %622
  %624 = add i64 %623, 7
  %625 = inttoptr i64 %624 to i16*
  %626 = load i16, i16* %625, align 2
  %627 = icmp eq i16 %626, 67
  br i1 %627, label %628, label %634

628:                                              ; preds = %617
  %629 = add i64 %614, 23
  %630 = inttoptr i64 %629 to i32*
  %631 = load i32, i32* %630, align 4
  %632 = and i32 %631, -2
  %633 = icmp eq i32 %632, 10
  br i1 %633, label %716, label %634

634:                                              ; preds = %617, %612, %628
  %635 = bitcast %"class.WTF::Vector.5"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %635) #8
  %636 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %11, i64 0, i32 0, i32 0, i32 0
  %637 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %11, i64 0, i32 0, i32 0, i32 2
  %638 = bitcast %"class.WTF::Vector.5"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %638, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.5"* nonnull sret %11, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %604, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %639 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %640 = load i32, i32* %639, align 8
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %642, label %679

642:                                              ; preds = %634
  call void @_ZN5blink22MediaTrackCapabilities15setExposureModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"* %2, %"class.WTF::Vector.5"* nonnull dereferenceable(16) %11) #8
  %643 = load %"class.WTF::String"*, %"class.WTF::String"** %636, align 8
  %644 = icmp eq %"class.WTF::String"* %643, null
  br i1 %644, label %678, label %645, !prof !2

645:                                              ; preds = %642
  %646 = bitcast %"class.WTF::String"* %643 to i8*
  %647 = load i32, i32* %637, align 4
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %676, label %649, !prof !3

649:                                              ; preds = %645
  %650 = zext i32 %647 to i64
  %651 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %643, i64 %650
  br label %652

652:                                              ; preds = %670, %649
  %653 = phi %"class.WTF::String"* [ %671, %670 ], [ %643, %649 ]
  %654 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %653, i64 0, i32 0, i32 0
  %655 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %654, align 8
  %656 = icmp eq %"class.WTF::StringImpl"* %655, null
  br i1 %656, label %670, label %657

657:                                              ; preds = %652
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %659 = load atomic i32, i32* %658 monotonic, align 4
  %660 = and i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 0
  %663 = load i32, i32* %662, align 4
  br i1 %661, label %664, label %666

664:                                              ; preds = %657
  %665 = add i32 %663, -1
  store i32 %665, i32* %662, align 4
  br label %666

666:                                              ; preds = %664, %657
  %667 = phi i32 [ %665, %664 ], [ %663, %657 ]
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %669, label %670

669:                                              ; preds = %666
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %655) #8
  br label %670

670:                                              ; preds = %669, %666, %652
  %671 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %653, i64 1
  %672 = icmp eq %"class.WTF::String"* %671, %651
  br i1 %672, label %673, label %652

673:                                              ; preds = %670
  store i32 0, i32* %637, align 4
  %674 = bitcast %"class.WTF::Vector.5"* %11 to i8**
  %675 = load i8*, i8** %674, align 8
  br label %676

676:                                              ; preds = %673, %645
  %677 = phi i8* [ %675, %673 ], [ %646, %645 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %677) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %636, align 8
  br label %678

678:                                              ; preds = %642, %676
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %635) #8
  br label %716

679:                                              ; preds = %634
  %680 = load %"class.WTF::String"*, %"class.WTF::String"** %636, align 8
  %681 = icmp eq %"class.WTF::String"* %680, null
  br i1 %681, label %715, label %682, !prof !2

682:                                              ; preds = %679
  %683 = bitcast %"class.WTF::String"* %680 to i8*
  %684 = load i32, i32* %637, align 4
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %713, label %686, !prof !3

686:                                              ; preds = %682
  %687 = zext i32 %684 to i64
  %688 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %680, i64 %687
  br label %689

689:                                              ; preds = %707, %686
  %690 = phi %"class.WTF::String"* [ %708, %707 ], [ %680, %686 ]
  %691 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %690, i64 0, i32 0, i32 0
  %692 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %691, align 8
  %693 = icmp eq %"class.WTF::StringImpl"* %692, null
  br i1 %693, label %707, label %694

694:                                              ; preds = %689
  %695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %692, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %696 = load atomic i32, i32* %695 monotonic, align 4
  %697 = and i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %692, i64 0, i32 0
  %700 = load i32, i32* %699, align 4
  br i1 %698, label %701, label %703

701:                                              ; preds = %694
  %702 = add i32 %700, -1
  store i32 %702, i32* %699, align 4
  br label %703

703:                                              ; preds = %701, %694
  %704 = phi i32 [ %702, %701 ], [ %700, %694 ]
  %705 = icmp eq i32 %704, 0
  br i1 %705, label %706, label %707

706:                                              ; preds = %703
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %692) #8
  br label %707

707:                                              ; preds = %706, %703, %689
  %708 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %690, i64 1
  %709 = icmp eq %"class.WTF::String"* %708, %688
  br i1 %709, label %710, label %689

710:                                              ; preds = %707
  store i32 0, i32* %637, align 4
  %711 = bitcast %"class.WTF::Vector.5"* %11 to i8**
  %712 = load i8*, i8** %711, align 8
  br label %713

713:                                              ; preds = %710, %682
  %714 = phi i8* [ %712, %710 ], [ %683, %682 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %714) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %636, align 8
  br label %715

715:                                              ; preds = %679, %713
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %635) #8
  br label %2039

716:                                              ; preds = %678, %628
  %717 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 10, i32 0
  %718 = bitcast %"class.v8::Name"** %717 to %"class.v8::Value"**
  %719 = load %"class.v8::Value"*, %"class.v8::Value"** %718, align 8
  %720 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %719) #8
  %721 = icmp eq %"class.v8::Value"* %720, null
  br i1 %721, label %722, label %728

722:                                              ; preds = %716
  %723 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %724 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %725 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %724, align 8
  %726 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %725, i64 5
  %727 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %726, align 8
  call void %727(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %723) #8
  br label %2039

728:                                              ; preds = %716
  %729 = bitcast %"class.v8::Value"* %720 to i64*
  %730 = load i64, i64* %729, align 8
  %731 = and i64 %730, 3
  %732 = icmp eq i64 %731, 1
  br i1 %732, label %733, label %750

733:                                              ; preds = %728
  %734 = add i64 %730, -1
  %735 = inttoptr i64 %734 to i32*
  %736 = load i32, i32* %735, align 4
  %737 = and i64 %730, -4294967296
  %738 = zext i32 %736 to i64
  %739 = or i64 %737, %738
  %740 = add i64 %739, 7
  %741 = inttoptr i64 %740 to i16*
  %742 = load i16, i16* %741, align 2
  %743 = icmp eq i16 %742, 67
  br i1 %743, label %744, label %750

744:                                              ; preds = %733
  %745 = add i64 %730, 23
  %746 = inttoptr i64 %745 to i32*
  %747 = load i32, i32* %746, align 4
  %748 = and i32 %747, -2
  %749 = icmp eq i32 %748, 10
  br i1 %749, label %756, label %750

750:                                              ; preds = %733, %728, %744
  %751 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %720, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %752 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %753 = load i32, i32* %752, align 8
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %2039

755:                                              ; preds = %750
  call void @_ZN5blink22MediaTrackCapabilities15setExposureTimeEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %751) #8
  br label %756

756:                                              ; preds = %755, %744
  %757 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 11, i32 0
  %758 = bitcast %"class.v8::Name"** %757 to %"class.v8::Value"**
  %759 = load %"class.v8::Value"*, %"class.v8::Value"** %758, align 8
  %760 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %759) #8
  %761 = icmp eq %"class.v8::Value"* %760, null
  br i1 %761, label %762, label %768

762:                                              ; preds = %756
  %763 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %764 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %765 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %764, align 8
  %766 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %765, i64 5
  %767 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %766, align 8
  call void %767(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %763) #8
  br label %2039

768:                                              ; preds = %756
  %769 = bitcast %"class.v8::Value"* %760 to i64*
  %770 = load i64, i64* %769, align 8
  %771 = and i64 %770, 3
  %772 = icmp eq i64 %771, 1
  br i1 %772, label %773, label %790

773:                                              ; preds = %768
  %774 = add i64 %770, -1
  %775 = inttoptr i64 %774 to i32*
  %776 = load i32, i32* %775, align 4
  %777 = and i64 %770, -4294967296
  %778 = zext i32 %776 to i64
  %779 = or i64 %777, %778
  %780 = add i64 %779, 7
  %781 = inttoptr i64 %780 to i16*
  %782 = load i16, i16* %781, align 2
  %783 = icmp eq i16 %782, 67
  br i1 %783, label %784, label %790

784:                                              ; preds = %773
  %785 = add i64 %770, 23
  %786 = inttoptr i64 %785 to i32*
  %787 = load i32, i32* %786, align 4
  %788 = and i32 %787, -2
  %789 = icmp eq i32 %788, 10
  br i1 %789, label %872, label %790

790:                                              ; preds = %773, %768, %784
  %791 = bitcast %"class.WTF::Vector.5"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %791) #8
  %792 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %12, i64 0, i32 0, i32 0, i32 0
  %793 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %12, i64 0, i32 0, i32 0, i32 2
  %794 = bitcast %"class.WTF::Vector.5"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %794, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.5"* nonnull sret %12, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %760, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %795 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %796 = load i32, i32* %795, align 8
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %798, label %835

798:                                              ; preds = %790
  call void @_ZN5blink22MediaTrackCapabilities13setFacingModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"* %2, %"class.WTF::Vector.5"* nonnull dereferenceable(16) %12) #8
  %799 = load %"class.WTF::String"*, %"class.WTF::String"** %792, align 8
  %800 = icmp eq %"class.WTF::String"* %799, null
  br i1 %800, label %834, label %801, !prof !2

801:                                              ; preds = %798
  %802 = bitcast %"class.WTF::String"* %799 to i8*
  %803 = load i32, i32* %793, align 4
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %832, label %805, !prof !3

805:                                              ; preds = %801
  %806 = zext i32 %803 to i64
  %807 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %799, i64 %806
  br label %808

808:                                              ; preds = %826, %805
  %809 = phi %"class.WTF::String"* [ %827, %826 ], [ %799, %805 ]
  %810 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %809, i64 0, i32 0, i32 0
  %811 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %810, align 8
  %812 = icmp eq %"class.WTF::StringImpl"* %811, null
  br i1 %812, label %826, label %813

813:                                              ; preds = %808
  %814 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %811, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %815 = load atomic i32, i32* %814 monotonic, align 4
  %816 = and i32 %815, 2
  %817 = icmp eq i32 %816, 0
  %818 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %811, i64 0, i32 0
  %819 = load i32, i32* %818, align 4
  br i1 %817, label %820, label %822

820:                                              ; preds = %813
  %821 = add i32 %819, -1
  store i32 %821, i32* %818, align 4
  br label %822

822:                                              ; preds = %820, %813
  %823 = phi i32 [ %821, %820 ], [ %819, %813 ]
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %825, label %826

825:                                              ; preds = %822
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %811) #8
  br label %826

826:                                              ; preds = %825, %822, %808
  %827 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %809, i64 1
  %828 = icmp eq %"class.WTF::String"* %827, %807
  br i1 %828, label %829, label %808

829:                                              ; preds = %826
  store i32 0, i32* %793, align 4
  %830 = bitcast %"class.WTF::Vector.5"* %12 to i8**
  %831 = load i8*, i8** %830, align 8
  br label %832

832:                                              ; preds = %829, %801
  %833 = phi i8* [ %831, %829 ], [ %802, %801 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %833) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %792, align 8
  br label %834

834:                                              ; preds = %798, %832
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %791) #8
  br label %872

835:                                              ; preds = %790
  %836 = load %"class.WTF::String"*, %"class.WTF::String"** %792, align 8
  %837 = icmp eq %"class.WTF::String"* %836, null
  br i1 %837, label %871, label %838, !prof !2

838:                                              ; preds = %835
  %839 = bitcast %"class.WTF::String"* %836 to i8*
  %840 = load i32, i32* %793, align 4
  %841 = icmp eq i32 %840, 0
  br i1 %841, label %869, label %842, !prof !3

842:                                              ; preds = %838
  %843 = zext i32 %840 to i64
  %844 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %836, i64 %843
  br label %845

845:                                              ; preds = %863, %842
  %846 = phi %"class.WTF::String"* [ %864, %863 ], [ %836, %842 ]
  %847 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %846, i64 0, i32 0, i32 0
  %848 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %847, align 8
  %849 = icmp eq %"class.WTF::StringImpl"* %848, null
  br i1 %849, label %863, label %850

850:                                              ; preds = %845
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = load atomic i32, i32* %851 monotonic, align 4
  %853 = and i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 0
  %856 = load i32, i32* %855, align 4
  br i1 %854, label %857, label %859

857:                                              ; preds = %850
  %858 = add i32 %856, -1
  store i32 %858, i32* %855, align 4
  br label %859

859:                                              ; preds = %857, %850
  %860 = phi i32 [ %858, %857 ], [ %856, %850 ]
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %862, label %863

862:                                              ; preds = %859
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %848) #8
  br label %863

863:                                              ; preds = %862, %859, %845
  %864 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %846, i64 1
  %865 = icmp eq %"class.WTF::String"* %864, %844
  br i1 %865, label %866, label %845

866:                                              ; preds = %863
  store i32 0, i32* %793, align 4
  %867 = bitcast %"class.WTF::Vector.5"* %12 to i8**
  %868 = load i8*, i8** %867, align 8
  br label %869

869:                                              ; preds = %866, %838
  %870 = phi i8* [ %868, %866 ], [ %839, %838 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %870) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %792, align 8
  br label %871

871:                                              ; preds = %835, %869
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %791) #8
  br label %2039

872:                                              ; preds = %834, %784
  %873 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 12, i32 0
  %874 = bitcast %"class.v8::Name"** %873 to %"class.v8::Value"**
  %875 = load %"class.v8::Value"*, %"class.v8::Value"** %874, align 8
  %876 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %875) #8
  %877 = icmp eq %"class.v8::Value"* %876, null
  br i1 %877, label %878, label %884

878:                                              ; preds = %872
  %879 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %880 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %881 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %880, align 8
  %882 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %881, i64 5
  %883 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %882, align 8
  call void %883(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %879) #8
  br label %2039

884:                                              ; preds = %872
  %885 = bitcast %"class.v8::Value"* %876 to i64*
  %886 = load i64, i64* %885, align 8
  %887 = and i64 %886, 3
  %888 = icmp eq i64 %887, 1
  br i1 %888, label %889, label %906

889:                                              ; preds = %884
  %890 = add i64 %886, -1
  %891 = inttoptr i64 %890 to i32*
  %892 = load i32, i32* %891, align 4
  %893 = and i64 %886, -4294967296
  %894 = zext i32 %892 to i64
  %895 = or i64 %893, %894
  %896 = add i64 %895, 7
  %897 = inttoptr i64 %896 to i16*
  %898 = load i16, i16* %897, align 2
  %899 = icmp eq i16 %898, 67
  br i1 %899, label %900, label %906

900:                                              ; preds = %889
  %901 = add i64 %886, 23
  %902 = inttoptr i64 %901 to i32*
  %903 = load i32, i32* %902, align 4
  %904 = and i32 %903, -2
  %905 = icmp eq i32 %904, 10
  br i1 %905, label %912, label %906

906:                                              ; preds = %889, %884, %900
  %907 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %876, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %908 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %909 = load i32, i32* %908, align 8
  %910 = icmp eq i32 %909, 0
  br i1 %910, label %911, label %2039

911:                                              ; preds = %906
  call void @_ZN5blink22MediaTrackCapabilities16setFocusDistanceEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %907) #8
  br label %912

912:                                              ; preds = %911, %900
  %913 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 13, i32 0
  %914 = bitcast %"class.v8::Name"** %913 to %"class.v8::Value"**
  %915 = load %"class.v8::Value"*, %"class.v8::Value"** %914, align 8
  %916 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %915) #8
  %917 = icmp eq %"class.v8::Value"* %916, null
  br i1 %917, label %918, label %924

918:                                              ; preds = %912
  %919 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %920 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %921 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %920, align 8
  %922 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %921, i64 5
  %923 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %922, align 8
  call void %923(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %919) #8
  br label %2039

924:                                              ; preds = %912
  %925 = bitcast %"class.v8::Value"* %916 to i64*
  %926 = load i64, i64* %925, align 8
  %927 = and i64 %926, 3
  %928 = icmp eq i64 %927, 1
  br i1 %928, label %929, label %946

929:                                              ; preds = %924
  %930 = add i64 %926, -1
  %931 = inttoptr i64 %930 to i32*
  %932 = load i32, i32* %931, align 4
  %933 = and i64 %926, -4294967296
  %934 = zext i32 %932 to i64
  %935 = or i64 %933, %934
  %936 = add i64 %935, 7
  %937 = inttoptr i64 %936 to i16*
  %938 = load i16, i16* %937, align 2
  %939 = icmp eq i16 %938, 67
  br i1 %939, label %940, label %946

940:                                              ; preds = %929
  %941 = add i64 %926, 23
  %942 = inttoptr i64 %941 to i32*
  %943 = load i32, i32* %942, align 4
  %944 = and i32 %943, -2
  %945 = icmp eq i32 %944, 10
  br i1 %945, label %1028, label %946

946:                                              ; preds = %929, %924, %940
  %947 = bitcast %"class.WTF::Vector.5"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %947) #8
  %948 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %13, i64 0, i32 0, i32 0, i32 0
  %949 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %13, i64 0, i32 0, i32 0, i32 2
  %950 = bitcast %"class.WTF::Vector.5"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %950, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.5"* nonnull sret %13, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %916, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %951 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %952 = load i32, i32* %951, align 8
  %953 = icmp eq i32 %952, 0
  br i1 %953, label %954, label %991

954:                                              ; preds = %946
  call void @_ZN5blink22MediaTrackCapabilities12setFocusModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"* %2, %"class.WTF::Vector.5"* nonnull dereferenceable(16) %13) #8
  %955 = load %"class.WTF::String"*, %"class.WTF::String"** %948, align 8
  %956 = icmp eq %"class.WTF::String"* %955, null
  br i1 %956, label %990, label %957, !prof !2

957:                                              ; preds = %954
  %958 = bitcast %"class.WTF::String"* %955 to i8*
  %959 = load i32, i32* %949, align 4
  %960 = icmp eq i32 %959, 0
  br i1 %960, label %988, label %961, !prof !3

961:                                              ; preds = %957
  %962 = zext i32 %959 to i64
  %963 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %955, i64 %962
  br label %964

964:                                              ; preds = %982, %961
  %965 = phi %"class.WTF::String"* [ %983, %982 ], [ %955, %961 ]
  %966 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %965, i64 0, i32 0, i32 0
  %967 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %966, align 8
  %968 = icmp eq %"class.WTF::StringImpl"* %967, null
  br i1 %968, label %982, label %969

969:                                              ; preds = %964
  %970 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %971 = load atomic i32, i32* %970 monotonic, align 4
  %972 = and i32 %971, 2
  %973 = icmp eq i32 %972, 0
  %974 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %967, i64 0, i32 0
  %975 = load i32, i32* %974, align 4
  br i1 %973, label %976, label %978

976:                                              ; preds = %969
  %977 = add i32 %975, -1
  store i32 %977, i32* %974, align 4
  br label %978

978:                                              ; preds = %976, %969
  %979 = phi i32 [ %977, %976 ], [ %975, %969 ]
  %980 = icmp eq i32 %979, 0
  br i1 %980, label %981, label %982

981:                                              ; preds = %978
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %967) #8
  br label %982

982:                                              ; preds = %981, %978, %964
  %983 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %965, i64 1
  %984 = icmp eq %"class.WTF::String"* %983, %963
  br i1 %984, label %985, label %964

985:                                              ; preds = %982
  store i32 0, i32* %949, align 4
  %986 = bitcast %"class.WTF::Vector.5"* %13 to i8**
  %987 = load i8*, i8** %986, align 8
  br label %988

988:                                              ; preds = %985, %957
  %989 = phi i8* [ %987, %985 ], [ %958, %957 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %989) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %948, align 8
  br label %990

990:                                              ; preds = %954, %988
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %947) #8
  br label %1028

991:                                              ; preds = %946
  %992 = load %"class.WTF::String"*, %"class.WTF::String"** %948, align 8
  %993 = icmp eq %"class.WTF::String"* %992, null
  br i1 %993, label %1027, label %994, !prof !2

994:                                              ; preds = %991
  %995 = bitcast %"class.WTF::String"* %992 to i8*
  %996 = load i32, i32* %949, align 4
  %997 = icmp eq i32 %996, 0
  br i1 %997, label %1025, label %998, !prof !3

998:                                              ; preds = %994
  %999 = zext i32 %996 to i64
  %1000 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %992, i64 %999
  br label %1001

1001:                                             ; preds = %1019, %998
  %1002 = phi %"class.WTF::String"* [ %1020, %1019 ], [ %992, %998 ]
  %1003 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1002, i64 0, i32 0, i32 0
  %1004 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1003, align 8
  %1005 = icmp eq %"class.WTF::StringImpl"* %1004, null
  br i1 %1005, label %1019, label %1006

1006:                                             ; preds = %1001
  %1007 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1004, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1008 = load atomic i32, i32* %1007 monotonic, align 4
  %1009 = and i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  %1011 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1004, i64 0, i32 0
  %1012 = load i32, i32* %1011, align 4
  br i1 %1010, label %1013, label %1015

1013:                                             ; preds = %1006
  %1014 = add i32 %1012, -1
  store i32 %1014, i32* %1011, align 4
  br label %1015

1015:                                             ; preds = %1013, %1006
  %1016 = phi i32 [ %1014, %1013 ], [ %1012, %1006 ]
  %1017 = icmp eq i32 %1016, 0
  br i1 %1017, label %1018, label %1019

1018:                                             ; preds = %1015
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1004) #8
  br label %1019

1019:                                             ; preds = %1018, %1015, %1001
  %1020 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1002, i64 1
  %1021 = icmp eq %"class.WTF::String"* %1020, %1000
  br i1 %1021, label %1022, label %1001

1022:                                             ; preds = %1019
  store i32 0, i32* %949, align 4
  %1023 = bitcast %"class.WTF::Vector.5"* %13 to i8**
  %1024 = load i8*, i8** %1023, align 8
  br label %1025

1025:                                             ; preds = %1022, %994
  %1026 = phi i8* [ %1024, %1022 ], [ %995, %994 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1026) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %948, align 8
  br label %1027

1027:                                             ; preds = %991, %1025
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %947) #8
  br label %2039

1028:                                             ; preds = %990, %940
  %1029 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 14, i32 0
  %1030 = bitcast %"class.v8::Name"** %1029 to %"class.v8::Value"**
  %1031 = load %"class.v8::Value"*, %"class.v8::Value"** %1030, align 8
  %1032 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1031) #8
  %1033 = icmp eq %"class.v8::Value"* %1032, null
  br i1 %1033, label %1034, label %1040

1034:                                             ; preds = %1028
  %1035 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1036 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1037 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1036, align 8
  %1038 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1037, i64 5
  %1039 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1038, align 8
  call void %1039(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1035) #8
  br label %2039

1040:                                             ; preds = %1028
  %1041 = bitcast %"class.v8::Value"* %1032 to i64*
  %1042 = load i64, i64* %1041, align 8
  %1043 = and i64 %1042, 3
  %1044 = icmp eq i64 %1043, 1
  br i1 %1044, label %1045, label %1062

1045:                                             ; preds = %1040
  %1046 = add i64 %1042, -1
  %1047 = inttoptr i64 %1046 to i32*
  %1048 = load i32, i32* %1047, align 4
  %1049 = and i64 %1042, -4294967296
  %1050 = zext i32 %1048 to i64
  %1051 = or i64 %1049, %1050
  %1052 = add i64 %1051, 7
  %1053 = inttoptr i64 %1052 to i16*
  %1054 = load i16, i16* %1053, align 2
  %1055 = icmp eq i16 %1054, 67
  br i1 %1055, label %1056, label %1062

1056:                                             ; preds = %1045
  %1057 = add i64 %1042, 23
  %1058 = inttoptr i64 %1057 to i32*
  %1059 = load i32, i32* %1058, align 4
  %1060 = and i32 %1059, -2
  %1061 = icmp eq i32 %1060, 10
  br i1 %1061, label %1068, label %1062

1062:                                             ; preds = %1045, %1040, %1056
  %1063 = call %"class.blink::DoubleRange"* @_ZN5blink17NativeValueTraitsINS_11DoubleRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1032, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1064 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1065 = load i32, i32* %1064, align 8
  %1066 = icmp eq i32 %1065, 0
  br i1 %1066, label %1067, label %2039

1067:                                             ; preds = %1062
  call void @_ZN5blink22MediaTrackCapabilities12setFrameRateEPNS_11DoubleRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::DoubleRange"* %1063) #8
  br label %1068

1068:                                             ; preds = %1067, %1056
  %1069 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 15, i32 0
  %1070 = bitcast %"class.v8::Name"** %1069 to %"class.v8::Value"**
  %1071 = load %"class.v8::Value"*, %"class.v8::Value"** %1070, align 8
  %1072 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1071) #8
  %1073 = icmp eq %"class.v8::Value"* %1072, null
  br i1 %1073, label %1074, label %1080

1074:                                             ; preds = %1068
  %1075 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1076 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1077 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1076, align 8
  %1078 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1077, i64 5
  %1079 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1078, align 8
  call void %1079(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1075) #8
  br label %2039

1080:                                             ; preds = %1068
  %1081 = bitcast %"class.v8::Value"* %1072 to i64*
  %1082 = load i64, i64* %1081, align 8
  %1083 = and i64 %1082, 3
  %1084 = icmp eq i64 %1083, 1
  br i1 %1084, label %1085, label %1102

1085:                                             ; preds = %1080
  %1086 = add i64 %1082, -1
  %1087 = inttoptr i64 %1086 to i32*
  %1088 = load i32, i32* %1087, align 4
  %1089 = and i64 %1082, -4294967296
  %1090 = zext i32 %1088 to i64
  %1091 = or i64 %1089, %1090
  %1092 = add i64 %1091, 7
  %1093 = inttoptr i64 %1092 to i16*
  %1094 = load i16, i16* %1093, align 2
  %1095 = icmp eq i16 %1094, 67
  br i1 %1095, label %1096, label %1102

1096:                                             ; preds = %1085
  %1097 = add i64 %1082, 23
  %1098 = inttoptr i64 %1097 to i32*
  %1099 = load i32, i32* %1098, align 4
  %1100 = and i32 %1099, -2
  %1101 = icmp eq i32 %1100, 10
  br i1 %1101, label %1257, label %1102

1102:                                             ; preds = %1085, %1080, %1096
  %1103 = bitcast %"class.blink::V8StringResource"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1103) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1103, i8 -86, i64 152, i1 false)
  %1104 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1072, %"class.v8::Value"** %1104, align 8
  %1105 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 1
  store i32 0, i32* %1105, align 8
  %1106 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1106, align 8
  %1107 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1
  %1108 = bitcast %"class.std::__1::unique_ptr"* %1107 to i64*
  store i64 0, i64* %1108, align 8
  %1109 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %14) #8
  br i1 %1109, label %1120, label %1110

1110:                                             ; preds = %1102
  %1111 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %1112 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1112) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1112, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1111) #8
  %1113 = load %"class.v8::Value"*, %"class.v8::Value"** %1104, align 8
  %1114 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1111) #8
  %1115 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %1113, %"class.v8::Context"* %1114) #8
  %1116 = ptrtoint %"class.v8::String"* %1115 to i64
  %1117 = bitcast %"class.blink::V8StringResource"* %14 to i64*
  store i64 %1116, i64* %1117, align 8
  %1118 = icmp eq %"class.v8::String"* %1115, null
  br i1 %1118, label %1230, label %1119

1119:                                             ; preds = %1110
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1112) #8
  br label %1120

1120:                                             ; preds = %1102, %1119
  %1121 = load %"class.v8::Value"*, %"class.v8::Value"** %1104, align 8
  %1122 = icmp eq %"class.v8::Value"* %1121, null
  br i1 %1122, label %1123, label %1147, !prof !3

1123:                                             ; preds = %1120
  %1124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1106, align 8
  %1125 = icmp eq %"class.WTF::StringImpl"* %1124, null
  br i1 %1125, label %1126, label %1128

1126:                                             ; preds = %1123
  %1127 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %2, i64 0, i32 25
  br label %1172

1128:                                             ; preds = %1123
  %1129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1130 = load atomic i32, i32* %1129 monotonic, align 4
  %1131 = and i32 %1130, 2
  %1132 = icmp eq i32 %1131, 0
  br i1 %1132, label %1133, label %1145

1133:                                             ; preds = %1128
  %1134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1124, i64 0, i32 0
  %1135 = load i32, i32* %1134, align 4
  %1136 = zext i32 %1135 to i33
  %1137 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1136, i33 1) #8
  %1138 = extractvalue { i33, i1 } %1137, 1
  %1139 = extractvalue { i33, i1 } %1137, 0
  %1140 = icmp slt i33 %1139, 0
  %1141 = or i1 %1138, %1140
  br i1 %1141, label %1142, label %1143, !prof !3

1142:                                             ; preds = %1133
  call void @llvm.trap() #8
  unreachable

1143:                                             ; preds = %1133
  %1144 = trunc i33 %1139 to i32
  store i32 %1144, i32* %1134, align 4
  br label %1145

1145:                                             ; preds = %1128, %1143
  %1146 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %2, i64 0, i32 25
  br label %1153

1147:                                             ; preds = %1120
  %1148 = bitcast %"class.v8::Value"* %1121 to %"class.v8::String"*
  %1149 = load i32, i32* %1105, align 8
  %1150 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1148, i32 %1149) #8
  %1151 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %2, i64 0, i32 25
  %1152 = icmp eq %"class.WTF::StringImpl"* %1150, null
  br i1 %1152, label %1172, label %1153

1153:                                             ; preds = %1145, %1147
  %1154 = phi %"class.WTF::String"* [ %1146, %1145 ], [ %1151, %1147 ]
  %1155 = phi %"class.WTF::StringImpl"* [ %1124, %1145 ], [ %1150, %1147 ]
  %1156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1157 = load atomic i32, i32* %1156 monotonic, align 4
  %1158 = and i32 %1157, 2
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1160, label %1172

1160:                                             ; preds = %1153
  %1161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1155, i64 0, i32 0
  %1162 = load i32, i32* %1161, align 4
  %1163 = zext i32 %1162 to i33
  %1164 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1163, i33 1) #8
  %1165 = extractvalue { i33, i1 } %1164, 1
  %1166 = extractvalue { i33, i1 } %1164, 0
  %1167 = icmp slt i33 %1166, 0
  %1168 = or i1 %1165, %1167
  br i1 %1168, label %1169, label %1170, !prof !3

1169:                                             ; preds = %1160
  call void @llvm.trap() #8
  unreachable

1170:                                             ; preds = %1160
  %1171 = trunc i33 %1166 to i32
  store i32 %1171, i32* %1161, align 4
  br label %1172

1172:                                             ; preds = %1126, %1170, %1153, %1147
  %1173 = phi i1 [ false, %1170 ], [ false, %1153 ], [ true, %1147 ], [ true, %1126 ]
  %1174 = phi %"class.WTF::String"* [ %1154, %1170 ], [ %1154, %1153 ], [ %1151, %1147 ], [ %1127, %1126 ]
  %1175 = phi %"class.WTF::StringImpl"* [ %1155, %1170 ], [ %1155, %1153 ], [ null, %1147 ], [ null, %1126 ]
  %1176 = ptrtoint %"class.WTF::StringImpl"* %1175 to i64
  %1177 = bitcast %"class.WTF::String"* %1174 to i64*
  %1178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1174, i64 0, i32 0, i32 0
  %1179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1178, align 8
  store i64 %1176, i64* %1177, align 8
  %1180 = icmp eq %"class.WTF::StringImpl"* %1179, null
  br i1 %1180, label %1194, label %1181

1181:                                             ; preds = %1172
  %1182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1183 = load atomic i32, i32* %1182 monotonic, align 4
  %1184 = and i32 %1183, 2
  %1185 = icmp eq i32 %1184, 0
  %1186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 0
  %1187 = load i32, i32* %1186, align 4
  br i1 %1185, label %1188, label %1190

1188:                                             ; preds = %1181
  %1189 = add i32 %1187, -1
  store i32 %1189, i32* %1186, align 4
  br label %1190

1190:                                             ; preds = %1188, %1181
  %1191 = phi i32 [ %1189, %1188 ], [ %1187, %1181 ]
  %1192 = icmp eq i32 %1191, 0
  br i1 %1192, label %1193, label %1194

1193:                                             ; preds = %1190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1179) #8
  br label %1194

1194:                                             ; preds = %1172, %1190, %1193
  br i1 %1173, label %1208, label %1195

1195:                                             ; preds = %1194
  %1196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1197 = load atomic i32, i32* %1196 monotonic, align 4
  %1198 = and i32 %1197, 2
  %1199 = icmp eq i32 %1198, 0
  %1200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1175, i64 0, i32 0
  %1201 = load i32, i32* %1200, align 4
  br i1 %1199, label %1202, label %1204

1202:                                             ; preds = %1195
  %1203 = add i32 %1201, -1
  store i32 %1203, i32* %1200, align 4
  br label %1204

1204:                                             ; preds = %1202, %1195
  %1205 = phi i32 [ %1203, %1202 ], [ %1201, %1195 ]
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1207, label %1208

1207:                                             ; preds = %1204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1175) #8
  br label %1208

1208:                                             ; preds = %1194, %1204, %1207
  %1209 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1210 = load i8*, i8** %1209, align 8
  store i8* null, i8** %1209, align 8
  %1211 = icmp eq i8* %1210, null
  br i1 %1211, label %1213, label %1212

1212:                                             ; preds = %1208
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1210) #8
  br label %1213

1213:                                             ; preds = %1212, %1208
  %1214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1106, align 8
  %1215 = icmp eq %"class.WTF::StringImpl"* %1214, null
  br i1 %1215, label %1229, label %1216

1216:                                             ; preds = %1213
  %1217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1218 = load atomic i32, i32* %1217 monotonic, align 4
  %1219 = and i32 %1218, 2
  %1220 = icmp eq i32 %1219, 0
  %1221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1214, i64 0, i32 0
  %1222 = load i32, i32* %1221, align 4
  br i1 %1220, label %1223, label %1225

1223:                                             ; preds = %1216
  %1224 = add i32 %1222, -1
  store i32 %1224, i32* %1221, align 4
  br label %1225

1225:                                             ; preds = %1223, %1216
  %1226 = phi i32 [ %1224, %1223 ], [ %1222, %1216 ]
  %1227 = icmp eq i32 %1226, 0
  br i1 %1227, label %1228, label %1229

1228:                                             ; preds = %1225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1214) #8
  br label %1229

1229:                                             ; preds = %1213, %1225, %1228
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1103) #8
  br label %1257

1230:                                             ; preds = %1110
  %1231 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %1232 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1233 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1232, align 8
  %1234 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1233, i64 5
  %1235 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1234, align 8
  call void %1235(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1231) #8
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1112) #8
  %1236 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1237 = load i8*, i8** %1236, align 8
  store i8* null, i8** %1236, align 8
  %1238 = icmp eq i8* %1237, null
  br i1 %1238, label %1240, label %1239

1239:                                             ; preds = %1230
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1237) #8
  br label %1240

1240:                                             ; preds = %1239, %1230
  %1241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1106, align 8
  %1242 = icmp eq %"class.WTF::StringImpl"* %1241, null
  br i1 %1242, label %1256, label %1243

1243:                                             ; preds = %1240
  %1244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1245 = load atomic i32, i32* %1244 monotonic, align 4
  %1246 = and i32 %1245, 2
  %1247 = icmp eq i32 %1246, 0
  %1248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1241, i64 0, i32 0
  %1249 = load i32, i32* %1248, align 4
  br i1 %1247, label %1250, label %1252

1250:                                             ; preds = %1243
  %1251 = add i32 %1249, -1
  store i32 %1251, i32* %1248, align 4
  br label %1252

1252:                                             ; preds = %1250, %1243
  %1253 = phi i32 [ %1251, %1250 ], [ %1249, %1243 ]
  %1254 = icmp eq i32 %1253, 0
  br i1 %1254, label %1255, label %1256

1255:                                             ; preds = %1252
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1241) #8
  br label %1256

1256:                                             ; preds = %1240, %1252, %1255
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1103) #8
  br label %2039

1257:                                             ; preds = %1229, %1096
  %1258 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 16, i32 0
  %1259 = bitcast %"class.v8::Name"** %1258 to %"class.v8::Value"**
  %1260 = load %"class.v8::Value"*, %"class.v8::Value"** %1259, align 8
  %1261 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1260) #8
  %1262 = icmp eq %"class.v8::Value"* %1261, null
  br i1 %1262, label %1263, label %1269

1263:                                             ; preds = %1257
  %1264 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1265 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1266 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1265, align 8
  %1267 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1266, i64 5
  %1268 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1267, align 8
  call void %1268(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1264) #8
  br label %2039

1269:                                             ; preds = %1257
  %1270 = bitcast %"class.v8::Value"* %1261 to i64*
  %1271 = load i64, i64* %1270, align 8
  %1272 = and i64 %1271, 3
  %1273 = icmp eq i64 %1272, 1
  br i1 %1273, label %1274, label %1291

1274:                                             ; preds = %1269
  %1275 = add i64 %1271, -1
  %1276 = inttoptr i64 %1275 to i32*
  %1277 = load i32, i32* %1276, align 4
  %1278 = and i64 %1271, -4294967296
  %1279 = zext i32 %1277 to i64
  %1280 = or i64 %1278, %1279
  %1281 = add i64 %1280, 7
  %1282 = inttoptr i64 %1281 to i16*
  %1283 = load i16, i16* %1282, align 2
  %1284 = icmp eq i16 %1283, 67
  br i1 %1284, label %1285, label %1291

1285:                                             ; preds = %1274
  %1286 = add i64 %1271, 23
  %1287 = inttoptr i64 %1286 to i32*
  %1288 = load i32, i32* %1287, align 4
  %1289 = and i32 %1288, -2
  %1290 = icmp eq i32 %1289, 10
  br i1 %1290, label %1297, label %1291

1291:                                             ; preds = %1274, %1269, %1285
  %1292 = call %"class.blink::LongRange"* @_ZN5blink17NativeValueTraitsINS_9LongRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1261, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1293 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1294 = load i32, i32* %1293, align 8
  %1295 = icmp eq i32 %1294, 0
  br i1 %1295, label %1296, label %2039

1296:                                             ; preds = %1291
  call void @_ZN5blink22MediaTrackCapabilities9setHeightEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::LongRange"* %1292) #8
  br label %1297

1297:                                             ; preds = %1296, %1285
  %1298 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 17, i32 0
  %1299 = bitcast %"class.v8::Name"** %1298 to %"class.v8::Value"**
  %1300 = load %"class.v8::Value"*, %"class.v8::Value"** %1299, align 8
  %1301 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1300) #8
  %1302 = icmp eq %"class.v8::Value"* %1301, null
  br i1 %1302, label %1303, label %1309

1303:                                             ; preds = %1297
  %1304 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1305 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1306 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1305, align 8
  %1307 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1306, i64 5
  %1308 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1307, align 8
  call void %1308(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1304) #8
  br label %2039

1309:                                             ; preds = %1297
  %1310 = bitcast %"class.v8::Value"* %1301 to i64*
  %1311 = load i64, i64* %1310, align 8
  %1312 = and i64 %1311, 3
  %1313 = icmp eq i64 %1312, 1
  br i1 %1313, label %1314, label %1331

1314:                                             ; preds = %1309
  %1315 = add i64 %1311, -1
  %1316 = inttoptr i64 %1315 to i32*
  %1317 = load i32, i32* %1316, align 4
  %1318 = and i64 %1311, -4294967296
  %1319 = zext i32 %1317 to i64
  %1320 = or i64 %1318, %1319
  %1321 = add i64 %1320, 7
  %1322 = inttoptr i64 %1321 to i16*
  %1323 = load i16, i16* %1322, align 2
  %1324 = icmp eq i16 %1323, 67
  br i1 %1324, label %1325, label %1331

1325:                                             ; preds = %1314
  %1326 = add i64 %1311, 23
  %1327 = inttoptr i64 %1326 to i32*
  %1328 = load i32, i32* %1327, align 4
  %1329 = and i32 %1328, -2
  %1330 = icmp eq i32 %1329, 10
  br i1 %1330, label %1337, label %1331

1331:                                             ; preds = %1314, %1309, %1325
  %1332 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1301, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1333 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1334 = load i32, i32* %1333, align 8
  %1335 = icmp eq i32 %1334, 0
  br i1 %1335, label %1336, label %2039

1336:                                             ; preds = %1331
  call void @_ZN5blink22MediaTrackCapabilities6setIsoEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %1332) #8
  br label %1337

1337:                                             ; preds = %1336, %1325
  %1338 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 18, i32 0
  %1339 = bitcast %"class.v8::Name"** %1338 to %"class.v8::Value"**
  %1340 = load %"class.v8::Value"*, %"class.v8::Value"** %1339, align 8
  %1341 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1340) #8
  %1342 = icmp eq %"class.v8::Value"* %1341, null
  br i1 %1342, label %1343, label %1349

1343:                                             ; preds = %1337
  %1344 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1345 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1346 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1345, align 8
  %1347 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1346, i64 5
  %1348 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1347, align 8
  call void %1348(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1344) #8
  br label %2039

1349:                                             ; preds = %1337
  %1350 = bitcast %"class.v8::Value"* %1341 to i64*
  %1351 = load i64, i64* %1350, align 8
  %1352 = and i64 %1351, 3
  %1353 = icmp eq i64 %1352, 1
  br i1 %1353, label %1354, label %1371

1354:                                             ; preds = %1349
  %1355 = add i64 %1351, -1
  %1356 = inttoptr i64 %1355 to i32*
  %1357 = load i32, i32* %1356, align 4
  %1358 = and i64 %1351, -4294967296
  %1359 = zext i32 %1357 to i64
  %1360 = or i64 %1358, %1359
  %1361 = add i64 %1360, 7
  %1362 = inttoptr i64 %1361 to i16*
  %1363 = load i16, i16* %1362, align 2
  %1364 = icmp eq i16 %1363, 67
  br i1 %1364, label %1365, label %1371

1365:                                             ; preds = %1354
  %1366 = add i64 %1351, 23
  %1367 = inttoptr i64 %1366 to i32*
  %1368 = load i32, i32* %1367, align 4
  %1369 = and i32 %1368, -2
  %1370 = icmp eq i32 %1369, 10
  br i1 %1370, label %1377, label %1371

1371:                                             ; preds = %1354, %1349, %1365
  %1372 = call %"class.blink::DoubleRange"* @_ZN5blink17NativeValueTraitsINS_11DoubleRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1341, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1373 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1374 = load i32, i32* %1373, align 8
  %1375 = icmp eq i32 %1374, 0
  br i1 %1375, label %1376, label %2039

1376:                                             ; preds = %1371
  call void @_ZN5blink22MediaTrackCapabilities10setLatencyEPNS_11DoubleRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::DoubleRange"* %1372) #8
  br label %1377

1377:                                             ; preds = %1376, %1365
  %1378 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 19, i32 0
  %1379 = bitcast %"class.v8::Name"** %1378 to %"class.v8::Value"**
  %1380 = load %"class.v8::Value"*, %"class.v8::Value"** %1379, align 8
  %1381 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1380) #8
  %1382 = icmp eq %"class.v8::Value"* %1381, null
  br i1 %1382, label %1383, label %1389

1383:                                             ; preds = %1377
  %1384 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1385 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1386 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1385, align 8
  %1387 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1386, i64 5
  %1388 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1387, align 8
  call void %1388(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1384) #8
  br label %2039

1389:                                             ; preds = %1377
  %1390 = bitcast %"class.v8::Value"* %1381 to i64*
  %1391 = load i64, i64* %1390, align 8
  %1392 = and i64 %1391, 3
  %1393 = icmp eq i64 %1392, 1
  br i1 %1393, label %1394, label %1411

1394:                                             ; preds = %1389
  %1395 = add i64 %1391, -1
  %1396 = inttoptr i64 %1395 to i32*
  %1397 = load i32, i32* %1396, align 4
  %1398 = and i64 %1391, -4294967296
  %1399 = zext i32 %1397 to i64
  %1400 = or i64 %1398, %1399
  %1401 = add i64 %1400, 7
  %1402 = inttoptr i64 %1401 to i16*
  %1403 = load i16, i16* %1402, align 2
  %1404 = icmp eq i16 %1403, 67
  br i1 %1404, label %1405, label %1411

1405:                                             ; preds = %1394
  %1406 = add i64 %1391, 23
  %1407 = inttoptr i64 %1406 to i32*
  %1408 = load i32, i32* %1407, align 4
  %1409 = and i32 %1408, -2
  %1410 = icmp eq i32 %1409, 10
  br i1 %1410, label %1437, label %1411

1411:                                             ; preds = %1394, %1389, %1405
  %1412 = bitcast %"class.WTF::Vector"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1412) #8
  %1413 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 0
  %1414 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 2
  %1415 = bitcast %"class.WTF::Vector"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1415, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_10IDLBooleanEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %15, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1381, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %1416 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1417 = load i32, i32* %1416, align 8
  %1418 = icmp eq i32 %1417, 0
  br i1 %1418, label %1419, label %1428

1419:                                             ; preds = %1411
  call void @_ZN5blink22MediaTrackCapabilities19setNoiseSuppressionERKN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"* %2, %"class.WTF::Vector"* nonnull dereferenceable(16) %15) #8
  %1420 = load i8*, i8** %1413, align 8
  %1421 = icmp eq i8* %1420, null
  br i1 %1421, label %1427, label %1422, !prof !2

1422:                                             ; preds = %1419
  %1423 = load i32, i32* %1414, align 4
  %1424 = icmp eq i32 %1423, 0
  br i1 %1424, label %1426, label %1425, !prof !3

1425:                                             ; preds = %1422
  store i32 0, i32* %1414, align 4
  br label %1426

1426:                                             ; preds = %1425, %1422
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1420) #8
  store i8* null, i8** %1413, align 8
  br label %1427

1427:                                             ; preds = %1419, %1426
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1412) #8
  br label %1437

1428:                                             ; preds = %1411
  %1429 = load i8*, i8** %1413, align 8
  %1430 = icmp eq i8* %1429, null
  br i1 %1430, label %1436, label %1431, !prof !2

1431:                                             ; preds = %1428
  %1432 = load i32, i32* %1414, align 4
  %1433 = icmp eq i32 %1432, 0
  br i1 %1433, label %1435, label %1434, !prof !3

1434:                                             ; preds = %1431
  store i32 0, i32* %1414, align 4
  br label %1435

1435:                                             ; preds = %1434, %1431
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1429) #8
  store i8* null, i8** %1413, align 8
  br label %1436

1436:                                             ; preds = %1428, %1435
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1412) #8
  br label %2039

1437:                                             ; preds = %1427, %1405
  %1438 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 20, i32 0
  %1439 = bitcast %"class.v8::Name"** %1438 to %"class.v8::Value"**
  %1440 = load %"class.v8::Value"*, %"class.v8::Value"** %1439, align 8
  %1441 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1440) #8
  %1442 = icmp eq %"class.v8::Value"* %1441, null
  br i1 %1442, label %1443, label %1449

1443:                                             ; preds = %1437
  %1444 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1445 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1446 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1445, align 8
  %1447 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1446, i64 5
  %1448 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1447, align 8
  call void %1448(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1444) #8
  br label %2039

1449:                                             ; preds = %1437
  %1450 = bitcast %"class.v8::Value"* %1441 to i64*
  %1451 = load i64, i64* %1450, align 8
  %1452 = and i64 %1451, 3
  %1453 = icmp eq i64 %1452, 1
  br i1 %1453, label %1454, label %1471

1454:                                             ; preds = %1449
  %1455 = add i64 %1451, -1
  %1456 = inttoptr i64 %1455 to i32*
  %1457 = load i32, i32* %1456, align 4
  %1458 = and i64 %1451, -4294967296
  %1459 = zext i32 %1457 to i64
  %1460 = or i64 %1458, %1459
  %1461 = add i64 %1460, 7
  %1462 = inttoptr i64 %1461 to i16*
  %1463 = load i16, i16* %1462, align 2
  %1464 = icmp eq i16 %1463, 67
  br i1 %1464, label %1465, label %1471

1465:                                             ; preds = %1454
  %1466 = add i64 %1451, 23
  %1467 = inttoptr i64 %1466 to i32*
  %1468 = load i32, i32* %1467, align 4
  %1469 = and i32 %1468, -2
  %1470 = icmp eq i32 %1469, 10
  br i1 %1470, label %1477, label %1471

1471:                                             ; preds = %1454, %1449, %1465
  %1472 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1441, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1473 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1474 = load i32, i32* %1473, align 8
  %1475 = icmp eq i32 %1474, 0
  br i1 %1475, label %1476, label %2039

1476:                                             ; preds = %1471
  call void @_ZN5blink22MediaTrackCapabilities6setPanEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %1472) #8
  br label %1477

1477:                                             ; preds = %1476, %1465
  %1478 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 21, i32 0
  %1479 = bitcast %"class.v8::Name"** %1478 to %"class.v8::Value"**
  %1480 = load %"class.v8::Value"*, %"class.v8::Value"** %1479, align 8
  %1481 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1480) #8
  %1482 = icmp eq %"class.v8::Value"* %1481, null
  br i1 %1482, label %1483, label %1489

1483:                                             ; preds = %1477
  %1484 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1485 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1486 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1485, align 8
  %1487 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1486, i64 5
  %1488 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1487, align 8
  call void %1488(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1484) #8
  br label %2039

1489:                                             ; preds = %1477
  %1490 = bitcast %"class.v8::Value"* %1481 to i64*
  %1491 = load i64, i64* %1490, align 8
  %1492 = and i64 %1491, 3
  %1493 = icmp eq i64 %1492, 1
  br i1 %1493, label %1494, label %1511

1494:                                             ; preds = %1489
  %1495 = add i64 %1491, -1
  %1496 = inttoptr i64 %1495 to i32*
  %1497 = load i32, i32* %1496, align 4
  %1498 = and i64 %1491, -4294967296
  %1499 = zext i32 %1497 to i64
  %1500 = or i64 %1498, %1499
  %1501 = add i64 %1500, 7
  %1502 = inttoptr i64 %1501 to i16*
  %1503 = load i16, i16* %1502, align 2
  %1504 = icmp eq i16 %1503, 67
  br i1 %1504, label %1505, label %1511

1505:                                             ; preds = %1494
  %1506 = add i64 %1491, 23
  %1507 = inttoptr i64 %1506 to i32*
  %1508 = load i32, i32* %1507, align 4
  %1509 = and i32 %1508, -2
  %1510 = icmp eq i32 %1509, 10
  br i1 %1510, label %1593, label %1511

1511:                                             ; preds = %1494, %1489, %1505
  %1512 = bitcast %"class.WTF::Vector.5"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1512) #8
  %1513 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %16, i64 0, i32 0, i32 0, i32 0
  %1514 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %16, i64 0, i32 0, i32 0, i32 2
  %1515 = bitcast %"class.WTF::Vector.5"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1515, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.5"* nonnull sret %16, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1481, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %1516 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1517 = load i32, i32* %1516, align 8
  %1518 = icmp eq i32 %1517, 0
  br i1 %1518, label %1519, label %1556

1519:                                             ; preds = %1511
  call void @_ZN5blink22MediaTrackCapabilities13setResizeModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"* %2, %"class.WTF::Vector.5"* nonnull dereferenceable(16) %16) #8
  %1520 = load %"class.WTF::String"*, %"class.WTF::String"** %1513, align 8
  %1521 = icmp eq %"class.WTF::String"* %1520, null
  br i1 %1521, label %1555, label %1522, !prof !2

1522:                                             ; preds = %1519
  %1523 = bitcast %"class.WTF::String"* %1520 to i8*
  %1524 = load i32, i32* %1514, align 4
  %1525 = icmp eq i32 %1524, 0
  br i1 %1525, label %1553, label %1526, !prof !3

1526:                                             ; preds = %1522
  %1527 = zext i32 %1524 to i64
  %1528 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1520, i64 %1527
  br label %1529

1529:                                             ; preds = %1547, %1526
  %1530 = phi %"class.WTF::String"* [ %1548, %1547 ], [ %1520, %1526 ]
  %1531 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1530, i64 0, i32 0, i32 0
  %1532 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1531, align 8
  %1533 = icmp eq %"class.WTF::StringImpl"* %1532, null
  br i1 %1533, label %1547, label %1534

1534:                                             ; preds = %1529
  %1535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1532, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1536 = load atomic i32, i32* %1535 monotonic, align 4
  %1537 = and i32 %1536, 2
  %1538 = icmp eq i32 %1537, 0
  %1539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1532, i64 0, i32 0
  %1540 = load i32, i32* %1539, align 4
  br i1 %1538, label %1541, label %1543

1541:                                             ; preds = %1534
  %1542 = add i32 %1540, -1
  store i32 %1542, i32* %1539, align 4
  br label %1543

1543:                                             ; preds = %1541, %1534
  %1544 = phi i32 [ %1542, %1541 ], [ %1540, %1534 ]
  %1545 = icmp eq i32 %1544, 0
  br i1 %1545, label %1546, label %1547

1546:                                             ; preds = %1543
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1532) #8
  br label %1547

1547:                                             ; preds = %1546, %1543, %1529
  %1548 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1530, i64 1
  %1549 = icmp eq %"class.WTF::String"* %1548, %1528
  br i1 %1549, label %1550, label %1529

1550:                                             ; preds = %1547
  store i32 0, i32* %1514, align 4
  %1551 = bitcast %"class.WTF::Vector.5"* %16 to i8**
  %1552 = load i8*, i8** %1551, align 8
  br label %1553

1553:                                             ; preds = %1550, %1522
  %1554 = phi i8* [ %1552, %1550 ], [ %1523, %1522 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1554) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %1513, align 8
  br label %1555

1555:                                             ; preds = %1519, %1553
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1512) #8
  br label %1593

1556:                                             ; preds = %1511
  %1557 = load %"class.WTF::String"*, %"class.WTF::String"** %1513, align 8
  %1558 = icmp eq %"class.WTF::String"* %1557, null
  br i1 %1558, label %1592, label %1559, !prof !2

1559:                                             ; preds = %1556
  %1560 = bitcast %"class.WTF::String"* %1557 to i8*
  %1561 = load i32, i32* %1514, align 4
  %1562 = icmp eq i32 %1561, 0
  br i1 %1562, label %1590, label %1563, !prof !3

1563:                                             ; preds = %1559
  %1564 = zext i32 %1561 to i64
  %1565 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1557, i64 %1564
  br label %1566

1566:                                             ; preds = %1584, %1563
  %1567 = phi %"class.WTF::String"* [ %1585, %1584 ], [ %1557, %1563 ]
  %1568 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1567, i64 0, i32 0, i32 0
  %1569 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1568, align 8
  %1570 = icmp eq %"class.WTF::StringImpl"* %1569, null
  br i1 %1570, label %1584, label %1571

1571:                                             ; preds = %1566
  %1572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1569, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1573 = load atomic i32, i32* %1572 monotonic, align 4
  %1574 = and i32 %1573, 2
  %1575 = icmp eq i32 %1574, 0
  %1576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1569, i64 0, i32 0
  %1577 = load i32, i32* %1576, align 4
  br i1 %1575, label %1578, label %1580

1578:                                             ; preds = %1571
  %1579 = add i32 %1577, -1
  store i32 %1579, i32* %1576, align 4
  br label %1580

1580:                                             ; preds = %1578, %1571
  %1581 = phi i32 [ %1579, %1578 ], [ %1577, %1571 ]
  %1582 = icmp eq i32 %1581, 0
  br i1 %1582, label %1583, label %1584

1583:                                             ; preds = %1580
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1569) #8
  br label %1584

1584:                                             ; preds = %1583, %1580, %1566
  %1585 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1567, i64 1
  %1586 = icmp eq %"class.WTF::String"* %1585, %1565
  br i1 %1586, label %1587, label %1566

1587:                                             ; preds = %1584
  store i32 0, i32* %1514, align 4
  %1588 = bitcast %"class.WTF::Vector.5"* %16 to i8**
  %1589 = load i8*, i8** %1588, align 8
  br label %1590

1590:                                             ; preds = %1587, %1559
  %1591 = phi i8* [ %1589, %1587 ], [ %1560, %1559 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1591) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %1513, align 8
  br label %1592

1592:                                             ; preds = %1556, %1590
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1512) #8
  br label %2039

1593:                                             ; preds = %1555, %1505
  %1594 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 22, i32 0
  %1595 = bitcast %"class.v8::Name"** %1594 to %"class.v8::Value"**
  %1596 = load %"class.v8::Value"*, %"class.v8::Value"** %1595, align 8
  %1597 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1596) #8
  %1598 = icmp eq %"class.v8::Value"* %1597, null
  br i1 %1598, label %1599, label %1605

1599:                                             ; preds = %1593
  %1600 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1601 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1602 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1601, align 8
  %1603 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1602, i64 5
  %1604 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1603, align 8
  call void %1604(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1600) #8
  br label %2039

1605:                                             ; preds = %1593
  %1606 = bitcast %"class.v8::Value"* %1597 to i64*
  %1607 = load i64, i64* %1606, align 8
  %1608 = and i64 %1607, 3
  %1609 = icmp eq i64 %1608, 1
  br i1 %1609, label %1610, label %1627

1610:                                             ; preds = %1605
  %1611 = add i64 %1607, -1
  %1612 = inttoptr i64 %1611 to i32*
  %1613 = load i32, i32* %1612, align 4
  %1614 = and i64 %1607, -4294967296
  %1615 = zext i32 %1613 to i64
  %1616 = or i64 %1614, %1615
  %1617 = add i64 %1616, 7
  %1618 = inttoptr i64 %1617 to i16*
  %1619 = load i16, i16* %1618, align 2
  %1620 = icmp eq i16 %1619, 67
  br i1 %1620, label %1621, label %1627

1621:                                             ; preds = %1610
  %1622 = add i64 %1607, 23
  %1623 = inttoptr i64 %1622 to i32*
  %1624 = load i32, i32* %1623, align 4
  %1625 = and i32 %1624, -2
  %1626 = icmp eq i32 %1625, 10
  br i1 %1626, label %1633, label %1627

1627:                                             ; preds = %1610, %1605, %1621
  %1628 = call %"class.blink::LongRange"* @_ZN5blink17NativeValueTraitsINS_9LongRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1597, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1629 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1630 = load i32, i32* %1629, align 8
  %1631 = icmp eq i32 %1630, 0
  br i1 %1631, label %1632, label %2039

1632:                                             ; preds = %1627
  call void @_ZN5blink22MediaTrackCapabilities13setSampleRateEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::LongRange"* %1628) #8
  br label %1633

1633:                                             ; preds = %1632, %1621
  %1634 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 23, i32 0
  %1635 = bitcast %"class.v8::Name"** %1634 to %"class.v8::Value"**
  %1636 = load %"class.v8::Value"*, %"class.v8::Value"** %1635, align 8
  %1637 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1636) #8
  %1638 = icmp eq %"class.v8::Value"* %1637, null
  br i1 %1638, label %1639, label %1645

1639:                                             ; preds = %1633
  %1640 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1641 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1642 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1641, align 8
  %1643 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1642, i64 5
  %1644 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1643, align 8
  call void %1644(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1640) #8
  br label %2039

1645:                                             ; preds = %1633
  %1646 = bitcast %"class.v8::Value"* %1637 to i64*
  %1647 = load i64, i64* %1646, align 8
  %1648 = and i64 %1647, 3
  %1649 = icmp eq i64 %1648, 1
  br i1 %1649, label %1650, label %1667

1650:                                             ; preds = %1645
  %1651 = add i64 %1647, -1
  %1652 = inttoptr i64 %1651 to i32*
  %1653 = load i32, i32* %1652, align 4
  %1654 = and i64 %1647, -4294967296
  %1655 = zext i32 %1653 to i64
  %1656 = or i64 %1654, %1655
  %1657 = add i64 %1656, 7
  %1658 = inttoptr i64 %1657 to i16*
  %1659 = load i16, i16* %1658, align 2
  %1660 = icmp eq i16 %1659, 67
  br i1 %1660, label %1661, label %1667

1661:                                             ; preds = %1650
  %1662 = add i64 %1647, 23
  %1663 = inttoptr i64 %1662 to i32*
  %1664 = load i32, i32* %1663, align 4
  %1665 = and i32 %1664, -2
  %1666 = icmp eq i32 %1665, 10
  br i1 %1666, label %1673, label %1667

1667:                                             ; preds = %1650, %1645, %1661
  %1668 = call %"class.blink::LongRange"* @_ZN5blink17NativeValueTraitsINS_9LongRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1637, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1669 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1670 = load i32, i32* %1669, align 8
  %1671 = icmp eq i32 %1670, 0
  br i1 %1671, label %1672, label %2039

1672:                                             ; preds = %1667
  call void @_ZN5blink22MediaTrackCapabilities13setSampleSizeEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::LongRange"* %1668) #8
  br label %1673

1673:                                             ; preds = %1672, %1661
  %1674 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 24, i32 0
  %1675 = bitcast %"class.v8::Name"** %1674 to %"class.v8::Value"**
  %1676 = load %"class.v8::Value"*, %"class.v8::Value"** %1675, align 8
  %1677 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1676) #8
  %1678 = icmp eq %"class.v8::Value"* %1677, null
  br i1 %1678, label %1679, label %1685

1679:                                             ; preds = %1673
  %1680 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1681 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1682 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1681, align 8
  %1683 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1682, i64 5
  %1684 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1683, align 8
  call void %1684(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1680) #8
  br label %2039

1685:                                             ; preds = %1673
  %1686 = bitcast %"class.v8::Value"* %1677 to i64*
  %1687 = load i64, i64* %1686, align 8
  %1688 = and i64 %1687, 3
  %1689 = icmp eq i64 %1688, 1
  br i1 %1689, label %1690, label %1707

1690:                                             ; preds = %1685
  %1691 = add i64 %1687, -1
  %1692 = inttoptr i64 %1691 to i32*
  %1693 = load i32, i32* %1692, align 4
  %1694 = and i64 %1687, -4294967296
  %1695 = zext i32 %1693 to i64
  %1696 = or i64 %1694, %1695
  %1697 = add i64 %1696, 7
  %1698 = inttoptr i64 %1697 to i16*
  %1699 = load i16, i16* %1698, align 2
  %1700 = icmp eq i16 %1699, 67
  br i1 %1700, label %1701, label %1707

1701:                                             ; preds = %1690
  %1702 = add i64 %1687, 23
  %1703 = inttoptr i64 %1702 to i32*
  %1704 = load i32, i32* %1703, align 4
  %1705 = and i32 %1704, -2
  %1706 = icmp eq i32 %1705, 10
  br i1 %1706, label %1713, label %1707

1707:                                             ; preds = %1690, %1685, %1701
  %1708 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1677, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1709 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1710 = load i32, i32* %1709, align 8
  %1711 = icmp eq i32 %1710, 0
  br i1 %1711, label %1712, label %2039

1712:                                             ; preds = %1707
  call void @_ZN5blink22MediaTrackCapabilities13setSaturationEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %1708) #8
  br label %1713

1713:                                             ; preds = %1712, %1701
  %1714 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 25, i32 0
  %1715 = bitcast %"class.v8::Name"** %1714 to %"class.v8::Value"**
  %1716 = load %"class.v8::Value"*, %"class.v8::Value"** %1715, align 8
  %1717 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1716) #8
  %1718 = icmp eq %"class.v8::Value"* %1717, null
  br i1 %1718, label %1719, label %1725

1719:                                             ; preds = %1713
  %1720 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1721 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1722 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1721, align 8
  %1723 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1722, i64 5
  %1724 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1723, align 8
  call void %1724(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1720) #8
  br label %2039

1725:                                             ; preds = %1713
  %1726 = bitcast %"class.v8::Value"* %1717 to i64*
  %1727 = load i64, i64* %1726, align 8
  %1728 = and i64 %1727, 3
  %1729 = icmp eq i64 %1728, 1
  br i1 %1729, label %1730, label %1747

1730:                                             ; preds = %1725
  %1731 = add i64 %1727, -1
  %1732 = inttoptr i64 %1731 to i32*
  %1733 = load i32, i32* %1732, align 4
  %1734 = and i64 %1727, -4294967296
  %1735 = zext i32 %1733 to i64
  %1736 = or i64 %1734, %1735
  %1737 = add i64 %1736, 7
  %1738 = inttoptr i64 %1737 to i16*
  %1739 = load i16, i16* %1738, align 2
  %1740 = icmp eq i16 %1739, 67
  br i1 %1740, label %1741, label %1747

1741:                                             ; preds = %1730
  %1742 = add i64 %1727, 23
  %1743 = inttoptr i64 %1742 to i32*
  %1744 = load i32, i32* %1743, align 4
  %1745 = and i32 %1744, -2
  %1746 = icmp eq i32 %1745, 10
  br i1 %1746, label %1753, label %1747

1747:                                             ; preds = %1730, %1725, %1741
  %1748 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1717, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1749 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1750 = load i32, i32* %1749, align 8
  %1751 = icmp eq i32 %1750, 0
  br i1 %1751, label %1752, label %2039

1752:                                             ; preds = %1747
  call void @_ZN5blink22MediaTrackCapabilities12setSharpnessEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %1748) #8
  br label %1753

1753:                                             ; preds = %1752, %1741
  %1754 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 26, i32 0
  %1755 = bitcast %"class.v8::Name"** %1754 to %"class.v8::Value"**
  %1756 = load %"class.v8::Value"*, %"class.v8::Value"** %1755, align 8
  %1757 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1756) #8
  %1758 = icmp eq %"class.v8::Value"* %1757, null
  br i1 %1758, label %1759, label %1765

1759:                                             ; preds = %1753
  %1760 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1761 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1762 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1761, align 8
  %1763 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1762, i64 5
  %1764 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1763, align 8
  call void %1764(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1760) #8
  br label %2039

1765:                                             ; preds = %1753
  %1766 = bitcast %"class.v8::Value"* %1757 to i64*
  %1767 = load i64, i64* %1766, align 8
  %1768 = and i64 %1767, 3
  %1769 = icmp eq i64 %1768, 1
  br i1 %1769, label %1770, label %1787

1770:                                             ; preds = %1765
  %1771 = add i64 %1767, -1
  %1772 = inttoptr i64 %1771 to i32*
  %1773 = load i32, i32* %1772, align 4
  %1774 = and i64 %1767, -4294967296
  %1775 = zext i32 %1773 to i64
  %1776 = or i64 %1774, %1775
  %1777 = add i64 %1776, 7
  %1778 = inttoptr i64 %1777 to i16*
  %1779 = load i16, i16* %1778, align 2
  %1780 = icmp eq i16 %1779, 67
  br i1 %1780, label %1781, label %1787

1781:                                             ; preds = %1770
  %1782 = add i64 %1767, 23
  %1783 = inttoptr i64 %1782 to i32*
  %1784 = load i32, i32* %1783, align 4
  %1785 = and i32 %1784, -2
  %1786 = icmp eq i32 %1785, 10
  br i1 %1786, label %1793, label %1787

1787:                                             ; preds = %1770, %1765, %1781
  %1788 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1757, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1789 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1790 = load i32, i32* %1789, align 8
  %1791 = icmp eq i32 %1790, 0
  br i1 %1791, label %1792, label %2039

1792:                                             ; preds = %1787
  call void @_ZN5blink22MediaTrackCapabilities7setTiltEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %1788) #8
  br label %1793

1793:                                             ; preds = %1792, %1781
  %1794 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 27, i32 0
  %1795 = bitcast %"class.v8::Name"** %1794 to %"class.v8::Value"**
  %1796 = load %"class.v8::Value"*, %"class.v8::Value"** %1795, align 8
  %1797 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1796) #8
  %1798 = icmp eq %"class.v8::Value"* %1797, null
  br i1 %1798, label %1799, label %1805

1799:                                             ; preds = %1793
  %1800 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1801 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1802 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1801, align 8
  %1803 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1802, i64 5
  %1804 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1803, align 8
  call void %1804(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1800) #8
  br label %2039

1805:                                             ; preds = %1793
  %1806 = bitcast %"class.v8::Value"* %1797 to i64*
  %1807 = load i64, i64* %1806, align 8
  %1808 = and i64 %1807, 3
  %1809 = icmp eq i64 %1808, 1
  br i1 %1809, label %1810, label %1827

1810:                                             ; preds = %1805
  %1811 = add i64 %1807, -1
  %1812 = inttoptr i64 %1811 to i32*
  %1813 = load i32, i32* %1812, align 4
  %1814 = and i64 %1807, -4294967296
  %1815 = zext i32 %1813 to i64
  %1816 = or i64 %1814, %1815
  %1817 = add i64 %1816, 7
  %1818 = inttoptr i64 %1817 to i16*
  %1819 = load i16, i16* %1818, align 2
  %1820 = icmp eq i16 %1819, 67
  br i1 %1820, label %1821, label %1827

1821:                                             ; preds = %1810
  %1822 = add i64 %1807, 23
  %1823 = inttoptr i64 %1822 to i32*
  %1824 = load i32, i32* %1823, align 4
  %1825 = and i32 %1824, -2
  %1826 = icmp eq i32 %1825, 10
  br i1 %1826, label %1843, label %1827

1827:                                             ; preds = %1810, %1805, %1821
  %1828 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1797) #8
  br i1 %1828, label %1829, label %1832, !prof !2

1829:                                             ; preds = %1827
  %1830 = bitcast %"class.v8::Value"* %1797 to %"class.v8::Boolean"*
  %1831 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1830) #8
  br label %1834

1832:                                             ; preds = %1827
  %1833 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1797, %"class.v8::Isolate"* %0) #8
  br label %1834

1834:                                             ; preds = %1829, %1832
  %1835 = phi i1 [ %1831, %1829 ], [ %1833, %1832 ]
  %1836 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1837 = load i32, i32* %1836, align 8
  %1838 = icmp eq i32 %1837, 0
  br i1 %1838, label %1839, label %2039

1839:                                             ; preds = %1834
  %1840 = zext i1 %1835 to i8
  %1841 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %2, i64 0, i32 37
  store i8 %1840, i8* %1841, align 8
  %1842 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %2, i64 0, i32 8
  store i8 1, i8* %1842, align 1
  br label %1843

1843:                                             ; preds = %1839, %1821
  %1844 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 28, i32 0
  %1845 = bitcast %"class.v8::Name"** %1844 to %"class.v8::Value"**
  %1846 = load %"class.v8::Value"*, %"class.v8::Value"** %1845, align 8
  %1847 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1846) #8
  %1848 = icmp eq %"class.v8::Value"* %1847, null
  br i1 %1848, label %1849, label %1855

1849:                                             ; preds = %1843
  %1850 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1851 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1852 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1851, align 8
  %1853 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1852, i64 5
  %1854 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1853, align 8
  call void %1854(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1850) #8
  br label %2039

1855:                                             ; preds = %1843
  %1856 = bitcast %"class.v8::Value"* %1847 to i64*
  %1857 = load i64, i64* %1856, align 8
  %1858 = and i64 %1857, 3
  %1859 = icmp eq i64 %1858, 1
  br i1 %1859, label %1860, label %1877

1860:                                             ; preds = %1855
  %1861 = add i64 %1857, -1
  %1862 = inttoptr i64 %1861 to i32*
  %1863 = load i32, i32* %1862, align 4
  %1864 = and i64 %1857, -4294967296
  %1865 = zext i32 %1863 to i64
  %1866 = or i64 %1864, %1865
  %1867 = add i64 %1866, 7
  %1868 = inttoptr i64 %1867 to i16*
  %1869 = load i16, i16* %1868, align 2
  %1870 = icmp eq i16 %1869, 67
  br i1 %1870, label %1871, label %1877

1871:                                             ; preds = %1860
  %1872 = add i64 %1857, 23
  %1873 = inttoptr i64 %1872 to i32*
  %1874 = load i32, i32* %1873, align 4
  %1875 = and i32 %1874, -2
  %1876 = icmp eq i32 %1875, 10
  br i1 %1876, label %1959, label %1877

1877:                                             ; preds = %1860, %1855, %1871
  %1878 = bitcast %"class.WTF::Vector.5"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1878) #8
  %1879 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %17, i64 0, i32 0, i32 0, i32 0
  %1880 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %17, i64 0, i32 0, i32 0, i32 2
  %1881 = bitcast %"class.WTF::Vector.5"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1881, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.5"* nonnull sret %17, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1847, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %1882 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1883 = load i32, i32* %1882, align 8
  %1884 = icmp eq i32 %1883, 0
  br i1 %1884, label %1885, label %1922

1885:                                             ; preds = %1877
  call void @_ZN5blink22MediaTrackCapabilities19setWhiteBalanceModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"* %2, %"class.WTF::Vector.5"* nonnull dereferenceable(16) %17) #8
  %1886 = load %"class.WTF::String"*, %"class.WTF::String"** %1879, align 8
  %1887 = icmp eq %"class.WTF::String"* %1886, null
  br i1 %1887, label %1921, label %1888, !prof !2

1888:                                             ; preds = %1885
  %1889 = bitcast %"class.WTF::String"* %1886 to i8*
  %1890 = load i32, i32* %1880, align 4
  %1891 = icmp eq i32 %1890, 0
  br i1 %1891, label %1919, label %1892, !prof !3

1892:                                             ; preds = %1888
  %1893 = zext i32 %1890 to i64
  %1894 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1886, i64 %1893
  br label %1895

1895:                                             ; preds = %1913, %1892
  %1896 = phi %"class.WTF::String"* [ %1914, %1913 ], [ %1886, %1892 ]
  %1897 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1896, i64 0, i32 0, i32 0
  %1898 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1897, align 8
  %1899 = icmp eq %"class.WTF::StringImpl"* %1898, null
  br i1 %1899, label %1913, label %1900

1900:                                             ; preds = %1895
  %1901 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1898, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1902 = load atomic i32, i32* %1901 monotonic, align 4
  %1903 = and i32 %1902, 2
  %1904 = icmp eq i32 %1903, 0
  %1905 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1898, i64 0, i32 0
  %1906 = load i32, i32* %1905, align 4
  br i1 %1904, label %1907, label %1909

1907:                                             ; preds = %1900
  %1908 = add i32 %1906, -1
  store i32 %1908, i32* %1905, align 4
  br label %1909

1909:                                             ; preds = %1907, %1900
  %1910 = phi i32 [ %1908, %1907 ], [ %1906, %1900 ]
  %1911 = icmp eq i32 %1910, 0
  br i1 %1911, label %1912, label %1913

1912:                                             ; preds = %1909
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1898) #8
  br label %1913

1913:                                             ; preds = %1912, %1909, %1895
  %1914 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1896, i64 1
  %1915 = icmp eq %"class.WTF::String"* %1914, %1894
  br i1 %1915, label %1916, label %1895

1916:                                             ; preds = %1913
  store i32 0, i32* %1880, align 4
  %1917 = bitcast %"class.WTF::Vector.5"* %17 to i8**
  %1918 = load i8*, i8** %1917, align 8
  br label %1919

1919:                                             ; preds = %1916, %1888
  %1920 = phi i8* [ %1918, %1916 ], [ %1889, %1888 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1920) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %1879, align 8
  br label %1921

1921:                                             ; preds = %1885, %1919
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1878) #8
  br label %1959

1922:                                             ; preds = %1877
  %1923 = load %"class.WTF::String"*, %"class.WTF::String"** %1879, align 8
  %1924 = icmp eq %"class.WTF::String"* %1923, null
  br i1 %1924, label %1958, label %1925, !prof !2

1925:                                             ; preds = %1922
  %1926 = bitcast %"class.WTF::String"* %1923 to i8*
  %1927 = load i32, i32* %1880, align 4
  %1928 = icmp eq i32 %1927, 0
  br i1 %1928, label %1956, label %1929, !prof !3

1929:                                             ; preds = %1925
  %1930 = zext i32 %1927 to i64
  %1931 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1923, i64 %1930
  br label %1932

1932:                                             ; preds = %1950, %1929
  %1933 = phi %"class.WTF::String"* [ %1951, %1950 ], [ %1923, %1929 ]
  %1934 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1933, i64 0, i32 0, i32 0
  %1935 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1934, align 8
  %1936 = icmp eq %"class.WTF::StringImpl"* %1935, null
  br i1 %1936, label %1950, label %1937

1937:                                             ; preds = %1932
  %1938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1935, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1939 = load atomic i32, i32* %1938 monotonic, align 4
  %1940 = and i32 %1939, 2
  %1941 = icmp eq i32 %1940, 0
  %1942 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1935, i64 0, i32 0
  %1943 = load i32, i32* %1942, align 4
  br i1 %1941, label %1944, label %1946

1944:                                             ; preds = %1937
  %1945 = add i32 %1943, -1
  store i32 %1945, i32* %1942, align 4
  br label %1946

1946:                                             ; preds = %1944, %1937
  %1947 = phi i32 [ %1945, %1944 ], [ %1943, %1937 ]
  %1948 = icmp eq i32 %1947, 0
  br i1 %1948, label %1949, label %1950

1949:                                             ; preds = %1946
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1935) #8
  br label %1950

1950:                                             ; preds = %1949, %1946, %1932
  %1951 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1933, i64 1
  %1952 = icmp eq %"class.WTF::String"* %1951, %1931
  br i1 %1952, label %1953, label %1932

1953:                                             ; preds = %1950
  store i32 0, i32* %1880, align 4
  %1954 = bitcast %"class.WTF::Vector.5"* %17 to i8**
  %1955 = load i8*, i8** %1954, align 8
  br label %1956

1956:                                             ; preds = %1953, %1925
  %1957 = phi i8* [ %1955, %1953 ], [ %1926, %1925 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1957) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %1879, align 8
  br label %1958

1958:                                             ; preds = %1922, %1956
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1878) #8
  br label %2039

1959:                                             ; preds = %1921, %1871
  %1960 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 29, i32 0
  %1961 = bitcast %"class.v8::Name"** %1960 to %"class.v8::Value"**
  %1962 = load %"class.v8::Value"*, %"class.v8::Value"** %1961, align 8
  %1963 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1962) #8
  %1964 = icmp eq %"class.v8::Value"* %1963, null
  br i1 %1964, label %1965, label %1971

1965:                                             ; preds = %1959
  %1966 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %1967 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1968 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1967, align 8
  %1969 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1968, i64 5
  %1970 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1969, align 8
  call void %1970(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1966) #8
  br label %2039

1971:                                             ; preds = %1959
  %1972 = bitcast %"class.v8::Value"* %1963 to i64*
  %1973 = load i64, i64* %1972, align 8
  %1974 = and i64 %1973, 3
  %1975 = icmp eq i64 %1974, 1
  br i1 %1975, label %1976, label %1993

1976:                                             ; preds = %1971
  %1977 = add i64 %1973, -1
  %1978 = inttoptr i64 %1977 to i32*
  %1979 = load i32, i32* %1978, align 4
  %1980 = and i64 %1973, -4294967296
  %1981 = zext i32 %1979 to i64
  %1982 = or i64 %1980, %1981
  %1983 = add i64 %1982, 7
  %1984 = inttoptr i64 %1983 to i16*
  %1985 = load i16, i16* %1984, align 2
  %1986 = icmp eq i16 %1985, 67
  br i1 %1986, label %1987, label %1993

1987:                                             ; preds = %1976
  %1988 = add i64 %1973, 23
  %1989 = inttoptr i64 %1988 to i32*
  %1990 = load i32, i32* %1989, align 4
  %1991 = and i32 %1990, -2
  %1992 = icmp eq i32 %1991, 10
  br i1 %1992, label %1999, label %1993

1993:                                             ; preds = %1976, %1971, %1987
  %1994 = call %"class.blink::LongRange"* @_ZN5blink17NativeValueTraitsINS_9LongRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1963, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1995 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1996 = load i32, i32* %1995, align 8
  %1997 = icmp eq i32 %1996, 0
  br i1 %1997, label %1998, label %2039

1998:                                             ; preds = %1993
  call void @_ZN5blink22MediaTrackCapabilities8setWidthEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::LongRange"* %1994) #8
  br label %1999

1999:                                             ; preds = %1998, %1987
  %2000 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 30, i32 0
  %2001 = bitcast %"class.v8::Name"** %2000 to %"class.v8::Value"**
  %2002 = load %"class.v8::Value"*, %"class.v8::Value"** %2001, align 8
  %2003 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %2002) #8
  %2004 = icmp eq %"class.v8::Value"* %2003, null
  br i1 %2004, label %2005, label %2011

2005:                                             ; preds = %1999
  %2006 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #8
  %2007 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2008 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2007, align 8
  %2009 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2008, i64 5
  %2010 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2009, align 8
  call void %2010(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2006) #8
  br label %2039

2011:                                             ; preds = %1999
  %2012 = bitcast %"class.v8::Value"* %2003 to i64*
  %2013 = load i64, i64* %2012, align 8
  %2014 = and i64 %2013, 3
  %2015 = icmp eq i64 %2014, 1
  br i1 %2015, label %2016, label %2033

2016:                                             ; preds = %2011
  %2017 = add i64 %2013, -1
  %2018 = inttoptr i64 %2017 to i32*
  %2019 = load i32, i32* %2018, align 4
  %2020 = and i64 %2013, -4294967296
  %2021 = zext i32 %2019 to i64
  %2022 = or i64 %2020, %2021
  %2023 = add i64 %2022, 7
  %2024 = inttoptr i64 %2023 to i16*
  %2025 = load i16, i16* %2024, align 2
  %2026 = icmp eq i16 %2025, 67
  br i1 %2026, label %2027, label %2033

2027:                                             ; preds = %2016
  %2028 = add i64 %2013, 23
  %2029 = inttoptr i64 %2028 to i32*
  %2030 = load i32, i32* %2029, align 4
  %2031 = and i32 %2030, -2
  %2032 = icmp eq i32 %2031, 10
  br i1 %2032, label %2039, label %2033

2033:                                             ; preds = %2016, %2011, %2027
  %2034 = call %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %2003, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %2035 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2036 = load i32, i32* %2035, align 8
  %2037 = icmp eq i32 %2036, 0
  br i1 %2037, label %2038, label %2039

2038:                                             ; preds = %2033
  call void @_ZN5blink22MediaTrackCapabilities7setZoomEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"* %2, %"class.blink::MediaSettingsRange"* %2034) #8
  br label %2039

2039:                                             ; preds = %2033, %1993, %1834, %1787, %1747, %1707, %1667, %1627, %1471, %1371, %1331, %1291, %1062, %906, %750, %594, %305, %265, %225, %185, %85, %97, %150, %197, %277, %506, %559, %606, %715, %762, %871, %918, %1027, %1074, %1256, %1303, %1383, %1436, %1483, %1592, %1639, %1719, %1799, %1965, %2027, %2038, %2005, %1958, %1849, %1759, %1679, %1599, %1443, %1343, %1263, %1034, %878, %722, %566, %499, %317, %237, %157, %57
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %51) #8
  br label %2040

2040:                                             ; preds = %35, %35, %4, %2039, %42
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare %"class.blink::DoubleRange"* @_ZN5blink17NativeValueTraitsINS_11DoubleRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities14setAspectRatioEPNS_11DoubleRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::DoubleRange"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_10IDLBooleanEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_10IDLBooleanEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.35, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.36, i64 0, i64 0)) #8
  %26 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #8
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_10IDLBooleanEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink22MediaTrackCapabilities18setAutoGainControlERKN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::MediaSettingsRange"* @_ZN5blink17NativeValueTraitsINS_18MediaSettingsRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities13setBrightnessEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare %"class.blink::LongRange"* @_ZN5blink17NativeValueTraitsINS_9LongRangeEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities15setChannelCountEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::LongRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities19setColorTemperatureEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities11setContrastEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities19setEchoCancellationERKN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities23setExposureCompensationEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.5"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.5"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.35, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.36, i64 0, i64 0)) #8
  %26 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #8
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.5"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink22MediaTrackCapabilities15setExposureModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"*, %"class.WTF::Vector.5"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities15setExposureTimeEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities13setFacingModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"*, %"class.WTF::Vector.5"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities16setFocusDistanceEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities12setFocusModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"*, %"class.WTF::Vector.5"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities12setFrameRateEPNS_11DoubleRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::DoubleRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities9setHeightEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::LongRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities6setIsoEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities10setLatencyEPNS_11DoubleRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::DoubleRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities19setNoiseSuppressionERKN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities6setPanEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities13setResizeModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"*, %"class.WTF::Vector.5"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities13setSampleRateEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::LongRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities13setSampleSizeEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::LongRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities13setSaturationEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities12setSharpnessEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities7setTiltEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities19setWhiteBalanceModeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaTrackCapabilities"*, %"class.WTF::Vector.5"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities8setWidthEPNS_9LongRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::LongRange"*) local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilities7setZoomEPNS_18MediaSettingsRangeE(%"class.blink::MediaTrackCapabilities"*, %"class.blink::MediaSettingsRange"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink22MediaTrackCapabilities8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::MediaTrackCapabilities"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #8
  %5 = tail call zeroext i1 @_ZN5blink26toV8MediaTrackCapabilitiesEPKNS_22MediaTrackCapabilitiesEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::MediaTrackCapabilities"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26toV8MediaTrackCapabilitiesEPKNS_22MediaTrackCapabilitiesEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::MediaTrackCapabilities"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %8 = add i64 %7, 8
  %9 = inttoptr i64 %8 to %"class.blink::V8PerIsolateData"**
  %10 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %9, align 8
  %11 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %10, i8* bitcast ([31 x i8*]* @_ZZN5blinkL35eternalV8MediaTrackCapabilitiesKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.330"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.330"*)) #8
  %12 = extractvalue { i64, %"class.v8::Eternal"* } %11, 1
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #8
  %14 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 10, i32 0, i32 0
  %15 = load %"class.blink::DoubleRange"*, %"class.blink::DoubleRange"** %14, align 8
  %16 = icmp eq %"class.blink::DoubleRange"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::DoubleRange", %"class.blink::DoubleRange"* %15, i64 0, i32 0
  %19 = bitcast %"class.blink::DoubleRange"* %15 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %20 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %20, i64 2
  %22 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %21, align 8
  %23 = tail call %"class.v8::Value"* %22(%"class.blink::IDLDictionaryBase"* nonnull %18, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %24 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 0, i32 0
  %25 = load %"class.v8::Name"*, %"class.v8::Name"** %24, align 8
  %26 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %25, %"class.v8::Value"* %23) #8
  %27 = trunc i16 %26 to i8
  %28 = icmp ne i8 %27, 0
  %29 = icmp ugt i16 %26, 255
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %556

31:                                               ; preds = %4, %17
  %32 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 1
  %33 = load i8, i8* %32, align 8, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 11
  %37 = tail call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE(%"class.WTF::Vector"* dereferenceable(16) %36, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %38 = bitcast %"class.v8::Array"* %37 to %"class.v8::Value"*
  %39 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 1, i32 0
  %40 = load %"class.v8::Name"*, %"class.v8::Name"** %39, align 8
  %41 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %40, %"class.v8::Value"* %38) #8
  %42 = trunc i16 %41 to i8
  %43 = icmp ne i8 %42, 0
  %44 = icmp ugt i16 %41, 255
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %556

46:                                               ; preds = %31, %35
  %47 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 12, i32 0, i32 0
  %48 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %47, align 8
  %49 = icmp eq %"class.blink::MediaSettingsRange"* %48, null
  br i1 %49, label %64, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %48, i64 0, i32 0
  %52 = bitcast %"class.blink::MediaSettingsRange"* %48 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %53 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %53, i64 2
  %55 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %54, align 8
  %56 = tail call %"class.v8::Value"* %55(%"class.blink::IDLDictionaryBase"* nonnull %51, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %57 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 2, i32 0
  %58 = load %"class.v8::Name"*, %"class.v8::Name"** %57, align 8
  %59 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %58, %"class.v8::Value"* %56) #8
  %60 = trunc i16 %59 to i8
  %61 = icmp ne i8 %60, 0
  %62 = icmp ugt i16 %59, 255
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %556

64:                                               ; preds = %46, %50
  %65 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 13, i32 0, i32 0
  %66 = load %"class.blink::LongRange"*, %"class.blink::LongRange"** %65, align 8
  %67 = icmp eq %"class.blink::LongRange"* %66, null
  br i1 %67, label %82, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::LongRange", %"class.blink::LongRange"* %66, i64 0, i32 0
  %70 = bitcast %"class.blink::LongRange"* %66 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %71 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %70, align 8
  %72 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %71, i64 2
  %73 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %72, align 8
  %74 = tail call %"class.v8::Value"* %73(%"class.blink::IDLDictionaryBase"* nonnull %69, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %75 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 3, i32 0
  %76 = load %"class.v8::Name"*, %"class.v8::Name"** %75, align 8
  %77 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %76, %"class.v8::Value"* %74) #8
  %78 = trunc i16 %77 to i8
  %79 = icmp ne i8 %78, 0
  %80 = icmp ugt i16 %77, 255
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %556

82:                                               ; preds = %64, %68
  %83 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 14, i32 0, i32 0
  %84 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %83, align 8
  %85 = icmp eq %"class.blink::MediaSettingsRange"* %84, null
  br i1 %85, label %100, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %84, i64 0, i32 0
  %88 = bitcast %"class.blink::MediaSettingsRange"* %84 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %89 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %88, align 8
  %90 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %89, i64 2
  %91 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %90, align 8
  %92 = tail call %"class.v8::Value"* %91(%"class.blink::IDLDictionaryBase"* nonnull %87, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %93 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 4, i32 0
  %94 = load %"class.v8::Name"*, %"class.v8::Name"** %93, align 8
  %95 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %94, %"class.v8::Value"* %92) #8
  %96 = trunc i16 %95 to i8
  %97 = icmp ne i8 %96, 0
  %98 = icmp ugt i16 %95, 255
  %99 = and i1 %98, %97
  br i1 %99, label %100, label %556

100:                                              ; preds = %82, %86
  %101 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 15, i32 0, i32 0
  %102 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %101, align 8
  %103 = icmp eq %"class.blink::MediaSettingsRange"* %102, null
  br i1 %103, label %118, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %102, i64 0, i32 0
  %106 = bitcast %"class.blink::MediaSettingsRange"* %102 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %107 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %106, align 8
  %108 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %107, i64 2
  %109 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %108, align 8
  %110 = tail call %"class.v8::Value"* %109(%"class.blink::IDLDictionaryBase"* nonnull %105, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %111 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 5, i32 0
  %112 = load %"class.v8::Name"*, %"class.v8::Name"** %111, align 8
  %113 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %112, %"class.v8::Value"* %110) #8
  %114 = trunc i16 %113 to i8
  %115 = icmp ne i8 %114, 0
  %116 = icmp ugt i16 %113, 255
  %117 = and i1 %116, %115
  br i1 %117, label %118, label %556

118:                                              ; preds = %100, %104
  %119 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 16, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %140, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #8
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %124, align 8
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 1
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %129 = bitcast i8** %128 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %126, i32* %130, align 8
  %131 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #8
  %132 = bitcast %"class.v8::String"* %131 to %"class.v8::Value"*
  %133 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 6, i32 0
  %134 = load %"class.v8::Name"*, %"class.v8::Name"** %133, align 8
  %135 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %134, %"class.v8::Value"* %132) #8
  %136 = trunc i16 %135 to i8
  %137 = icmp ne i8 %136, 0
  %138 = icmp ugt i16 %135, 255
  %139 = and i1 %138, %137
  br i1 %139, label %140, label %556

140:                                              ; preds = %118, %122
  %141 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 2
  %142 = load i8, i8* %141, align 1, !range !4
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 17
  %146 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE(%"class.WTF::Vector"* dereferenceable(16) %145, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %147 = bitcast %"class.v8::Array"* %146 to %"class.v8::Value"*
  %148 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 7, i32 0
  %149 = load %"class.v8::Name"*, %"class.v8::Name"** %148, align 8
  %150 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %149, %"class.v8::Value"* %147) #8
  %151 = trunc i16 %150 to i8
  %152 = icmp ne i8 %151, 0
  %153 = icmp ugt i16 %150, 255
  %154 = and i1 %153, %152
  br i1 %154, label %155, label %556

155:                                              ; preds = %140, %144
  %156 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 18, i32 0, i32 0
  %157 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %156, align 8
  %158 = icmp eq %"class.blink::MediaSettingsRange"* %157, null
  br i1 %158, label %173, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %157, i64 0, i32 0
  %161 = bitcast %"class.blink::MediaSettingsRange"* %157 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %162 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %161, align 8
  %163 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %162, i64 2
  %164 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %163, align 8
  %165 = call %"class.v8::Value"* %164(%"class.blink::IDLDictionaryBase"* nonnull %160, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %166 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 8, i32 0
  %167 = load %"class.v8::Name"*, %"class.v8::Name"** %166, align 8
  %168 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %167, %"class.v8::Value"* %165) #8
  %169 = trunc i16 %168 to i8
  %170 = icmp ne i8 %169, 0
  %171 = icmp ugt i16 %168, 255
  %172 = and i1 %171, %170
  br i1 %172, label %173, label %556

173:                                              ; preds = %155, %159
  %174 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 3
  %175 = load i8, i8* %174, align 2, !range !4
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 19
  %179 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector.5"* dereferenceable(16) %178, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %180 = bitcast %"class.v8::Array"* %179 to %"class.v8::Value"*
  %181 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 9, i32 0
  %182 = load %"class.v8::Name"*, %"class.v8::Name"** %181, align 8
  %183 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %182, %"class.v8::Value"* %180) #8
  %184 = trunc i16 %183 to i8
  %185 = icmp ne i8 %184, 0
  %186 = icmp ugt i16 %183, 255
  %187 = and i1 %186, %185
  br i1 %187, label %188, label %556

188:                                              ; preds = %173, %177
  %189 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 20, i32 0, i32 0
  %190 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %189, align 8
  %191 = icmp eq %"class.blink::MediaSettingsRange"* %190, null
  br i1 %191, label %206, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %190, i64 0, i32 0
  %194 = bitcast %"class.blink::MediaSettingsRange"* %190 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %195 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %194, align 8
  %196 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %195, i64 2
  %197 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %196, align 8
  %198 = call %"class.v8::Value"* %197(%"class.blink::IDLDictionaryBase"* nonnull %193, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %199 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 10, i32 0
  %200 = load %"class.v8::Name"*, %"class.v8::Name"** %199, align 8
  %201 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %200, %"class.v8::Value"* %198) #8
  %202 = trunc i16 %201 to i8
  %203 = icmp ne i8 %202, 0
  %204 = icmp ugt i16 %201, 255
  %205 = and i1 %204, %203
  br i1 %205, label %206, label %556

206:                                              ; preds = %188, %192
  %207 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 4
  %208 = load i8, i8* %207, align 1, !range !4
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %221, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 21
  %212 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector.5"* dereferenceable(16) %211, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %213 = bitcast %"class.v8::Array"* %212 to %"class.v8::Value"*
  %214 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 11, i32 0
  %215 = load %"class.v8::Name"*, %"class.v8::Name"** %214, align 8
  %216 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %215, %"class.v8::Value"* %213) #8
  %217 = trunc i16 %216 to i8
  %218 = icmp ne i8 %217, 0
  %219 = icmp ugt i16 %216, 255
  %220 = and i1 %219, %218
  br i1 %220, label %221, label %556

221:                                              ; preds = %206, %210
  %222 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 22, i32 0, i32 0
  %223 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %222, align 8
  %224 = icmp eq %"class.blink::MediaSettingsRange"* %223, null
  br i1 %224, label %239, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %223, i64 0, i32 0
  %227 = bitcast %"class.blink::MediaSettingsRange"* %223 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %228 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %227, align 8
  %229 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %228, i64 2
  %230 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %229, align 8
  %231 = call %"class.v8::Value"* %230(%"class.blink::IDLDictionaryBase"* nonnull %226, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %232 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 12, i32 0
  %233 = load %"class.v8::Name"*, %"class.v8::Name"** %232, align 8
  %234 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %233, %"class.v8::Value"* %231) #8
  %235 = trunc i16 %234 to i8
  %236 = icmp ne i8 %235, 0
  %237 = icmp ugt i16 %234, 255
  %238 = and i1 %237, %236
  br i1 %238, label %239, label %556

239:                                              ; preds = %221, %225
  %240 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 5
  %241 = load i8, i8* %240, align 4, !range !4
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %254, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 23
  %245 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector.5"* dereferenceable(16) %244, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %246 = bitcast %"class.v8::Array"* %245 to %"class.v8::Value"*
  %247 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 13, i32 0
  %248 = load %"class.v8::Name"*, %"class.v8::Name"** %247, align 8
  %249 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %248, %"class.v8::Value"* %246) #8
  %250 = trunc i16 %249 to i8
  %251 = icmp ne i8 %250, 0
  %252 = icmp ugt i16 %249, 255
  %253 = and i1 %252, %251
  br i1 %253, label %254, label %556

254:                                              ; preds = %239, %243
  %255 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 24, i32 0, i32 0
  %256 = load %"class.blink::DoubleRange"*, %"class.blink::DoubleRange"** %255, align 8
  %257 = icmp eq %"class.blink::DoubleRange"* %256, null
  br i1 %257, label %272, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.blink::DoubleRange", %"class.blink::DoubleRange"* %256, i64 0, i32 0
  %260 = bitcast %"class.blink::DoubleRange"* %256 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %261 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %260, align 8
  %262 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %261, i64 2
  %263 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %262, align 8
  %264 = call %"class.v8::Value"* %263(%"class.blink::IDLDictionaryBase"* nonnull %259, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %265 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 14, i32 0
  %266 = load %"class.v8::Name"*, %"class.v8::Name"** %265, align 8
  %267 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %266, %"class.v8::Value"* %264) #8
  %268 = trunc i16 %267 to i8
  %269 = icmp ne i8 %268, 0
  %270 = icmp ugt i16 %267, 255
  %271 = and i1 %270, %269
  br i1 %271, label %272, label %556

272:                                              ; preds = %254, %258
  %273 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 25, i32 0, i32 0
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %294, label %276

276:                                              ; preds = %272
  %277 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #8
  %278 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %278, align 8
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 1
  %282 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %283 = bitcast i8** %282 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %281, %"class.WTF::StringImpl"** %283, align 8
  %284 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %280, i32* %284, align 8
  %285 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #8
  %286 = bitcast %"class.v8::String"* %285 to %"class.v8::Value"*
  %287 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 15, i32 0
  %288 = load %"class.v8::Name"*, %"class.v8::Name"** %287, align 8
  %289 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %288, %"class.v8::Value"* %286) #8
  %290 = trunc i16 %289 to i8
  %291 = icmp ne i8 %290, 0
  %292 = icmp ugt i16 %289, 255
  %293 = and i1 %292, %291
  br i1 %293, label %294, label %556

294:                                              ; preds = %272, %276
  %295 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 26, i32 0, i32 0
  %296 = load %"class.blink::LongRange"*, %"class.blink::LongRange"** %295, align 8
  %297 = icmp eq %"class.blink::LongRange"* %296, null
  br i1 %297, label %312, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.blink::LongRange", %"class.blink::LongRange"* %296, i64 0, i32 0
  %300 = bitcast %"class.blink::LongRange"* %296 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %301 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %300, align 8
  %302 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %301, i64 2
  %303 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %302, align 8
  %304 = call %"class.v8::Value"* %303(%"class.blink::IDLDictionaryBase"* nonnull %299, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %305 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 16, i32 0
  %306 = load %"class.v8::Name"*, %"class.v8::Name"** %305, align 8
  %307 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %306, %"class.v8::Value"* %304) #8
  %308 = trunc i16 %307 to i8
  %309 = icmp ne i8 %308, 0
  %310 = icmp ugt i16 %307, 255
  %311 = and i1 %310, %309
  br i1 %311, label %312, label %556

312:                                              ; preds = %294, %298
  %313 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 27, i32 0, i32 0
  %314 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %313, align 8
  %315 = icmp eq %"class.blink::MediaSettingsRange"* %314, null
  br i1 %315, label %330, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %314, i64 0, i32 0
  %318 = bitcast %"class.blink::MediaSettingsRange"* %314 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %319 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %318, align 8
  %320 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %319, i64 2
  %321 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %320, align 8
  %322 = call %"class.v8::Value"* %321(%"class.blink::IDLDictionaryBase"* nonnull %317, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %323 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 17, i32 0
  %324 = load %"class.v8::Name"*, %"class.v8::Name"** %323, align 8
  %325 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %324, %"class.v8::Value"* %322) #8
  %326 = trunc i16 %325 to i8
  %327 = icmp ne i8 %326, 0
  %328 = icmp ugt i16 %325, 255
  %329 = and i1 %328, %327
  br i1 %329, label %330, label %556

330:                                              ; preds = %312, %316
  %331 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 28, i32 0, i32 0
  %332 = load %"class.blink::DoubleRange"*, %"class.blink::DoubleRange"** %331, align 8
  %333 = icmp eq %"class.blink::DoubleRange"* %332, null
  br i1 %333, label %348, label %334

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"class.blink::DoubleRange", %"class.blink::DoubleRange"* %332, i64 0, i32 0
  %336 = bitcast %"class.blink::DoubleRange"* %332 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %337 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %336, align 8
  %338 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %337, i64 2
  %339 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %338, align 8
  %340 = call %"class.v8::Value"* %339(%"class.blink::IDLDictionaryBase"* nonnull %335, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %341 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 18, i32 0
  %342 = load %"class.v8::Name"*, %"class.v8::Name"** %341, align 8
  %343 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %342, %"class.v8::Value"* %340) #8
  %344 = trunc i16 %343 to i8
  %345 = icmp ne i8 %344, 0
  %346 = icmp ugt i16 %343, 255
  %347 = and i1 %346, %345
  br i1 %347, label %348, label %556

348:                                              ; preds = %330, %334
  %349 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 6
  %350 = load i8, i8* %349, align 1, !range !4
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %363, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 29
  %354 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE(%"class.WTF::Vector"* dereferenceable(16) %353, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %355 = bitcast %"class.v8::Array"* %354 to %"class.v8::Value"*
  %356 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 19, i32 0
  %357 = load %"class.v8::Name"*, %"class.v8::Name"** %356, align 8
  %358 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %357, %"class.v8::Value"* %355) #8
  %359 = trunc i16 %358 to i8
  %360 = icmp ne i8 %359, 0
  %361 = icmp ugt i16 %358, 255
  %362 = and i1 %361, %360
  br i1 %362, label %363, label %556

363:                                              ; preds = %348, %352
  %364 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 30, i32 0, i32 0
  %365 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %364, align 8
  %366 = icmp eq %"class.blink::MediaSettingsRange"* %365, null
  br i1 %366, label %381, label %367

367:                                              ; preds = %363
  %368 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %365, i64 0, i32 0
  %369 = bitcast %"class.blink::MediaSettingsRange"* %365 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %370 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %369, align 8
  %371 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %370, i64 2
  %372 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %371, align 8
  %373 = call %"class.v8::Value"* %372(%"class.blink::IDLDictionaryBase"* nonnull %368, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %374 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 20, i32 0
  %375 = load %"class.v8::Name"*, %"class.v8::Name"** %374, align 8
  %376 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %375, %"class.v8::Value"* %373) #8
  %377 = trunc i16 %376 to i8
  %378 = icmp ne i8 %377, 0
  %379 = icmp ugt i16 %376, 255
  %380 = and i1 %379, %378
  br i1 %380, label %381, label %556

381:                                              ; preds = %363, %367
  %382 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 7
  %383 = load i8, i8* %382, align 2, !range !4
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %396, label %385

385:                                              ; preds = %381
  %386 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 31
  %387 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector.5"* dereferenceable(16) %386, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %388 = bitcast %"class.v8::Array"* %387 to %"class.v8::Value"*
  %389 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 21, i32 0
  %390 = load %"class.v8::Name"*, %"class.v8::Name"** %389, align 8
  %391 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %390, %"class.v8::Value"* %388) #8
  %392 = trunc i16 %391 to i8
  %393 = icmp ne i8 %392, 0
  %394 = icmp ugt i16 %391, 255
  %395 = and i1 %394, %393
  br i1 %395, label %396, label %556

396:                                              ; preds = %381, %385
  %397 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 32, i32 0, i32 0
  %398 = load %"class.blink::LongRange"*, %"class.blink::LongRange"** %397, align 8
  %399 = icmp eq %"class.blink::LongRange"* %398, null
  br i1 %399, label %414, label %400

400:                                              ; preds = %396
  %401 = getelementptr inbounds %"class.blink::LongRange", %"class.blink::LongRange"* %398, i64 0, i32 0
  %402 = bitcast %"class.blink::LongRange"* %398 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %403 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %402, align 8
  %404 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %403, i64 2
  %405 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %404, align 8
  %406 = call %"class.v8::Value"* %405(%"class.blink::IDLDictionaryBase"* nonnull %401, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %407 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 22, i32 0
  %408 = load %"class.v8::Name"*, %"class.v8::Name"** %407, align 8
  %409 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %408, %"class.v8::Value"* %406) #8
  %410 = trunc i16 %409 to i8
  %411 = icmp ne i8 %410, 0
  %412 = icmp ugt i16 %409, 255
  %413 = and i1 %412, %411
  br i1 %413, label %414, label %556

414:                                              ; preds = %396, %400
  %415 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 33, i32 0, i32 0
  %416 = load %"class.blink::LongRange"*, %"class.blink::LongRange"** %415, align 8
  %417 = icmp eq %"class.blink::LongRange"* %416, null
  br i1 %417, label %432, label %418

418:                                              ; preds = %414
  %419 = getelementptr inbounds %"class.blink::LongRange", %"class.blink::LongRange"* %416, i64 0, i32 0
  %420 = bitcast %"class.blink::LongRange"* %416 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %421 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %420, align 8
  %422 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %421, i64 2
  %423 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %422, align 8
  %424 = call %"class.v8::Value"* %423(%"class.blink::IDLDictionaryBase"* nonnull %419, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %425 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 23, i32 0
  %426 = load %"class.v8::Name"*, %"class.v8::Name"** %425, align 8
  %427 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %426, %"class.v8::Value"* %424) #8
  %428 = trunc i16 %427 to i8
  %429 = icmp ne i8 %428, 0
  %430 = icmp ugt i16 %427, 255
  %431 = and i1 %430, %429
  br i1 %431, label %432, label %556

432:                                              ; preds = %414, %418
  %433 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 34, i32 0, i32 0
  %434 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %433, align 8
  %435 = icmp eq %"class.blink::MediaSettingsRange"* %434, null
  br i1 %435, label %450, label %436

436:                                              ; preds = %432
  %437 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %434, i64 0, i32 0
  %438 = bitcast %"class.blink::MediaSettingsRange"* %434 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %439 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %438, align 8
  %440 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %439, i64 2
  %441 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %440, align 8
  %442 = call %"class.v8::Value"* %441(%"class.blink::IDLDictionaryBase"* nonnull %437, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %443 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 24, i32 0
  %444 = load %"class.v8::Name"*, %"class.v8::Name"** %443, align 8
  %445 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %444, %"class.v8::Value"* %442) #8
  %446 = trunc i16 %445 to i8
  %447 = icmp ne i8 %446, 0
  %448 = icmp ugt i16 %445, 255
  %449 = and i1 %448, %447
  br i1 %449, label %450, label %556

450:                                              ; preds = %432, %436
  %451 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 35, i32 0, i32 0
  %452 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %451, align 8
  %453 = icmp eq %"class.blink::MediaSettingsRange"* %452, null
  br i1 %453, label %468, label %454

454:                                              ; preds = %450
  %455 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %452, i64 0, i32 0
  %456 = bitcast %"class.blink::MediaSettingsRange"* %452 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %457 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %456, align 8
  %458 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %457, i64 2
  %459 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %458, align 8
  %460 = call %"class.v8::Value"* %459(%"class.blink::IDLDictionaryBase"* nonnull %455, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %461 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 25, i32 0
  %462 = load %"class.v8::Name"*, %"class.v8::Name"** %461, align 8
  %463 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %462, %"class.v8::Value"* %460) #8
  %464 = trunc i16 %463 to i8
  %465 = icmp ne i8 %464, 0
  %466 = icmp ugt i16 %463, 255
  %467 = and i1 %466, %465
  br i1 %467, label %468, label %556

468:                                              ; preds = %450, %454
  %469 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 36, i32 0, i32 0
  %470 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %469, align 8
  %471 = icmp eq %"class.blink::MediaSettingsRange"* %470, null
  br i1 %471, label %486, label %472

472:                                              ; preds = %468
  %473 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %470, i64 0, i32 0
  %474 = bitcast %"class.blink::MediaSettingsRange"* %470 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %475 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %474, align 8
  %476 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %475, i64 2
  %477 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %476, align 8
  %478 = call %"class.v8::Value"* %477(%"class.blink::IDLDictionaryBase"* nonnull %473, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %479 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 26, i32 0
  %480 = load %"class.v8::Name"*, %"class.v8::Name"** %479, align 8
  %481 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %480, %"class.v8::Value"* %478) #8
  %482 = trunc i16 %481 to i8
  %483 = icmp ne i8 %482, 0
  %484 = icmp ugt i16 %481, 255
  %485 = and i1 %484, %483
  br i1 %485, label %486, label %556

486:                                              ; preds = %468, %472
  %487 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 8
  %488 = load i8, i8* %487, align 1, !range !4
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %504, label %490

490:                                              ; preds = %486
  %491 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 37
  %492 = load i8, i8* %491, align 8, !range !4
  %493 = icmp eq i8 %492, 0
  %494 = select i1 %493, i64 192, i64 184
  %495 = add i64 %494, %7
  %496 = inttoptr i64 %495 to %"class.v8::Value"*
  %497 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 27, i32 0
  %498 = load %"class.v8::Name"*, %"class.v8::Name"** %497, align 8
  %499 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %498, %"class.v8::Value"* %496) #8
  %500 = trunc i16 %499 to i8
  %501 = icmp ne i8 %500, 0
  %502 = icmp ugt i16 %499, 255
  %503 = and i1 %502, %501
  br i1 %503, label %504, label %556

504:                                              ; preds = %486, %490
  %505 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 9
  %506 = load i8, i8* %505, align 8, !range !4
  %507 = icmp eq i8 %506, 0
  br i1 %507, label %519, label %508

508:                                              ; preds = %504
  %509 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 38
  %510 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector.5"* dereferenceable(16) %509, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %511 = bitcast %"class.v8::Array"* %510 to %"class.v8::Value"*
  %512 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 28, i32 0
  %513 = load %"class.v8::Name"*, %"class.v8::Name"** %512, align 8
  %514 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %513, %"class.v8::Value"* %511) #8
  %515 = trunc i16 %514 to i8
  %516 = icmp ne i8 %515, 0
  %517 = icmp ugt i16 %514, 255
  %518 = and i1 %517, %516
  br i1 %518, label %519, label %556

519:                                              ; preds = %504, %508
  %520 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 39, i32 0, i32 0
  %521 = load %"class.blink::LongRange"*, %"class.blink::LongRange"** %520, align 8
  %522 = icmp eq %"class.blink::LongRange"* %521, null
  br i1 %522, label %537, label %523

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::LongRange", %"class.blink::LongRange"* %521, i64 0, i32 0
  %525 = bitcast %"class.blink::LongRange"* %521 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %526 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %525, align 8
  %527 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %526, i64 2
  %528 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %527, align 8
  %529 = call %"class.v8::Value"* %528(%"class.blink::IDLDictionaryBase"* nonnull %524, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %530 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 29, i32 0
  %531 = load %"class.v8::Name"*, %"class.v8::Name"** %530, align 8
  %532 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %531, %"class.v8::Value"* %529) #8
  %533 = trunc i16 %532 to i8
  %534 = icmp ne i8 %533, 0
  %535 = icmp ugt i16 %532, 255
  %536 = and i1 %535, %534
  br i1 %536, label %537, label %556

537:                                              ; preds = %519, %523
  %538 = getelementptr inbounds %"class.blink::MediaTrackCapabilities", %"class.blink::MediaTrackCapabilities"* %0, i64 0, i32 40, i32 0, i32 0
  %539 = load %"class.blink::MediaSettingsRange"*, %"class.blink::MediaSettingsRange"** %538, align 8
  %540 = icmp eq %"class.blink::MediaSettingsRange"* %539, null
  br i1 %540, label %555, label %541

541:                                              ; preds = %537
  %542 = getelementptr inbounds %"class.blink::MediaSettingsRange", %"class.blink::MediaSettingsRange"* %539, i64 0, i32 0
  %543 = bitcast %"class.blink::MediaSettingsRange"* %539 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %544 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %543, align 8
  %545 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %544, i64 2
  %546 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %545, align 8
  %547 = call %"class.v8::Value"* %546(%"class.blink::IDLDictionaryBase"* nonnull %542, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %548 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 30, i32 0
  %549 = load %"class.v8::Name"*, %"class.v8::Name"** %548, align 8
  %550 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %549, %"class.v8::Value"* %547) #8
  %551 = trunc i16 %550 to i8
  %552 = icmp ne i8 %551, 0
  %553 = icmp ugt i16 %550, 255
  %554 = and i1 %553, %552
  br i1 %554, label %555, label %556

555:                                              ; preds = %537, %541
  br label %556

556:                                              ; preds = %35, %68, %104, %144, %177, %210, %243, %276, %316, %352, %385, %418, %454, %490, %523, %541, %555, %508, %472, %436, %400, %367, %334, %298, %258, %225, %192, %159, %122, %86, %50, %17
  %557 = phi i1 [ false, %17 ], [ false, %35 ], [ false, %50 ], [ false, %68 ], [ false, %86 ], [ false, %104 ], [ false, %122 ], [ false, %144 ], [ false, %159 ], [ false, %177 ], [ false, %192 ], [ false, %210 ], [ false, %225 ], [ false, %243 ], [ false, %258 ], [ false, %276 ], [ false, %298 ], [ false, %316 ], [ false, %334 ], [ false, %352 ], [ false, %367 ], [ false, %385 ], [ false, %400 ], [ false, %418 ], [ false, %436 ], [ false, %454 ], [ false, %472 ], [ false, %490 ], [ false, %508 ], [ false, %523 ], [ true, %555 ], [ false, %541 ]
  ret i1 %557
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #8
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #8
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #8
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaTrackCapabilities"* @_ZN5blink17NativeValueTraitsINS_22MediaTrackCapabilitiesEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 336) #8
  %5 = bitcast i8* %4 to %"class.blink::MediaTrackCapabilities"*
  tail call void @_ZN5blink22MediaTrackCapabilitiesC1Ev(%"class.blink::MediaTrackCapabilities"* %5) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink24V8MediaTrackCapabilities6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_22MediaTrackCapabilitiesERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::MediaTrackCapabilities"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::MediaTrackCapabilities"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.330"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN5blink22MediaTrackCapabilitiesC1Ev(%"class.blink::MediaTrackCapabilities"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.33, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_10IDLBooleanEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca i8, align 1
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 2145386496
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %100

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %9) #8
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = trunc i64 %20 to i32
  store i32 %24, i32* %16, align 8
  br label %25

25:                                               ; preds = %13, %19
  %26 = phi i32 [ 0, %13 ], [ %24, %19 ]
  %27 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %28 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %29 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %30 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::Vector"* %5 to i64*
  br label %82

34:                                               ; preds = %25
  %35 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %37

37:                                               ; preds = %34, %73
  %38 = phi i32 [ 0, %34 ], [ %74, %73 ]
  %39 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %35, %"class.v8::Context"* %28, i32 %38) #8
  %40 = icmp eq %"class.v8::Value"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #8
  %47 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #8
  br label %91

48:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  %49 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %39) #8
  br i1 %49, label %50, label %53, !prof !2

50:                                               ; preds = %48
  %51 = bitcast %"class.v8::Value"* %39 to %"class.v8::Boolean"*
  %52 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %51) #8
  br label %55

53:                                               ; preds = %48
  %54 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %39, %"class.v8::Isolate"* %1) #8
  br label %55

55:                                               ; preds = %50, %53
  %56 = phi i1 [ %52, %50 ], [ %54, %53 ]
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %7, align 1
  %58 = load i32, i32* %36, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %71

60:                                               ; preds = %55
  %61 = load i32, i32* %17, align 4
  %62 = load i32, i32* %16, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %70, label %64, !prof !3

64:                                               ; preds = %60
  %65 = load i8*, i8** %15, align 8
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  store i8 %57, i8* %67, align 1
  %68 = load i32, i32* %17, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %17, align 4
  br label %73

70:                                               ; preds = %60
  call void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIbEEvOT_(%"class.WTF::Vector"* nonnull %5, i8* nonnull dereferenceable(1) %7) #8
  br label %73

71:                                               ; preds = %55
  %72 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  br label %91

73:                                               ; preds = %64, %70
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  %74 = add nuw i32 %38, 1
  %75 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %76 = icmp ult i32 %74, %75
  br i1 %76, label %37, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.WTF::Vector"* %5 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = load i32, i32* %16, align 8
  %81 = load i32, i32* %17, align 4
  br label %82

82:                                               ; preds = %32, %77
  %83 = phi i64* [ %33, %32 ], [ %78, %77 ]
  %84 = phi i32 [ 0, %32 ], [ %81, %77 ]
  %85 = phi i32 [ %26, %32 ], [ %80, %77 ]
  %86 = phi i64 [ %27, %32 ], [ %79, %77 ]
  %87 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %89 = bitcast %"class.WTF::Vector"* %0 to i64*
  store i64 0, i64* %89, align 8
  %90 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store atomic i64 %86, i64* %90 monotonic, align 8
  store i32 %85, i32* %87, align 8
  store i32 0, i32* %16, align 8
  store i32 %84, i32* %88, align 4
  store i32 0, i32* %17, align 4
  br label %91

91:                                               ; preds = %41, %71, %82
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #8
  %92 = load i8*, i8** %15, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %99, label %94, !prof !2

94:                                               ; preds = %91
  %95 = load i32, i32* %17, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %98, label %97, !prof !3

97:                                               ; preds = %94
  store i32 0, i32* %17, align 4
  br label %98

98:                                               ; preds = %97, %94
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #8
  store i8* null, i8** %15, align 8
  br label %99

99:                                               ; preds = %91, %98
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %100

100:                                              ; preds = %99, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_10IDLBooleanEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca i8, align 1
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %48

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %17

17:                                               ; preds = %14, %46
  %18 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %19 = icmp eq %"class.v8::Value"* %18, null
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %17
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %21

21:                                               ; preds = %17, %20
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  %22 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %18) #8
  br i1 %22, label %23, label %26, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.v8::Value"* %18 to %"class.v8::Boolean"*
  %25 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %24) #8
  br label %28

26:                                               ; preds = %21
  %27 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %18, %"class.v8::Isolate"* %1) #8
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i1 [ %25, %23 ], [ %27, %26 ]
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %6, align 1
  %31 = load i32, i32* %16, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  br label %63

35:                                               ; preds = %28
  %36 = load i32, i32* %12, align 4
  %37 = load i32, i32* %11, align 8
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %45, label %39, !prof !3

39:                                               ; preds = %35
  %40 = load i8*, i8** %10, align 8
  %41 = zext i32 %36 to i64
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  store i8 %30, i8* %42, align 1
  %43 = load i32, i32* %12, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %12, align 4
  br label %46

45:                                               ; preds = %35
  call void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIbEEvOT_(%"class.WTF::Vector"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  br label %46

46:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %47 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %47, label %17, label %48

48:                                               ; preds = %46, %4
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #8
  br label %63

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector"* %5 to i64*
  %58 = bitcast %"class.WTF::Vector"* %0 to i64*
  store i64 0, i64* %58, align 8
  %59 = load i64, i64* %57, align 8
  %60 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = load i32, i32* %11, align 8
  store i32 %61, i32* %55, align 8
  store i32 0, i32* %11, align 8
  %62 = load i32, i32* %12, align 4
  store i32 %62, i32* %56, align 4
  store i32 0, i32* %12, align 4
  br label %63

63:                                               ; preds = %33, %54, %52
  %64 = load i8*, i8** %10, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %71, label %66, !prof !2

66:                                               ; preds = %63
  %67 = load i32, i32* %12, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %66
  store i32 0, i32* %12, align 4
  br label %70

70:                                               ; preds = %69, %66
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %64) #8
  store i8* null, i8** %10, align 8
  br label %71

71:                                               ; preds = %63, %70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.38, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.39, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #8
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIbEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #8
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !2

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #8
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #8
  %44 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !2

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %62) #8
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #8
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !2

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #8
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #8
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1, !range !4
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !2

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #8
  br i1 %22, label %23, label %80, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #8
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #8
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #8
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.5"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.5", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 268173312
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %145

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.5"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %9) #8
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.5"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.5"* %5 to i64*
  %35 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  br label %99

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %38 = bitcast %"class.WTF::String"* %7 to i8*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %41 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  br label %42

42:                                               ; preds = %36, %90
  %43 = phi i32 [ 0, %36 ], [ %91, %90 ]
  %44 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %37, %"class.v8::Context"* %29, i32 %43) #8
  %45 = icmp eq %"class.v8::Value"* %44, null
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %48 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %49 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, i64 5
  %51 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %50, align 8
  call void %51(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %47) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #8
  br label %108

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %44, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %39, align 8
  %54 = load i32, i32* %40, align 8
  %55 = icmp eq i32 %54, 0
  %56 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  br i1 %55, label %58, label %57

57:                                               ; preds = %52
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #8
  br label %71

58:                                               ; preds = %52
  %59 = load i32, i32* %17, align 4
  %60 = load i32, i32* %16, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %69, label %62, !prof !3

62:                                               ; preds = %58
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %64 = zext i32 %59 to i64
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %64
  %66 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %56, i64* %66, align 8
  %67 = load i32, i32* %17, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  br label %90

69:                                               ; preds = %58
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.5"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  br label %71

71:                                               ; preds = %69, %57
  %72 = phi %"class.WTF::StringImpl"* [ %70, %69 ], [ %53, %57 ]
  %73 = phi i32 [ 0, %69 ], [ 1, %57 ]
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #8
  br label %88

88:                                               ; preds = %87, %84, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  %89 = icmp eq i32 %73, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %62, %88
  %91 = add nuw i32 %43, 1
  %92 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %42, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.WTF::Vector.5"* %5 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = load i32, i32* %16, align 8
  %98 = load i32, i32* %17, align 4
  br label %99

99:                                               ; preds = %33, %94
  %100 = phi i8* [ %35, %33 ], [ %41, %94 ]
  %101 = phi i64* [ %34, %33 ], [ %95, %94 ]
  %102 = phi i32 [ 0, %33 ], [ %98, %94 ]
  %103 = phi i32 [ %27, %33 ], [ %97, %94 ]
  %104 = phi i64 [ %28, %33 ], [ %96, %94 ]
  %105 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #8
  %107 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  store atomic i64 %104, i64* %107 monotonic, align 8
  store i32 %103, i32* %105, align 8
  store i32 0, i32* %16, align 8
  store i32 %102, i32* %106, align 4
  store i32 0, i32* %17, align 4
  br label %108

108:                                              ; preds = %88, %46, %99
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #8
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %110 = icmp eq %"class.WTF::String"* %109, null
  br i1 %110, label %144, label %111, !prof !2

111:                                              ; preds = %108
  %112 = bitcast %"class.WTF::String"* %109 to i8*
  %113 = load i32, i32* %17, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %142, label %115, !prof !3

115:                                              ; preds = %111
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 %116
  br label %118

118:                                              ; preds = %136, %115
  %119 = phi %"class.WTF::String"* [ %137, %136 ], [ %109, %115 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #8
  br label %136

136:                                              ; preds = %135, %132, %118
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %138 = icmp eq %"class.WTF::String"* %137, %117
  br i1 %138, label %139, label %118

139:                                              ; preds = %136
  store i32 0, i32* %17, align 4
  %140 = bitcast %"class.WTF::Vector.5"* %5 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %111
  %143 = phi i8* [ %141, %139 ], [ %112, %111 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %143) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %144

144:                                              ; preds = %108, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %145

145:                                              ; preds = %144, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.5"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.5", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.WTF::Vector.5"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %74

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::String"* %6 to i8*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %19

19:                                               ; preds = %14, %72
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %24 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %17, align 8
  %25 = load i32, i32* %18, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  br i1 %26, label %45, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #8
  %30 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %89

45:                                               ; preds = %23
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %11, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %56, label %49, !prof !3

49:                                               ; preds = %45
  %50 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 %51
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 %27, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %54 = load i32, i32* %12, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %12, align 4
  br label %72

56:                                               ; preds = %45
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.5"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %72

72:                                               ; preds = %49, %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %73 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %73, label %19, label %74

74:                                               ; preds = %72, %4
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #8
  br label %89

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector.5"* %5 to i64*
  %84 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store i64 0, i64* %84, align 8
  %85 = load i64, i64* %83, align 8
  %86 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load i32, i32* %11, align 8
  store i32 %87, i32* %81, align 8
  store i32 0, i32* %11, align 8
  %88 = load i32, i32* %12, align 4
  store i32 %88, i32* %82, align 4
  store i32 0, i32* %12, align 4
  br label %89

89:                                               ; preds = %44, %80, %78
  %90 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %91 = icmp eq %"class.WTF::String"* %90, null
  br i1 %91, label %125, label %92, !prof !2

92:                                               ; preds = %89
  %93 = bitcast %"class.WTF::String"* %90 to i8*
  %94 = load i32, i32* %12, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %123, label %96, !prof !3

96:                                               ; preds = %92
  %97 = zext i32 %94 to i64
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 %97
  br label %99

99:                                               ; preds = %117, %96
  %100 = phi %"class.WTF::String"* [ %118, %117 ], [ %90, %96 ]
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #8
  br label %117

117:                                              ; preds = %116, %113, %99
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 1
  %119 = icmp eq %"class.WTF::String"* %118, %98
  br i1 %119, label %120, label %99

120:                                              ; preds = %117
  store i32 0, i32* %12, align 4
  %121 = bitcast %"class.WTF::Vector.5"* %5 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %92
  %124 = phi i8* [ %122, %120 ], [ %93, %92 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %124) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %125

125:                                              ; preds = %89, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #8
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #8
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #8
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #8
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #8
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %55

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !3

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #8
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %35, %31, %22
  %56 = phi %"class.WTF::StringImpl"* [ null, %22 ], [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* null, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %58) #8
  br label %61

61:                                               ; preds = %60, %55
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %77

77:                                               ; preds = %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #8
  ret %"class.WTF::StringImpl"* %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.38, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.39, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.5"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIbLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE(%"class.WTF::Vector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.366* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !2

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %64, label %41

41:                                               ; preds = %31
  %42 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %43 = add i64 %42, 160
  %44 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  br label %45

45:                                               ; preds = %41, %60
  %46 = phi i32 [ 0, %41 ], [ %61, %60 ]
  %47 = phi i8* [ %36, %41 ], [ %62, %60 ]
  %48 = load i8, i8* %47, align 1, !range !4
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i64 192, i64 184
  %51 = add i64 %50, %42
  %52 = icmp eq i64 %51, 0
  %53 = select i1 %52, i64 %43, i64 %51
  %54 = inttoptr i64 %53 to %"class.v8::Value"*
  %55 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %44, %"class.v8::Context"* %34, i32 %46, %"class.v8::Value"* %54) #8
  %56 = trunc i16 %55 to i8
  %57 = icmp eq i8 %56, 0
  %58 = icmp ult i16 %55, 256
  %59 = or i1 %58, %57
  br i1 %59, label %64, label %60, !prof !6

60:                                               ; preds = %45
  %61 = add nuw i32 %46, 1
  %62 = getelementptr inbounds i8, i8* %47, i64 1
  %63 = icmp eq i8* %62, %39
  br i1 %63, label %64, label %45

64:                                               ; preds = %60, %45, %31
  %65 = phi i64 [ %33, %31 ], [ 0, %45 ], [ %33, %60 ]
  %66 = load i8, i8* %5, align 8, !range !4
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %69, align 8
  %71 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %72 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %71) #8
  %73 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %70, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %72, %"class.blink::RuntimeCallTimer"** %73, align 8
  store i8 0, i8* %5, align 8
  br label %74

74:                                               ; preds = %64, %68
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %75 = inttoptr i64 %65 to %"class.v8::Array"*
  ret %"class.v8::Array"* %75
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector.5"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #8
  %7 = bitcast %"class.absl::optional"* %5 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.366* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #8
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %26, label %12, !prof !2

12:                                               ; preds = %3
  %13 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %14 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 3
  %15 = bitcast %"class.base::TickClock"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %13, %"class.blink::RuntimeCallStats"** %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %21 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #8
  %22 = bitcast %"class.base::TickClock"** %20 to i64*
  store i64 %16, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 2, i64 5
  %24 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 0
  %25 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %24, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallCounter"* %23, %"class.blink::RuntimeCallTimer"* %25) #8
  store %"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallTimer"** %24, align 8
  store i8 1, i8* %6, align 8
  br label %26

26:                                               ; preds = %3, %12
  %27 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %27) #8
  %28 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %26
  call void @llvm.trap() #8
  unreachable

32:                                               ; preds = %26
  %33 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %29) #8
  %34 = ptrtoint %"class.v8::Array"* %33 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %27) #8
  %35 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %36 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %36, align 8
  %38 = load i32, i32* %28, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %80, label %42

42:                                               ; preds = %32
  %43 = bitcast %"class.WTF::StringView"* %4 to i8*
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  %47 = bitcast %"class.WTF::StringView"* %4 to i64*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %49 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %50 = add i64 %49, 160
  %51 = bitcast %"class.v8::Array"* %33 to %"class.v8::Object"*
  br label %52

52:                                               ; preds = %42, %76
  %53 = phi i32 [ 0, %42 ], [ %77, %76 ]
  %54 = phi %"class.WTF::String"* [ %37, %42 ], [ %78, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  store i8* null, i8** %45, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %59, i64* %47, align 8
  br label %64

60:                                               ; preds = %52
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %44, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 1
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %46, align 8
  br label %64

64:                                               ; preds = %58, %60
  %65 = phi i32 [ %62, %60 ], [ 0, %58 ]
  store i32 %65, i32* %48, align 8
  %66 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8
  %67 = ptrtoint %"class.v8::String"* %66 to i64
  %68 = icmp eq %"class.v8::String"* %66, null
  %69 = select i1 %68, i64 %50, i64 %67
  %70 = inttoptr i64 %69 to %"class.v8::Value"*
  %71 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %51, %"class.v8::Context"* %35, i32 %53, %"class.v8::Value"* %70) #8
  %72 = trunc i16 %71 to i8
  %73 = icmp eq i8 %72, 0
  %74 = icmp ult i16 %71, 256
  %75 = or i1 %74, %73
  br i1 %75, label %80, label %76, !prof !6

76:                                               ; preds = %64
  %77 = add i32 %53, 1
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %40
  br i1 %79, label %80, label %52

80:                                               ; preds = %76, %64, %32
  %81 = phi i64 [ %34, %32 ], [ 0, %64 ], [ %34, %76 ]
  %82 = load i8, i8* %6, align 8, !range !4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %85, align 8
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %88 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %87) #8
  %89 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %86, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %88, %"class.blink::RuntimeCallTimer"** %89, align 8
  store i8 0, i8* %6, align 8
  br label %90

90:                                               ; preds = %80, %84
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #8
  %91 = inttoptr i64 %81 to %"class.v8::Array"*
  ret %"class.v8::Array"* %91
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 2002, i32 2000}
