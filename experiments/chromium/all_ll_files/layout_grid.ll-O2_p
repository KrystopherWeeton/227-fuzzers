; ModuleID = '../../third_party/blink/renderer/core/layout/layout_grid.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_grid.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::LayoutGrid" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.blink::LayoutNGGridInterface", %"class.std::__1::unique_ptr.987", %"class.blink::GridTrackSizingAlgorithm", %"class.WTF::Vector.1063", %"class.WTF::Vector.1063", %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData", %"class.WTF::HashMap.1068", %"class.WTF::HashMap.1068", i8, i8, %"class.absl::optional.1073", [4 x i8] }>
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.940, %"class.WTF::Vector.941", %"class.std::__1::unique_ptr.946", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.971, %"class.blink::Persistent.972" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.680", %"class.std::__1::unique_ptr.682" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.392", %"class.blink::DataRef.396", %"class.blink::DataRef.596", %"class.blink::DataRef.663", %"class.blink::DataRef.667", %"class.blink::DataRef.671", %"class.blink::DataRef.675", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1503", [4 x i8] }>
%"class.WTF::RefCounted.1503" = type { %"class.base::RefCounted.1504" }
%"class.base::RefCounted.1504" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1496", i64 }
%"class.std::__1::vector.1496" = type { %"class.std::__1::__vector_base.1497" }
%"class.std::__1::__vector_base.1497" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1498" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1772 }
%class.scoped_refptr.1772 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1773", %"class.WTF::Vector.579", %"class.WTF::Vector.1775", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1773" = type { %"class.base::RefCounted.1774" }
%"class.base::RefCounted.1774" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1778 }
%union.anon.1778 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.390" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.379", %"class.blink::HeapVector.381" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.720", %"class.WTF::Vector.720", i8, i32, %"class.blink::Member.1090", %"class.blink::Member.1092", %"class.blink::Member.1094", %"class.blink::Member.1096", %"class.blink::Member.1098", %"class.blink::Member.1100", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1108", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1114", %"class.blink::Member.1116", %"class.blink::Member.387", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1119", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1140", %"class.blink::HeapVector.363", %"class.blink::Member.343", %"class.blink::Member.1142", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1151", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.1159", i16, i8, %"class.blink::Member.1166", %"class.blink::Member.1168", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::TextLinkColors", %"class.blink::Member.1174", i8, [7 x i8], %"class.blink::HeapHashMap.1176", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1183", %"class.blink::Member.1188", %"class.blink::Member.1190", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1192", %"class.blink::HeapVector.1194", %"class.std::__1::unique_ptr.1202", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1208", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1221", %"class.WTF::Vector.1223", i8, i8, %"class.std::__1::unique_ptr.1228", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.363", %"class.blink::HeapVector.1234", i32, i8, %"class.blink::HeapTaskRunnerTimer.1140", %"class.blink::HeapTaskRunnerTimer.1140", %"class.blink::DocumentTiming", %"class.blink::Member.1242", i8, i32, %"class.blink::Member.1244", %"class.blink::Member.1246", %"class.blink::Member.1248", %"class.blink::HeapTaskRunnerTimer.1140", %"class.blink::Member.1280", %"class.WTF::HashMap.1282", %"class.blink::Member.1287", %"class.blink::Member.1289", %"class.blink::Member.1291", %"class.blink::Member.1293", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1140", %"class.blink::HeapHashSet.1295", i8, i32, %"class.blink::Member.1302", %"class.blink::Member.1304", i32, %"class.blink::Member.1306", %"class.blink::Member.1308", %"class.blink::Member.1310", %"class.std::__1::unique_ptr.1312", i64, %"class.std::__1::unique_ptr.1318", i32, i32, %"class.blink::Member.1333", %"class.blink::Member.1335", %"class.blink::Member.1337", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1339", %"class.WTF::Vector.1341", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1346", %"class.blink::Member.1353", %"class.std::__1::unique_ptr.1355", %"class.blink::Member.1361", i8, i8, %"class.WTF::String", %"class.blink::Member.1363", i8, [7 x i8], %"class.blink::HeapHashMap.1365", %"class.blink::HeapObserverSet", %"class.blink::Member.1379", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1381", i32, i8, i8, %"class.blink::WeakMember.1383", %"class.blink::Member.1384" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1083" }
%"class.blink::HeapHashMap.1083" = type { %"class.WTF::HashMap.1086" }
%"class.WTF::HashMap.1086" = type { %"class.WTF::HashTable.1087" }
%"class.WTF::HashTable.1087" = type <{ %"struct.WTF::KeyValuePair.1089"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1089" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.724", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.724" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1397", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1465", i32, i8, [3 x i8], %"class.blink::HeapVector.1467", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1475", %"class.blink::Member.1477", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1486", %"class.blink::Member.1492", %"class.blink::Member.1494", i8, [7 x i8] }>
%"class.blink::Supplementable.1397" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1398" }
%"class.blink::HeapHashMap.1398" = type { %"class.WTF::HashMap.1401" }
%"class.WTF::HashMap.1401" = type { %"class.WTF::HashTable.1402" }
%"class.WTF::HashTable.1402" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1413" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1405" }
%"class.blink::HeapObserverSet.1405" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1406" }
%"class.blink::HeapHashSet.1406" = type { %"class.WTF::HashSet.1409" }
%"class.WTF::HashSet.1409" = type { %"class.WTF::HashTable.1410" }
%"class.WTF::HashTable.1410" = type <{ %"class.blink::WeakMember.1412"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1412" = type opaque
%"class.blink::Supplementable.1413" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1414" }
%"class.blink::HeapHashMap.1414" = type { %"class.WTF::HashMap.1417" }
%"class.WTF::HashMap.1417" = type { %"class.WTF::HashTable.1418" }
%"class.WTF::HashTable.1418" = type <{ %"struct.WTF::KeyValuePair.1420"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1420" = type { i8*, %"class.blink::Member.1763" }
%"class.blink::Member.1763" = type { %"class.blink::MemberBase.1764" }
%"class.blink::MemberBase.1764" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1765" }
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1421, %"class.std::__1::unique_ptr.1430", %"class.std::__1::unique_ptr.1430", %"class.std::__1::unique_ptr.1455", %"class.std::__1::unique_ptr.1455", %"class.blink::Member.1092", i32, [4 x i8], %"class.WTF::HashSet.1461", i32, i32 }
%class.scoped_refptr.1421 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1422", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1424", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1429 }
%"class.WTF::RefCounted.1422" = type { %"class.base::RefCounted.1423" }
%"class.base::RefCounted.1423" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1424" = type { %"class.absl::optional_internal::optional_data.1425" }
%"class.absl::optional_internal::optional_data.1425" = type { %"class.absl::optional_internal::optional_data_base.1426" }
%"class.absl::optional_internal::optional_data_base.1426" = type { %"class.absl::optional_internal::optional_data_dtor_base.1427" }
%"class.absl::optional_internal::optional_data_dtor_base.1427" = type { i8, %union.anon.1428 }
%union.anon.1428 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1429 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1442", %"class.std::__1::map.1451"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1424" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.1433" }
%"class.std::__1::__tree.1433" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1434", %"class.std::__1::__compressed_pair.1438" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1434" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1438" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1442" = type { %"class.std::__1::__tree.1443" }
%"class.std::__1::__tree.1443" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1444", %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1451" = type opaque
%"class.std::__1::unique_ptr.1455" = type { %"class.std::__1::__compressed_pair.1456" }
%"class.std::__1::__compressed_pair.1456" = type { %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1461" = type { %"class.WTF::HashTable.1462" }
%"class.WTF::HashTable.1462" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1467" = type { %"class.WTF::Vector.1470" }
%"class.WTF::Vector.1470" = type { %"class.WTF::VectorBuffer.1471" }
%"class.WTF::VectorBuffer.1471" = type { %"class.WTF::VectorBufferBase.1472" }
%"class.WTF::VectorBufferBase.1472" = type { %"class.blink::Member.1473"*, i32, i32 }
%"class.blink::Member.1473" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1479", i32, i32 }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.std::__1::unique_ptr.1486" = type { %"class.std::__1::__compressed_pair.1487" }
%"class.std::__1::__compressed_pair.1487" = type { %"struct.std::__1::__compressed_pair_elem.1488" }
%"struct.std::__1::__compressed_pair_elem.1488" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1108" = type { %"class.std::__1::__compressed_pair.1109" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1102" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.blink::KURL"* }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1118 }
%class.scoped_refptr.1118 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1119" = type { %"class.WTF::VectorBuffer.1120" }
%"class.WTF::VectorBuffer.1120" = type { %"class.WTF::VectorBufferBase.1121" }
%"class.WTF::VectorBufferBase.1121" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1122 }
%class.scoped_refptr.1122 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1123", i32, i32, %"class.blink::Persistent.1125" }
%"class.WTF::RefCounted.1123" = type { %"class.base::RefCounted.1124" }
%"class.base::RefCounted.1124" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1125" = type { %"class.blink::PersistentBase.1126" }
%"class.blink::PersistentBase.1126" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1129" }
%"class.blink::HeapHashMap.1129" = type { %"class.WTF::HashMap.1132" }
%"class.WTF::HashMap.1132" = type { %"class.WTF::HashTable.1133" }
%"class.WTF::HashTable.1133" = type <{ %"struct.WTF::KeyValuePair.1135"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1135" = type { %"class.blink::WeakMember.1136", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1144" }
%"class.blink::HeapHashMap.1144" = type { %"class.WTF::HashMap.1147" }
%"class.WTF::HashMap.1147" = type { %"class.WTF::HashTable.1148" }
%"class.WTF::HashTable.1148" = type <{ %"struct.WTF::KeyValuePair.1150"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1150" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.1155" }
%"class.WTF::HashSet.1155" = type { %"class.WTF::HashTable.1156" }
%"class.WTF::HashTable.1156" = type <{ %"class.blink::WeakMember.1158"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1158" = type opaque
%"class.blink::HeapHashSet.1159" = type { %"class.WTF::HashSet.1162" }
%"class.WTF::HashSet.1162" = type { %"class.WTF::HashTable.1163" }
%"class.WTF::HashTable.1163" = type <{ %"class.blink::WeakMember.1165"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1165" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1176" = type { %"class.WTF::HashMap.1179" }
%"class.WTF::HashMap.1179" = type { %"class.WTF::HashTable.1180" }
%"class.WTF::HashTable.1180" = type <{ %"struct.WTF::KeyValuePair.1182"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1182" = type opaque
%"class.WTF::Vector.1183" = type { %"class.WTF::VectorBuffer.1184" }
%"class.WTF::VectorBuffer.1184" = type { %"class.WTF::VectorBufferBase.1185" }
%"class.WTF::VectorBufferBase.1185" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1194" = type { %"class.WTF::Vector.1197" }
%"class.WTF::Vector.1197" = type { %"class.WTF::VectorBuffer.1198" }
%"class.WTF::VectorBuffer.1198" = type { %"class.WTF::VectorBufferBase.1199" }
%"class.WTF::VectorBufferBase.1199" = type { %"class.blink::Member.1200"*, i32, i32 }
%"class.blink::Member.1200" = type opaque
%"class.std::__1::unique_ptr.1202" = type { %"class.std::__1::__compressed_pair.1203" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1208" = type { %"class.WTF::HashSet.1211" }
%"class.WTF::HashSet.1211" = type { %"class.WTF::HashTable.1212" }
%"class.WTF::HashTable.1212" = type <{ %"class.blink::WeakMember.1214"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1214" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1215", i32, [4 x i8] }>
%"class.WTF::Vector.1215" = type { %"class.WTF::VectorBuffer.1216" }
%"class.WTF::VectorBuffer.1216" = type { %"class.WTF::VectorBufferBase.1217" }
%"class.WTF::VectorBufferBase.1217" = type { %"struct.std::__1::pair.1218"*, i32, i32 }
%"struct.std::__1::pair.1218" = type opaque
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1228" = type { %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.363" = type { %"class.WTF::Vector.366" }
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.368" }
%"class.WTF::VectorBufferBase.368" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1234" = type { %"class.WTF::Vector.1237" }
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.1238" }
%"class.WTF::VectorBuffer.1238" = type { %"class.WTF::VectorBufferBase.1239" }
%"class.WTF::VectorBufferBase.1239" = type { %"class.blink::Member.1240"*, i32, i32 }
%"class.blink::Member.1240" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type <{ %"class.blink::Member.1252", %"class.blink::LayoutBlock"*, %"class.WTF::Vector.1254", %"class.blink::TextAutosizer::FingerprintMapper", %"struct.blink::TextAutosizer::PageInfo", i8, i8, [2 x i8] }>
%"class.blink::Member.1252" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::Document"* }
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.WTF::Vector.1254" = type { %"class.WTF::VectorBuffer.1255" }
%"class.WTF::VectorBuffer.1255" = type { %"class.WTF::VectorBufferBase.1256" }
%"class.WTF::VectorBufferBase.1256" = type { %"class.std::__1::unique_ptr.1257"*, i32, i32 }
%"class.std::__1::unique_ptr.1257" = type opaque
%"class.blink::TextAutosizer::FingerprintMapper" = type { %"class.WTF::HashMap.1260", %"class.WTF::HashMap.1265", %"class.WTF::HashMap.1270", %"class.WTF::HashSet.1275" }
%"class.WTF::HashMap.1260" = type { %"class.WTF::HashTable.1261" }
%"class.WTF::HashTable.1261" = type <{ %"struct.WTF::KeyValuePair.1264"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1264" = type opaque
%"class.WTF::HashMap.1265" = type { %"class.WTF::HashTable.1266" }
%"class.WTF::HashTable.1266" = type <{ %"struct.WTF::KeyValuePair.1269"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1269" = type opaque
%"class.WTF::HashMap.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"struct.WTF::KeyValuePair.1274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1274" = type opaque
%"class.WTF::HashSet.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"struct.blink::TextAutosizer::Supercluster"**, i32, i32, i32, [4 x i8] }>
%"struct.blink::TextAutosizer::Supercluster" = type <{ %"class.WTF::HashSet.1279"*, i32, float, i32, [4 x i8] }>
%"class.WTF::HashSet.1279" = type opaque
%"struct.blink::TextAutosizer::PageInfo" = type <{ %"class.blink::mojom::blink::TextAutosizerPageInfo", float, i8, i8, i8, i8 }>
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.1280" = type { %"class.blink::MemberBase.1281" }
%"class.blink::MemberBase.1281" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1282" = type { %"class.WTF::HashTable.1283" }
%"class.WTF::HashTable.1283" = type <{ %"struct.WTF::KeyValuePair.1286"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1286" = type opaque
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1291" = type { %"class.blink::MemberBase.1292" }
%"class.blink::MemberBase.1292" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1293" = type { %"class.blink::MemberBase.1294" }
%"class.blink::MemberBase.1294" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1140" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1141", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.727, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.727 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.728" }>
%"class.base::RefCountedThreadSafe.728" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1080 }
%class.scoped_refptr.1080 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1141" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1295" = type { %"class.WTF::HashSet.1298" }
%"class.WTF::HashSet.1298" = type { %"class.WTF::HashTable.1299" }
%"class.WTF::HashTable.1299" = type <{ %"class.blink::Member.1301"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1301" = type opaque
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1312" = type { %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.1314" }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1318" = type { %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1321", %"class.WTF::HashSet.1321", %"class.WTF::HashSet.1321", %"class.WTF::HashSet.1321", %"class.WTF::HashSet.1321", %"class.WTF::HashSet.1321", i32, [4 x i8], %"class.WTF::HashMap.1325", %"class.WTF::HashMap.1325", %"class.WTF::HashMap.1325", %"class.WTF::HashMap.1325", %"class.WTF::HashMap.1325", %"class.WTF::HashMap.1325", %"class.WTF::HashMap.1325", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1321" = type { %"class.WTF::HashTable.1322" }
%"class.WTF::HashTable.1322" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1325" = type { %"class.WTF::HashTable.1326" }
%"class.WTF::HashTable.1326" = type <{ %"struct.WTF::KeyValuePair.1329"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1329" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1335" = type { %"class.blink::MemberBase.1336" }
%"class.blink::MemberBase.1336" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1337" = type { %"class.blink::MemberBase.1338" }
%"class.blink::MemberBase.1338" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1341" = type { %"class.WTF::VectorBuffer.1342" }
%"class.WTF::VectorBuffer.1342" = type { %"class.WTF::VectorBufferBase.1343" }
%"class.WTF::VectorBufferBase.1343" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1346" = type { %"class.WTF::HashMap.1349" }
%"class.WTF::HashMap.1349" = type { %"class.WTF::HashTable.1350" }
%"class.WTF::HashTable.1350" = type <{ %"struct.WTF::KeyValuePair.1352"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1352" = type opaque
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1355" = type { %"class.std::__1::__compressed_pair.1356" }
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1363" = type { %"class.blink::MemberBase.1364" }
%"class.blink::MemberBase.1364" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1365" = type { %"class.WTF::HashMap.1368" }
%"class.WTF::HashMap.1368" = type { %"class.WTF::HashTable.1369" }
%"class.WTF::HashTable.1369" = type <{ %"struct.WTF::KeyValuePair.1371"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1371" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1372" }
%"class.blink::HeapHashSet.1372" = type { %"class.WTF::HashSet.1375" }
%"class.WTF::HashSet.1375" = type { %"class.WTF::HashTable.1376" }
%"class.WTF::HashTable.1376" = type <{ %"class.blink::WeakMember.1378"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1378" = type opaque
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1388", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1395", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1388" = type { %"class.WTF::HashSet.1391" }
%"class.WTF::HashSet.1391" = type { %"class.WTF::HashTable.1392" }
%"class.WTF::HashTable.1392" = type <{ %"class.blink::Member.1394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1394" = type opaque
%"class.blink::HeapTaskRunnerTimer.1395" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1396", { i64, i64 } }
%"class.blink::WeakMember.1396" = type { %"class.blink::MemberBase.1382" }
%"class.blink::WeakMember.1383" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.363" }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.376" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::HeapHashMap.378"* }
%"class.blink::HeapHashMap.378" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.381" = type { %"class.WTF::Vector.384" }
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { %"class.blink::Member.387"*, i32, i32 }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.392" = type { %class.scoped_refptr.393 }
%class.scoped_refptr.393 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.394", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.396" = type { %class.scoped_refptr.397 }
%class.scoped_refptr.397 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.398", [4 x i8], %"class.blink::DataRef.400", %"class.blink::DataRef.466", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.590", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.398" = type { %"class.base::RefCounted.399" }
%"class.base::RefCounted.399" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.400" = type { %class.scoped_refptr.401 }
%class.scoped_refptr.401 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.402", [4 x i8], %"class.blink::DataRef.404", %"class.blink::Persistent.442", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.402" = type { %"class.base::RefCounted.403" }
%"class.base::RefCounted.403" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.404" = type { %class.scoped_refptr.405 }
%class.scoped_refptr.405 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.406", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.424, %class.scoped_refptr.427, %class.scoped_refptr.430, %class.scoped_refptr.433, %class.scoped_refptr.434, %class.scoped_refptr.435, %"class.blink::Persistent.442", %"class.blink::Persistent.457", %"class.absl::optional.461", %"class.absl::optional.461", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.406" = type { %"class.base::RefCounted.407" }
%"class.base::RefCounted.407" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.408", %"class.std::__1::unique_ptr.413" }
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.416", %"class.WTF::Vector.408", i32, i32 }
%"class.WTF::Vector.416" = type { %"class.WTF::VectorBuffer.417" }
%"class.WTF::VectorBuffer.417" = type { %"class.WTF::VectorBufferBase.418" }
%"class.WTF::VectorBufferBase.418" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.424 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.425", [4 x i8] }>
%"class.WTF::RefCounted.425" = type { %"class.base::RefCounted.426" }
%"class.base::RefCounted.426" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.427 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.428", [4 x i8] }>
%"class.WTF::RefCounted.428" = type { %"class.base::RefCounted.429" }
%"class.base::RefCounted.429" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.430 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.431" }>
%"class.WTF::RefCounted.431" = type { %"class.base::RefCounted.432" }
%"class.base::RefCounted.432" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.433 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.434 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.435 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.436", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.436" = type { %"class.base::RefCounted.437" }
%"class.base::RefCounted.437" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.438" }
%"class.blink::DataRef.438" = type { %class.scoped_refptr.439 }
%class.scoped_refptr.439 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.440" }
%"class.WTF::RefCounted.440" = type { %"class.base::RefCounted.441" }
%"class.base::RefCounted.441" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.457" = type { %"class.blink::PersistentBase.458" }
%"class.blink::PersistentBase.458" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.427, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.461" = type { %"class.absl::optional_internal::optional_data.462" }
%"class.absl::optional_internal::optional_data.462" = type { %"class.absl::optional_internal::optional_data_base.463" }
%"class.absl::optional_internal::optional_data_base.463" = type { %"class.absl::optional_internal::optional_data_dtor_base.464" }
%"class.absl::optional_internal::optional_data_dtor_base.464" = type { i8, [3 x i8], %union.anon.465 }
%union.anon.465 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.442" = type { %"class.blink::PersistentBase.443" }
%"class.blink::PersistentBase.443" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.446" }
%"class.blink::HeapVector.446" = type { %"class.WTF::Vector.449" }
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451" }
%"class.WTF::VectorBufferBase.451" = type { %"class.blink::Member.452"*, i32, i32 }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.466" = type { %class.scoped_refptr.467 }
%class.scoped_refptr.467 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.468", %"class.blink::DataRef.470", %"class.blink::DataRef.474", %"class.blink::DataRef.483", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.513", %"class.std::__1::unique_ptr.551", %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.573", %"class.WTF::Vector.579", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.468" = type { %"class.base::RefCounted.469" }
%"class.base::RefCounted.469" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.470" = type { %class.scoped_refptr.471 }
%class.scoped_refptr.471 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.472", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.472" = type { %"class.base::RefCounted.473" }
%"class.base::RefCounted.473" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.474" = type { %class.scoped_refptr.475 }
%class.scoped_refptr.475 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.476", [4 x i8], %"class.WTF::Vector.478", i8, [7 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { i32*, i32, i32 }
%"class.blink::DataRef.483" = type { %class.scoped_refptr.484 }
%class.scoped_refptr.484 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.485", [4 x i8], %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.492", %"class.WTF::HashMap.492", %"class.WTF::HashMap.492", %"class.WTF::HashMap.492", %"class.WTF::HashMap.497", %"class.WTF::Vector.408", %"class.WTF::Vector.408", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.485" = type { %"class.base::RefCounted.486" }
%"class.base::RefCounted.486" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.487" = type { %"class.WTF::HashTable.488" }
%"class.WTF::HashTable.488" = type <{ %"struct.WTF::KeyValuePair.491"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.491" = type { %"class.WTF::String", %"class.WTF::Vector.1042" }
%"class.WTF::Vector.1042" = type { %"class.WTF::VectorBuffer.1043" }
%"class.WTF::VectorBuffer.1043" = type { %"class.WTF::VectorBufferBase.1044" }
%"class.WTF::VectorBufferBase.1044" = type { i64*, i32, i32 }
%"class.WTF::HashMap.492" = type { %"class.WTF::HashTable.493" }
%"class.WTF::HashTable.493" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type { i64, %"class.WTF::Vector.579" }
%"class.WTF::HashMap.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.505" }
%"class.WTF::HashMap.505" = type { %"class.WTF::HashTable.506" }
%"class.WTF::HashTable.506" = type <{ %"struct.WTF::KeyValuePair.509"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.509" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1767", %"class.absl::optional.1767", %"class.absl::optional.1767" }
%"class.absl::optional.1767" = type { %"class.absl::optional_internal::optional_data.1768" }
%"class.absl::optional_internal::optional_data.1768" = type { %"class.absl::optional_internal::optional_data_base.1769" }
%"class.absl::optional_internal::optional_data_base.1769" = type { %"class.absl::optional_internal::optional_data_dtor_base.1770" }
%"class.absl::optional_internal::optional_data_dtor_base.1770" = type { i8, %union.anon.1771 }
%union.anon.1771 = type { i32 }
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.528", %"class.WTF::Vector.516", %"class.WTF::Vector.533", %"class.WTF::Vector.538", %"class.WTF::Vector.543" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.516", %"class.WTF::Vector.516", %"class.WTF::Vector.521" }
%"class.WTF::Vector.521" = type { %"class.WTF::VectorBuffer.522" }
%"class.WTF::VectorBuffer.522" = type { %"class.WTF::VectorBufferBase.523" }
%"class.WTF::VectorBufferBase.523" = type { %class.scoped_refptr.524*, i32, i32 }
%class.scoped_refptr.524 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.525" }
%"class.base::RefCountedThreadSafe.525" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.516" = type { %"class.WTF::VectorBuffer.517" }
%"class.WTF::VectorBuffer.517" = type { %"class.WTF::VectorBufferBase.518" }
%"class.WTF::VectorBufferBase.518" = type { double*, i32, i32 }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { i32*, i32, i32 }
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { i32*, i32, i32 }
%"class.WTF::Vector.543" = type { %"class.WTF::VectorBuffer.544" }
%"class.WTF::VectorBuffer.544" = type { %"class.WTF::VectorBufferBase.545" }
%"class.WTF::VectorBufferBase.545" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.554" }
%"class.WTF::Vector.554" = type { %"class.WTF::VectorBuffer.555" }
%"class.WTF::VectorBuffer.555" = type { %"class.WTF::VectorBufferBase.556" }
%"class.WTF::VectorBufferBase.556" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.565" }
%"class.WTF::Vector.565" = type { %"class.WTF::VectorBuffer.566" }
%"class.WTF::VectorBuffer.566" = type { %"class.WTF::VectorBufferBase.567" }
%"class.WTF::VectorBufferBase.567" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.584" }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { %class.scoped_refptr.587*, i32, i32 }
%class.scoped_refptr.587 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.431", [4 x i8] }>
%"class.blink::Persistent.590" = type { %"class.blink::PersistentBase.591" }
%"class.blink::PersistentBase.591" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.594" }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::DataRef.596" = type { %class.scoped_refptr.597 }
%class.scoped_refptr.597 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.598", [4 x i8], %"class.blink::DataRef.600", %"class.blink::DataRef.604", %"class.blink::DataRef.625", %"class.blink::DataRef.643", %"class.blink::DataRef.655", %"class.blink::DataRef.659", %class.scoped_refptr.629, i32, [4 x i8] }>
%"class.WTF::RefCounted.598" = type { %"class.base::RefCounted.599" }
%"class.base::RefCounted.599" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.600" = type { %class.scoped_refptr.601 }
%class.scoped_refptr.601 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.602", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.602" = type { %"class.base::RefCounted.603" }
%"class.base::RefCounted.603" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.604" = type { %class.scoped_refptr.605 }
%class.scoped_refptr.605 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.606", %class.scoped_refptr.608, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.606" = type { %"class.base::RefCounted.607" }
%"class.base::RefCounted.607" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.608 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.615", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.428" }>
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.618, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.618 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.619, %class.SkTDArray.620, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.619 = type { i8*, i32, i32 }
%class.SkTDArray.620 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.621 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.621 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.625" = type { %class.scoped_refptr.626 }
%class.scoped_refptr.626 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.627", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.627" = type { %"class.base::RefCounted.628" }
%"class.base::RefCounted.628" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.629, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.643" = type { %class.scoped_refptr.644 }
%class.scoped_refptr.644 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.645", [4 x i8], %class.scoped_refptr.647, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.645" = type { %"class.base::RefCounted.646" }
%"class.base::RefCounted.646" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.647 = type { %"class.base::RefCountedData.648"* }
%"class.base::RefCountedData.648" = type { %"class.base::RefCountedThreadSafe.649", %"class.WTF::Vector.650" }
%"class.base::RefCountedThreadSafe.649" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.652" }
%"class.WTF::VectorBufferBase.652" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.629, %class.scoped_refptr.629, %class.scoped_refptr.629 }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.659" = type { %class.scoped_refptr.660 }
%class.scoped_refptr.660 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.661", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.661" = type { %"class.base::RefCounted.662" }
%"class.base::RefCounted.662" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.629 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.630", %"class.blink::Persistent.632", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.630" = type { %"class.base::RefCounted.631" }
%"class.base::RefCounted.631" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.632" = type { %"class.blink::PersistentBase.633" }
%"class.blink::PersistentBase.633" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.636" }
%"class.blink::HeapHashMap.636" = type { %"class.WTF::HashMap.639" }
%"class.WTF::HashMap.639" = type { %"class.WTF::HashTable.640" }
%"class.WTF::HashTable.640" = type <{ %"struct.WTF::KeyValuePair.642"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.642" = type opaque
%"class.blink::DataRef.663" = type { %class.scoped_refptr.664 }
%class.scoped_refptr.664 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.665", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.665" = type { %"class.base::RefCounted.666" }
%"class.base::RefCounted.666" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.667" = type { %class.scoped_refptr.668 }
%class.scoped_refptr.668 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.669", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.669" = type { %"class.base::RefCounted.670" }
%"class.base::RefCounted.670" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.671" = type { %class.scoped_refptr.672 }
%class.scoped_refptr.672 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.673", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.673" = type { %"class.base::RefCounted.674" }
%"class.base::RefCounted.674" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.675" = type { %class.scoped_refptr.676 }
%class.scoped_refptr.676 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.677", %class.scoped_refptr.679 }
%"class.WTF::RefCounted.677" = type { %"class.base::RefCounted.678" }
%"class.base::RefCounted.678" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.679 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1081", %"class.blink::StyleVariables", %class.scoped_refptr.679 }
%"class.WTF::RefCounted.1081" = type { %"class.base::RefCounted.1082" }
%"class.base::RefCounted.1082" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.680" = type { %"class.base::RefCounted.681" }
%"class.base::RefCounted.681" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.685" }
%"class.std::__1::unique_ptr.685" = type { %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.WTF::Vector.688"* }
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.1782" }
%"class.WTF::VectorBuffer.1782" = type { %"class.WTF::VectorBufferBase.1783", [32 x i8] }
%"class.WTF::VectorBufferBase.1783" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.696" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.699", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.809", %"class.std::__1::unique_ptr.920", i8, %"class.absl::optional.926", %class.scoped_refptr.902, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.931" }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.702", %"class.blink::Persistent.708", %"class.std::__1::unique_ptr.768", %"class.blink::CullRect", %"class.std::__1::unique_ptr.784" }
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.708" = type { %"class.blink::PersistentBase.709" }
%"class.blink::PersistentBase.709" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.735", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.763" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.712", %"class.blink::Member.714", %"class.blink::Member.716", %"class.blink::Member.718", %"class.WTF::Vector.720", i16, %class.scoped_refptr.727 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.729", %"class.blink::Member.731", %"class.blink::Member.731", i8, [7 x i8] }>
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.733", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.732" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.733", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.738", %"class.absl::optional.743", i8, i8, %"class.WTF::Vector.753" }
%"class.WTF::HashMap.738" = type { %"class.WTF::HashTable.739" }
%"class.WTF::HashTable.739" = type <{ %"struct.WTF::KeyValuePair.742"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.742" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.743" = type { %"class.absl::optional_internal::optional_data.744" }
%"class.absl::optional_internal::optional_data.744" = type { %"class.absl::optional_internal::optional_data_base.745" }
%"class.absl::optional_internal::optional_data_base.745" = type { %"class.absl::optional_internal::optional_data_dtor_base.746" }
%"class.absl::optional_internal::optional_data_dtor_base.746" = type { i8, %union.anon.747 }
%union.anon.747 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.748" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.753" = type { %"class.WTF::VectorBuffer.754" }
%"class.WTF::VectorBuffer.754" = type { %"class.WTF::VectorBufferBase.755" }
%"class.WTF::VectorBufferBase.755" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.761" }
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.761" }
%"class.absl::optional.763" = type { %"class.absl::optional_internal::optional_data.764" }
%"class.absl::optional_internal::optional_data.764" = type { %"class.absl::optional_internal::optional_data_base.765" }
%"class.absl::optional_internal::optional_data_base.765" = type { %"class.absl::optional_internal::optional_data_dtor_base.766" }
%"class.absl::optional_internal::optional_data_dtor_base.766" = type { i8, %union.anon.767 }
%union.anon.767 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.771", %"class.WTF::Vector.771", %"class.WTF::HashMap.776", %"class.WTF::Vector.771", i8, [7 x i8] }>
%"class.WTF::HashMap.776" = type { %"class.WTF::HashTable.777" }
%"class.WTF::HashTable.777" = type <{ %"struct.WTF::KeyValuePair.780"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.780" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.771" }
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.787", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.793", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.799", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.799" = type { %"class.blink::PersistentBase.800" }
%"class.blink::PersistentBase.800" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.809" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.812, %class.scoped_refptr.812, %class.scoped_refptr.812, %class.scoped_refptr.812, %class.scoped_refptr.812, %class.scoped_refptr.812, %class.scoped_refptr.847, %class.scoped_refptr.851, %class.scoped_refptr.852, %class.scoped_refptr.852, %class.scoped_refptr.852, %class.scoped_refptr.852, %class.scoped_refptr.852, %class.scoped_refptr.852, %class.scoped_refptr.892, %class.scoped_refptr.893, %class.scoped_refptr.893, %class.scoped_refptr.893, %class.scoped_refptr.893, %class.scoped_refptr.893, %class.scoped_refptr.893, %class.scoped_refptr.893, %class.scoped_refptr.893, %class.scoped_refptr.916 }
%class.scoped_refptr.812 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.829" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.813", i8, i8, %class.scoped_refptr.815, i32, i32 }
%"class.WTF::RefCounted.813" = type { %"class.base::RefCounted.814" }
%"class.base::RefCounted.814" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.815 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.822, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.823", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.816" }
%"class.std::__1::unique_ptr.816" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.822 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.848", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.848" = type { %"class.WTF::RefCounted.849", i8, i8, %class.scoped_refptr.822, i32, i32 }
%"class.WTF::RefCounted.849" = type { %"class.base::RefCounted.850" }
%"class.base::RefCounted.850" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.743" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.832", %"class.std::__1::unique_ptr.838", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.847 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.851 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.852 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.853" }
%"class.blink::PaintPropertyNode.853" = type { %"class.WTF::RefCounted.854", i8, i8, %class.scoped_refptr.856, i32, i32 }
%"class.WTF::RefCounted.854" = type { %"class.base::RefCounted.855" }
%"class.base::RefCounted.855" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.856 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.815, %class.scoped_refptr.857, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.879", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.857 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.894" }
%"class.blink::PaintPropertyNode.894" = type { %"class.WTF::RefCounted.895", i8, i8, %class.scoped_refptr.857, i32, i32 }
%"class.WTF::RefCounted.895" = type { %"class.base::RefCounted.896" }
%"class.base::RefCounted.896" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.858" }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.874" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.860, [20 x float], i32, [4 x i8], %"class.std::__1::vector.867", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.860 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.861, i32, %"class.absl::optional.862", i8, i32 }
%class.sk_sp.861 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.862" = type { %"class.absl::optional_internal::optional_data.863" }
%"class.absl::optional_internal::optional_data.863" = type { %"class.absl::optional_internal::optional_data_base.864" }
%"class.absl::optional_internal::optional_data_base.864" = type { %"class.absl::optional_internal::optional_data_dtor_base.865" }
%"class.absl::optional_internal::optional_data_dtor_base.865" = type { i8, %union.anon.866 }
%union.anon.866 = type { %struct.SkRect }
%"class.std::__1::vector.867" = type { %"class.std::__1::__vector_base.868" }
%"class.std::__1::__vector_base.868" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.869" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.885" }
%"class.std::__1::vector.885" = type { %"class.std::__1::__vector_base.886" }
%"class.std::__1::__vector_base.886" = type { i32*, i32*, %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { i32* }
%class.scoped_refptr.892 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.893 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.905" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.815, %"class.absl::optional.897", %class.scoped_refptr.902, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.897" = type { %"class.absl::optional_internal::optional_data.898" }
%"class.absl::optional_internal::optional_data.898" = type { %"class.absl::optional_internal::optional_data_base.899" }
%"class.absl::optional_internal::optional_data_base.899" = type { %"class.absl::optional_internal::optional_data_dtor_base.900" }
%"class.absl::optional_internal::optional_data_dtor_base.900" = type { i8, [3 x i8], %union.anon.901 }
%union.anon.901 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.908", i32, [4 x i8] }>
%"class.WTF::Vector.908" = type { %"class.WTF::VectorBuffer.909" }
%"class.WTF::VectorBuffer.909" = type { %"class.WTF::VectorBufferBase.910" }
%"class.WTF::VectorBufferBase.910" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.916 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.815, %class.scoped_refptr.857, %class.scoped_refptr.856 }
%"class.absl::optional.926" = type { %"class.absl::optional_internal::optional_data.927" }
%"class.absl::optional_internal::optional_data.927" = type { %"class.absl::optional_internal::optional_data_base.928" }
%"class.absl::optional_internal::optional_data_base.928" = type { %"class.absl::optional_internal::optional_data_dtor_base.929" }
%"class.absl::optional_internal::optional_data_dtor_base.929" = type { i8, %union.anon.930 }
%union.anon.930 = type { %"class.blink::IntRect" }
%class.scoped_refptr.902 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.903", [4 x i8] }
%"class.WTF::RefCounted.903" = type { %"class.base::RefCounted.904" }
%"class.base::RefCounted.904" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.940 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.941" = type { %"class.WTF::VectorBuffer.942" }
%"class.WTF::VectorBuffer.942" = type { %"class.WTF::VectorBufferBase.943", [8 x i8] }
%"class.WTF::VectorBufferBase.943" = type { %class.scoped_refptr.940*, i32, i32 }
%"class.std::__1::unique_ptr.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.949", %"class.absl::optional.958", %"class.absl::optional.963" }
%"class.absl::optional.949" = type { %"class.absl::optional_internal::optional_data.950" }
%"class.absl::optional_internal::optional_data.950" = type { %"class.absl::optional_internal::optional_data_base.951" }
%"class.absl::optional_internal::optional_data_base.951" = type { %"class.absl::optional_internal::optional_data_dtor_base.952" }
%"class.absl::optional_internal::optional_data_dtor_base.952" = type { i8, %union.anon.953 }
%union.anon.953 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.958" = type { %"class.absl::optional_internal::optional_data.959" }
%"class.absl::optional_internal::optional_data.959" = type { %"class.absl::optional_internal::optional_data_base.960" }
%"class.absl::optional_internal::optional_data_base.960" = type { %"class.absl::optional_internal::optional_data_dtor_base.961" }
%"class.absl::optional_internal::optional_data_dtor_base.961" = type { i8, [3 x i8], %union.anon.962 }
%union.anon.962 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.963" = type { %"class.absl::optional_internal::optional_data.964" }
%"class.absl::optional_internal::optional_data.964" = type { %"class.absl::optional_internal::optional_data_base.965" }
%"class.absl::optional_internal::optional_data_base.965" = type { %"class.absl::optional_internal::optional_data_dtor_base.966" }
%"class.absl::optional_internal::optional_data_dtor_base.966" = type { i8, %union.anon.967 }
%union.anon.967 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.971 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.972" = type { %"class.blink::PersistentBase.973" }
%"class.blink::PersistentBase.973" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.976", %"struct.blink::PhysicalRect", %"class.blink::Member.985" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.WTF::HashSet"* }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.979" }
%"class.WTF::HashTable.979" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"class.blink::Grid"* }
%"class.blink::Grid" = type { i32 (...)**, %"class.blink::OrderIterator", i64, i64, i64, i64, i8, [7 x i8], %"class.WTF::HashMap.998", %"class.WTF::HashMap.1003", %"class.std::__1::unique_ptr.1008", %"class.std::__1::unique_ptr.1008" }
%"class.blink::OrderIterator" = type <{ %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"class.std::__1::set", %"class.std::__1::__tree_const_iterator", i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.990", %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.WTF::HashMap.998" = type { %"class.WTF::HashTable.999" }
%"class.WTF::HashTable.999" = type <{ %"struct.WTF::KeyValuePair.1002"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1002" = type { %"class.blink::LayoutBox"*, %"struct.blink::GridArea" }
%"class.WTF::HashMap.1003" = type { %"class.WTF::HashTable.1004" }
%"class.WTF::HashTable.1004" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type { %"class.blink::LayoutBox"*, i64 }
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.WTF::LinkedHashSet"* }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1011", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1011" = type { %"class.WTF::HashTable.1012" }
%"class.WTF::HashTable.1012" = type <{ %"struct.WTF::KeyValuePair.1015"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1015" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1016", i32, i32 }
%"class.WTF::Vector.1016" = type { %"class.WTF::VectorBuffer.1017" }
%"class.WTF::VectorBuffer.1017" = type { %"class.WTF::VectorBufferBase.1018" }
%"class.WTF::VectorBufferBase.1018" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, i64 }
%"class.blink::GridTrackSizingAlgorithm" = type { i8, i8, %"class.absl::optional.1027", %"class.absl::optional.1027", %"class.absl::optional.1027", %"class.absl::optional.1027", %"class.WTF::Vector.1032", %"class.WTF::Vector.1032", %"class.WTF::Vector.1042", %"class.WTF::Vector.1042", %"class.WTF::Vector.1042", i32, %"class.blink::Grid"*, %"class.blink::LayoutGrid"*, %"class.std::__1::unique_ptr.1047", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, [4 x i8], %"class.blink::GridBaselineAlignment", %"class.WTF::HashMap.1058", %"class.WTF::HashMap.1058" }
%"class.absl::optional.1027" = type { %"class.absl::optional_internal::optional_data.1028" }
%"class.absl::optional_internal::optional_data.1028" = type { %"class.absl::optional_internal::optional_data_base.1029" }
%"class.absl::optional_internal::optional_data_base.1029" = type { %"class.absl::optional_internal::optional_data_dtor_base.1030" }
%"class.absl::optional_internal::optional_data_dtor_base.1030" = type { i8, %union.anon.1031 }
%union.anon.1031 = type { %"class.blink::LayoutUnit" }
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"class.blink::GridTrack"*, i32, i32 }
%"class.blink::GridTrack" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.1027", i8, [7 x i8], %"class.absl::optional.1035" }
%"class.absl::optional.1035" = type { %"class.absl::optional_internal::optional_data.1036" }
%"class.absl::optional_internal::optional_data.1036" = type { %"class.absl::optional_internal::optional_data_base.1037" }
%"class.absl::optional_internal::optional_data_base.1037" = type { %"class.absl::optional_internal::optional_data_dtor_base.1038" }
%"class.absl::optional_internal::optional_data_dtor_base.1038" = type { i8, [7 x i8], %union.anon.1039 }
%union.anon.1039 = type { %"class.blink::GridTrackSize" }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.blink::GridTrackSizingAlgorithmStrategy"* }
%"class.blink::GridTrackSizingAlgorithmStrategy" = type { i32 (...)**, %"class.blink::GridTrackSizingAlgorithm"* }
%"class.blink::GridBaselineAlignment" = type { i8, [7 x i8], %"class.WTF::HashMap.1053", %"class.WTF::HashMap.1053" }
%"class.WTF::HashMap.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"struct.WTF::KeyValuePair.1057"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1057" = type { i32, %"class.std::__1::unique_ptr.1786" }
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.blink::BaselineContext"* }
%"class.blink::BaselineContext" = type { %"class.WTF::Vector.1789" }
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"class.blink::BaselineGroup"*, i32, i32 }
%"class.blink::BaselineGroup" = type { i8, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::HashSet.1792" }
%"class.WTF::HashSet.1792" = type { %"class.WTF::HashTable.1793" }
%"class.WTF::HashTable.1793" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1058" = type { %"class.WTF::HashTable.1059" }
%"class.WTF::HashTable.1059" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.1063" = type { %"class.WTF::VectorBuffer.1064" }
%"class.WTF::VectorBuffer.1064" = type { %"class.WTF::VectorBufferBase.1065" }
%"class.WTF::VectorBufferBase.1065" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"struct.blink::ContentAlignmentData" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashMap.1068" = type { %"class.WTF::HashTable.1069" }
%"class.WTF::HashTable.1069" = type <{ %"struct.WTF::KeyValuePair.1072"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1072" = type { %"class.blink::LayoutBox"*, %"class.absl::optional.1753" }
%"class.absl::optional.1753" = type { %"class.absl::optional_internal::optional_data.1754" }
%"class.absl::optional_internal::optional_data.1754" = type { %"class.absl::optional_internal::optional_data_base.1755" }
%"class.absl::optional_internal::optional_data_base.1755" = type { %"class.absl::optional_internal::optional_data_dtor_base.1756" }
%"class.absl::optional_internal::optional_data_dtor_base.1756" = type { i8, %union.anon.1757 }
%union.anon.1757 = type { i64 }
%"class.absl::optional.1073" = type { %"class.absl::optional_internal::optional_data.1074" }
%"class.absl::optional_internal::optional_data.1074" = type { %"class.absl::optional_internal::optional_data_base.1075" }
%"class.absl::optional_internal::optional_data_base.1075" = type { %"class.absl::optional_internal::optional_data_dtor_base.1076" }
%"class.absl::optional_internal::optional_data_dtor_base.1076" = type { i8, %union.anon.1077 }
%union.anon.1077 = type { i8 }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.356 }
%class.scoped_refptr.356 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.357", %"class.WTF::AtomicString", %"class.WTF::Vector.359" }
%"class.WTF::RefCounted.357" = type { %"class.base::RefCounted.358" }
%"class.base::RefCounted.358" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.359" = type { %"class.WTF::VectorBuffer.360" }
%"class.WTF::VectorBuffer.360" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::ConditionalDestructor.1040" = type { i8 }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%class.anon = type { %"class.blink::LayoutObject"*, i8** }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.392", %"class.blink::DataRef.396", %"class.blink::DataRef.596", %"class.blink::DataRef.663", %"class.blink::DataRef.667", %"class.blink::DataRef.671", %"class.blink::DataRef.675", [20 x i8], [4 x i8] }>
%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope" = type { i8 }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.blink::TextAutosizer::LayoutScope" = type { %"class.blink::TextAutosizer"*, %"class.blink::LayoutBlock"* }
%"struct.std::__1::pair.1741" = type { i64, i64 }
%"class.WTF::Vector.1511" = type { %"class.WTF::VectorBuffer.1512" }
%"class.WTF::VectorBuffer.1512" = type { %"class.WTF::VectorBufferBase.1513" }
%"class.WTF::VectorBufferBase.1513" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1518", %"class.blink::Member.1523", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1525", i8, i32, %"class.blink::Color", %"class.absl::optional.1528", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1533", %"class.blink::Member.1535", %"class.blink::Member.1535", %"class.std::__1::unique_ptr.1538", i32, [4 x i8], %"class.WTF::HashSet.1541", %"class.blink::Member.1548", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1550", %"class.blink::HeapHashSet.1557", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1563", i8, %"class.blink::Member.1569", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1584", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1598", i8, %"class.std::__1::unique_ptr.1604", %"class.std::__1::unique_ptr.1680", %"class.WTF::Vector.1686", i32, %class.scoped_refptr.1691, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1692", %"class.blink::Member.1694", %"class.blink::Member.1696", %"class.blink::HeapHashSet.1698", %"class.blink::HeapHashSet.1705", %"class.std::__1::unique_ptr.1712", %"class.std::__1::unique_ptr.1719", %"class.WTF::Vector.720" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1518" = type { %"class.WTF::HashTable.1519" }
%"class.WTF::HashTable.1519" = type <{ %class.scoped_refptr.1522*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1522 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1525" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1526", { i64, i64 } }
%"class.blink::WeakMember.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1528" = type { %"class.absl::optional_internal::optional_data.1529" }
%"class.absl::optional_internal::optional_data.1529" = type { %"class.absl::optional_internal::optional_data_base.1530" }
%"class.absl::optional_internal::optional_data_base.1530" = type { %"class.absl::optional_internal::optional_data_dtor_base.1531" }
%"class.absl::optional_internal::optional_data_dtor_base.1531" = type { i8, %union.anon.1532 }
%union.anon.1532 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::HeapHashSet.1537"* }
%"class.blink::HeapHashSet.1537" = type opaque
%"class.std::__1::unique_ptr.1538" = type { %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { %"class.WTF::HashSet.1541"* }
%"class.WTF::HashSet.1541" = type { %"class.WTF::HashTable.1542" }
%"class.WTF::HashTable.1542" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1550" = type { %"class.WTF::HashSet.1553" }
%"class.WTF::HashSet.1553" = type { %"class.WTF::HashTable.1554" }
%"class.WTF::HashTable.1554" = type <{ %"class.blink::Member.1556"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1556" = type opaque
%"class.blink::HeapHashSet.1557" = type { %"class.WTF::HashSet.1560" }
%"class.WTF::HashSet.1560" = type { %"class.WTF::HashTable.1561" }
%"class.WTF::HashTable.1561" = type <{ %"class.blink::Member.731"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1563" = type { %"class.std::__1::__compressed_pair.1564" }
%"class.std::__1::__compressed_pair.1564" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"struct.std::__1::__compressed_pair_elem.1565" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet.1573" }
%"class.WTF::LinkedHashSet.1573" = type { %"class.WTF::HashMap.1574", %"class.WTF::VectorBackedLinkedList.1578" }
%"class.WTF::HashMap.1574" = type { %"class.WTF::HashTable.1575" }
%"class.WTF::HashTable.1575" = type <{ %"struct.WTF::KeyValuePair.1577"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1577" = type opaque
%"class.WTF::VectorBackedLinkedList.1578" = type { %"class.WTF::Vector.1579", i32, i32 }
%"class.WTF::Vector.1579" = type { %"class.WTF::VectorBuffer.1580" }
%"class.WTF::VectorBuffer.1580" = type { %"class.WTF::VectorBufferBase.1581" }
%"class.WTF::VectorBufferBase.1581" = type { %"class.WTF::VectorBackedLinkedListNode.1582"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1582" = type opaque
%"class.blink::HeapLinkedHashSet.1584" = type { %"class.WTF::LinkedHashSet.1587" }
%"class.WTF::LinkedHashSet.1587" = type { %"class.WTF::HashMap.1588", %"class.WTF::VectorBackedLinkedList.1592" }
%"class.WTF::HashMap.1588" = type { %"class.WTF::HashTable.1589" }
%"class.WTF::HashTable.1589" = type <{ %"struct.WTF::KeyValuePair.1591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1591" = type opaque
%"class.WTF::VectorBackedLinkedList.1592" = type { %"class.WTF::Vector.1593", i32, i32 }
%"class.WTF::Vector.1593" = type { %"class.WTF::VectorBuffer.1594" }
%"class.WTF::VectorBuffer.1594" = type { %"class.WTF::VectorBufferBase.1595" }
%"class.WTF::VectorBufferBase.1595" = type { %"class.WTF::VectorBackedLinkedListNode.1596"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1596" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1598" = type { %"class.std::__1::__compressed_pair.1599" }
%"class.std::__1::__compressed_pair.1599" = type { %"struct.std::__1::__compressed_pair_elem.1600" }
%"struct.std::__1::__compressed_pair_elem.1600" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1607, %class.scoped_refptr.1607, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1657", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1662", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1607 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1608", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1615" }
%"class.WTF::RefCounted.1608" = type { %"class.base::RefCounted.1609" }
%"class.base::RefCounted.1609" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1610", i32, [4 x i8] }>
%"class.WTF::Vector.1610" = type { %"class.WTF::VectorBuffer.1611" }
%"class.WTF::VectorBuffer.1611" = type { %"class.WTF::VectorBufferBase.1612" }
%"class.WTF::VectorBufferBase.1612" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1615" = type { %"class.WTF::VectorBuffer.1616" }
%"class.WTF::VectorBuffer.1616" = type { %"class.WTF::VectorBufferBase.1617" }
%"class.WTF::VectorBufferBase.1617" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1618", %"class.std::__1::unique_ptr.1629", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1618" = type { %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1621", %"class.WTF::Vector.753", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1621" = type { %"class.WTF::VectorBuffer.1622" }
%"class.WTF::VectorBuffer.1622" = type { %"class.WTF::VectorBufferBase.1623" }
%"class.WTF::VectorBufferBase.1623" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1632", %"class.absl::optional.1632" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, [3 x i8], %union.anon.1636 }
%union.anon.1636 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1615"*, %"class.absl::optional.1642", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1647", %"class.WTF::Vector.1652" }
%"class.WTF::Vector.1647" = type { %"class.WTF::VectorBuffer.1648" }
%"class.WTF::VectorBuffer.1648" = type { %"class.WTF::VectorBufferBase.1649", [128 x i8] }
%"class.WTF::VectorBufferBase.1649" = type { i32*, i32, i32 }
%"class.WTF::Vector.1652" = type { %"class.WTF::VectorBuffer.1653" }
%"class.WTF::VectorBuffer.1653" = type { %"class.WTF::VectorBufferBase.1654", [128 x i8] }
%"class.WTF::VectorBufferBase.1654" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1657" = type { %"class.WTF::VectorBuffer.1658" }
%"class.WTF::VectorBuffer.1658" = type { %"class.WTF::VectorBufferBase.1659" }
%"class.WTF::VectorBufferBase.1659" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1662" = type { %"class.WTF::HashTable.1663" }
%"class.WTF::HashTable.1663" = type <{ %"struct.WTF::KeyValuePair.1666"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1666" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1667", %"class.WTF::Vector.1672" }
%"class.WTF::HashMap.1667" = type { %"class.WTF::HashTable.1668" }
%"class.WTF::HashTable.1668" = type <{ %"struct.WTF::KeyValuePair.1671"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1671" = type opaque
%"class.WTF::Vector.1672" = type { %"class.WTF::VectorBuffer.1673" }
%"class.WTF::VectorBuffer.1673" = type { %"class.WTF::VectorBufferBase.1674" }
%"class.WTF::VectorBufferBase.1674" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1680" = type { %"class.std::__1::__compressed_pair.1681" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.1682" }
%"struct.std::__1::__compressed_pair_elem.1682" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1686" = type { %"class.WTF::VectorBuffer.1687" }
%"class.WTF::VectorBuffer.1687" = type { %"class.WTF::VectorBufferBase.1688" }
%"class.WTF::VectorBufferBase.1688" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1691 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1694" = type { %"class.blink::MemberBase.1695" }
%"class.blink::MemberBase.1695" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1696" = type { %"class.blink::MemberBase.1697" }
%"class.blink::MemberBase.1697" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1698" = type { %"class.WTF::HashSet.1701" }
%"class.WTF::HashSet.1701" = type { %"class.WTF::HashTable.1702" }
%"class.WTF::HashTable.1702" = type <{ %"class.blink::WeakMember.1704"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1704" = type opaque
%"class.blink::HeapHashSet.1705" = type { %"class.WTF::HashSet.1708" }
%"class.WTF::HashSet.1708" = type { %"class.WTF::HashTable.1709" }
%"class.WTF::HashTable.1709" = type <{ %"class.blink::WeakMember.1711"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1711" = type opaque
%"class.std::__1::unique_ptr.1712" = type { %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.1714" }
%"struct.std::__1::__compressed_pair_elem.1714" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1715" }
%"class.base::time_internal::TimeBase.1715" = type { i64 }
%"class.std::__1::unique_ptr.1719" = type { %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.1721" }
%"struct.std::__1::__compressed_pair_elem.1721" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1722", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { %"class.base::Time" }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.1829", %"class.blink::WeakMember.1141", i32, [4 x i8], %"class.blink::HeapHashSet.1830", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.1836", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.1829" = type { %"class.blink::MemberBase.344" }
%"class.blink::HeapHashSet.1830" = type { %"class.WTF::HashSet.1833" }
%"class.WTF::HashSet.1833" = type { %"class.WTF::HashTable.1834" }
%"class.WTF::HashTable.1834" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.absl::optional.1836" = type { %"class.absl::optional_internal::optional_data.1837" }
%"class.absl::optional_internal::optional_data.1837" = type { %"class.absl::optional_internal::optional_data_base.1838" }
%"class.absl::optional_internal::optional_data_base.1838" = type { %"class.absl::optional_internal::optional_data_dtor_base.1839" }
%"class.absl::optional_internal::optional_data_dtor_base.1839" = type { i8, %union.anon.1840 }
%union.anon.1840 = type { %"class.blink::FloatSize" }
%"class.WTF::ListHashSet" = type { %"class.WTF::HashTable.1745", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider" }
%"class.WTF::HashTable.1745" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.blink::LayoutBox"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [384 x i8] }
%"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper" = type { %"class.WTF::VectorBackedLinkedListConstIterator", %"struct.WTF::HashTableConstIteratorAdapter" }
%"class.WTF::VectorBackedLinkedListConstIterator" = type { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"* }
%"class.blink::Grid::GridIterator" = type { i32 (...)**, i32, i64, i64, i64 }
%"class.blink::OrderIteratorPopulator" = type { %"class.blink::OrderIterator"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.WTF::HashMap.1736" = type { %"class.WTF::HashTable.1737" }
%"class.WTF::HashTable.1737" = type <{ %"struct.WTF::KeyValuePair.1740"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1740" = type { i32, i32 }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.WTF::Vector.1748" = type { %"class.WTF::VectorBuffer.1749" }
%"class.WTF::VectorBuffer.1749" = type { %"class.WTF::VectorBufferBase.1513", [8 x i8] }
%"struct.blink::PaintInfo" = type opaque
%"class.blink::BlockPainter" = type { %"class.blink::LayoutBlock"* }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type opaque
%"class.blink::LayoutNGTableSectionInterface" = type opaque
%"class.blink::LayoutNGTableRowInterface" = type opaque
%"class.blink::LayoutNGTableCellInterface" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.731", i8, %"class.blink::Member.1758", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::HeapLinkedHashSet.1760"* }
%"class.blink::HeapLinkedHashSet.1760" = type opaque
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.WTF::Vector.1761" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.787", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.WTF::Vector.1762" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1815" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1815" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1802", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.1802" = type { %"class.std::__1::__vector_base.1803" }
%"class.std::__1::__vector_base.1803" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1810" }
%"class.std::__1::__compressed_pair.1810" = type { %"struct.std::__1::__compressed_pair_elem.1811" }
%"struct.std::__1::__compressed_pair_elem.1811" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1804", i64, i64 }
%"class.std::__1::unique_ptr.1804" = type { %"class.std::__1::__compressed_pair.1805" }
%"class.std::__1::__compressed_pair.1805" = type { %"struct.std::__1::__compressed_pair_elem.1806" }
%"struct.std::__1::__compressed_pair_elem.1806" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink24GridTrackSizingAlgorithmD2Ev = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv = comdat any

$_ZNK5blink9LayoutBox20ContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox19ClientLogicalBottomEv = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE4findERKm = comdat any

$_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv = comdat any

$_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE6insertIRmEENS4_9AddResultEOT_ = comdat any

$_ZNK5blink10LayoutGrid27SelfAlignmentNormalBehaviorEPKNS_9LayoutBoxE = comdat any

$_ZNK5blink10LayoutGrid27AutoRepeatCountForDirectionENS_24GridTrackSizingDirectionE = comdat any

$_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEN4absl8optionalImEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSA_IS7_EENS_18PartitionAllocatorEE2atERKS4_ = comdat any

$_ZNK5blink10LayoutGrid29ExplicitGridStartForDirectionENS_24GridTrackSizingDirectionE = comdat any

$_ZNK5blink10LayoutGrid7GetNameEv = comdat any

$_ZN5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink11LayoutBlock13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink10LayoutGrid23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink10LayoutGrid8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE = comdat any

$_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv = comdat any

$_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink9LayoutBox20CollapsedMarginAfterEv = comdat any

$_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv = comdat any

$_ZNK5blink11LayoutBlock15CurrentFragmentEv = comdat any

$_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ = comdat any

$_ZNK5blink10LayoutGrid15ColumnPositionsEv = comdat any

$_ZNK5blink10LayoutGrid12RowPositionsEv = comdat any

$_ZThn240_NK5blink10LayoutGrid29ExplicitGridStartForDirectionENS_24GridTrackSizingDirectionE = comdat any

$_ZThn240_NK5blink10LayoutGrid27AutoRepeatCountForDirectionENS_24GridTrackSizingDirectionE = comdat any

$_ZThn240_NK5blink10LayoutGrid12RowPositionsEv = comdat any

$_ZThn240_NK5blink10LayoutGrid15ColumnPositionsEv = comdat any

$_ZN5blink21GridBaselineAlignmentD2Ev = comdat any

$_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm = comdat any

$_ZN3WTFeqINS_6StringENS_6VectorImLj0ENS_18PartitionAllocatorEEENS_10StringHashENS_10HashTraitsIS1_EENS6_IS4_EES3_EEbRKNS_7HashMapIT_T0_T1_T2_T3_T4_EESI_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E4findERKS1_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE4findERKm = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeImS0_EEEEmm = comdat any

$_ZN3WTF22VectorBackedLinkedListImNS_18PartitionAllocatorEE6insertIRmEENS_30VectorBackedLinkedListIteratorIS2_EENS_35VectorBackedLinkedListConstIteratorIS2_EEOT_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERmRKjEENS_18HashTableAddResultISD_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKm = comdat any

$_ZN3WTF6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjmEENS_18HashTableAddResultISD_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_ = comdat any

$_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIPN5blink9LayoutBoxELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES4_RmEENS_18HashTableAddResultISJ_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSK_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

@_ZTVN5blink10LayoutGridE = hidden unnamed_addr constant { [222 x i8*], [7 x i8*], [10 x i8*] } { [222 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutGrid"*)* @_ZN5blink10LayoutGridD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutGrid"*)* @_ZN5blink10LayoutGridD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i8*, i32)* @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutGrid"*)* @_ZNK5blink10LayoutGrid7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutGrid"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink10LayoutGrid8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutGrid"*, %"class.blink::LayoutObject"*)* @_ZN5blink10LayoutGrid11RemoveChildEPNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutGrid"*)* @_ZNK5blink10LayoutGrid23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1223"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void ()* @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.1761"*, i32)* @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.WTF::Vector.1762"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8)* @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutGrid"*, i32)* @_ZNK5blink10LayoutGrid8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutGrid"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink10LayoutGrid14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)* @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutGrid"*, i32, i1, i32, i32)* @_ZNK5blink10LayoutGrid16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.1761"*, i32)* @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.1761"*)* @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutGrid"*)* @_ZNK5blink10LayoutGrid20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutGrid"*, i32)* @_ZNK5blink10LayoutGrid19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutGrid"*)* @_ZNK5blink10LayoutGrid29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"*)* @_ZNK5blink10LayoutGrid27SelfAlignmentNormalBehaviorEPKNS_9LayoutBoxE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink11LayoutBlock15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15CurrentFragmentEv to i8*), i8* bitcast (void (%"class.blink::LayoutGrid"*, i1)* @_ZN5blink10LayoutGrid17UpdateBlockLayoutEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i1, i32)* @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutGrid"*, i1, i32)* @_ZN5blink10LayoutGrid23LayoutPositionedObjectsEbNS_11LayoutBlock24PositionedLayoutBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutGrid"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink10LayoutGrid13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1)* @_ZN5blink11LayoutBlock21ComputeVisualOverflowEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, i1)* @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv to i8*), i8* bitcast (void (%"class.WTF::Vector.1063"*, %"class.blink::LayoutGrid"*, i32)* @_ZNK5blink10LayoutGrid26TrackSizesForComputedStyleENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (void (%"class.WTF::Vector.1063"*, %"class.blink::LayoutGrid"*)* @_ZNK5blink10LayoutGrid15ColumnPositionsEv to i8*), i8* bitcast (void (%"class.WTF::Vector.1063"*, %"class.blink::LayoutGrid"*)* @_ZNK5blink10LayoutGrid12RowPositionsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutGrid"*, i32)* @_ZNK5blink10LayoutGrid27AutoRepeatCountForDirectionENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (i64 (%"class.blink::LayoutGrid"*, i32)* @_ZNK5blink10LayoutGrid29ExplicitGridStartForDirectionENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (i32 (%"class.blink::LayoutGrid"*, i32)* @_ZNK5blink10LayoutGrid7GridGapENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (i32 (%"class.blink::LayoutGrid"*, i32)* @_ZNK5blink10LayoutGrid14GridItemOffsetENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (i64 (%"class.blink::LayoutGrid"*, i32)* @_ZNK5blink10LayoutGrid27ExplicitGridEndForDirectionENS_24GridTrackSizingDirectionE to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutGrid"*)* @_ZThn8_N5blink10LayoutGridD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutGrid"*)* @_ZThn8_N5blink10LayoutGridD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -240 to i8*), i8* null, i8* bitcast (i64 (%"class.blink::LayoutGrid"*, i32)* @_ZThn240_NK5blink10LayoutGrid29ExplicitGridStartForDirectionENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (i64 (%"class.blink::LayoutGrid"*, i32)* @_ZThn240_NK5blink10LayoutGrid27ExplicitGridEndForDirectionENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (i64 (%"class.blink::LayoutGrid"*, i32)* @_ZThn240_NK5blink10LayoutGrid27AutoRepeatCountForDirectionENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (void (%"class.WTF::Vector.1063"*, %"class.blink::LayoutGrid"*, i32)* @_ZThn240_NK5blink10LayoutGrid26TrackSizesForComputedStyleENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (void (%"class.WTF::Vector.1063"*, %"class.blink::LayoutGrid"*)* @_ZThn240_NK5blink10LayoutGrid12RowPositionsEv to i8*), i8* bitcast (void (%"class.WTF::Vector.1063"*, %"class.blink::LayoutGrid"*)* @_ZThn240_NK5blink10LayoutGrid15ColumnPositionsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutGrid"*, i32)* @_ZThn240_NK5blink10LayoutGrid7GridGapENS_24GridTrackSizingDirectionE to i8*), i8* bitcast (i32 (%"class.blink::LayoutGrid"*, i32)* @_ZThn240_NK5blink10LayoutGrid14GridItemOffsetENS_24GridTrackSizingDirectionE to i8*)] }, align 8
@_ZN5blink26layout_invalidation_reason12kGridChangedE = external constant [0 x i8], align 1
@__const._ZNK5blink10LayoutGrid28ComputeAutoRepeatTracksCountENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE.auto_track_size = private unnamed_addr constant %"class.blink::GridTrackSize" <{ i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::GridLength" <{ %"class.blink::Length" <{ %union.anon.243 { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }>, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.blink::GridLength" <{ %"class.blink::Length" <{ %union.anon.243 { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }>, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.blink::GridLength" <{ %"class.blink::Length" <{ %union.anon.243 { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }>, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior = internal global %"class.blink::StyleContentAlignmentData" zeroinitializer, align 4
@_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior = internal global i64 0, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"LayoutGrid\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutUnit]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [145 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::VectorBackedLinkedListNode<unsigned long, WTF::PartitionAllocator>]\00", align 1
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairImjEEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned long, unsigned int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutBox *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjjEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, unsigned int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEN4absl8optionalImEEEEEEPKcv = private unnamed_addr constant [123 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutBox *, absl::optional<unsigned long> >]\00", align 1
@switch.table._ZN5blink10LayoutGrid43ComputeContentPositionAndDistributionOffsetENS_24GridTrackSizingDirectionERKNS_10LayoutUnitEj = private unnamed_addr constant [4 x i32] [i32 4, i32 3, i32 3, i32 4], align 4

@_ZN5blink10LayoutGridC1EPNS_7ElementE = hidden unnamed_addr alias void (%"class.blink::LayoutGrid"*, %"class.blink::Element"*), void (%"class.blink::LayoutGrid"*, %"class.blink::Element"*)* @_ZN5blink10LayoutGridC2EPNS_7ElementE
@_ZN5blink10LayoutGridD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutGrid"*), void (%"class.blink::LayoutGrid"*)* @_ZN5blink10LayoutGridD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGridC2EPNS_7ElementE(%"class.blink::LayoutGrid"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutBlock"*
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  tail call void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"* %3, %"class.blink::ContainerNode"* %4) #17
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 2, i32 0
  %6 = bitcast %"class.blink::LayoutGrid"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [222 x i8*], [7 x i8*], [10 x i8*] }, { [222 x i8*], [7 x i8*], [10 x i8*] }* @_ZTVN5blink10LayoutGridE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [222 x i8*], [7 x i8*], [10 x i8*] }, { [222 x i8*], [7 x i8*], [10 x i8*] }* @_ZTVN5blink10LayoutGridE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [222 x i8*], [7 x i8*], [10 x i8*] }, { [222 x i8*], [7 x i8*], [10 x i8*] }* @_ZTVN5blink10LayoutGridE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = tail call %"class.blink::Grid"* @_ZN5blink4Grid6CreateEPKNS_10LayoutGridE(%"class.blink::LayoutGrid"* %0) #17
  %8 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.blink::Grid"* %7, %"class.blink::Grid"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 0
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 1
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 6
  %16 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 12
  %17 = bitcast %"class.WTF::Vector.1032"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 80, i1 false) #17
  store %"class.blink::Grid"* %7, %"class.blink::Grid"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 13
  store %"class.blink::LayoutGrid"* %0, %"class.blink::LayoutGrid"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 14
  %20 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 19, i32 2
  %21 = bitcast %"class.WTF::HashMap.1053"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 20, i1 false) #17
  %22 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 19, i32 3
  %23 = bitcast %"class.WTF::HashMap.1053"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #17
  %24 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 20
  %25 = bitcast %"class.WTF::HashMap.1058"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 20, i1 false) #17
  %26 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 21
  %27 = bitcast %"class.WTF::HashMap.1058"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 20, i1 false) #17
  %28 = bitcast %"class.std::__1::unique_ptr.1047"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 20, i1 false) #17
  %29 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5
  %30 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 7, i32 0, i32 0
  %31 = bitcast %"class.WTF::Vector.1063"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false)
  %32 = bitcast i32* %30 to <4 x i32>*
  store <4 x i32> <i32 -64, i32 -64, i32 -64, i32 -64>, <4 x i32>* %32, align 4
  %33 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 9
  %34 = bitcast %"class.WTF::HashMap.1068"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 20, i1 false) #17
  %35 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 10
  %36 = bitcast %"class.WTF::HashMap.1068"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 20, i1 false) #17
  %37 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 11
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 12
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 1
  ret void
}

declare void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"*, %"class.blink::ContainerNode"*) unnamed_addr #1

declare %"class.blink::Grid"* @_ZN5blink4Grid6CreateEPKNS_10LayoutGridE(%"class.blink::LayoutGrid"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGridD2Ev(%"class.blink::LayoutGrid"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutGrid"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [222 x i8*], [7 x i8*], [10 x i8*] }, { [222 x i8*], [7 x i8*], [10 x i8*] }* @_ZTVN5blink10LayoutGridE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [222 x i8*], [7 x i8*], [10 x i8*] }, { [222 x i8*], [7 x i8*], [10 x i8*] }* @_ZTVN5blink10LayoutGridE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [222 x i8*], [7 x i8*], [10 x i8*] }, { [222 x i8*], [7 x i8*], [10 x i8*] }* @_ZTVN5blink10LayoutGridE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 10, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1072"* %5, null
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"struct.WTF::KeyValuePair.1072"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #17
  store %"struct.WTF::KeyValuePair.1072"* null, %"struct.WTF::KeyValuePair.1072"** %4, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 9, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %10, align 8
  %12 = icmp eq %"struct.WTF::KeyValuePair.1072"* %11, null
  br i1 %12, label %15, label %13, !prof !2

13:                                               ; preds = %9
  %14 = bitcast %"struct.WTF::KeyValuePair.1072"* %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #17
  store %"struct.WTF::KeyValuePair.1072"* null, %"struct.WTF::KeyValuePair.1072"** %10, align 8
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %17 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutUnit"* %17, null
  %19 = bitcast %"class.blink::LayoutUnit"* %17 to i8*
  br i1 %18, label %26, label %20, !prof !2

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24, !prof !3

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #17
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %16, align 8
  br label %26

26:                                               ; preds = %15, %25
  %27 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %28 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %27, align 8
  %29 = icmp eq %"class.blink::LayoutUnit"* %28, null
  %30 = bitcast %"class.blink::LayoutUnit"* %28 to i8*
  br i1 %29, label %37, label %31, !prof !2

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35, !prof !3

35:                                               ; preds = %31
  store i32 0, i32* %32, align 4
  br label %36

36:                                               ; preds = %35, %31
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #17
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %27, align 8
  br label %37

37:                                               ; preds = %26, %36
  %38 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  tail call void @_ZN5blink24GridTrackSizingAlgorithmD2Ev(%"class.blink::GridTrackSizingAlgorithm"* %38) #17
  %39 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Grid"*, %"class.blink::Grid"** %39, align 8
  store %"class.blink::Grid"* null, %"class.blink::Grid"** %39, align 8
  %41 = icmp eq %"class.blink::Grid"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.blink::Grid"* %40 to void (%"class.blink::Grid"*)***
  %44 = load void (%"class.blink::Grid"*)**, void (%"class.blink::Grid"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Grid"*)*, void (%"class.blink::Grid"*)** %44, i64 5
  %46 = load void (%"class.blink::Grid"*)*, void (%"class.blink::Grid"*)** %45, align 8
  tail call void %46(%"class.blink::Grid"* nonnull %40) #17
  br label %47

47:                                               ; preds = %37, %42
  %48 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"* %48) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24GridTrackSizingAlgorithmD2Ev(%"class.blink::GridTrackSizingAlgorithm"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 21, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.1062"*, %"struct.WTF::KeyValuePair.1062"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.1062"* %3, null
  br i1 %4, label %7, label %5, !prof !2

5:                                                ; preds = %1
  %6 = bitcast %"struct.WTF::KeyValuePair.1062"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #17
  store %"struct.WTF::KeyValuePair.1062"* null, %"struct.WTF::KeyValuePair.1062"** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 20, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.1062"*, %"struct.WTF::KeyValuePair.1062"** %8, align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair.1062"* %9, null
  br i1 %10, label %13, label %11, !prof !2

11:                                               ; preds = %7
  %12 = bitcast %"struct.WTF::KeyValuePair.1062"* %9 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #17
  store %"struct.WTF::KeyValuePair.1062"* null, %"struct.WTF::KeyValuePair.1062"** %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 19
  tail call void @_ZN5blink21GridBaselineAlignmentD2Ev(%"class.blink::GridBaselineAlignment"* %14) #17
  %15 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %16 = load %"class.blink::GridTrackSizingAlgorithmStrategy"*, %"class.blink::GridTrackSizingAlgorithmStrategy"** %15, align 8
  store %"class.blink::GridTrackSizingAlgorithmStrategy"* null, %"class.blink::GridTrackSizingAlgorithmStrategy"** %15, align 8
  %17 = icmp eq %"class.blink::GridTrackSizingAlgorithmStrategy"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::GridTrackSizingAlgorithmStrategy"* %16 to void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)***
  %20 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)**, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %20, i64 1
  %22 = load void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)*, void (%"class.blink::GridTrackSizingAlgorithmStrategy"*)** %21, align 8
  tail call void %22(%"class.blink::GridTrackSizingAlgorithmStrategy"* nonnull %16) #17
  br label %23

23:                                               ; preds = %13, %18
  %24 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %25, null
  %27 = bitcast i64* %25 to i8*
  br i1 %26, label %34, label %28, !prof !2

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #17
  store i64* null, i64** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %36, null
  %38 = bitcast i64* %36 to i8*
  br i1 %37, label %45, label %39, !prof !2

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #17
  store i64* null, i64** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %47, null
  %49 = bitcast i64* %47 to i8*
  br i1 %48, label %56, label %50, !prof !2

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #17
  store i64* null, i64** %46, align 8
  br label %56

56:                                               ; preds = %45, %55
  %57 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 7
  %58 = bitcast %"class.WTF::Vector.1032"* %57 to %"class.WTF::ConditionalDestructor.1040"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1040"* %58) #17
  %59 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %0, i64 0, i32 6
  %60 = bitcast %"class.WTF::Vector.1032"* %59 to %"class.WTF::ConditionalDestructor.1040"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1040"* %60) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink10LayoutGridD1Ev(%"class.blink::LayoutGrid"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 -1, i32 11
  %3 = bitcast i8* %2 to %"class.blink::LayoutGrid"*
  tail call void @_ZN5blink10LayoutGridD2Ev(%"class.blink::LayoutGrid"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGridD0Ev(%"class.blink::LayoutGrid"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink10LayoutGridD2Ev(%"class.blink::LayoutGrid"* %0) #17
  %2 = bitcast %"class.blink::LayoutGrid"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink10LayoutGridD0Ev(%"class.blink::LayoutGrid"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 -1, i32 11
  %3 = bitcast i8* %2 to %"class.blink::LayoutGrid"*
  tail call void @_ZN5blink10LayoutGridD2Ev(%"class.blink::LayoutGrid"* %3) #17
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutGrid"* @_ZN5blink10LayoutGrid15CreateAnonymousEPNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 632) #17
  %3 = bitcast i8* %2 to %"class.blink::LayoutGrid"*
  %4 = bitcast i8* %2 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"* %4, %"class.blink::ContainerNode"* null) #17
  %5 = getelementptr inbounds i8, i8* %2, i64 240
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [222 x i8*], [7 x i8*], [10 x i8*] }, { [222 x i8*], [7 x i8*], [10 x i8*] }* @_ZTVN5blink10LayoutGridE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [222 x i8*], [7 x i8*], [10 x i8*] }, { [222 x i8*], [7 x i8*], [10 x i8*] }* @_ZTVN5blink10LayoutGridE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [222 x i8*], [7 x i8*], [10 x i8*] }, { [222 x i8*], [7 x i8*], [10 x i8*] }* @_ZTVN5blink10LayoutGridE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = tail call %"class.blink::Grid"* @_ZN5blink4Grid6CreateEPKNS_10LayoutGridE(%"class.blink::LayoutGrid"* %3) #17
  %9 = getelementptr inbounds i8, i8* %2, i64 248
  %10 = bitcast i8* %9 to %"class.blink::Grid"**
  store %"class.blink::Grid"* %8, %"class.blink::Grid"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 256
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 257
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %2, i64 260
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds i8, i8* %2, i64 268
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds i8, i8* %2, i64 276
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 284
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds i8, i8* %2, i64 296
  %18 = getelementptr inbounds i8, i8* %2, i64 384
  %19 = bitcast i8* %18 to %"class.blink::Grid"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 80, i1 false) #17
  store %"class.blink::Grid"* %8, %"class.blink::Grid"** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 392
  %21 = bitcast i8* %20 to i8**
  store i8* %2, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 400
  %23 = getelementptr inbounds i8, i8* %2, i64 432
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #17
  %24 = getelementptr inbounds i8, i8* %2, i64 456
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false) #17
  %25 = getelementptr inbounds i8, i8* %2, i64 480
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 20, i1 false) #17
  %26 = getelementptr inbounds i8, i8* %2, i64 504
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #17
  %27 = getelementptr inbounds i8, i8* %2, i64 528
  %28 = getelementptr inbounds i8, i8* %2, i64 560
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #17
  %29 = bitcast i8* %28 to <4 x i32>*
  store <4 x i32> <i32 -64, i32 -64, i32 -64, i32 -64>, <4 x i32>* %29, align 4
  %30 = getelementptr inbounds i8, i8* %2, i64 576
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 20, i1 false) #17
  %31 = getelementptr inbounds i8, i8* %2, i64 600
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 20, i1 false) #17
  %32 = getelementptr inbounds i8, i8* %2, i64 624
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds i8, i8* %2, i64 625
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds i8, i8* %2, i64 626
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds i8, i8* %2, i64 40
  %37 = bitcast i8* %36 to %"class.blink::Node"**
  store %"class.blink::Node"* %35, %"class.blink::Node"** %37, align 8
  ret %"class.blink::LayoutGrid"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i8* @_ZN5blink12LayoutObjectnwEm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutGrid"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"* %4, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #17
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 113336795588871485128704
  %9 = icmp eq i96 %8, 75557863725914323419136
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Grid"*, %"class.blink::Grid"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %12, i64 0, i32 6
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  tail call void @_ZN5blink4Grid22SetNeedsItemsPlacementEb(%"class.blink::Grid"* %12, i1 zeroext true) #17
  br label %17

17:                                               ; preds = %16, %10, %3
  ret void
}

declare void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid9DirtyGridEv(%"class.blink::LayoutGrid"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Grid"*, %"class.blink::Grid"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call void @_ZN5blink4Grid22SetNeedsItemsPlacementEb(%"class.blink::Grid"* %3, i1 zeroext true) #17
  br label %8

8:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid11RemoveChildEPNS_12LayoutObjectE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %1) #17
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 113336795588871485128704
  %8 = icmp eq i96 %7, 75557863725914323419136
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Grid"*, %"class.blink::Grid"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %11, i64 0, i32 6
  %13 = load i8, i8* %12, align 8, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  tail call void @_ZN5blink4Grid22SetNeedsItemsPlacementEb(%"class.blink::Grid"* %11, i1 zeroext true) #17
  br label %16

16:                                               ; preds = %15, %9, %2
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid21SelfAlignmentForChildENS_8GridAxisERKNS_9LayoutBoxEPKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* nocapture readonly, i32, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::ComputedStyle"*) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, 0
  %6 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %5, label %7, label %23

7:                                                ; preds = %4
  br i1 %6, label %8, label %11

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  br label %11

11:                                               ; preds = %7, %8
  %12 = phi %"class.blink::ComputedStyle"* [ %3, %7 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %17 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, i64 92
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutObject"* %13, i32 39) #17
  %21 = select i1 %20, i32 7, i32 3
  %22 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %15, i32 %21, %"class.blink::ComputedStyle"* %12) #17
  br label %39

23:                                               ; preds = %4
  br i1 %6, label %24, label %27

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %26 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  br label %27

27:                                               ; preds = %23, %24
  %28 = phi %"class.blink::ComputedStyle"* [ %3, %23 ], [ %26, %24 ]
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %29, i32 39) #17
  %37 = select i1 %36, i32 7, i32 3
  %38 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %31, i32 %37, %"class.blink::ComputedStyle"* %28) #17
  br label %39

39:                                               ; preds = %27, %11
  %40 = phi i32 [ %22, %11 ], [ %38, %27 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid19JustifySelfForChildERKNS_9LayoutBoxEPKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::ComputedStyle"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  br label %8

8:                                                ; preds = %3, %5
  %9 = phi %"class.blink::ComputedStyle"* [ %2, %3 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %14 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, i64 92
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutObject"* %10, i32 39) #17
  %18 = select i1 %17, i32 7, i32 3
  %19 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %12, i32 %18, %"class.blink::ComputedStyle"* %9) #17
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid17AlignSelfForChildERKNS_9LayoutBoxEPKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::ComputedStyle"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  br label %8

8:                                                ; preds = %3, %5
  %9 = phi %"class.blink::ComputedStyle"* [ %2, %3 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %14 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, i64 92
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutObject"* %10, i32 39) #17
  %18 = select i1 %17, i32 7, i32 3
  %19 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %12, i32 %18, %"class.blink::ComputedStyle"* %9) #17
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid16DefaultAlignmentENS_8GridAxisERKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* nocapture readnone, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %2, i32 2) #17
  br label %9

7:                                                ; preds = %3
  %8 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %2, i32 2) #17
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi i32 [ %6, %5 ], [ %8, %7 ]
  ret i32 %10
}

declare i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid33DefaultAlignmentIsStretchOrNormalENS_8GridAxisERKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* nocapture readnone, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %2, i32 2) #17
  br label %9

7:                                                ; preds = %3
  %8 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %2, i32 2) #17
  br label %9

9:                                                ; preds = %5, %7
  %10 = phi i32 [ %6, %5 ], [ %8, %7 ]
  %11 = and i32 %10, 14
  %12 = or i32 %11, 1
  %13 = icmp eq i32 %12, 3
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid24SelfAlignmentChangedSizeENS_8GridAxisERKNS_13ComputedStyleES4_RKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* nocapture readonly, i32, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %1, 0
  %7 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %6, label %8, label %12

8:                                                ; preds = %5
  br i1 %7, label %9, label %16

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  br label %16

12:                                               ; preds = %5
  br i1 %7, label %13, label %43

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  br label %43

16:                                               ; preds = %8, %9
  %17 = phi %"class.blink::ComputedStyle"* [ %2, %8 ], [ %11, %9 ]
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = bitcast %"class.blink::LayoutBox"* %4 to i1 (%"class.blink::LayoutObject"*, i32)***
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, i64 92
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::LayoutObject"* %18, i32 39) #17
  %26 = select i1 %25, i32 7, i32 3
  %27 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %20, i32 %26, %"class.blink::ComputedStyle"* %17) #17
  %28 = and i32 %27, 15
  %29 = icmp eq i32 %28, 3
  %30 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %16
  %32 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  br label %34

34:                                               ; preds = %31, %16
  %35 = phi %"class.blink::ComputedStyle"* [ %3, %16 ], [ %33, %31 ]
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %21, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %18, i32 39) #17
  %41 = select i1 %40, i32 7, i32 3
  %42 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %36, i32 %41, %"class.blink::ComputedStyle"* %35) #17
  br i1 %29, label %70, label %74

43:                                               ; preds = %13, %12
  %44 = phi %"class.blink::ComputedStyle"* [ %2, %12 ], [ %15, %13 ]
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0, i32 5, i32 0
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %46, align 8
  %48 = bitcast %"class.blink::LayoutBox"* %4 to i1 (%"class.blink::LayoutObject"*, i32)***
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, i64 92
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %45, i32 39) #17
  %53 = select i1 %52, i32 7, i32 3
  %54 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %47, i32 %53, %"class.blink::ComputedStyle"* %44) #17
  %55 = and i32 %54, 15
  %56 = icmp eq i32 %55, 3
  %57 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %60 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %59, align 8
  br label %61

61:                                               ; preds = %43, %58
  %62 = phi %"class.blink::ComputedStyle"* [ %3, %43 ], [ %60, %58 ]
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %46, align 8
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %48, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, i64 92
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::LayoutObject"* %45, i32 39) #17
  %68 = select i1 %67, i32 7, i32 3
  %69 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %63, i32 %68, %"class.blink::ComputedStyle"* %62) #17
  br i1 %56, label %70, label %74

70:                                               ; preds = %34, %61
  %71 = phi i32 [ %42, %34 ], [ %69, %61 ]
  %72 = and i32 %71, 15
  %73 = icmp ne i32 %72, 3
  br label %78

74:                                               ; preds = %34, %61
  %75 = phi i32 [ %42, %34 ], [ %69, %61 ]
  %76 = and i32 %75, 15
  %77 = icmp eq i32 %76, 3
  br label %78

78:                                               ; preds = %74, %70
  %79 = phi i1 [ %73, %70 ], [ %77, %74 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid27DefaultAlignmentChangedSizeENS_8GridAxisERKNS_13ComputedStyleES4_(%"class.blink::LayoutGrid"* nocapture readnone, i32, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %2, i32 2) #17
  br label %10

8:                                                ; preds = %4
  %9 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %2, i32 2) #17
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi i32 [ %7, %6 ], [ %9, %8 ]
  %12 = and i32 %11, 14
  %13 = or i32 %12, 1
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %15, label %28

15:                                               ; preds = %10
  br i1 %5, label %16, label %19

16:                                               ; preds = %15
  %17 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %2, i32 2) #17
  %18 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %3, i32 2) #17
  br label %22

19:                                               ; preds = %15
  %20 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %2, i32 2) #17
  %21 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %3, i32 2) #17
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i32 [ %17, %16 ], [ %20, %19 ]
  %24 = phi i32 [ %18, %16 ], [ %21, %19 ]
  %25 = xor i32 %24, %23
  %26 = and i32 %25, 15
  %27 = icmp ne i32 %26, 0
  br label %38

28:                                               ; preds = %10
  br i1 %5, label %29, label %31

29:                                               ; preds = %28
  %30 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %3, i32 2) #17
  br label %33

31:                                               ; preds = %28
  %32 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %3, i32 2) #17
  br label %33

33:                                               ; preds = %29, %31
  %34 = phi i32 [ %30, %29 ], [ %32, %31 ]
  %35 = and i32 %34, 14
  %36 = or i32 %35, 1
  %37 = icmp eq i32 %36, 3
  br label %38

38:                                               ; preds = %33, %22
  %39 = phi i1 [ %27, %22 ], [ %37, %33 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutGrid"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlock"* %4, i32 %1, %"class.blink::ComputedStyle"* %2) #17
  %5 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %5, label %191, label %6

6:                                                ; preds = %3
  %7 = trunc i32 %1 to i24
  %8 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = and i24 %7, 6
  %11 = icmp eq i24 %10, 4
  br i1 %11, label %12, label %145

12:                                               ; preds = %6
  %13 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* nonnull %2, i32 2) #17
  %14 = and i32 %13, 14
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* nonnull %2, i32 2) #17
  %19 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %9, i32 2) #17
  %20 = xor i32 %19, %18
  %21 = and i32 %20, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %44

23:                                               ; preds = %12
  %24 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedJustifyItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %9, i32 2) #17
  %25 = and i32 %24, 14
  %26 = or i32 %25, 1
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %44, label %28

28:                                               ; preds = %17, %23
  %29 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* nonnull %2, i32 2) #17
  %30 = and i32 %29, 14
  %31 = or i32 %30, 1
  %32 = icmp eq i32 %31, 3
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* nonnull %2, i32 2) #17
  %35 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %9, i32 2) #17
  %36 = xor i32 %35, %34
  %37 = and i32 %36, 15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %145, label %44

39:                                               ; preds = %28
  %40 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* %9, i32 2) #17
  %41 = and i32 %40, 14
  %42 = or i32 %41, 1
  %43 = icmp eq i32 %42, 3
  br i1 %43, label %44, label %145

44:                                               ; preds = %17, %33, %39, %23
  %45 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %47 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %47, i64 13
  %49 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %48, align 8
  %50 = tail call %"class.blink::LayoutObjectChildList"* %49(%"class.blink::LayoutObject"* %45) #17
  %51 = icmp eq %"class.blink::LayoutObjectChildList"* %50, null
  br i1 %51, label %145, label %52

52:                                               ; preds = %44
  %53 = bitcast %"class.blink::LayoutObjectChildList"* %50 to %"class.blink::LayoutBox"**
  %54 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutBox"* %54, null
  br i1 %55, label %145, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %54, i64 0, i32 0, i32 0, i32 4
  %58 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %57 to i96*
  %59 = load i96, i96* %58, align 4
  %60 = and i96 %59, 113336795588871485128704
  %61 = icmp eq i96 %60, 75557863725914323419136
  br i1 %61, label %62, label %74

62:                                               ; preds = %56, %68
  %63 = phi %"class.blink::LayoutBox"* [ %66, %68 ], [ %54, %56 ]
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %63, i64 0, i32 0, i32 0, i32 9
  %65 = bitcast %"class.blink::LayoutObject"** %64 to %"class.blink::LayoutBox"**
  %66 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %65, align 8
  %67 = icmp eq %"class.blink::LayoutBox"* %66, null
  br i1 %67, label %145, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 0, i32 0, i32 4
  %70 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %69 to i96*
  %71 = load i96, i96* %70, align 4
  %72 = and i96 %71, 113336795588871485128704
  %73 = icmp eq i96 %72, 75557863725914323419136
  br i1 %73, label %62, label %74

74:                                               ; preds = %68, %56
  %75 = phi %"class.blink::LayoutBox"* [ %54, %56 ], [ %66, %68 ]
  %76 = icmp eq %"class.blink::ComputedStyle"* %9, null
  br label %77

77:                                               ; preds = %139, %74
  %78 = phi %"class.blink::LayoutBox"* [ %75, %74 ], [ %137, %139 ]
  %79 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %78, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %78, i64 0, i32 0, i32 0, i32 5, i32 0
  %81 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %80, align 8
  %82 = bitcast %"class.blink::LayoutBox"* %78 to i1 (%"class.blink::LayoutObject"*, i32)***
  %83 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %82, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %83, i64 92
  %85 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::LayoutObject"* %79, i32 39) #17
  %87 = select i1 %86, i32 7, i32 3
  %88 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %81, i32 %87, %"class.blink::ComputedStyle"* nonnull %2) #17
  %89 = and i32 %88, 15
  %90 = icmp eq i32 %89, 3
  br i1 %76, label %91, label %93

91:                                               ; preds = %77
  %92 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  br label %93

93:                                               ; preds = %91, %77
  %94 = phi %"class.blink::ComputedStyle"* [ %9, %77 ], [ %92, %91 ]
  %95 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %80, align 8
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %82, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, i64 92
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.blink::LayoutObject"* %79, i32 39) #17
  %100 = select i1 %99, i32 7, i32 3
  %101 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %95, i32 %100, %"class.blink::ComputedStyle"* %94) #17
  %102 = and i32 %101, 15
  %103 = icmp eq i32 %102, 3
  br i1 %90, label %104, label %105

104:                                              ; preds = %93
  br i1 %103, label %106, label %131

105:                                              ; preds = %93
  br i1 %103, label %131, label %106

106:                                              ; preds = %104, %105
  %107 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %80, align 8
  %108 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %82, align 8
  %109 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %108, i64 92
  %110 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.blink::LayoutObject"* %79, i32 39) #17
  %112 = select i1 %111, i32 7, i32 3
  %113 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %107, i32 %112, %"class.blink::ComputedStyle"* nonnull %2) #17
  %114 = and i32 %113, 15
  %115 = icmp eq i32 %114, 3
  br i1 %76, label %116, label %118

116:                                              ; preds = %106
  %117 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  br label %118

118:                                              ; preds = %116, %106
  %119 = phi %"class.blink::ComputedStyle"* [ %9, %106 ], [ %117, %116 ]
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %80, align 8
  %121 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %82, align 8
  %122 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %121, i64 92
  %123 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %122, align 8
  %124 = tail call zeroext i1 %123(%"class.blink::LayoutObject"* %79, i32 39) #17
  %125 = select i1 %124, i32 7, i32 3
  %126 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %120, i32 %125, %"class.blink::ComputedStyle"* %119) #17
  %127 = and i32 %126, 15
  %128 = icmp eq i32 %127, 3
  br i1 %115, label %129, label %130

129:                                              ; preds = %118
  br i1 %128, label %132, label %131

130:                                              ; preds = %118
  br i1 %128, label %131, label %132

131:                                              ; preds = %104, %129, %130, %105
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %79, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kGridChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null)
  br label %132

132:                                              ; preds = %129, %130, %131
  br label %133

133:                                              ; preds = %132, %139
  %134 = phi %"class.blink::LayoutBox"* [ %137, %139 ], [ %78, %132 ]
  %135 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %134, i64 0, i32 0, i32 0, i32 9
  %136 = bitcast %"class.blink::LayoutObject"** %135 to %"class.blink::LayoutBox"**
  %137 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %136, align 8
  %138 = icmp eq %"class.blink::LayoutBox"* %137, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %137, i64 0, i32 0, i32 0, i32 4
  %141 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %140 to i96*
  %142 = load i96, i96* %141, align 4
  %143 = and i96 %142, 113336795588871485128704
  %144 = icmp eq i96 %143, 75557863725914323419136
  br i1 %144, label %133, label %77

145:                                              ; preds = %62, %133, %44, %52, %33, %39, %6
  %146 = tail call zeroext i1 @_ZNK5blink10LayoutGrid21ExplicitGridDidResizeERKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* %0, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2)
  br i1 %146, label %184, label %147

147:                                              ; preds = %145
  %148 = tail call zeroext i1 @_ZNK5blink10LayoutGrid33NamedGridLinesDefinitionDidChangeERKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* %0, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2)
  br i1 %148, label %184, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %151 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %151, i64 0, i32 2, i32 0, i32 0
  %153 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %153, i64 0, i32 2, i32 0, i32 0
  %155 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %155, i64 0, i32 45
  %157 = load i32, i32* %156, align 4
  %158 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %159 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %158, i64 0, i32 0, i32 3, i32 0, i32 0
  %160 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %160, i64 0, i32 2, i32 0, i32 0
  %162 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %162, i64 0, i32 2, i32 0, i32 0
  %164 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %164, i64 0, i32 45
  %166 = load i32, i32* %165, align 4
  %167 = xor i32 %166, %157
  %168 = and i32 %167, 122880
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %184

170:                                              ; preds = %149
  %171 = icmp eq i24 %10, 0
  br i1 %171, label %191, label %172

172:                                              ; preds = %170
  %173 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %160, i64 0, i32 3, i32 0, i32 0
  %174 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %174, i64 0, i32 3, i32 0, i32 0
  %176 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %176, i64 0, i32 13, i32 0, i32 0, i32 2
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %184

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %176, i64 0, i32 14, i32 0, i32 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %191, label %184

184:                                              ; preds = %180, %172, %149, %147, %145
  %185 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %186 = load %"class.blink::Grid"*, %"class.blink::Grid"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %186, i64 0, i32 6
  %188 = load i8, i8* %187, align 8, !range !4
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %184
  tail call void @_ZN5blink4Grid22SetNeedsItemsPlacementEb(%"class.blink::Grid"* %186, i1 zeroext true) #17
  br label %191

191:                                              ; preds = %170, %190, %184, %180, %3
  ret void
}

declare void @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #17
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !2

23:                                               ; preds = %19
  %24 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #17
  %25 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %class.anon* nonnull dereferenceable(16) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #17
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #17
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #17
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid21ExplicitGridDidResizeERKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 3
  %10 = tail call dereferenceable(16) %"class.WTF::Vector.408"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %9) #17
  %11 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %10, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %21, i64 0, i32 3
  %23 = tail call dereferenceable(16) %"class.WTF::Vector.408"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %22) #17
  %24 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %23, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %12, %25
  br i1 %26, label %27, label %85

27:                                               ; preds = %2
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 4
  %34 = tail call dereferenceable(16) %"class.WTF::Vector.408"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %33) #17
  %35 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %34, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %37, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %43, i64 0, i32 4
  %45 = tail call dereferenceable(16) %"class.WTF::Vector.408"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %44) #17
  %46 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %45, i64 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %36, %47
  br i1 %48, label %49, label %85

49:                                               ; preds = %27
  %50 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %50, i64 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %52, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %54, i64 0, i32 16
  %56 = load i64, i64* %55, align 8
  %57 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %57, i64 0, i32 3, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %59, i64 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %61, i64 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %63, i64 0, i32 16
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %56, %65
  br i1 %66, label %67, label %85

67:                                               ; preds = %49
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %54, i64 0, i32 15
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %63, i64 0, i32 15
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %69, %71
  br i1 %72, label %73, label %85

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %54, i64 0, i32 13, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %63, i64 0, i32 13, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %85

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %54, i64 0, i32 14, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %63, i64 0, i32 14, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp ne i32 %81, %83
  br label %85

85:                                               ; preds = %73, %67, %49, %27, %2, %79
  %86 = phi i1 [ true, %73 ], [ true, %67 ], [ true, %49 ], [ true, %27 ], [ true, %2 ], [ %84, %79 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid33NamedGridLinesDefinitionDidChangeERKNS_13ComputedStyleE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %6, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %8, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = bitcast %"class.blink::ComputedStyle"** %10 to %"class.blink::ComputedStyleBase"**
  %12 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %12, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %18, i64 0, i32 3
  %20 = tail call zeroext i1 @_ZN3WTFeqINS_6StringENS_6VectorImLj0ENS_18PartitionAllocatorEEENS_10StringHashENS_10HashTraitsIS1_EENS6_IS4_EES3_EEbRKNS_7HashMapIT_T0_T1_T2_T3_T4_EESI_(%"class.WTF::HashMap.487"* dereferenceable(24) %9, %"class.WTF::HashMap.487"* dereferenceable(24) %19) #17
  br i1 %20, label %21, label %70

21:                                               ; preds = %2
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %24, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %26, i64 0, i32 2
  %28 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %11, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %34, i64 0, i32 2
  %36 = tail call zeroext i1 @_ZN3WTFeqINS_6StringENS_6VectorImLj0ENS_18PartitionAllocatorEEENS_10StringHashENS_10HashTraitsIS1_EENS6_IS4_EES3_EEbRKNS_7HashMapIT_T0_T1_T2_T3_T4_EESI_(%"class.WTF::HashMap.487"* dereferenceable(24) %27, %"class.WTF::HashMap.487"* dereferenceable(24) %35) #17
  br i1 %36, label %37, label %70

37:                                               ; preds = %21
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %40, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %42, i64 0, i32 7
  %44 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %11, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %46, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %48, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %50, i64 0, i32 7
  %52 = tail call zeroext i1 @_ZN3WTFeqINS_6StringENS_6VectorImLj0ENS_18PartitionAllocatorEEENS_10StringHashENS_10HashTraitsIS1_EENS6_IS4_EES3_EEbRKNS_7HashMapIT_T0_T1_T2_T3_T4_EESI_(%"class.WTF::HashMap.487"* dereferenceable(24) %43, %"class.WTF::HashMap.487"* dereferenceable(24) %51) #17
  br i1 %52, label %53, label %70

53:                                               ; preds = %37
  %54 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %54, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %56, i64 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %58, i64 0, i32 6
  %60 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %11, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %60, i64 0, i32 3, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %62, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %64, i64 0, i32 3, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %66, i64 0, i32 6
  %68 = tail call zeroext i1 @_ZN3WTFeqINS_6StringENS_6VectorImLj0ENS_18PartitionAllocatorEEENS_10StringHashENS_10HashTraitsIS1_EENS6_IS4_EES3_EEbRKNS_7HashMapIT_T0_T1_T2_T3_T4_EESI_(%"class.WTF::HashMap.487"* dereferenceable(24) %59, %"class.WTF::HashMap.487"* dereferenceable(24) %67) #17
  %69 = xor i1 %68, true
  br label %70

70:                                               ; preds = %37, %21, %2, %53
  %71 = phi i1 [ true, %37 ], [ true, %21 ], [ true, %2 ], [ %69, %53 ]
  ret i1 %71
}

declare dereferenceable(16) %"class.WTF::Vector.408"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid32ComputeTrackSizesForDefiniteSizeENS_24GridTrackSizingDirectionENS_10LayoutUnitE(%"class.blink::LayoutGrid"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Grid"*, %"class.blink::Grid"** %5, align 8
  %7 = icmp eq i32 %1, 1
  %8 = bitcast %"class.blink::Grid"* %6 to i64 (%"class.blink::Grid"*, i32)***
  %9 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %8, align 8
  %10 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %9, align 8
  %11 = tail call i64 %10(%"class.blink::Grid"* %6, i32 1) #17
  br i1 %7, label %23, label %12

12:                                               ; preds = %3
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %12
  %15 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %8, align 8
  %16 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %15, align 8
  %17 = tail call i64 %16(%"class.blink::Grid"* %6, i32 0) #17
  br label %23

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %6, i32 0) #17
  %22 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %20, i64 %21) #17
  br label %23

23:                                               ; preds = %3, %14, %18
  %24 = phi i64 [ %11, %3 ], [ %17, %14 ], [ %22, %18 ]
  %25 = zext i32 %2 to i64
  %26 = shl nuw i64 %25, 32
  %27 = or i64 %26, 1
  tail call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %4, i32 %1, i64 %24, i64 %27) #17
  tail call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* %4) #17
  ret void
}

declare void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"*, i32, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10LayoutGrid9NumTracksENS_24GridTrackSizingDirectionERKNS_4GridE(%"class.blink::LayoutGrid"* nocapture readonly, i32, %"class.blink::Grid"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 1
  %5 = bitcast %"class.blink::Grid"* %2 to i64 (%"class.blink::Grid"*, i32)***
  %6 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %5, align 8
  %7 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %6, align 8
  %8 = tail call i64 %7(%"class.blink::Grid"* %2, i32 1) #17
  br i1 %4, label %20, label %9

9:                                                ; preds = %3
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %9
  %12 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %5, align 8
  %13 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %12, align 8
  %14 = tail call i64 %13(%"class.blink::Grid"* %2, i32 0) #17
  br label %20

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %2, i32 0) #17
  %19 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %17, i64 %18) #17
  br label %20

20:                                               ; preds = %11, %15, %3
  %21 = phi i64 [ %8, %3 ], [ %14, %11 ], [ %19, %15 ]
  ret i64 %21
}

declare void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid26RepeatTracksSizingIfNeededENS_10LayoutUnitES1_(%"class.blink::LayoutGrid"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.absl::optional.1027"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.absl::optional.1027"*
  %8 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 11
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 1
  %13 = load i8, i8* %12, align 1, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %86, label %15

15:                                               ; preds = %11, %3
  %16 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Grid"*, %"class.blink::Grid"** %17, align 8
  %19 = bitcast %"class.blink::Grid"* %18 to i64 (%"class.blink::Grid"*, i32)***
  %20 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %19, align 8
  %21 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %20, align 8
  %22 = tail call i64 %21(%"class.blink::Grid"* %18, i32 1) #17
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %15
  %25 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %19, align 8
  %26 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %25, align 8
  %27 = tail call i64 %26(%"class.blink::Grid"* %18, i32 0) #17
  br label %33

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %18, i32 0) #17
  %32 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %30, i64 %31) #17
  br label %33

33:                                               ; preds = %24, %28
  %34 = phi i64 [ %27, %24 ], [ %32, %28 ]
  %35 = zext i32 %1 to i64
  %36 = shl nuw i64 %35, 32
  %37 = or i64 %36, 1
  tail call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %16, i32 0, i64 %34, i64 %37) #17
  tail call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* %16) #17
  %38 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #17
  %39 = tail call i64 @_ZNK5blink24GridTrackSizingAlgorithm9FreeSpaceENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %16, i32 0) #17
  store i64 %39, i64* %4, align 8
  %40 = trunc i64 %39 to i8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %33
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #18
  unreachable

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.absl::optional.1027", %"class.absl::optional.1027"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %16, i32 0) #17
  %46 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %45, i64 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = load %"class.blink::Grid"*, %"class.blink::Grid"** %17, align 8
  %49 = tail call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %48, i32 0) #17
  br i1 %49, label %50, label %55

50:                                               ; preds = %43
  %51 = load %"class.blink::Grid"*, %"class.blink::Grid"** %17, align 8
  %52 = tail call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %51, i32 0) #17
  %53 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %52, i64 0, i32 1, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %43, %50
  %56 = phi i32 [ %54, %50 ], [ 0, %43 ]
  %57 = sub i32 %47, %56
  call void @_ZN5blink10LayoutGrid43ComputeContentPositionAndDistributionOffsetENS_24GridTrackSizingDirectionERKNS_10LayoutUnitEj(%"class.blink::LayoutGrid"* %0, i32 0, %"class.blink::LayoutUnit"* dereferenceable(4) %44, i32 %57)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #17
  %58 = load %"class.blink::Grid"*, %"class.blink::Grid"** %17, align 8
  %59 = bitcast %"class.blink::Grid"* %58 to i64 (%"class.blink::Grid"*, i32)***
  %60 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %59, align 8
  %61 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %60, align 8
  %62 = tail call i64 %61(%"class.blink::Grid"* %58, i32 1) #17
  %63 = zext i32 %2 to i64
  %64 = shl nuw i64 %63, 32
  %65 = or i64 %64, 1
  tail call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %16, i32 1, i64 %62, i64 %65) #17
  tail call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* %16) #17
  %66 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #17
  %67 = tail call i64 @_ZNK5blink24GridTrackSizingAlgorithm9FreeSpaceENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %16, i32 1) #17
  store i64 %67, i64* %6, align 8
  %68 = trunc i64 %67 to i8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %55
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #18
  unreachable

71:                                               ; preds = %55
  %72 = getelementptr inbounds %"class.absl::optional.1027", %"class.absl::optional.1027"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %73 = tail call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %16, i32 1) #17
  %74 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %73, i64 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = load %"class.blink::Grid"*, %"class.blink::Grid"** %17, align 8
  %77 = tail call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %76, i32 1) #17
  br i1 %77, label %78, label %83

78:                                               ; preds = %71
  %79 = load %"class.blink::Grid"*, %"class.blink::Grid"** %17, align 8
  %80 = tail call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %79, i32 1) #17
  %81 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %80, i64 0, i32 1, i32 2
  %82 = load i32, i32* %81, align 4
  br label %83

83:                                               ; preds = %71, %78
  %84 = phi i32 [ %82, %78 ], [ 0, %71 ]
  %85 = sub i32 %75, %84
  call void @_ZN5blink10LayoutGrid43ComputeContentPositionAndDistributionOffsetENS_24GridTrackSizingDirectionERKNS_10LayoutUnitEj(%"class.blink::LayoutGrid"* %0, i32 1, %"class.blink::LayoutUnit"* dereferenceable(4) %72, i32 %85)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #17
  br label %86

86:                                               ; preds = %11, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid43ComputeContentPositionAndDistributionOffsetENS_24GridTrackSizingDirectionERKNS_10LayoutUnitEj(%"class.blink::LayoutGrid"* nocapture, i32, %"class.blink::LayoutUnit"* nocapture readonly dereferenceable(4), i32) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, 0
  %6 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 8
  %8 = select i1 %5, %"struct.blink::ContentAlignmentData"* %6, %"struct.blink::ContentAlignmentData"* %7
  %9 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %21, !prof !5

13:                                               ; preds = %4
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %18 = and i16 %17, -512
  %19 = or i16 %18, 64
  store i16 %19, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %20 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %21

21:                                               ; preds = %16, %13, %4
  br i1 %5, label %22, label %24

22:                                               ; preds = %21
  %23 = tail call i32 @_ZNK5blink13ComputedStyle22ResolvedJustifyContentERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %10, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %26

24:                                               ; preds = %21
  %25 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedAlignContentERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %10, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi i32 [ %23, %22 ], [ %25, %24 ]
  %28 = and i32 %27, 15
  %29 = lshr i32 %27, 4
  %30 = and i32 %29, 7
  %31 = icmp ne i32 %30, 0
  %32 = icmp eq i32 %28, 0
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %41

34:                                               ; preds = %26
  %35 = add nsw i32 %30, -1
  %36 = icmp ult i32 %35, 4
  br i1 %36, label %37, label %41

37:                                               ; preds = %34
  %38 = sext i32 %35 to i64
  %39 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN5blink10LayoutGrid43ComputeContentPositionAndDistributionOffsetENS_24GridTrackSizingDirectionERKNS_10LayoutUnitEj, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %34, %37, %26
  %42 = phi i32 [ %28, %26 ], [ %40, %37 ], [ 0, %34 ]
  %43 = getelementptr inbounds %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData"* %8, i64 0, i32 0, i32 0
  store i32 -64, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData"* %8, i64 0, i32 1, i32 0
  store i32 -64, i32* %44, align 4
  %45 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 1
  br i1 %47, label %144, label %48

48:                                               ; preds = %41
  switch i32 %30, label %153 [
    i32 1, label %49
    i32 2, label %74
    i32 3, label %109
  ]

49:                                               ; preds = %48
  %50 = icmp ult i32 %3, 2
  br i1 %50, label %153, label %51

51:                                               ; preds = %49
  %52 = add i32 %3, -1
  %53 = icmp ugt i32 %52, 33554430
  %54 = shl i32 %52, 6
  %55 = select i1 %53, i32 2147483647, i32 %54
  %56 = sext i32 %46 to i64
  %57 = shl nsw i64 %56, 6
  %58 = sext i32 %55 to i64
  %59 = sdiv i64 %57, %58
  %60 = tail call i1 @llvm.is.constant.i64(i64 %59) #17
  br i1 %60, label %68, label %61

61:                                               ; preds = %51
  %62 = icmp slt i64 %59, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = add nsw i64 %59, 2147483648
  %65 = icmp ult i64 %64, 4294967296
  %66 = trunc i64 %59 to i32
  %67 = select i1 %65, i32 %66, i32 %63, !prof !2
  br label %132

68:                                               ; preds = %51
  %69 = icmp sgt i64 %59, 2147483647
  br i1 %69, label %132, label %70

70:                                               ; preds = %68
  %71 = icmp sgt i64 %59, -2147483648
  %72 = select i1 %71, i64 %59, i64 -2147483648
  %73 = trunc i64 %72 to i32
  br label %132

74:                                               ; preds = %48
  %75 = icmp eq i32 %3, 0
  br i1 %75, label %153, label %76

76:                                               ; preds = %74
  %77 = icmp ugt i32 %3, 33554430
  %78 = shl i32 %3, 6
  %79 = select i1 %77, i32 2147483647, i32 %78
  %80 = sext i32 %46 to i64
  %81 = shl nsw i64 %80, 6
  %82 = sext i32 %79 to i64
  %83 = sdiv i64 %81, %82
  %84 = tail call i1 @llvm.is.constant.i64(i64 %83) #17
  br i1 %84, label %92, label %85

85:                                               ; preds = %76
  %86 = icmp slt i64 %83, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = add nsw i64 %83, 2147483648
  %89 = icmp ult i64 %88, 4294967296
  %90 = trunc i64 %83 to i32
  %91 = select i1 %89, i32 %90, i32 %87, !prof !2
  br label %98

92:                                               ; preds = %76
  %93 = icmp sgt i64 %83, 2147483647
  br i1 %93, label %98, label %94

94:                                               ; preds = %92
  %95 = icmp sgt i64 %83, -2147483648
  %96 = select i1 %95, i64 %83, i64 -2147483648
  %97 = trunc i64 %96 to i32
  br label %98

98:                                               ; preds = %94, %92, %85
  %99 = phi i32 [ %91, %85 ], [ %97, %94 ], [ 2147483647, %92 ]
  %100 = sdiv i32 %99, 2
  %101 = sext i32 %100 to i64
  %102 = tail call i1 @llvm.is.constant.i64(i64 %101) #17
  br i1 %102, label %135, label %103

103:                                              ; preds = %98
  %104 = icmp slt i32 %99, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = add nsw i64 %101, 2147483648
  %107 = icmp ult i64 %106, 4294967296
  %108 = select i1 %107, i32 %100, i32 %105, !prof !2
  br label %135

109:                                              ; preds = %48
  %110 = add i32 %3, 1
  %111 = icmp ugt i32 %110, 33554430
  %112 = shl i32 %110, 6
  %113 = select i1 %111, i32 2147483647, i32 %112
  %114 = sext i32 %46 to i64
  %115 = shl nsw i64 %114, 6
  %116 = sext i32 %113 to i64
  %117 = sdiv i64 %115, %116
  %118 = tail call i1 @llvm.is.constant.i64(i64 %117) #17
  br i1 %118, label %126, label %119

119:                                              ; preds = %109
  %120 = icmp slt i64 %117, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = add nsw i64 %117, 2147483648
  %123 = icmp ult i64 %122, 4294967296
  %124 = trunc i64 %117 to i32
  %125 = select i1 %123, i32 %124, i32 %121, !prof !2
  br label %135

126:                                              ; preds = %109
  %127 = icmp sgt i64 %117, 2147483647
  br i1 %127, label %132, label %128

128:                                              ; preds = %126
  %129 = icmp sgt i64 %117, -2147483648
  %130 = select i1 %129, i64 %117, i64 -2147483648
  %131 = trunc i64 %130 to i32
  br label %135

132:                                              ; preds = %61, %70, %68, %126
  %133 = phi i32 [ 2147483647, %126 ], [ 2147483647, %68 ], [ %73, %70 ], [ %67, %61 ]
  %134 = phi i32 [ 2147483647, %126 ], [ 0, %68 ], [ 0, %70 ], [ 0, %61 ]
  store i32 %134, i32* %43, align 4
  store i32 %133, i32* %44, align 4
  br label %139

135:                                              ; preds = %98, %103, %119, %128
  %136 = phi i32 [ %99, %103 ], [ %125, %119 ], [ %131, %128 ], [ %99, %98 ]
  %137 = phi i32 [ %108, %103 ], [ %125, %119 ], [ %131, %128 ], [ %100, %98 ]
  store i32 %137, i32* %43, align 4
  store i32 %136, i32* %44, align 4
  %138 = icmp sgt i32 %137, -1
  br i1 %138, label %139, label %142

139:                                              ; preds = %132, %135
  %140 = phi i32 [ %133, %132 ], [ %136, %135 ]
  %141 = icmp sgt i32 %140, -1
  br i1 %141, label %195, label %142

142:                                              ; preds = %139, %135
  %143 = load i32, i32* %45, align 4
  br label %144

144:                                              ; preds = %142, %41
  %145 = phi i32 [ %143, %142 ], [ %46, %41 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %152, label %147

147:                                              ; preds = %144
  %148 = icmp slt i32 %145, 0
  %149 = and i32 %27, 384
  %150 = icmp eq i32 %149, 256
  %151 = and i1 %150, %148
  br i1 %151, label %152, label %153

152:                                              ; preds = %147, %144
  store i32 0, i32* %43, align 4
  store i32 0, i32* %44, align 4
  br label %195

153:                                              ; preds = %48, %49, %74, %147
  %154 = phi i32 [ %145, %147 ], [ %46, %74 ], [ %46, %49 ], [ %46, %48 ]
  switch i32 %42, label %195 [
    i32 8, label %193
    i32 9, label %155
    i32 3, label %156
    i32 7, label %166
    i32 5, label %166
    i32 6, label %175
    i32 4, label %175
    i32 1, label %184
    i32 2, label %184
  ]

155:                                              ; preds = %153
  br label %193

156:                                              ; preds = %153
  %157 = sdiv i32 %154, 2
  %158 = sext i32 %157 to i64
  %159 = tail call i1 @llvm.is.constant.i64(i64 %158) #17
  br i1 %159, label %193, label %160

160:                                              ; preds = %156
  %161 = icmp slt i32 %154, -1
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = add nsw i64 %158, 2147483648
  %164 = icmp ult i64 %163, 4294967296
  %165 = select i1 %164, i32 %157, i32 %162, !prof !2
  br label %193

166:                                              ; preds = %153, %153
  br i1 %5, label %167, label %193

167:                                              ; preds = %166
  %168 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %169 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %168, i64 0, i32 0, i32 9
  %170 = bitcast [20 x i8]* %169 to i160*
  %171 = load i160, i160* %170, align 8
  %172 = and i160 %171, 41538374868278621028243970633760768
  %173 = icmp eq i160 %172, 0
  %174 = select i1 %173, i32 %154, i32 0
  br label %193

175:                                              ; preds = %153, %153
  br i1 %5, label %176, label %193

176:                                              ; preds = %175
  %177 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %178 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %177, i64 0, i32 0, i32 9
  %179 = bitcast [20 x i8]* %178 to i160*
  %180 = load i160, i160* %179, align 8
  %181 = and i160 %180, 41538374868278621028243970633760768
  %182 = icmp eq i160 %181, 0
  %183 = select i1 %182, i32 0, i32 %154
  br label %193

184:                                              ; preds = %153, %153
  br i1 %5, label %185, label %193

185:                                              ; preds = %184
  %186 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %187 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %186, i64 0, i32 0, i32 9
  %188 = bitcast [20 x i8]* %187 to i160*
  %189 = load i160, i160* %188, align 8
  %190 = and i160 %189, 41538374868278621028243970633760768
  %191 = icmp eq i160 %190, 0
  %192 = select i1 %191, i32 0, i32 %154
  br label %193

193:                                              ; preds = %156, %185, %176, %167, %184, %175, %166, %160, %153, %155
  %194 = phi i32 [ %154, %155 ], [ 0, %153 ], [ %165, %160 ], [ %154, %166 ], [ 0, %175 ], [ 0, %184 ], [ %174, %167 ], [ %183, %176 ], [ %192, %185 ], [ %157, %156 ]
  store i32 %194, i32* %43, align 4
  store i32 0, i32* %44, align 4
  br label %195

195:                                              ; preds = %193, %153, %139, %152
  ret void
}

declare i64 @_ZNK5blink24GridTrackSizingAlgorithm9FreeSpaceENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10LayoutGrid18NonCollapsedTracksENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %4 = tail call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %3, i32 %1) #17
  %5 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %4, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Grid"*, %"class.blink::Grid"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %9, i32 %1) #17
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = load %"class.blink::Grid"*, %"class.blink::Grid"** %8, align 8
  %13 = tail call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %12, i32 %1) #17
  %14 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %13, i64 0, i32 1, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  br label %17

17:                                               ; preds = %2, %11
  %18 = phi i64 [ %16, %11 ], [ 0, %2 ]
  %19 = sub nsw i64 %7, %18
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid17UpdateBlockLayoutEb(%"class.blink::LayoutGrid"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SubtreeLayoutScope", align 8
  %4 = alloca %"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope", align 1
  %5 = alloca %"class.blink::LayoutState", align 8
  %6 = alloca %"class.blink::TextAutosizer::LayoutScope", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.absl::optional.1027"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.absl::optional.1027"*
  %11 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %1, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Grid"*, %"class.blink::Grid"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %14, i64 0, i32 6
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutBlock"*
  %20 = tail call zeroext i1 @_ZN5blink11LayoutBlock16SimplifiedLayoutEv(%"class.blink::LayoutBlock"* %19) #17
  br i1 %20, label %633, label %21

21:                                               ; preds = %12, %18, %2
  %22 = bitcast %"class.blink::SubtreeLayoutScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %23, align 8
  call void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %11) #17
  %24 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope", %"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #17
  store i8 -86, i8* %24, align 1
  call void @_ZN5blink24PaintLayerScrollableArea27DelayScrollOffsetClampScopeC1Ev(%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"* nonnull %4) #17
  %25 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %25) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 56, i1 false)
  %26 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %5, %"class.blink::LayoutBox"* dereferenceable(216) %26, i1 zeroext false) #17
  %27 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %28 = bitcast %"class.blink::LayoutSize"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = trunc i64 %29 to i32
  %31 = lshr i64 %29, 32
  %32 = trunc i64 %31 to i32
  %33 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutBlock"*
  %34 = call zeroext i1 @_ZNK5blink11LayoutBlock24HasDefiniteLogicalHeightEv(%"class.blink::LayoutBlock"* %33) #17
  %35 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast i8* %35 to i16*
  %37 = zext i1 %34 to i16
  %38 = shl nuw nsw i16 %37, 8
  %39 = or i16 %38, 1
  store i16 %39, i16* %36, align 2
  %40 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 11
  store i8 0, i8* %40, align 8
  %41 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %42 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %42, i64 13
  %44 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %43, align 8
  %45 = call %"class.blink::LayoutObjectChildList"* %44(%"class.blink::LayoutObject"* %11) #17
  %46 = icmp eq %"class.blink::LayoutObjectChildList"* %45, null
  br i1 %46, label %75, label %47

47:                                               ; preds = %21
  %48 = bitcast %"class.blink::LayoutObjectChildList"* %45 to %"class.blink::LayoutBox"**
  %49 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %48, align 8
  %50 = icmp eq %"class.blink::LayoutBox"* %49, null
  br i1 %50, label %75, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %49, i64 0, i32 0, i32 0, i32 4
  %53 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %52 to i96*
  %54 = load i96, i96* %53, align 4
  %55 = and i96 %54, 113336795588871485128704
  %56 = icmp eq i96 %55, 75557863725914323419136
  br i1 %56, label %57, label %69

57:                                               ; preds = %51, %63
  %58 = phi %"class.blink::LayoutBox"* [ %61, %63 ], [ %49, %51 ]
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %58, i64 0, i32 0, i32 0, i32 9
  %60 = bitcast %"class.blink::LayoutObject"** %59 to %"class.blink::LayoutBox"**
  %61 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %60, align 8
  %62 = icmp eq %"class.blink::LayoutBox"* %61, null
  br i1 %62, label %75, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %61, i64 0, i32 0, i32 0, i32 4
  %65 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %64 to i96*
  %66 = load i96, i96* %65, align 4
  %67 = and i96 %66, 113336795588871485128704
  %68 = icmp eq i96 %67, 75557863725914323419136
  br i1 %68, label %57, label %69

69:                                               ; preds = %63, %51
  %70 = phi %"class.blink::LayoutBox"* [ %49, %51 ], [ %61, %63 ]
  %71 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %72 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  br label %129

75:                                               ; preds = %57, %224, %21, %47
  %76 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 12
  store i8 1, i8* %76, align 1
  call void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"* %26) #17
  %77 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #17
  %78 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 16, i1 false)
  call void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"* nonnull %6, %"class.blink::LayoutBlock"* %33, %"class.blink::SubtreeLayoutScope"* nonnull %3) #17
  %79 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %26) #17
  %80 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %81 = zext i32 %79 to i64
  %82 = shl nuw i64 %81, 32
  %83 = or i64 %82, 1
  call void @_ZNK5blink10LayoutGrid16PlaceItemsOnGridERNS_24GridTrackSizingAlgorithmEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %0, %"class.blink::GridTrackSizingAlgorithm"* dereferenceable(272) %80, i64 %83)
  call void @_ZN5blink24GridTrackSizingAlgorithm17SetAvailableSpaceENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 0, i64 %83) #17
  call void @_ZNK5blink10LayoutGrid25PerformGridItemsPreLayoutERKNS_24GridTrackSizingAlgorithmE(%"class.blink::LayoutGrid"* %0, %"class.blink::GridTrackSizingAlgorithm"* dereferenceable(272) %80)
  %84 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.blink::Grid"*, %"class.blink::Grid"** %84, align 8
  %86 = bitcast %"class.blink::Grid"* %85 to i64 (%"class.blink::Grid"*, i32)***
  %87 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %86, align 8
  %88 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %87, align 8
  %89 = call i64 %88(%"class.blink::Grid"* %85, i32 1) #17
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %75
  %92 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %86, align 8
  %93 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %92, align 8
  %94 = call i64 %93(%"class.blink::Grid"* %85, i32 0) #17
  br label %100

95:                                               ; preds = %75
  %96 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %97 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %96, align 8
  %98 = call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %85, i32 0) #17
  %99 = call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %97, i64 %98) #17
  br label %100

100:                                              ; preds = %91, %95
  %101 = phi i64 [ %94, %91 ], [ %99, %95 ]
  call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 0, i64 %101, i64 %83) #17
  call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* %80) #17
  %102 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #17
  %103 = call i64 @_ZNK5blink24GridTrackSizingAlgorithm9FreeSpaceENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 0) #17
  store i64 %103, i64* %7, align 8
  %104 = trunc i64 %103 to i8
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %100
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #18
  unreachable

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.absl::optional.1027", %"class.absl::optional.1027"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %109 = call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 0) #17
  %110 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %109, i64 0, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = load %"class.blink::Grid"*, %"class.blink::Grid"** %84, align 8
  %113 = call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %112, i32 0) #17
  br i1 %113, label %114, label %119

114:                                              ; preds = %107
  %115 = load %"class.blink::Grid"*, %"class.blink::Grid"** %84, align 8
  %116 = call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %115, i32 0) #17
  %117 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %116, i64 0, i32 1, i32 2
  %118 = load i32, i32* %117, align 4
  br label %119

119:                                              ; preds = %107, %114
  %120 = phi i32 [ %118, %114 ], [ 0, %107 ]
  %121 = sub i32 %111, %120
  call void @_ZN5blink10LayoutGrid43ComputeContentPositionAndDistributionOffsetENS_24GridTrackSizingDirectionERKNS_10LayoutUnitEj(%"class.blink::LayoutGrid"* %0, i32 0, %"class.blink::LayoutUnit"* dereferenceable(4) %108, i32 %121)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #17
  %122 = load i8, i8* %35, align 1, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %119
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #18
  unreachable

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1, !range !4
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %246, label %236

129:                                              ; preds = %230, %69
  %130 = phi %"class.blink::LayoutBox"* [ %70, %69 ], [ %228, %230 ]
  call void @_ZN5blink9LayoutBox26ClearOverrideLogicalHeightEv(%"class.blink::LayoutBox"* nonnull %130) #17
  %131 = call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %130) #17
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  store i8 1, i8* %40, align 8
  br label %133

133:                                              ; preds = %132, %129
  %134 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %130, i64 0, i32 0, i32 0, i32 4
  %135 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %134 to i96*
  %136 = load i96, i96* %135, align 4
  %137 = and i96 %136, 113336795588871485128704
  %138 = icmp eq i96 %137, 75557863725914323419136
  br i1 %138, label %179, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %130, i64 0, i32 0, i32 0
  %141 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %71, align 8
  %142 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %130, i64 0, i32 0, i32 0, i32 5, i32 0
  %143 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %142, align 8
  %144 = bitcast %"class.blink::LayoutBox"* %130 to i1 (%"class.blink::LayoutObject"*, i32)***
  %145 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %144, align 8
  %146 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %145, i64 92
  %147 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %146, align 8
  %148 = call zeroext i1 %147(%"class.blink::LayoutObject"* %140, i32 39) #17
  %149 = select i1 %148, i32 7, i32 3
  %150 = call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %143, i32 %149, %"class.blink::ComputedStyle"* %141) #17
  %151 = and i32 %150, 14
  %152 = load i96, i96* %73, align 4
  %153 = trunc i96 %152 to i32
  %154 = icmp slt i32 %153, 0
  %155 = bitcast %"class.blink::ComputedStyle"** %142 to %"class.blink::ComputedStyleBase"**
  %156 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %156, i64 0, i32 7, i32 0, i32 0
  %158 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %157, align 8
  br i1 %154, label %159, label %165

159:                                              ; preds = %139
  %160 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %158, i64 0, i32 12, i32 2
  %161 = load i8, i8* %160, align 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %179, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %158, i64 0, i32 9, i32 2
  br label %171

165:                                              ; preds = %139
  %166 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %158, i64 0, i32 10, i32 2
  %167 = load i8, i8* %166, align 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %179, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %158, i64 0, i32 11, i32 2
  br label %171

171:                                              ; preds = %169, %163
  %172 = phi i8* [ %164, %163 ], [ %170, %169 ]
  %173 = load i8, i8* %172, align 1
  %174 = icmp ne i8 %173, 0
  %175 = or i32 %151, 1
  %176 = icmp eq i32 %175, 5
  %177 = and i1 %176, %174
  br i1 %177, label %178, label %179

178:                                              ; preds = %171
  call void @_ZN5blink24GridTrackSizingAlgorithm24CacheBaselineAlignedItemERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %74, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %130, i32 1) #17
  br label %179

179:                                              ; preds = %165, %159, %171, %133, %178
  %180 = load i96, i96* %135, align 4
  %181 = and i96 %180, 113336795588871485128704
  %182 = icmp eq i96 %181, 75557863725914323419136
  br i1 %182, label %223, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %130, i64 0, i32 0, i32 0
  %185 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %71, align 8
  %186 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %130, i64 0, i32 0, i32 0, i32 5, i32 0
  %187 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %186, align 8
  %188 = bitcast %"class.blink::LayoutBox"* %130 to i1 (%"class.blink::LayoutObject"*, i32)***
  %189 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %188, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %189, i64 92
  %191 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %190, align 8
  %192 = call zeroext i1 %191(%"class.blink::LayoutObject"* %184, i32 39) #17
  %193 = select i1 %192, i32 7, i32 3
  %194 = call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %187, i32 %193, %"class.blink::ComputedStyle"* %185) #17
  %195 = and i32 %194, 14
  %196 = load i96, i96* %73, align 4
  %197 = trunc i96 %196 to i32
  %198 = icmp slt i32 %197, 0
  %199 = bitcast %"class.blink::ComputedStyle"** %186 to %"class.blink::ComputedStyleBase"**
  %200 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %200, i64 0, i32 7, i32 0, i32 0
  %202 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %201, align 8
  br i1 %198, label %203, label %209

203:                                              ; preds = %183
  %204 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %202, i64 0, i32 10, i32 2
  %205 = load i8, i8* %204, align 1
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %223, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %202, i64 0, i32 11, i32 2
  br label %215

209:                                              ; preds = %183
  %210 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %202, i64 0, i32 12, i32 2
  %211 = load i8, i8* %210, align 1
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %223, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %202, i64 0, i32 9, i32 2
  br label %215

215:                                              ; preds = %213, %207
  %216 = phi i8* [ %208, %207 ], [ %214, %213 ]
  %217 = load i8, i8* %216, align 1
  %218 = icmp ne i8 %217, 0
  %219 = or i32 %195, 1
  %220 = icmp eq i32 %219, 5
  %221 = and i1 %220, %218
  br i1 %221, label %222, label %223

222:                                              ; preds = %215
  call void @_ZN5blink24GridTrackSizingAlgorithm24CacheBaselineAlignedItemERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %74, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %130, i32 0) #17
  br label %223

223:                                              ; preds = %209, %203, %215, %179, %222
  br label %224

224:                                              ; preds = %223, %230
  %225 = phi %"class.blink::LayoutBox"* [ %228, %230 ], [ %130, %223 ]
  %226 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %225, i64 0, i32 0, i32 0, i32 9
  %227 = bitcast %"class.blink::LayoutObject"** %226 to %"class.blink::LayoutBox"**
  %228 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %227, align 8
  %229 = icmp eq %"class.blink::LayoutBox"* %228, null
  br i1 %229, label %75, label %230

230:                                              ; preds = %224
  %231 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %228, i64 0, i32 0, i32 0, i32 4
  %232 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %231 to i96*
  %233 = load i96, i96* %232, align 4
  %234 = and i96 %233, 113336795588871485128704
  %235 = icmp eq i96 %234, 75557863725914323419136
  br i1 %235, label %224, label %129

236:                                              ; preds = %125
  %237 = call i32 @_ZNK5blink9LayoutBox22AvailableLogicalHeightENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %26, i32 0) #17
  %238 = load %"class.blink::Grid"*, %"class.blink::Grid"** %84, align 8
  %239 = bitcast %"class.blink::Grid"* %238 to i64 (%"class.blink::Grid"*, i32)***
  %240 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %239, align 8
  %241 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %240, align 8
  %242 = call i64 %241(%"class.blink::Grid"* %238, i32 1) #17
  %243 = zext i32 %237 to i64
  %244 = shl nuw i64 %243, 32
  %245 = or i64 %244, 1
  call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 1, i64 %242, i64 %245) #17
  call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* %80) #17
  br label %345

246:                                              ; preds = %125
  %247 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %248 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %248, i64 0, i32 0, i32 9
  %250 = bitcast [20 x i8]* %249 to i160*
  %251 = load i160, i160* %250, align 8
  %252 = and i160 %251, 15211807202738752817960438464512
  %253 = icmp eq i160 %252, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %246
  %255 = call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %26) #17
  br i1 %255, label %258, label %279

256:                                              ; preds = %246
  %257 = call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %26) #17
  br i1 %257, label %258, label %279

258:                                              ; preds = %254, %256
  %259 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %247, align 8
  %260 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %259, i64 0, i32 0, i32 9
  %261 = bitcast [20 x i8]* %260 to i160*
  %262 = load i160, i160* %261, align 8
  %263 = and i160 %262, 15211807202738752817960438464512
  %264 = icmp eq i160 %263, 0
  br i1 %264, label %265, label %267

265:                                              ; preds = %258
  %266 = call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %26) #17
  br label %269

267:                                              ; preds = %258
  %268 = call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %26) #17
  br label %269

269:                                              ; preds = %265, %267
  %270 = phi i32 [ %266, %265 ], [ %268, %267 ]
  %271 = load %"class.blink::Grid"*, %"class.blink::Grid"** %84, align 8
  %272 = bitcast %"class.blink::Grid"* %271 to i64 (%"class.blink::Grid"*, i32)***
  %273 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %272, align 8
  %274 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %273, align 8
  %275 = call i64 %274(%"class.blink::Grid"* %271, i32 1) #17
  %276 = zext i32 %270 to i64
  %277 = shl nuw i64 %276, 32
  %278 = or i64 %277, 1
  call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 1, i64 %275, i64 %278) #17
  call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* %80) #17
  br label %345

279:                                              ; preds = %254, %256
  %280 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 12
  %281 = load %"class.blink::Grid"*, %"class.blink::Grid"** %280, align 8
  %282 = bitcast %"class.blink::Grid"* %281 to i64 (%"class.blink::Grid"*, i32)***
  %283 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %282, align 8
  %284 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %283, align 8
  %285 = call i64 %284(%"class.blink::Grid"* %281, i32 1) #17
  call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 1, i64 %285, i64 0) #17
  call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* %80) #17
  %286 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %247, align 8
  %287 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %286, i64 0, i32 0, i32 3, i32 0, i32 0
  %288 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %287, align 8
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %288, i64 0, i32 2, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %290, i64 0, i32 2, i32 0, i32 0
  %292 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %292, i64 0, i32 45
  %294 = load i32, i32* %293, align 4
  %295 = and i32 %294, 24
  %296 = icmp eq i32 %295, 24
  br i1 %296, label %297, label %345

297:                                              ; preds = %279
  %298 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %299 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %298 to i96*
  %300 = load i96, i96* %299, align 4
  %301 = and i96 %300, 1207959552
  %302 = icmp eq i96 %301, 134217728
  br i1 %302, label %345, label %303

303:                                              ; preds = %297
  %304 = bitcast %"class.blink::LayoutGrid"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %305 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %304, align 8
  %306 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %305, i64 92
  %307 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %306, align 8
  %308 = call zeroext i1 %307(%"class.blink::LayoutObject"* %11, i32 43) #17
  br i1 %308, label %345, label %309

309:                                              ; preds = %303
  %310 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %304, align 8
  %311 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %310, i64 92
  %312 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %311, align 8
  %313 = call zeroext i1 %312(%"class.blink::LayoutObject"* %11, i32 46) #17
  br i1 %313, label %334, label %314

314:                                              ; preds = %309
  %315 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %304, align 8
  %316 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %315, i64 92
  %317 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %316, align 8
  %318 = call zeroext i1 %317(%"class.blink::LayoutObject"* %11, i32 48) #17
  br i1 %318, label %334, label %319

319:                                              ; preds = %314
  %320 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %304, align 8
  %321 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %320, i64 92
  %322 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %321, align 8
  %323 = call zeroext i1 %322(%"class.blink::LayoutObject"* %11, i32 45) #17
  br i1 %323, label %334, label %324

324:                                              ; preds = %319
  %325 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %304, align 8
  %326 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %325, i64 92
  %327 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %326, align 8
  %328 = call zeroext i1 %327(%"class.blink::LayoutObject"* %11, i32 49) #17
  br i1 %328, label %334, label %329

329:                                              ; preds = %324
  %330 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %304, align 8
  %331 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %330, i64 92
  %332 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %331, align 8
  %333 = call zeroext i1 %332(%"class.blink::LayoutObject"* %11, i32 50) #17
  br i1 %333, label %334, label %339

334:                                              ; preds = %329, %324, %319, %314, %309
  %335 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %304, align 8
  %336 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %335, i64 92
  %337 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %336, align 8
  %338 = call zeroext i1 %337(%"class.blink::LayoutObject"* %11, i32 45) #17
  br i1 %338, label %339, label %345

339:                                              ; preds = %329, %334
  %340 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %304, align 8
  %341 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %340, i64 92
  %342 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %341, align 8
  %343 = call zeroext i1 %342(%"class.blink::LayoutObject"* %11, i32 44) #17
  %344 = xor i1 %343, true
  br label %345

345:                                              ; preds = %339, %297, %303, %334, %279, %269, %236
  %346 = phi i1 [ false, %236 ], [ false, %269 ], [ false, %279 ], [ false, %334 ], [ false, %303 ], [ false, %297 ], [ %344, %339 ]
  %347 = call i32 @_ZNK5blink24GridTrackSizingAlgorithm21ComputeTrackBasedSizeEv(%"class.blink::GridTrackSizingAlgorithm"* %80) #17
  %348 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %349 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %348)
  %350 = icmp slt i32 %349, 0
  %351 = select i1 %350, i32 -2147483648, i32 2147483647
  %352 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %347, i32 %349) #17
  %353 = extractvalue { i32, i1 } %352, 1
  %354 = extractvalue { i32, i1 } %352, 0
  %355 = select i1 %353, i32 %351, i32 %354, !prof !3
  br i1 %346, label %356, label %365

356:                                              ; preds = %345
  %357 = load %"class.blink::Grid"*, %"class.blink::Grid"** %84, align 8
  %358 = bitcast %"class.blink::Grid"* %357 to i64 (%"class.blink::Grid"*, i32)***
  %359 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %358, align 8
  %360 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %359, align 8
  %361 = call i64 %360(%"class.blink::Grid"* %357, i32 1) #17
  %362 = zext i32 %355 to i64
  %363 = shl nuw i64 %362, 32
  %364 = or i64 %363, 1
  call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 1, i64 %361, i64 %364) #17
  call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* %80) #17
  br label %365

365:                                              ; preds = %356, %345
  %366 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %367 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %366, align 8
  %368 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %367, i64 0, i32 0, i32 9
  %369 = bitcast [20 x i8]* %368 to i160*
  %370 = load i160, i160* %369, align 8
  %371 = and i160 %370, 15211807202738752817960438464512
  %372 = icmp eq i160 %371, 0
  %373 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %367, i64 0, i32 0, i32 5, i32 0, i32 0
  %374 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %373, align 8
  %375 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %374, i64 0, i32 3
  %376 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %374, i64 0, i32 8
  %377 = select i1 %372, %"class.blink::Length"* %375, %"class.blink::Length"* %376
  %378 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %377, i64 0, i32 2
  %379 = load i8, i8* %378, align 1
  switch i8 %379, label %380 [
    i8 3, label %402
    i8 4, label %402
    i8 7, label %402
    i8 5, label %402
  ]

380:                                              ; preds = %365
  %381 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %26)
  %382 = extractvalue { i64, i64 } %381, 1
  %383 = trunc i64 %382 to i32
  %384 = lshr i64 %382, 32
  %385 = trunc i64 %384 to i32
  %386 = icmp slt i32 %385, 0
  %387 = select i1 %386, i32 -2147483648, i32 2147483647
  %388 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %383, i32 %385) #17
  %389 = extractvalue { i32, i1 } %388, 1
  %390 = extractvalue { i32, i1 } %388, 0
  %391 = select i1 %389, i32 %387, i32 %390, !prof !3
  %392 = icmp slt i32 %391, 0
  %393 = select i1 %392, i32 -2147483648, i32 2147483647
  %394 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %355, i32 %391) #17
  %395 = extractvalue { i32, i1 } %394, 1
  %396 = extractvalue { i32, i1 } %394, 0
  %397 = select i1 %395, i32 %393, i32 %396, !prof !3
  %398 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %366, align 8
  %399 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %398, i64 0, i32 0, i32 9
  %400 = bitcast [20 x i8]* %399 to i160*
  %401 = load i160, i160* %400, align 8
  br label %402

402:                                              ; preds = %365, %365, %365, %365, %380
  %403 = phi i160 [ %401, %380 ], [ %370, %365 ], [ %370, %365 ], [ %370, %365 ], [ %370, %365 ]
  %404 = phi i32 [ %397, %380 ], [ %355, %365 ], [ %355, %365 ], [ %355, %365 ], [ %355, %365 ]
  %405 = and i160 %403, 15211807202738752817960438464512
  %406 = icmp eq i160 %405, 0
  br i1 %406, label %407, label %412

407:                                              ; preds = %402
  %408 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %409 = load i32, i32* %408, align 4
  %410 = icmp eq i32 %409, %404
  br i1 %410, label %417, label %411

411:                                              ; preds = %407
  store i32 %404, i32* %408, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %26) #17
  br label %417

412:                                              ; preds = %402
  %413 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %414 = load i32, i32* %413, align 4
  %415 = icmp eq i32 %414, %404
  br i1 %415, label %417, label %416

416:                                              ; preds = %412
  store i32 %404, i32* %413, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %26) #17
  br label %417

417:                                              ; preds = %407, %411, %412, %416
  call void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"* %26) #17
  %418 = load i8, i8* %35, align 1, !range !4
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #18
  unreachable

421:                                              ; preds = %417
  %422 = load i8, i8* %126, align 1, !range !4
  %423 = icmp eq i8 %422, 0
  br i1 %423, label %424, label %444

424:                                              ; preds = %421
  %425 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %366, align 8
  %426 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %425, i64 0, i32 0, i32 9
  %427 = bitcast [20 x i8]* %426 to i160*
  %428 = load i160, i160* %427, align 8
  %429 = and i160 %428, 15211807202738752817960438464512
  %430 = icmp eq i160 %429, 0
  %431 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %432 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %433 = select i1 %430, i32* %431, i32* %432
  %434 = load i32, i32* %433, align 4
  %435 = icmp sgt i32 %404, -1
  %436 = select i1 %435, i32 -2147483648, i32 2147483647
  %437 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %434, i32 %404) #17
  %438 = extractvalue { i32, i1 } %437, 1
  %439 = extractvalue { i32, i1 } %437, 0
  %440 = select i1 %438, i32 %436, i32 %439, !prof !3
  %441 = zext i32 %440 to i64
  %442 = shl nuw i64 %441, 32
  %443 = or i64 %442, 1
  call void @_ZN5blink24GridTrackSizingAlgorithm12SetFreeSpaceENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 1, i64 %443) #17
  br label %444

444:                                              ; preds = %421, %424
  %445 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %445) #17
  %446 = call i64 @_ZNK5blink24GridTrackSizingAlgorithm9FreeSpaceENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 1) #17
  store i64 %446, i64* %9, align 8
  %447 = trunc i64 %446 to i8
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %449, label %450

449:                                              ; preds = %444
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #18
  unreachable

450:                                              ; preds = %444
  %451 = getelementptr inbounds %"class.absl::optional.1027", %"class.absl::optional.1027"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %452 = call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %80, i32 1) #17
  %453 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %452, i64 0, i32 0, i32 0, i32 2
  %454 = load i32, i32* %453, align 4
  %455 = load %"class.blink::Grid"*, %"class.blink::Grid"** %84, align 8
  %456 = call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %455, i32 1) #17
  br i1 %456, label %457, label %462

457:                                              ; preds = %450
  %458 = load %"class.blink::Grid"*, %"class.blink::Grid"** %84, align 8
  %459 = call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %458, i32 1) #17
  %460 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %459, i64 0, i32 1, i32 2
  %461 = load i32, i32* %460, align 4
  br label %462

462:                                              ; preds = %450, %457
  %463 = phi i32 [ %461, %457 ], [ 0, %450 ]
  %464 = sub i32 %454, %463
  call void @_ZN5blink10LayoutGrid43ComputeContentPositionAndDistributionOffsetENS_24GridTrackSizingDirectionERKNS_10LayoutUnitEj(%"class.blink::LayoutGrid"* %0, i32 1, %"class.blink::LayoutUnit"* dereferenceable(4) %451, i32 %464)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %445) #17
  %465 = call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %26)
  call void @_ZN5blink10LayoutGrid26RepeatTracksSizingIfNeededENS_10LayoutUnitES1_(%"class.blink::LayoutGrid"* %0, i32 %79, i32 %465)
  %466 = call zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"* %33) #17
  br i1 %466, label %467, label %529

467:                                              ; preds = %462
  %468 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %366, align 8
  %469 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %468, i64 0, i32 0, i32 9
  %470 = bitcast [20 x i8]* %469 to i160*
  %471 = load i160, i160* %470, align 8
  %472 = and i160 %471, 15211807202738752817960438464512
  %473 = icmp eq i160 %472, 0
  %474 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %475 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %476 = select i1 %473, i32* %474, i32* %475
  %477 = load i32, i32* %476, align 4
  %478 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %348) #17
  %479 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %26) #17
  %480 = extractvalue { i64, i64 } %479, 1
  %481 = trunc i64 %480 to i32
  %482 = lshr i64 %480, 32
  %483 = trunc i64 %482 to i32
  %484 = icmp slt i32 %483, 0
  %485 = select i1 %484, i32 -2147483648, i32 2147483647
  %486 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %481, i32 %483) #17
  %487 = extractvalue { i32, i1 } %486, 1
  %488 = extractvalue { i32, i1 } %486, 0
  %489 = select i1 %487, i32 %485, i32 %488, !prof !3
  %490 = icmp slt i32 %489, 0
  %491 = select i1 %490, i32 -2147483648, i32 2147483647
  %492 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %478, i32 %489) #17
  %493 = extractvalue { i32, i1 } %492, 1
  %494 = extractvalue { i32, i1 } %492, 0
  %495 = select i1 %493, i32 %491, i32 %494, !prof !3
  %496 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %497 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %496 to i96*
  %498 = load i96, i96* %497, align 4
  %499 = trunc i96 %498 to i32
  %500 = lshr i32 %499, 31
  %501 = xor i32 %500, 1
  %502 = bitcast %"class.blink::LayoutGrid"* %0 to i32 (%"class.blink::LayoutBox"*, i1, i32, i32)***
  %503 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*** %502, align 8
  %504 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %503, i64 133
  %505 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %504, align 8
  %506 = call i32 %505(%"class.blink::LayoutBox"* %26, i1 zeroext true, i32 %501, i32 1) #17
  %507 = icmp slt i32 %506, 0
  %508 = select i1 %507, i32 -2147483648, i32 2147483647
  %509 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %495, i32 %506) #17
  %510 = extractvalue { i32, i1 } %509, 1
  %511 = extractvalue { i32, i1 } %509, 0
  %512 = select i1 %510, i32 %508, i32 %511, !prof !3
  %513 = icmp slt i32 %477, %512
  %514 = select i1 %513, i32 %512, i32 %477
  %515 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %366, align 8
  %516 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %515, i64 0, i32 0, i32 9
  %517 = bitcast [20 x i8]* %516 to i160*
  %518 = load i160, i160* %517, align 8
  %519 = and i160 %518, 15211807202738752817960438464512
  %520 = icmp eq i160 %519, 0
  br i1 %520, label %521, label %525

521:                                              ; preds = %467
  %522 = load i32, i32* %474, align 4
  %523 = icmp eq i32 %522, %514
  br i1 %523, label %529, label %524

524:                                              ; preds = %521
  store i32 %514, i32* %474, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %26) #17
  br label %529

525:                                              ; preds = %467
  %526 = load i32, i32* %475, align 4
  %527 = icmp eq i32 %526, %514
  br i1 %527, label %529, label %528

528:                                              ; preds = %525
  store i32 %514, i32* %475, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %26) #17
  br label %529

529:                                              ; preds = %528, %525, %524, %521, %462
  call void @_ZN5blink10LayoutGrid15LayoutGridItemsEv(%"class.blink::LayoutGrid"* %0)
  call void @_ZN5blink24GridTrackSizingAlgorithm5ResetEv(%"class.blink::GridTrackSizingAlgorithm"* %80) #17
  %530 = load %"class.blink::Grid"*, %"class.blink::Grid"** %84, align 8
  %531 = bitcast %"class.blink::Grid"* %530 to i64 (%"class.blink::Grid"*, i32)***
  %532 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %531, align 8
  %533 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %532, align 8
  %534 = call i64 %533(%"class.blink::Grid"* %530, i32 1) #17
  %535 = icmp ugt i64 %534, 1
  br i1 %535, label %536, label %600

536:                                              ; preds = %529
  %537 = bitcast %"class.blink::ComputedStyle"** %366 to %"class.blink::ComputedStyleBase"**
  %538 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %537, align 8
  %539 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %538, i64 0, i32 3, i32 0, i32 0
  %540 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %539, align 8
  %541 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %540, i64 0, i32 2, i32 0, i32 0
  %542 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %541, align 8
  %543 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %542, i64 0, i32 2, i32 0, i32 0
  %544 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %543, align 8
  %545 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %544, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %546 = load i8, i8* %545, align 4, !range !4
  %547 = icmp eq i8 %546, 0
  br i1 %547, label %600, label %548

548:                                              ; preds = %536
  %549 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %544, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %550 = load i8, i8* %549, align 1
  switch i8 %550, label %600 [
    i8 8, label %551
    i8 1, label %551
  ]

551:                                              ; preds = %548, %548
  %552 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %553 = load %"class.blink::Node"*, %"class.blink::Node"** %552, align 8
  %554 = icmp eq %"class.blink::Node"* %553, null
  br i1 %554, label %555, label %562

555:                                              ; preds = %551, %555
  %556 = phi %"class.blink::LayoutObject"* [ %558, %555 ], [ %11, %551 ]
  %557 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %556, i64 0, i32 7
  %558 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %557, align 8
  %559 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %558, i64 0, i32 6, i32 0, i32 0
  %560 = load %"class.blink::Node"*, %"class.blink::Node"** %559, align 8
  %561 = icmp eq %"class.blink::Node"* %560, null
  br i1 %561, label %555, label %562

562:                                              ; preds = %555, %551
  %563 = phi %"class.blink::Node"* [ %553, %551 ], [ %560, %555 ]
  %564 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %563, i64 0, i32 3, i32 0, i32 0
  %565 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %564, align 8
  %566 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %565, i64 0, i32 2, i32 0, i32 0
  %567 = load %"class.blink::Document"*, %"class.blink::Document"** %566, align 8
  %568 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %567, i64 0, i32 2
  %569 = bitcast %"class.blink::UseCounter"* %568 to void (%"class.blink::UseCounter"*, i32)***
  %570 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %569, align 8
  %571 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %570, i64 3
  %572 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %571, align 8
  call void %572(%"class.blink::UseCounter"* %568, i32 3288) #17
  %573 = load i8, i8* %35, align 1, !range !4
  %574 = icmp eq i8 %573, 0
  br i1 %574, label %575, label %576

575:                                              ; preds = %562
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #18
  unreachable

576:                                              ; preds = %562
  %577 = load i8, i8* %126, align 1, !range !4
  %578 = icmp eq i8 %577, 0
  br i1 %578, label %579, label %600

579:                                              ; preds = %576
  %580 = load %"class.blink::Node"*, %"class.blink::Node"** %552, align 8
  %581 = icmp eq %"class.blink::Node"* %580, null
  br i1 %581, label %582, label %589

582:                                              ; preds = %579, %582
  %583 = phi %"class.blink::LayoutObject"* [ %585, %582 ], [ %11, %579 ]
  %584 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %583, i64 0, i32 7
  %585 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %584, align 8
  %586 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %585, i64 0, i32 6, i32 0, i32 0
  %587 = load %"class.blink::Node"*, %"class.blink::Node"** %586, align 8
  %588 = icmp eq %"class.blink::Node"* %587, null
  br i1 %588, label %582, label %589

589:                                              ; preds = %582, %579
  %590 = phi %"class.blink::Node"* [ %580, %579 ], [ %587, %582 ]
  %591 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %590, i64 0, i32 3, i32 0, i32 0
  %592 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %591, align 8
  %593 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %592, i64 0, i32 2, i32 0, i32 0
  %594 = load %"class.blink::Document"*, %"class.blink::Document"** %593, align 8
  %595 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %594, i64 0, i32 2
  %596 = bitcast %"class.blink::UseCounter"* %595 to void (%"class.blink::UseCounter"*, i32)***
  %597 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %596, align 8
  %598 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %597, i64 3
  %599 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %598, align 8
  call void %599(%"class.blink::UseCounter"* %595, i32 3289) #17
  br label %600

600:                                              ; preds = %576, %536, %548, %589, %529
  %601 = load i64, i64* %28, align 4
  %602 = trunc i64 %601 to i32
  %603 = lshr i64 %601, 32
  %604 = trunc i64 %603 to i32
  %605 = icmp ne i32 %602, %30
  %606 = icmp ne i32 %604, %32
  %607 = or i1 %605, %606
  %608 = or i1 %607, %1
  br i1 %608, label %630, label %609

609:                                              ; preds = %600
  %610 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %611 = load %"class.blink::Node"*, %"class.blink::Node"** %610, align 8
  %612 = icmp eq %"class.blink::Node"* %611, null
  br i1 %612, label %613, label %620

613:                                              ; preds = %609, %613
  %614 = phi %"class.blink::LayoutObject"* [ %616, %613 ], [ %11, %609 ]
  %615 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %614, i64 0, i32 7
  %616 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %615, align 8
  %617 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %616, i64 0, i32 6, i32 0, i32 0
  %618 = load %"class.blink::Node"*, %"class.blink::Node"** %617, align 8
  %619 = icmp eq %"class.blink::Node"* %618, null
  br i1 %619, label %613, label %620

620:                                              ; preds = %613, %609
  %621 = phi %"class.blink::Node"* [ %611, %609 ], [ %618, %613 ]
  %622 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %621, i64 0, i32 3, i32 0, i32 0
  %623 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %622, align 8
  %624 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %623, i64 0, i32 2, i32 0, i32 0
  %625 = load %"class.blink::Document"*, %"class.blink::Document"** %624, align 8
  %626 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %625, i64 0, i32 47, i32 0, i32 0
  %627 = load %"class.blink::Element"*, %"class.blink::Element"** %626, align 8
  %628 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %627, i64 0, i32 0, i32 0
  %629 = icmp eq %"class.blink::Node"* %628, %611
  br label %630

630:                                              ; preds = %600, %620
  %631 = phi i1 [ %629, %620 ], [ true, %600 ]
  call void @_ZN5blink10LayoutGrid23LayoutPositionedObjectsEbNS_11LayoutBlock24PositionedLayoutBehaviorE(%"class.blink::LayoutGrid"* %0, i1 zeroext %631, i32 0)
  %632 = call i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"* %26)
  call void @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlock"* %33, i32 %632, i1 zeroext false) #17
  call void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #17
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %25) #17
  call void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"* %33) #17
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %11)
  call void @_ZN5blink24GridTrackSizingAlgorithm23ClearBaselineItemsCacheEv(%"class.blink::GridTrackSizingAlgorithm"* %80) #17
  store i8 0, i8* %76, align 1
  call void @_ZN5blink24PaintLayerScrollableArea27DelayScrollOffsetClampScopeD1Ev(%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #17
  call void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  br label %633

633:                                              ; preds = %18, %630
  ret void
}

declare zeroext i1 @_ZN5blink11LayoutBlock16SimplifiedLayoutEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #1

declare void @_ZN5blink24PaintLayerScrollableArea27DelayScrollOffsetClampScopeC1Ev(%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"*, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock24HasDefiniteLogicalHeightEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox26ClearOverrideLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid27IsBaselineAlignmentForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 113336795588871485128704
  %8 = icmp eq i96 %7, 75557863725914323419136
  br i1 %8, label %89, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %11 = icmp eq i32 %2, 0
  %12 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %17 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, i64 92
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutObject"* %10, i32 39) #17
  %21 = select i1 %20, i32 7, i32 3
  br i1 %11, label %22, label %25

22:                                               ; preds = %9
  %23 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %15, i32 %21, %"class.blink::ComputedStyle"* %13) #17
  %24 = and i32 %23, 15
  br label %55

25:                                               ; preds = %9
  %26 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %15, i32 %21, %"class.blink::ComputedStyle"* %13) #17
  %27 = and i32 %26, 15
  %28 = icmp eq i32 %2, 1
  br i1 %28, label %29, label %55

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = trunc i96 %32 to i32
  %34 = icmp slt i32 %33, 0
  %35 = bitcast %"class.blink::ComputedStyle"** %14 to %"class.blink::ComputedStyleBase"**
  %36 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %36, i64 0, i32 7, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %37, align 8
  br i1 %34, label %39, label %47

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %38, i64 0, i32 12, i32 2
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %82, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %38, i64 0, i32 9, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br label %82

47:                                               ; preds = %29
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %38, i64 0, i32 10, i32 2
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %82, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %38, i64 0, i32 11, i32 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br label %82

55:                                               ; preds = %22, %25
  %56 = phi i32 [ %24, %22 ], [ %27, %25 ]
  %57 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %58 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %57 to i96*
  %59 = load i96, i96* %58, align 4
  %60 = trunc i96 %59 to i32
  %61 = icmp slt i32 %60, 0
  %62 = bitcast %"class.blink::ComputedStyle"** %14 to %"class.blink::ComputedStyleBase"**
  %63 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %63, i64 0, i32 7, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %64, align 8
  br i1 %61, label %66, label %74

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %65, i64 0, i32 10, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %82, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %65, i64 0, i32 11, i32 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br label %82

74:                                               ; preds = %55
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %65, i64 0, i32 12, i32 2
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %65, i64 0, i32 9, i32 2
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 0
  br label %82

82:                                               ; preds = %78, %74, %70, %66, %51, %47, %43, %39
  %83 = phi i32 [ %27, %39 ], [ %27, %43 ], [ %27, %47 ], [ %27, %51 ], [ %56, %66 ], [ %56, %70 ], [ %56, %74 ], [ %56, %78 ]
  %84 = phi i1 [ true, %39 ], [ %46, %43 ], [ true, %47 ], [ %54, %51 ], [ true, %66 ], [ %73, %70 ], [ true, %74 ], [ %81, %78 ]
  %85 = or i32 %83, 1
  %86 = icmp eq i32 %85, 5
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = xor i1 %84, true
  br label %89

89:                                               ; preds = %82, %87, %3
  %90 = phi i1 [ false, %3 ], [ false, %82 ], [ %88, %87 ]
  ret i1 %90
}

declare void @_ZN5blink24GridTrackSizingAlgorithm24CacheBaselineAlignedItemERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"*, %"class.blink::LayoutBlock"*, %"class.blink::SubtreeLayoutScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid16PlaceItemsOnGridERNS_24GridTrackSizingAlgorithmEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"*, %"class.blink::GridTrackSizingAlgorithm"* nocapture readonly dereferenceable(272), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.1741", align 8
  %5 = alloca %"class.WTF::Vector.1511", align 8
  %6 = alloca %"class.WTF::Vector.1511", align 8
  %7 = alloca %"class.blink::LayoutBox"*, align 8
  %8 = alloca %"struct.blink::GridArea", align 8
  %9 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 12
  %10 = load %"class.blink::Grid"*, %"class.blink::Grid"** %9, align 8
  %11 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutBlock"*
  %12 = tail call i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"* %11) #17
  %13 = icmp ne i32 %12, -64
  %14 = zext i32 %12 to i64
  %15 = shl nuw i64 %14, 32
  %16 = zext i1 %13 to i64
  %17 = or i64 %15, %16
  %18 = tail call i64 @_ZNK5blink10LayoutGrid28ComputeAutoRepeatTracksCountENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %0, i32 1, i64 %17)
  %19 = tail call i64 @_ZNK5blink10LayoutGrid28ComputeAutoRepeatTracksCountENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %0, i32 0, i64 %2)
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %23 = bitcast %"class.blink::ComputedStyle"** %22 to %"class.blink::ComputedStyleBase"**
  %24 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %24, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %30, i64 0, i32 18
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %21
  %35 = icmp ult i64 %18, 1000
  %36 = select i1 %35, i64 %18, i64 1000
  br label %43

37:                                               ; preds = %21
  %38 = icmp ugt i64 %32, 999
  br i1 %38, label %43, label %39

39:                                               ; preds = %37
  %40 = sub nuw nsw i64 1000, %32
  %41 = icmp ult i64 %40, %18
  %42 = select i1 %41, i64 %40, i64 %18
  br label %43

43:                                               ; preds = %3, %34, %37, %39
  %44 = phi i64 [ 0, %3 ], [ %36, %34 ], [ %42, %39 ], [ 0, %37 ]
  %45 = icmp eq i64 %19, 0
  br i1 %45, label %68, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %48 = bitcast %"class.blink::ComputedStyle"** %47 to %"class.blink::ComputedStyleBase"**
  %49 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %49, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %51, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %53, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %55, i64 0, i32 17
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %46
  %60 = icmp ult i64 %19, 1000
  %61 = select i1 %60, i64 %19, i64 1000
  br label %68

62:                                               ; preds = %46
  %63 = icmp ugt i64 %57, 999
  br i1 %63, label %68, label %64

64:                                               ; preds = %62
  %65 = sub nuw nsw i64 1000, %57
  %66 = icmp ult i64 %65, %19
  %67 = select i1 %66, i64 %65, i64 %19
  br label %68

68:                                               ; preds = %43, %59, %62, %64
  %69 = phi i64 [ 0, %43 ], [ %61, %59 ], [ %67, %64 ], [ 0, %62 ]
  %70 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %10, i32 1) #17
  %71 = icmp eq i64 %44, %70
  br i1 %71, label %72, label %75

72:                                               ; preds = %68
  %73 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %10, i32 0) #17
  %74 = icmp eq i64 %69, %73
  br i1 %74, label %76, label %75

75:                                               ; preds = %72, %68
  tail call void @_ZN5blink4Grid22SetNeedsItemsPlacementEb(%"class.blink::Grid"* %10, i1 zeroext true) #17
  tail call void @_ZN5blink4Grid19SetAutoRepeatTracksEmm(%"class.blink::Grid"* %10, i64 %44, i64 %69) #17
  br label %76

76:                                               ; preds = %72, %75
  %77 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %10, i64 0, i32 6
  %78 = load i8, i8* %77, align 8, !range !4
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %251, label %80

80:                                               ; preds = %76
  tail call void @_ZNK5blink10LayoutGrid36PopulateExplicitGridAndOrderIteratorERNS_4GridE(%"class.blink::LayoutGrid"* %0, %"class.blink::Grid"* dereferenceable(168) %10)
  %81 = bitcast %"class.WTF::Vector.1511"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #17
  %82 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %5, i64 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %5, i64 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #17
  %85 = bitcast %"class.WTF::Vector.1511"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #17
  %86 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %6, i64 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %6, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 16, i1 false) #17
  %89 = bitcast %"class.blink::LayoutBox"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #17
  %90 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %10, i64 0, i32 1
  %91 = tail call %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator5FirstEv(%"class.blink::OrderIterator"* %90) #17
  store %"class.blink::LayoutBox"* %91, %"class.blink::LayoutBox"** %7, align 8
  %92 = icmp eq %"class.blink::LayoutBox"* %91, null
  br i1 %92, label %107, label %93

93:                                               ; preds = %80
  %94 = bitcast %"struct.blink::GridArea"* %8 to i8*
  %95 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %8, i64 0, i32 0
  %96 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %8, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %8, i64 0, i32 0, i32 1
  %98 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %8, i64 0, i32 0, i32 2
  %99 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %8, i64 0, i32 1
  %100 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %99, i64 0, i32 0
  %101 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %8, i64 0, i32 1, i32 1
  %102 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %8, i64 0, i32 1, i32 2
  %103 = bitcast %"class.blink::Grid"* %10 to void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)***
  %104 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %105 = bitcast %"class.blink::LayoutBox"** %7 to i64*
  %106 = bitcast %"struct.blink::GridArea"* %8 to i8*
  br label %154

107:                                              ; preds = %247, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #17
  call void @_ZNK5blink10LayoutGrid34PlaceSpecifiedMajorAxisItemsOnGridERNS_4GridERKN3WTF6VectorIPNS_9LayoutBoxELj0ENS3_18PartitionAllocatorEEE(%"class.blink::LayoutGrid"* %0, %"class.blink::Grid"* dereferenceable(168) %10, %"class.WTF::Vector.1511"* nonnull dereferenceable(16) %6)
  %108 = bitcast %"struct.std::__1::pair.1741"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #17
  %109 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #17
  %110 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 3, i32 0, i32 0
  %112 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %112, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 2, i32 0, i32 0
  %116 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %116, i64 0, i32 45
  %118 = load i32, i32* %117, align 4
  %119 = and i32 %118, 16384
  %120 = icmp eq i32 %119, 0
  %121 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %82, align 8
  %122 = load i32, i32* %84, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %121, i64 %123
  %125 = icmp eq i32 %122, 0
  br i1 %125, label %133, label %126

126:                                              ; preds = %107, %130
  %127 = phi %"class.blink::LayoutBox"** [ %131, %130 ], [ %121, %107 ]
  %128 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %127, align 8
  call void @_ZNK5blink10LayoutGrid28PlaceAutoMajorAxisItemOnGridERNS_4GridERNS_9LayoutBoxERNSt3__14pairImmEE(%"class.blink::LayoutGrid"* %0, %"class.blink::Grid"* dereferenceable(168) %10, %"class.blink::LayoutBox"* dereferenceable(216) %128, %"struct.std::__1::pair.1741"* nonnull dereferenceable(16) %4) #17
  br i1 %120, label %130, label %129

129:                                              ; preds = %126
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #17
  br label %130

130:                                              ; preds = %129, %126
  %131 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %127, i64 1
  %132 = icmp eq %"class.blink::LayoutBox"** %131, %124
  br i1 %132, label %133, label %126

133:                                              ; preds = %130, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #17
  %134 = call %"class.WTF::LinkedHashSet"* @_ZNK5blink10LayoutGrid31ComputeEmptyTracksForAutoRepeatERNS_4GridENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, %"class.blink::Grid"* dereferenceable(168) %10, i32 0)
  call void @_ZN5blink4Grid25SetAutoRepeatEmptyColumnsENSt3__110unique_ptrIN3WTF13LinkedHashSetImNS_30OrderedTrackIndexSetHashTraitsENS3_18PartitionAllocatorEEENS1_14default_deleteIS7_EEEE(%"class.blink::Grid"* %10, %"class.WTF::LinkedHashSet"* %134) #17
  %135 = call %"class.WTF::LinkedHashSet"* @_ZNK5blink10LayoutGrid31ComputeEmptyTracksForAutoRepeatERNS_4GridENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, %"class.blink::Grid"* dereferenceable(168) %10, i32 1)
  call void @_ZN5blink4Grid22SetAutoRepeatEmptyRowsENSt3__110unique_ptrIN3WTF13LinkedHashSetImNS_30OrderedTrackIndexSetHashTraitsENS3_18PartitionAllocatorEEENS1_14default_deleteIS7_EEEE(%"class.blink::Grid"* %10, %"class.WTF::LinkedHashSet"* %135) #17
  call void @_ZN5blink4Grid22SetNeedsItemsPlacementEb(%"class.blink::Grid"* %10, i1 zeroext false) #17
  %136 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %86, align 8
  %137 = icmp eq %"class.blink::LayoutBox"** %136, null
  %138 = bitcast %"class.blink::LayoutBox"** %136 to i8*
  br i1 %137, label %144, label %139, !prof !2

139:                                              ; preds = %133
  %140 = load i32, i32* %88, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %143, label %142, !prof !3

142:                                              ; preds = %139
  store i32 0, i32* %88, align 4
  br label %143

143:                                              ; preds = %142, %139
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %138) #17
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %86, align 8
  br label %144

144:                                              ; preds = %133, %143
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #17
  %145 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %82, align 8
  %146 = icmp eq %"class.blink::LayoutBox"** %145, null
  %147 = bitcast %"class.blink::LayoutBox"** %145 to i8*
  br i1 %146, label %153, label %148, !prof !2

148:                                              ; preds = %144
  %149 = load i32, i32* %84, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %152, label %151, !prof !3

151:                                              ; preds = %148
  store i32 0, i32* %84, align 4
  br label %152

152:                                              ; preds = %151, %148
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %147) #17
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %82, align 8
  br label %153

153:                                              ; preds = %144, %152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #17
  br label %251

154:                                              ; preds = %93, %247
  %155 = phi i64 [ 0, %93 ], [ %248, %247 ]
  %156 = phi %"class.blink::LayoutBox"* [ %91, %93 ], [ %249, %247 ]
  %157 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %156, i64 0, i32 0, i32 0, i32 4
  %158 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %157 to i96*
  %159 = load i96, i96* %158, align 4
  %160 = and i96 %159, 113336795588871485128704
  %161 = icmp eq i96 %160, 75557863725914323419136
  br i1 %161, label %247, label %162

162:                                              ; preds = %154
  %163 = call zeroext i1 @_ZNK5blink9LayoutBox45HasOverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"* nonnull %156) #17
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %165, i32 0) #17
  br label %166

166:                                              ; preds = %164, %162
  %167 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  %168 = call zeroext i1 @_ZNK5blink9LayoutBox46HasOverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* %167) #17
  br i1 %168, label %171, label %169

169:                                              ; preds = %166
  %170 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %170, i32 -64) #17
  br label %171

171:                                              ; preds = %169, %166
  %172 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  %173 = add i64 %155, 1
  call void @_ZN5blink4Grid21SetGridItemPaintOrderERKNS_9LayoutBoxEm(%"class.blink::Grid"* %10, %"class.blink::LayoutBox"* dereferenceable(216) %172, i64 %155) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 24, i1 false)
  %174 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  call void @_ZNK5blink4Grid12GridItemAreaERKNS_9LayoutBoxE(%"struct.blink::GridArea"* nonnull sret %8, %"class.blink::Grid"* %10, %"class.blink::LayoutBox"* dereferenceable(216) %174) #17
  %175 = load i32, i32* %102, align 4
  %176 = icmp eq i32 %175, 2
  br i1 %176, label %184, label %177

177:                                              ; preds = %171
  %178 = call i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %10, i32 1) #17
  store i32 1, i32* %102, align 4
  %179 = load i32, i32* %100, align 4
  %180 = trunc i64 %178 to i32
  %181 = add i32 %179, %180
  store i32 %181, i32* %100, align 4
  %182 = load i32, i32* %101, align 4
  %183 = add i32 %182, %180
  store i32 %183, i32* %101, align 4
  br label %184

184:                                              ; preds = %177, %171
  %185 = load i32, i32* %98, align 8
  %186 = icmp eq i32 %185, 2
  br i1 %186, label %187, label %189

187:                                              ; preds = %184
  %188 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  br label %199

189:                                              ; preds = %184
  %190 = call i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %10, i32 0) #17
  store i32 1, i32* %98, align 8
  %191 = load i32, i32* %96, align 8
  %192 = trunc i64 %190 to i32
  %193 = add i32 %191, %192
  store i32 %193, i32* %96, align 8
  %194 = load i32, i32* %97, align 4
  %195 = add i32 %194, %192
  store i32 %195, i32* %97, align 4
  %196 = load i32, i32* %102, align 4
  %197 = icmp eq i32 %196, 2
  %198 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  br i1 %197, label %199, label %242

199:                                              ; preds = %187, %189
  %200 = phi %"class.blink::LayoutBox"* [ %188, %187 ], [ %198, %189 ]
  call void @_ZN5blink4Grid15SetGridItemAreaERKNS_9LayoutBoxENS_8GridAreaE(%"class.blink::Grid"* %10, %"class.blink::LayoutBox"* dereferenceable(216) %200, %"struct.blink::GridArea"* nonnull byval(%"struct.blink::GridArea") align 8 %8) #17
  %201 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %104, align 8
  %202 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %201, i64 0, i32 0, i32 3, i32 0, i32 0
  %203 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %202, align 8
  %204 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %203, i64 0, i32 2, i32 0, i32 0
  %205 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %205, i64 0, i32 2, i32 0, i32 0
  %207 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %207, i64 0, i32 45
  %209 = load i32, i32* %208, align 4
  %210 = and i32 %209, 65536
  %211 = icmp eq i32 %210, 0
  %212 = select i1 %211, %"struct.blink::GridSpan"* %99, %"struct.blink::GridSpan"* %95
  %213 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %212, i64 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 2
  br i1 %215, label %216, label %229

216:                                              ; preds = %199
  %217 = load i32, i32* %84, align 4
  %218 = load i32, i32* %83, align 8
  %219 = icmp eq i32 %217, %218
  br i1 %219, label %228, label %220, !prof !3

220:                                              ; preds = %216
  %221 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %82, align 8
  %222 = zext i32 %217 to i64
  %223 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %221, i64 %222
  %224 = load i64, i64* %105, align 8
  %225 = bitcast %"class.blink::LayoutBox"** %223 to i64*
  store i64 %224, i64* %225, align 8
  %226 = load i32, i32* %84, align 4
  %227 = add i32 %226, 1
  store i32 %227, i32* %84, align 4
  br label %246

228:                                              ; preds = %216
  call void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1511"* nonnull %5, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %7) #17
  br label %246

229:                                              ; preds = %199
  %230 = load i32, i32* %88, align 4
  %231 = load i32, i32* %87, align 8
  %232 = icmp eq i32 %230, %231
  br i1 %232, label %241, label %233, !prof !3

233:                                              ; preds = %229
  %234 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %86, align 8
  %235 = zext i32 %230 to i64
  %236 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %234, i64 %235
  %237 = load i64, i64* %105, align 8
  %238 = bitcast %"class.blink::LayoutBox"** %236 to i64*
  store i64 %237, i64* %238, align 8
  %239 = load i32, i32* %88, align 4
  %240 = add i32 %239, 1
  store i32 %240, i32* %88, align 4
  br label %246

241:                                              ; preds = %229
  call void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1511"* nonnull %6, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %7) #17
  br label %246

242:                                              ; preds = %189
  %243 = load void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)**, void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)*** %103, align 8
  %244 = getelementptr inbounds void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)*, void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)** %243, i64 2
  %245 = load void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)*, void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)** %244, align 8
  call void %245(%"class.blink::Grid"* %10, %"class.blink::LayoutBox"* dereferenceable(216) %198, %"struct.blink::GridArea"* nonnull dereferenceable(24) %8) #17
  br label %246

246:                                              ; preds = %220, %228, %233, %241, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #17
  br label %247

247:                                              ; preds = %246, %154
  %248 = phi i64 [ %155, %154 ], [ %173, %246 ]
  %249 = call %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator4NextEv(%"class.blink::OrderIterator"* %90) #17
  store %"class.blink::LayoutBox"* %249, %"class.blink::LayoutBox"** %7, align 8
  %250 = icmp eq %"class.blink::LayoutBox"* %249, null
  br i1 %250, label %107, label %154

251:                                              ; preds = %76, %153
  ret void
}

declare void @_ZN5blink24GridTrackSizingAlgorithm17SetAvailableSpaceENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid25PerformGridItemsPreLayoutERKNS_24GridTrackSizingAlgorithmE(%"class.blink::LayoutGrid"*, %"class.blink::GridTrackSizingAlgorithm"* dereferenceable(272)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %2, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %3, %2 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %2
  %15 = phi %"class.blink::Node"* [ %5, %2 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %19) #17
  %21 = tail call zeroext i1 @_ZNK5blink14LocalFrameView17IsInPerformLayoutEv(%"class.blink::LocalFrameView"* %20) #17
  br i1 %21, label %22, label %172

22:                                               ; preds = %14
  %23 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %24 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %24, i64 13
  %26 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %25, align 8
  %27 = tail call %"class.blink::LayoutObjectChildList"* %26(%"class.blink::LayoutObject"* %3) #17
  %28 = icmp eq %"class.blink::LayoutObjectChildList"* %27, null
  br i1 %28, label %172, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.blink::LayoutObjectChildList"* %27 to %"class.blink::LayoutBox"**
  %31 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutBox"* %31, null
  br i1 %32, label %172, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %31, i64 0, i32 0, i32 0, i32 4
  %35 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %34 to i96*
  %36 = load i96, i96* %35, align 4
  %37 = and i96 %36, 113336795588871485128704
  %38 = icmp eq i96 %37, 75557863725914323419136
  br i1 %38, label %39, label %51

39:                                               ; preds = %33, %45
  %40 = phi %"class.blink::LayoutBox"* [ %43, %45 ], [ %31, %33 ]
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %40, i64 0, i32 0, i32 0, i32 9
  %42 = bitcast %"class.blink::LayoutObject"** %41 to %"class.blink::LayoutBox"**
  %43 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %42, align 8
  %44 = icmp eq %"class.blink::LayoutBox"* %43, null
  br i1 %44, label %172, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %43, i64 0, i32 0, i32 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 113336795588871485128704
  %50 = icmp eq i96 %49, 75557863725914323419136
  br i1 %50, label %39, label %51

51:                                               ; preds = %45, %33
  %52 = phi %"class.blink::LayoutBox"* [ %31, %33 ], [ %43, %45 ]
  br label %53

53:                                               ; preds = %166, %51
  %54 = phi %"class.blink::LayoutBox"* [ %52, %51 ], [ %164, %166 ]
  %55 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %54) #17
  br i1 %55, label %56, label %123

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %54, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %54, i64 0, i32 0, i32 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 63
  %62 = icmp eq i96 %61, 0
  %63 = and i96 %60, 113336795588871485128704
  %64 = icmp eq i96 %63, 75557863725914323419136
  %65 = or i1 %62, %64
  br i1 %65, label %123, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %54, i64 0, i32 0, i32 0, i32 5, i32 0
  %68 = bitcast %"class.blink::ComputedStyle"** %67 to %"class.blink::ComputedStyleBase"**
  %69 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %69, i64 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %71, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %75, i64 0, i32 45
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, 536870912
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %87, label %80

80:                                               ; preds = %66
  %81 = bitcast %"class.blink::LayoutBox"* %54 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %82 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %81, align 8
  %83 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %82, i64 44
  %84 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %83, align 8
  %85 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %84(%"class.blink::LayoutObject"* %57) #17
  %86 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %85, null
  br i1 %86, label %87, label %123

87:                                               ; preds = %80, %66
  %88 = bitcast %"class.blink::LayoutBox"* %54 to i1 (%"class.blink::LayoutObject"*, i32)***
  %89 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %88, align 8
  %90 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %89, i64 92
  %91 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %90, align 8
  %92 = tail call zeroext i1 %91(%"class.blink::LayoutObject"* %57, i32 46) #17
  br i1 %92, label %123, label %93

93:                                               ; preds = %87
  %94 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %88, align 8
  %95 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %94, i64 92
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, align 8
  %97 = tail call zeroext i1 %96(%"class.blink::LayoutObject"* %57, i32 48) #17
  br i1 %97, label %123, label %98

98:                                               ; preds = %93
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %88, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, i64 92
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* %57, i32 45) #17
  br i1 %102, label %123, label %103

103:                                              ; preds = %98
  %104 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %88, align 8
  %105 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %104, i64 92
  %106 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %105, align 8
  %107 = tail call zeroext i1 %106(%"class.blink::LayoutObject"* %57, i32 49) #17
  br i1 %107, label %123, label %108

108:                                              ; preds = %103
  %109 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %88, align 8
  %110 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %109, i64 92
  %111 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.blink::LayoutObject"* %57, i32 50) #17
  br i1 %112, label %123, label %113

113:                                              ; preds = %108
  %114 = tail call i64 @_ZNK5blink24GridTrackSizingAlgorithm32EstimatedGridAreaBreadthForChildERKNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithm"* %1, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %54) #17
  tail call void @_ZNK5blink10LayoutGrid25UpdateGridAreaLogicalSizeERNS_9LayoutBoxENS_10LayoutSizeE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %54, i64 %114)
  %115 = load i96, i96* %59, align 4
  %116 = and i96 %115, 63
  %117 = icmp eq i96 %116, 0
  br i1 %117, label %159, label %118

118:                                              ; preds = %113
  %119 = bitcast %"class.blink::LayoutBox"* %54 to void (%"class.blink::LayoutObject"*)***
  %120 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %120, i64 54
  %122 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %121, align 8
  tail call void %122(%"class.blink::LayoutObject"* %57) #17
  br label %159

123:                                              ; preds = %87, %93, %98, %103, %108, %80, %56, %53
  %124 = tail call zeroext i1 @_ZNK5blink10LayoutGrid27IsBaselineAlignmentForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %54)
  br i1 %124, label %125, label %159

125:                                              ; preds = %123
  %126 = tail call zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"* nonnull %54) #17
  br i1 %126, label %145, label %127

127:                                              ; preds = %125
  %128 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* nonnull %54) #17
  br i1 %128, label %145, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %54, i64 0, i32 0, i32 0, i32 5, i32 0
  %131 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %131, i64 0, i32 0, i32 9
  %133 = bitcast [20 x i8]* %132 to i160*
  %134 = load i160, i160* %133, align 8
  %135 = and i160 %134, 15211807202738752817960438464512
  %136 = icmp eq i160 %135, 0
  %137 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %131, i64 0, i32 0, i32 5, i32 0, i32 0
  %138 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %138, i64 0, i32 3
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %138, i64 0, i32 8
  %141 = select i1 %136, %"class.blink::Length"* %139, %"class.blink::Length"* %140
  %142 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %141, i64 0, i32 2
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %129, %127, %125
  %146 = tail call i64 @_ZNK5blink24GridTrackSizingAlgorithm32EstimatedGridAreaBreadthForChildERKNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithm"* %1, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %54) #17
  tail call void @_ZNK5blink10LayoutGrid25UpdateGridAreaLogicalSizeERNS_9LayoutBoxENS_10LayoutSizeE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %54, i64 %146)
  br label %147

147:                                              ; preds = %145, %129
  %148 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %54, i64 0, i32 0, i32 0, i32 4
  %149 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %148 to i96*
  %150 = load i96, i96* %149, align 4
  %151 = and i96 %150, 63
  %152 = icmp eq i96 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %54, i64 0, i32 0, i32 0
  %155 = bitcast %"class.blink::LayoutBox"* %54 to void (%"class.blink::LayoutObject"*)***
  %156 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %156, i64 54
  %158 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %157, align 8
  tail call void %158(%"class.blink::LayoutObject"* %154) #17
  br label %159

159:                                              ; preds = %153, %147, %118, %113, %123
  br label %160

160:                                              ; preds = %159, %166
  %161 = phi %"class.blink::LayoutBox"* [ %164, %166 ], [ %54, %159 ]
  %162 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %161, i64 0, i32 0, i32 0, i32 9
  %163 = bitcast %"class.blink::LayoutObject"** %162 to %"class.blink::LayoutBox"**
  %164 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %163, align 8
  %165 = icmp eq %"class.blink::LayoutBox"* %164, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %164, i64 0, i32 0, i32 0, i32 4
  %168 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %167 to i96*
  %169 = load i96, i96* %168, align 4
  %170 = and i96 %169, 113336795588871485128704
  %171 = icmp eq i96 %170, 75557863725914323419136
  br i1 %171, label %160, label %53

172:                                              ; preds = %39, %160, %22, %29, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid30CachedHasDefiniteLogicalHeightEv(%"class.blink::LayoutGrid"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #18
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp ne i8 %8, 0
  ret i1 %9
}

declare i32 @_ZNK5blink9LayoutBox22AvailableLogicalHeightENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid34ComputeTrackSizesForIndefiniteSizeERNS_24GridTrackSizingAlgorithmENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::GridTrackSizingAlgorithm"* dereferenceable(272), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %1, i64 0, i32 12
  %5 = load %"class.blink::Grid"*, %"class.blink::Grid"** %4, align 8
  %6 = icmp eq i32 %2, 1
  %7 = bitcast %"class.blink::Grid"* %5 to i64 (%"class.blink::Grid"*, i32)***
  %8 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %7, align 8
  %9 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %8, align 8
  %10 = tail call i64 %9(%"class.blink::Grid"* %5, i32 1) #17
  br i1 %6, label %22, label %11

11:                                               ; preds = %3
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %11
  %14 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %7, align 8
  %15 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %14, align 8
  %16 = tail call i64 %15(%"class.blink::Grid"* %5, i32 0) #17
  br label %22

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %5, i32 0) #17
  %21 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %19, i64 %20) #17
  br label %22

22:                                               ; preds = %3, %13, %17
  %23 = phi i64 [ %10, %3 ], [ %16, %13 ], [ %21, %17 ]
  tail call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* %1, i32 %2, i64 %23, i64 0) #17
  tail call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* %1) #17
  ret void
}

declare i32 @_ZNK5blink24GridTrackSizingAlgorithm21ComputeTrackBasedSizeEv(%"class.blink::GridTrackSizingAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = and i16 %7, 240
  %15 = icmp ne i16 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %49, label %17

17:                                               ; preds = %10, %1
  %18 = and i16 %7, 3584
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i16 %7, 3840
  %25 = icmp ne i16 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %49, label %27

27:                                               ; preds = %20, %17
  %28 = icmp ult i16 %7, 8192
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29, %27
  %34 = and i16 %7, 14
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = and i16 %7, 15
  %41 = icmp ne i16 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %49, label %43

43:                                               ; preds = %36, %33
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 89202980794122492566142873090593446023921664
  %48 = icmp eq i160 %47, 0
  br i1 %48, label %196, label %49

49:                                               ; preds = %43, %36, %20, %10, %29
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8, !noalias !6
  %53 = lshr i160 %52, 102
  %54 = trunc i160 %53 to i8
  %55 = and i8 %54, 3
  %56 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  switch i8 %55, label %57 [
    i8 0, label %66
    i8 1, label %58
  ]

57:                                               ; preds = %49
  br label %58

58:                                               ; preds = %57, %49
  %59 = phi { i64, i64 } [ { i64 993, i64 0 }, %57 ], [ { i64 1001, i64 0 }, %49 ]
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = getelementptr inbounds i8, i8* %56, i64 %61
  %63 = bitcast i8* %62 to %"class.blink::LayoutBoxModelObject"*
  %64 = and i64 %60, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %58, %49
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %63, %58 ], [ %0, %49 ]
  %68 = phi i8* [ %62, %58 ], [ %56, %49 ]
  %69 = phi i64 [ %60, %58 ], [ 977, %49 ]
  %70 = bitcast i8* %68 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = add i64 %69, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = bitcast i8* %73 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  br label %78

76:                                               ; preds = %58
  %77 = inttoptr i64 %60 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %78

78:                                               ; preds = %76, %66
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %66 ], [ %63, %76 ]
  %80 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %75, %66 ], [ %77, %76 ]
  %81 = tail call i32 %80(%"class.blink::LayoutBoxModelObject"* %79) #17
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !9
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8, !noalias !9
  %86 = lshr i160 %85, 102
  %87 = trunc i160 %86 to i8
  %88 = and i8 %87, 3
  switch i8 %88, label %89 [
    i8 0, label %98
    i8 1, label %90
  ]

89:                                               ; preds = %78
  br label %90

90:                                               ; preds = %89, %78
  %91 = phi { i64, i64 } [ { i64 961, i64 0 }, %89 ], [ { i64 969, i64 0 }, %78 ]
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds i8, i8* %56, i64 %93
  %95 = bitcast i8* %94 to %"class.blink::LayoutBoxModelObject"*
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %90, %78
  %99 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %90 ], [ %0, %78 ]
  %100 = phi i8* [ %94, %90 ], [ %56, %78 ]
  %101 = phi i64 [ %92, %90 ], [ 945, %78 ]
  %102 = bitcast i8* %100 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %101, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %110

108:                                              ; preds = %90
  %109 = inttoptr i64 %92 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %110

110:                                              ; preds = %98, %108
  %111 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %98 ], [ %95, %108 ]
  %112 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %98 ], [ %109, %108 ]
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %111) #17
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %113) #17
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !3
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !12
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8, !noalias !12
  %124 = lshr i160 %123, 102
  %125 = trunc i160 %124 to i8
  %126 = and i8 %125, 3
  switch i8 %126, label %127 [
    i8 0, label %136
    i8 1, label %128
  ]

127:                                              ; preds = %110
  br label %128

128:                                              ; preds = %127, %110
  %129 = phi { i64, i64 } [ { i64 1001, i64 0 }, %127 ], [ { i64 993, i64 0 }, %110 ]
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  %132 = getelementptr inbounds i8, i8* %56, i64 %131
  %133 = bitcast i8* %132 to %"class.blink::LayoutBoxModelObject"*
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %128, %110
  %137 = phi %"class.blink::LayoutBoxModelObject"* [ %133, %128 ], [ %0, %110 ]
  %138 = phi i8* [ %132, %128 ], [ %56, %110 ]
  %139 = phi i64 [ %130, %128 ], [ 985, %110 ]
  %140 = bitcast i8* %138 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = add i64 %139, -1
  %143 = getelementptr i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, align 8
  br label %148

146:                                              ; preds = %128
  %147 = inttoptr i64 %130 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %148

148:                                              ; preds = %146, %136
  %149 = phi %"class.blink::LayoutBoxModelObject"* [ %137, %136 ], [ %133, %146 ]
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %145, %136 ], [ %147, %146 ]
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %149) #17
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !15
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8, !noalias !15
  %156 = lshr i160 %155, 102
  %157 = trunc i160 %156 to i8
  %158 = and i8 %157, 3
  switch i8 %158, label %159 [
    i8 0, label %168
    i8 1, label %160
  ]

159:                                              ; preds = %148
  br label %160

160:                                              ; preds = %159, %148
  %161 = phi { i64, i64 } [ { i64 969, i64 0 }, %159 ], [ { i64 961, i64 0 }, %148 ]
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = extractvalue { i64, i64 } %161, 1
  %164 = getelementptr inbounds i8, i8* %56, i64 %163
  %165 = bitcast i8* %164 to %"class.blink::LayoutBoxModelObject"*
  %166 = and i64 %162, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160, %148
  %169 = phi %"class.blink::LayoutBoxModelObject"* [ %165, %160 ], [ %0, %148 ]
  %170 = phi i8* [ %164, %160 ], [ %56, %148 ]
  %171 = phi i64 [ %162, %160 ], [ 953, %148 ]
  %172 = bitcast i8* %170 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = add i64 %171, -1
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = bitcast i8* %175 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %177 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %176, align 8
  br label %180

178:                                              ; preds = %160
  %179 = inttoptr i64 %162 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %180

180:                                              ; preds = %168, %178
  %181 = phi %"class.blink::LayoutBoxModelObject"* [ %169, %168 ], [ %165, %178 ]
  %182 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %177, %168 ], [ %179, %178 ]
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %181) #17
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %183) #17
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !3
  %190 = icmp slt i32 %189, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %189) #17
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !3
  br label %196

196:                                              ; preds = %43, %180
  %197 = phi i32 [ %195, %180 ], [ 0, %43 ]
  ret i32 %197
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #17
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #17
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #17
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %86, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 0, i32 0, i32 1) #17
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = extractvalue { i64, i64 } %47, 1
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %72 [
    i8 0, label %59
    i8 1, label %65
    i8 3, label %65
    i8 2, label %68
  ]

59:                                               ; preds = %46
  %60 = lshr i64 %51, 32
  %61 = trunc i64 %60 to i32
  %62 = and i64 %48, 4294967295
  %63 = shl i64 %51, 32
  %64 = or i64 %63, %62
  br label %73

65:                                               ; preds = %46, %46
  %66 = and i64 %51, -4294967296
  %67 = or i64 %66, %50
  br label %73

68:                                               ; preds = %46
  %69 = lshr i64 %51, 32
  %70 = and i64 %48, -4294967296
  %71 = or i64 %70, %69
  br label %73

72:                                               ; preds = %46
  unreachable

73:                                               ; preds = %59, %65, %68
  %74 = phi i64 [ %71, %68 ], [ %67, %65 ], [ %64, %59 ]
  %75 = phi i64 [ %51, %68 ], [ %51, %65 ], [ %50, %59 ]
  %76 = phi i32 [ %49, %68 ], [ %49, %65 ], [ %61, %59 ]
  %77 = trunc i64 %75 to i32
  %78 = and i160 %55, 41538374868278621028243970633760768
  %79 = icmp ne i160 %78, 0
  %80 = select i1 %79, i32 %76, i32 %77
  %81 = select i1 %79, i32 %77, i32 %76
  %82 = zext i32 %80 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %81 to i64
  %85 = or i64 %83, %84
  br label %86

86:                                               ; preds = %39, %73
  %87 = phi i64 [ %74, %73 ], [ 0, %39 ]
  %88 = phi i64 [ %85, %73 ], [ 0, %39 ]
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = insertvalue { i64, i64 } %89, i64 %87, 1
  ret { i64, i64 } %90
}

declare void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink24GridTrackSizingAlgorithm12SetFreeSpaceENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #17
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 118
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #17
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #17
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !3
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 119
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #17
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #17
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #17
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 120
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #17
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #17
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !3
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 121
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #17
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #17
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid15LayoutGridItemsEv(%"class.blink::LayoutGrid"*) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %25, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 16777216
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 67108876
  %18 = icmp eq i32 %17, 67108864
  br i1 %18, label %19, label %25, !prof !18

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::Node"* %12 to %"class.blink::Element"*
  %21 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %20) #17
  %22 = icmp eq %"class.blink::DisplayLockContext"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %21) #17
  br i1 %24, label %25, label %126

25:                                               ; preds = %23, %4, %10, %14, %1, %19
  tail call void @_ZN5blink10LayoutGrid33PopulateGridPositionsForDirectionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, i32 0)
  tail call void @_ZN5blink10LayoutGrid33PopulateGridPositionsForDirectionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, i32 1)
  %26 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %28 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %28, i64 13
  %30 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %29, align 8
  %31 = tail call %"class.blink::LayoutObjectChildList"* %30(%"class.blink::LayoutObject"* %26) #17
  %32 = icmp eq %"class.blink::LayoutObjectChildList"* %31, null
  br i1 %32, label %126, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.blink::LayoutObjectChildList"* %31 to %"class.blink::LayoutBox"**
  %35 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutBox"* %35, null
  br i1 %36, label %126, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %39 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 12
  %40 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %41 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5
  br label %42

42:                                               ; preds = %37, %121
  %43 = phi %"class.blink::LayoutBox"* [ %35, %37 ], [ %124, %121 ]
  %44 = bitcast %"class.blink::LayoutBox"* %43 to void (%"class.blink::LayoutObject"*)***
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %43, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %43, i64 0, i32 0, i32 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 113336795588871485128704
  %50 = icmp eq i96 %49, 75557863725914323419136
  br i1 %50, label %51, label %52

51:                                               ; preds = %42
  tail call void @_ZN5blink10LayoutGrid31PrepareChildForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %43)
  br label %121

52:                                               ; preds = %42
  %53 = tail call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %38, i32 0) #17
  %54 = load %"class.blink::Grid"*, %"class.blink::Grid"** %39, align 8
  %55 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %54, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %43, i32 0) #17
  %56 = extractvalue { i64, i32 } %55, 0
  %57 = trunc i64 %56 to i32
  %58 = lshr i64 %56, 32
  %59 = trunc i64 %58 to i32
  %60 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %40, i32 %57) #17
  %61 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %59, -1
  %64 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %40, i32 %63) #17
  %65 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %62, -1
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %66, i32 %62) #17
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !3
  %73 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1032"* %53, i32 %63) #17
  %74 = tail call i32 @_ZNK5blink9GridTrack8BaseSizeEv(%"class.blink::GridTrack"* %73) #17
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %74) #17
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !3
  %81 = tail call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %38, i32 1) #17
  %82 = load %"class.blink::Grid"*, %"class.blink::Grid"** %39, align 8
  %83 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %82, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %43, i32 1) #17
  %84 = extractvalue { i64, i32 } %83, 0
  %85 = trunc i64 %84 to i32
  %86 = lshr i64 %84, 32
  %87 = trunc i64 %86 to i32
  %88 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %41, i32 %85) #17
  %89 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %88, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %87, -1
  %92 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %41, i32 %91) #17
  %93 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %90, -1
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %94, i32 %90) #17
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !3
  %101 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1032"* %81, i32 %91) #17
  %102 = tail call i32 @_ZNK5blink9GridTrack8BaseSizeEv(%"class.blink::GridTrack"* %101) #17
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %100, i32 %102) #17
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !3
  %109 = zext i32 %108 to i64
  %110 = shl nuw i64 %109, 32
  %111 = zext i32 %80 to i64
  %112 = or i64 %110, %111
  tail call void @_ZNK5blink10LayoutGrid25UpdateGridAreaLogicalSizeERNS_9LayoutBoxENS_10LayoutSizeE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %43, i64 %112)
  tail call void @_ZN5blink10LayoutGrid36ApplyStretchAlignmentToChildIfNeededERNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %43)
  %113 = load i96, i96* %47, align 4
  %114 = and i96 %113, 63
  %115 = icmp eq i96 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %52
  %117 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %44, align 8
  %118 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %117, i64 54
  %119 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %118, align 8
  tail call void %119(%"class.blink::LayoutObject"* %45) #17
  br label %120

120:                                              ; preds = %52, %116
  tail call void @_ZN5blink10LayoutGrid37UpdateAutoMarginsInColumnAxisIfNeededERNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %43)
  tail call void @_ZN5blink10LayoutGrid34UpdateAutoMarginsInRowAxisIfNeededERNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %43)
  tail call void @_ZNK5blink10LayoutGrid26SetLogicalPositionForChildERNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %43)
  br label %121

121:                                              ; preds = %120, %51
  %122 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %43, i64 0, i32 0, i32 0, i32 9
  %123 = bitcast %"class.blink::LayoutObject"** %122 to %"class.blink::LayoutBox"**
  %124 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %123, align 8
  %125 = icmp eq %"class.blink::LayoutBox"* %124, null
  br i1 %125, label %126, label %42

126:                                              ; preds = %121, %25, %33, %23
  ret void
}

declare void @_ZN5blink24GridTrackSizingAlgorithm5ResetEv(%"class.blink::GridTrackSizingAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid23LayoutPositionedObjectsEbNS_11LayoutBlock24PositionedLayoutBehaviorE(%"class.blink::LayoutGrid"*, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca i8*, align 8
  %6 = alloca %class.anon, align 8
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 16777216
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 67108876
  %23 = icmp eq i32 %22, 67108864
  br i1 %23, label %24, label %30, !prof !18

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::Node"* %17 to %"class.blink::Element"*
  %26 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %25) #17
  %27 = icmp eq %"class.blink::DisplayLockContext"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %26) #17
  br i1 %29, label %30, label %104

30:                                               ; preds = %28, %9, %15, %19, %3, %24
  %31 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 9
  %32 = getelementptr inbounds %"class.WTF::HashMap.1068", %"class.WTF::HashMap.1068"* %31, i64 0, i32 0, i32 0
  %33 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %32, align 8
  %34 = icmp eq %"struct.WTF::KeyValuePair.1072"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 9, i32 0, i32 1
  %37 = bitcast %"struct.WTF::KeyValuePair.1072"* %33 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #17
  %38 = bitcast %"class.WTF::HashMap.1068"* %31 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  store i32 0, i32* %36, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 9, i32 0, i32 2
  store i32 0, i32* %39, align 4
  br label %40

40:                                               ; preds = %30, %35
  %41 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 10
  %42 = getelementptr inbounds %"class.WTF::HashMap.1068", %"class.WTF::HashMap.1068"* %41, i64 0, i32 0, i32 0
  %43 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %42, align 8
  %44 = icmp eq %"struct.WTF::KeyValuePair.1072"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 10, i32 0, i32 1
  %47 = bitcast %"struct.WTF::KeyValuePair.1072"* %43 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #17
  %48 = bitcast %"class.WTF::HashMap.1068"* %41 to i64*
  store atomic i64 0, i64* %48 monotonic, align 8
  store i32 0, i32* %46, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 10, i32 0, i32 2
  store i32 0, i32* %49, align 4
  br label %50

50:                                               ; preds = %40, %45
  %51 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutBlock"*
  %52 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 2
  %53 = load i16, i16* %52, align 8
  %54 = trunc i16 %53 to i8
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %104, !prof !3

56:                                               ; preds = %50
  %57 = tail call %"class.WTF::ListHashSet"* @_ZNK5blink11LayoutBlock25PositionedObjectsInternalEv(%"class.blink::LayoutBlock"* %51) #17
  %58 = icmp eq %"class.WTF::ListHashSet"* %57, null
  br i1 %58, label %104, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::ListHashSet", %"class.WTF::ListHashSet"* %57, i64 0, i32 1
  %61 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %60, align 8
  %62 = icmp eq %"class.WTF::MallocedListHashSetNode"* %61, null
  br i1 %62, label %104, label %63

63:                                               ; preds = %59
  %64 = bitcast i8** %5 to i8*
  %65 = bitcast %class.anon* %6 to i8*
  %66 = getelementptr inbounds %class.anon, %class.anon* %6, i64 0, i32 0
  %67 = getelementptr inbounds %class.anon, %class.anon* %6, i64 0, i32 1
  %68 = bitcast %"class.base::TimeTicks"* %4 to i8*
  %69 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  br label %70

70:                                               ; preds = %63, %100
  %71 = phi %"class.WTF::MallocedListHashSetNode"* [ %61, %63 ], [ %102, %100 ]
  %72 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %71, i64 0, i32 0
  %73 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %72, align 8
  %74 = call i32 @_ZN5blink10LayoutGrid32GridAreaBreadthForOutOfFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %73, i32 0)
  %75 = call i32 @_ZN5blink10LayoutGrid32GridAreaBreadthForOutOfFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %73, i32 1)
  call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %73, i32 %74) #17
  call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %73, i32 %75) #17
  %76 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %73, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kGridChangedE, i64 0, i64 0), i8** %5, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %73, i64 0, i32 0, i32 0, i32 4
  %78 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %77 to i96*
  %79 = load i96, i96* %78, align 4
  %80 = and i96 %79, 1
  %81 = icmp eq i96 %80, 0
  br i1 %81, label %82, label %96

82:                                               ; preds = %70
  %83 = and i96 %79, 2
  %84 = icmp eq i96 %83, 0
  %85 = or i96 %79, 1
  store i96 %85, i96* %78, align 4
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %76, i32 1) #17
  %86 = load i96, i96* %78, align 4
  %87 = or i96 %86, 1180591620717411303424
  store i96 %87, i96* %78, align 4
  br i1 %84, label %88, label %100

88:                                               ; preds = %82
  %89 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %90 = and i8 %89, 25
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %100, label %92, !prof !2

92:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #17
  store %"class.blink::LayoutObject"* %76, %"class.blink::LayoutObject"** %66, align 8
  store i8** %5, i8*** %67, align 8
  %93 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #17
  %94 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %94, i64* %69, align 8
  %95 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %93, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %class.anon* nonnull dereferenceable(16) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #17
  br label %100

96:                                               ; preds = %70
  %97 = or i96 %79, 1
  store i96 %97, i96* %78, align 4
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %76, i32 1) #17
  %98 = load i96, i96* %78, align 4
  %99 = or i96 %98, 1180591620717411303424
  store i96 %99, i96* %78, align 4
  br label %100

100:                                              ; preds = %88, %92, %82, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  call void @_ZN5blink11LayoutBlock22LayoutPositionedObjectEPNS_9LayoutBoxEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"* %51, %"class.blink::LayoutBox"* %73, i1 zeroext %1, i32 %2) #17
  call void @_ZNK5blink10LayoutGrid24SetLogicalOffsetForChildERNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %73, i32 0)
  call void @_ZNK5blink10LayoutGrid24SetLogicalOffsetForChildERNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %73, i32 1)
  %101 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %71, i64 0, i32 2
  %102 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %101, align 8
  %103 = icmp eq %"class.WTF::MallocedListHashSetNode"* %102, null
  br i1 %103, label %104, label %70

104:                                              ; preds = %100, %59, %28, %50, %56
  ret void
}

declare void @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlock"*, i32, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !19
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !19
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 993, i64 0 }, %12 ], [ { i64 1001, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 977, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #17
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 1190036353683150593851392
  %42 = icmp eq i160 %41, 340010386766614455386112
  br i1 %42, label %72, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 8589934592
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %43
  %50 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #17
  %51 = icmp eq %"class.blink::PaintLayerScrollableArea"* %50, null
  br i1 %51, label %79, label %52

52:                                               ; preds = %49
  %53 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #17
  %54 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 3
  %55 = load i8, i8* %54, align 8
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 1, i32 0, i32 0
  %60 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %59, align 8
  %61 = icmp eq %"class.blink::Scrollbar"* %60, null
  br i1 %61, label %62, label %79

62:                                               ; preds = %58, %52
  %63 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #17
  %64 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 3
  %65 = load i8, i8* %64, align 8
  %66 = and i8 %65, 2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %69, align 8
  %71 = icmp eq %"class.blink::Scrollbar"* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %33, %43, %62, %68
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 270215977642229760
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %49, %58, %68, %72
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %82 = bitcast [20 x i8]* %81 to i160*
  %83 = load i160, i160* %82, align 8
  %84 = and i160 %83, 15211807202738752817960438464512
  %85 = icmp eq i160 %84, 5070602400912917605986812821504
  %86 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #17
  %87 = extractvalue { i64, i64 } %86, 0
  %88 = lshr i64 %87, 32
  %89 = select i1 %85, i64 %88, i64 %87
  %90 = trunc i64 %89 to i32
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  br label %93

93:                                               ; preds = %79, %72
  %94 = phi i32 [ 0, %72 ], [ %90, %79 ]
  %95 = phi i32 [ 2147483647, %72 ], [ %92, %79 ]
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %94) #17
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !3
  %100 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %101 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %100 to i96*
  %102 = load i96, i96* %101, align 4
  %103 = trunc i96 %102 to i32
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %93
  %106 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #17
  br label %109

107:                                              ; preds = %93
  %108 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #17
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi i32 [ %106, %105 ], [ %108, %107 ]
  %111 = icmp slt i32 %110, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %110) #17
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !3
  ret i32 %116
}

; Function Attrs: nounwind
declare void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"*) unnamed_addr #3

declare void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !18

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #17
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #17
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !18

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #17
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #17
  ret void
}

declare void @_ZN5blink24GridTrackSizingAlgorithm23ClearBaselineItemsCacheEv(%"class.blink::GridTrackSizingAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink24PaintLayerScrollableArea27DelayScrollOffsetClampScopeD1Ev(%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid7GridGapENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* nocapture readonly, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %7 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %13, i64 0, i32 18
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %13, i64 0, i32 19
  %16 = select i1 %4, %"class.absl::optional.461"* %14, %"class.absl::optional.461"* %15
  %17 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %3
  %21 = lshr i64 %2, 32
  %22 = trunc i64 %21 to i32
  %23 = trunc i64 %2 to i8
  %24 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %16, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %25 = icmp eq i8 %23, 0
  %26 = select i1 %25, i32 0, i32 %22
  %27 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %24, i32 %26) #17
  br label %28

28:                                               ; preds = %3, %20
  %29 = phi i32 [ %27, %20 ], [ 0, %3 ]
  ret i32 %29
}

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid7GridGapENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %6 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %6, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %12, i64 0, i32 18
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %12, i64 0, i32 19
  %15 = select i1 %3, %"class.absl::optional.461"* %13, %"class.absl::optional.461"* %14
  %16 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 4, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %36, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %15, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %15, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %22 = load i8, i8* %21, align 1
  switch i8 %22, label %29 [
    i8 8, label %23
    i8 1, label %23
  ]

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  br i1 %3, label %25, label %27

25:                                               ; preds = %23
  %26 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %24) #17
  br label %29

27:                                               ; preds = %23
  %28 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %24)
  br label %29

29:                                               ; preds = %19, %25, %27
  %30 = phi i32 [ 0, %19 ], [ %26, %25 ], [ %28, %27 ]
  %31 = load i8, i8* %16, align 4, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %29
  tail call void @llvm.trap() #17
  unreachable

34:                                               ; preds = %29
  %35 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %20, i32 %30) #17
  br label %36

36:                                               ; preds = %2, %34
  %37 = phi i32 [ %35, %34 ], [ 0, %2 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn240_NK5blink10LayoutGrid7GridGapENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 -1, i32 4, i32 13
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %3, i64 4
  %6 = bitcast %"class.blink::LayoutGrid"** %5 to %"class.blink::ComputedStyleBase"**
  %7 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %13, i64 0, i32 18
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %13, i64 0, i32 19
  %16 = select i1 %4, %"class.absl::optional.461"* %14, %"class.absl::optional.461"* %15
  %17 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %37, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %16, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %22 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %16, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  switch i8 %23, label %30 [
    i8 8, label %24
    i8 1, label %24
  ]

24:                                               ; preds = %20, %20
  %25 = bitcast %"class.blink::LayoutGrid"** %3 to %"class.blink::LayoutBox"*
  br i1 %4, label %26, label %28

26:                                               ; preds = %24
  %27 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %25) #17
  br label %30

28:                                               ; preds = %24
  %29 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %25) #17
  br label %30

30:                                               ; preds = %28, %26, %20
  %31 = phi i32 [ 0, %20 ], [ %27, %26 ], [ %29, %28 ]
  %32 = load i8, i8* %17, align 4, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %30
  tail call void @llvm.trap() #17
  unreachable

35:                                               ; preds = %30
  %36 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %21, i32 %31) #17
  br label %37

37:                                               ; preds = %2, %35
  %38 = phi i32 [ %36, %35 ], [ 0, %2 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::Grid"* dereferenceable(168), i32, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper", align 8
  %8 = alloca i64, align 8
  %9 = icmp ult i64 %4, 2
  br i1 %9, label %187, label %10

10:                                               ; preds = %6
  %11 = icmp eq i32 %2, 0
  %12 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = bitcast %"class.blink::ComputedStyle"** %12 to %"class.blink::ComputedStyleBase"**
  %14 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %20, i64 0, i32 18
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %20, i64 0, i32 19
  %23 = select i1 %11, %"class.absl::optional.461"* %21, %"class.absl::optional.461"* %22
  %24 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 4, !range !4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %10
  %28 = lshr i64 %5, 32
  %29 = trunc i64 %28 to i32
  %30 = trunc i64 %5 to i8
  %31 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %23, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %32 = icmp eq i8 %30, 0
  %33 = select i1 %32, i32 0, i32 %29
  %34 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %31, i32 %33) #17
  br label %35

35:                                               ; preds = %10, %27
  %36 = phi i32 [ %34, %27 ], [ 0, %10 ]
  %37 = tail call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, i32 %2) #17
  br i1 %37, label %62, label %38

38:                                               ; preds = %35
  %39 = shl i64 %4, 6
  %40 = add i64 %39, -64
  %41 = tail call i1 @llvm.is.constant.i64(i64 %40) #17
  %42 = icmp ult i64 %40, 2147483648
  %43 = trunc i64 %40 to i32
  %44 = select i1 %42, i32 %43, i32 2147483647
  %45 = icmp ult i64 %40, 2147483647
  %46 = select i1 %45, i64 %40, i64 2147483647
  %47 = trunc i64 %46 to i32
  %48 = select i1 %41, i32 %47, i32 %44
  %49 = sext i32 %36 to i64
  %50 = sext i32 %48 to i64
  %51 = mul nsw i64 %50, %49
  %52 = sdiv i64 %51, 64
  %53 = ashr i64 %52, 32
  %54 = trunc i64 %53 to i32
  %55 = trunc i64 %52 to i32
  %56 = ashr i32 %55, 31
  %57 = icmp eq i32 %56, %54
  br i1 %57, label %187, label %58

58:                                               ; preds = %38
  %59 = xor i32 %48, %36
  %60 = lshr i32 %59, 31
  %61 = add nuw i32 %60, 2147483647
  br label %187

62:                                               ; preds = %35
  %63 = add i64 %4, %3
  %64 = add i64 %63, -1
  %65 = icmp ugt i64 %64, %3
  br i1 %65, label %66, label %93

66:                                               ; preds = %62
  %67 = icmp slt i32 %36, 0
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  br label %71

69:                                               ; preds = %80
  %70 = icmp eq i32 %81, 0
  br i1 %70, label %93, label %84

71:                                               ; preds = %80, %66
  %72 = phi i64 [ %3, %66 ], [ %82, %80 ]
  %73 = phi i32 [ 0, %66 ], [ %81, %80 ]
  %74 = tail call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %1, i32 %2, i64 %72) #17
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %36) #17
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 %68, i32 %78, !prof !3
  br label %80

80:                                               ; preds = %71, %75
  %81 = phi i32 [ %73, %71 ], [ %79, %75 ]
  %82 = add i64 %72, 1
  %83 = icmp eq i64 %82, %64
  br i1 %83, label %69, label %71

84:                                               ; preds = %69
  %85 = tail call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %1, i32 %2, i64 %64) #17
  br i1 %85, label %86, label %93

86:                                               ; preds = %84
  %87 = icmp sgt i32 %36, -1
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %81, i32 %36) #17
  %90 = extractvalue { i32, i1 } %89, 1
  %91 = extractvalue { i32, i1 } %89, 0
  %92 = select i1 %90, i32 %88, i32 %91, !prof !3
  br label %93

93:                                               ; preds = %62, %69, %86, %84
  %94 = phi i32 [ %92, %86 ], [ %81, %84 ], [ 0, %69 ], [ 0, %62 ]
  %95 = icmp eq i64 %3, 0
  br i1 %95, label %128, label %96

96:                                               ; preds = %93
  %97 = tail call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %1, i32 %2, i64 %3) #17
  br i1 %97, label %98, label %128

98:                                               ; preds = %96
  %99 = tail call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, i32 %2) #17
  %100 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %99, i64 0, i32 1, i32 0
  %101 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %100, i32 0) #17, !noalias !22
  %102 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %101, i64 0, i32 1
  %103 = load i32, i32* %102, align 4, !noalias !22
  %104 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %100, i32 %103) #17, !noalias !22
  %105 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %104, i64 0, i32 2
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, %3
  br i1 %107, label %120, label %110

108:                                              ; preds = %110
  %109 = icmp eq i64 %113, 0
  br i1 %109, label %128, label %120

110:                                              ; preds = %98, %110
  %111 = phi i64 [ %113, %110 ], [ %3, %98 ]
  %112 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %116, %110 ], [ %104, %98 ]
  %113 = add i64 %111, -1
  %114 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %112, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %100, i32 %115) #17
  %117 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %116, i64 0, i32 2
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, %3
  br i1 %119, label %108, label %110

120:                                              ; preds = %98, %108
  %121 = phi i64 [ %113, %108 ], [ %3, %98 ]
  %122 = icmp slt i32 %36, 0
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %36) #17
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !3
  br label %128

128:                                              ; preds = %120, %108, %93, %96
  %129 = phi i32 [ %94, %93 ], [ %94, %96 ], [ %94, %108 ], [ %127, %120 ]
  %130 = phi i64 [ 0, %93 ], [ 0, %96 ], [ 0, %108 ], [ %121, %120 ]
  %131 = tail call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %1, i32 %2, i64 %64) #17
  br i1 %131, label %132, label %187

132:                                              ; preds = %128
  %133 = bitcast %"class.blink::Grid"* %1 to i64 (%"class.blink::Grid"*, i32)***
  %134 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %133, align 8
  %135 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %134, align 8
  %136 = tail call i64 %135(%"class.blink::Grid"* %1, i32 %2) #17
  %137 = sub i64 %136, %63
  %138 = bitcast %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %138) #17
  %139 = getelementptr inbounds %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %7, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %7, i64 0, i32 0, i32 1
  %141 = bitcast %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 32, i1 false)
  %142 = tail call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, i32 %2) #17
  %143 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #17
  store i64 %64, i64* %8, align 8
  call void @_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE4findERKm(%"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* nonnull sret %7, %"class.WTF::LinkedHashSet"* %142, i64* nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #17
  %144 = call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, i32 %2) #17
  %145 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %144, i64 0, i32 1, i32 0
  %146 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %145, i32 0) #17, !noalias !25
  %147 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %139, align 8
  %148 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %147, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %140, align 8
  %151 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %150, i64 0, i32 0
  %152 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %151, i32 %149) #17
  store %"class.WTF::VectorBackedLinkedListNode"* %152, %"class.WTF::VectorBackedLinkedListNode"** %139, align 8
  %153 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %152, %146
  br i1 %153, label %157, label %154

154:                                              ; preds = %132
  %155 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %140, align 8
  %156 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %155, i64 0, i32 0
  br label %161

157:                                              ; preds = %161, %132
  %158 = phi i64 [ %137, %132 ], [ %164, %161 ]
  %159 = icmp eq i64 %158, 0
  %160 = icmp ne i64 %130, 0
  br i1 %159, label %177, label %169

161:                                              ; preds = %154, %161
  %162 = phi i64 [ %137, %154 ], [ %164, %161 ]
  %163 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %152, %154 ], [ %167, %161 ]
  %164 = add i64 %162, -1
  %165 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %163, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %156, i32 %166) #17
  %168 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %167, %146
  br i1 %168, label %157, label %161

169:                                              ; preds = %157
  br i1 %160, label %185, label %170

170:                                              ; preds = %169
  %171 = icmp slt i32 %36, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %36) #17
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !3
  br label %185

177:                                              ; preds = %157
  br i1 %160, label %178, label %185

178:                                              ; preds = %177
  %179 = icmp sgt i32 %36, -1
  %180 = select i1 %179, i32 -2147483648, i32 2147483647
  %181 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %129, i32 %36) #17
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !3
  br label %185

185:                                              ; preds = %177, %178, %169, %170
  %186 = phi i32 [ %184, %178 ], [ %129, %177 ], [ %129, %169 ], [ %176, %170 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %138) #17
  br label %187

187:                                              ; preds = %38, %58, %185, %128, %6
  %188 = phi i32 [ 0, %6 ], [ %55, %38 ], [ %61, %58 ], [ %186, %185 ], [ %129, %128 ]
  ret i32 %188
}

declare zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"*, i32, i64) local_unnamed_addr #1

declare %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE4findERKm(%"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* noalias sret, %"class.WTF::LinkedHashSet"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE4findERKm(%"class.WTF::HashTable.1012"* %4, i64* dereferenceable(8) %2) #17
  %6 = extractvalue { %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair.1015"* %6, %12
  %14 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 1
  br i1 %13, label %15, label %38

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %16, i32 0) #17, !noalias !28
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %17, %"class.WTF::VectorBackedLinkedListNode"** %18, align 8, !alias.scope !28
  %19 = getelementptr inbounds %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %19, align 8, !alias.scope !28
  %20 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4, !noalias !31
  %22 = icmp eq i32 %21, 0
  %23 = load %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"** %7, align 8, !noalias !31
  %24 = load i32, i32* %9, align 8, !noalias !31
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %23, i64 %25
  br i1 %22, label %63, label %27

27:                                               ; preds = %15
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %27, %35
  %30 = phi %"struct.WTF::KeyValuePair.1015"* [ %36, %35 ], [ %23, %27 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %30, i64 0, i32 0
  %32 = load i64, i64* %31, align 8, !noalias !31
  %33 = or i64 %32, 1
  %34 = icmp eq i64 %33, 4294967295
  br i1 %34, label %35, label %63

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %30, i64 1
  %37 = icmp eq %"struct.WTF::KeyValuePair.1015"* %36, %26
  br i1 %37, label %63, label %29

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %6, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %42 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %41, i32 %40) #17
  %43 = getelementptr inbounds %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %42, %"class.WTF::VectorBackedLinkedListNode"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4, !noalias !34
  %47 = icmp eq i32 %46, 0
  %48 = load %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"** %7, align 8, !noalias !34
  %49 = load i32, i32* %9, align 8, !noalias !34
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %48, i64 %50
  br i1 %47, label %63, label %52

52:                                               ; preds = %38
  %53 = icmp eq i32 %49, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %52, %60
  %55 = phi %"struct.WTF::KeyValuePair.1015"* [ %61, %60 ], [ %48, %52 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8, !noalias !34
  %58 = or i64 %57, 1
  %59 = icmp eq i64 %58, 4294967295
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %55, i64 1
  %62 = icmp eq %"struct.WTF::KeyValuePair.1015"* %61, %51
  br i1 %62, label %63, label %54

63:                                               ; preds = %60, %54, %35, %29, %52, %38, %27, %15
  %64 = phi %"struct.WTF::KeyValuePair.1015"* [ %26, %15 ], [ %23, %27 ], [ %51, %38 ], [ %48, %52 ], [ %30, %29 ], [ %26, %35 ], [ %51, %60 ], [ %55, %54 ]
  %65 = phi %"struct.WTF::KeyValuePair.1015"* [ %26, %15 ], [ %26, %27 ], [ %51, %38 ], [ %51, %52 ], [ %26, %29 ], [ %26, %35 ], [ %51, %54 ], [ %51, %60 ]
  %66 = getelementptr inbounds %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair.1015"* %64, %"struct.WTF::KeyValuePair.1015"** %66, align 8, !alias.scope !37
  %67 = getelementptr inbounds %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<unsigned long, blink::OrderedTrackIndexSetHashTraits, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair.1015"* %65, %"struct.WTF::KeyValuePair.1015"** %67, align 8, !alias.scope !37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10LayoutGrid29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutGrid"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::GridTrackSizingAlgorithm", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %3)
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %6 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %5)
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %10, 0
  %12 = select i1 %11, i32 -2147483648, i32 2147483647
  %13 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 %10) #17
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %16 = select i1 %14, i32 %12, i32 %15, !prof !3
  %17 = icmp slt i32 %16, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %16) #17
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !3
  %23 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 15211807202738752817960438464512
  %29 = icmp eq i160 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %1
  %31 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %5) #17
  br i1 %31, label %34, label %53

32:                                               ; preds = %1
  %33 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %5) #17
  br i1 %33, label %34, label %53

34:                                               ; preds = %30, %32
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 15211807202738752817960438464512
  %40 = icmp eq i160 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %5) #17
  br label %45

43:                                               ; preds = %34
  %44 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %5) #17
  br label %45

45:                                               ; preds = %41, %43
  %46 = phi i32 [ %42, %41 ], [ %44, %43 ]
  %47 = icmp slt i32 %46, 0
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %46) #17
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !3
  br label %229

53:                                               ; preds = %30, %32
  %54 = tail call %"class.blink::Grid"* @_ZN5blink4Grid6CreateEPKNS_10LayoutGridE(%"class.blink::LayoutGrid"* %0) #17
  %55 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %55) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 272, i1 false)
  store i8 1, i8* %55, align 8
  %56 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 1
  store i8 0, i8* %56, align 1
  %57 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %58, align 4
  %59 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %59, align 4
  %60 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 4
  %61 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 6
  %62 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 12
  %63 = bitcast %"class.WTF::Vector.1032"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 80, i1 false) #17
  store %"class.blink::Grid"* %54, %"class.blink::Grid"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 13
  store %"class.blink::LayoutGrid"* %0, %"class.blink::LayoutGrid"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 14
  %66 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 19, i32 2
  %67 = bitcast %"class.WTF::HashMap.1053"* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 20, i1 false) #17
  %68 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 19, i32 3
  %69 = bitcast %"class.WTF::HashMap.1053"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 20, i1 false) #17
  %70 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 20
  %71 = bitcast %"class.WTF::HashMap.1058"* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 20, i1 false) #17
  %72 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 21
  %73 = bitcast %"class.WTF::HashMap.1058"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 20, i1 false) #17
  %74 = bitcast %"class.std::__1::unique_ptr.1047"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 20, i1 false) #17
  call void @_ZNK5blink10LayoutGrid16PlaceItemsOnGridERNS_24GridTrackSizingAlgorithmEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %0, %"class.blink::GridTrackSizingAlgorithm"* nonnull dereferenceable(272) %2, i64 0)
  call void @_ZNK5blink10LayoutGrid25PerformGridItemsPreLayoutERKNS_24GridTrackSizingAlgorithmE(%"class.blink::LayoutGrid"* %0, %"class.blink::GridTrackSizingAlgorithm"* nonnull dereferenceable(272) %2)
  %75 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 12
  %76 = load i8, i8* %75, align 1, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %53
  %79 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  call void @_ZN5blink24GridTrackSizingAlgorithm22CopyBaselineItemsCacheERKS0_NS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* nonnull %2, %"class.blink::GridTrackSizingAlgorithm"* dereferenceable(272) %79, i32 0) #17
  br label %174

80:                                               ; preds = %53
  %81 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %83 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %82, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %83, i64 13
  %85 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %84, align 8
  %86 = call %"class.blink::LayoutObjectChildList"* %85(%"class.blink::LayoutObject"* %81) #17
  %87 = icmp eq %"class.blink::LayoutObjectChildList"* %86, null
  br i1 %87, label %174, label %88

88:                                               ; preds = %80
  %89 = bitcast %"class.blink::LayoutObjectChildList"* %86 to %"class.blink::LayoutBox"**
  %90 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %89, align 8
  %91 = icmp eq %"class.blink::LayoutBox"* %90, null
  br i1 %91, label %174, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %90, i64 0, i32 0, i32 0, i32 4
  %94 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %93 to i96*
  %95 = load i96, i96* %94, align 4
  %96 = and i96 %95, 113336795588871485128704
  %97 = icmp eq i96 %96, 75557863725914323419136
  br i1 %97, label %98, label %110

98:                                               ; preds = %92, %104
  %99 = phi %"class.blink::LayoutBox"* [ %102, %104 ], [ %90, %92 ]
  %100 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %99, i64 0, i32 0, i32 0, i32 9
  %101 = bitcast %"class.blink::LayoutObject"** %100 to %"class.blink::LayoutBox"**
  %102 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %101, align 8
  %103 = icmp eq %"class.blink::LayoutBox"* %102, null
  br i1 %103, label %174, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %102, i64 0, i32 0, i32 0, i32 4
  %106 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %105 to i96*
  %107 = load i96, i96* %106, align 4
  %108 = and i96 %107, 113336795588871485128704
  %109 = icmp eq i96 %108, 75557863725914323419136
  br i1 %109, label %98, label %110

110:                                              ; preds = %104, %92
  %111 = phi %"class.blink::LayoutBox"* [ %90, %92 ], [ %102, %104 ]
  %112 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %113 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %112 to i96*
  br label %114

114:                                              ; preds = %168, %110
  %115 = phi %"class.blink::LayoutBox"* [ %111, %110 ], [ %166, %168 ]
  %116 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %115, i64 0, i32 0, i32 0, i32 4
  %117 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %116 to i96*
  %118 = load i96, i96* %117, align 4
  %119 = and i96 %118, 113336795588871485128704
  %120 = icmp eq i96 %119, 75557863725914323419136
  br i1 %120, label %161, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %115, i64 0, i32 0, i32 0
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %124 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %115, i64 0, i32 0, i32 0, i32 5, i32 0
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %126 = bitcast %"class.blink::LayoutBox"* %115 to i1 (%"class.blink::LayoutObject"*, i32)***
  %127 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %126, align 8
  %128 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %127, i64 92
  %129 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %128, align 8
  %130 = call zeroext i1 %129(%"class.blink::LayoutObject"* %122, i32 39) #17
  %131 = select i1 %130, i32 7, i32 3
  %132 = call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %125, i32 %131, %"class.blink::ComputedStyle"* %123) #17
  %133 = and i32 %132, 14
  %134 = load i96, i96* %113, align 4
  %135 = trunc i96 %134 to i32
  %136 = icmp slt i32 %135, 0
  %137 = bitcast %"class.blink::ComputedStyle"** %124 to %"class.blink::ComputedStyleBase"**
  %138 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %138, i64 0, i32 7, i32 0, i32 0
  %140 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %139, align 8
  br i1 %136, label %141, label %147

141:                                              ; preds = %121
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %140, i64 0, i32 10, i32 2
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %140, i64 0, i32 11, i32 2
  br label %153

147:                                              ; preds = %121
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %140, i64 0, i32 12, i32 2
  %149 = load i8, i8* %148, align 1
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %161, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %140, i64 0, i32 9, i32 2
  br label %153

153:                                              ; preds = %151, %145
  %154 = phi i8* [ %146, %145 ], [ %152, %151 ]
  %155 = load i8, i8* %154, align 1
  %156 = icmp ne i8 %155, 0
  %157 = or i32 %133, 1
  %158 = icmp eq i32 %157, 5
  %159 = and i1 %158, %156
  br i1 %159, label %160, label %161

160:                                              ; preds = %153
  call void @_ZN5blink24GridTrackSizingAlgorithm24CacheBaselineAlignedItemERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* nonnull %2, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %115, i32 0) #17
  br label %161

161:                                              ; preds = %147, %141, %153, %114, %160
  br label %162

162:                                              ; preds = %161, %168
  %163 = phi %"class.blink::LayoutBox"* [ %166, %168 ], [ %115, %161 ]
  %164 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %163, i64 0, i32 0, i32 0, i32 9
  %165 = bitcast %"class.blink::LayoutObject"** %164 to %"class.blink::LayoutBox"**
  %166 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %165, align 8
  %167 = icmp eq %"class.blink::LayoutBox"* %166, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %166, i64 0, i32 0, i32 0, i32 4
  %170 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %169 to i96*
  %171 = load i96, i96* %170, align 4
  %172 = and i96 %171, 113336795588871485128704
  %173 = icmp eq i96 %172, 75557863725914323419136
  br i1 %173, label %162, label %114

174:                                              ; preds = %98, %162, %80, %88, %78
  %175 = load %"class.blink::Grid"*, %"class.blink::Grid"** %62, align 8
  %176 = bitcast %"class.blink::Grid"* %175 to i64 (%"class.blink::Grid"*, i32)***
  %177 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %176, align 8
  %178 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %177, align 8
  %179 = call i64 %178(%"class.blink::Grid"* %175, i32 1) #17
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %185, label %181

181:                                              ; preds = %174
  %182 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %176, align 8
  %183 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %182, align 8
  %184 = call i64 %183(%"class.blink::Grid"* %175, i32 0) #17
  br label %189

185:                                              ; preds = %174
  %186 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %187 = call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %175, i32 0) #17
  %188 = call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %186, i64 %187) #17
  br label %189

189:                                              ; preds = %181, %185
  %190 = phi i64 [ %184, %181 ], [ %188, %185 ]
  call void @_ZN5blink24GridTrackSizingAlgorithm5SetupENS_24GridTrackSizingDirectionEmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::GridTrackSizingAlgorithm"* nonnull %2, i32 0, i64 %190, i64 0) #17
  call void @_ZN5blink24GridTrackSizingAlgorithm3RunEv(%"class.blink::GridTrackSizingAlgorithm"* nonnull %2) #17
  %191 = call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZN5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* nonnull %2, i32 0) #17
  %192 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %191, i64 0, i32 0, i32 0, i32 2
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i64
  %195 = load %"class.blink::Grid"*, %"class.blink::Grid"** %62, align 8
  %196 = call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %0, %"class.blink::Grid"* dereferenceable(168) %195, i32 0, i64 0, i64 %194, i64 0)
  %197 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 15, i32 0
  %198 = load i32, i32* %197, align 8
  %199 = icmp slt i32 %196, 0
  %200 = select i1 %199, i32 -2147483648, i32 2147483647
  %201 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %198, i32 %196) #17
  %202 = extractvalue { i32, i1 } %201, 1
  %203 = extractvalue { i32, i1 } %201, 0
  %204 = select i1 %202, i32 %200, i32 %203, !prof !3
  %205 = icmp slt i32 %204, 0
  %206 = select i1 %205, i32 -2147483648, i32 2147483647
  %207 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %204) #17
  %208 = extractvalue { i32, i1 } %207, 1
  %209 = extractvalue { i32, i1 } %207, 0
  %210 = select i1 %208, i32 %206, i32 %209, !prof !3
  %211 = getelementptr inbounds %"class.blink::GridTrackSizingAlgorithm", %"class.blink::GridTrackSizingAlgorithm"* %2, i64 0, i32 16, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %212, i32 %196) #17
  %214 = extractvalue { i32, i1 } %213, 1
  %215 = extractvalue { i32, i1 } %213, 0
  %216 = select i1 %214, i32 %200, i32 %215, !prof !3
  %217 = icmp slt i32 %216, 0
  %218 = select i1 %217, i32 -2147483648, i32 2147483647
  %219 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %216) #17
  %220 = extractvalue { i32, i1 } %219, 1
  %221 = extractvalue { i32, i1 } %219, 0
  %222 = select i1 %220, i32 %218, i32 %221, !prof !3
  call void @_ZN5blink24GridTrackSizingAlgorithmD2Ev(%"class.blink::GridTrackSizingAlgorithm"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %55) #17
  %223 = icmp eq %"class.blink::Grid"* %54, null
  br i1 %223, label %229, label %224

224:                                              ; preds = %189
  %225 = bitcast %"class.blink::Grid"* %54 to void (%"class.blink::Grid"*)***
  %226 = load void (%"class.blink::Grid"*)**, void (%"class.blink::Grid"*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.blink::Grid"*)*, void (%"class.blink::Grid"*)** %226, i64 5
  %228 = load void (%"class.blink::Grid"*)*, void (%"class.blink::Grid"*)** %227, align 8
  call void %228(%"class.blink::Grid"* nonnull %54) #17
  br label %229

229:                                              ; preds = %224, %189, %45
  %230 = phi i32 [ %52, %45 ], [ %210, %189 ], [ %210, %224 ]
  %231 = phi i32 [ %52, %45 ], [ %222, %189 ], [ %222, %224 ]
  %232 = zext i32 %231 to i64
  %233 = shl nuw i64 %232, 32
  %234 = zext i32 %230 to i64
  %235 = or i64 %233, %234
  ret i64 %235
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !38
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !38
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #17
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !41
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !41
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #17
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #17
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !3
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !44
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !44
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #17
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #17
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !3
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !47
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8, !noalias !47
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp eq i160 %110, 0
  %112 = and i160 %109, 41538374868278621028243970633760768
  %113 = icmp eq i160 %112, 0
  %114 = select i1 %113, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %115 = select i1 %113, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %116 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %117 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %118 = extractvalue { i64, i64 } %116, 0
  %119 = extractvalue { i64, i64 } %117, 1
  %120 = getelementptr inbounds i8, i8* %7, i64 %119
  %121 = bitcast i8* %120 to %"class.blink::LayoutBoxModelObject"*
  %122 = and i64 %118, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %97
  %125 = bitcast i8* %120 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = add i64 %118, -1
  %128 = getelementptr i8, i8* %126, i64 %127
  %129 = bitcast i8* %128 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, align 8
  br label %133

131:                                              ; preds = %97
  %132 = inttoptr i64 %118 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %130, %124 ], [ %132, %131 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %121) #17
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %135) #17
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !3
  ret i32 %141
}

declare void @_ZN5blink24GridTrackSizingAlgorithm22CopyBaselineItemsCacheERKS0_NS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::GridTrackSizingAlgorithm"* dereferenceable(272), i32) local_unnamed_addr #1

declare dereferenceable(16) %"class.WTF::Vector.1032"* @_ZN5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10LayoutGrid35OverrideIntrinsicContentLogicalSizeENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %51 [
    i32 0, label %3
    i32 1, label %27
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %4) #17
  br i1 %13, label %16, label %51

14:                                               ; preds = %3
  %15 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %4) #17
  br i1 %15, label %16, label %51

16:                                               ; preds = %12, %14
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %4) #17
  br label %51

25:                                               ; preds = %16
  %26 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %4) #17
  br label %51

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = and i160 %33, 15211807202738752817960438464512
  %35 = icmp eq i160 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %27
  %37 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %28) #17
  br i1 %37, label %40, label %51

38:                                               ; preds = %27
  %39 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %28) #17
  br i1 %39, label %40, label %51

40:                                               ; preds = %36, %38
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8
  %45 = and i160 %44, 15211807202738752817960438464512
  %46 = icmp eq i160 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %28) #17
  br label %51

49:                                               ; preds = %40
  %50 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %28) #17
  br label %51

51:                                               ; preds = %38, %2, %12, %14, %36, %49, %47, %25, %23
  %52 = phi i64 [ 1, %23 ], [ 1, %25 ], [ 1, %47 ], [ 1, %49 ], [ 0, %36 ], [ 0, %14 ], [ 0, %12 ], [ 0, %2 ], [ 0, %38 ]
  %53 = phi i32 [ %24, %23 ], [ %26, %25 ], [ %48, %47 ], [ %50, %49 ], [ undef, %36 ], [ undef, %14 ], [ undef, %12 ], [ undef, %2 ], [ undef, %38 ]
  %54 = zext i32 %53 to i64
  %55 = shl nuw i64 %54, 32
  %56 = or i64 %55, %52
  ret i64 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink10LayoutGrid42OverrideContainingBlockContentSizeForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call i32 @_ZNK5blink9LayoutBox42OverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"* %0) #17
  br label %8

6:                                                ; preds = %2
  %7 = tail call i32 @_ZNK5blink9LayoutBox43OverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* %0) #17
  br label %8

8:                                                ; preds = %6, %4
  %9 = phi i32 [ %5, %4 ], [ %7, %6 ]
  ret i32 %9
}

declare i32 @_ZNK5blink9LayoutBox42OverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox43OverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10LayoutGrid28ComputeAutoRepeatTracksCountENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"*, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.blink::GridTrackSize", align 8
  %11 = trunc i64 %2 to i8
  %12 = lshr i64 %2, 32
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = icmp eq i32 %1, 0
  %16 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %23, i64 0, i32 45
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 24
  %27 = icmp eq i32 %26, 24
  br i1 %27, label %28, label %93

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 1207959552
  %33 = icmp eq i96 %32, 134217728
  br i1 %33, label %93, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::LayoutGrid"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, i64 92
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::LayoutObject"* %14, i32 43) #17
  br i1 %39, label %93, label %40

40:                                               ; preds = %34
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, i64 92
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::LayoutObject"* %14, i32 46) #17
  br i1 %44, label %65, label %45

45:                                               ; preds = %40
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, i64 92
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::LayoutObject"* %14, i32 48) #17
  br i1 %49, label %65, label %50

50:                                               ; preds = %45
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %14, i32 45) #17
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, i64 92
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::LayoutObject"* %14, i32 49) #17
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, i64 92
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutObject"* %14, i32 50) #17
  br i1 %64, label %65, label %70

65:                                               ; preds = %60, %55, %50, %45, %40
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, i64 92
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* %14, i32 45) #17
  br i1 %69, label %70, label %93

70:                                               ; preds = %60, %65
  %71 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, i64 92
  %73 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::LayoutObject"* %14, i32 44) #17
  br i1 %74, label %93, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.blink::ComputedStyle"** %16 to %"class.blink::ComputedStyleBase"**
  %77 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %77, i64 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %79, i64 0, i32 3, i32 0, i32 0
  %81 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %81, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %83, i64 0, i32 19
  %85 = load i8, i8* %84, align 8
  %86 = bitcast %"class.blink::ComputedStyleBase"* %77 to %"class.blink::ComputedStyle"*
  br i1 %15, label %87, label %90

87:                                               ; preds = %75
  %88 = and i8 %85, 3
  %89 = icmp eq i8 %88, 2
  br i1 %89, label %565, label %101

90:                                               ; preds = %75
  %91 = and i8 %85, 12
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %565, label %105

93:                                               ; preds = %70, %28, %34, %65, %3
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %96, i64 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %98, i64 0, i32 3, i32 0, i32 0
  %100 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %99, align 8
  br i1 %15, label %101, label %105

101:                                              ; preds = %93, %87
  %102 = phi %"class.blink::ComputedStyleBase::StyleGridData"* [ %83, %87 ], [ %100, %93 ]
  %103 = phi %"class.blink::ComputedStyle"* [ %86, %87 ], [ %94, %93 ]
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %102, i64 0, i32 13
  br label %109

105:                                              ; preds = %93, %90
  %106 = phi %"class.blink::ComputedStyleBase::StyleGridData"* [ %83, %90 ], [ %100, %93 ]
  %107 = phi %"class.blink::ComputedStyle"* [ %86, %90 ], [ %94, %93 ]
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %106, i64 0, i32 14
  br label %109

109:                                              ; preds = %105, %101
  %110 = phi %"class.blink::ComputedStyle"* [ %103, %101 ], [ %107, %105 ]
  %111 = phi %"class.WTF::Vector.408"* [ %104, %101 ], [ %108, %105 ]
  %112 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %111, i64 0, i32 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = icmp eq i32 %113, 0
  br i1 %115, label %565, label %116

116:                                              ; preds = %109
  %117 = icmp eq i8 %11, 0
  br i1 %117, label %122, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %111, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %120, i64 %114
  br label %263

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = and i160 %125, 15211807202738752817960438464512
  %127 = icmp eq i160 %126, 0
  %128 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 5, i32 0, i32 0
  %129 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %129, i64 0, i32 5
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %129, i64 0, i32 4
  %132 = select i1 %127, %"class.blink::Length"* %130, %"class.blink::Length"* %131
  %133 = select i1 %127, %"class.blink::Length"* %131, %"class.blink::Length"* %130
  %134 = select i1 %15, %"class.blink::Length"* %132, %"class.blink::Length"* %133
  %135 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135)
  store i32 -1431655766, i32* %4, align 4
  %136 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136)
  store i32 0, i32* %5, align 4
  %137 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %134, i64 0, i32 2
  %138 = load i8, i8* %137, align 1
  switch i8 %138, label %165 [
    i8 8, label %139
    i8 1, label %139
    i8 2, label %148
  ]

139:                                              ; preds = %122, %122
  %140 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  br i1 %15, label %141, label %143

141:                                              ; preds = %139
  %142 = tail call i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"* %140) #17
  br label %145

143:                                              ; preds = %139
  %144 = tail call i32 @_ZNK5blink9LayoutBox38ContainingBlockLogicalHeightForContentENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %140, i32 0) #17
  br label %145

145:                                              ; preds = %141, %143
  %146 = phi i32 [ %142, %141 ], [ %144, %143 ]
  store i32 %146, i32* %4, align 4
  %147 = bitcast i32* %6 to i8*
  br label %150

148:                                              ; preds = %122
  %149 = bitcast i32* %6 to i8*
  br label %150

150:                                              ; preds = %145, %148
  %151 = phi i8* [ %147, %145 ], [ %149, %148 ]
  %152 = phi i8 [ 1, %145 ], [ 0, %148 ]
  %153 = phi i32* [ %4, %145 ], [ %6, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151)
  store i32 0, i32* %6, align 4
  %154 = load i32, i32* %153, align 4
  %155 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %134, i32 %154) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151)
  %156 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %157 = sitofp i32 %155 to float
  %158 = fmul float %157, 1.562500e-02
  br i1 %15, label %159, label %161

159:                                              ; preds = %150
  %160 = tail call i32 @_ZNK5blink9LayoutBox40AdjustContentBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %156, float %158) #17
  br label %163

161:                                              ; preds = %150
  %162 = tail call i32 @_ZNK5blink9LayoutBox41AdjustContentBoxLogicalHeightForBoxSizingEf(%"class.blink::LayoutBox"* %156, float %158) #17
  br label %163

163:                                              ; preds = %161, %159
  %164 = phi i32 [ %160, %159 ], [ %162, %161 ]
  store i32 %164, i32* %5, align 4
  br label %165

165:                                              ; preds = %122, %163
  %166 = phi i32 [ %164, %163 ], [ 0, %122 ]
  %167 = phi i8 [ %152, %163 ], [ 0, %122 ]
  %168 = tail call i64 @_ZNK5blink10LayoutGrid35OverrideIntrinsicContentLogicalSizeENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, i32 %1)
  %169 = trunc i64 %168 to i8
  %170 = lshr i64 %168, 32
  %171 = trunc i64 %170 to i32
  %172 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %173 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %172, i64 0, i32 0, i32 9
  %174 = bitcast [20 x i8]* %173 to i160*
  %175 = load i160, i160* %174, align 8
  %176 = and i160 %175, 15211807202738752817960438464512
  %177 = icmp eq i160 %176, 0
  %178 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %172, i64 0, i32 0, i32 5, i32 0, i32 0
  %179 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %179, i64 0, i32 7
  %181 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %179, i64 0, i32 6
  %182 = select i1 %177, %"class.blink::Length"* %180, %"class.blink::Length"* %181
  %183 = select i1 %177, %"class.blink::Length"* %181, %"class.blink::Length"* %180
  %184 = select i1 %15, %"class.blink::Length"* %182, %"class.blink::Length"* %183
  %185 = icmp eq i32 %166, 0
  %186 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %184, i64 0, i32 2
  %187 = load i8, i8* %186, align 1
  br i1 %185, label %188, label %191

188:                                              ; preds = %165
  switch i8 %187, label %189 [
    i8 2, label %191
    i8 1, label %191
    i8 8, label %191
  ]

189:                                              ; preds = %188
  %190 = icmp eq i8 %169, 0
  br i1 %190, label %254, label %191

191:                                              ; preds = %165, %189, %188, %188, %188
  %192 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %192)
  store i32 0, i32* %7, align 4
  %193 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %184, i64 0, i32 2
  switch i8 %187, label %223 [
    i8 2, label %194
    i8 1, label %194
    i8 8, label %194
  ]

194:                                              ; preds = %191, %191, %191
  %195 = icmp eq i8 %167, 0
  br i1 %195, label %196, label %205

196:                                              ; preds = %194
  switch i8 %187, label %207 [
    i8 8, label %197
    i8 1, label %197
  ]

197:                                              ; preds = %196, %196
  %198 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  br i1 %15, label %199, label %201

199:                                              ; preds = %197
  %200 = tail call i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"* %198) #17
  br label %203

201:                                              ; preds = %197
  %202 = tail call i32 @_ZNK5blink9LayoutBox38ContainingBlockLogicalHeightForContentENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %198, i32 0) #17
  br label %203

203:                                              ; preds = %201, %199
  %204 = phi i32 [ %200, %199 ], [ %202, %201 ]
  store i32 %204, i32* %4, align 4
  br label %205

205:                                              ; preds = %194, %203
  %206 = bitcast i32* %8 to i8*
  br label %209

207:                                              ; preds = %196
  %208 = bitcast i32* %8 to i8*
  br label %209

209:                                              ; preds = %205, %207
  %210 = phi i8* [ %206, %205 ], [ %208, %207 ]
  %211 = phi i32* [ %4, %205 ], [ %8, %207 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %210)
  store i32 0, i32* %8, align 4
  %212 = load i32, i32* %211, align 4
  %213 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %184, i32 %212) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %210)
  %214 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %215 = sitofp i32 %213 to float
  %216 = fmul float %215, 1.562500e-02
  br i1 %15, label %217, label %219

217:                                              ; preds = %209
  %218 = tail call i32 @_ZNK5blink9LayoutBox40AdjustContentBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %214, float %216) #17
  br label %221

219:                                              ; preds = %209
  %220 = tail call i32 @_ZNK5blink9LayoutBox41AdjustContentBoxLogicalHeightForBoxSizingEf(%"class.blink::LayoutBox"* %214, float %216) #17
  br label %221

221:                                              ; preds = %219, %217
  %222 = phi i32 [ %218, %217 ], [ %220, %219 ]
  store i32 %222, i32* %7, align 4
  br label %223

223:                                              ; preds = %191, %221
  %224 = phi i32 [ 0, %191 ], [ %222, %221 ]
  %225 = load i8, i8* %137, align 1
  switch i8 %225, label %226 [
    i8 2, label %231
    i8 1, label %231
    i8 8, label %231
  ]

226:                                              ; preds = %223
  %227 = load i8, i8* %193, align 1
  switch i8 %227, label %228 [
    i8 2, label %230
    i8 1, label %230
    i8 8, label %230
  ]

228:                                              ; preds = %226
  %229 = icmp eq i8 %169, 0
  br i1 %229, label %231, label %230

230:                                              ; preds = %228, %226, %226, %226
  br label %231

231:                                              ; preds = %228, %223, %223, %223, %230
  %232 = phi i1 [ true, %230 ], [ false, %228 ], [ false, %223 ], [ false, %223 ], [ false, %223 ]
  %233 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %233)
  %234 = icmp eq i8 %169, 0
  %235 = select i1 %234, i32 0, i32 %171
  store i32 %235, i32* %9, align 4
  %236 = icmp slt i32 %224, %235
  %237 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %238 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %239 = select i1 %236, %"class.blink::LayoutUnit"* %237, %"class.blink::LayoutUnit"* %238
  %240 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %239, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp slt i32 %241, %166
  %243 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %244 = select i1 %242, %"class.blink::LayoutUnit"* %243, %"class.blink::LayoutUnit"* %239
  %245 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %244, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  switch i8 %225, label %255 [
    i8 2, label %247
    i8 1, label %247
    i8 8, label %247
  ]

247:                                              ; preds = %231, %231, %231
  %248 = icmp slt i32 %166, %246
  br i1 %248, label %249, label %255

249:                                              ; preds = %247
  %250 = icmp slt i32 %224, %166
  %251 = select i1 %250, %"class.blink::LayoutUnit"* %243, %"class.blink::LayoutUnit"* %238
  %252 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %251, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br label %255

254:                                              ; preds = %189
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135)
  br label %565

255:                                              ; preds = %231, %249, %247
  %256 = phi i32 [ %253, %249 ], [ %246, %247 ], [ %246, %231 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %233)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %192)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135)
  %257 = load i32, i32* %112, align 4
  %258 = zext i32 %257 to i64
  %259 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %111, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %260, i64 %258
  %262 = icmp eq i32 %257, 0
  br i1 %262, label %297, label %263

263:                                              ; preds = %118, %255
  %264 = phi %"class.blink::GridTrackSize"* [ %121, %118 ], [ %261, %255 ]
  %265 = phi %"class.blink::GridTrackSize"* [ %120, %118 ], [ %260, %255 ]
  %266 = phi i1 [ false, %118 ], [ %232, %255 ]
  %267 = phi i32 [ %13, %118 ], [ %256, %255 ]
  %268 = phi i8 [ %11, %118 ], [ 1, %255 ]
  %269 = bitcast %"class.blink::GridTrackSize"* %10 to i8*
  %270 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 0
  %271 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 2
  %272 = bitcast %"class.blink::GridLength"* %271 to i64*
  %273 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %271, i64 0, i32 0
  %274 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 2, i32 1
  %275 = bitcast double* %274 to i8*
  %276 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 3
  %277 = bitcast %"class.blink::GridLength"* %276 to i64*
  %278 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %276, i64 0, i32 0
  %279 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 3, i32 1
  %280 = bitcast double* %279 to i8*
  %281 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 4
  %282 = bitcast %"class.blink::GridLength"* %281 to i64*
  %283 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %281, i64 0, i32 0
  %284 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 4, i32 1
  %285 = bitcast double* %284 to i8*
  %286 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 5
  %287 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 3, i32 2
  %288 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 3, i32 0, i32 2
  %289 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 4, i32 0, i32 2
  %290 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 4, i32 0
  %291 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 3, i32 0
  %292 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 2, i32 0, i32 2
  %293 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 2, i32 0
  br label %321

294:                                              ; preds = %381
  %295 = icmp sgt i32 %369, 64
  %296 = select i1 %295, i32 %369, i32 64
  br label %297

297:                                              ; preds = %294, %255
  %298 = phi i8 [ 1, %255 ], [ %268, %294 ]
  %299 = phi i32 [ %256, %255 ], [ %267, %294 ]
  %300 = phi i1 [ %232, %255 ], [ %266, %294 ]
  %301 = phi i32 [ 64, %255 ], [ %296, %294 ]
  %302 = bitcast %"class.blink::ComputedStyle"** %16 to %"class.blink::ComputedStyleBase"**
  %303 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %302, align 8
  %304 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %303, i64 0, i32 3, i32 0, i32 0
  %305 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %304, align 8
  %306 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %305, i64 0, i32 2, i32 0, i32 0
  %307 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %306, align 8
  %308 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %307, i64 0, i32 2, i32 0, i32 0
  %309 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %309, i64 0, i32 4
  %311 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %309, i64 0, i32 3
  %312 = select i1 %15, %"class.blink::GridTrackList"* %311, %"class.blink::GridTrackList"* %310
  %313 = call dereferenceable(16) %"class.WTF::Vector.408"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %312) #17
  %314 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %313, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %314, align 8
  %316 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %313, i64 0, i32 0, i32 0, i32 2
  %317 = load i32, i32* %316, align 4
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %315, i64 %318
  %320 = icmp eq i32 %317, 0
  br i1 %320, label %386, label %384

321:                                              ; preds = %263, %381
  %322 = phi i32 [ 0, %263 ], [ %369, %381 ]
  %323 = phi %"class.blink::GridTrackSize"* [ %265, %263 ], [ %382, %381 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %269) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %269, i8* align 8 bitcast (%"class.blink::GridTrackSize"* @__const._ZNK5blink10LayoutGrid28ComputeAutoRepeatTracksCountENS_24GridTrackSizingDirectionEN4absl8optionalINS_10LayoutUnitEEE.auto_track_size to i8*), i64 88, i1 false)
  %324 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %323, i64 0, i32 0
  %325 = load i32, i32* %324, align 8
  store i32 %325, i32* %270, align 8
  %326 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %323, i64 0, i32 2
  %327 = bitcast %"class.blink::GridLength"* %326 to i64*
  %328 = load i64, i64* %327, align 4
  store i64 %328, i64* %272, align 8
  %329 = and i64 %328, 280375465082880
  %330 = icmp eq i64 %329, 8796093022208
  br i1 %330, label %331, label %332

331:                                              ; preds = %321
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %273) #17
  br label %332

332:                                              ; preds = %331, %321
  %333 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %323, i64 0, i32 2, i32 1
  %334 = bitcast double* %333 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* align 8 %334, i64 12, i1 false) #17
  %335 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %323, i64 0, i32 3
  %336 = bitcast %"class.blink::GridLength"* %335 to i64*
  %337 = load i64, i64* %336, align 4
  store i64 %337, i64* %277, align 8
  %338 = and i64 %337, 280375465082880
  %339 = icmp eq i64 %338, 8796093022208
  br i1 %339, label %340, label %341

340:                                              ; preds = %332
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %278) #17
  br label %341

341:                                              ; preds = %340, %332
  %342 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %323, i64 0, i32 3, i32 1
  %343 = bitcast double* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %343, i64 12, i1 false) #17
  %344 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %323, i64 0, i32 4
  %345 = bitcast %"class.blink::GridLength"* %344 to i64*
  %346 = load i64, i64* %345, align 4
  store i64 %346, i64* %282, align 8
  %347 = and i64 %346, 280375465082880
  %348 = icmp eq i64 %347, 8796093022208
  br i1 %348, label %349, label %350

349:                                              ; preds = %341
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %283) #17
  br label %350

350:                                              ; preds = %341, %349
  %351 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %323, i64 0, i32 4, i32 1
  %352 = bitcast double* %351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %285, i8* align 8 %352, i64 12, i1 false) #17
  %353 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %323, i64 0, i32 5
  %354 = load i16, i16* %353, align 8
  store i16 %354, i16* %286, align 8
  %355 = load i32, i32* %287, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %359

357:                                              ; preds = %350
  %358 = load i8, i8* %288, align 1
  switch i8 %358, label %360 [
    i8 0, label %359
    i8 3, label %359
    i8 4, label %359
  ]

359:                                              ; preds = %357, %357, %357, %350
  br label %360

360:                                              ; preds = %357, %359
  %361 = phi %"class.blink::GridLength"* [ %271, %359 ], [ %276, %357 ]
  %362 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %361, i64 0, i32 0
  %363 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %362, i32 %267) #17
  %364 = icmp slt i32 %363, 0
  %365 = select i1 %364, i32 -2147483648, i32 2147483647
  %366 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %322, i32 %363) #17
  %367 = extractvalue { i32, i1 } %366, 1
  %368 = extractvalue { i32, i1 } %366, 0
  %369 = select i1 %367, i32 %365, i32 %368, !prof !3
  %370 = load i8, i8* %289, align 1
  %371 = icmp eq i8 %370, 8
  br i1 %371, label %372, label %373

372:                                              ; preds = %360
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %290) #17
  br label %373

373:                                              ; preds = %372, %360
  %374 = load i8, i8* %288, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %377

376:                                              ; preds = %373
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %291) #17
  br label %377

377:                                              ; preds = %376, %373
  %378 = load i8, i8* %292, align 1
  %379 = icmp eq i8 %378, 8
  br i1 %379, label %380, label %381

380:                                              ; preds = %377
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %293) #17
  br label %381

381:                                              ; preds = %377, %380
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %269) #17
  %382 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %323, i64 1
  %383 = icmp eq %"class.blink::GridTrackSize"* %382, %264
  br i1 %383, label %294, label %321

384:                                              ; preds = %297
  %385 = icmp eq i8 %298, 0
  br label %449

386:                                              ; preds = %465, %297
  %387 = phi i32 [ %301, %297 ], [ %472, %465 ]
  %388 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %302, align 8
  %389 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %388, i64 0, i32 3, i32 0, i32 0
  %390 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %389, align 8
  %391 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %390, i64 0, i32 2, i32 0, i32 0
  %392 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %391, align 8
  %393 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %392, i64 0, i32 2, i32 0, i32 0
  %394 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %393, align 8
  %395 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %394, i64 0, i32 18
  %396 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %394, i64 0, i32 19
  %397 = select i1 %15, %"class.absl::optional.461"* %395, %"class.absl::optional.461"* %396
  %398 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %397, i64 0, i32 0, i32 0, i32 0, i32 0
  %399 = load i8, i8* %398, align 4, !range !4
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %406, label %401

401:                                              ; preds = %386
  %402 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %397, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %403 = icmp eq i8 %298, 0
  %404 = select i1 %403, i32 0, i32 %299
  %405 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %402, i32 %404) #17
  br label %406

406:                                              ; preds = %386, %401
  %407 = phi i32 [ %405, %401 ], [ 0, %386 ]
  %408 = load i32, i32* %316, align 4
  %409 = zext i32 %408 to i64
  %410 = add nuw nsw i64 %409, %114
  %411 = shl nuw nsw i64 %410, 6
  %412 = add nsw i64 %411, -64
  %413 = call i1 @llvm.is.constant.i64(i64 %412) #17
  %414 = icmp ult i64 %412, 2147483648
  %415 = trunc i64 %412 to i32
  %416 = select i1 %414, i32 %415, i32 2147483647
  %417 = icmp ult i64 %412, 2147483647
  %418 = select i1 %417, i64 %412, i64 2147483647
  %419 = trunc i64 %418 to i32
  %420 = select i1 %413, i32 %419, i32 %416
  %421 = sext i32 %407 to i64
  %422 = sext i32 %420 to i64
  %423 = mul nsw i64 %422, %421
  %424 = sdiv i64 %423, 64
  %425 = ashr i64 %424, 32
  %426 = trunc i64 %425 to i32
  %427 = trunc i64 %424 to i32
  %428 = ashr i32 %427, 31
  %429 = icmp eq i32 %428, %426
  br i1 %429, label %434, label %430

430:                                              ; preds = %406
  %431 = xor i32 %420, %407
  %432 = lshr i32 %431, 31
  %433 = add nuw i32 %432, 2147483647
  br label %434

434:                                              ; preds = %430, %406
  %435 = phi i32 [ %427, %406 ], [ %433, %430 ]
  %436 = icmp slt i32 %435, 0
  %437 = select i1 %436, i32 -2147483648, i32 2147483647
  %438 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %387, i32 %435) #17
  %439 = extractvalue { i32, i1 } %438, 1
  %440 = extractvalue { i32, i1 } %438, 0
  %441 = select i1 %439, i32 %437, i32 %440, !prof !3
  %442 = icmp sgt i32 %441, -1
  %443 = select i1 %442, i32 -2147483648, i32 2147483647
  %444 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %299, i32 %441) #17
  %445 = extractvalue { i32, i1 } %444, 1
  %446 = extractvalue { i32, i1 } %444, 0
  %447 = select i1 %445, i32 %443, i32 %446, !prof !3
  %448 = icmp slt i32 %447, 1
  br i1 %448, label %565, label %475

449:                                              ; preds = %384, %465
  %450 = phi %"class.blink::GridTrackSize"* [ %315, %384 ], [ %473, %465 ]
  %451 = phi i32 [ %301, %384 ], [ %472, %465 ]
  %452 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %450, i64 0, i32 3, i32 2
  %453 = load i32, i32* %452, align 8
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %460

455:                                              ; preds = %449
  %456 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %450, i64 0, i32 3, i32 0, i32 2
  %457 = load i8, i8* %456, align 1
  switch i8 %457, label %458 [
    i8 0, label %460
    i8 3, label %460
    i8 4, label %460
  ]

458:                                              ; preds = %455
  %459 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %450, i64 0, i32 3, i32 0
  br label %462

460:                                              ; preds = %455, %455, %455, %449
  %461 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %450, i64 0, i32 2, i32 0
  br label %462

462:                                              ; preds = %460, %458
  %463 = phi %"class.blink::Length"* [ %459, %458 ], [ %461, %460 ]
  br i1 %385, label %464, label %465

464:                                              ; preds = %462
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #18
  unreachable

465:                                              ; preds = %462
  %466 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %463, i32 %299) #17
  %467 = icmp slt i32 %466, 0
  %468 = select i1 %467, i32 -2147483648, i32 2147483647
  %469 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %451, i32 %466) #17
  %470 = extractvalue { i32, i1 } %469, 1
  %471 = extractvalue { i32, i1 } %469, 0
  %472 = select i1 %470, i32 %468, i32 %471, !prof !3
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %450, i64 1
  %474 = icmp eq %"class.blink::GridTrackSize"* %473, %319
  br i1 %474, label %386, label %449

475:                                              ; preds = %434
  %476 = shl nuw nsw i64 %114, 6
  %477 = call i1 @llvm.is.constant.i64(i64 %476) #17
  %478 = icmp ult i32 %113, 33554432
  %479 = trunc i64 %476 to i32
  %480 = select i1 %478, i32 %479, i32 2147483647
  %481 = icmp ult i64 %476, 2147483647
  %482 = select i1 %481, i64 %476, i64 2147483647
  %483 = trunc i64 %482 to i32
  %484 = select i1 %477, i32 %483, i32 %480
  %485 = sext i32 %484 to i64
  %486 = mul nsw i64 %485, %421
  %487 = sdiv i64 %486, 64
  %488 = ashr i64 %487, 32
  %489 = trunc i64 %488 to i32
  %490 = trunc i64 %487 to i32
  %491 = ashr i32 %490, 31
  %492 = icmp eq i32 %491, %489
  br i1 %492, label %497, label %493

493:                                              ; preds = %475
  %494 = xor i32 %484, %407
  %495 = lshr i32 %494, 31
  %496 = add nuw i32 %495, 2147483647
  br label %497

497:                                              ; preds = %475, %493
  %498 = phi i32 [ %490, %475 ], [ %496, %493 ]
  %499 = icmp slt i32 %498, 0
  %500 = select i1 %499, i32 -2147483648, i32 2147483647
  %501 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %301, i32 %498) #17
  %502 = extractvalue { i32, i1 } %501, 1
  %503 = extractvalue { i32, i1 } %501, 0
  %504 = select i1 %502, i32 %500, i32 %503, !prof !3
  %505 = sext i32 %447 to i64
  %506 = shl nsw i64 %505, 6
  %507 = sext i32 %504 to i64
  %508 = sdiv i64 %506, %507
  %509 = call i1 @llvm.is.constant.i64(i64 %508) #17
  br i1 %509, label %517, label %510

510:                                              ; preds = %497
  %511 = icmp slt i64 %508, 0
  %512 = select i1 %511, i32 -2147483648, i32 2147483647
  %513 = add nsw i64 %508, 2147483648
  %514 = icmp ult i64 %513, 4294967296
  %515 = trunc i64 %508 to i32
  %516 = select i1 %514, i32 %515, i32 %512, !prof !2
  br label %523

517:                                              ; preds = %497
  %518 = icmp sgt i64 %508, 2147483647
  br i1 %518, label %523, label %519

519:                                              ; preds = %517
  %520 = icmp sgt i64 %508, -2147483648
  %521 = select i1 %520, i64 %508, i64 -2147483648
  %522 = trunc i64 %521 to i32
  br label %523

523:                                              ; preds = %510, %517, %519
  %524 = phi i32 [ %516, %510 ], [ %522, %519 ], [ 2147483647, %517 ]
  %525 = sdiv i32 %524, 64
  %526 = add nsw i32 %525, 1
  %527 = sext i32 %526 to i64
  %528 = shl nsw i64 %527, 6
  %529 = add nsw i64 %528, -64
  %530 = call i1 @llvm.is.constant.i64(i64 %529) #17
  %531 = icmp ult i64 %529, 2147483648
  %532 = trunc i64 %529 to i32
  %533 = select i1 %531, i32 %532, i32 2147483647
  %534 = icmp ult i64 %529, 2147483647
  %535 = select i1 %534, i64 %529, i64 2147483647
  %536 = trunc i64 %535 to i32
  %537 = select i1 %530, i32 %536, i32 %533
  %538 = sext i32 %537 to i64
  %539 = mul nsw i64 %538, %507
  %540 = sdiv i64 %539, 64
  %541 = ashr i64 %540, 32
  %542 = trunc i64 %541 to i32
  %543 = trunc i64 %540 to i32
  %544 = ashr i32 %543, 31
  %545 = icmp eq i32 %544, %542
  br i1 %545, label %550, label %546

546:                                              ; preds = %523
  %547 = xor i32 %537, %504
  %548 = lshr i32 %547, 31
  %549 = add nuw i32 %548, 2147483647
  br label %550

550:                                              ; preds = %523, %546
  %551 = phi i32 [ %543, %523 ], [ %549, %546 ]
  %552 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %447, i32 %551) #17
  br i1 %300, label %553, label %562

553:                                              ; preds = %550
  %554 = extractvalue { i32, i1 } %552, 1
  %555 = icmp sgt i32 %551, -1
  %556 = select i1 %555, i32 -2147483648, i32 2147483647
  %557 = extractvalue { i32, i1 } %552, 0
  %558 = select i1 %554, i32 %556, i32 %557, !prof !3
  %559 = icmp ne i32 %558, 0
  %560 = zext i1 %559 to i64
  %561 = add nsw i64 %560, %527
  br label %562

562:                                              ; preds = %553, %550
  %563 = phi i64 [ %527, %550 ], [ %561, %553 ]
  %564 = mul nsw i64 %563, %114
  br label %565

565:                                              ; preds = %562, %434, %254, %109, %87, %90
  %566 = phi i64 [ 0, %90 ], [ 0, %87 ], [ 0, %109 ], [ %114, %254 ], [ %564, %562 ], [ %114, %434 ]
  ret i64 %566
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox38ContainingBlockLogicalHeightForContentENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox40AdjustContentBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox41AdjustContentBoxLogicalHeightForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::LinkedHashSet"* @_ZNK5blink10LayoutGrid31ComputeEmptyTracksForAutoRepeatERNS_4GridENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::Grid"* dereferenceable(168), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = icmp eq i32 %2, 0
  %9 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %17, i64 0, i32 19
  %19 = load i8, i8* %18, align 8
  br i1 %8, label %20, label %23

20:                                               ; preds = %3
  %21 = and i8 %19, 3
  %22 = icmp eq i8 %21, 2
  br i1 %22, label %26, label %98

23:                                               ; preds = %3
  %24 = and i8 %19, 12
  %25 = icmp eq i8 %24, 8
  br i1 %25, label %28, label %98

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %17, i64 0, i32 17
  br label %30

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %17, i64 0, i32 18
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i64* [ %27, %26 ], [ %29, %28 ]
  %32 = load i64, i64* %31, align 8
  %33 = tail call i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, i32 %2) #17
  %34 = add i64 %33, %32
  %35 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, i32 %2) #17
  %36 = add i64 %34, %35
  %37 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %1, i64 0, i32 8, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %55

40:                                               ; preds = %30
  %41 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 48, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #17
  %42 = bitcast i8* %41 to %"class.WTF::LinkedHashSet"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 20, i1 false) #17
  %43 = getelementptr inbounds i8, i8* %41, i64 24
  %44 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #17
  %45 = bitcast i8* %43 to %"class.WTF::Vector.1016"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1016"* %45, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #17
  %46 = ptrtoint i8* %41 to i64
  %47 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #17
  store i64 %34, i64* %6, align 8
  %48 = icmp ult i64 %34, %36
  br i1 %48, label %50, label %49

49:                                               ; preds = %50, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17
  br label %98

50:                                               ; preds = %40, %50
  %51 = call { i64*, i8 } @_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE6insertIRmEENS4_9AddResultEOT_(%"class.WTF::LinkedHashSet"* %42, i64* nonnull dereferenceable(8) %6)
  %52 = load i64, i64* %6, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %6, align 8
  %54 = icmp ult i64 %53, %36
  br i1 %54, label %50, label %49

55:                                               ; preds = %30
  %56 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  store i64 %34, i64* %7, align 8
  %57 = icmp ult i64 %34, %36
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::Grid"* %1 to %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)***
  %60 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %4 to i8*
  br label %63

61:                                               ; preds = %94, %55
  %62 = phi i64 [ 0, %55 ], [ %87, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  br label %98

63:                                               ; preds = %58, %94
  %64 = phi i64 [ %34, %58 ], [ %96, %94 ]
  %65 = phi i64 [ 0, %58 ], [ %87, %94 ]
  %66 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)**, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*** %59, align 8
  %67 = getelementptr inbounds %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %66, i64 6
  %68 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %67, align 8
  %69 = call %"class.blink::Grid::GridIterator"* %68(%"class.blink::Grid"* %1, i32 %2, i64 %64, i64 0) #17
  %70 = bitcast %"class.blink::Grid::GridIterator"* %69 to %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)***
  %71 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)**, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*** %70, align 8
  %72 = load %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)*, %"class.blink::LayoutBox"* (%"class.blink::Grid::GridIterator"*)** %71, align 8
  %73 = call %"class.blink::LayoutBox"* %72(%"class.blink::Grid::GridIterator"* %69) #17
  %74 = icmp eq %"class.blink::LayoutBox"* %73, null
  br i1 %74, label %75, label %86

75:                                               ; preds = %63
  %76 = icmp eq i64 %65, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %75
  %78 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 48, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 20, i1 false) #17
  %79 = getelementptr inbounds i8, i8* %78, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 16, i1 false) #17
  %80 = bitcast i8* %79 to %"class.WTF::Vector.1016"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1016"* %80, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #17
  %81 = ptrtoint i8* %78 to i64
  br label %82

82:                                               ; preds = %75, %77
  %83 = phi i64 [ %65, %75 ], [ %81, %77 ]
  %84 = inttoptr i64 %83 to %"class.WTF::LinkedHashSet"*
  %85 = call { i64*, i8 } @_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE6insertIRmEENS4_9AddResultEOT_(%"class.WTF::LinkedHashSet"* %84, i64* nonnull dereferenceable(8) %7)
  br label %86

86:                                               ; preds = %63, %82
  %87 = phi i64 [ %83, %82 ], [ %65, %63 ]
  %88 = icmp eq %"class.blink::Grid::GridIterator"* %69, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %86
  %90 = bitcast %"class.blink::Grid::GridIterator"* %69 to void (%"class.blink::Grid::GridIterator"*)***
  %91 = load void (%"class.blink::Grid::GridIterator"*)**, void (%"class.blink::Grid::GridIterator"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %91, i64 3
  %93 = load void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %92, align 8
  call void %93(%"class.blink::Grid::GridIterator"* nonnull %69) #17
  br label %94

94:                                               ; preds = %86, %89
  %95 = load i64, i64* %7, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %7, align 8
  %97 = icmp ult i64 %96, %36
  br i1 %97, label %63, label %61

98:                                               ; preds = %61, %49, %23, %20
  %99 = phi i64 [ 0, %20 ], [ 0, %23 ], [ %62, %61 ], [ %46, %49 ]
  %100 = inttoptr i64 %99 to %"class.WTF::LinkedHashSet"*
  ret %"class.WTF::LinkedHashSet"* %100
}

declare i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"*, i32) local_unnamed_addr #1

declare i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64*, i8 } @_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE6insertIRmEENS4_9AddResultEOT_(%"class.WTF::LinkedHashSet"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %3, i64 0, i32 0
  %5 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %4, i32 0) #17, !noalias !50
  %6 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.1015"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERmRKjEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1012"* %6, i64* dereferenceable(8) %1, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #17
  %8 = extractvalue { %"struct.WTF::KeyValuePair.1015"*, i8 } %7, 0
  %9 = extractvalue { %"struct.WTF::KeyValuePair.1015"*, i8 } %7, 1
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListImNS_18PartitionAllocatorEE6insertIRmEENS_30VectorBackedLinkedListIteratorIS2_EENS_35VectorBackedLinkedListConstIteratorIS2_EEOT_(%"class.WTF::VectorBackedLinkedList"* %3, %"class.WTF::VectorBackedLinkedListNode"* %5, %"class.WTF::VectorBackedLinkedList"* %3, i64* dereferenceable(8) %1) #17
  %14 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %13, 0
  %15 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %13, 1
  %16 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %14 to i64
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %15, i64 0, i32 0
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %17, i32 0) #17
  %19 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %18 to i64
  %20 = sub i64 %16, %19
  %21 = lshr exact i64 %20, 4
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %8, i64 0, i32 1
  store i32 %22, i32* %23, align 8
  br label %28

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %8, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %4, i32 %26) #17
  br label %28

28:                                               ; preds = %12, %24
  %29 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %14, %12 ], [ %27, %24 ]
  %30 = phi i8 [ 1, %12 ], [ 0, %24 ]
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %29, i64 0, i32 2
  %32 = insertvalue { i64*, i8 } undef, i64* %31, 0
  %33 = insertvalue { i64*, i8 } %32, i8 %30, 1
  ret { i64*, i8 } %33
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink10LayoutGrid21ClampAutoRepeatTracksENS_24GridTrackSizingDirectionEm(%"class.blink::LayoutGrid"* nocapture readonly, i32, i64) local_unnamed_addr #5 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32 %1, 0
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %9 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %9, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %11, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %15, i64 0, i32 17
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %15, i64 0, i32 18
  %18 = select i1 %6, i64* %16, i64* %17
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %5
  %22 = icmp ult i64 %2, 1000
  %23 = select i1 %22, i64 %2, i64 1000
  br label %30

24:                                               ; preds = %5
  %25 = icmp ugt i64 %19, 999
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = sub nuw nsw i64 1000, %19
  %28 = icmp ult i64 %27, %2
  %29 = select i1 %28, i64 %27, i64 %2
  br label %30

30:                                               ; preds = %21, %26, %24, %3
  %31 = phi i64 [ 0, %3 ], [ %23, %21 ], [ %29, %26 ], [ 0, %24 ]
  ret i64 %31
}

declare i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare void @_ZN5blink4Grid22SetNeedsItemsPlacementEb(%"class.blink::Grid"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink4Grid19SetAutoRepeatTracksEmm(%"class.blink::Grid"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid36PopulateExplicitGridAndOrderIteratorERNS_4GridE(%"class.blink::LayoutGrid"*, %"class.blink::Grid"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::OrderIteratorPopulator", align 8
  %4 = alloca %"struct.blink::GridArea", align 8
  %5 = bitcast %"class.blink::OrderIteratorPopulator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.blink::OrderIteratorPopulator", %"class.blink::OrderIteratorPopulator"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %1, i64 0, i32 1
  store %"class.blink::OrderIterator"* %7, %"class.blink::OrderIterator"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %1, i64 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %1, i64 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %9, %"class.std::__1::__tree_node"* %12) #17
  %13 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %1, i64 0, i32 1, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %8, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %15, align 8
  %16 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, i32 1) #17
  %17 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, i32 0) #17
  %18 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = tail call i64 @_ZN5blink21GridPositionsResolver20ExplicitGridRowCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %19, i64 %16) #17
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %22 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %21, i64 %17) #17
  %23 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %25 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %25, i64 13
  %27 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %26, align 8
  %28 = tail call %"class.blink::LayoutObjectChildList"* %27(%"class.blink::LayoutObject"* %23) #17
  %29 = icmp eq %"class.blink::LayoutObjectChildList"* %28, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %2
  %31 = bitcast %"class.blink::LayoutObjectChildList"* %28 to %"class.blink::LayoutBox"**
  %32 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %31, align 8
  %33 = icmp eq %"class.blink::LayoutBox"* %32, null
  br i1 %33, label %59, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %32, i64 0, i32 0, i32 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 113336795588871485128704
  %39 = icmp eq i96 %38, 75557863725914323419136
  br i1 %39, label %40, label %52

40:                                               ; preds = %34, %46
  %41 = phi %"class.blink::LayoutBox"* [ %44, %46 ], [ %32, %34 ]
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %41, i64 0, i32 0, i32 0, i32 9
  %43 = bitcast %"class.blink::LayoutObject"** %42 to %"class.blink::LayoutBox"**
  %44 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutBox"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %44, i64 0, i32 0, i32 0, i32 4
  %48 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %47 to i96*
  %49 = load i96, i96* %48, align 4
  %50 = and i96 %49, 113336795588871485128704
  %51 = icmp eq i96 %50, 75557863725914323419136
  br i1 %51, label %40, label %52

52:                                               ; preds = %46, %34
  %53 = phi %"class.blink::LayoutBox"* [ %32, %34 ], [ %44, %46 ]
  %54 = bitcast %"struct.blink::GridArea"* %4 to i64*
  %55 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %4, i64 0, i32 0, i32 2
  %56 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %4, i64 0, i32 1
  %57 = bitcast %"struct.blink::GridSpan"* %56 to i64*
  %58 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %4, i64 0, i32 1, i32 2
  br label %70

59:                                               ; preds = %40, %133, %2, %30
  %60 = phi i64 [ %22, %30 ], [ %22, %2 ], [ %131, %133 ], [ %22, %40 ]
  %61 = phi i64 [ %20, %30 ], [ %20, %2 ], [ %111, %133 ], [ %20, %40 ]
  %62 = phi i64 [ 0, %30 ], [ 0, %2 ], [ %132, %133 ], [ 0, %40 ]
  %63 = phi i64 [ 0, %30 ], [ 0, %2 ], [ %112, %133 ], [ 0, %40 ]
  call void @_ZN5blink4Grid20SetExplicitGridStartEmm(%"class.blink::Grid"* %1, i64 %63, i64 %62) #17
  %64 = add i64 %63, %61
  %65 = add i64 %62, %60
  %66 = bitcast %"class.blink::Grid"* %1 to void (%"class.blink::Grid"*, i64, i64)***
  %67 = load void (%"class.blink::Grid"*, i64, i64)**, void (%"class.blink::Grid"*, i64, i64)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::Grid"*, i64, i64)*, void (%"class.blink::Grid"*, i64, i64)** %67, i64 1
  %69 = load void (%"class.blink::Grid"*, i64, i64)*, void (%"class.blink::Grid"*, i64, i64)** %68, align 8
  call void %69(%"class.blink::Grid"* %1, i64 %64, i64 %65) #17
  call void @_ZN5blink22OrderIteratorPopulatorD1Ev(%"class.blink::OrderIteratorPopulator"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  ret void

70:                                               ; preds = %139, %52
  %71 = phi i64 [ 0, %52 ], [ %112, %139 ]
  %72 = phi i64 [ 0, %52 ], [ %132, %139 ]
  %73 = phi %"class.blink::LayoutBox"* [ %53, %52 ], [ %137, %139 ]
  %74 = phi i64 [ %20, %52 ], [ %111, %139 ]
  %75 = phi i64 [ %22, %52 ], [ %131, %139 ]
  call void @_ZN5blink22OrderIteratorPopulator12CollectChildEPKNS_9LayoutBoxE(%"class.blink::OrderIteratorPopulator"* nonnull %3, %"class.blink::LayoutBox"* nonnull %73) #17
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %73, i64 0, i32 0, i32 0, i32 5, i32 0
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = call { i64, i32 } @_ZN5blink21GridPositionsResolver29ResolveGridPositionsFromStyleERKNS_13ComputedStyleES3_NS_24GridTrackSizingDirectionEm(%"class.blink::ComputedStyle"* dereferenceable(104) %76, %"class.blink::ComputedStyle"* dereferenceable(104) %78, i32 1, i64 %16) #17
  %80 = extractvalue { i64, i32 } %79, 0
  %81 = extractvalue { i64, i32 } %79, 1
  %82 = lshr i64 %80, 32
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %85 = call { i64, i32 } @_ZN5blink21GridPositionsResolver29ResolveGridPositionsFromStyleERKNS_13ComputedStyleES3_NS_24GridTrackSizingDirectionEm(%"class.blink::ComputedStyle"* dereferenceable(104) %83, %"class.blink::ComputedStyle"* dereferenceable(104) %84, i32 0, i64 %17) #17
  %86 = extractvalue { i64, i32 } %85, 0
  %87 = extractvalue { i64, i32 } %85, 1
  %88 = trunc i64 %86 to i32
  %89 = lshr i64 %86, 32
  %90 = trunc i64 %89 to i32
  store i64 %86, i64* %54, align 8
  store i32 %87, i32* %55, align 8
  store i64 %80, i64* %57, align 4
  store i32 %81, i32* %58, align 4
  call void @_ZN5blink4Grid15SetGridItemAreaERKNS_9LayoutBoxENS_8GridAreaE(%"class.blink::Grid"* %1, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %73, %"struct.blink::GridArea"* nonnull byval(%"struct.blink::GridArea") align 8 %4) #17
  %91 = icmp eq i32 %81, 2
  br i1 %91, label %105, label %92

92:                                               ; preds = %70
  %93 = trunc i64 %82 to i32
  %94 = trunc i64 %80 to i32
  %95 = trunc i64 %71 to i32
  %96 = sub nsw i32 0, %94
  %97 = icmp slt i32 %95, %96
  %98 = select i1 %97, i32 %96, i32 %95
  %99 = sext i32 %98 to i64
  %100 = trunc i64 %74 to i32
  %101 = icmp slt i32 %100, %93
  %102 = select i1 %101, i64 %82, i64 %74
  %103 = shl i64 %102, 32
  %104 = ashr exact i64 %103, 32
  br label %110

105:                                              ; preds = %70
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %107 = call i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* dereferenceable(104) %106, i32 1) #17
  %108 = icmp ult i64 %74, %107
  %109 = select i1 %108, i64 %107, i64 %74
  br label %110

110:                                              ; preds = %105, %92
  %111 = phi i64 [ %109, %105 ], [ %104, %92 ]
  %112 = phi i64 [ %71, %105 ], [ %99, %92 ]
  %113 = icmp eq i32 %87, 2
  br i1 %113, label %125, label %114

114:                                              ; preds = %110
  %115 = trunc i64 %72 to i32
  %116 = sub nsw i32 0, %88
  %117 = icmp slt i32 %115, %116
  %118 = select i1 %117, i32 %116, i32 %115
  %119 = sext i32 %118 to i64
  %120 = trunc i64 %75 to i32
  %121 = icmp slt i32 %120, %90
  %122 = select i1 %121, i64 %89, i64 %75
  %123 = shl i64 %122, 32
  %124 = ashr exact i64 %123, 32
  br label %130

125:                                              ; preds = %110
  %126 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %127 = call i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* dereferenceable(104) %126, i32 0) #17
  %128 = icmp ult i64 %75, %127
  %129 = select i1 %128, i64 %127, i64 %75
  br label %130

130:                                              ; preds = %125, %114
  %131 = phi i64 [ %129, %125 ], [ %124, %114 ]
  %132 = phi i64 [ %72, %125 ], [ %119, %114 ]
  br label %133

133:                                              ; preds = %139, %130
  %134 = phi %"class.blink::LayoutBox"* [ %73, %130 ], [ %137, %139 ]
  %135 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %134, i64 0, i32 0, i32 0, i32 9
  %136 = bitcast %"class.blink::LayoutObject"** %135 to %"class.blink::LayoutBox"**
  %137 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %136, align 8
  %138 = icmp eq %"class.blink::LayoutBox"* %137, null
  br i1 %138, label %59, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %137, i64 0, i32 0, i32 0, i32 4
  %141 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %140 to i96*
  %142 = load i96, i96* %141, align 4
  %143 = and i96 %142, 113336795588871485128704
  %144 = icmp eq i96 %143, 75557863725914323419136
  br i1 %144, label %133, label %70
}

declare %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator5FirstEv(%"class.blink::OrderIterator"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox45HasOverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox46HasOverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare void @_ZN5blink4Grid21SetGridItemPaintOrderERKNS_9LayoutBoxEm(%"class.blink::Grid"*, %"class.blink::LayoutBox"* dereferenceable(216), i64) local_unnamed_addr #1

declare void @_ZNK5blink4Grid12GridItemAreaERKNS_9LayoutBoxE(%"struct.blink::GridArea"* sret, %"class.blink::Grid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

declare void @_ZN5blink4Grid15SetGridItemAreaERKNS_9LayoutBoxENS_8GridAreaE(%"class.blink::Grid"*, %"class.blink::LayoutBox"* dereferenceable(216), %"struct.blink::GridArea"* byval(%"struct.blink::GridArea") align 8) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid31AutoPlacementMajorAxisDirectionEv(%"class.blink::LayoutGrid"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %9, i64 0, i32 45
  %11 = load i32, i32* %10, align 4
  %12 = lshr i32 %11, 16
  %13 = and i32 %12, 1
  %14 = xor i32 %13, 1
  ret i32 %14
}

declare %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator4NextEv(%"class.blink::OrderIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid34PlaceSpecifiedMajorAxisItemsOnGridERNS_4GridERKN3WTF6VectorIPNS_9LayoutBoxELj0ENS3_18PartitionAllocatorEEE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::Grid"* dereferenceable(168), %"class.WTF::Vector.1511"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::HashMap.1736", align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 45
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 65536
  %18 = icmp eq i32 %17, 0
  %19 = and i32 %16, 16384
  %20 = icmp ne i32 %19, 0
  %21 = bitcast %"class.WTF::HashMap.1736"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"class.WTF::HashMap.1736", %"class.WTF::HashMap.1736"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::HashMap.1736", %"class.WTF::HashMap.1736"* %4, i64 0, i32 0, i32 1
  %24 = bitcast %"class.WTF::HashMap.1736"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 20, i1 false) #17
  %25 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %2, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %2, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %26, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %3
  %33 = bitcast i32* %5 to i8*
  %34 = bitcast %"class.blink::Grid"* %1 to %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)***
  %35 = bitcast %"class.blink::Grid"* %1 to void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)***
  %36 = bitcast i64* %6 to i8*
  %37 = getelementptr inbounds %"class.WTF::HashMap.1736", %"class.WTF::HashMap.1736"* %4, i64 0, i32 0
  br label %44

38:                                               ; preds = %192
  %39 = load %"struct.WTF::KeyValuePair.1740"*, %"struct.WTF::KeyValuePair.1740"** %22, align 8
  %40 = icmp eq %"struct.WTF::KeyValuePair.1740"* %39, null
  br i1 %40, label %43, label %41, !prof !2

41:                                               ; preds = %38
  %42 = bitcast %"struct.WTF::KeyValuePair.1740"* %39 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #17
  store %"struct.WTF::KeyValuePair.1740"* null, %"struct.WTF::KeyValuePair.1740"** %22, align 8
  br label %43

43:                                               ; preds = %3, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #17
  ret void

44:                                               ; preds = %195, %32
  %45 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %10, %32 ], [ %198, %195 ]
  %46 = phi %"class.blink::LayoutBox"** [ %26, %32 ], [ %193, %195 ]
  %47 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %45, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %51, i64 0, i32 45
  %53 = load i32, i32* %52, align 4
  %54 = lshr i32 %53, 16
  %55 = and i32 %54, 1
  %56 = xor i32 %55, 1
  %57 = call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, %"class.blink::LayoutBox"* dereferenceable(216) %47, i32 %56) #17
  %58 = extractvalue { i64, i32 } %57, 0
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %47, i64 0, i32 0, i32 0, i32 5, i32 0
  %61 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %60, align 8
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 3, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %64, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %66, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %68, i64 0, i32 45
  %70 = load i32, i32* %69, align 4
  %71 = lshr i32 %70, 16
  %72 = and i32 %71, 1
  %73 = call i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* dereferenceable(104) %61, i32 %72) #17
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #17
  %74 = shl i64 %58, 32
  %75 = ashr exact i64 %74, 32
  store i32 %59, i32* %5, align 4
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 3, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %82, i64 0, i32 45
  %84 = load i32, i32* %83, align 4
  %85 = lshr i32 %84, 16
  %86 = and i32 %85, 1
  %87 = xor i32 %86, 1
  br i1 %20, label %148, label %88

88:                                               ; preds = %44
  %89 = load %"struct.WTF::KeyValuePair.1740"*, %"struct.WTF::KeyValuePair.1740"** %22, align 8
  %90 = icmp eq %"struct.WTF::KeyValuePair.1740"* %89, null
  br i1 %90, label %148, label %91

91:                                               ; preds = %88
  %92 = load i32, i32* %23, align 8
  %93 = add i32 %92, -1
  %94 = zext i32 %93 to i64
  %95 = shl i32 %59, 15
  %96 = xor i32 %95, -1
  %97 = add i32 %96, %59
  %98 = lshr i32 %97, 10
  %99 = xor i32 %98, %97
  %100 = mul i32 %99, 9
  %101 = lshr i32 %100, 6
  %102 = xor i32 %101, %100
  %103 = shl i32 %102, 11
  %104 = xor i32 %103, -1
  %105 = add i32 %102, %104
  %106 = lshr i32 %105, 16
  %107 = xor i32 %106, %105
  %108 = and i32 %93, %107
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %89, i64 %109
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %110, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, %59
  br i1 %113, label %142, label %114

114:                                              ; preds = %91
  %115 = xor i32 %107, -1
  %116 = lshr i32 %105, 23
  %117 = add i32 %116, %115
  %118 = shl i32 %117, 12
  %119 = xor i32 %118, %117
  %120 = lshr i32 %119, 7
  %121 = xor i32 %120, %119
  %122 = shl i32 %121, 2
  %123 = xor i32 %122, %121
  %124 = lshr i32 %123, 20
  %125 = xor i32 %124, %123
  %126 = or i32 %125, 1
  %127 = zext i32 %126 to i64
  br label %128

128:                                              ; preds = %133, %114
  %129 = phi i32 [ %112, %114 ], [ %140, %133 ]
  %130 = phi i64 [ %109, %114 ], [ %137, %133 ]
  %131 = phi i64 [ 0, %114 ], [ %135, %133 ]
  %132 = icmp eq i32 %129, -1
  br i1 %132, label %148, label %133

133:                                              ; preds = %128
  %134 = icmp eq i64 %131, 0
  %135 = select i1 %134, i64 %127, i64 %131
  %136 = add i64 %135, %130
  %137 = and i64 %136, %94
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %89, i64 %137
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %138, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, %59
  br i1 %141, label %142, label %128

142:                                              ; preds = %133, %91
  %143 = phi %"struct.WTF::KeyValuePair.1740"* [ %110, %91 ], [ %138, %133 ]
  %144 = icmp eq %"struct.WTF::KeyValuePair.1740"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %143, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  br label %148

148:                                              ; preds = %128, %145, %142, %88, %44
  %149 = phi i32 [ 0, %44 ], [ %147, %145 ], [ 0, %142 ], [ 0, %88 ], [ 0, %128 ]
  %150 = zext i32 %149 to i64
  %151 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)**, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*** %34, align 8
  %152 = getelementptr inbounds %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %151, i64 6
  %153 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %152, align 8
  %154 = call %"class.blink::Grid::GridIterator"* %153(%"class.blink::Grid"* %1, i32 %87, i64 %75, i64 %150) #17
  %155 = mul i64 %58, -4294967295
  %156 = ashr i64 %155, 32
  %157 = bitcast %"class.blink::Grid::GridIterator"* %154 to %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)***
  %158 = load %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)**, %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)*** %157, align 8
  %159 = getelementptr inbounds %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)*, %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)** %158, i64 1
  %160 = load %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)*, %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)** %159, align 8
  %161 = call %"struct.blink::GridArea"* %160(%"class.blink::Grid::GridIterator"* %154, i64 %156, i64 %73) #17
  %162 = load void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)**, void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)*** %35, align 8
  %163 = getelementptr inbounds void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)*, void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)** %162, i64 2
  %164 = load void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)*, void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)** %163, align 8
  call void %164(%"class.blink::Grid"* %1, %"class.blink::LayoutBox"* dereferenceable(216) %47, %"struct.blink::GridArea"* dereferenceable(24) %161) #17
  br i1 %20, label %181, label %165

165:                                              ; preds = %148
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  %166 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %161, i64 0, i32 1, i32 0
  %167 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %161, i64 0, i32 0, i32 0
  %168 = select i1 %18, i32* %167, i32* %166
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  store i64 %170, i64* %6, align 8
  %171 = call { %"struct.WTF::KeyValuePair.1740"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjmEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1737"* nonnull %37, i32* nonnull dereferenceable(4) %5, i64* nonnull dereferenceable(8) %6) #17
  %172 = extractvalue { %"struct.WTF::KeyValuePair.1740"*, i8 } %171, 1
  %173 = and i8 %172, 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %180

175:                                              ; preds = %165
  %176 = extractvalue { %"struct.WTF::KeyValuePair.1740"*, i8 } %171, 0
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %176, i64 0, i32 1
  %178 = load i64, i64* %6, align 8
  %179 = trunc i64 %178 to i32
  store i32 %179, i32* %177, align 4
  br label %180

180:                                              ; preds = %165, %175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %181

181:                                              ; preds = %180, %148
  %182 = icmp eq %"struct.blink::GridArea"* %161, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = bitcast %"struct.blink::GridArea"* %161 to i8*
  call void @free(i8* %184) #17
  br label %185

185:                                              ; preds = %181, %183
  %186 = icmp eq %"class.blink::Grid::GridIterator"* %154, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %185
  %188 = bitcast %"class.blink::Grid::GridIterator"* %154 to void (%"class.blink::Grid::GridIterator"*)***
  %189 = load void (%"class.blink::Grid::GridIterator"*)**, void (%"class.blink::Grid::GridIterator"*)*** %188, align 8
  %190 = getelementptr inbounds void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %189, i64 3
  %191 = load void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %190, align 8
  call void %191(%"class.blink::Grid::GridIterator"* nonnull %154) #17
  br label %192

192:                                              ; preds = %185, %187
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #17
  %193 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %46, i64 1
  %194 = icmp eq %"class.blink::LayoutBox"** %193, %30
  br i1 %194, label %38, label %195

195:                                              ; preds = %192
  %196 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %197 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %196, i64 0, i32 0, i32 3, i32 0, i32 0
  %198 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %197, align 8
  br label %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid29PlaceAutoMajorAxisItemsOnGridERNS_4GridERKN3WTF6VectorIPNS_9LayoutBoxELj0ENS3_18PartitionAllocatorEEE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::Grid"* dereferenceable(168), %"class.WTF::Vector.1511"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.1741", align 8
  %5 = bitcast %"struct.std::__1::pair.1741"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = bitcast %"struct.std::__1::pair.1741"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false)
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 45
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 16384
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %2, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %2, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %20, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %3
  %27 = bitcast %"struct.std::__1::pair.1741"* %4 to i8*
  br label %29

28:                                               ; preds = %33, %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #17
  ret void

29:                                               ; preds = %26, %33
  %30 = phi %"class.blink::LayoutBox"** [ %34, %33 ], [ %20, %26 ]
  %31 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %30, align 8
  call void @_ZNK5blink10LayoutGrid28PlaceAutoMajorAxisItemOnGridERNS_4GridERNS_9LayoutBoxERNSt3__14pairImmEE(%"class.blink::LayoutGrid"* %0, %"class.blink::Grid"* dereferenceable(168) %1, %"class.blink::LayoutBox"* dereferenceable(216) %31, %"struct.std::__1::pair.1741"* nonnull dereferenceable(16) %4)
  br i1 %18, label %33, label %32

32:                                               ; preds = %29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false)
  br label %33

33:                                               ; preds = %29, %32
  %34 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %30, i64 1
  %35 = icmp eq %"class.blink::LayoutBox"** %34, %24
  br i1 %35, label %28, label %29
}

declare void @_ZN5blink4Grid25SetAutoRepeatEmptyColumnsENSt3__110unique_ptrIN3WTF13LinkedHashSetImNS_30OrderedTrackIndexSetHashTraitsENS3_18PartitionAllocatorEEENS1_14default_deleteIS7_EEEE(%"class.blink::Grid"*, %"class.WTF::LinkedHashSet"*) local_unnamed_addr #1

declare void @_ZN5blink4Grid22SetAutoRepeatEmptyRowsENSt3__110unique_ptrIN3WTF13LinkedHashSetImNS_30OrderedTrackIndexSetHashTraitsENS3_18PartitionAllocatorEEENS1_14default_deleteIS7_EEEE(%"class.blink::Grid"*, %"class.WTF::LinkedHashSet"*) local_unnamed_addr #1

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14LocalFrameView17IsInPerformLayoutEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid25UpdateGridAreaLogicalSizeERNS_9LayoutBoxENS_10LayoutSizeE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i64) local_unnamed_addr #0 align 2 {
  %4 = trunc i64 %2 to i32
  %5 = lshr i64 %2, 32
  %6 = trunc i64 %5 to i32
  %7 = tail call zeroext i1 @_ZNK5blink9LayoutBox45HasOverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"* %1) #17
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call i32 @_ZNK5blink9LayoutBox42OverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"* %1) #17
  %10 = icmp ne i32 %9, %4
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i1 [ true, %3 ], [ %10, %8 ]
  %13 = tail call zeroext i1 @_ZNK5blink9LayoutBox46HasOverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* %1) #17
  br i1 %13, label %14, label %17

14:                                               ; preds = %11
  %15 = tail call i32 @_ZNK5blink9LayoutBox43OverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* %1) #17
  %16 = icmp ne i32 %15, %6
  br label %17

17:                                               ; preds = %11, %14
  %18 = phi i1 [ true, %11 ], [ %16, %14 ]
  br i1 %12, label %42, label %19

19:                                               ; preds = %17
  br i1 %18, label %20, label %48

20:                                               ; preds = %19
  %21 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = tail call zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"* %1) #17
  br i1 %23, label %42, label %26

24:                                               ; preds = %20
  %25 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %1) #17
  br i1 %25, label %42, label %48

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 15211807202738752817960438464512
  %33 = icmp eq i160 %32, 0
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 5, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %35, i64 0, i32 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %35, i64 0, i32 3
  %38 = select i1 %33, %"class.blink::Length"* %36, %"class.blink::Length"* %37
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %22, %24, %26, %17
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = or i96 %46, 2
  store i96 %47, i96* %45, align 4
  tail call void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"* %43) #17
  br label %48

48:                                               ; preds = %24, %42, %26, %19
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %4) #17
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %6) #17
  ret void
}

declare i64 @_ZNK5blink24GridTrackSizingAlgorithm32EstimatedGridAreaBreadthForChildERKNS_9LayoutBoxE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid27IsBaselineAlignmentForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 113336795588871485128704
  %7 = icmp eq i96 %6, 75557863725914323419136
  br i1 %7, label %99, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, i64 92
  %17 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LayoutObject"* %9, i32 39) #17
  %19 = select i1 %18, i32 7, i32 3
  %20 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %13, i32 %19, %"class.blink::ComputedStyle"* %11) #17
  %21 = and i32 %20, 14
  %22 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = trunc i96 %24 to i32
  %26 = icmp slt i32 %25, 0
  %27 = bitcast %"class.blink::ComputedStyle"** %12 to %"class.blink::ComputedStyleBase"**
  %28 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %28, i64 0, i32 7, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %29, align 8
  br i1 %26, label %31, label %37

31:                                               ; preds = %8
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %30, i64 0, i32 10, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %50, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %30, i64 0, i32 11, i32 2
  br label %43

37:                                               ; preds = %8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %30, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %30, i64 0, i32 9, i32 2
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i8* [ %36, %35 ], [ %42, %41 ]
  %45 = load i8, i8* %44, align 1
  %46 = icmp ne i8 %45, 0
  %47 = or i32 %21, 1
  %48 = icmp eq i32 %47, 5
  %49 = and i1 %48, %46
  br i1 %49, label %99, label %50

50:                                               ; preds = %37, %31, %43
  %51 = load i96, i96* %4, align 4
  %52 = and i96 %51, 113336795588871485128704
  %53 = icmp eq i96 %52, 75557863725914323419136
  br i1 %53, label %99, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, i64 92
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutObject"* %55, i32 39) #17
  %65 = select i1 %64, i32 7, i32 3
  %66 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %59, i32 %65, %"class.blink::ComputedStyle"* %57) #17
  %67 = and i32 %66, 14
  %68 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %69 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %68 to i96*
  %70 = load i96, i96* %69, align 4
  %71 = trunc i96 %70 to i32
  %72 = icmp slt i32 %71, 0
  %73 = bitcast %"class.blink::ComputedStyle"** %58 to %"class.blink::ComputedStyleBase"**
  %74 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %74, i64 0, i32 7, i32 0, i32 0
  %76 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %75, align 8
  br i1 %72, label %77, label %85

77:                                               ; preds = %54
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %76, i64 0, i32 12, i32 2
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %93, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %76, i64 0, i32 9, i32 2
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  br label %93

85:                                               ; preds = %54
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %76, i64 0, i32 10, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %76, i64 0, i32 11, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 0
  br label %93

93:                                               ; preds = %89, %85, %81, %77
  %94 = phi i1 [ true, %77 ], [ %84, %81 ], [ true, %85 ], [ %92, %89 ]
  %95 = or i32 %67, 1
  %96 = icmp eq i32 %95, 5
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = xor i1 %94, true
  br label %99

99:                                               ; preds = %2, %43, %97, %93, %50
  %100 = phi i1 [ false, %50 ], [ false, %93 ], [ %98, %97 ], [ true, %43 ], [ false, %2 ]
  ret i1 %100
}

declare zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i64 @_ZN5blink21GridPositionsResolver20ExplicitGridRowCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104), i64) local_unnamed_addr #1

declare i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104), i64) local_unnamed_addr #1

declare void @_ZN5blink22OrderIteratorPopulator12CollectChildEPKNS_9LayoutBoxE(%"class.blink::OrderIteratorPopulator"*, %"class.blink::LayoutBox"*) local_unnamed_addr #1

declare { i64, i32 } @_ZN5blink21GridPositionsResolver29ResolveGridPositionsFromStyleERKNS_13ComputedStyleES3_NS_24GridTrackSizingDirectionEm(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104), i32, i64) local_unnamed_addr #1

declare i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

declare void @_ZN5blink4Grid20SetExplicitGridStartEmm(%"class.blink::Grid"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22OrderIteratorPopulatorD1Ev(%"class.blink::OrderIteratorPopulator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"struct.blink::GridArea"* @_ZNK5blink10LayoutGrid50CreateEmptyGridAreaAtSpecifiedPositionsOutsideGridERKNS_4GridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERKNS_8GridSpanE(%"class.blink::LayoutGrid"* nocapture readnone, %"class.blink::Grid"* dereferenceable(168), %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32, %"struct.blink::GridSpan"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::GridSpan", align 8
  %7 = icmp eq i32 %3, 0
  %8 = zext i1 %7 to i32
  %9 = bitcast %"class.blink::Grid"* %1 to i64 (%"class.blink::Grid"*, i32)***
  %10 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %9, align 8
  %11 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %10, align 8
  %12 = tail call i64 %11(%"class.blink::Grid"* %1, i32 %8) #17
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = tail call i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* dereferenceable(104) %14, i32 %8) #17
  %16 = bitcast %"struct.blink::GridSpan"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %6, i64 0, i32 2
  %18 = add i64 %15, %12
  %19 = icmp ult i64 %12, 999
  %20 = select i1 %19, i64 %12, i64 999
  %21 = icmp ult i64 %18, 1000
  %22 = select i1 %21, i64 %18, i64 1000
  %23 = shl nuw nsw i64 %22, 32
  %24 = or i64 %23, %20
  %25 = bitcast %"struct.blink::GridSpan"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store i32 1, i32* %17, align 8
  %26 = select i1 %7, %"struct.blink::GridSpan"* %6, %"struct.blink::GridSpan"* %4
  %27 = select i1 %7, %"struct.blink::GridSpan"* %4, %"struct.blink::GridSpan"* %6
  %28 = tail call noalias i8* @malloc(i64 24) #17
  %29 = bitcast i8* %28 to %"struct.blink::GridArea"*
  %30 = bitcast %"struct.blink::GridSpan"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %30, i64 12, i1 false) #17
  %31 = getelementptr inbounds i8, i8* %28, i64 12
  %32 = bitcast %"struct.blink::GridSpan"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 12, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #17
  ret %"struct.blink::GridArea"* %29
}

declare { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid31AutoPlacementMinorAxisDirectionEv(%"class.blink::LayoutGrid"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %9, i64 0, i32 45
  %11 = load i32, i32* %10, align 4
  %12 = lshr i32 %11, 16
  %13 = and i32 %12, 1
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid28PlaceAutoMajorAxisItemOnGridERNS_4GridERNS_9LayoutBoxERNSt3__14pairImmEE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::Grid"* dereferenceable(168), %"class.blink::LayoutBox"* dereferenceable(216), %"struct.std::__1::pair.1741"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::GridSpan", align 8
  %6 = alloca %"struct.blink::GridSpan", align 8
  %7 = alloca %"struct.blink::GridSpan", align 8
  %8 = alloca %"struct.blink::GridSpan", align 8
  %9 = bitcast %"struct.blink::GridSpan"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %7, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %18, i64 0, i32 45
  %20 = load i32, i32* %19, align 4
  %21 = lshr i32 %20, 16
  %22 = and i32 %21, 1
  %23 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %1, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 %22) #17
  %24 = extractvalue { i64, i32 } %23, 0
  %25 = extractvalue { i64, i32 } %23, 1
  %26 = bitcast %"struct.blink::GridSpan"* %7 to i64*
  store i64 %24, i64* %26, align 8
  store i32 %25, i32* %10, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %35, i64 0, i32 45
  %37 = load i32, i32* %36, align 4
  %38 = lshr i32 %37, 16
  %39 = and i32 %38, 1
  %40 = xor i32 %39, 1
  %41 = tail call i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* dereferenceable(104) %28, i32 %40) #17
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %48, i64 0, i32 45
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 16
  %52 = and i32 %51, 1
  %53 = xor i32 %52, 1
  %54 = bitcast %"class.blink::Grid"* %1 to i64 (%"class.blink::Grid"*, i32)***
  %55 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %54, align 8
  %56 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %55, align 8
  %57 = tail call i64 %56(%"class.blink::Grid"* %1, i32 %53) #17
  %58 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %60, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %64, i64 0, i32 45
  %66 = load i32, i32* %65, align 4
  %67 = lshr i32 %66, 16
  %68 = and i32 %67, 1
  %69 = icmp ne i32 %68, 0
  %70 = getelementptr inbounds %"struct.std::__1::pair.1741", %"struct.std::__1::pair.1741"* %3, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.1741", %"struct.std::__1::pair.1741"* %3, i64 0, i32 0
  %72 = load i64, i64* %70, align 8
  %73 = load i64, i64* %71, align 8
  %74 = select i1 %69, i64 %72, i64 %73
  %75 = select i1 %69, i64 %73, i64 %72
  %76 = icmp eq i32 %25, 1
  br i1 %76, label %77, label %143

77:                                               ; preds = %4
  %78 = shl i64 %24, 32
  %79 = ashr exact i64 %78, 32
  %80 = icmp ugt i64 %75, %79
  %81 = zext i1 %80 to i64
  %82 = add i64 %74, %81
  %83 = icmp ult i64 %82, %57
  br i1 %83, label %84, label %115

84:                                               ; preds = %77
  %85 = bitcast %"class.blink::Grid"* %1 to %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)***
  %86 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)**, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*** %85, align 8
  %87 = getelementptr inbounds %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %86, i64 6
  %88 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %87, align 8
  %89 = tail call %"class.blink::Grid::GridIterator"* %88(%"class.blink::Grid"* %1, i32 %68, i64 %79, i64 %82) #17
  %90 = mul i64 %24, -4294967295
  %91 = ashr i64 %90, 32
  %92 = bitcast %"class.blink::Grid::GridIterator"* %89 to %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)***
  %93 = load %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)**, %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)*** %92, align 8
  %94 = getelementptr inbounds %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)*, %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)** %93, i64 1
  %95 = load %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)*, %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)** %94, align 8
  %96 = tail call %"struct.blink::GridArea"* %95(%"class.blink::Grid::GridIterator"* %89, i64 %91, i64 %41) #17
  %97 = icmp eq %"class.blink::Grid::GridIterator"* %89, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %84
  %99 = bitcast %"class.blink::Grid::GridIterator"* %89 to void (%"class.blink::Grid::GridIterator"*)***
  %100 = load void (%"class.blink::Grid::GridIterator"*)**, void (%"class.blink::Grid::GridIterator"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %100, i64 3
  %102 = load void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %101, align 8
  tail call void %102(%"class.blink::Grid::GridIterator"* nonnull %89) #17
  br label %103

103:                                              ; preds = %98, %84
  %104 = icmp eq %"struct.blink::GridArea"* %96, null
  br i1 %104, label %105, label %263

105:                                              ; preds = %103
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 3, i32 0, i32 0
  %108 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %108, i64 0, i32 2, i32 0, i32 0
  %110 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %110, i64 0, i32 2, i32 0, i32 0
  %112 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %112, i64 0, i32 45
  %114 = load i32, i32* %113, align 4
  br label %115

115:                                              ; preds = %105, %77
  %116 = phi i32 [ %114, %105 ], [ %66, %77 ]
  %117 = and i32 %116, 65536
  %118 = icmp eq i32 %117, 0
  %119 = lshr exact i32 %117, 16
  %120 = xor i32 %119, 1
  %121 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %54, align 8
  %122 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %121, align 8
  %123 = tail call i64 %122(%"class.blink::Grid"* %1, i32 %120) #17
  %124 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %125 = tail call i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* dereferenceable(104) %124, i32 %120) #17
  %126 = bitcast %"struct.blink::GridSpan"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %126) #17
  %127 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %5, i64 0, i32 2
  %128 = add i64 %125, %123
  %129 = icmp ult i64 %123, 999
  %130 = select i1 %129, i64 %123, i64 999
  %131 = icmp ult i64 %128, 1000
  %132 = select i1 %131, i64 %128, i64 1000
  %133 = shl nuw nsw i64 %132, 32
  %134 = or i64 %133, %130
  %135 = bitcast %"struct.blink::GridSpan"* %5 to i64*
  store i64 %134, i64* %135, align 8
  store i32 1, i32* %127, align 8
  %136 = select i1 %118, %"struct.blink::GridSpan"* %5, %"struct.blink::GridSpan"* %7
  %137 = select i1 %118, %"struct.blink::GridSpan"* %7, %"struct.blink::GridSpan"* %5
  %138 = tail call noalias i8* @malloc(i64 24) #17
  %139 = bitcast i8* %138 to %"struct.blink::GridArea"*
  %140 = bitcast %"struct.blink::GridSpan"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* nonnull align 8 %140, i64 12, i1 false) #17
  %141 = getelementptr inbounds i8, i8* %138, i64 12
  %142 = bitcast %"struct.blink::GridSpan"* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* nonnull align 8 %142, i64 12, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %126) #17
  br label %263

143:                                              ; preds = %4
  %144 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %145 = tail call i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* dereferenceable(104) %144, i32 %68) #17
  %146 = icmp ult i64 %74, %57
  br i1 %146, label %147, label %221

147:                                              ; preds = %143
  %148 = bitcast %"class.blink::Grid"* %1 to %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)***
  br label %149

149:                                              ; preds = %214, %147
  %150 = phi i64 [ %74, %147 ], [ %215, %214 ]
  %151 = phi i64 [ %75, %147 ], [ %206, %214 ]
  %152 = phi i64 [ 0, %147 ], [ %205, %214 ]
  %153 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %154 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %153, i64 0, i32 0, i32 3, i32 0, i32 0
  %155 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %155, i64 0, i32 2, i32 0, i32 0
  %157 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %157, i64 0, i32 2, i32 0, i32 0
  %159 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %159, i64 0, i32 45
  %161 = load i32, i32* %160, align 4
  %162 = lshr i32 %161, 16
  %163 = and i32 %162, 1
  %164 = xor i32 %163, 1
  %165 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)**, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*** %148, align 8
  %166 = getelementptr inbounds %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %165, i64 6
  %167 = load %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)*, %"class.blink::Grid::GridIterator"* (%"class.blink::Grid"*, i32, i64, i64)** %166, align 8
  %168 = tail call %"class.blink::Grid::GridIterator"* %167(%"class.blink::Grid"* %1, i32 %164, i64 %150, i64 %151) #17
  %169 = bitcast %"class.blink::Grid::GridIterator"* %168 to %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)***
  %170 = load %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)**, %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)*** %169, align 8
  %171 = getelementptr inbounds %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)*, %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)** %170, i64 1
  %172 = load %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)*, %"struct.blink::GridArea"* (%"class.blink::Grid::GridIterator"*, i64, i64)** %171, align 8
  %173 = tail call %"struct.blink::GridArea"* %172(%"class.blink::Grid::GridIterator"* %168, i64 %41, i64 %145) #17
  %174 = ptrtoint %"struct.blink::GridArea"* %173 to i64
  %175 = icmp eq i64 %152, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %149
  %177 = inttoptr i64 %152 to i8*
  tail call void @free(i8* %177) #17
  br label %178

178:                                              ; preds = %176, %149
  %179 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %180 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %179, i64 0, i32 0, i32 3, i32 0, i32 0
  %181 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %181, i64 0, i32 2, i32 0, i32 0
  %183 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %183, i64 0, i32 2, i32 0, i32 0
  %185 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %185, i64 0, i32 45
  %187 = load i32, i32* %186, align 4
  %188 = lshr i32 %187, 16
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %173, i64 0, i32 0, i32 1
  %192 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %173, i64 0, i32 1, i32 1
  %193 = select i1 %190, i32* %191, i32* %192
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %54, align 8
  %197 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %196, align 8
  %198 = tail call i64 %197(%"class.blink::Grid"* %1, i32 %189) #17
  %199 = icmp ult i64 %198, %195
  br i1 %199, label %200, label %204

200:                                              ; preds = %178
  %201 = icmp eq %"struct.blink::GridArea"* %173, null
  br i1 %201, label %204, label %202

202:                                              ; preds = %200
  %203 = bitcast %"struct.blink::GridArea"* %173 to i8*
  tail call void @free(i8* %203) #17
  br label %204

204:                                              ; preds = %202, %200, %178
  %205 = phi i64 [ %174, %178 ], [ 0, %200 ], [ 0, %202 ]
  %206 = phi i64 [ %151, %178 ], [ 0, %200 ], [ 0, %202 ]
  %207 = phi i1 [ false, %178 ], [ true, %200 ], [ true, %202 ]
  %208 = icmp eq %"class.blink::Grid::GridIterator"* %168, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %204
  %210 = bitcast %"class.blink::Grid::GridIterator"* %168 to void (%"class.blink::Grid::GridIterator"*)***
  %211 = load void (%"class.blink::Grid::GridIterator"*)**, void (%"class.blink::Grid::GridIterator"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %211, i64 3
  %213 = load void (%"class.blink::Grid::GridIterator"*)*, void (%"class.blink::Grid::GridIterator"*)** %212, align 8
  tail call void %213(%"class.blink::Grid::GridIterator"* nonnull %168) #17
  br label %214

214:                                              ; preds = %204, %209
  %215 = add nuw i64 %150, 1
  %216 = icmp ult i64 %215, %57
  %217 = and i1 %207, %216
  br i1 %217, label %149, label %218

218:                                              ; preds = %214
  %219 = inttoptr i64 %205 to %"struct.blink::GridArea"*
  %220 = icmp eq i64 %205, 0
  br i1 %220, label %221, label %263

221:                                              ; preds = %143, %218
  %222 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %223 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %222, i64 0, i32 0, i32 3, i32 0, i32 0
  %224 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %224, i64 0, i32 2, i32 0, i32 0
  %226 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %226, i64 0, i32 2, i32 0, i32 0
  %228 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %228, i64 0, i32 45
  %230 = load i32, i32* %229, align 4
  %231 = and i32 %230, 65536
  %232 = bitcast %"struct.blink::GridSpan"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %232) #17
  %233 = icmp ult i64 %145, 1000
  %234 = select i1 %233, i64 %145, i64 1000
  %235 = shl nuw nsw i64 %234, 32
  %236 = bitcast %"struct.blink::GridSpan"* %8 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %8, i64 0, i32 2
  store i32 1, i32* %237, align 8
  %238 = icmp eq i32 %231, 0
  %239 = lshr exact i32 %231, 16
  %240 = xor i32 %239, 1
  %241 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %54, align 8
  %242 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %241, align 8
  %243 = tail call i64 %242(%"class.blink::Grid"* %1, i32 %240) #17
  %244 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %245 = tail call i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* dereferenceable(104) %244, i32 %240) #17
  %246 = bitcast %"struct.blink::GridSpan"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %246) #17
  %247 = getelementptr inbounds %"struct.blink::GridSpan", %"struct.blink::GridSpan"* %6, i64 0, i32 2
  %248 = add i64 %245, %243
  %249 = icmp ult i64 %243, 999
  %250 = select i1 %249, i64 %243, i64 999
  %251 = icmp ult i64 %248, 1000
  %252 = select i1 %251, i64 %248, i64 1000
  %253 = shl nuw nsw i64 %252, 32
  %254 = or i64 %253, %250
  %255 = bitcast %"struct.blink::GridSpan"* %6 to i64*
  store i64 %254, i64* %255, align 8
  store i32 1, i32* %247, align 8
  %256 = select i1 %238, %"struct.blink::GridSpan"* %6, %"struct.blink::GridSpan"* %8
  %257 = select i1 %238, %"struct.blink::GridSpan"* %8, %"struct.blink::GridSpan"* %6
  %258 = tail call noalias i8* @malloc(i64 24) #17
  %259 = bitcast i8* %258 to %"struct.blink::GridArea"*
  %260 = bitcast %"struct.blink::GridSpan"* %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* nonnull align 8 %260, i64 12, i1 false) #17
  %261 = getelementptr inbounds i8, i8* %258, i64 12
  %262 = bitcast %"struct.blink::GridSpan"* %256 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %261, i8* nonnull align 8 %262, i64 12, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %246) #17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %232) #17
  br label %263

263:                                              ; preds = %103, %218, %221, %115
  %264 = phi %"struct.blink::GridArea"* [ %96, %103 ], [ %139, %115 ], [ %219, %218 ], [ %259, %221 ]
  %265 = bitcast %"class.blink::Grid"* %1 to void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)***
  %266 = load void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)**, void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)*, void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)** %266, i64 2
  %268 = load void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)*, void (%"class.blink::Grid"*, %"class.blink::LayoutBox"*, %"struct.blink::GridArea"*)** %267, align 8
  tail call void %268(%"class.blink::Grid"* %1, %"class.blink::LayoutBox"* dereferenceable(216) %2, %"struct.blink::GridArea"* dereferenceable(24) %264) #17
  %269 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %264, i64 0, i32 1, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = sext i32 %270 to i64
  store i64 %271, i64* %71, align 8
  %272 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %264, i64 0, i32 0, i32 0
  %273 = load i32, i32* %272, align 4
  %274 = sext i32 %273 to i64
  store i64 %274, i64* %70, align 8
  %275 = icmp eq %"struct.blink::GridArea"* %264, null
  br i1 %275, label %278, label %276

276:                                              ; preds = %263
  %277 = bitcast %"struct.blink::GridArea"* %264 to i8*
  tail call void @free(i8* %277) #17
  br label %278

278:                                              ; preds = %263, %276
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid26TrackSizesForComputedStyleENS_24GridTrackSizingDirectionE(%"class.WTF::Vector.1063"* noalias sret, %"class.blink::LayoutGrid"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::LayoutUnit", align 4
  %6 = icmp eq i32 %2, 0
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 6
  %8 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 5
  %9 = select i1 %6, %"class.WTF::Vector.1063"* %7, %"class.WTF::Vector.1063"* %8
  %10 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %9, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 7, i32 1
  %14 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 8, i32 1
  %15 = select i1 %6, %"class.blink::LayoutUnit"* %13, %"class.blink::LayoutUnit"* %14
  %16 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.WTF::Vector.1063"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #17
  %22 = icmp ult i32 %11, 2
  br i1 %22, label %240, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.blink::Grid"*, %"class.blink::Grid"** %24, align 8
  %26 = tail call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %25, i32 %2) #17
  br i1 %26, label %61, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %29 = bitcast %"class.blink::ComputedStyle"** %28 to %"class.blink::ComputedStyleBase"**
  %30 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 18
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 19
  %39 = select i1 %6, %"class.absl::optional.461"* %37, %"class.absl::optional.461"* %38
  %40 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 4, !range !4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %61, label %43

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %39, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %45 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %39, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %46 = load i8, i8* %45, align 1
  switch i8 %46, label %53 [
    i8 8, label %47
    i8 1, label %47
  ]

47:                                               ; preds = %43, %43
  %48 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 0, i32 0
  br i1 %6, label %49, label %51

49:                                               ; preds = %47
  %50 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %48) #17
  br label %53

51:                                               ; preds = %47
  %52 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %48) #17
  br label %53

53:                                               ; preds = %51, %49, %43
  %54 = phi i32 [ 0, %43 ], [ %50, %49 ], [ %52, %51 ]
  %55 = load i8, i8* %40, align 4, !range !4
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %58, !prof !3

57:                                               ; preds = %53
  tail call void @llvm.trap() #17
  unreachable

58:                                               ; preds = %53
  %59 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %44, i32 %54) #17
  %60 = load i32, i32* %19, align 8
  br label %61

61:                                               ; preds = %23, %58, %27
  %62 = phi i32 [ %60, %58 ], [ 0, %27 ], [ 0, %23 ]
  %63 = phi i32 [ %59, %58 ], [ 0, %27 ], [ 0, %23 ]
  %64 = add i32 %11, -1
  %65 = icmp ult i32 %62, %64
  br i1 %65, label %66, label %93, !prof !2

66:                                               ; preds = %61
  %67 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %18, align 8
  %68 = icmp eq %"class.blink::LayoutUnit"* %67, null
  %69 = zext i32 %64 to i64
  %70 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %69) #17
  %71 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %70, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #17
  %72 = ptrtoint i8* %71 to i64
  br i1 %68, label %73, label %75

73:                                               ; preds = %66
  %74 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %72, i64* %74 monotonic, align 8
  br label %90

75:                                               ; preds = %66
  %76 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %18, align 8
  %77 = icmp ne i8* %71, null
  %78 = icmp ne %"class.blink::LayoutUnit"* %76, null
  %79 = and i1 %77, %78
  %80 = bitcast %"class.blink::LayoutUnit"* %76 to i8*
  br i1 %79, label %81, label %87, !prof !2

81:                                               ; preds = %75
  %82 = load i32, i32* %20, align 4
  %83 = zext i32 %82 to i64
  %84 = shl nuw nsw i64 %83, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* nonnull align 4 %80, i64 %84, i1 false) #17
  %85 = bitcast %"class.WTF::Vector.1063"* %0 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %81, %75
  %88 = phi i8* [ %86, %81 ], [ %80, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %88) #17
  %89 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %72, i64* %89 monotonic, align 8
  br label %90

90:                                               ; preds = %87, %73
  %91 = lshr i64 %70, 2
  %92 = trunc i64 %91 to i32
  store i32 %92, i32* %19, align 8
  br label %93

93:                                               ; preds = %90, %61
  %94 = add nsw i64 %12, -2
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %103, label %96

96:                                               ; preds = %93
  %97 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  %98 = icmp sgt i32 %17, -1
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = icmp sgt i32 %63, -1
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  br label %130

103:                                              ; preds = %165, %93
  %104 = bitcast %"class.blink::LayoutUnit"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #17
  %105 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %9, i32 %64) #17
  %106 = trunc i64 %94 to i32
  %107 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %9, i32 %106) #17
  %108 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %105, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %107, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp sgt i32 %111, -1
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %109, i32 %111) #17
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !3
  %118 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 %117, i32* %118, align 4
  %119 = load i32, i32* %20, align 4
  %120 = load i32, i32* %19, align 8
  %121 = icmp eq i32 %119, %120
  br i1 %121, label %128, label %122, !prof !3

122:                                              ; preds = %103
  %123 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %18, align 8
  %124 = zext i32 %119 to i64
  %125 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %123, i64 %124, i32 0
  store i32 %117, i32* %125, align 4
  %126 = load i32, i32* %20, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %20, align 4
  br label %129

128:                                              ; preds = %103
  call void @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1063"* %0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %5) #17
  br label %129

129:                                              ; preds = %122, %128
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #17
  br i1 %26, label %167, label %240

130:                                              ; preds = %165, %96
  %131 = phi i64 [ 0, %96 ], [ %132, %165 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #17
  %132 = add nuw i64 %131, 1
  %133 = trunc i64 %132 to i32
  %134 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %9, i32 %133) #17
  %135 = trunc i64 %131 to i32
  %136 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %9, i32 %135) #17
  %137 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %134, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %136, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %140, -1
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %138, i32 %140) #17
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !3
  %147 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %146, i32 %17) #17
  %148 = extractvalue { i32, i1 } %147, 1
  %149 = extractvalue { i32, i1 } %147, 0
  %150 = select i1 %148, i32 %99, i32 %149, !prof !3
  %151 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %150, i32 %63) #17
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 %101, i32 %153, !prof !3
  store i32 %154, i32* %102, align 4
  %155 = load i32, i32* %20, align 4
  %156 = load i32, i32* %19, align 8
  %157 = icmp eq i32 %155, %156
  br i1 %157, label %164, label %158, !prof !3

158:                                              ; preds = %130
  %159 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %18, align 8
  %160 = zext i32 %155 to i64
  %161 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %159, i64 %160, i32 0
  store i32 %154, i32* %161, align 4
  %162 = load i32, i32* %20, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %20, align 4
  br label %165

164:                                              ; preds = %130
  call void @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1063"* %0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4) #17
  br label %165

165:                                              ; preds = %158, %164
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #17
  %166 = icmp eq i64 %132, %94
  br i1 %166, label %103, label %130

167:                                              ; preds = %129
  %168 = load %"class.blink::Grid"*, %"class.blink::Grid"** %24, align 8
  %169 = call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %168, i32 %2) #17
  %170 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %169, i64 0, i32 1, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i64
  %173 = load i32, i32* %20, align 4
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %176 = bitcast %"class.blink::ComputedStyle"** %175 to %"class.blink::ComputedStyleBase"**
  %177 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %177, i64 0, i32 3, i32 0, i32 0
  %179 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %179, i64 0, i32 2, i32 0, i32 0
  %181 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %181, i64 0, i32 2, i32 0, i32 0
  %183 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %183, i64 0, i32 18
  %185 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %183, i64 0, i32 19
  %186 = select i1 %6, %"class.absl::optional.461"* %184, %"class.absl::optional.461"* %185
  %187 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %186, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8, i8* %187, align 4, !range !4
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %207, label %190

190:                                              ; preds = %167
  %191 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %186, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %192 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %186, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %193 = load i8, i8* %192, align 1
  switch i8 %193, label %200 [
    i8 8, label %194
    i8 1, label %194
  ]

194:                                              ; preds = %190, %190
  %195 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 0, i32 0
  br i1 %6, label %196, label %198

196:                                              ; preds = %194
  %197 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %195) #17
  br label %200

198:                                              ; preds = %194
  %199 = call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %195) #17
  br label %200

200:                                              ; preds = %198, %196, %190
  %201 = phi i32 [ 0, %190 ], [ %197, %196 ], [ %199, %198 ]
  %202 = load i8, i8* %187, align 4, !range !4
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %205, !prof !3

204:                                              ; preds = %200
  call void @llvm.trap() #17
  unreachable

205:                                              ; preds = %200
  %206 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %191, i32 %201) #17
  br label %207

207:                                              ; preds = %167, %205
  %208 = phi i32 [ %206, %205 ], [ 0, %167 ]
  %209 = icmp ugt i32 %173, 1
  br i1 %209, label %210, label %240

210:                                              ; preds = %207
  %211 = icmp sgt i32 %208, -1
  %212 = select i1 %211, i32 -2147483648, i32 2147483647
  br label %213

213:                                              ; preds = %236, %210
  %214 = phi i64 [ 1, %210 ], [ %238, %236 ]
  %215 = phi i64 [ %172, %210 ], [ %237, %236 ]
  %216 = load %"class.blink::Grid"*, %"class.blink::Grid"** %24, align 8
  %217 = add nsw i64 %214, -1
  %218 = call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %216, i32 %2, i64 %217) #17
  br i1 %218, label %219, label %221

219:                                              ; preds = %213
  %220 = add i64 %215, -1
  br label %236

221:                                              ; preds = %213
  %222 = sub nsw i64 %174, %214
  %223 = icmp eq i64 %215, %222
  br i1 %223, label %224, label %227

224:                                              ; preds = %221
  %225 = load %"class.blink::Grid"*, %"class.blink::Grid"** %24, align 8
  %226 = call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %225, i32 %2, i64 %214) #17
  br i1 %226, label %236, label %227

227:                                              ; preds = %224, %221
  %228 = trunc i64 %217 to i32
  %229 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %0, i32 %228) #17
  %230 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %229, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %231, i32 %208) #17
  %233 = extractvalue { i32, i1 } %232, 1
  %234 = extractvalue { i32, i1 } %232, 0
  %235 = select i1 %233, i32 %212, i32 %234, !prof !3
  store i32 %235, i32* %230, align 4
  br label %236

236:                                              ; preds = %224, %227, %219
  %237 = phi i64 [ %220, %219 ], [ %215, %227 ], [ %215, %224 ]
  %238 = add nuw nsw i64 %214, 1
  %239 = icmp eq i64 %238, %174
  br i1 %239, label %240, label %213

240:                                              ; preds = %236, %207, %129, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn240_NK5blink10LayoutGrid26TrackSizesForComputedStyleENS_24GridTrackSizingDirectionE(%"class.WTF::Vector.1063"* noalias sret, %"class.blink::LayoutGrid"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 -1, i32 4, i32 13
  %5 = bitcast %"class.blink::LayoutGrid"** %4 to %"class.blink::LayoutGrid"*
  tail call void @_ZNK5blink10LayoutGrid26TrackSizesForComputedStyleENS_24GridTrackSizingDirectionE(%"class.WTF::Vector.1063"* sret %0, %"class.blink::LayoutGrid"* %5, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(4) %"class.blink::StyleContentAlignmentData"* @_ZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %11, !prof !5

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %8 = and i16 %7, -512
  %9 = or i16 %8, 64
  store i16 %9, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %10 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %11

11:                                               ; preds = %3, %6, %0
  ret %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid33PopulateGridPositionsForDirectionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %5 = tail call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZN5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %4, i32 %1) #17
  %6 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %5, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = add i32 %7, 1
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Grid"*, %"class.blink::Grid"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %11, i32 %1) #17
  br i1 %12, label %13, label %19

13:                                               ; preds = %2
  %14 = load %"class.blink::Grid"*, %"class.blink::Grid"** %10, align 8
  %15 = tail call %"class.WTF::LinkedHashSet"* @_ZNK5blink4Grid21AutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %14, i32 %1) #17
  %16 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %15, i64 0, i32 1, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %2, %13
  %20 = phi i64 [ %18, %13 ], [ 0, %2 ]
  %21 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 8
  %23 = select i1 %3, %"struct.blink::ContentAlignmentData"* %21, %"struct.blink::ContentAlignmentData"* %22
  %24 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %25 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5
  %26 = select i1 %3, %"class.WTF::Vector.1063"* %24, %"class.WTF::Vector.1063"* %25
  %27 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %26, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %28, %9
  br i1 %29, label %30, label %90

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %26, i64 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %32, %9
  br i1 %33, label %34, label %73

34:                                               ; preds = %30
  %35 = lshr i32 %32, 2
  %36 = add nuw i32 %32, 1
  %37 = add i32 %36, %35
  %38 = icmp ugt i32 %37, 4
  %39 = select i1 %38, i32 %37, i32 4
  %40 = icmp ugt i32 %39, %9
  %41 = select i1 %40, i32 %39, i32 %9
  %42 = icmp ult i32 %32, %41
  br i1 %42, label %43, label %73, !prof !2

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %26, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %44, align 8
  %46 = icmp eq %"class.blink::LayoutUnit"* %45, null
  %47 = zext i32 %41 to i64
  %48 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %47) #17
  %49 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %48, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #17
  br i1 %46, label %50, label %55

50:                                               ; preds = %43
  %51 = ptrtoint i8* %49 to i64
  %52 = bitcast %"class.WTF::Vector.1063"* %26 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = lshr i64 %48, 2
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %31, align 8
  br label %73

55:                                               ; preds = %43
  %56 = lshr i64 %48, 2
  %57 = ptrtoint i8* %49 to i64
  %58 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %44, align 8
  %59 = icmp ne i8* %49, null
  %60 = icmp ne %"class.blink::LayoutUnit"* %58, null
  %61 = and i1 %59, %60
  %62 = bitcast %"class.blink::LayoutUnit"* %58 to i8*
  br i1 %61, label %63, label %69, !prof !2

63:                                               ; preds = %55
  %64 = load i32, i32* %27, align 4
  %65 = zext i32 %64 to i64
  %66 = shl nuw nsw i64 %65, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* nonnull align 4 %62, i64 %66, i1 false) #17
  %67 = bitcast %"class.WTF::Vector.1063"* %26 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %63, %55
  %70 = phi i8* [ %68, %63 ], [ %62, %55 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %70) #17
  %71 = bitcast %"class.WTF::Vector.1063"* %26 to i64*
  store atomic i64 %57, i64* %71 monotonic, align 8
  %72 = trunc i64 %56 to i32
  store i32 %72, i32* %31, align 8
  br label %73

73:                                               ; preds = %69, %50, %34, %30
  %74 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %26, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %74, align 8
  %76 = load i32, i32* %27, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %75, i64 %77
  %79 = icmp eq i32 %76, %9
  br i1 %79, label %90, label %80

80:                                               ; preds = %73
  %81 = zext i32 %9 to i64
  %82 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %75, i64 %81
  %83 = bitcast %"class.blink::LayoutUnit"* %78 to i8*
  %84 = ptrtoint %"class.blink::LayoutUnit"* %78 to i64
  %85 = getelementptr %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %82, i64 -1, i32 0
  %86 = ptrtoint i32* %85 to i64
  %87 = add i64 %86, 4
  %88 = sub i64 %87, %84
  %89 = and i64 %88, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 %89, i1 false) #17
  br label %90

90:                                               ; preds = %19, %73, %80
  store i32 %9, i32* %27, align 4
  %91 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %93 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %93, i64 0, i32 0, i32 9
  %95 = bitcast [20 x i8]* %94 to i160*
  %96 = load i160, i160* %95, align 8
  br i1 %3, label %97, label %124

97:                                               ; preds = %90
  %98 = and i160 %96, 15211807202738752817960438464512
  %99 = icmp eq i160 %98, 0
  %100 = bitcast %"class.blink::LayoutGrid"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %101 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %100, align 8
  br i1 %99, label %102, label %113

102:                                              ; preds = %97
  %103 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %101, i64 124
  %104 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %103, align 8
  %105 = tail call i32 %104(%"class.blink::LayoutBoxModelObject"* %91) #17
  %106 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %100, align 8
  %107 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, i64 120
  %108 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %107, align 8
  %109 = tail call i32 %108(%"class.blink::LayoutBoxModelObject"* %91) #17
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %109) #17
  br label %182

113:                                              ; preds = %97
  %114 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %101, i64 122
  %115 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %114, align 8
  %116 = tail call i32 %115(%"class.blink::LayoutBoxModelObject"* %91) #17
  %117 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %100, align 8
  %118 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %117, i64 118
  %119 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %118, align 8
  %120 = tail call i32 %119(%"class.blink::LayoutBoxModelObject"* %91) #17
  %121 = icmp slt i32 %120, 0
  %122 = select i1 %121, i32 -2147483648, i32 2147483647
  %123 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %116, i32 %120) #17
  br label %182

124:                                              ; preds = %90
  %125 = lshr i160 %96, 102
  %126 = trunc i160 %125 to i8
  %127 = and i8 %126, 3
  %128 = bitcast %"class.blink::LayoutGrid"* %0 to i8*
  switch i8 %127, label %129 [
    i8 0, label %138
    i8 1, label %130
  ]

129:                                              ; preds = %124
  br label %130

130:                                              ; preds = %129, %124
  %131 = phi { i64, i64 } [ { i64 993, i64 0 }, %129 ], [ { i64 1001, i64 0 }, %124 ]
  %132 = extractvalue { i64, i64 } %131, 0
  %133 = extractvalue { i64, i64 } %131, 1
  %134 = getelementptr inbounds i8, i8* %128, i64 %133
  %135 = bitcast i8* %134 to %"class.blink::LayoutBoxModelObject"*
  %136 = and i64 %132, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %148, label %138

138:                                              ; preds = %130, %124
  %139 = phi %"class.blink::LayoutBoxModelObject"* [ %135, %130 ], [ %91, %124 ]
  %140 = phi i8* [ %134, %130 ], [ %128, %124 ]
  %141 = phi i64 [ %132, %130 ], [ 977, %124 ]
  %142 = bitcast i8* %140 to i8**
  %143 = load i8*, i8** %142, align 8
  %144 = add i64 %141, -1
  %145 = getelementptr i8, i8* %143, i64 %144
  %146 = bitcast i8* %145 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %147 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %146, align 8
  br label %150

148:                                              ; preds = %130
  %149 = inttoptr i64 %132 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %150

150:                                              ; preds = %148, %138
  %151 = phi %"class.blink::LayoutBoxModelObject"* [ %139, %138 ], [ %135, %148 ]
  %152 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %147, %138 ], [ %149, %148 ]
  %153 = tail call i32 %152(%"class.blink::LayoutBoxModelObject"* %151) #17
  %154 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %92, align 8, !noalias !53
  %155 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %154, i64 0, i32 0, i32 9
  %156 = bitcast [20 x i8]* %155 to i160*
  %157 = load i160, i160* %156, align 8, !noalias !53
  %158 = lshr i160 %157, 102
  %159 = trunc i160 %158 to i8
  %160 = and i8 %159, 3
  switch i8 %160, label %161 [
    i8 0, label %170
    i8 1, label %162
  ]

161:                                              ; preds = %150
  br label %162

162:                                              ; preds = %161, %150
  %163 = phi { i64, i64 } [ { i64 961, i64 0 }, %161 ], [ { i64 969, i64 0 }, %150 ]
  %164 = extractvalue { i64, i64 } %163, 0
  %165 = extractvalue { i64, i64 } %163, 1
  %166 = getelementptr inbounds i8, i8* %128, i64 %165
  %167 = bitcast i8* %166 to %"class.blink::LayoutBoxModelObject"*
  %168 = and i64 %164, 1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %180, label %170

170:                                              ; preds = %162, %150
  %171 = phi %"class.blink::LayoutBoxModelObject"* [ %167, %162 ], [ %91, %150 ]
  %172 = phi i8* [ %166, %162 ], [ %128, %150 ]
  %173 = phi i64 [ %164, %162 ], [ 945, %150 ]
  %174 = bitcast i8* %172 to i8**
  %175 = load i8*, i8** %174, align 8
  %176 = add i64 %173, -1
  %177 = getelementptr i8, i8* %175, i64 %176
  %178 = bitcast i8* %177 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %179 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %178, align 8
  br label %213

180:                                              ; preds = %162
  %181 = inttoptr i64 %164 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %213

182:                                              ; preds = %113, %102
  %183 = phi { i32, i1 } [ %123, %113 ], [ %112, %102 ]
  %184 = phi i32 [ %122, %113 ], [ %111, %102 ]
  %185 = extractvalue { i32, i1 } %183, 1
  %186 = extractvalue { i32, i1 } %183, 0
  %187 = select i1 %185, i32 %184, i32 %186
  %188 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %92, align 8
  %189 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %188, i64 0, i32 0, i32 9
  %190 = bitcast [20 x i8]* %189 to i160*
  %191 = load i160, i160* %190, align 8
  %192 = and i160 %191, 41553586675481359781061931072225280
  %193 = icmp eq i160 %192, 41538374868278621028243970633760768
  br i1 %193, label %194, label %249

194:                                              ; preds = %182
  %195 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %196 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %195)
  %197 = extractvalue { i64, i64 } %196, 0
  %198 = trunc i64 %197 to i32
  %199 = lshr i64 %197, 32
  %200 = trunc i64 %199 to i32
  %201 = icmp slt i32 %200, 0
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %198, i32 %200) #17
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !3
  %207 = icmp slt i32 %206, 0
  %208 = select i1 %207, i32 -2147483648, i32 2147483647
  %209 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %187, i32 %206) #17
  %210 = extractvalue { i32, i1 } %209, 1
  %211 = extractvalue { i32, i1 } %209, 0
  %212 = select i1 %210, i32 %208, i32 %211, !prof !3
  br label %249

213:                                              ; preds = %170, %180
  %214 = phi %"class.blink::LayoutBoxModelObject"* [ %171, %170 ], [ %167, %180 ]
  %215 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %179, %170 ], [ %181, %180 ]
  %216 = tail call i32 %215(%"class.blink::LayoutBoxModelObject"* %214) #17
  %217 = icmp slt i32 %216, 0
  %218 = select i1 %217, i32 -2147483648, i32 2147483647
  %219 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %153, i32 %216) #17
  %220 = extractvalue { i32, i1 } %219, 1
  %221 = extractvalue { i32, i1 } %219, 0
  %222 = select i1 %220, i32 %218, i32 %221, !prof !3
  %223 = bitcast %"class.blink::ComputedStyle"** %92 to %"class.blink::ComputedStyleBase"**
  %224 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %224, i64 0, i32 9
  %226 = bitcast [20 x i8]* %225 to i160*
  %227 = load i160, i160* %226, align 8
  %228 = and i160 %227, 15211807202738752817960438464512
  %229 = icmp eq i160 %228, 5070602400912917605986812821504
  br i1 %229, label %230, label %249

230:                                              ; preds = %213
  %231 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %232 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %231)
  %233 = extractvalue { i64, i64 } %232, 1
  %234 = trunc i64 %233 to i32
  %235 = lshr i64 %233, 32
  %236 = trunc i64 %235 to i32
  %237 = icmp slt i32 %236, 0
  %238 = select i1 %237, i32 -2147483648, i32 2147483647
  %239 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %234, i32 %236) #17
  %240 = extractvalue { i32, i1 } %239, 1
  %241 = extractvalue { i32, i1 } %239, 0
  %242 = select i1 %240, i32 %238, i32 %241, !prof !3
  %243 = icmp slt i32 %242, 0
  %244 = select i1 %243, i32 -2147483648, i32 2147483647
  %245 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %222, i32 %242) #17
  %246 = extractvalue { i32, i1 } %245, 1
  %247 = extractvalue { i32, i1 } %245, 0
  %248 = select i1 %246, i32 %244, i32 %247, !prof !3
  br label %249

249:                                              ; preds = %182, %213, %230, %194
  %250 = phi i32 [ %212, %194 ], [ %187, %182 ], [ %248, %230 ], [ %222, %213 ]
  %251 = getelementptr inbounds %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData"* %23, i64 0, i32 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = icmp slt i32 %252, 0
  %254 = select i1 %253, i32 -2147483648, i32 2147483647
  %255 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %250, i32 %252) #17
  %256 = extractvalue { i32, i1 } %255, 1
  %257 = extractvalue { i32, i1 } %255, 0
  %258 = select i1 %256, i32 %254, i32 %257, !prof !3
  %259 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %26, i32 0) #17
  %260 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %259, i64 0, i32 0
  store i32 %258, i32* %260, align 4
  %261 = icmp eq i32 %7, 0
  br i1 %261, label %459, label %262

262:                                              ; preds = %249
  br i1 %12, label %295, label %263

263:                                              ; preds = %262
  %264 = bitcast %"class.blink::ComputedStyle"** %92 to %"class.blink::ComputedStyleBase"**
  %265 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %265, i64 0, i32 3, i32 0, i32 0
  %267 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %266, align 8
  %268 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %267, i64 0, i32 2, i32 0, i32 0
  %269 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %268, align 8
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %269, i64 0, i32 2, i32 0, i32 0
  %271 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %270, align 8
  %272 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %271, i64 0, i32 18
  %273 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %271, i64 0, i32 19
  %274 = select i1 %3, %"class.absl::optional.461"* %272, %"class.absl::optional.461"* %273
  %275 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %274, i64 0, i32 0, i32 0, i32 0, i32 0
  %276 = load i8, i8* %275, align 4, !range !4
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %295, label %278

278:                                              ; preds = %263
  %279 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %274, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %280 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %274, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %281 = load i8, i8* %280, align 1
  switch i8 %281, label %288 [
    i8 8, label %282
    i8 1, label %282
  ]

282:                                              ; preds = %278, %278
  %283 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  br i1 %3, label %284, label %286

284:                                              ; preds = %282
  %285 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %283) #17
  br label %288

286:                                              ; preds = %282
  %287 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %283) #17
  br label %288

288:                                              ; preds = %286, %284, %278
  %289 = phi i32 [ 0, %278 ], [ %285, %284 ], [ %287, %286 ]
  %290 = load i8, i8* %275, align 4, !range !4
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %292, label %293, !prof !3

292:                                              ; preds = %288
  tail call void @llvm.trap() #17
  unreachable

293:                                              ; preds = %288
  %294 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %279, i32 %289) #17
  br label %295

295:                                              ; preds = %262, %293, %263
  %296 = phi i32 [ %294, %293 ], [ 0, %263 ], [ 0, %262 ]
  %297 = add nsw i64 %8, -1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %303, label %299

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData"* %23, i64 0, i32 1, i32 0
  %301 = icmp slt i32 %296, 0
  %302 = select i1 %301, i32 -2147483648, i32 2147483647
  br label %318

303:                                              ; preds = %318, %295
  %304 = trunc i64 %297 to i32
  %305 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %26, i32 %304) #17
  %306 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1032"* %5, i32 %304) #17
  %307 = tail call i32 @_ZNK5blink9GridTrack8BaseSizeEv(%"class.blink::GridTrack"* %306) #17
  %308 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %305, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  %310 = icmp slt i32 %307, 0
  %311 = select i1 %310, i32 -2147483648, i32 2147483647
  %312 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %309, i32 %307) #17
  %313 = extractvalue { i32, i1 } %312, 1
  %314 = extractvalue { i32, i1 } %312, 0
  %315 = select i1 %313, i32 %311, i32 %314, !prof !3
  %316 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %26, i32 %7) #17
  %317 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %316, i64 0, i32 0
  store i32 %315, i32* %317, align 4
  br i1 %12, label %348, label %459

318:                                              ; preds = %318, %299
  %319 = phi i64 [ 0, %299 ], [ %343, %318 ]
  %320 = trunc i64 %319 to i32
  %321 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %26, i32 %320) #17
  %322 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %321, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  %324 = load i32, i32* %300, align 4
  %325 = icmp slt i32 %324, 0
  %326 = select i1 %325, i32 -2147483648, i32 2147483647
  %327 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %323, i32 %324) #17
  %328 = extractvalue { i32, i1 } %327, 1
  %329 = extractvalue { i32, i1 } %327, 0
  %330 = select i1 %328, i32 %326, i32 %329, !prof !3
  %331 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1032"* %5, i32 %320) #17
  %332 = tail call i32 @_ZNK5blink9GridTrack8BaseSizeEv(%"class.blink::GridTrack"* %331) #17
  %333 = icmp slt i32 %332, 0
  %334 = select i1 %333, i32 -2147483648, i32 2147483647
  %335 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %330, i32 %332) #17
  %336 = extractvalue { i32, i1 } %335, 1
  %337 = extractvalue { i32, i1 } %335, 0
  %338 = select i1 %336, i32 %334, i32 %337, !prof !3
  %339 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %338, i32 %296) #17
  %340 = extractvalue { i32, i1 } %339, 1
  %341 = extractvalue { i32, i1 } %339, 0
  %342 = select i1 %340, i32 %302, i32 %341, !prof !3
  %343 = add nuw i64 %319, 1
  %344 = trunc i64 %343 to i32
  %345 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %26, i32 %344) #17
  %346 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %345, i64 0, i32 0
  store i32 %342, i32* %346, align 4
  %347 = icmp eq i64 %343, %297
  br i1 %347, label %303, label %318

348:                                              ; preds = %303
  %349 = bitcast %"class.blink::ComputedStyle"** %92 to %"class.blink::ComputedStyleBase"**
  %350 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %349, align 8
  %351 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %350, i64 0, i32 3, i32 0, i32 0
  %352 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %351, align 8
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %352, i64 0, i32 2, i32 0, i32 0
  %354 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %353, align 8
  %355 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %354, i64 0, i32 2, i32 0, i32 0
  %356 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %355, align 8
  %357 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %356, i64 0, i32 18
  %358 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %356, i64 0, i32 19
  %359 = select i1 %3, %"class.absl::optional.461"* %357, %"class.absl::optional.461"* %358
  %360 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %359, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load i8, i8* %360, align 4, !range !4
  %362 = icmp eq i8 %361, 0
  br i1 %362, label %380, label %363

363:                                              ; preds = %348
  %364 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %359, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %365 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %359, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %366 = load i8, i8* %365, align 1
  switch i8 %366, label %373 [
    i8 8, label %367
    i8 1, label %367
  ]

367:                                              ; preds = %363, %363
  %368 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  br i1 %3, label %369, label %371

369:                                              ; preds = %367
  %370 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %368) #17
  br label %373

371:                                              ; preds = %367
  %372 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %368) #17
  br label %373

373:                                              ; preds = %371, %369, %363
  %374 = phi i32 [ 0, %363 ], [ %370, %369 ], [ %372, %371 ]
  %375 = load i8, i8* %360, align 4, !range !4
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %377, label %378, !prof !3

377:                                              ; preds = %373
  tail call void @llvm.trap() #17
  unreachable

378:                                              ; preds = %373
  %379 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %364, i32 %374) #17
  br label %380

380:                                              ; preds = %348, %378
  %381 = phi i32 [ %379, %378 ], [ 0, %348 ]
  %382 = icmp ugt i32 %7, 1
  br i1 %382, label %383, label %389

383:                                              ; preds = %380
  %384 = icmp slt i32 %381, 0
  %385 = select i1 %384, i32 -2147483648, i32 2147483647
  %386 = getelementptr inbounds %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData"* %23, i64 0, i32 1, i32 0
  br label %409

387:                                              ; preds = %437
  %388 = icmp sgt i32 %438, -1
  br i1 %388, label %389, label %392

389:                                              ; preds = %380, %387
  %390 = phi i32 [ %439, %387 ], [ 0, %380 ]
  %391 = phi i32 [ %438, %387 ], [ 0, %380 ]
  br label %392

392:                                              ; preds = %387, %389
  %393 = phi i32 [ %390, %389 ], [ %439, %387 ]
  %394 = phi i32 [ %391, %389 ], [ %438, %387 ]
  %395 = phi i32 [ -2147483648, %389 ], [ 2147483647, %387 ]
  %396 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %393, i32 %394) #17
  %397 = extractvalue { i32, i1 } %396, 1
  %398 = extractvalue { i32, i1 } %396, 0
  %399 = select i1 %397, i32 %395, i32 %398, !prof !3
  %400 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %26, i32 %7) #17
  %401 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %400, i64 0, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = icmp slt i32 %399, 0
  %404 = select i1 %403, i32 -2147483648, i32 2147483647
  %405 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %402, i32 %399) #17
  %406 = extractvalue { i32, i1 } %405, 1
  %407 = extractvalue { i32, i1 } %405, 0
  %408 = select i1 %406, i32 %404, i32 %407, !prof !3
  store i32 %408, i32* %401, align 4
  br label %459

409:                                              ; preds = %437, %383
  %410 = phi i64 [ 1, %383 ], [ %457, %437 ]
  %411 = phi i64 [ %20, %383 ], [ %440, %437 ]
  %412 = phi i32 [ 0, %383 ], [ %439, %437 ]
  %413 = phi i32 [ 0, %383 ], [ %438, %437 ]
  %414 = load %"class.blink::Grid"*, %"class.blink::Grid"** %10, align 8
  %415 = add nsw i64 %410, -1
  %416 = tail call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %414, i32 %1, i64 %415) #17
  br i1 %416, label %417, label %426

417:                                              ; preds = %409
  %418 = add i64 %411, -1
  %419 = load i32, i32* %386, align 4
  %420 = icmp slt i32 %419, 0
  %421 = select i1 %420, i32 -2147483648, i32 2147483647
  %422 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %413, i32 %419) #17
  %423 = extractvalue { i32, i1 } %422, 1
  %424 = extractvalue { i32, i1 } %422, 0
  %425 = select i1 %423, i32 %421, i32 %424, !prof !3
  br label %437

426:                                              ; preds = %409
  %427 = sub nsw i64 %8, %410
  %428 = icmp eq i64 %411, %427
  br i1 %428, label %429, label %432

429:                                              ; preds = %426
  %430 = load %"class.blink::Grid"*, %"class.blink::Grid"** %10, align 8
  %431 = tail call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %430, i32 %1, i64 %410) #17
  br i1 %431, label %437, label %432

432:                                              ; preds = %429, %426
  %433 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %412, i32 %381) #17
  %434 = extractvalue { i32, i1 } %433, 1
  %435 = extractvalue { i32, i1 } %433, 0
  %436 = select i1 %434, i32 %385, i32 %435, !prof !3
  br label %437

437:                                              ; preds = %429, %432, %417
  %438 = phi i32 [ %425, %417 ], [ %413, %429 ], [ %413, %432 ]
  %439 = phi i32 [ %412, %417 ], [ %412, %429 ], [ %436, %432 ]
  %440 = phi i64 [ %418, %417 ], [ %411, %429 ], [ %411, %432 ]
  %441 = icmp sgt i32 %438, -1
  %442 = select i1 %441, i32 -2147483648, i32 2147483647
  %443 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %439, i32 %438) #17
  %444 = extractvalue { i32, i1 } %443, 1
  %445 = extractvalue { i32, i1 } %443, 0
  %446 = select i1 %444, i32 %442, i32 %445, !prof !3
  %447 = trunc i64 %410 to i32
  %448 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %26, i32 %447) #17
  %449 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %448, i64 0, i32 0
  %450 = load i32, i32* %449, align 4
  %451 = icmp slt i32 %446, 0
  %452 = select i1 %451, i32 -2147483648, i32 2147483647
  %453 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %450, i32 %446) #17
  %454 = extractvalue { i32, i1 } %453, 1
  %455 = extractvalue { i32, i1 } %453, 0
  %456 = select i1 %454, i32 %452, i32 %455, !prof !3
  store i32 %456, i32* %449, align 4
  %457 = add nuw nsw i64 %410, 1
  %458 = icmp eq i64 %457, %8
  br i1 %458, label %387, label %409

459:                                              ; preds = %303, %392, %249
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid31PrepareChildForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #17
  tail call void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %4, %"class.blink::LayoutBox"* %1) #17
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %5, align 8
  %7 = icmp eq %"struct.blink::FragmentData::RareData"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %"class.blink::PaintLayer"* [ %10, %8 ], [ null, %2 ]
  %13 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8, !noalias !56
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8, !noalias !56
  %19 = bitcast %"class.blink::LayoutGrid"* %0 to i8*
  %20 = and i160 %18, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  %22 = and i160 %18, 41538374868278621028243970633760768
  %23 = icmp eq i160 %22, 0
  %24 = select i1 %23, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %25 = select i1 %23, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %26 = select i1 %21, { i64, i64 } %25, { i64, i64 } %24
  %27 = select i1 %21, { i64, i64 } %25, { i64, i64 } %24
  %28 = extractvalue { i64, i64 } %26, 0
  %29 = extractvalue { i64, i64 } %27, 1
  %30 = getelementptr inbounds i8, i8* %19, i64 %29
  %31 = bitcast i8* %30 to %"class.blink::LayoutBoxModelObject"*
  %32 = and i64 %28, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %11
  %35 = bitcast i8* %30 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = add i64 %28, -1
  %38 = getelementptr i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %40 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %39, align 8
  br label %43

41:                                               ; preds = %11
  %42 = inttoptr i64 %28 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %40, %34 ], [ %42, %41 ]
  %45 = tail call i32 %44(%"class.blink::LayoutBoxModelObject"* %31) #17
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8, !noalias !59
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8, !noalias !59
  %50 = and i160 %49, 15211807202738752817960438464512
  %51 = icmp eq i160 %50, 0
  %52 = and i160 %49, 41538374868278621028243970633760768
  %53 = icmp eq i160 %52, 0
  %54 = select i1 %53, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %55 = select i1 %53, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %56 = select i1 %51, { i64, i64 } %55, { i64, i64 } %54
  %57 = select i1 %51, { i64, i64 } %55, { i64, i64 } %54
  %58 = extractvalue { i64, i64 } %56, 0
  %59 = extractvalue { i64, i64 } %57, 1
  %60 = getelementptr inbounds i8, i8* %19, i64 %59
  %61 = bitcast i8* %60 to %"class.blink::LayoutBoxModelObject"*
  %62 = and i64 %58, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %43
  %65 = bitcast i8* %60 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = add i64 %58, -1
  %68 = getelementptr i8, i8* %66, i64 %67
  %69 = bitcast i8* %68 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %70 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %69, align 8
  br label %73

71:                                               ; preds = %43
  %72 = inttoptr i64 %58 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %73

73:                                               ; preds = %64, %71
  %74 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %70, %64 ], [ %72, %71 ]
  %75 = tail call i32 %74(%"class.blink::LayoutBoxModelObject"* %61) #17
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %75) #17
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !3
  %82 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %12, i64 0, i32 10, i32 0
  store i32 %81, i32* %82, align 8
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8, !noalias !62
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %85 = bitcast [20 x i8]* %84 to i160*
  %86 = load i160, i160* %85, align 8, !noalias !62
  %87 = lshr i160 %86, 102
  %88 = trunc i160 %87 to i8
  %89 = and i8 %88, 3
  switch i8 %89, label %90 [
    i8 0, label %99
    i8 1, label %91
  ]

90:                                               ; preds = %73
  br label %91

91:                                               ; preds = %90, %73
  %92 = phi { i64, i64 } [ { i64 993, i64 0 }, %90 ], [ { i64 1001, i64 0 }, %73 ]
  %93 = extractvalue { i64, i64 } %92, 0
  %94 = extractvalue { i64, i64 } %92, 1
  %95 = getelementptr inbounds i8, i8* %19, i64 %94
  %96 = bitcast i8* %95 to %"class.blink::LayoutBoxModelObject"*
  %97 = and i64 %93, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %109, label %99

99:                                               ; preds = %91, %73
  %100 = phi %"class.blink::LayoutBoxModelObject"* [ %96, %91 ], [ %13, %73 ]
  %101 = phi i8* [ %95, %91 ], [ %19, %73 ]
  %102 = phi i64 [ %93, %91 ], [ 977, %73 ]
  %103 = bitcast i8* %101 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = add i64 %102, -1
  %106 = getelementptr i8, i8* %104, i64 %105
  %107 = bitcast i8* %106 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %108 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %107, align 8
  br label %111

109:                                              ; preds = %91
  %110 = inttoptr i64 %93 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %111

111:                                              ; preds = %109, %99
  %112 = phi %"class.blink::LayoutBoxModelObject"* [ %100, %99 ], [ %96, %109 ]
  %113 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %108, %99 ], [ %110, %109 ]
  %114 = tail call i32 %113(%"class.blink::LayoutBoxModelObject"* %112) #17
  %115 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8, !noalias !65
  %116 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %115, i64 0, i32 0, i32 9
  %117 = bitcast [20 x i8]* %116 to i160*
  %118 = load i160, i160* %117, align 8, !noalias !65
  %119 = lshr i160 %118, 102
  %120 = trunc i160 %119 to i8
  %121 = and i8 %120, 3
  switch i8 %121, label %122 [
    i8 0, label %131
    i8 1, label %123
  ]

122:                                              ; preds = %111
  br label %123

123:                                              ; preds = %122, %111
  %124 = phi { i64, i64 } [ { i64 961, i64 0 }, %122 ], [ { i64 969, i64 0 }, %111 ]
  %125 = extractvalue { i64, i64 } %124, 0
  %126 = extractvalue { i64, i64 } %124, 1
  %127 = getelementptr inbounds i8, i8* %19, i64 %126
  %128 = bitcast i8* %127 to %"class.blink::LayoutBoxModelObject"*
  %129 = and i64 %125, 1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %141, label %131

131:                                              ; preds = %123, %111
  %132 = phi %"class.blink::LayoutBoxModelObject"* [ %128, %123 ], [ %13, %111 ]
  %133 = phi i8* [ %127, %123 ], [ %19, %111 ]
  %134 = phi i64 [ %125, %123 ], [ 945, %111 ]
  %135 = bitcast i8* %133 to i8**
  %136 = load i8*, i8** %135, align 8
  %137 = add i64 %134, -1
  %138 = getelementptr i8, i8* %136, i64 %137
  %139 = bitcast i8* %138 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %140 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %139, align 8
  br label %143

141:                                              ; preds = %123
  %142 = inttoptr i64 %125 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %143

143:                                              ; preds = %131, %141
  %144 = phi %"class.blink::LayoutBoxModelObject"* [ %132, %131 ], [ %128, %141 ]
  %145 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %140, %131 ], [ %142, %141 ]
  %146 = tail call i32 %145(%"class.blink::LayoutBoxModelObject"* %144) #17
  %147 = icmp slt i32 %146, 0
  %148 = select i1 %147, i32 -2147483648, i32 2147483647
  %149 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %114, i32 %146) #17
  %150 = extractvalue { i32, i1 } %149, 1
  %151 = extractvalue { i32, i1 } %149, 0
  %152 = select i1 %150, i32 %148, i32 %151, !prof !3
  %153 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %12, i64 0, i32 11, i32 0
  store i32 %152, i32* %153, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid48GridAreaBreadthForChildIncludingAlignmentOffsetsERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %5 = tail call dereferenceable(16) %"class.WTF::Vector.1032"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"* %4, i32 %2) #17
  %6 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 12
  %7 = load %"class.blink::Grid"*, %"class.blink::Grid"** %6, align 8
  %8 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %7, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #17
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %2, 0
  %14 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5
  %16 = select i1 %13, %"class.WTF::Vector.1063"* %14, %"class.WTF::Vector.1063"* %15
  %17 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %16, i32 %10) #17
  %18 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %12, -1
  %21 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %16, i32 %20) #17
  %22 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %19, -1
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %23, i32 %19) #17
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !3
  %30 = tail call dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1032"* %5, i32 %20) #17
  %31 = tail call i32 @_ZNK5blink9GridTrack8BaseSizeEv(%"class.blink::GridTrack"* %30) #17
  %32 = icmp slt i32 %31, 0
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %31) #17
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !3
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid36ApplyStretchAlignmentToChildIfNeededERNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 1) #17
  %4 = icmp eq i32 %3, 1
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, i64 92
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* %7, i32 39) #17
  %15 = select i1 %14, i32 7, i32 3
  br i1 %4, label %16, label %48

16:                                               ; preds = %2
  %17 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %9, i32 %15, %"class.blink::ComputedStyle"* %6) #17
  %18 = and i32 %17, 15
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %20, label %139

20:                                               ; preds = %16
  %21 = tail call zeroext i1 @_ZNK5blink10LayoutGrid23HasAutoSizeInColumnAxisERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  br i1 %21, label %22, label %139

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = trunc i96 %25 to i32
  %27 = icmp slt i32 %26, 0
  %28 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %29 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %29, i64 0, i32 7, i32 0, i32 0
  %31 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %30, align 8
  br i1 %27, label %32, label %38

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 12, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %139, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 9, i32 2
  br label %44

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 10, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %139, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 11, i32 2
  br label %44

44:                                               ; preds = %42, %36
  %45 = phi i8* [ %37, %36 ], [ %43, %42 ]
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %139, label %84

48:                                               ; preds = %2
  %49 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %9, i32 %15, %"class.blink::ComputedStyle"* %6) #17
  %50 = and i32 %49, 15
  %51 = icmp eq i32 %50, 3
  br i1 %51, label %52, label %139

52:                                               ; preds = %48
  %53 = tail call zeroext i1 @_ZNK5blink10LayoutGrid20HasAutoSizeInRowAxisERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  br i1 %53, label %54, label %139

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %56 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %55 to i96*
  %57 = load i96, i96* %56, align 4
  %58 = trunc i96 %57 to i32
  %59 = icmp slt i32 %58, 0
  %60 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %61 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %61, i64 0, i32 7, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %62, align 8
  br i1 %59, label %64, label %70

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %63, i64 0, i32 10, i32 2
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %139, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %63, i64 0, i32 11, i32 2
  br label %76

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %63, i64 0, i32 12, i32 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %139, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %63, i64 0, i32 9, i32 2
  br label %76

76:                                               ; preds = %68, %74
  %77 = phi i8* [ %69, %68 ], [ %75, %74 ]
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %139, label %80

80:                                               ; preds = %76
  %81 = icmp eq i32 %3, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = tail call i32 @_ZNK5blink9LayoutBox42OverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"* %1) #17
  br label %86

84:                                               ; preds = %44, %80
  %85 = tail call i32 @_ZNK5blink9LayoutBox43OverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* %1) #17
  br label %86

86:                                               ; preds = %82, %84
  %87 = phi i32 [ %83, %82 ], [ %85, %84 ]
  %88 = tail call i32 @_ZN5blink15GridLayoutUtils27MarginLogicalHeightForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  %89 = icmp sgt i32 %88, -1
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %87, i32 %88) #17
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !3
  %95 = tail call i32 @_ZNK5blink9LayoutBox30ConstrainLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %1, i32 %94, i32 -64) #17
  tail call void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %95) #17
  %96 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %96, i64 0, i32 0, i32 9
  %98 = bitcast [20 x i8]* %97 to i160*
  %99 = load i160, i160* %98, align 8
  %100 = and i160 %99, 15211807202738752817960438464512
  %101 = icmp eq i160 %100, 0
  %102 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %103 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %104 = load i32, i32* %102, align 4
  %105 = load i32, i32* %103, align 4
  %106 = select i1 %101, i32 %104, i32 %105
  %107 = icmp eq i32 %95, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %86
  %109 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %110 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %109 to i96*
  %111 = load i96, i96* %110, align 4
  %112 = and i96 %111, 4096
  %113 = icmp eq i96 %112, 0
  br i1 %113, label %139, label %114

114:                                              ; preds = %108, %86
  %115 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %116 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %115, i64 92
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, align 8
  %118 = tail call zeroext i1 %117(%"class.blink::LayoutObject"* %7, i32 30) #17
  br i1 %118, label %134, label %119

119:                                              ; preds = %114
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8
  %124 = and i160 %123, 15211807202738752817960438464512
  %125 = icmp eq i160 %124, 0
  br i1 %125, label %126, label %130

126:                                              ; preds = %119
  %127 = load i32, i32* %102, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %126
  store i32 0, i32* %102, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %1) #17
  br label %134

130:                                              ; preds = %119
  %131 = load i32, i32* %103, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  store i32 0, i32* %103, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %1) #17
  br label %134

134:                                              ; preds = %133, %130, %129, %126, %114
  %135 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %136 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %135 to i96*
  %137 = load i96, i96* %136, align 4
  %138 = or i96 %137, 2
  store i96 %138, i96* %136, align 4
  tail call void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"* %7) #17
  br label %139

139:                                              ; preds = %44, %108, %76, %38, %32, %70, %64, %48, %52, %16, %20, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid37UpdateAutoMarginsInColumnAxisIfNeededERNS_9LayoutBoxE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8, !noalias !68
  %19 = lshr i160 %18, 102
  %20 = trunc i160 %19 to i8
  %21 = and i8 %20, 3
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 7, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %22, align 8, !noalias !68
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 11
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 10
  store %"class.blink::Length"* %24, %"class.blink::Length"** %6, align 8, !alias.scope !68
  store %"class.blink::Length"* %25, %"class.blink::Length"** %7, align 8, !alias.scope !68
  store %"class.blink::Length"* %26, %"class.blink::Length"** %8, align 8, !alias.scope !68
  %27 = icmp eq i8 %21, 0
  %28 = icmp eq i8 %21, 1
  %29 = select i1 %28, %"class.blink::Length"** %7, %"class.blink::Length"** %8
  %30 = select i1 %27, %"class.blink::Length"** %6, %"class.blink::Length"** %29
  %31 = load %"class.blink::Length"*, %"class.blink::Length"** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %32 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 9
  store %"class.blink::Length"* %25, %"class.blink::Length"** %3, align 8, !alias.scope !71
  store %"class.blink::Length"* %35, %"class.blink::Length"** %4, align 8, !alias.scope !71
  store %"class.blink::Length"* %26, %"class.blink::Length"** %5, align 8, !alias.scope !71
  %36 = select i1 %28, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %37 = select i1 %27, %"class.blink::Length"** %4, %"class.blink::Length"** %36
  %38 = load %"class.blink::Length"*, %"class.blink::Length"** %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %31, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %76, label %42

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8, !noalias !74
  %47 = lshr i160 %46, 102
  %48 = trunc i160 %47 to i8
  %49 = and i8 %48, 3
  %50 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %49, label %51 [
    i8 0, label %60
    i8 1, label %52
  ]

51:                                               ; preds = %42
  br label %52

52:                                               ; preds = %51, %42
  %53 = phi { i64, i64 } [ { i64 1033, i64 0 }, %51 ], [ { i64 1041, i64 0 }, %42 ]
  %54 = extractvalue { i64, i64 } %53, 0
  %55 = extractvalue { i64, i64 } %53, 1
  %56 = getelementptr inbounds i8, i8* %50, i64 %55
  %57 = bitcast i8* %56 to %"class.blink::LayoutBoxModelObject"*
  %58 = and i64 %54, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %52, %42
  %61 = phi %"class.blink::LayoutBoxModelObject"* [ %57, %52 ], [ %43, %42 ]
  %62 = phi i8* [ %56, %52 ], [ %50, %42 ]
  %63 = phi i64 [ %54, %52 ], [ 1017, %42 ]
  %64 = bitcast i8* %62 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = add i64 %63, -1
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = bitcast i8* %67 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %69 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %68, align 8
  br label %72

70:                                               ; preds = %52
  %71 = inttoptr i64 %54 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %72

72:                                               ; preds = %60, %70
  %73 = phi %"class.blink::LayoutBoxModelObject"* [ %61, %60 ], [ %57, %70 ]
  %74 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %69, %60 ], [ %71, %70 ]
  %75 = tail call i32 %74(%"class.blink::LayoutBoxModelObject"* %73) #17
  br label %76

76:                                               ; preds = %72, %2
  %77 = phi i32 [ 0, %2 ], [ %75, %72 ]
  %78 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %122, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %85 = bitcast [20 x i8]* %84 to i160*
  %86 = load i160, i160* %85, align 8, !noalias !77
  %87 = lshr i160 %86, 102
  %88 = trunc i160 %87 to i8
  %89 = and i8 %88, 3
  %90 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %89, label %91 [
    i8 0, label %100
    i8 1, label %92
  ]

91:                                               ; preds = %81
  br label %92

92:                                               ; preds = %91, %81
  %93 = phi { i64, i64 } [ { i64 1041, i64 0 }, %91 ], [ { i64 1033, i64 0 }, %81 ]
  %94 = extractvalue { i64, i64 } %93, 0
  %95 = extractvalue { i64, i64 } %93, 1
  %96 = getelementptr inbounds i8, i8* %90, i64 %95
  %97 = bitcast i8* %96 to %"class.blink::LayoutBoxModelObject"*
  %98 = and i64 %94, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %110, label %100

100:                                              ; preds = %92, %81
  %101 = phi %"class.blink::LayoutBoxModelObject"* [ %97, %92 ], [ %82, %81 ]
  %102 = phi i8* [ %96, %92 ], [ %90, %81 ]
  %103 = phi i64 [ %94, %92 ], [ 1025, %81 ]
  %104 = bitcast i8* %102 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = add i64 %103, -1
  %107 = getelementptr i8, i8* %105, i64 %106
  %108 = bitcast i8* %107 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %109 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %108, align 8
  br label %112

110:                                              ; preds = %92
  %111 = inttoptr i64 %94 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %112

112:                                              ; preds = %100, %110
  %113 = phi %"class.blink::LayoutBoxModelObject"* [ %101, %100 ], [ %97, %110 ]
  %114 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %109, %100 ], [ %111, %110 ]
  %115 = tail call i32 %114(%"class.blink::LayoutBoxModelObject"* %113) #17
  %116 = icmp slt i32 %115, 0
  %117 = select i1 %116, i32 -2147483648, i32 2147483647
  %118 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %115) #17
  %119 = extractvalue { i32, i1 } %118, 1
  %120 = extractvalue { i32, i1 } %118, 0
  %121 = select i1 %119, i32 %117, i32 %120, !prof !3
  br label %122

122:                                              ; preds = %112, %76
  %123 = phi i32 [ %77, %76 ], [ %121, %112 ]
  %124 = tail call i32 @_ZNK5blink9LayoutBox43OverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* %1) #17
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %125, i64 0, i32 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = and i160 %128, 15211807202738752817960438464512
  %130 = icmp eq i160 %129, 0
  %131 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %132 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %133 = load i32, i32* %131, align 4
  %134 = load i32, i32* %132, align 4
  %135 = select i1 %130, i32 %133, i32 %134
  %136 = icmp sgt i32 %135, -1
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %124, i32 %135) #17
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !3
  %142 = icmp sgt i32 %123, -1
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  %144 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %141, i32 %123) #17
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 %143, i32 %146, !prof !3
  %148 = icmp slt i32 %147, 1
  br i1 %148, label %292, label %149

149:                                              ; preds = %122
  %150 = load i8, i8* %39, align 1
  %151 = icmp eq i8 %150, 0
  %152 = load i8, i8* %78, align 1
  %153 = icmp eq i8 %152, 0
  br i1 %151, label %154, label %257

154:                                              ; preds = %149
  br i1 %153, label %155, label %223

155:                                              ; preds = %154
  %156 = lshr i32 %147, 1
  %157 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %158 = icmp eq %"class.blink::ComputedStyle"* %157, null
  %159 = select i1 %158, %"class.blink::ComputedStyle"* %125, %"class.blink::ComputedStyle"* %157
  %160 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %159, i64 0, i32 0, i32 9
  %161 = bitcast [20 x i8]* %160 to i160*
  %162 = load i160, i160* %161, align 8, !noalias !80
  %163 = lshr i160 %162, 102
  %164 = trunc i160 %163 to i8
  %165 = and i8 %164, 3
  %166 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %165, label %167 [
    i8 0, label %172
    i8 1, label %168
  ]

167:                                              ; preds = %155
  br label %168

168:                                              ; preds = %167, %155
  %169 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %167 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %155 ]
  %170 = extractvalue { i64, i64 } %169, 0
  %171 = extractvalue { i64, i64 } %169, 1
  br label %172

172:                                              ; preds = %168, %155
  %173 = phi i64 [ %170, %168 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), %155 ]
  %174 = phi i64 [ %171, %168 ], [ 0, %155 ]
  %175 = getelementptr inbounds i8, i8* %166, i64 %174
  %176 = bitcast i8* %175 to %"class.blink::LayoutBox"*
  %177 = and i64 %173, 1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %186, label %179

179:                                              ; preds = %172
  %180 = bitcast i8* %175 to i8**
  %181 = load i8*, i8** %180, align 8
  %182 = add i64 %173, -1
  %183 = getelementptr i8, i8* %181, i64 %182
  %184 = bitcast i8* %183 to void (%"class.blink::LayoutBox"*, i32)**
  %185 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %184, align 8
  br label %188

186:                                              ; preds = %172
  %187 = inttoptr i64 %173 to void (%"class.blink::LayoutBox"*, i32)*
  br label %188

188:                                              ; preds = %179, %186
  %189 = phi void (%"class.blink::LayoutBox"*, i32)* [ %185, %179 ], [ %187, %186 ]
  tail call void %189(%"class.blink::LayoutBox"* %176, i32 %156) #17
  %190 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %191 = icmp eq %"class.blink::ComputedStyle"* %190, null
  %192 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %193 = select i1 %191, %"class.blink::ComputedStyle"* %192, %"class.blink::ComputedStyle"* %190
  %194 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %193, i64 0, i32 0, i32 9
  %195 = bitcast [20 x i8]* %194 to i160*
  %196 = load i160, i160* %195, align 8, !noalias !83
  %197 = lshr i160 %196, 102
  %198 = trunc i160 %197 to i8
  %199 = and i8 %198, 3
  switch i8 %199, label %200 [
    i8 0, label %205
    i8 1, label %201
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200, %188
  %202 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %200 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %188 ]
  %203 = extractvalue { i64, i64 } %202, 0
  %204 = extractvalue { i64, i64 } %202, 1
  br label %205

205:                                              ; preds = %201, %188
  %206 = phi i64 [ %203, %201 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), %188 ]
  %207 = phi i64 [ %204, %201 ], [ 0, %188 ]
  %208 = getelementptr inbounds i8, i8* %166, i64 %207
  %209 = bitcast i8* %208 to %"class.blink::LayoutBox"*
  %210 = and i64 %206, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %219, label %212

212:                                              ; preds = %205
  %213 = bitcast i8* %208 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = add i64 %206, -1
  %216 = getelementptr i8, i8* %214, i64 %215
  %217 = bitcast i8* %216 to void (%"class.blink::LayoutBox"*, i32)**
  %218 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %217, align 8
  br label %221

219:                                              ; preds = %205
  %220 = inttoptr i64 %206 to void (%"class.blink::LayoutBox"*, i32)*
  br label %221

221:                                              ; preds = %212, %219
  %222 = phi void (%"class.blink::LayoutBox"*, i32)* [ %218, %212 ], [ %220, %219 ]
  tail call void %222(%"class.blink::LayoutBox"* %209, i32 %156) #17
  br label %292

223:                                              ; preds = %154
  %224 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %225 = icmp eq %"class.blink::ComputedStyle"* %224, null
  %226 = select i1 %225, %"class.blink::ComputedStyle"* %125, %"class.blink::ComputedStyle"* %224
  %227 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %226, i64 0, i32 0, i32 9
  %228 = bitcast [20 x i8]* %227 to i160*
  %229 = load i160, i160* %228, align 8, !noalias !86
  %230 = lshr i160 %229, 102
  %231 = trunc i160 %230 to i8
  %232 = and i8 %231, 3
  %233 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %232, label %234 [
    i8 0, label %239
    i8 1, label %235
  ]

234:                                              ; preds = %223
  br label %235

235:                                              ; preds = %234, %223
  %236 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %234 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %223 ]
  %237 = extractvalue { i64, i64 } %236, 0
  %238 = extractvalue { i64, i64 } %236, 1
  br label %239

239:                                              ; preds = %235, %223
  %240 = phi i64 [ %237, %235 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), %223 ]
  %241 = phi i64 [ %238, %235 ], [ 0, %223 ]
  %242 = getelementptr inbounds i8, i8* %233, i64 %241
  %243 = bitcast i8* %242 to %"class.blink::LayoutBox"*
  %244 = and i64 %240, 1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %253, label %246

246:                                              ; preds = %239
  %247 = bitcast i8* %242 to i8**
  %248 = load i8*, i8** %247, align 8
  %249 = add i64 %240, -1
  %250 = getelementptr i8, i8* %248, i64 %249
  %251 = bitcast i8* %250 to void (%"class.blink::LayoutBox"*, i32)**
  %252 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %251, align 8
  br label %255

253:                                              ; preds = %239
  %254 = inttoptr i64 %240 to void (%"class.blink::LayoutBox"*, i32)*
  br label %255

255:                                              ; preds = %246, %253
  %256 = phi void (%"class.blink::LayoutBox"*, i32)* [ %252, %246 ], [ %254, %253 ]
  tail call void %256(%"class.blink::LayoutBox"* %243, i32 %147) #17
  br label %292

257:                                              ; preds = %149
  br i1 %153, label %258, label %292

258:                                              ; preds = %257
  %259 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %260 = icmp eq %"class.blink::ComputedStyle"* %259, null
  %261 = select i1 %260, %"class.blink::ComputedStyle"* %125, %"class.blink::ComputedStyle"* %259
  %262 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %261, i64 0, i32 0, i32 9
  %263 = bitcast [20 x i8]* %262 to i160*
  %264 = load i160, i160* %263, align 8, !noalias !89
  %265 = lshr i160 %264, 102
  %266 = trunc i160 %265 to i8
  %267 = and i8 %266, 3
  %268 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %267, label %269 [
    i8 0, label %274
    i8 1, label %270
  ]

269:                                              ; preds = %258
  br label %270

270:                                              ; preds = %269, %258
  %271 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %269 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %258 ]
  %272 = extractvalue { i64, i64 } %271, 0
  %273 = extractvalue { i64, i64 } %271, 1
  br label %274

274:                                              ; preds = %270, %258
  %275 = phi i64 [ %272, %270 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), %258 ]
  %276 = phi i64 [ %273, %270 ], [ 0, %258 ]
  %277 = getelementptr inbounds i8, i8* %268, i64 %276
  %278 = bitcast i8* %277 to %"class.blink::LayoutBox"*
  %279 = and i64 %275, 1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %288, label %281

281:                                              ; preds = %274
  %282 = bitcast i8* %277 to i8**
  %283 = load i8*, i8** %282, align 8
  %284 = add i64 %275, -1
  %285 = getelementptr i8, i8* %283, i64 %284
  %286 = bitcast i8* %285 to void (%"class.blink::LayoutBox"*, i32)**
  %287 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %286, align 8
  br label %290

288:                                              ; preds = %274
  %289 = inttoptr i64 %275 to void (%"class.blink::LayoutBox"*, i32)*
  br label %290

290:                                              ; preds = %281, %288
  %291 = phi void (%"class.blink::LayoutBox"*, i32)* [ %287, %281 ], [ %289, %288 ]
  tail call void %291(%"class.blink::LayoutBox"* %278, i32 %147) #17
  br label %292

292:                                              ; preds = %221, %257, %290, %255, %122
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutGrid34UpdateAutoMarginsInRowAxisIfNeededERNS_9LayoutBoxE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8, !noalias !92
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 7, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %22, align 8, !noalias !92
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 11
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 9
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 10
  store %"class.blink::Length"* %24, %"class.blink::Length"** %7, align 8, !alias.scope !92
  store %"class.blink::Length"* %25, %"class.blink::Length"** %8, align 8, !alias.scope !92
  store %"class.blink::Length"* %26, %"class.blink::Length"** %9, align 8, !alias.scope !92
  store %"class.blink::Length"* %27, %"class.blink::Length"** %10, align 8, !alias.scope !92
  %28 = and i160 %21, 15211807202738752817960438464512
  %29 = icmp eq i160 %28, 0
  %30 = and i160 %21, 41538374868278621028243970633760768
  %31 = icmp eq i160 %30, 0
  %32 = select i1 %31, %"class.blink::Length"** %10, %"class.blink::Length"** %8
  %33 = select i1 %31, %"class.blink::Length"** %7, %"class.blink::Length"** %9
  %34 = select i1 %29, %"class.blink::Length"** %32, %"class.blink::Length"** %33
  %35 = load %"class.blink::Length"*, %"class.blink::Length"** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %36 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  store %"class.blink::Length"* %24, %"class.blink::Length"** %3, align 8, !alias.scope !95
  store %"class.blink::Length"* %25, %"class.blink::Length"** %4, align 8, !alias.scope !95
  store %"class.blink::Length"* %26, %"class.blink::Length"** %5, align 8, !alias.scope !95
  store %"class.blink::Length"* %27, %"class.blink::Length"** %6, align 8, !alias.scope !95
  %40 = select i1 %31, %"class.blink::Length"** %4, %"class.blink::Length"** %6
  %41 = select i1 %31, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %42 = select i1 %29, %"class.blink::Length"** %40, %"class.blink::Length"** %41
  %43 = load %"class.blink::Length"*, %"class.blink::Length"** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %35, i64 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %78, label %47

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8, !noalias !98
  %51 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  %52 = and i160 %50, 15211807202738752817960438464512
  %53 = icmp eq i160 %52, 0
  %54 = and i160 %50, 41538374868278621028243970633760768
  %55 = icmp eq i160 %54, 0
  %56 = select i1 %55, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %57 = select i1 %55, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %58 = select i1 %53, { i64, i64 } %57, { i64, i64 } %56
  %59 = select i1 %53, { i64, i64 } %57, { i64, i64 } %56
  %60 = extractvalue { i64, i64 } %58, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = getelementptr inbounds i8, i8* %51, i64 %61
  %63 = bitcast i8* %62 to %"class.blink::LayoutBoxModelObject"*
  %64 = and i64 %60, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %73, label %66

66:                                               ; preds = %47
  %67 = bitcast i8* %62 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = add i64 %60, -1
  %70 = getelementptr i8, i8* %68, i64 %69
  %71 = bitcast i8* %70 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %72 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %71, align 8
  br label %75

73:                                               ; preds = %47
  %74 = inttoptr i64 %60 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %75

75:                                               ; preds = %66, %73
  %76 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %72, %66 ], [ %74, %73 ]
  %77 = tail call i32 %76(%"class.blink::LayoutBoxModelObject"* %63) #17
  br label %78

78:                                               ; preds = %75, %2
  %79 = phi i32 [ 0, %2 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %121, label %83

83:                                               ; preds = %78
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 9
  %86 = bitcast [20 x i8]* %85 to i160*
  %87 = load i160, i160* %86, align 8, !noalias !101
  %88 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  %89 = and i160 %87, 15211807202738752817960438464512
  %90 = icmp eq i160 %89, 0
  %91 = and i160 %87, 41538374868278621028243970633760768
  %92 = icmp eq i160 %91, 0
  %93 = select i1 %92, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %94 = select i1 %92, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %95 = select i1 %90, { i64, i64 } %94, { i64, i64 } %93
  %96 = select i1 %90, { i64, i64 } %94, { i64, i64 } %93
  %97 = extractvalue { i64, i64 } %95, 0
  %98 = extractvalue { i64, i64 } %96, 1
  %99 = getelementptr inbounds i8, i8* %88, i64 %98
  %100 = bitcast i8* %99 to %"class.blink::LayoutBoxModelObject"*
  %101 = and i64 %97, 1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %83
  %104 = bitcast i8* %99 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = add i64 %97, -1
  %107 = getelementptr i8, i8* %105, i64 %106
  %108 = bitcast i8* %107 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %109 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %108, align 8
  br label %112

110:                                              ; preds = %83
  %111 = inttoptr i64 %97 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %112

112:                                              ; preds = %103, %110
  %113 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %109, %103 ], [ %111, %110 ]
  %114 = tail call i32 %113(%"class.blink::LayoutBoxModelObject"* %100) #17
  %115 = icmp slt i32 %114, 0
  %116 = select i1 %115, i32 -2147483648, i32 2147483647
  %117 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %79, i32 %114) #17
  %118 = extractvalue { i32, i1 } %117, 1
  %119 = extractvalue { i32, i1 } %117, 0
  %120 = select i1 %118, i32 %116, i32 %119, !prof !3
  br label %121

121:                                              ; preds = %112, %78
  %122 = phi i32 [ %79, %78 ], [ %120, %112 ]
  %123 = tail call i32 @_ZNK5blink9LayoutBox42OverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"* %1) #17
  %124 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %125 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 9
  %126 = bitcast [20 x i8]* %125 to i160*
  %127 = load i160, i160* %126, align 8
  %128 = and i160 %127, 15211807202738752817960438464512
  %129 = icmp eq i160 %128, 0
  %130 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %132 = load i32, i32* %130, align 4
  %133 = load i32, i32* %131, align 4
  %134 = select i1 %129, i32 %132, i32 %133
  %135 = icmp sgt i32 %134, -1
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %123, i32 %134) #17
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !3
  %141 = icmp sgt i32 %122, -1
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %140, i32 %122) #17
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !3
  %147 = icmp slt i32 %146, 1
  br i1 %147, label %287, label %148

148:                                              ; preds = %121
  %149 = load i8, i8* %44, align 1
  %150 = icmp eq i8 %149, 0
  %151 = load i8, i8* %80, align 1
  %152 = icmp eq i8 %151, 0
  br i1 %150, label %153, label %253

153:                                              ; preds = %148
  br i1 %152, label %154, label %220

154:                                              ; preds = %153
  %155 = lshr i32 %146, 1
  %156 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %157 = icmp eq %"class.blink::ComputedStyle"* %156, null
  %158 = select i1 %157, %"class.blink::ComputedStyle"* %124, %"class.blink::ComputedStyle"* %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %158, i64 0, i32 0, i32 9
  %160 = bitcast [20 x i8]* %159 to i160*
  %161 = load i160, i160* %160, align 8, !noalias !104
  %162 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  %163 = and i160 %161, 15211807202738752817960438464512
  %164 = icmp eq i160 %163, 0
  %165 = and i160 %161, 41538374868278621028243970633760768
  %166 = icmp eq i160 %165, 0
  %167 = select i1 %166, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }
  %168 = select i1 %166, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }
  %169 = select i1 %164, { i64, i64 } %168, { i64, i64 } %167
  %170 = select i1 %164, { i64, i64 } %168, { i64, i64 } %167
  %171 = extractvalue { i64, i64 } %169, 0
  %172 = extractvalue { i64, i64 } %170, 1
  %173 = getelementptr inbounds i8, i8* %162, i64 %172
  %174 = bitcast i8* %173 to %"class.blink::LayoutBox"*
  %175 = and i64 %171, 1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %184, label %177

177:                                              ; preds = %154
  %178 = bitcast i8* %173 to i8**
  %179 = load i8*, i8** %178, align 8
  %180 = add i64 %171, -1
  %181 = getelementptr i8, i8* %179, i64 %180
  %182 = bitcast i8* %181 to void (%"class.blink::LayoutBox"*, i32)**
  %183 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %182, align 8
  br label %186

184:                                              ; preds = %154
  %185 = inttoptr i64 %171 to void (%"class.blink::LayoutBox"*, i32)*
  br label %186

186:                                              ; preds = %177, %184
  %187 = phi void (%"class.blink::LayoutBox"*, i32)* [ %183, %177 ], [ %185, %184 ]
  tail call void %187(%"class.blink::LayoutBox"* %174, i32 %155) #17
  %188 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %189 = icmp eq %"class.blink::ComputedStyle"* %188, null
  %190 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %191 = select i1 %189, %"class.blink::ComputedStyle"* %190, %"class.blink::ComputedStyle"* %188
  %192 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %191, i64 0, i32 0, i32 9
  %193 = bitcast [20 x i8]* %192 to i160*
  %194 = load i160, i160* %193, align 8, !noalias !107
  %195 = and i160 %194, 15211807202738752817960438464512
  %196 = icmp eq i160 %195, 0
  %197 = and i160 %194, 41538374868278621028243970633760768
  %198 = icmp eq i160 %197, 0
  %199 = select i1 %198, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }
  %200 = select i1 %198, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }
  %201 = select i1 %196, { i64, i64 } %200, { i64, i64 } %199
  %202 = select i1 %196, { i64, i64 } %200, { i64, i64 } %199
  %203 = extractvalue { i64, i64 } %201, 0
  %204 = extractvalue { i64, i64 } %202, 1
  %205 = getelementptr inbounds i8, i8* %162, i64 %204
  %206 = bitcast i8* %205 to %"class.blink::LayoutBox"*
  %207 = and i64 %203, 1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %216, label %209

209:                                              ; preds = %186
  %210 = bitcast i8* %205 to i8**
  %211 = load i8*, i8** %210, align 8
  %212 = add i64 %203, -1
  %213 = getelementptr i8, i8* %211, i64 %212
  %214 = bitcast i8* %213 to void (%"class.blink::LayoutBox"*, i32)**
  %215 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %214, align 8
  br label %218

216:                                              ; preds = %186
  %217 = inttoptr i64 %203 to void (%"class.blink::LayoutBox"*, i32)*
  br label %218

218:                                              ; preds = %209, %216
  %219 = phi void (%"class.blink::LayoutBox"*, i32)* [ %215, %209 ], [ %217, %216 ]
  tail call void %219(%"class.blink::LayoutBox"* %206, i32 %155) #17
  br label %287

220:                                              ; preds = %153
  %221 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %222 = icmp eq %"class.blink::ComputedStyle"* %221, null
  %223 = select i1 %222, %"class.blink::ComputedStyle"* %124, %"class.blink::ComputedStyle"* %221
  %224 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %223, i64 0, i32 0, i32 9
  %225 = bitcast [20 x i8]* %224 to i160*
  %226 = load i160, i160* %225, align 8, !noalias !110
  %227 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  %228 = and i160 %226, 15211807202738752817960438464512
  %229 = icmp eq i160 %228, 0
  %230 = and i160 %226, 41538374868278621028243970633760768
  %231 = icmp eq i160 %230, 0
  %232 = select i1 %231, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }
  %233 = select i1 %231, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }
  %234 = select i1 %229, { i64, i64 } %233, { i64, i64 } %232
  %235 = select i1 %229, { i64, i64 } %233, { i64, i64 } %232
  %236 = extractvalue { i64, i64 } %234, 0
  %237 = extractvalue { i64, i64 } %235, 1
  %238 = getelementptr inbounds i8, i8* %227, i64 %237
  %239 = bitcast i8* %238 to %"class.blink::LayoutBox"*
  %240 = and i64 %236, 1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %249, label %242

242:                                              ; preds = %220
  %243 = bitcast i8* %238 to i8**
  %244 = load i8*, i8** %243, align 8
  %245 = add i64 %236, -1
  %246 = getelementptr i8, i8* %244, i64 %245
  %247 = bitcast i8* %246 to void (%"class.blink::LayoutBox"*, i32)**
  %248 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %247, align 8
  br label %251

249:                                              ; preds = %220
  %250 = inttoptr i64 %236 to void (%"class.blink::LayoutBox"*, i32)*
  br label %251

251:                                              ; preds = %242, %249
  %252 = phi void (%"class.blink::LayoutBox"*, i32)* [ %248, %242 ], [ %250, %249 ]
  tail call void %252(%"class.blink::LayoutBox"* %239, i32 %146) #17
  br label %287

253:                                              ; preds = %148
  br i1 %152, label %254, label %287

254:                                              ; preds = %253
  %255 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %256 = icmp eq %"class.blink::ComputedStyle"* %255, null
  %257 = select i1 %256, %"class.blink::ComputedStyle"* %124, %"class.blink::ComputedStyle"* %255
  %258 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %257, i64 0, i32 0, i32 9
  %259 = bitcast [20 x i8]* %258 to i160*
  %260 = load i160, i160* %259, align 8, !noalias !113
  %261 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  %262 = and i160 %260, 15211807202738752817960438464512
  %263 = icmp eq i160 %262, 0
  %264 = and i160 %260, 41538374868278621028243970633760768
  %265 = icmp eq i160 %264, 0
  %266 = select i1 %265, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }
  %267 = select i1 %265, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }
  %268 = select i1 %263, { i64, i64 } %267, { i64, i64 } %266
  %269 = select i1 %263, { i64, i64 } %267, { i64, i64 } %266
  %270 = extractvalue { i64, i64 } %268, 0
  %271 = extractvalue { i64, i64 } %269, 1
  %272 = getelementptr inbounds i8, i8* %261, i64 %271
  %273 = bitcast i8* %272 to %"class.blink::LayoutBox"*
  %274 = and i64 %270, 1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %283, label %276

276:                                              ; preds = %254
  %277 = bitcast i8* %272 to i8**
  %278 = load i8*, i8** %277, align 8
  %279 = add i64 %270, -1
  %280 = getelementptr i8, i8* %278, i64 %279
  %281 = bitcast i8* %280 to void (%"class.blink::LayoutBox"*, i32)**
  %282 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %281, align 8
  br label %285

283:                                              ; preds = %254
  %284 = inttoptr i64 %270 to void (%"class.blink::LayoutBox"*, i32)*
  br label %285

285:                                              ; preds = %276, %283
  %286 = phi void (%"class.blink::LayoutBox"*, i32)* [ %282, %276 ], [ %284, %283 ]
  tail call void %286(%"class.blink::LayoutBox"* %273, i32 %146) #17
  br label %287

287:                                              ; preds = %218, %253, %285, %251, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid26SetLogicalPositionForChildERNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK5blink10LayoutGrid21LogicalOffsetForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0)
  %4 = tail call i32 @_ZNK5blink10LayoutGrid24ColumnAxisOffsetForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  %5 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  %6 = zext i32 %3 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %4 to i64
  %9 = or i64 %7, %8
  %10 = shl nuw i64 %8, 32
  %11 = or i64 %10, %6
  %12 = select i1 %5, i64 %9, i64 %11
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 32
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  br i1 %22, label %23, label %34

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %25 = bitcast %"class.blink::LayoutRect"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %13, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = lshr i64 %26, 32
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %15, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29, %23
  store i64 %12, i64* %25, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #17
  br label %47

34:                                               ; preds = %2
  %35 = shl i64 %12, 32
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %37 = bitcast %"class.blink::LayoutRect"* %36 to i64*
  %38 = load i64, i64* %37, align 4
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %15, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = lshr i64 %38, 32
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %13, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %41, %34
  %46 = or i64 %35, %14
  store i64 %46, i64* %37, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #17
  br label %47

47:                                               ; preds = %29, %33, %41, %45
  ret void
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid25HasStaticPositionForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32) local_unnamed_addr #6 align 2 {
  %4 = icmp eq i32 %2, 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = trunc i96 %9 to i32
  %11 = icmp slt i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 7, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %12, align 8
  br i1 %4, label %14, label %31

14:                                               ; preds = %3
  br i1 %11, label %15, label %23

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 8, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %48

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 17, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br label %48

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 18, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %48

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 7, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  br label %48

31:                                               ; preds = %3
  br i1 %11, label %32, label %40

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 18, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 7, i32 2
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 0
  br label %48

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 8, i32 2
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 17, i32 2
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  br label %48

48:                                               ; preds = %44, %40, %36, %32, %27, %23, %19, %15
  %49 = phi i1 [ false, %15 ], [ %22, %19 ], [ false, %23 ], [ %30, %27 ], [ false, %32 ], [ %39, %36 ], [ false, %40 ], [ %47, %44 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink10LayoutGrid32GridAreaBreadthForOutOfFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::LayoutBox"*, align 8
  %6 = icmp eq i32 %2, 0
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Grid"*, %"class.blink::Grid"** %11, align 8
  %13 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %12, i32 %2) #17
  %14 = tail call { i64, i32 } @_ZN5blink21GridPositionsResolver29ResolveGridPositionsFromStyleERKNS_13ComputedStyleES3_NS_24GridTrackSizingDirectionEm(%"class.blink::ComputedStyle"* dereferenceable(104) %8, %"class.blink::ComputedStyle"* dereferenceable(104) %10, i32 %2, i64 %13) #17
  %15 = extractvalue { i64, i32 } %14, 0
  %16 = extractvalue { i64, i32 } %14, 1
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %35

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = trunc i96 %22 to i32
  %24 = icmp slt i32 %23, 0
  br i1 %6, label %25, label %30

25:                                               ; preds = %18
  br i1 %24, label %26, label %28

26:                                               ; preds = %25
  %27 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %19) #17
  br label %331

28:                                               ; preds = %25
  %29 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %19) #17
  br label %331

30:                                               ; preds = %18
  br i1 %24, label %31, label %33

31:                                               ; preds = %30
  %32 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %19) #17
  br label %331

33:                                               ; preds = %30
  %34 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %19) #17
  br label %331

35:                                               ; preds = %3
  %36 = load %"class.blink::Grid"*, %"class.blink::Grid"** %11, align 8
  %37 = tail call i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %36, i32 %2) #17
  %38 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #17
  %39 = shl i64 %15, 32
  %40 = ashr exact i64 %39, 32
  %41 = add i64 %37, %40
  store i64 %41, i64* %4, align 8
  %42 = ashr i64 %15, 32
  %43 = add i64 %37, %42
  %44 = load %"class.blink::Grid"*, %"class.blink::Grid"** %11, align 8
  %45 = icmp eq i32 %2, 1
  %46 = bitcast %"class.blink::Grid"* %44 to i64 (%"class.blink::Grid"*, i32)***
  %47 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %46, align 8
  %48 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %47, align 8
  %49 = tail call i64 %48(%"class.blink::Grid"* %44, i32 1) #17
  br i1 %45, label %60, label %50

50:                                               ; preds = %35
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %50
  %53 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %46, align 8
  %54 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %53, align 8
  %55 = tail call i64 %54(%"class.blink::Grid"* %44, i32 0) #17
  br label %60

56:                                               ; preds = %50
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %58 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %44, i32 0) #17
  %59 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %57, i64 %58) #17
  br label %60

60:                                               ; preds = %35, %52, %56
  %61 = phi i64 [ %49, %35 ], [ %55, %52 ], [ %59, %56 ]
  %62 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %63 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %63, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %65, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %69, i64 0, i32 6
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %69, i64 0, i32 8
  %72 = select i1 %6, %"class.blink::GridPosition"* %70, %"class.blink::GridPosition"* %71
  %73 = bitcast %"class.blink::GridPosition"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %72, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %103, label %79

79:                                               ; preds = %60
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %103

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #17
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !3

93:                                               ; preds = %84
  tail call void @llvm.trap() #17
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  %96 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %62, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %96, i64 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %100, i64 0, i32 2, i32 0, i32 0
  %102 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %101, align 8
  br label %103

103:                                              ; preds = %60, %79, %94
  %104 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %69, %60 ], [ %69, %79 ], [ %102, %94 ]
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %104, i64 0, i32 5
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %104, i64 0, i32 7
  %107 = select i1 %6, %"class.blink::GridPosition"* %105, %"class.blink::GridPosition"* %106
  %108 = bitcast %"class.blink::GridPosition"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = trunc i64 %109 to i32
  %111 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %107, i64 0, i32 2, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %131, label %114

114:                                              ; preds = %103
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #17
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %119
  tail call void @llvm.trap() #17
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %103, %114, %129
  %132 = icmp eq i32 %75, 0
  %133 = load i64, i64* %4, align 8
  %134 = icmp ugt i64 %133, %61
  %135 = or i1 %132, %134
  %136 = icmp eq i32 %110, 0
  %137 = icmp ugt i64 %43, %61
  %138 = or i1 %137, %136
  %139 = and i1 %138, %135
  br i1 %139, label %140, label %157

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %142 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %143 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %142 to i96*
  %144 = load i96, i96* %143, align 4
  %145 = trunc i96 %144 to i32
  %146 = icmp slt i32 %145, 0
  br i1 %6, label %147, label %152

147:                                              ; preds = %140
  br i1 %146, label %148, label %150

148:                                              ; preds = %147
  %149 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %141) #17
  br label %301

150:                                              ; preds = %147
  %151 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %141) #17
  br label %301

152:                                              ; preds = %140
  br i1 %146, label %153, label %155

153:                                              ; preds = %152
  %154 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %141) #17
  br label %301

155:                                              ; preds = %152
  %156 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %141) #17
  br label %301

157:                                              ; preds = %131
  %158 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %159 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5
  %160 = select i1 %6, %"class.WTF::Vector.1063"* %158, %"class.WTF::Vector.1063"* %159
  %161 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 9
  %162 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 10
  %163 = select i1 %6, %"class.WTF::HashMap.1068"* %161, %"class.WTF::HashMap.1068"* %162
  %164 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %166 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %165, i64 0, i32 0, i32 9
  %167 = bitcast [20 x i8]* %166 to i160*
  %168 = load i160, i160* %167, align 8
  br i1 %6, label %169, label %182

169:                                              ; preds = %157
  %170 = and i160 %168, 15211807202738752817960438464512
  %171 = icmp eq i160 %170, 0
  %172 = bitcast %"class.blink::LayoutGrid"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %173 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %172, align 8
  br i1 %171, label %174, label %178

174:                                              ; preds = %169
  %175 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %173, i64 124
  %176 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %175, align 8
  %177 = tail call i32 %176(%"class.blink::LayoutBoxModelObject"* %164) #17
  br label %212

178:                                              ; preds = %169
  %179 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %173, i64 122
  %180 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %179, align 8
  %181 = tail call i32 %180(%"class.blink::LayoutBoxModelObject"* %164) #17
  br label %212

182:                                              ; preds = %157
  %183 = lshr i160 %168, 102
  %184 = trunc i160 %183 to i8
  %185 = and i8 %184, 3
  %186 = bitcast %"class.blink::LayoutGrid"* %0 to i8*
  switch i8 %185, label %187 [
    i8 0, label %196
    i8 1, label %188
  ]

187:                                              ; preds = %182
  br label %188

188:                                              ; preds = %187, %182
  %189 = phi { i64, i64 } [ { i64 993, i64 0 }, %187 ], [ { i64 1001, i64 0 }, %182 ]
  %190 = extractvalue { i64, i64 } %189, 0
  %191 = extractvalue { i64, i64 } %189, 1
  %192 = getelementptr inbounds i8, i8* %186, i64 %191
  %193 = bitcast i8* %192 to %"class.blink::LayoutBoxModelObject"*
  %194 = and i64 %190, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %206, label %196

196:                                              ; preds = %188, %182
  %197 = phi %"class.blink::LayoutBoxModelObject"* [ %193, %188 ], [ %164, %182 ]
  %198 = phi i8* [ %192, %188 ], [ %186, %182 ]
  %199 = phi i64 [ %190, %188 ], [ 977, %182 ]
  %200 = bitcast i8* %198 to i8**
  %201 = load i8*, i8** %200, align 8
  %202 = add i64 %199, -1
  %203 = getelementptr i8, i8* %201, i64 %202
  %204 = bitcast i8* %203 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %205 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %204, align 8
  br label %208

206:                                              ; preds = %188
  %207 = inttoptr i64 %190 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %208

208:                                              ; preds = %196, %206
  %209 = phi %"class.blink::LayoutBoxModelObject"* [ %197, %196 ], [ %193, %206 ]
  %210 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %205, %196 ], [ %207, %206 ]
  %211 = tail call i32 %210(%"class.blink::LayoutBoxModelObject"* %209) #17
  br label %212

212:                                              ; preds = %178, %174, %208
  %213 = phi i32 [ %211, %208 ], [ %177, %174 ], [ %181, %178 ]
  br i1 %135, label %214, label %222

214:                                              ; preds = %212
  %215 = tail call i32 @_ZNK5blink10LayoutGrid28ResolveAutoStartGridPositionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, i32 %2)
  %216 = icmp slt i32 %213, 0
  %217 = select i1 %216, i32 -2147483648, i32 2147483647
  %218 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %215, i32 %213) #17
  %219 = extractvalue { i32, i1 } %218, 1
  %220 = extractvalue { i32, i1 } %218, 0
  %221 = select i1 %219, i32 %217, i32 %220, !prof !3
  br label %242

222:                                              ; preds = %212
  %223 = bitcast %"class.blink::LayoutBox"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #17
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %5, align 8
  %224 = getelementptr inbounds %"class.WTF::HashMap.1068", %"class.WTF::HashMap.1068"* %163, i64 0, i32 0
  %225 = call { %"struct.WTF::KeyValuePair.1072"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES4_RmEENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.1069"* %224, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %5, i64* nonnull dereferenceable(8) %4) #17
  %226 = extractvalue { %"struct.WTF::KeyValuePair.1072"*, i8 } %225, 1
  %227 = and i8 %226, 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %222
  %230 = load i64, i64* %4, align 8
  br label %236

231:                                              ; preds = %222
  %232 = extractvalue { %"struct.WTF::KeyValuePair.1072"*, i8 } %225, 0
  %233 = load i64, i64* %4, align 8
  %234 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %232, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %234, align 8
  %235 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %232, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %233, i64* %235, align 8
  br label %236

236:                                              ; preds = %229, %231
  %237 = phi i64 [ %230, %229 ], [ %233, %231 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #17
  %238 = trunc i64 %237 to i32
  %239 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %160, i32 %238) #17
  %240 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %239, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br label %242

242:                                              ; preds = %236, %214
  %243 = phi i32 [ %221, %214 ], [ %241, %236 ]
  br i1 %138, label %244, label %252

244:                                              ; preds = %242
  %245 = call i32 @_ZNK5blink10LayoutGrid26ResolveAutoEndGridPositionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, i32 %2)
  %246 = icmp slt i32 %213, 0
  %247 = select i1 %246, i32 -2147483648, i32 2147483647
  %248 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %245, i32 %213) #17
  %249 = extractvalue { i32, i1 } %248, 1
  %250 = extractvalue { i32, i1 } %248, 0
  %251 = select i1 %249, i32 %247, i32 %250, !prof !3
  br label %291

252:                                              ; preds = %242
  %253 = trunc i64 %43 to i32
  %254 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %160, i32 %253) #17
  %255 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %254, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = icmp ne i64 %43, 0
  %258 = icmp ult i64 %43, %61
  %259 = and i1 %257, %258
  br i1 %259, label %260, label %291

260:                                              ; preds = %252
  %261 = load %"class.blink::Grid"*, %"class.blink::Grid"** %11, align 8
  %262 = add i64 %43, -1
  %263 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  br i1 %6, label %264, label %266

264:                                              ; preds = %260
  %265 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %263) #17
  br label %268

266:                                              ; preds = %260
  %267 = call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %263)
  br label %268

268:                                              ; preds = %266, %264
  %269 = phi i32 [ %265, %264 ], [ %267, %266 ]
  %270 = zext i32 %269 to i64
  %271 = shl nuw i64 %270, 32
  %272 = or i64 %271, 1
  %273 = call i32 @_ZNK5blink10LayoutGrid11GuttersSizeERKNS_4GridENS_24GridTrackSizingDirectionEmmN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::LayoutGrid"* %0, %"class.blink::Grid"* dereferenceable(168) %261, i32 %2, i64 %262, i64 2, i64 %272)
  %274 = icmp sgt i32 %273, -1
  %275 = select i1 %274, i32 -2147483648, i32 2147483647
  %276 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %256, i32 %273) #17
  %277 = extractvalue { i32, i1 } %276, 1
  %278 = extractvalue { i32, i1 } %276, 0
  %279 = select i1 %277, i32 %275, i32 %278, !prof !3
  %280 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 7, i32 1
  %281 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 8, i32 1
  %282 = select i1 %6, %"class.blink::LayoutUnit"* %280, %"class.blink::LayoutUnit"* %281
  %283 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %282, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  %285 = icmp sgt i32 %284, -1
  %286 = select i1 %285, i32 -2147483648, i32 2147483647
  %287 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %279, i32 %284) #17
  %288 = extractvalue { i32, i1 } %287, 1
  %289 = extractvalue { i32, i1 } %287, 0
  %290 = select i1 %288, i32 %286, i32 %289, !prof !3
  br label %291

291:                                              ; preds = %252, %268, %244
  %292 = phi i32 [ %251, %244 ], [ %290, %268 ], [ %256, %252 ]
  %293 = icmp sgt i32 %243, -1
  %294 = select i1 %293, i32 -2147483648, i32 2147483647
  %295 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %292, i32 %243) #17
  %296 = extractvalue { i32, i1 } %295, 1
  %297 = extractvalue { i32, i1 } %295, 0
  %298 = select i1 %296, i32 %294, i32 %297, !prof !3
  %299 = icmp sgt i32 %298, 0
  %300 = select i1 %299, i32 %298, i32 0
  br label %301

301:                                              ; preds = %155, %153, %150, %148, %291
  %302 = phi i32 [ %300, %291 ], [ %149, %148 ], [ %151, %150 ], [ %154, %153 ], [ %156, %155 ]
  br i1 %113, label %316, label %303

303:                                              ; preds = %301
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #17
  br label %316

316:                                              ; preds = %301, %312, %315
  br i1 %78, label %330, label %317

317:                                              ; preds = %316
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #17
  br label %330

330:                                              ; preds = %316, %326, %329
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #17
  br label %331

331:                                              ; preds = %33, %31, %28, %26, %330
  %332 = phi i32 [ %302, %330 ], [ %27, %26 ], [ %29, %28 ], [ %32, %31 ], [ %34, %33 ]
  ret i32 %332
}

declare void @_ZN5blink11LayoutBlock22LayoutPositionedObjectEPNS_9LayoutBoxEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid24SetLogicalOffsetForChildERNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::LayoutObject"* %5 to i1 (%"class.blink::LayoutObject"*, i32)***
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* nonnull %5, i32 10) #17
  br i1 %12, label %58, label %13

13:                                               ; preds = %3, %7
  %14 = icmp eq i32 %2, 0
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = trunc i96 %19 to i32
  %21 = icmp slt i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 7, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %22, align 8
  br i1 %14, label %24, label %41

24:                                               ; preds = %13
  br i1 %21, label %25, label %33

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 8, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %58

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 17, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %91, label %58

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 18, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %58

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 7, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %91, label %58

41:                                               ; preds = %13
  br i1 %21, label %42, label %50

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 18, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 7, i32 2
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %91, label %58

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 8, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 17, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %91, label %58

58:                                               ; preds = %50, %42, %33, %25, %46, %37, %29, %54, %7
  %59 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #17
  %60 = icmp eq i32 %59, 0
  %61 = tail call i32 @_ZNK5blink10LayoutGrid21LogicalOffsetForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2)
  %62 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %63, i64 0, i32 0, i32 9
  %65 = bitcast [20 x i8]* %64 to i160*
  %66 = load i160, i160* %65, align 8
  %67 = and i160 %66, 15211807202738752817960438464512
  %68 = icmp eq i160 %67, 0
  br i1 %60, label %69, label %80

69:                                               ; preds = %58
  br i1 %68, label %70, label %75

70:                                               ; preds = %69
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %61
  br i1 %73, label %91, label %74

74:                                               ; preds = %70
  store i32 %61, i32* %71, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #17
  br label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %61
  br i1 %78, label %91, label %79

79:                                               ; preds = %75
  store i32 %61, i32* %76, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #17
  br label %91

80:                                               ; preds = %58
  br i1 %68, label %81, label %86

81:                                               ; preds = %80
  %82 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %61
  br i1 %84, label %91, label %85

85:                                               ; preds = %81
  store i32 %61, i32* %82, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #17
  br label %91

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, %61
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  store i32 %61, i32* %87, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #17
  br label %91

91:                                               ; preds = %90, %86, %85, %81, %79, %75, %74, %70, %46, %37, %29, %54
  ret void
}

declare dereferenceable(16) %"class.WTF::Vector.1032"* @_ZNK5blink24GridTrackSizingAlgorithm6TracksENS_24GridTrackSizingDirectionE(%"class.blink::GridTrackSizingAlgorithm"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9GridTrack8BaseSizeEv(%"class.blink::GridTrack"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid47AvailableAlignmentSpaceForChildBeforeStretchingENS_10LayoutUnitERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, i32, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN5blink15GridLayoutUtils27MarginLogicalHeightForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %2) #17
  %5 = icmp sgt i32 %4, -1
  %6 = select i1 %5, i32 -2147483648, i32 2147483647
  %7 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %4) #17
  %8 = extractvalue { i32, i1 } %7, 1
  %9 = extractvalue { i32, i1 } %7, 0
  %10 = select i1 %8, i32 %6, i32 %9, !prof !3
  ret i32 %10
}

declare i32 @_ZN5blink15GridLayoutUtils27MarginLogicalHeightForChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"*, i32, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutGrid27SelfAlignmentNormalBehaviorEPKNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %5 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %5, i64 92
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LayoutObject"* %3, i32 39) #17
  %9 = select i1 %8, i32 7, i32 3
  ret i32 %9
}

declare i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"*, i32, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632), %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30ConstrainLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid23HasAutoSizeInColumnAxisERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 1, i32 1, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp oeq float %9, 0.000000e+00
  %11 = bitcast %"class.blink::ComputedStyle"* %5 to %"class.blink::ComputedStyleBase"*
  br i1 %10, label %89, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 1, i32 1, i32 1
  %14 = load float, float* %13, align 4
  %15 = fcmp oeq float %14, 0.000000e+00
  %16 = fcmp olt float %9, 1.562500e-02
  %17 = or i1 %16, %15
  %18 = fcmp olt float %14, 1.562500e-02
  %19 = or i1 %18, %17
  br i1 %19, label %89, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %89, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = xor i96 %31, %28
  %33 = trunc i96 %32 to i32
  %34 = icmp slt i32 %33, 0
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %37, align 8
  br i1 %34, label %56, label %39

39:                                               ; preds = %25
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %38, i64 0, i32 11, i32 0
  %41 = load i8, i8* %40, align 4
  %42 = and i8 %41, 15
  %43 = icmp eq i8 %42, 3
  br i1 %43, label %56, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 15211807202738752817960438464512
  %49 = icmp eq i160 %48, 0
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 3
  %52 = select i1 %49, %"class.blink::Length"* %50, %"class.blink::Length"* %51
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 0, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %89, label %106

56:                                               ; preds = %25, %39
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %38, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %58, i64 0, i32 44, i32 0
  %60 = load i8, i8* %59, align 4
  %61 = and i8 %60, 15
  %62 = icmp eq i8 %61, 3
  br i1 %62, label %89, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %65 = bitcast [20 x i8]* %64 to i160*
  %66 = load i160, i160* %65, align 8
  %67 = and i160 %66, 15211807202738752817960438464512
  %68 = icmp eq i160 %67, 0
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 3
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 8
  %71 = select i1 %68, %"class.blink::Length"* %69, %"class.blink::Length"* %70
  %72 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %71, i64 0, i32 2
  %73 = load i8, i8* %72, align 1
  switch i8 %73, label %89 [
    i8 2, label %106
    i8 8, label %74
    i8 1, label %74
  ]

74:                                               ; preds = %63, %63
  %75 = bitcast %"class.blink::Length"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #17
  %76 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %76, align 4, !alias.scope !116
  %77 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 1
  store i8 0, i8* %77, align 4, !alias.scope !116
  %78 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  store i8 1, i8* %78, align 1, !alias.scope !116
  %79 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 3
  store i8 0, i8* %79, align 2, !alias.scope !116
  %80 = call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %1, %"class.blink::Length"* nonnull dereferenceable(8) %3) #17
  %81 = icmp eq i32 %80, -64
  %82 = load i8, i8* %78, align 1
  %83 = icmp eq i8 %82, 8
  br i1 %83, label %84, label %85

84:                                               ; preds = %74
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #17
  br label %85

85:                                               ; preds = %84, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #17
  br i1 %81, label %86, label %106

86:                                               ; preds = %85
  %87 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %88 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %87, align 8
  br label %89

89:                                               ; preds = %86, %63, %2, %12, %56, %44, %20
  %90 = phi %"class.blink::ComputedStyleBase"* [ %88, %86 ], [ %11, %63 ], [ %11, %2 ], [ %11, %12 ], [ %11, %56 ], [ %11, %44 ], [ %11, %20 ]
  %91 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %92 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %91 to i96*
  %93 = load i96, i96* %92, align 4
  %94 = trunc i96 %93 to i32
  %95 = icmp slt i32 %94, 0
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %90, i64 0, i32 5, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %96, align 8
  br i1 %95, label %98, label %102

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %97, i64 0, i32 3, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  br label %106

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %97, i64 0, i32 8, i32 2
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, 0
  br label %106

106:                                              ; preds = %85, %63, %98, %102, %44
  %107 = phi i1 [ false, %44 ], [ %101, %98 ], [ %105, %102 ], [ false, %85 ], [ false, %63 ]
  ret i1 %107
}

declare i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid20HasAutoSizeInRowAxisERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 1, i32 1, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp oeq float %9, 0.000000e+00
  %11 = bitcast %"class.blink::ComputedStyle"* %5 to %"class.blink::ComputedStyleBase"*
  br i1 %10, label %89, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 1, i32 1, i32 1
  %14 = load float, float* %13, align 4
  %15 = fcmp oeq float %14, 0.000000e+00
  %16 = fcmp olt float %9, 1.562500e-02
  %17 = or i1 %16, %15
  %18 = fcmp olt float %14, 1.562500e-02
  %19 = or i1 %18, %17
  br i1 %19, label %89, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %89, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = xor i96 %31, %28
  %33 = trunc i96 %32 to i32
  %34 = icmp slt i32 %33, 0
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %37, align 8
  br i1 %34, label %72, label %39

39:                                               ; preds = %25
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %38, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %41, i64 0, i32 44, i32 0
  %43 = load i8, i8* %42, align 4
  %44 = and i8 %43, 15
  %45 = icmp eq i8 %44, 3
  br i1 %45, label %72, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8
  %50 = and i160 %49, 15211807202738752817960438464512
  %51 = icmp eq i160 %50, 0
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 3
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 8
  %54 = select i1 %51, %"class.blink::Length"* %52, %"class.blink::Length"* %53
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %54, i64 0, i32 2
  %56 = load i8, i8* %55, align 1
  switch i8 %56, label %89 [
    i8 2, label %106
    i8 8, label %57
    i8 1, label %57
  ]

57:                                               ; preds = %46, %46
  %58 = bitcast %"class.blink::Length"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #17
  %59 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %59, align 4, !alias.scope !119
  %60 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 1
  store i8 0, i8* %60, align 4, !alias.scope !119
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  store i8 1, i8* %61, align 1, !alias.scope !119
  %62 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 3
  store i8 0, i8* %62, align 2, !alias.scope !119
  %63 = call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %1, %"class.blink::Length"* nonnull dereferenceable(8) %3) #17
  %64 = icmp eq i32 %63, -64
  %65 = load i8, i8* %61, align 1
  %66 = icmp eq i8 %65, 8
  br i1 %66, label %67, label %68

67:                                               ; preds = %57
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #17
  br label %68

68:                                               ; preds = %67, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #17
  br i1 %64, label %69, label %106

69:                                               ; preds = %68
  %70 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %71 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %70, align 8
  br label %89

72:                                               ; preds = %25, %39
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %38, i64 0, i32 11, i32 0
  %74 = load i8, i8* %73, align 4
  %75 = and i8 %74, 15
  %76 = icmp eq i8 %75, 3
  br i1 %76, label %89, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8
  %81 = and i160 %80, 15211807202738752817960438464512
  %82 = icmp eq i160 %81, 0
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %7, i64 0, i32 3
  %85 = select i1 %82, %"class.blink::Length"* %83, %"class.blink::Length"* %84
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 0, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %106

89:                                               ; preds = %69, %46, %2, %12, %72, %77, %20
  %90 = phi %"class.blink::ComputedStyleBase"* [ %71, %69 ], [ %11, %46 ], [ %11, %2 ], [ %11, %12 ], [ %11, %72 ], [ %11, %77 ], [ %11, %20 ]
  %91 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %92 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %91 to i96*
  %93 = load i96, i96* %92, align 4
  %94 = trunc i96 %93 to i32
  %95 = icmp slt i32 %94, 0
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %90, i64 0, i32 5, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %96, align 8
  br i1 %95, label %98, label %102

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %97, i64 0, i32 8, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  br label %106

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %97, i64 0, i32 3, i32 2
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, 0
  br label %106

106:                                              ; preds = %68, %46, %98, %102, %77
  %107 = phi i1 [ false, %77 ], [ %101, %98 ], [ %105, %102 ], [ false, %68 ], [ false, %46 ]
  ret i1 %107
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid26HasAutoMarginsInColumnAxisERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %10 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 7, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %11, align 8
  br i1 %7, label %13, label %21

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 12, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 9, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br label %29

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 10, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 11, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br label %29

29:                                               ; preds = %21, %25, %13, %17
  %30 = phi i1 [ true, %13 ], [ %20, %17 ], [ true, %21 ], [ %28, %25 ]
  ret i1 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutGrid23HasAutoMarginsInRowAxisERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %10 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 7, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %11, align 8
  br i1 %7, label %13, label %21

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 10, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 11, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br label %29

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 12, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 9, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br label %29

29:                                               ; preds = %21, %25, %13, %17
  %30 = phi i1 [ true, %13 ], [ %20, %17 ], [ true, %21 ], [ %28, %25 ]
  ret i1 %30
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink10LayoutGrid32SynthesizedBaselineFromBorderBoxERKNS_9LayoutBoxENS_17LineDirectionModeE(%"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %5 = bitcast %"class.blink::LayoutSize"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = lshr i64 %6, 32
  %8 = select i1 %3, i64 %7, i64 %6
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutGrid"*, i32, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZNK5blink10LayoutGrid20FirstLineBoxBaselineEv(%"class.blink::LayoutGrid"* %0)
  %7 = icmp eq i32 %6, -64
  br i1 %7, label %8, label %92

8:                                                ; preds = %5
  %9 = icmp eq i32 %3, 0
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %11 = bitcast %"class.blink::LayoutSize"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = lshr i64 %12, 32
  %14 = select i1 %9, i64 %13, i64 %12
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8, !noalias !122
  %22 = lshr i160 %21, 102
  %23 = trunc i160 %22 to i8
  %24 = and i8 %23, 3
  %25 = bitcast %"class.blink::LayoutGrid"* %0 to i8*
  switch i8 %24, label %26 [
    i8 0, label %35
    i8 1, label %27
  ]

26:                                               ; preds = %8
  br label %27

27:                                               ; preds = %26, %8
  %28 = phi { i64, i64 } [ { i64 1033, i64 0 }, %26 ], [ { i64 1041, i64 0 }, %8 ]
  %29 = extractvalue { i64, i64 } %28, 0
  %30 = extractvalue { i64, i64 } %28, 1
  %31 = getelementptr inbounds i8, i8* %25, i64 %30
  %32 = bitcast i8* %31 to %"class.blink::LayoutBoxModelObject"*
  %33 = and i64 %29, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %27, %8
  %36 = phi %"class.blink::LayoutBoxModelObject"* [ %32, %27 ], [ %16, %8 ]
  %37 = phi i8* [ %31, %27 ], [ %25, %8 ]
  %38 = phi i64 [ %29, %27 ], [ 1017, %8 ]
  %39 = bitcast i8* %37 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = add i64 %38, -1
  %42 = getelementptr i8, i8* %40, i64 %41
  %43 = bitcast i8* %42 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %43, align 8
  br label %47

45:                                               ; preds = %27
  %46 = inttoptr i64 %29 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %47

47:                                               ; preds = %45, %35
  %48 = phi %"class.blink::LayoutBoxModelObject"* [ %36, %35 ], [ %32, %45 ]
  %49 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %44, %35 ], [ %46, %45 ]
  %50 = tail call i32 %49(%"class.blink::LayoutBoxModelObject"* %48) #17
  %51 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %51, i64 0, i32 0, i32 9
  %53 = bitcast [20 x i8]* %52 to i160*
  %54 = load i160, i160* %53, align 8, !noalias !125
  %55 = lshr i160 %54, 102
  %56 = trunc i160 %55 to i8
  %57 = and i8 %56, 3
  switch i8 %57, label %58 [
    i8 0, label %67
    i8 1, label %59
  ]

58:                                               ; preds = %47
  br label %59

59:                                               ; preds = %58, %47
  %60 = phi { i64, i64 } [ { i64 1041, i64 0 }, %58 ], [ { i64 1033, i64 0 }, %47 ]
  %61 = extractvalue { i64, i64 } %60, 0
  %62 = extractvalue { i64, i64 } %60, 1
  %63 = getelementptr inbounds i8, i8* %25, i64 %62
  %64 = bitcast i8* %63 to %"class.blink::LayoutBoxModelObject"*
  %65 = and i64 %61, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %59, %47
  %68 = phi %"class.blink::LayoutBoxModelObject"* [ %64, %59 ], [ %16, %47 ]
  %69 = phi i8* [ %63, %59 ], [ %25, %47 ]
  %70 = phi i64 [ %61, %59 ], [ 1025, %47 ]
  %71 = bitcast i8* %69 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = add i64 %70, -1
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = bitcast i8* %74 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %76 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %75, align 8
  br label %79

77:                                               ; preds = %59
  %78 = inttoptr i64 %61 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %79

79:                                               ; preds = %67, %77
  %80 = phi %"class.blink::LayoutBoxModelObject"* [ %68, %67 ], [ %64, %77 ]
  %81 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %76, %67 ], [ %78, %77 ]
  %82 = tail call i32 %81(%"class.blink::LayoutBoxModelObject"* %80) #17
  %83 = icmp slt i32 %82, 0
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 %82) #17
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !3
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %88) #17
  br label %98

92:                                               ; preds = %5
  %93 = bitcast %"class.blink::LayoutGrid"* %0 to %"class.blink::LayoutBlock"*
  %94 = tail call i32 @_ZNK5blink11LayoutBlock27BeforeMarginInLineDirectionENS_17LineDirectionModeE(%"class.blink::LayoutBlock"* %93, i32 %3) #17
  %95 = icmp slt i32 %94, 0
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 %94) #17
  br label %98

98:                                               ; preds = %92, %79
  %99 = phi { i32, i1 } [ %97, %92 ], [ %91, %79 ]
  %100 = phi i32 [ %96, %92 ], [ %90, %79 ]
  %101 = extractvalue { i32, i1 } %99, 1
  %102 = extractvalue { i32, i1 } %99, 0
  %103 = select i1 %101, i32 %100, i32 %102
  ret i32 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid20FirstLineBoxBaselineEv(%"class.blink::LayoutGrid"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %237, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %9 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %9, i64 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = xor i160 %18, %12
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %22, label %237

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Grid"*, %"class.blink::Grid"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %24, i64 0, i32 8, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %237, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %34, i64 0, i32 45
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %82, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = and i96 %42, 1207959552
  %44 = icmp eq i96 %43, 134217728
  br i1 %44, label %82, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::LayoutGrid"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %2, i32 43) #17
  br i1 %50, label %82, label %51

51:                                               ; preds = %45
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %46, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %2, i32 46) #17
  br i1 %55, label %76, label %56

56:                                               ; preds = %51
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %46, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, i64 92
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::LayoutObject"* %2, i32 48) #17
  br i1 %60, label %76, label %61

61:                                               ; preds = %56
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %46, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, i64 92
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::LayoutObject"* %2, i32 45) #17
  br i1 %65, label %76, label %66

66:                                               ; preds = %61
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %46, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, i64 92
  %69 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::LayoutObject"* %2, i32 49) #17
  br i1 %70, label %76, label %71

71:                                               ; preds = %66
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %46, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, i64 92
  %74 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::LayoutObject"* %2, i32 50) #17
  br i1 %75, label %76, label %237

76:                                               ; preds = %71, %66, %61, %56, %51
  %77 = bitcast %"class.blink::LayoutGrid"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %78 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %78, i64 24
  %80 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %79, align 8
  %81 = tail call zeroext i1 %80(%"class.blink::LayoutObject"* %2) #17
  br i1 %81, label %237, label %82

82:                                               ; preds = %28, %45, %39, %76
  %83 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %84 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %83 to i96*
  br label %85

85:                                               ; preds = %82, %177
  %86 = phi %"class.blink::LayoutBox"* [ null, %82 ], [ %184, %177 ]
  %87 = phi i64 [ 0, %82 ], [ %185, %177 ]
  %88 = phi i8 [ 0, %82 ], [ %179, %177 ]
  %89 = phi %"class.blink::LayoutBox"* [ null, %82 ], [ %178, %177 ]
  %90 = load %"class.blink::Grid"*, %"class.blink::Grid"** %23, align 8
  %91 = bitcast %"class.blink::Grid"* %90 to i64 (%"class.blink::Grid"*, i32)***
  %92 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %91, align 8
  %93 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %92, align 8
  %94 = tail call i64 %93(%"class.blink::Grid"* %90, i32 0) #17
  %95 = icmp ult i64 %87, %94
  br i1 %95, label %99, label %96

96:                                               ; preds = %177, %85
  %97 = phi %"class.blink::LayoutBox"* [ %184, %177 ], [ %86, %85 ]
  %98 = icmp eq %"class.blink::LayoutBox"* %97, null
  br i1 %98, label %237, label %188

99:                                               ; preds = %85
  %100 = load %"class.blink::Grid"*, %"class.blink::Grid"** %23, align 8
  %101 = bitcast %"class.blink::Grid"* %100 to %"class.WTF::Vector.1748"* (%"class.blink::Grid"*, i64, i64)***
  %102 = load %"class.WTF::Vector.1748"* (%"class.blink::Grid"*, i64, i64)**, %"class.WTF::Vector.1748"* (%"class.blink::Grid"*, i64, i64)*** %101, align 8
  %103 = getelementptr inbounds %"class.WTF::Vector.1748"* (%"class.blink::Grid"*, i64, i64)*, %"class.WTF::Vector.1748"* (%"class.blink::Grid"*, i64, i64)** %102, i64 3
  %104 = load %"class.WTF::Vector.1748"* (%"class.blink::Grid"*, i64, i64)*, %"class.WTF::Vector.1748"* (%"class.blink::Grid"*, i64, i64)** %103, align 8
  %105 = tail call dereferenceable(24) %"class.WTF::Vector.1748"* %104(%"class.blink::Grid"* %100, i64 0, i64 %87) #17
  %106 = getelementptr inbounds %"class.WTF::Vector.1748", %"class.WTF::Vector.1748"* %105, i64 0, i32 0, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %177, label %109

109:                                              ; preds = %99
  %110 = icmp eq %"class.blink::LayoutBox"* %86, null
  br label %111

111:                                              ; preds = %109, %171
  %112 = phi i64 [ 0, %109 ], [ %173, %171 ]
  %113 = phi %"class.blink::LayoutBox"* [ %89, %109 ], [ %172, %171 ]
  %114 = trunc i64 %112 to i32
  %115 = tail call dereferenceable(8) %"class.blink::LayoutBox"** @_ZNK3WTF6VectorIPN5blink9LayoutBoxELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1748"* %105, i32 %114) #17
  %116 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %116, i64 0, i32 0, i32 0, i32 4
  %118 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %117 to i96*
  %119 = load i96, i96* %118, align 4
  %120 = and i96 %119, 113336795588871485128704
  %121 = icmp eq i96 %120, 75557863725914323419136
  br i1 %121, label %161, label %122

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %116, i64 0, i32 0, i32 0
  %124 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %125 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %116, i64 0, i32 0, i32 0, i32 5, i32 0
  %126 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %125, align 8
  %127 = bitcast %"class.blink::LayoutBox"* %116 to i1 (%"class.blink::LayoutObject"*, i32)***
  %128 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %127, align 8
  %129 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %128, i64 92
  %130 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %129, align 8
  %131 = tail call zeroext i1 %130(%"class.blink::LayoutObject"* %123, i32 39) #17
  %132 = select i1 %131, i32 7, i32 3
  %133 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %126, i32 %132, %"class.blink::ComputedStyle"* %124) #17
  %134 = and i32 %133, 14
  %135 = load i96, i96* %84, align 4
  %136 = trunc i96 %135 to i32
  %137 = icmp slt i32 %136, 0
  %138 = bitcast %"class.blink::ComputedStyle"** %125 to %"class.blink::ComputedStyleBase"**
  %139 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %139, i64 0, i32 7, i32 0, i32 0
  %141 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %140, align 8
  br i1 %137, label %142, label %148

142:                                              ; preds = %122
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %141, i64 0, i32 12, i32 2
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %161, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %141, i64 0, i32 9, i32 2
  br label %154

148:                                              ; preds = %122
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %141, i64 0, i32 10, i32 2
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %161, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %141, i64 0, i32 11, i32 2
  br label %154

154:                                              ; preds = %152, %146
  %155 = phi i8* [ %147, %146 ], [ %153, %152 ]
  %156 = load i8, i8* %155, align 1
  %157 = icmp ne i8 %156, 0
  %158 = or i32 %134, 1
  %159 = icmp eq i32 %158, 5
  %160 = and i1 %159, %157
  br i1 %160, label %177, label %161

161:                                              ; preds = %148, %142, %154, %111
  br i1 %110, label %162, label %171

162:                                              ; preds = %161
  %163 = icmp eq %"class.blink::LayoutBox"* %113, null
  br i1 %163, label %170, label %164

164:                                              ; preds = %162
  %165 = load %"class.blink::Grid"*, %"class.blink::Grid"** %23, align 8
  %166 = tail call i64 @_ZNK5blink4Grid18GridItemPaintOrderERKNS_9LayoutBoxE(%"class.blink::Grid"* %165, %"class.blink::LayoutBox"* dereferenceable(216) %116) #17
  %167 = load %"class.blink::Grid"*, %"class.blink::Grid"** %23, align 8
  %168 = tail call i64 @_ZNK5blink4Grid18GridItemPaintOrderERKNS_9LayoutBoxE(%"class.blink::Grid"* %167, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %113) #17
  %169 = icmp ult i64 %166, %168
  br i1 %169, label %170, label %171

170:                                              ; preds = %162, %164
  br label %171

171:                                              ; preds = %161, %164, %170
  %172 = phi %"class.blink::LayoutBox"* [ %113, %164 ], [ %116, %170 ], [ %113, %161 ]
  %173 = add nuw nsw i64 %112, 1
  %174 = load i32, i32* %106, align 4
  %175 = zext i32 %174 to i64
  %176 = icmp ult i64 %173, %175
  br i1 %176, label %111, label %177

177:                                              ; preds = %171, %154, %99
  %178 = phi %"class.blink::LayoutBox"* [ %89, %99 ], [ %113, %154 ], [ %172, %171 ]
  %179 = phi i8 [ %88, %99 ], [ 1, %154 ], [ %88, %171 ]
  %180 = phi %"class.blink::LayoutBox"* [ %86, %99 ], [ %116, %154 ], [ %86, %171 ]
  %181 = icmp eq %"class.blink::LayoutBox"* %180, null
  %182 = icmp ne %"class.blink::LayoutBox"* %178, null
  %183 = and i1 %182, %181
  %184 = select i1 %183, %"class.blink::LayoutBox"* %178, %"class.blink::LayoutBox"* %180
  %185 = add i64 %87, 1
  %186 = and i8 %179, 1
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %85, label %96

188:                                              ; preds = %96
  %189 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %97) #17
  br i1 %189, label %197, label %190

190:                                              ; preds = %188
  %191 = bitcast %"class.blink::LayoutBox"* %97 to i32 (%"class.blink::LayoutBox"*)***
  %192 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %191, align 8
  %193 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %192, i64 180
  %194 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %193, align 8
  %195 = tail call i32 %194(%"class.blink::LayoutBox"* nonnull %97) #17
  %196 = icmp eq i32 %195, -64
  br i1 %196, label %197, label %219

197:                                              ; preds = %188, %190
  %198 = load i96, i96* %84, align 4
  %199 = trunc i96 %198 to i32
  %200 = icmp slt i32 %199, 0
  %201 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %97, i64 0, i32 2, i32 1
  %202 = bitcast %"class.blink::LayoutSize"* %201 to i64*
  %203 = load i64, i64* %202, align 4
  %204 = lshr i64 %203, 32
  %205 = select i1 %200, i64 %204, i64 %203
  %206 = trunc i64 %205 to i32
  %207 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %97, i64 0, i32 2
  %208 = bitcast %"class.blink::LayoutRect"* %207 to i64*
  %209 = load i64, i64* %208, align 4
  %210 = lshr i64 %209, 32
  %211 = select i1 %200, i64 %210, i64 %209
  %212 = trunc i64 %211 to i32
  %213 = icmp slt i32 %212, 0
  %214 = select i1 %213, i32 -2147483648, i32 2147483647
  %215 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %206, i32 %212) #17
  %216 = extractvalue { i32, i1 } %215, 1
  %217 = extractvalue { i32, i1 } %215, 0
  %218 = select i1 %216, i32 %214, i32 %217, !prof !3
  br label %237

219:                                              ; preds = %190
  %220 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %97, i64 0, i32 0, i32 0, i32 5, i32 0
  %221 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %221, i64 0, i32 0, i32 9
  %223 = bitcast [20 x i8]* %222 to i160*
  %224 = load i160, i160* %223, align 8
  %225 = and i160 %224, 15211807202738752817960438464512
  %226 = icmp eq i160 %225, 0
  %227 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %97, i64 0, i32 2, i32 0, i32 1, i32 0
  %228 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %97, i64 0, i32 2, i32 0, i32 0, i32 0
  %229 = select i1 %226, i32* %227, i32* %228
  %230 = load i32, i32* %229, align 4
  %231 = icmp slt i32 %230, 0
  %232 = select i1 %231, i32 -2147483648, i32 2147483647
  %233 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %195, i32 %230) #17
  %234 = extractvalue { i32, i1 } %233, 1
  %235 = extractvalue { i32, i1 } %233, 0
  %236 = select i1 %234, i32 %232, i32 %235, !prof !3
  br label %237

237:                                              ; preds = %22, %6, %71, %1, %197, %219, %96, %76
  %238 = phi i32 [ -64, %76 ], [ -64, %22 ], [ -64, %6 ], [ -64, %96 ], [ %218, %197 ], [ %236, %219 ], [ -64, %1 ], [ -64, %71 ]
  ret i32 %238
}

declare i32 @_ZNK5blink11LayoutBlock27BeforeMarginInLineDirectionENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #1

declare i64 @_ZNK5blink4Grid18GridItemPaintOrderERKNS_9LayoutBoxE(%"class.blink::Grid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutGrid"*, i32) unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK5blink10LayoutGrid20FirstLineBoxBaselineEv(%"class.blink::LayoutGrid"* %0)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid32ColumnAxisBaselineOffsetForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %4 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %3, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 1) #17
  ret i32 %4
}

declare i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid29RowAxisBaselineOffsetForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %4 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %3, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #17
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid26ColumnAxisPositionForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = xor i160 %14, %8
  %16 = and i160 %15, 15211807202738752817960438464512
  %17 = icmp eq i160 %16, 0
  %18 = and i160 %8, 41538374868278621028243970633760768
  %19 = icmp eq i160 %18, 0
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 113336795588871485128704
  %24 = icmp eq i96 %23, 75557863725914323419136
  %25 = bitcast %"class.blink::ComputedStyleBase"* %11 to %"class.blink::ComputedStyle"*
  br i1 %24, label %26, label %50

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %28 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %27 to i96*
  %29 = load i96, i96* %28, align 4
  %30 = trunc i96 %29 to i32
  %31 = icmp slt i32 %30, 0
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 7, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %32, align 8
  br i1 %31, label %34, label %42

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %33, i64 0, i32 18, i32 2
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %101

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %33, i64 0, i32 7, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %50, label %101

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %33, i64 0, i32 8, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %101

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %33, i64 0, i32 17, i32 2
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %101

50:                                               ; preds = %38, %46, %2
  %51 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %3, i32 39) #17
  %56 = select i1 %55, i32 7, i32 3
  %57 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %5, i32 %56, %"class.blink::ComputedStyle"* %25) #17
  %58 = and i32 %57, 15
  switch i32 %58, label %100 [
    i32 9, label %59
    i32 10, label %78
    i32 6, label %101
    i32 11, label %96
    i32 7, label %96
    i32 12, label %97
    i32 8, label %97
    i32 3, label %98
    i32 4, label %99
    i32 5, label %99
  ]

59:                                               ; preds = %50
  %60 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  br i1 %60, label %61, label %75

61:                                               ; preds = %59
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8
  %66 = and i160 %65, 15211807202738752817960438464512
  %67 = icmp eq i160 %66, 5070602400912917605986812821504
  br i1 %67, label %68, label %72

68:                                               ; preds = %61
  %69 = lshr exact i160 %18, 115
  %70 = trunc i160 %69 to i32
  %71 = xor i32 %70, 1
  br label %101

72:                                               ; preds = %61
  %73 = xor i1 %19, true
  %74 = zext i1 %73 to i32
  br label %101

75:                                               ; preds = %59
  %76 = xor i1 %17, true
  %77 = zext i1 %76 to i32
  br label %101

78:                                               ; preds = %50
  %79 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  br i1 %79, label %80, label %94

80:                                               ; preds = %78
  %81 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %81, i64 0, i32 0, i32 9
  %83 = bitcast [20 x i8]* %82 to i160*
  %84 = load i160, i160* %83, align 8
  %85 = and i160 %84, 15211807202738752817960438464512
  %86 = icmp eq i160 %85, 5070602400912917605986812821504
  br i1 %86, label %87, label %90

87:                                               ; preds = %80
  %88 = xor i1 %19, true
  %89 = zext i1 %88 to i32
  br label %101

90:                                               ; preds = %80
  %91 = lshr exact i160 %18, 115
  %92 = trunc i160 %91 to i32
  %93 = xor i32 %92, 1
  br label %101

94:                                               ; preds = %78
  %95 = zext i1 %17 to i32
  br label %101

96:                                               ; preds = %50, %50
  br label %101

97:                                               ; preds = %50, %50
  br label %101

98:                                               ; preds = %50
  br label %101

99:                                               ; preds = %50, %50
  br label %101

100:                                              ; preds = %50
  br label %101

101:                                              ; preds = %42, %34, %38, %50, %46, %100, %99, %98, %97, %96, %94, %90, %87, %75, %72, %68
  %102 = phi i32 [ 0, %100 ], [ 0, %99 ], [ 0, %98 ], [ 1, %97 ], [ 0, %96 ], [ %89, %87 ], [ %93, %90 ], [ %95, %94 ], [ %71, %68 ], [ %74, %72 ], [ %77, %75 ], [ 0, %46 ], [ 2, %50 ], [ 0, %38 ], [ 0, %34 ], [ 0, %42 ]
  ret i32 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid23RowAxisPositionForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %6 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %6, i64 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = xor i160 %14, %9
  %16 = lshr i160 %15, 115
  %17 = trunc i160 %16 to i8
  %18 = and i8 %17, 1
  %19 = and i160 %14, 41538374868278621028243970633760768
  %20 = icmp eq i160 %19, 0
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %22 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %21 to i96*
  %23 = load i96, i96* %22, align 4
  %24 = and i96 %23, 113336795588871485128704
  %25 = icmp eq i96 %24, 75557863725914323419136
  %26 = bitcast %"class.blink::ComputedStyleBase"* %6 to %"class.blink::ComputedStyle"*
  br i1 %25, label %27, label %51

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = trunc i96 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %6, i64 0, i32 7, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %33, align 8
  br i1 %32, label %35, label %43

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 8, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %109

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 17, i32 2
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %51, label %109

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 18, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %109

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 7, i32 2
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %109

51:                                               ; preds = %39, %47, %2
  %52 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, i64 92
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutObject"* %3, i32 39) #17
  %57 = select i1 %56, i32 7, i32 3
  %58 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %26, i32 %57, %"class.blink::ComputedStyle"* %11) #17
  %59 = and i32 %58, 15
  switch i32 %59, label %108 [
    i32 9, label %60
    i32 10, label %78
    i32 13, label %97
    i32 14, label %100
    i32 6, label %109
    i32 11, label %104
    i32 7, label %104
    i32 12, label %105
    i32 8, label %105
    i32 3, label %106
    i32 4, label %107
    i32 5, label %107
  ]

60:                                               ; preds = %51
  %61 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  br i1 %61, label %62, label %76

62:                                               ; preds = %60
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %63, i64 0, i32 0, i32 9
  %65 = bitcast [20 x i8]* %64 to i160*
  %66 = load i160, i160* %65, align 8
  %67 = and i160 %66, 15211807202738752817960438464512
  %68 = icmp eq i160 %67, 5070602400912917605986812821504
  br i1 %68, label %69, label %73

69:                                               ; preds = %62
  %70 = lshr exact i160 %19, 115
  %71 = trunc i160 %70 to i32
  %72 = xor i32 %71, 1
  br label %109

73:                                               ; preds = %62
  %74 = xor i1 %20, true
  %75 = zext i1 %74 to i32
  br label %109

76:                                               ; preds = %60
  %77 = zext i8 %18 to i32
  br label %109

78:                                               ; preds = %51
  %79 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  br i1 %79, label %80, label %94

80:                                               ; preds = %78
  %81 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %81, i64 0, i32 0, i32 9
  %83 = bitcast [20 x i8]* %82 to i160*
  %84 = load i160, i160* %83, align 8
  %85 = and i160 %84, 15211807202738752817960438464512
  %86 = icmp eq i160 %85, 5070602400912917605986812821504
  br i1 %86, label %87, label %90

87:                                               ; preds = %80
  %88 = xor i1 %20, true
  %89 = zext i1 %88 to i32
  br label %109

90:                                               ; preds = %80
  %91 = lshr exact i160 %19, 115
  %92 = trunc i160 %91 to i32
  %93 = xor i32 %92, 1
  br label %109

94:                                               ; preds = %78
  %95 = xor i8 %18, 1
  %96 = zext i8 %95 to i32
  br label %109

97:                                               ; preds = %51
  %98 = xor i1 %20, true
  %99 = zext i1 %98 to i32
  br label %109

100:                                              ; preds = %51
  %101 = lshr exact i160 %19, 115
  %102 = trunc i160 %101 to i32
  %103 = xor i32 %102, 1
  br label %109

104:                                              ; preds = %51, %51
  br label %109

105:                                              ; preds = %51, %51
  br label %109

106:                                              ; preds = %51
  br label %109

107:                                              ; preds = %51, %51
  br label %109

108:                                              ; preds = %51
  br label %109

109:                                              ; preds = %43, %35, %39, %51, %47, %108, %107, %106, %105, %104, %100, %97, %94, %90, %87, %76, %73, %69
  %110 = phi i32 [ 0, %108 ], [ 0, %107 ], [ 0, %106 ], [ 1, %105 ], [ 0, %104 ], [ %103, %100 ], [ %99, %97 ], [ %89, %87 ], [ %93, %90 ], [ %96, %94 ], [ %72, %69 ], [ %75, %73 ], [ %77, %76 ], [ 0, %47 ], [ 2, %51 ], [ 0, %39 ], [ 0, %35 ], [ 0, %43 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid24ColumnAxisOffsetForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutUnit", align 4
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = bitcast %"class.blink::LayoutUnit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 0, i32* %6, align 4
  %7 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 113336795588871485128704
  %13 = icmp eq i96 %12, 75557863725914323419136
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  call void @_ZNK5blink10LayoutGrid33GridAreaPositionForOutOfFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERNS_10LayoutUnitES6_(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 1, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %3, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4) #17
  br label %16

15:                                               ; preds = %2
  call void @_ZNK5blink10LayoutGrid30GridAreaPositionForInFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERNS_10LayoutUnitES6_(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 1, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %3, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4) #17
  br label %16

16:                                               ; preds = %14, %15
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = icmp eq %"class.blink::ComputedStyle"* %19, null
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = select i1 %20, %"class.blink::ComputedStyle"* %22, %"class.blink::ComputedStyle"* %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8, !noalias !128
  %27 = lshr i160 %26, 102
  %28 = trunc i160 %27 to i8
  %29 = and i8 %28, 3
  %30 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %29, label %31 [
    i8 0, label %40
    i8 1, label %32
  ]

31:                                               ; preds = %16
  br label %32

32:                                               ; preds = %31, %16
  %33 = phi { i64, i64 } [ { i64 1033, i64 0 }, %31 ], [ { i64 1041, i64 0 }, %16 ]
  %34 = extractvalue { i64, i64 } %33, 0
  %35 = extractvalue { i64, i64 } %33, 1
  %36 = getelementptr inbounds i8, i8* %30, i64 %35
  %37 = bitcast i8* %36 to %"class.blink::LayoutBoxModelObject"*
  %38 = and i64 %34, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %32, %16
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %37, %32 ], [ %17, %16 ]
  %42 = phi i8* [ %36, %32 ], [ %30, %16 ]
  %43 = phi i64 [ %34, %32 ], [ 1017, %16 ]
  %44 = bitcast i8* %42 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = add i64 %43, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = bitcast i8* %47 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %49 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %48, align 8
  br label %52

50:                                               ; preds = %32
  %51 = inttoptr i64 %34 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %52

52:                                               ; preds = %40, %50
  %53 = phi %"class.blink::LayoutBoxModelObject"* [ %41, %40 ], [ %37, %50 ]
  %54 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %49, %40 ], [ %51, %50 ]
  %55 = tail call i32 %54(%"class.blink::LayoutBoxModelObject"* %53) #17
  %56 = load i32, i32* %6, align 4
  %57 = icmp slt i32 %55, 0
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %55) #17
  %60 = extractvalue { i32, i1 } %59, 1
  %61 = extractvalue { i32, i1 } %59, 0
  %62 = select i1 %60, i32 %58, i32 %61, !prof !3
  %63 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = trunc i96 %65 to i32
  %67 = icmp slt i32 %66, 0
  %68 = bitcast %"class.blink::ComputedStyle"** %21 to %"class.blink::ComputedStyleBase"**
  %69 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %69, i64 0, i32 7, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %70, align 8
  br i1 %67, label %72, label %80

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %71, i64 0, i32 12, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %307, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %71, i64 0, i32 9, i32 2
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %307, label %88

80:                                               ; preds = %52
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %71, i64 0, i32 10, i32 2
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %307, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %71, i64 0, i32 11, i32 2
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %307, label %88

88:                                               ; preds = %76, %84
  %89 = tail call i32 @_ZNK5blink10LayoutGrid26ColumnAxisPositionForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  switch i32 %89, label %307 [
    i32 0, label %90
    i32 1, label %99
    i32 2, label %99
  ]

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %92 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %91, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 1) #17
  %93 = icmp slt i32 %92, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %92) #17
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !3
  br label %307

99:                                               ; preds = %88, %88
  %100 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  %101 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %101, i64 0, i32 0, i32 9
  %103 = bitcast [20 x i8]* %102 to i160*
  %104 = load i160, i160* %103, align 8
  %105 = and i160 %104, 15211807202738752817960438464512
  %106 = icmp eq i160 %105, 0
  br i1 %100, label %107, label %176

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %109 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %110 = load i32, i32* %108, align 4
  %111 = load i32, i32* %109, align 4
  %112 = select i1 %106, i32 %110, i32 %111
  %113 = and i160 %104, 41538374868278621028243970633760768
  %114 = icmp eq i160 %113, 0
  %115 = select i1 %114, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %116 = select i1 %114, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %117 = select i1 %106, { i64, i64 } %116, { i64, i64 } %115
  %118 = select i1 %106, { i64, i64 } %116, { i64, i64 } %115
  %119 = extractvalue { i64, i64 } %117, 0
  %120 = extractvalue { i64, i64 } %118, 1
  %121 = getelementptr inbounds i8, i8* %30, i64 %120
  %122 = bitcast i8* %121 to %"class.blink::LayoutBoxModelObject"*
  %123 = and i64 %119, 1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %132, label %125

125:                                              ; preds = %107
  %126 = bitcast i8* %121 to i8**
  %127 = load i8*, i8** %126, align 8
  %128 = add i64 %119, -1
  %129 = getelementptr i8, i8* %127, i64 %128
  %130 = bitcast i8* %129 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %131 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %130, align 8
  br label %134

132:                                              ; preds = %107
  %133 = inttoptr i64 %119 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %131, %125 ], [ %133, %132 ]
  %136 = tail call i32 %135(%"class.blink::LayoutBoxModelObject"* %122) #17
  %137 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %138 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %137, i64 0, i32 0, i32 9
  %139 = bitcast [20 x i8]* %138 to i160*
  %140 = load i160, i160* %139, align 8, !noalias !131
  %141 = and i160 %140, 15211807202738752817960438464512
  %142 = icmp eq i160 %141, 0
  %143 = and i160 %140, 41538374868278621028243970633760768
  %144 = icmp eq i160 %143, 0
  %145 = select i1 %144, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %146 = select i1 %144, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %147 = select i1 %142, { i64, i64 } %146, { i64, i64 } %145
  %148 = select i1 %142, { i64, i64 } %146, { i64, i64 } %145
  %149 = extractvalue { i64, i64 } %147, 0
  %150 = extractvalue { i64, i64 } %148, 1
  %151 = getelementptr inbounds i8, i8* %30, i64 %150
  %152 = bitcast i8* %151 to %"class.blink::LayoutBoxModelObject"*
  %153 = and i64 %149, 1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %162, label %155

155:                                              ; preds = %134
  %156 = bitcast i8* %151 to i8**
  %157 = load i8*, i8** %156, align 8
  %158 = add i64 %149, -1
  %159 = getelementptr i8, i8* %157, i64 %158
  %160 = bitcast i8* %159 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %161 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %160, align 8
  br label %164

162:                                              ; preds = %134
  %163 = inttoptr i64 %149 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %164

164:                                              ; preds = %155, %162
  %165 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %161, %155 ], [ %163, %162 ]
  %166 = tail call i32 %165(%"class.blink::LayoutBoxModelObject"* %152) #17
  %167 = icmp slt i32 %166, 0
  %168 = select i1 %167, i32 -2147483648, i32 2147483647
  %169 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %166) #17
  %170 = extractvalue { i32, i1 } %169, 1
  %171 = extractvalue { i32, i1 } %169, 0
  %172 = select i1 %170, i32 %168, i32 %171, !prof !3
  %173 = icmp slt i32 %172, 0
  %174 = select i1 %173, i32 -2147483648, i32 2147483647
  %175 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %172) #17
  br label %251

176:                                              ; preds = %99
  %177 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %178 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %179 = load i32, i32* %177, align 4
  %180 = load i32, i32* %178, align 4
  %181 = select i1 %106, i32 %179, i32 %180
  %182 = lshr i160 %104, 102
  %183 = trunc i160 %182 to i8
  %184 = and i8 %183, 3
  switch i8 %184, label %185 [
    i8 0, label %194
    i8 1, label %186
  ]

185:                                              ; preds = %176
  br label %186

186:                                              ; preds = %185, %176
  %187 = phi { i64, i64 } [ { i64 1033, i64 0 }, %185 ], [ { i64 1041, i64 0 }, %176 ]
  %188 = extractvalue { i64, i64 } %187, 0
  %189 = extractvalue { i64, i64 } %187, 1
  %190 = getelementptr inbounds i8, i8* %30, i64 %189
  %191 = bitcast i8* %190 to %"class.blink::LayoutBoxModelObject"*
  %192 = and i64 %188, 1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %204, label %194

194:                                              ; preds = %186, %176
  %195 = phi %"class.blink::LayoutBoxModelObject"* [ %191, %186 ], [ %17, %176 ]
  %196 = phi i8* [ %190, %186 ], [ %30, %176 ]
  %197 = phi i64 [ %188, %186 ], [ 1017, %176 ]
  %198 = bitcast i8* %196 to i8**
  %199 = load i8*, i8** %198, align 8
  %200 = add i64 %197, -1
  %201 = getelementptr i8, i8* %199, i64 %200
  %202 = bitcast i8* %201 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %203 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %202, align 8
  br label %206

204:                                              ; preds = %186
  %205 = inttoptr i64 %188 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %206

206:                                              ; preds = %204, %194
  %207 = phi %"class.blink::LayoutBoxModelObject"* [ %195, %194 ], [ %191, %204 ]
  %208 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %203, %194 ], [ %205, %204 ]
  %209 = tail call i32 %208(%"class.blink::LayoutBoxModelObject"* %207) #17
  %210 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %211 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %210, i64 0, i32 0, i32 9
  %212 = bitcast [20 x i8]* %211 to i160*
  %213 = load i160, i160* %212, align 8, !noalias !134
  %214 = lshr i160 %213, 102
  %215 = trunc i160 %214 to i8
  %216 = and i8 %215, 3
  switch i8 %216, label %217 [
    i8 0, label %226
    i8 1, label %218
  ]

217:                                              ; preds = %206
  br label %218

218:                                              ; preds = %217, %206
  %219 = phi { i64, i64 } [ { i64 1041, i64 0 }, %217 ], [ { i64 1033, i64 0 }, %206 ]
  %220 = extractvalue { i64, i64 } %219, 0
  %221 = extractvalue { i64, i64 } %219, 1
  %222 = getelementptr inbounds i8, i8* %30, i64 %221
  %223 = bitcast i8* %222 to %"class.blink::LayoutBoxModelObject"*
  %224 = and i64 %220, 1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %236, label %226

226:                                              ; preds = %218, %206
  %227 = phi %"class.blink::LayoutBoxModelObject"* [ %223, %218 ], [ %17, %206 ]
  %228 = phi i8* [ %222, %218 ], [ %30, %206 ]
  %229 = phi i64 [ %220, %218 ], [ 1025, %206 ]
  %230 = bitcast i8* %228 to i8**
  %231 = load i8*, i8** %230, align 8
  %232 = add i64 %229, -1
  %233 = getelementptr i8, i8* %231, i64 %232
  %234 = bitcast i8* %233 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %235 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %234, align 8
  br label %238

236:                                              ; preds = %218
  %237 = inttoptr i64 %220 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %238

238:                                              ; preds = %226, %236
  %239 = phi %"class.blink::LayoutBoxModelObject"* [ %227, %226 ], [ %223, %236 ]
  %240 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %235, %226 ], [ %237, %236 ]
  %241 = tail call i32 %240(%"class.blink::LayoutBoxModelObject"* %239) #17
  %242 = icmp slt i32 %241, 0
  %243 = select i1 %242, i32 -2147483648, i32 2147483647
  %244 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %209, i32 %241) #17
  %245 = extractvalue { i32, i1 } %244, 1
  %246 = extractvalue { i32, i1 } %244, 0
  %247 = select i1 %245, i32 %243, i32 %246, !prof !3
  %248 = icmp slt i32 %247, 0
  %249 = select i1 %248, i32 -2147483648, i32 2147483647
  %250 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %181, i32 %247) #17
  br label %251

251:                                              ; preds = %238, %164
  %252 = phi { i32, i1 } [ %250, %238 ], [ %175, %164 ]
  %253 = phi i32 [ %249, %238 ], [ %174, %164 ]
  %254 = extractvalue { i32, i1 } %252, 1
  %255 = extractvalue { i32, i1 } %252, 0
  %256 = select i1 %254, i32 %253, i32 %255
  %257 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %258 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %259 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %260 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %261 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %260, align 8
  %262 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %261, i64 92
  %263 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %262, align 8
  %264 = tail call zeroext i1 %263(%"class.blink::LayoutObject"* %258, i32 39) #17
  %265 = select i1 %264, i32 7, i32 3
  %266 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %259, i32 %265, %"class.blink::ComputedStyle"* %257) #17
  %267 = lshr i32 %266, 5
  %268 = and i32 %267, 3
  %269 = load i32, i32* %8, align 4
  %270 = icmp sgt i32 %56, -1
  %271 = select i1 %270, i32 -2147483648, i32 2147483647
  %272 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %269, i32 %56) #17
  %273 = extractvalue { i32, i1 } %272, 1
  %274 = extractvalue { i32, i1 } %272, 0
  %275 = select i1 %273, i32 %271, i32 %274, !prof !3
  %276 = icmp sgt i32 %256, -1
  %277 = select i1 %276, i32 -2147483648, i32 2147483647
  %278 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %275, i32 %256) #17
  %279 = extractvalue { i32, i1 } %278, 1
  %280 = extractvalue { i32, i1 } %278, 0
  %281 = select i1 %279, i32 %277, i32 %280, !prof !3
  switch i32 %268, label %285 [
    i32 2, label %282
    i32 1, label %286
    i32 0, label %286
  ]

282:                                              ; preds = %251
  %283 = icmp sgt i32 %281, 0
  %284 = select i1 %283, i32 %281, i32 0
  br label %286

285:                                              ; preds = %251
  br label %286

286:                                              ; preds = %251, %251, %282, %285
  %287 = phi i32 [ 0, %285 ], [ %284, %282 ], [ %281, %251 ], [ %281, %251 ]
  %288 = icmp eq i32 %89, 1
  br i1 %288, label %299, label %289

289:                                              ; preds = %286
  %290 = sdiv i32 %287, 2
  %291 = sext i32 %290 to i64
  %292 = tail call i1 @llvm.is.constant.i64(i64 %291) #17
  br i1 %292, label %299, label %293

293:                                              ; preds = %289
  %294 = icmp slt i32 %287, -1
  %295 = select i1 %294, i32 -2147483648, i32 2147483647
  %296 = add nsw i64 %291, 2147483648
  %297 = icmp ult i64 %296, 4294967296
  %298 = select i1 %297, i32 %290, i32 %295, !prof !2
  br label %299

299:                                              ; preds = %289, %293, %286
  %300 = phi i32 [ %287, %286 ], [ %298, %293 ], [ %290, %289 ]
  %301 = icmp slt i32 %300, 0
  %302 = select i1 %301, i32 -2147483648, i32 2147483647
  %303 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %300) #17
  %304 = extractvalue { i32, i1 } %303, 1
  %305 = extractvalue { i32, i1 } %303, 0
  %306 = select i1 %304, i32 %302, i32 %305, !prof !3
  br label %307

307:                                              ; preds = %80, %72, %88, %84, %76, %90, %299
  %308 = phi i32 [ %306, %299 ], [ %98, %90 ], [ %62, %76 ], [ %62, %84 ], [ 0, %88 ], [ %62, %72 ], [ %62, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17
  ret i32 %308
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid24GridAreaPositionForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERNS_10LayoutUnitES6_(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 113336795588871485128704
  %10 = icmp eq i96 %9, 75557863725914323419136
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  tail call void @_ZNK5blink10LayoutGrid33GridAreaPositionForOutOfFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERNS_10LayoutUnitES6_(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2, %"class.blink::LayoutUnit"* dereferenceable(4) %3, %"class.blink::LayoutUnit"* dereferenceable(4) %4)
  br label %13

12:                                               ; preds = %5
  tail call void @_ZNK5blink10LayoutGrid30GridAreaPositionForInFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERNS_10LayoutUnitES6_(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2, %"class.blink::LayoutUnit"* dereferenceable(4) %3, %"class.blink::LayoutUnit"* dereferenceable(4) %4)
  br label %13

13:                                               ; preds = %12, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid21RowAxisOffsetForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutUnit", align 4
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = bitcast %"class.blink::LayoutUnit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 0, i32* %6, align 4
  %7 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 113336795588871485128704
  %13 = icmp eq i96 %12, 75557863725914323419136
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  call void @_ZNK5blink10LayoutGrid33GridAreaPositionForOutOfFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERNS_10LayoutUnitES6_(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %3, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4) #17
  br label %16

15:                                               ; preds = %2
  call void @_ZNK5blink10LayoutGrid30GridAreaPositionForInFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERNS_10LayoutUnitES6_(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %3, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4) #17
  br label %16

16:                                               ; preds = %14, %15
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = icmp eq %"class.blink::ComputedStyle"* %19, null
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = select i1 %20, %"class.blink::ComputedStyle"* %22, %"class.blink::ComputedStyle"* %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8, !noalias !137
  %27 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  %28 = and i160 %26, 15211807202738752817960438464512
  %29 = icmp eq i160 %28, 0
  %30 = and i160 %26, 41538374868278621028243970633760768
  %31 = icmp eq i160 %30, 0
  %32 = select i1 %31, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %33 = select i1 %31, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %34 = select i1 %29, { i64, i64 } %33, { i64, i64 } %32
  %35 = select i1 %29, { i64, i64 } %33, { i64, i64 } %32
  %36 = extractvalue { i64, i64 } %34, 0
  %37 = extractvalue { i64, i64 } %35, 1
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %"class.blink::LayoutBoxModelObject"*
  %40 = and i64 %36, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %16
  %43 = bitcast i8* %38 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = add i64 %36, -1
  %46 = getelementptr i8, i8* %44, i64 %45
  %47 = bitcast i8* %46 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %48 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %47, align 8
  br label %51

49:                                               ; preds = %16
  %50 = inttoptr i64 %36 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %51

51:                                               ; preds = %42, %49
  %52 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %48, %42 ], [ %50, %49 ]
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %39) #17
  %54 = load i32, i32* %6, align 4
  %55 = icmp slt i32 %53, 0
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %53) #17
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !3
  %61 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %62 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %61 to i96*
  %63 = load i96, i96* %62, align 4
  %64 = trunc i96 %63 to i32
  %65 = icmp slt i32 %64, 0
  %66 = bitcast %"class.blink::ComputedStyle"** %21 to %"class.blink::ComputedStyleBase"**
  %67 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %67, i64 0, i32 7, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %68, align 8
  br i1 %65, label %70, label %78

70:                                               ; preds = %51
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %69, i64 0, i32 10, i32 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %305, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %69, i64 0, i32 11, i32 2
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %305, label %86

78:                                               ; preds = %51
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %69, i64 0, i32 12, i32 2
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %305, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %69, i64 0, i32 9, i32 2
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %305, label %86

86:                                               ; preds = %74, %82
  %87 = tail call i32 @_ZNK5blink10LayoutGrid23RowAxisPositionForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  switch i32 %87, label %305 [
    i32 0, label %88
    i32 1, label %97
    i32 2, label %97
  ]

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4
  %90 = tail call i32 @_ZNK5blink24GridTrackSizingAlgorithm22BaselineOffsetForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridTrackSizingAlgorithm"* %89, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0) #17
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %60, i32 %90) #17
  %94 = extractvalue { i32, i1 } %93, 1
  %95 = extractvalue { i32, i1 } %93, 0
  %96 = select i1 %94, i32 %92, i32 %95, !prof !3
  br label %305

97:                                               ; preds = %86, %86
  %98 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  %99 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %99, i64 0, i32 0, i32 9
  %101 = bitcast [20 x i8]* %100 to i160*
  %102 = load i160, i160* %101, align 8
  %103 = and i160 %102, 15211807202738752817960438464512
  %104 = icmp eq i160 %103, 0
  br i1 %98, label %105, label %180

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %107 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %108 = load i32, i32* %106, align 4
  %109 = load i32, i32* %107, align 4
  %110 = select i1 %104, i32 %108, i32 %109
  %111 = lshr i160 %102, 102
  %112 = trunc i160 %111 to i8
  %113 = and i8 %112, 3
  switch i8 %113, label %114 [
    i8 0, label %123
    i8 1, label %115
  ]

114:                                              ; preds = %105
  br label %115

115:                                              ; preds = %114, %105
  %116 = phi { i64, i64 } [ { i64 1033, i64 0 }, %114 ], [ { i64 1041, i64 0 }, %105 ]
  %117 = extractvalue { i64, i64 } %116, 0
  %118 = extractvalue { i64, i64 } %116, 1
  %119 = getelementptr inbounds i8, i8* %27, i64 %118
  %120 = bitcast i8* %119 to %"class.blink::LayoutBoxModelObject"*
  %121 = and i64 %117, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %133, label %123

123:                                              ; preds = %115, %105
  %124 = phi %"class.blink::LayoutBoxModelObject"* [ %120, %115 ], [ %17, %105 ]
  %125 = phi i8* [ %119, %115 ], [ %27, %105 ]
  %126 = phi i64 [ %117, %115 ], [ 1017, %105 ]
  %127 = bitcast i8* %125 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = add i64 %126, -1
  %130 = getelementptr i8, i8* %128, i64 %129
  %131 = bitcast i8* %130 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %132 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %131, align 8
  br label %135

133:                                              ; preds = %115
  %134 = inttoptr i64 %117 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %135

135:                                              ; preds = %133, %123
  %136 = phi %"class.blink::LayoutBoxModelObject"* [ %124, %123 ], [ %120, %133 ]
  %137 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %132, %123 ], [ %134, %133 ]
  %138 = tail call i32 %137(%"class.blink::LayoutBoxModelObject"* %136) #17
  %139 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %139, i64 0, i32 0, i32 9
  %141 = bitcast [20 x i8]* %140 to i160*
  %142 = load i160, i160* %141, align 8, !noalias !140
  %143 = lshr i160 %142, 102
  %144 = trunc i160 %143 to i8
  %145 = and i8 %144, 3
  switch i8 %145, label %146 [
    i8 0, label %155
    i8 1, label %147
  ]

146:                                              ; preds = %135
  br label %147

147:                                              ; preds = %146, %135
  %148 = phi { i64, i64 } [ { i64 1041, i64 0 }, %146 ], [ { i64 1033, i64 0 }, %135 ]
  %149 = extractvalue { i64, i64 } %148, 0
  %150 = extractvalue { i64, i64 } %148, 1
  %151 = getelementptr inbounds i8, i8* %27, i64 %150
  %152 = bitcast i8* %151 to %"class.blink::LayoutBoxModelObject"*
  %153 = and i64 %149, 1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %165, label %155

155:                                              ; preds = %147, %135
  %156 = phi %"class.blink::LayoutBoxModelObject"* [ %152, %147 ], [ %17, %135 ]
  %157 = phi i8* [ %151, %147 ], [ %27, %135 ]
  %158 = phi i64 [ %149, %147 ], [ 1025, %135 ]
  %159 = bitcast i8* %157 to i8**
  %160 = load i8*, i8** %159, align 8
  %161 = add i64 %158, -1
  %162 = getelementptr i8, i8* %160, i64 %161
  %163 = bitcast i8* %162 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %164 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %163, align 8
  br label %167

165:                                              ; preds = %147
  %166 = inttoptr i64 %149 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %167

167:                                              ; preds = %155, %165
  %168 = phi %"class.blink::LayoutBoxModelObject"* [ %156, %155 ], [ %152, %165 ]
  %169 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %164, %155 ], [ %166, %165 ]
  %170 = tail call i32 %169(%"class.blink::LayoutBoxModelObject"* %168) #17
  %171 = icmp slt i32 %170, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %138, i32 %170) #17
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !3
  %177 = icmp slt i32 %176, 0
  %178 = select i1 %177, i32 -2147483648, i32 2147483647
  %179 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %110, i32 %176) #17
  br label %249

180:                                              ; preds = %97
  %181 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %182 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %183 = load i32, i32* %181, align 4
  %184 = load i32, i32* %182, align 4
  %185 = select i1 %104, i32 %183, i32 %184
  %186 = and i160 %102, 41538374868278621028243970633760768
  %187 = icmp eq i160 %186, 0
  %188 = select i1 %187, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %189 = select i1 %187, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %190 = select i1 %104, { i64, i64 } %189, { i64, i64 } %188
  %191 = select i1 %104, { i64, i64 } %189, { i64, i64 } %188
  %192 = extractvalue { i64, i64 } %190, 0
  %193 = extractvalue { i64, i64 } %191, 1
  %194 = getelementptr inbounds i8, i8* %27, i64 %193
  %195 = bitcast i8* %194 to %"class.blink::LayoutBoxModelObject"*
  %196 = and i64 %192, 1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %205, label %198

198:                                              ; preds = %180
  %199 = bitcast i8* %194 to i8**
  %200 = load i8*, i8** %199, align 8
  %201 = add i64 %192, -1
  %202 = getelementptr i8, i8* %200, i64 %201
  %203 = bitcast i8* %202 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %204 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %203, align 8
  br label %207

205:                                              ; preds = %180
  %206 = inttoptr i64 %192 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %204, %198 ], [ %206, %205 ]
  %209 = tail call i32 %208(%"class.blink::LayoutBoxModelObject"* %195) #17
  %210 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %211 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %210, i64 0, i32 0, i32 9
  %212 = bitcast [20 x i8]* %211 to i160*
  %213 = load i160, i160* %212, align 8, !noalias !143
  %214 = and i160 %213, 15211807202738752817960438464512
  %215 = icmp eq i160 %214, 0
  %216 = and i160 %213, 41538374868278621028243970633760768
  %217 = icmp eq i160 %216, 0
  %218 = select i1 %217, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %219 = select i1 %217, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %220 = select i1 %215, { i64, i64 } %219, { i64, i64 } %218
  %221 = select i1 %215, { i64, i64 } %219, { i64, i64 } %218
  %222 = extractvalue { i64, i64 } %220, 0
  %223 = extractvalue { i64, i64 } %221, 1
  %224 = getelementptr inbounds i8, i8* %27, i64 %223
  %225 = bitcast i8* %224 to %"class.blink::LayoutBoxModelObject"*
  %226 = and i64 %222, 1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %235, label %228

228:                                              ; preds = %207
  %229 = bitcast i8* %224 to i8**
  %230 = load i8*, i8** %229, align 8
  %231 = add i64 %222, -1
  %232 = getelementptr i8, i8* %230, i64 %231
  %233 = bitcast i8* %232 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %234 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %233, align 8
  br label %237

235:                                              ; preds = %207
  %236 = inttoptr i64 %222 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %237

237:                                              ; preds = %228, %235
  %238 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %234, %228 ], [ %236, %235 ]
  %239 = tail call i32 %238(%"class.blink::LayoutBoxModelObject"* %225) #17
  %240 = icmp slt i32 %239, 0
  %241 = select i1 %240, i32 -2147483648, i32 2147483647
  %242 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %209, i32 %239) #17
  %243 = extractvalue { i32, i1 } %242, 1
  %244 = extractvalue { i32, i1 } %242, 0
  %245 = select i1 %243, i32 %241, i32 %244, !prof !3
  %246 = icmp slt i32 %245, 0
  %247 = select i1 %246, i32 -2147483648, i32 2147483647
  %248 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %185, i32 %245) #17
  br label %249

249:                                              ; preds = %237, %167
  %250 = phi { i32, i1 } [ %248, %237 ], [ %179, %167 ]
  %251 = phi i32 [ %247, %237 ], [ %178, %167 ]
  %252 = extractvalue { i32, i1 } %250, 1
  %253 = extractvalue { i32, i1 } %250, 0
  %254 = select i1 %252, i32 %251, i32 %253
  %255 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %256 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %257 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %258 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %259 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %258, align 8
  %260 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %259, i64 92
  %261 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %260, align 8
  %262 = tail call zeroext i1 %261(%"class.blink::LayoutObject"* %256, i32 39) #17
  %263 = select i1 %262, i32 7, i32 3
  %264 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %257, i32 %263, %"class.blink::ComputedStyle"* %255) #17
  %265 = lshr i32 %264, 5
  %266 = and i32 %265, 3
  %267 = load i32, i32* %8, align 4
  %268 = icmp sgt i32 %54, -1
  %269 = select i1 %268, i32 -2147483648, i32 2147483647
  %270 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %267, i32 %54) #17
  %271 = extractvalue { i32, i1 } %270, 1
  %272 = extractvalue { i32, i1 } %270, 0
  %273 = select i1 %271, i32 %269, i32 %272, !prof !3
  %274 = icmp sgt i32 %254, -1
  %275 = select i1 %274, i32 -2147483648, i32 2147483647
  %276 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %273, i32 %254) #17
  %277 = extractvalue { i32, i1 } %276, 1
  %278 = extractvalue { i32, i1 } %276, 0
  %279 = select i1 %277, i32 %275, i32 %278, !prof !3
  switch i32 %266, label %283 [
    i32 2, label %280
    i32 1, label %284
    i32 0, label %284
  ]

280:                                              ; preds = %249
  %281 = icmp sgt i32 %279, 0
  %282 = select i1 %281, i32 %279, i32 0
  br label %284

283:                                              ; preds = %249
  br label %284

284:                                              ; preds = %249, %249, %280, %283
  %285 = phi i32 [ 0, %283 ], [ %282, %280 ], [ %279, %249 ], [ %279, %249 ]
  %286 = icmp eq i32 %87, 1
  br i1 %286, label %297, label %287

287:                                              ; preds = %284
  %288 = sdiv i32 %285, 2
  %289 = sext i32 %288 to i64
  %290 = tail call i1 @llvm.is.constant.i64(i64 %289) #17
  br i1 %290, label %297, label %291

291:                                              ; preds = %287
  %292 = icmp slt i32 %285, -1
  %293 = select i1 %292, i32 -2147483648, i32 2147483647
  %294 = add nsw i64 %289, 2147483648
  %295 = icmp ult i64 %294, 4294967296
  %296 = select i1 %295, i32 %288, i32 %293, !prof !2
  br label %297

297:                                              ; preds = %287, %291, %284
  %298 = phi i32 [ %285, %284 ], [ %296, %291 ], [ %288, %287 ]
  %299 = icmp slt i32 %298, 0
  %300 = select i1 %299, i32 -2147483648, i32 2147483647
  %301 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %60, i32 %298) #17
  %302 = extractvalue { i32, i1 } %301, 1
  %303 = extractvalue { i32, i1 } %301, 0
  %304 = select i1 %302, i32 %300, i32 %303, !prof !3
  br label %305

305:                                              ; preds = %78, %70, %86, %82, %74, %88, %297
  %306 = phi i32 [ %304, %297 ], [ %96, %88 ], [ %60, %74 ], [ %60, %82 ], [ 0, %86 ], [ %60, %70 ], [ %60, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17
  ret i32 %306
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid28ResolveAutoStartGridPositionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %130, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  br i1 %11, label %130, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Grid"*, %"class.blink::Grid"** %13, align 8
  %15 = bitcast %"class.blink::Grid"* %14 to i64 (%"class.blink::Grid"*, i32)***
  %16 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %15, align 8
  %17 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %16, align 8
  %18 = tail call i64 %17(%"class.blink::Grid"* %14, i32 1) #17
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %12
  %21 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %15, align 8
  %22 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %21, align 8
  %23 = tail call i64 %22(%"class.blink::Grid"* %14, i32 0) #17
  br label %28

24:                                               ; preds = %12
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %26 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %14, i32 0) #17
  %27 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %25, i64 %26) #17
  br label %28

28:                                               ; preds = %20, %24
  %29 = phi i64 [ %23, %20 ], [ %27, %24 ]
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %31 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %41, !prof !5

33:                                               ; preds = %28
  %34 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %38 = and i16 %37, -512
  %39 = or i16 %38, 64
  store i16 %39, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %40 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %41

41:                                               ; preds = %28, %33, %36
  %42 = tail call i32 @_ZNK5blink13ComputedStyle30ResolvedJustifyContentPositionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %30, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  switch i32 %42, label %67 [
    i32 5, label %43
    i32 4, label %82
  ]

43:                                               ; preds = %41
  %44 = trunc i64 %29 to i32
  %45 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %46 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %45, i32 %44) #17
  %47 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %49 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %48 to i96*
  %50 = load i96, i96* %49, align 4
  %51 = trunc i96 %50 to i32
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %43
  %54 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %47) #17
  br label %57

55:                                               ; preds = %43
  %56 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %47) #17
  br label %57

57:                                               ; preds = %53, %55
  %58 = phi i32 [ %54, %53 ], [ %56, %55 ]
  %59 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %46, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %58, -1
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %60, i32 %58) #17
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !3
  br label %130

67:                                               ; preds = %41
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %69 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %79, !prof !5

71:                                               ; preds = %67
  %72 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %71
  %75 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %76 = and i16 %75, -512
  %77 = or i16 %76, 64
  store i16 %77, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %78 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %79

79:                                               ; preds = %67, %71, %74
  %80 = tail call i32 @_ZNK5blink13ComputedStyle34ResolvedJustifyContentDistributionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %68, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  %81 = icmp eq i32 %80, 4
  br i1 %81, label %82, label %130

82:                                               ; preds = %41, %79
  %83 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %84 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %83, i32 0) #17
  %85 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8
  %90 = and i160 %89, 15211807202738752817960438464512
  %91 = icmp eq i160 %90, 0
  %92 = bitcast %"class.blink::LayoutGrid"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %93 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %92, align 8
  br i1 %91, label %94, label %105

94:                                               ; preds = %82
  %95 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, i64 124
  %96 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %95, align 8
  %97 = tail call i32 %96(%"class.blink::LayoutBoxModelObject"* %85) #17
  %98 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %92, align 8
  %99 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %98, i64 120
  %100 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %99, align 8
  %101 = tail call i32 %100(%"class.blink::LayoutBoxModelObject"* %85) #17
  %102 = icmp slt i32 %101, 0
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %101) #17
  br label %116

105:                                              ; preds = %82
  %106 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, i64 122
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  %108 = tail call i32 %107(%"class.blink::LayoutBoxModelObject"* %85) #17
  %109 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %92, align 8
  %110 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %109, i64 118
  %111 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %110, align 8
  %112 = tail call i32 %111(%"class.blink::LayoutBoxModelObject"* %85) #17
  %113 = icmp slt i32 %112, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %112) #17
  br label %116

116:                                              ; preds = %94, %105
  %117 = phi { i32, i1 } [ %104, %94 ], [ %115, %105 ]
  %118 = phi i32 [ %103, %94 ], [ %114, %105 ]
  %119 = extractvalue { i32, i1 } %117, 1
  %120 = extractvalue { i32, i1 } %117, 0
  %121 = select i1 %119, i32 %118, i32 %120
  %122 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %84, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp sgt i32 %121, -1
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %123, i32 %121) #17
  %127 = extractvalue { i32, i1 } %126, 1
  %128 = extractvalue { i32, i1 } %126, 0
  %129 = select i1 %127, i32 %125, i32 %128, !prof !3
  br label %130

130:                                              ; preds = %79, %2, %4, %57, %116
  %131 = phi i32 [ %129, %116 ], [ %66, %57 ], [ 0, %4 ], [ 0, %2 ], [ 0, %79 ]
  ret i32 %131
}

declare i32 @_ZNK5blink13ComputedStyle30ResolvedJustifyContentPositionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"*, %"class.blink::StyleContentAlignmentData"* dereferenceable(4)) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle34ResolvedJustifyContentDistributionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"*, %"class.blink::StyleContentAlignmentData"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid26ResolveAutoEndGridPositionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = trunc i96 %8 to i32
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %5) #17
  br label %163

13:                                               ; preds = %4
  %14 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %5) #17
  br label %163

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 41538374868278621028243970633760768
  %22 = icmp eq i160 %21, 0
  br i1 %22, label %23, label %34

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = trunc i96 %27 to i32
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %23
  %31 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %24) #17
  br label %163

32:                                               ; preds = %23
  %33 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %24) #17
  br label %163

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Grid"*, %"class.blink::Grid"** %35, align 8
  %37 = bitcast %"class.blink::Grid"* %36 to i64 (%"class.blink::Grid"*, i32)***
  %38 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %37, align 8
  %39 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %38, align 8
  %40 = tail call i64 %39(%"class.blink::Grid"* %36, i32 1) #17
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %34
  %43 = load i64 (%"class.blink::Grid"*, i32)**, i64 (%"class.blink::Grid"*, i32)*** %37, align 8
  %44 = load i64 (%"class.blink::Grid"*, i32)*, i64 (%"class.blink::Grid"*, i32)** %43, align 8
  %45 = tail call i64 %44(%"class.blink::Grid"* %36, i32 0) #17
  br label %50

46:                                               ; preds = %34
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %48 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %36, i32 0) #17
  %49 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %47, i64 %48) #17
  br label %50

50:                                               ; preds = %42, %46
  %51 = phi i64 [ %45, %42 ], [ %49, %46 ]
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %53 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %63, !prof !5

55:                                               ; preds = %50
  %56 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %60 = and i16 %59, -512
  %61 = or i16 %60, 64
  store i16 %61, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %62 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %63

63:                                               ; preds = %50, %55, %58
  %64 = tail call i32 @_ZNK5blink13ComputedStyle30ResolvedJustifyContentPositionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %52, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  switch i32 %64, label %71 [
    i32 5, label %65
    i32 4, label %86
  ]

65:                                               ; preds = %63
  %66 = trunc i64 %51 to i32
  %67 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %68 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %67, i32 %66) #17
  %69 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br label %163

71:                                               ; preds = %63
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %73 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %83, !prof !5

75:                                               ; preds = %71
  %76 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %80 = and i16 %79, -512
  %81 = or i16 %80, 64
  store i16 %81, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %82 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %83

83:                                               ; preds = %71, %75, %78
  %84 = tail call i32 @_ZNK5blink13ComputedStyle34ResolvedJustifyContentDistributionERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %72, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  %85 = icmp eq i32 %84, 4
  br i1 %85, label %86, label %152

86:                                               ; preds = %63, %83
  %87 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %88 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %87, i32 0) #17
  %89 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %90, i64 0, i32 0, i32 9
  %92 = bitcast [20 x i8]* %91 to i160*
  %93 = load i160, i160* %92, align 8
  %94 = and i160 %93, 15211807202738752817960438464512
  %95 = icmp eq i160 %94, 0
  %96 = bitcast %"class.blink::LayoutGrid"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %97 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %96, align 8
  br i1 %95, label %98, label %109

98:                                               ; preds = %86
  %99 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %97, i64 124
  %100 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %99, align 8
  %101 = tail call i32 %100(%"class.blink::LayoutBoxModelObject"* %89) #17
  %102 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %96, align 8
  %103 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %102, i64 120
  %104 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %103, align 8
  %105 = tail call i32 %104(%"class.blink::LayoutBoxModelObject"* %89) #17
  %106 = icmp slt i32 %105, 0
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %105) #17
  br label %120

109:                                              ; preds = %86
  %110 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %97, i64 122
  %111 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %110, align 8
  %112 = tail call i32 %111(%"class.blink::LayoutBoxModelObject"* %89) #17
  %113 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %96, align 8
  %114 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %113, i64 118
  %115 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %114, align 8
  %116 = tail call i32 %115(%"class.blink::LayoutBoxModelObject"* %89) #17
  %117 = icmp slt i32 %116, 0
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %116) #17
  br label %120

120:                                              ; preds = %98, %109
  %121 = phi { i32, i1 } [ %108, %98 ], [ %119, %109 ]
  %122 = phi i32 [ %107, %98 ], [ %118, %109 ]
  %123 = extractvalue { i32, i1 } %121, 1
  %124 = extractvalue { i32, i1 } %121, 0
  %125 = select i1 %123, i32 %122, i32 %124
  %126 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %88, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %125, -1
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %127, i32 %125) #17
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !3
  %134 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %136 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %135 to i96*
  %137 = load i96, i96* %136, align 4
  %138 = trunc i96 %137 to i32
  %139 = icmp slt i32 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %120
  %141 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %134) #17
  br label %144

142:                                              ; preds = %120
  %143 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %134) #17
  br label %144

144:                                              ; preds = %140, %142
  %145 = phi i32 [ %141, %140 ], [ %143, %142 ]
  %146 = icmp slt i32 %145, 0
  %147 = select i1 %146, i32 -2147483648, i32 2147483647
  %148 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %133, i32 %145) #17
  %149 = extractvalue { i32, i1 } %148, 1
  %150 = extractvalue { i32, i1 } %148, 0
  %151 = select i1 %149, i32 %147, i32 %150, !prof !3
  br label %163

152:                                              ; preds = %83
  %153 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %155 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %154 to i96*
  %156 = load i96, i96* %155, align 4
  %157 = trunc i96 %156 to i32
  %158 = icmp slt i32 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %152
  %160 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %153) #17
  br label %163

161:                                              ; preds = %152
  %162 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %153) #17
  br label %163

163:                                              ; preds = %161, %159, %32, %30, %13, %11, %65, %144
  %164 = phi i32 [ %70, %65 ], [ %151, %144 ], [ %12, %11 ], [ %14, %13 ], [ %31, %30 ], [ %33, %32 ], [ %160, %159 ], [ %162, %161 ]
  ret i32 %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink10LayoutGrid27AutoRepeatCountForDirectionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Grid"*, %"class.blink::Grid"** %3, align 8
  %5 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %4, i32 %1) #17
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid30LogicalOffsetForOutOfFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionENS_10LayoutUnitE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %2, 0
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = trunc i96 %10 to i32
  %12 = icmp slt i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 7, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %13, align 8
  br i1 %5, label %15, label %32

15:                                               ; preds = %4
  br i1 %12, label %16, label %24

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %14, i64 0, i32 8, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %49

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %14, i64 0, i32 17, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %377, label %49

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %14, i64 0, i32 18, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %49

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %14, i64 0, i32 7, i32 2
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %377, label %49

32:                                               ; preds = %4
  br i1 %12, label %33, label %41

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %14, i64 0, i32 18, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %14, i64 0, i32 7, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %377, label %49

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %14, i64 0, i32 8, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %14, i64 0, i32 17, i32 2
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %377, label %49

49:                                               ; preds = %41, %33, %24, %16, %37, %28, %20, %45
  %50 = tail call i32 @_ZN5blink15GridLayoutUtils26FlowAwareDirectionForChildERKNS_10LayoutGridERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #17
  %51 = icmp eq i32 %50, 0
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = and i160 %55, 15211807202738752817960438464512
  %57 = icmp eq i160 %56, 0
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = load i32, i32* %58, align 4
  %62 = select i1 %51, i32 %60, i32 %61
  %63 = select i1 %51, i32 %61, i32 %60
  %64 = select i1 %57, i32 %62, i32 %63
  %65 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %67 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %67, i64 0, i32 0, i32 9
  %69 = bitcast [20 x i8]* %68 to i160*
  %70 = load i160, i160* %69, align 8
  br i1 %5, label %71, label %84

71:                                               ; preds = %49
  %72 = and i160 %70, 15211807202738752817960438464512
  %73 = icmp eq i160 %72, 0
  %74 = bitcast %"class.blink::LayoutGrid"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %74, align 8
  br i1 %73, label %76, label %80

76:                                               ; preds = %71
  %77 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %75, i64 124
  %78 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %77, align 8
  %79 = tail call i32 %78(%"class.blink::LayoutBoxModelObject"* %65) #17
  br label %110

80:                                               ; preds = %71
  %81 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %75, i64 122
  %82 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %81, align 8
  %83 = tail call i32 %82(%"class.blink::LayoutBoxModelObject"* %65) #17
  br label %110

84:                                               ; preds = %49
  %85 = lshr i160 %70, 102
  %86 = trunc i160 %85 to i8
  %87 = and i8 %86, 3
  %88 = bitcast %"class.blink::LayoutGrid"* %0 to i8*
  switch i8 %87, label %89 [
    i8 0, label %98
    i8 1, label %90
  ]

89:                                               ; preds = %84
  br label %90

90:                                               ; preds = %89, %84
  %91 = phi { i64, i64 } [ { i64 993, i64 0 }, %89 ], [ { i64 1001, i64 0 }, %84 ]
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds i8, i8* %88, i64 %93
  %95 = bitcast i8* %94 to %"class.blink::LayoutBoxModelObject"*
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %90, %84
  %99 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %90 ], [ %65, %84 ]
  %100 = phi i8* [ %94, %90 ], [ %88, %84 ]
  %101 = phi i64 [ %92, %90 ], [ 977, %84 ]
  %102 = bitcast i8* %100 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %101, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %142

108:                                              ; preds = %90
  %109 = inttoptr i64 %92 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %142

110:                                              ; preds = %80, %76
  %111 = phi i32 [ %83, %80 ], [ %79, %76 ]
  %112 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %113 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %66, align 8
  %114 = icmp eq %"class.blink::ComputedStyle"* %113, null
  %115 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %116 = select i1 %114, %"class.blink::ComputedStyle"* %115, %"class.blink::ComputedStyle"* %113
  %117 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %116, i64 0, i32 0, i32 9
  %118 = bitcast [20 x i8]* %117 to i160*
  %119 = load i160, i160* %118, align 8, !noalias !146
  %120 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  %121 = and i160 %119, 15211807202738752817960438464512
  %122 = icmp eq i160 %121, 0
  %123 = select i1 %122, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %124 = extractvalue { i64, i64 } %123, 1
  %125 = getelementptr inbounds i8, i8* %120, i64 %124
  %126 = bitcast i8* %125 to %"class.blink::LayoutBoxModelObject"*
  %127 = extractvalue { i64, i64 } %123, 0
  %128 = and i64 %127, 1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %137, label %130

130:                                              ; preds = %110
  %131 = bitcast i8* %125 to i8**
  %132 = load i8*, i8** %131, align 8
  %133 = add i64 %127, -1
  %134 = getelementptr i8, i8* %132, i64 %133
  %135 = bitcast i8* %134 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %136 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %135, align 8
  br label %139

137:                                              ; preds = %110
  %138 = inttoptr i64 %127 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %139

139:                                              ; preds = %130, %137
  %140 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %136, %130 ], [ %138, %137 ]
  %141 = tail call i32 %140(%"class.blink::LayoutBoxModelObject"* %126) #17
  br label %183

142:                                              ; preds = %98, %108
  %143 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %98 ], [ %95, %108 ]
  %144 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %98 ], [ %109, %108 ]
  %145 = tail call i32 %144(%"class.blink::LayoutBoxModelObject"* %143) #17
  %146 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %147 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %66, align 8
  %148 = icmp eq %"class.blink::ComputedStyle"* %147, null
  %149 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %150 = select i1 %148, %"class.blink::ComputedStyle"* %149, %"class.blink::ComputedStyle"* %147
  %151 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %150, i64 0, i32 0, i32 9
  %152 = bitcast [20 x i8]* %151 to i160*
  %153 = load i160, i160* %152, align 8, !noalias !149
  %154 = lshr i160 %153, 102
  %155 = trunc i160 %154 to i8
  %156 = and i8 %155, 3
  %157 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %156, label %158 [
    i8 0, label %167
    i8 1, label %159
  ]

158:                                              ; preds = %142
  br label %159

159:                                              ; preds = %158, %142
  %160 = phi { i64, i64 } [ { i64 1033, i64 0 }, %158 ], [ { i64 1041, i64 0 }, %142 ]
  %161 = extractvalue { i64, i64 } %160, 0
  %162 = extractvalue { i64, i64 } %160, 1
  %163 = getelementptr inbounds i8, i8* %157, i64 %162
  %164 = bitcast i8* %163 to %"class.blink::LayoutBoxModelObject"*
  %165 = and i64 %161, 1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %177, label %167

167:                                              ; preds = %159, %142
  %168 = phi %"class.blink::LayoutBoxModelObject"* [ %164, %159 ], [ %146, %142 ]
  %169 = phi i8* [ %163, %159 ], [ %157, %142 ]
  %170 = phi i64 [ %161, %159 ], [ 1017, %142 ]
  %171 = bitcast i8* %169 to i8**
  %172 = load i8*, i8** %171, align 8
  %173 = add i64 %170, -1
  %174 = getelementptr i8, i8* %172, i64 %173
  %175 = bitcast i8* %174 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %176 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %175, align 8
  br label %179

177:                                              ; preds = %159
  %178 = inttoptr i64 %161 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %179

179:                                              ; preds = %167, %177
  %180 = phi %"class.blink::LayoutBoxModelObject"* [ %168, %167 ], [ %164, %177 ]
  %181 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %176, %167 ], [ %178, %177 ]
  %182 = tail call i32 %181(%"class.blink::LayoutBoxModelObject"* %180) #17
  br label %183

183:                                              ; preds = %179, %139
  %184 = phi %"class.blink::LayoutBoxModelObject"* [ %146, %179 ], [ %112, %139 ]
  %185 = phi i32 [ %145, %179 ], [ %111, %139 ]
  %186 = phi i32 [ %182, %179 ], [ %141, %139 ]
  %187 = icmp sgt i32 %185, -1
  %188 = select i1 %187, i32 -2147483648, i32 2147483647
  %189 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %64, i32 %185) #17
  %190 = extractvalue { i32, i1 } %189, 1
  %191 = extractvalue { i32, i1 } %189, 0
  %192 = select i1 %190, i32 %188, i32 %191, !prof !3
  %193 = icmp sgt i32 %186, -1
  %194 = select i1 %193, i32 -2147483648, i32 2147483647
  %195 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %192, i32 %186) #17
  %196 = extractvalue { i32, i1 } %195, 1
  %197 = extractvalue { i32, i1 } %195, 0
  %198 = select i1 %196, i32 %194, i32 %197, !prof !3
  br i1 %5, label %199, label %377

199:                                              ; preds = %183
  %200 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %66, align 8
  %201 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %200, i64 0, i32 0, i32 9
  %202 = bitcast [20 x i8]* %201 to i160*
  %203 = load i160, i160* %202, align 8
  %204 = and i160 %203, 41538374868278621028243970633760768
  %205 = icmp eq i160 %204, 0
  br i1 %205, label %377, label %206

206:                                              ; preds = %199
  %207 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %208 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %207, i64 0, i32 0, i32 9
  %209 = bitcast [20 x i8]* %208 to i160*
  %210 = load i160, i160* %209, align 8
  %211 = and i160 %210, 15211807202738752817960438464512
  %212 = icmp eq i160 %211, 0
  br i1 %51, label %213, label %283

213:                                              ; preds = %206
  %214 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %215 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %216 = load i32, i32* %214, align 4
  %217 = load i32, i32* %215, align 4
  %218 = select i1 %212, i32 %216, i32 %217
  %219 = bitcast %"class.blink::LayoutBoxModelObject"* %184 to i8*
  %220 = and i160 %210, 41538374868278621028243970633760768
  %221 = icmp eq i160 %220, 0
  %222 = select i1 %221, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %223 = select i1 %221, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %224 = select i1 %212, { i64, i64 } %223, { i64, i64 } %222
  %225 = select i1 %212, { i64, i64 } %223, { i64, i64 } %222
  %226 = extractvalue { i64, i64 } %224, 0
  %227 = extractvalue { i64, i64 } %225, 1
  %228 = getelementptr inbounds i8, i8* %219, i64 %227
  %229 = bitcast i8* %228 to %"class.blink::LayoutBoxModelObject"*
  %230 = and i64 %226, 1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %239, label %232

232:                                              ; preds = %213
  %233 = bitcast i8* %228 to i8**
  %234 = load i8*, i8** %233, align 8
  %235 = add i64 %226, -1
  %236 = getelementptr i8, i8* %234, i64 %235
  %237 = bitcast i8* %236 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %238 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %237, align 8
  br label %241

239:                                              ; preds = %213
  %240 = inttoptr i64 %226 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %238, %232 ], [ %240, %239 ]
  %243 = tail call i32 %242(%"class.blink::LayoutBoxModelObject"* %229) #17
  %244 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %245 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %244, i64 0, i32 0, i32 9
  %246 = bitcast [20 x i8]* %245 to i160*
  %247 = load i160, i160* %246, align 8, !noalias !152
  %248 = and i160 %247, 15211807202738752817960438464512
  %249 = icmp eq i160 %248, 0
  %250 = and i160 %247, 41538374868278621028243970633760768
  %251 = icmp eq i160 %250, 0
  %252 = select i1 %251, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %253 = select i1 %251, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %254 = select i1 %249, { i64, i64 } %253, { i64, i64 } %252
  %255 = select i1 %249, { i64, i64 } %253, { i64, i64 } %252
  %256 = extractvalue { i64, i64 } %254, 0
  %257 = extractvalue { i64, i64 } %255, 1
  %258 = getelementptr inbounds i8, i8* %219, i64 %257
  %259 = bitcast i8* %258 to %"class.blink::LayoutBoxModelObject"*
  %260 = and i64 %256, 1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %269, label %262

262:                                              ; preds = %241
  %263 = bitcast i8* %258 to i8**
  %264 = load i8*, i8** %263, align 8
  %265 = add i64 %256, -1
  %266 = getelementptr i8, i8* %264, i64 %265
  %267 = bitcast i8* %266 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %268 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %267, align 8
  br label %271

269:                                              ; preds = %241
  %270 = inttoptr i64 %256 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %271

271:                                              ; preds = %262, %269
  %272 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %268, %262 ], [ %270, %269 ]
  %273 = tail call i32 %272(%"class.blink::LayoutBoxModelObject"* %259) #17
  %274 = icmp slt i32 %273, 0
  %275 = select i1 %274, i32 -2147483648, i32 2147483647
  %276 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %243, i32 %273) #17
  %277 = extractvalue { i32, i1 } %276, 1
  %278 = extractvalue { i32, i1 } %276, 0
  %279 = select i1 %277, i32 %275, i32 %278, !prof !3
  %280 = icmp slt i32 %279, 0
  %281 = select i1 %280, i32 -2147483648, i32 2147483647
  %282 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %218, i32 %279) #17
  br label %359

283:                                              ; preds = %206
  %284 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %285 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %286 = load i32, i32* %284, align 4
  %287 = load i32, i32* %285, align 4
  %288 = select i1 %212, i32 %286, i32 %287
  %289 = lshr i160 %210, 102
  %290 = trunc i160 %289 to i8
  %291 = and i8 %290, 3
  %292 = bitcast %"class.blink::LayoutBoxModelObject"* %184 to i8*
  switch i8 %291, label %293 [
    i8 0, label %302
    i8 1, label %294
  ]

293:                                              ; preds = %283
  br label %294

294:                                              ; preds = %293, %283
  %295 = phi { i64, i64 } [ { i64 1033, i64 0 }, %293 ], [ { i64 1041, i64 0 }, %283 ]
  %296 = extractvalue { i64, i64 } %295, 0
  %297 = extractvalue { i64, i64 } %295, 1
  %298 = getelementptr inbounds i8, i8* %292, i64 %297
  %299 = bitcast i8* %298 to %"class.blink::LayoutBoxModelObject"*
  %300 = and i64 %296, 1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %312, label %302

302:                                              ; preds = %294, %283
  %303 = phi %"class.blink::LayoutBoxModelObject"* [ %299, %294 ], [ %184, %283 ]
  %304 = phi i8* [ %298, %294 ], [ %292, %283 ]
  %305 = phi i64 [ %296, %294 ], [ 1017, %283 ]
  %306 = bitcast i8* %304 to i8**
  %307 = load i8*, i8** %306, align 8
  %308 = add i64 %305, -1
  %309 = getelementptr i8, i8* %307, i64 %308
  %310 = bitcast i8* %309 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %311 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %310, align 8
  br label %314

312:                                              ; preds = %294
  %313 = inttoptr i64 %296 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %314

314:                                              ; preds = %312, %302
  %315 = phi %"class.blink::LayoutBoxModelObject"* [ %303, %302 ], [ %299, %312 ]
  %316 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %311, %302 ], [ %313, %312 ]
  %317 = tail call i32 %316(%"class.blink::LayoutBoxModelObject"* %315) #17
  %318 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %319 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %318, i64 0, i32 0, i32 9
  %320 = bitcast [20 x i8]* %319 to i160*
  %321 = load i160, i160* %320, align 8, !noalias !155
  %322 = lshr i160 %321, 102
  %323 = trunc i160 %322 to i8
  %324 = and i8 %323, 3
  switch i8 %324, label %325 [
    i8 0, label %334
    i8 1, label %326
  ]

325:                                              ; preds = %314
  br label %326

326:                                              ; preds = %325, %314
  %327 = phi { i64, i64 } [ { i64 1041, i64 0 }, %325 ], [ { i64 1033, i64 0 }, %314 ]
  %328 = extractvalue { i64, i64 } %327, 0
  %329 = extractvalue { i64, i64 } %327, 1
  %330 = getelementptr inbounds i8, i8* %292, i64 %329
  %331 = bitcast i8* %330 to %"class.blink::LayoutBoxModelObject"*
  %332 = and i64 %328, 1
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %344, label %334

334:                                              ; preds = %326, %314
  %335 = phi %"class.blink::LayoutBoxModelObject"* [ %331, %326 ], [ %184, %314 ]
  %336 = phi i8* [ %330, %326 ], [ %292, %314 ]
  %337 = phi i64 [ %328, %326 ], [ 1025, %314 ]
  %338 = bitcast i8* %336 to i8**
  %339 = load i8*, i8** %338, align 8
  %340 = add i64 %337, -1
  %341 = getelementptr i8, i8* %339, i64 %340
  %342 = bitcast i8* %341 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %343 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %342, align 8
  br label %346

344:                                              ; preds = %326
  %345 = inttoptr i64 %328 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %346

346:                                              ; preds = %334, %344
  %347 = phi %"class.blink::LayoutBoxModelObject"* [ %335, %334 ], [ %331, %344 ]
  %348 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %343, %334 ], [ %345, %344 ]
  %349 = tail call i32 %348(%"class.blink::LayoutBoxModelObject"* %347) #17
  %350 = icmp slt i32 %349, 0
  %351 = select i1 %350, i32 -2147483648, i32 2147483647
  %352 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %317, i32 %349) #17
  %353 = extractvalue { i32, i1 } %352, 1
  %354 = extractvalue { i32, i1 } %352, 0
  %355 = select i1 %353, i32 %351, i32 %354, !prof !3
  %356 = icmp slt i32 %355, 0
  %357 = select i1 %356, i32 -2147483648, i32 2147483647
  %358 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %288, i32 %355) #17
  br label %359

359:                                              ; preds = %346, %271
  %360 = phi { i32, i1 } [ %358, %346 ], [ %282, %271 ]
  %361 = phi i32 [ %357, %346 ], [ %281, %271 ]
  %362 = extractvalue { i32, i1 } %360, 1
  %363 = extractvalue { i32, i1 } %360, 0
  %364 = select i1 %362, i32 %361, i32 %363
  %365 = icmp sgt i32 %198, -1
  %366 = select i1 %365, i32 -2147483648, i32 2147483647
  %367 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %198) #17
  %368 = extractvalue { i32, i1 } %367, 1
  %369 = extractvalue { i32, i1 } %367, 0
  %370 = select i1 %368, i32 %366, i32 %369, !prof !3
  %371 = icmp sgt i32 %364, -1
  %372 = select i1 %371, i32 -2147483648, i32 2147483647
  %373 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %370, i32 %364) #17
  %374 = extractvalue { i32, i1 } %373, 1
  %375 = extractvalue { i32, i1 } %373, 0
  %376 = select i1 %374, i32 %372, i32 %375, !prof !3
  br label %377

377:                                              ; preds = %359, %199, %183, %45, %20, %28, %37
  %378 = phi i32 [ 0, %37 ], [ 0, %28 ], [ 0, %20 ], [ 0, %45 ], [ %376, %359 ], [ %198, %199 ], [ %198, %183 ]
  ret i32 %378
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid33GridAreaPositionForOutOfFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERNS_10LayoutUnitES6_(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::LayoutBox"*, align 8
  %7 = tail call i32 @_ZN5blink15GridLayoutUtils42OverrideContainingBlockContentSizeForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #17
  %8 = icmp eq i32 %2, 0
  %9 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 9
  %10 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 10
  %11 = select i1 %8, %"class.WTF::HashMap.1068"* %9, %"class.WTF::HashMap.1068"* %10
  %12 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  br i1 %8, label %18, label %31

18:                                               ; preds = %5
  %19 = and i160 %17, 15211807202738752817960438464512
  %20 = icmp eq i160 %19, 0
  %21 = bitcast %"class.blink::LayoutGrid"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %22 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %21, align 8
  br i1 %20, label %23, label %27

23:                                               ; preds = %18
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %22, i64 124
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %12) #17
  br label %61

27:                                               ; preds = %18
  %28 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %22, i64 122
  %29 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %28, align 8
  %30 = tail call i32 %29(%"class.blink::LayoutBoxModelObject"* %12) #17
  br label %61

31:                                               ; preds = %5
  %32 = lshr i160 %17, 102
  %33 = trunc i160 %32 to i8
  %34 = and i8 %33, 3
  %35 = bitcast %"class.blink::LayoutGrid"* %0 to i8*
  switch i8 %34, label %36 [
    i8 0, label %45
    i8 1, label %37
  ]

36:                                               ; preds = %31
  br label %37

37:                                               ; preds = %36, %31
  %38 = phi { i64, i64 } [ { i64 993, i64 0 }, %36 ], [ { i64 1001, i64 0 }, %31 ]
  %39 = extractvalue { i64, i64 } %38, 0
  %40 = extractvalue { i64, i64 } %38, 1
  %41 = getelementptr inbounds i8, i8* %35, i64 %40
  %42 = bitcast i8* %41 to %"class.blink::LayoutBoxModelObject"*
  %43 = and i64 %39, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %37, %31
  %46 = phi %"class.blink::LayoutBoxModelObject"* [ %42, %37 ], [ %12, %31 ]
  %47 = phi i8* [ %41, %37 ], [ %35, %31 ]
  %48 = phi i64 [ %39, %37 ], [ 977, %31 ]
  %49 = bitcast i8* %47 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = add i64 %48, -1
  %52 = getelementptr i8, i8* %50, i64 %51
  %53 = bitcast i8* %52 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %53, align 8
  br label %57

55:                                               ; preds = %37
  %56 = inttoptr i64 %39 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %57

57:                                               ; preds = %45, %55
  %58 = phi %"class.blink::LayoutBoxModelObject"* [ %46, %45 ], [ %42, %55 ]
  %59 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %54, %45 ], [ %56, %55 ]
  %60 = tail call i32 %59(%"class.blink::LayoutBoxModelObject"* %58) #17
  br label %61

61:                                               ; preds = %27, %23, %57
  %62 = phi i32 [ %60, %57 ], [ %26, %23 ], [ %30, %27 ]
  %63 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %62, i32* %63, align 4
  %64 = bitcast %"class.blink::LayoutBox"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #17
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %6, align 8
  %65 = call { i8, i64 } @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEN4absl8optionalImEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSA_IS7_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.1068"* %11, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %6)
  %66 = extractvalue { i8, i64 } %65, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #17
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %61
  %69 = extractvalue { i8, i64 } %65, 1
  %70 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %71 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5
  %72 = select i1 %8, %"class.WTF::Vector.1063"* %70, %"class.WTF::Vector.1063"* %71
  %73 = trunc i64 %69 to i32
  %74 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %72, i32 %73) #17
  %75 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %63, align 4
  br label %77

77:                                               ; preds = %61, %68
  %78 = call i32 @_ZNK5blink10LayoutGrid30LogicalOffsetForOutOfFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionENS_10LayoutUnitE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2, i32 %7)
  %79 = load i32, i32* %63, align 4
  %80 = icmp slt i32 %78, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %79, i32 %78) #17
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !3
  store i32 %85, i32* %63, align 4
  %86 = icmp slt i32 %7, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %85, i32 %7) #17
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !3
  %92 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 %91, i32* %92, align 4
  ret void
}

declare i32 @_ZN5blink15GridLayoutUtils42OverrideContainingBlockContentSizeForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, i64 } @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEN4absl8optionalImEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSA_IS7_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.1068"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.1068", %"class.WTF::HashMap.1068"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1072"* %4, null
  br i1 %5, label %75, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.1068", %"class.WTF::HashMap.1068"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutBox"*
  %38 = icmp eq %"class.blink::LayoutBox"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutBox"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutBox"* %54, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %6
  %68 = phi %"struct.WTF::KeyValuePair.1072"* [ %34, %6 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.1072"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = load i64, i64* %73, align 8
  br label %75

75:                                               ; preds = %53, %2, %67, %70
  %76 = phi i8 [ %72, %70 ], [ 0, %67 ], [ 0, %2 ], [ 0, %53 ]
  %77 = phi i64 [ %74, %70 ], [ undef, %67 ], [ undef, %2 ], [ undef, %53 ]
  %78 = insertvalue { i8, i64 } undef, i8 %76, 0
  %79 = insertvalue { i8, i64 } %78, i64 %77, 1
  ret { i8, i64 } %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid30GridAreaPositionForInFlowChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionERNS_10LayoutUnitES6_(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 4, i32 12
  %7 = load %"class.blink::Grid"*, %"class.blink::Grid"** %6, align 8
  %8 = tail call { i64, i32 } @_ZNK5blink4Grid12GridItemSpanERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %7, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #17
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %2, 0
  %14 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5
  %16 = select i1 %13, %"class.WTF::Vector.1063"* %14, %"class.WTF::Vector.1063"* %15
  %17 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %16, i32 %10) #17
  %18 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %19, align 4
  %21 = ashr i64 %9, 32
  %22 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %16, i32 %12) #17
  %23 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %16, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -1
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %21, %29
  br i1 %30, label %31, label %89

31:                                               ; preds = %5
  %32 = tail call zeroext i1 @_ZNK5blink4Grid24HasAutoRepeatEmptyTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %7, i32 %2) #17
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = tail call zeroext i1 @_ZNK5blink4Grid22IsEmptyAutoRepeatTrackENS_24GridTrackSizingDirectionEm(%"class.blink::Grid"* %7, i32 %2, i64 %21) #17
  br i1 %34, label %89, label %35

35:                                               ; preds = %33, %31
  %36 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %37 = bitcast %"class.blink::ComputedStyle"** %36 to %"class.blink::ComputedStyleBase"**
  %38 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %44, i64 0, i32 18
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %44, i64 0, i32 19
  %47 = select i1 %13, %"class.absl::optional.461"* %45, %"class.absl::optional.461"* %46
  %48 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 4, !range !4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %68, label %51

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %47, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %53 = getelementptr inbounds %"class.absl::optional.461", %"class.absl::optional.461"* %47, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %54 = load i8, i8* %53, align 1
  switch i8 %54, label %61 [
    i8 8, label %55
    i8 1, label %55
  ]

55:                                               ; preds = %51, %51
  %56 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  br i1 %13, label %57, label %59

57:                                               ; preds = %55
  %58 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %56) #17
  br label %61

59:                                               ; preds = %55
  %60 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %56) #17
  br label %61

61:                                               ; preds = %59, %57, %51
  %62 = phi i32 [ 0, %51 ], [ %58, %57 ], [ %60, %59 ]
  %63 = load i8, i8* %48, align 4, !range !4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %61
  tail call void @llvm.trap() #17
  unreachable

66:                                               ; preds = %61
  %67 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %52, i32 %62) #17
  br label %68

68:                                               ; preds = %35, %66
  %69 = phi i32 [ %67, %66 ], [ 0, %35 ]
  %70 = icmp eq i32 %2, 1
  %71 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 8, i32 1
  %72 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 7, i32 1
  %73 = select i1 %70, %"class.blink::LayoutUnit"* %71, %"class.blink::LayoutUnit"* %72
  %74 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %75) #17
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !3
  %82 = load i32, i32* %24, align 4
  %83 = icmp sgt i32 %81, -1
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %82, i32 %81) #17
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !3
  store i32 %88, i32* %24, align 4
  br label %89

89:                                               ; preds = %68, %33, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid14GridItemOffsetENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* nocapture readonly, i32) unnamed_addr #6 align 2 {
  %3 = icmp eq i32 %1, 1
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 8, i32 1
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 7, i32 1
  %6 = select i1 %3, %"class.blink::LayoutUnit"* %4, %"class.blink::LayoutUnit"* %5
  %7 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid16ContentAlignmentENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %16, !prof !5

8:                                                ; preds = %2
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = load i16, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %13 = and i16 %12, -512
  %14 = or i16 %13, 64
  store i16 %14, i16* getelementptr inbounds (%"class.blink::StyleContentAlignmentData", %"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior, i64 0, i32 0), align 4
  %15 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (%"class.blink::StyleContentAlignmentData"* @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior to i8*)) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %16

16:                                               ; preds = %2, %8, %11
  br i1 %3, label %17, label %19

17:                                               ; preds = %16
  %18 = tail call i32 @_ZNK5blink13ComputedStyle22ResolvedJustifyContentERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %5, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %21

19:                                               ; preds = %16
  %20 = tail call i32 @_ZNK5blink13ComputedStyle20ResolvedAlignContentERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"* %5, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) @_ZZN5blink10LayoutGrid30ContentAlignmentNormalBehaviorEvE15kNormalBehavior) #17
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi i32 [ %18, %17 ], [ %20, %19 ]
  ret i32 %22
}

declare i32 @_ZNK5blink13ComputedStyle22ResolvedJustifyContentERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"*, %"class.blink::StyleContentAlignmentData"* dereferenceable(4)) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle20ResolvedAlignContentERKNS_25StyleContentAlignmentDataE(%"class.blink::ComputedStyle"*, %"class.blink::StyleContentAlignmentData"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid31TranslateOutOfFlowRTLCoordinateERKNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutBox"*, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 9
  %6 = bitcast %"class.blink::LayoutBox"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %4, align 8
  %7 = call { i8, i64 } @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxEN4absl8optionalImEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSA_IS7_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.1068"* %5, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4)
  %8 = extractvalue { i8, i64 } %7, 0
  %9 = icmp eq i8 %8, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  br i1 %9, label %24, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %12 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %11, i32 0) #17
  %13 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, -1
  %18 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %11, i32 %17) #17
  %19 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %14, 0
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %14) #17
  br label %83

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 15211807202738752817960438464512
  %32 = icmp eq i160 %31, 0
  %33 = bitcast %"class.blink::LayoutGrid"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  br i1 %32, label %35, label %39

35:                                               ; preds = %24
  %36 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 124
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  %38 = call i32 %37(%"class.blink::LayoutBoxModelObject"* %25) #17
  br label %43

39:                                               ; preds = %24
  %40 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 122
  %41 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %40, align 8
  %42 = call i32 %41(%"class.blink::LayoutBoxModelObject"* %25) #17
  br label %43

43:                                               ; preds = %35, %39
  %44 = phi i32 [ %38, %35 ], [ %42, %39 ]
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8
  %49 = and i160 %48, 15211807202738752817960438464512
  %50 = icmp eq i160 %49, 0
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  br i1 %50, label %52, label %56

52:                                               ; preds = %43
  %53 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, i64 125
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %53, align 8
  %55 = call i32 %54(%"class.blink::LayoutBoxModelObject"* %25) #17
  br label %60

56:                                               ; preds = %43
  %57 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, i64 123
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  %59 = call i32 %58(%"class.blink::LayoutBoxModelObject"* %25) #17
  br label %60

60:                                               ; preds = %52, %56
  %61 = phi i32 [ %55, %52 ], [ %59, %56 ]
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %44, i32 %61) #17
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !3
  %68 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %70 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %69 to i96*
  %71 = load i96, i96* %70, align 4
  %72 = trunc i96 %71 to i32
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %60
  %75 = call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %68) #17
  br label %78

76:                                               ; preds = %60
  %77 = call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %68) #17
  br label %78

78:                                               ; preds = %74, %76
  %79 = phi i32 [ %75, %74 ], [ %77, %76 ]
  %80 = icmp slt i32 %79, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %79) #17
  br label %83

83:                                               ; preds = %78, %10
  %84 = phi { i32, i1 } [ %82, %78 ], [ %23, %10 ]
  %85 = phi i32 [ %81, %78 ], [ %22, %10 ]
  %86 = extractvalue { i32, i1 } %84, 1
  %87 = extractvalue { i32, i1 } %84, 0
  %88 = select i1 %86, i32 %85, i32 %87
  %89 = icmp sgt i32 %2, -1
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %88, i32 %2) #17
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid22TranslateRTLCoordinateENS_10LayoutUnitE(%"class.blink::LayoutGrid"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %4 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %3, i32 0) #17
  %5 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %3, i32 %9) #17
  %11 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %6, 0
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %6) #17
  %16 = extractvalue { i32, i1 } %15, 1
  %17 = extractvalue { i32, i1 } %15, 0
  %18 = select i1 %16, i32 %14, i32 %17, !prof !3
  %19 = icmp sgt i32 %1, -1
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %18, i32 %1) #17
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !3
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutGrid21LogicalOffsetForChildERKNS_9LayoutBoxENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call i32 @_ZNK5blink10LayoutGrid24ColumnAxisOffsetForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %70

7:                                                ; preds = %3
  %8 = tail call i32 @_ZNK5blink10LayoutGrid21RowAxisOffsetForChildERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %9 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 41538374868278621028243970633760768
  %15 = icmp eq i160 %14, 0
  br i1 %15, label %70, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 113336795588871485128704
  %21 = icmp eq i96 %20, 75557863725914323419136
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i32 @_ZNK5blink10LayoutGrid31TranslateOutOfFlowRTLCoordinateERKNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutGrid"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %8)
  br label %47

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %26 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %25, i32 0) #17
  %27 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  %32 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %25, i32 %31) #17
  %33 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %28, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %28) #17
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !3
  %41 = icmp sgt i32 %8, -1
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 %8) #17
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !3
  br label %47

47:                                               ; preds = %24, %22
  %48 = phi i32 [ %23, %22 ], [ %46, %24 ]
  %49 = tail call zeroext i1 @_ZN5blink15GridLayoutUtils17IsOrthogonalChildERKNS_10LayoutGridERKNS_9LayoutBoxE(%"class.blink::LayoutGrid"* dereferenceable(632) %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #17
  %50 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %51 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %51, i64 0, i32 0, i32 9
  %53 = bitcast [20 x i8]* %52 to i160*
  %54 = load i160, i160* %53, align 8
  %55 = and i160 %54, 15211807202738752817960438464512
  %56 = icmp eq i160 %55, 0
  %57 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %57, align 4
  %61 = select i1 %49, i32 %59, i32 %60
  %62 = select i1 %49, i32 %60, i32 %59
  %63 = select i1 %56, i32 %61, i32 %62
  %64 = icmp sgt i32 %63, -1
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %63) #17
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !3
  br label %70

70:                                               ; preds = %7, %47, %5
  %71 = phi i32 [ %6, %5 ], [ %8, %7 ], [ %69, %47 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10LayoutGrid23GridAreaLogicalPositionERKNS_8GridAreaE(%"class.blink::LayoutGrid"*, %"struct.blink::GridArea"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %1, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %3, i32 %5) #17
  %7 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"struct.blink::GridArea", %"struct.blink::GridArea"* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %9, i32 %11) #17
  %13 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 41538374868278621028243970633760768
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %44, label %22

22:                                               ; preds = %2
  %23 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %9, i32 0) #17
  %24 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -1
  %29 = tail call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"* %9, i32 %28) #17
  %30 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %25, 0
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 %25) #17
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !3
  %38 = icmp sgt i32 %14, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %37, i32 %14) #17
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !3
  br label %44

44:                                               ; preds = %2, %22
  %45 = phi i32 [ %43, %22 ], [ %14, %2 ]
  %46 = zext i32 %8 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %45 to i64
  %49 = or i64 %47, %48
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutGrid13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutGrid"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::BlockPainter", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Grid"*, %"class.blink::Grid"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %6, i64 0, i32 8, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::BlockPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = bitcast %"class.blink::BlockPainter"* %4 to %"class.blink::LayoutGrid"**
  store %"class.blink::LayoutGrid"* %0, %"class.blink::LayoutGrid"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::Grid", %"class.blink::Grid"* %6, i64 0, i32 1
  call void @_ZN5blink12BlockPainter23PaintChildrenAtomicallyERKNS_13OrderIteratorERKNS_9PaintInfoE(%"class.blink::BlockPainter"* nonnull %4, %"class.blink::OrderIterator"* dereferenceable(56) %13, %"struct.blink::PaintInfo"* %1) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %14

14:                                               ; preds = %3, %10
  ret void
}

declare void @_ZN5blink12BlockPainter23PaintChildrenAtomicallyERKNS_13OrderIteratorERKNS_9PaintInfoE(%"class.blink::BlockPainter"*, %"class.blink::OrderIterator"* dereferenceable(56), %"struct.blink::PaintInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10LayoutGrid27ExplicitGridEndForDirectionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Grid"*, %"class.blink::Grid"** %3, align 8
  %5 = tail call i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %4, i32 %1) #17
  %6 = icmp eq i32 %1, 1
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = load %"class.blink::Grid"*, %"class.blink::Grid"** %3, align 8
  %10 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %9, i32 %1) #17
  br i1 %6, label %11, label %13

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN5blink21GridPositionsResolver20ExplicitGridRowCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %8, i64 %10) #17
  br label %15

13:                                               ; preds = %2
  %14 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %8, i64 %10) #17
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi i64 [ %12, %11 ], [ %14, %13 ]
  %17 = add i64 %16, %5
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink10LayoutGrid29ExplicitGridStartForDirectionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Grid"*, %"class.blink::Grid"** %3, align 8
  %5 = tail call i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %4, i32 %1) #17
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZThn240_NK5blink10LayoutGrid27ExplicitGridEndForDirectionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 -1, i32 4, i32 13
  %4 = getelementptr inbounds %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %3, i64 31
  %5 = bitcast %"class.blink::LayoutGrid"** %4 to %"class.blink::Grid"**
  %6 = load %"class.blink::Grid"*, %"class.blink::Grid"** %5, align 8
  %7 = tail call i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %6, i32 %1) #17
  %8 = icmp eq i32 %1, 1
  %9 = getelementptr inbounds %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %3, i64 4
  %10 = bitcast %"class.blink::LayoutGrid"** %9 to %"class.blink::ComputedStyle"**
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = load %"class.blink::Grid"*, %"class.blink::Grid"** %5, align 8
  %13 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %12, i32 %1) #17
  br i1 %8, label %14, label %16

14:                                               ; preds = %2
  %15 = tail call i64 @_ZN5blink21GridPositionsResolver20ExplicitGridRowCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %11, i64 %13) #17
  br label %18

16:                                               ; preds = %2
  %17 = tail call i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* dereferenceable(104) %11, i64 %13) #17
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %20 = add i64 %19, %7
  ret i64 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZThn240_NK5blink10LayoutGrid14GridItemOffsetENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"* nocapture readonly, i32) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 -1, i32 4, i32 13
  %4 = bitcast %"class.blink::LayoutGrid"** %3 to %"class.blink::LayoutGrid"*
  %5 = icmp eq i32 %1, 1
  %6 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %4, i64 0, i32 8, i32 1
  %7 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %4, i64 0, i32 7, i32 1
  %8 = select i1 %5, %"class.blink::LayoutUnit"* %6, %"class.blink::LayoutUnit"* %7
  %9 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBlock"*, i8*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink10LayoutGrid7GetNameEv(%"class.blink::LayoutGrid"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #17
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1207959552
  %6 = icmp eq i96 %5, 1207959552
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock13IsLayoutBlockEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink10LayoutGrid23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutGrid"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 0, i32 2
  ret %"class.blink::LayoutNGGridInterface"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.971* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12UpdateLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1223"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE() unnamed_addr

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBox"*, %"class.WTF::Vector.1761"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlock"*, %"class.WTF::Vector.1762"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10LayoutGrid8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutGrid"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 10
  ret i1 %3
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15WillBeDestroyedEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !3

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #17
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #17
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !3
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15UpdateFromStyleEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #17
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !158

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #17
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !3
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !158

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #17
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !3

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #17
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #17
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #17
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #17
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #17
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #17
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #17
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #17
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #17
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.1761"*, i32) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.1761"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !159
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1033, i64 0 }, %12 ], [ { i64 1041, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1017, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #17
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !162
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1041, i64 0 }, %12 ], [ { i64 1033, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1025, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #17
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10BreakAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11BreakBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox13StartPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox11EndPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #17
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #17
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #17
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #17
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #17
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN5blink11LayoutBlock15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink11LayoutBlock15CurrentFragmentEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::NGPhysicalBoxFragment"* null
}

declare void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"*, i1 zeroext, i1 zeroext, i32) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock21ComputeVisualOverflowEb(%"class.blink::LayoutBlock"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10LayoutGrid15ColumnPositionsEv(%"class.WTF::Vector.1063"* noalias sret, %"class.blink::LayoutGrid"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %9) #17
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #17
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 2
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = icmp ne i8* %11, null
  br label %17

17:                                               ; preds = %8, %2
  %18 = phi i8* [ null, %2 ], [ %11, %8 ]
  %19 = phi i1 [ false, %2 ], [ %16, %8 ]
  %20 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = icmp ne %"class.blink::LayoutUnit"* %24, null
  %26 = and i1 %19, %25
  br i1 %26, label %27, label %31, !prof !2

27:                                               ; preds = %17
  %28 = zext i32 %21 to i64
  %29 = bitcast %"class.blink::LayoutUnit"* %24 to i8*
  %30 = shl nuw nsw i64 %28, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* nonnull align 4 %29, i64 %30, i1 false) #17
  br label %31

31:                                               ; preds = %17, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10LayoutGrid12RowPositionsEv(%"class.WTF::Vector.1063"* noalias sret, %"class.blink::LayoutGrid"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %9) #17
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #17
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 2
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = icmp ne i8* %11, null
  br label %17

17:                                               ; preds = %8, %2
  %18 = phi i8* [ null, %2 ], [ %11, %8 ]
  %19 = phi i1 [ false, %2 ], [ %16, %8 ]
  %20 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = icmp ne %"class.blink::LayoutUnit"* %24, null
  %26 = and i1 %19, %25
  br i1 %26, label %27, label %31, !prof !2

27:                                               ; preds = %17
  %28 = zext i32 %21 to i64
  %29 = bitcast %"class.blink::LayoutUnit"* %24 to i8*
  %30 = shl nuw nsw i64 %28, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* nonnull align 4 %29, i64 %30, i1 false) #17
  br label %31

31:                                               ; preds = %17, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZThn240_NK5blink10LayoutGrid29ExplicitGridStartForDirectionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 -1, i32 4, i32 13
  %4 = getelementptr inbounds %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %3, i64 31
  %5 = bitcast %"class.blink::LayoutGrid"** %4 to %"class.blink::Grid"**
  %6 = load %"class.blink::Grid"*, %"class.blink::Grid"** %5, align 8
  %7 = tail call i64 @_ZNK5blink4Grid17ExplicitGridStartENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %6, i32 %1) #17
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZThn240_NK5blink10LayoutGrid27AutoRepeatCountForDirectionENS_24GridTrackSizingDirectionE(%"class.blink::LayoutGrid"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %0, i64 -1, i32 4, i32 13
  %4 = getelementptr inbounds %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %3, i64 31
  %5 = bitcast %"class.blink::LayoutGrid"** %4 to %"class.blink::Grid"**
  %6 = load %"class.blink::Grid"*, %"class.blink::Grid"** %5, align 8
  %7 = tail call i64 @_ZNK5blink4Grid16AutoRepeatTracksENS_24GridTrackSizingDirectionE(%"class.blink::Grid"* %6, i32 %1) #17
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn240_NK5blink10LayoutGrid12RowPositionsEv(%"class.WTF::Vector.1063"* noalias sret, %"class.blink::LayoutGrid"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 -1, i32 4, i32 13
  %4 = bitcast %"class.blink::LayoutGrid"** %3 to %"class.blink::LayoutGrid"*
  %5 = getelementptr inbounds %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %3, i64 67
  %6 = bitcast %"class.blink::LayoutGrid"** %5 to i32*
  %7 = load i32, i32* %6, align 8, !noalias !165
  %8 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %8, align 8, !alias.scope !165
  %9 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8, !alias.scope !165
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %12) #17, !noalias !165
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #17, !noalias !165
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8, !alias.scope !165
  %17 = lshr i64 %13, 2
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8, !alias.scope !165
  %19 = icmp ne i8* %14, null
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi i8* [ null, %2 ], [ %14, %11 ]
  %22 = phi i1 [ false, %2 ], [ %19, %11 ]
  %23 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %4, i64 0, i32 5, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4, !noalias !165
  %25 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %24, i32* %25, align 4, !alias.scope !165
  %26 = getelementptr inbounds %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %3, i64 66
  %27 = bitcast %"class.blink::LayoutGrid"** %26 to %"class.blink::LayoutUnit"**
  %28 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %27, align 8, !noalias !165
  %29 = icmp ne %"class.blink::LayoutUnit"* %28, null
  %30 = and i1 %22, %29
  br i1 %30, label %31, label %35, !prof !2

31:                                               ; preds = %20
  %32 = zext i32 %24 to i64
  %33 = bitcast %"class.blink::LayoutUnit"* %28 to i8*
  %34 = shl nuw nsw i64 %32, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* nonnull align 4 %33, i64 %34, i1 false) #17, !noalias !165
  br label %35

35:                                               ; preds = %20, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn240_NK5blink10LayoutGrid15ColumnPositionsEv(%"class.WTF::Vector.1063"* noalias sret, %"class.blink::LayoutGrid"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %1, i64 -1, i32 4, i32 13
  %4 = bitcast %"class.blink::LayoutGrid"** %3 to %"class.blink::LayoutGrid"*
  %5 = getelementptr inbounds %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %3, i64 69
  %6 = bitcast %"class.blink::LayoutGrid"** %5 to i32*
  %7 = load i32, i32* %6, align 8, !noalias !168
  %8 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %8, align 8, !alias.scope !168
  %9 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8, !alias.scope !168
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %12) #17, !noalias !168
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #17, !noalias !168
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8, !alias.scope !168
  %17 = lshr i64 %13, 2
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8, !alias.scope !168
  %19 = icmp ne i8* %14, null
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi i8* [ null, %2 ], [ %14, %11 ]
  %22 = phi i1 [ false, %2 ], [ %19, %11 ]
  %23 = getelementptr inbounds %"class.blink::LayoutGrid", %"class.blink::LayoutGrid"* %4, i64 0, i32 6, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4, !noalias !168
  %25 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %24, i32* %25, align 4, !alias.scope !168
  %26 = getelementptr inbounds %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %3, i64 68
  %27 = bitcast %"class.blink::LayoutGrid"** %26 to %"class.blink::LayoutUnit"**
  %28 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %27, align 8, !noalias !168
  %29 = icmp ne %"class.blink::LayoutUnit"* %28, null
  %30 = and i1 %22, %29
  br i1 %30, label %31, label %35, !prof !2

31:                                               ; preds = %20
  %32 = zext i32 %24 to i64
  %33 = bitcast %"class.blink::LayoutUnit"* %28 to i8*
  %34 = shl nuw nsw i64 %32, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* nonnull align 4 %33, i64 %34, i1 false) #17, !noalias !168
  br label %35

35:                                               ; preds = %20, %31
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21GridBaselineAlignmentD2Ev(%"class.blink::GridBaselineAlignment"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.1057"*, %"struct.WTF::KeyValuePair.1057"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.1057"* %3, null
  br i1 %4, label %53, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %51, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %48, %9
  %12 = phi i64 [ 0, %9 ], [ %49, %48 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.1057", %"struct.WTF::KeyValuePair.1057"* %3, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -2
  br i1 %15, label %48, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.1057", %"struct.WTF::KeyValuePair.1057"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::BaselineContext"*, %"class.blink::BaselineContext"** %17, align 8
  store %"class.blink::BaselineContext"* null, %"class.blink::BaselineContext"** %17, align 8
  %19 = icmp eq %"class.blink::BaselineContext"* %18, null
  br i1 %19, label %48, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %21, align 8
  %23 = icmp eq %"class.blink::BaselineGroup"* %22, null
  br i1 %23, label %46, label %24, !prof !2

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %18, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %43, label %28, !prof !3

28:                                               ; preds = %24
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %22, i64 %29
  br label %31

31:                                               ; preds = %38, %28
  %32 = phi %"class.blink::BaselineGroup"* [ %39, %38 ], [ %22, %28 ]
  %33 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %32, i64 0, i32 4, i32 0, i32 0
  %34 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %33, align 8
  %35 = icmp eq %"class.blink::LayoutBox"** %34, null
  br i1 %35, label %38, label %36, !prof !2

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::LayoutBox"** %34 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #17
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %33, align 8
  br label %38

38:                                               ; preds = %36, %31
  %39 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %32, i64 1
  %40 = icmp eq %"class.blink::BaselineGroup"* %39, %30
  br i1 %40, label %41, label %31

41:                                               ; preds = %38
  store i32 0, i32* %25, align 4
  %42 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %21, align 8
  br label %43

43:                                               ; preds = %41, %24
  %44 = phi %"class.blink::BaselineGroup"* [ %22, %24 ], [ %42, %41 ]
  %45 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %44, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #17
  br label %46

46:                                               ; preds = %43, %20
  %47 = bitcast %"class.blink::BaselineContext"* %18 to i8*
  tail call void @free(i8* %47) #17
  br label %48

48:                                               ; preds = %46, %16, %11
  %49 = add nuw nsw i64 %12, 1
  %50 = icmp eq i64 %49, %10
  br i1 %50, label %51, label %11

51:                                               ; preds = %48, %5
  %52 = bitcast %"struct.WTF::KeyValuePair.1057"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #17
  store %"struct.WTF::KeyValuePair.1057"* null, %"struct.WTF::KeyValuePair.1057"** %2, align 8
  br label %53

53:                                               ; preds = %1, %51
  %54 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 2, i32 0, i32 0
  %55 = load %"struct.WTF::KeyValuePair.1057"*, %"struct.WTF::KeyValuePair.1057"** %54, align 8
  %56 = icmp eq %"struct.WTF::KeyValuePair.1057"* %55, null
  br i1 %56, label %105, label %57, !prof !2

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 2, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %103, label %61

61:                                               ; preds = %57
  %62 = zext i32 %59 to i64
  br label %63

63:                                               ; preds = %100, %61
  %64 = phi i64 [ 0, %61 ], [ %101, %100 ]
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1057", %"struct.WTF::KeyValuePair.1057"* %55, i64 %64, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -2
  br i1 %67, label %100, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1057", %"struct.WTF::KeyValuePair.1057"* %55, i64 %64, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.blink::BaselineContext"*, %"class.blink::BaselineContext"** %69, align 8
  store %"class.blink::BaselineContext"* null, %"class.blink::BaselineContext"** %69, align 8
  %71 = icmp eq %"class.blink::BaselineContext"* %70, null
  br i1 %71, label %100, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %73, align 8
  %75 = icmp eq %"class.blink::BaselineGroup"* %74, null
  br i1 %75, label %98, label %76, !prof !2

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %70, i64 0, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %95, label %80, !prof !3

80:                                               ; preds = %76
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %74, i64 %81
  br label %83

83:                                               ; preds = %90, %80
  %84 = phi %"class.blink::BaselineGroup"* [ %91, %90 ], [ %74, %80 ]
  %85 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %84, i64 0, i32 4, i32 0, i32 0
  %86 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %85, align 8
  %87 = icmp eq %"class.blink::LayoutBox"** %86, null
  br i1 %87, label %90, label %88, !prof !2

88:                                               ; preds = %83
  %89 = bitcast %"class.blink::LayoutBox"** %86 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %89) #17
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %85, align 8
  br label %90

90:                                               ; preds = %88, %83
  %91 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %84, i64 1
  %92 = icmp eq %"class.blink::BaselineGroup"* %91, %82
  br i1 %92, label %93, label %83

93:                                               ; preds = %90
  store i32 0, i32* %77, align 4
  %94 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %73, align 8
  br label %95

95:                                               ; preds = %93, %76
  %96 = phi %"class.blink::BaselineGroup"* [ %74, %76 ], [ %94, %93 ]
  %97 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %96, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %97) #17
  br label %98

98:                                               ; preds = %95, %72
  %99 = bitcast %"class.blink::BaselineContext"* %70 to i8*
  tail call void @free(i8* %99) #17
  br label %100

100:                                              ; preds = %98, %68, %63
  %101 = add nuw nsw i64 %64, 1
  %102 = icmp eq i64 %101, %62
  br i1 %102, label %103, label %63

103:                                              ; preds = %100, %57
  %104 = bitcast %"struct.WTF::KeyValuePair.1057"* %55 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %104) #17
  store %"struct.WTF::KeyValuePair.1057"* null, %"struct.WTF::KeyValuePair.1057"** %54, align 8
  br label %105

105:                                              ; preds = %53, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1040"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.1040"* %0 to %"class.blink::GridTrack"**
  %3 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %2, align 8
  %4 = icmp eq %"class.blink::GridTrack"* %3, null
  br i1 %4, label %46, label %5, !prof !2

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::GridTrack"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.1040", %"class.WTF::ConditionalDestructor.1040"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.1040"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %44, label %11, !prof !3

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %38
  %15 = phi %"class.blink::GridTrack"* [ %39, %38 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %15, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %15, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %15, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #17
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %15, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %15, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #17
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %15, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %15, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #17
  br label %37

37:                                               ; preds = %35, %31
  store i8 0, i8* %16, align 8
  br label %38

38:                                               ; preds = %37, %14
  %39 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %15, i64 1
  %40 = icmp eq %"class.blink::GridTrack"* %39, %13
  br i1 %40, label %41, label %14

41:                                               ; preds = %38
  store i32 0, i32* %8, align 4
  %42 = bitcast %"class.WTF::ConditionalDestructor.1040"* %0 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %5
  %45 = phi i8* [ %43, %41 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #17
  store %"class.blink::GridTrack"* null, %"class.blink::GridTrack"** %2, align 8
  br label %46

46:                                               ; preds = %1, %44
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon* dereferenceable(16)) local_unnamed_addr #2 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #17
  %20 = tail call i8* @_Znwm(i64 192) #19
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #17
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #17
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #17
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #17
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #17
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #17
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #17
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #17
  %38 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #17
  %40 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #17
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #17
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #17
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #17
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #17
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #17
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #19
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #17
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !171

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !173

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !174

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #19
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #19, !noalias !175
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !175
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #19
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #17
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #17
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #17
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !3
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #17
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #17
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #17
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #17
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #17
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !3
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #17
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #17
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #10

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #17
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

declare %"class.WTF::ListHashSet"* @_ZNK5blink11LayoutBlock25PositionedObjectsInternalEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #13

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTFeqINS_6StringENS_6VectorImLj0ENS_18PartitionAllocatorEEENS_10StringHashENS_10HashTraitsIS1_EENS6_IS4_EES3_EEbRKNS_7HashMapIT_T0_T1_T2_T3_T4_EESI_(%"class.WTF::HashMap.487"* dereferenceable(24), %"class.WTF::HashMap.487"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.WTF::HashMap.487", %"class.WTF::HashMap.487"* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.WTF::HashMap.487", %"class.WTF::HashMap.487"* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %73

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.487", %"class.WTF::HashMap.487"* %0, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::HashMap.487", %"class.WTF::HashMap.487"* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %10, i64 %13
  %15 = getelementptr inbounds %"class.WTF::HashMap.487", %"class.WTF::HashMap.487"* %1, i64 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::HashMap.487", %"class.WTF::HashMap.487"* %1, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %16, i64 %19
  %21 = icmp eq i32 %4, 0
  br i1 %21, label %73, label %22

22:                                               ; preds = %8
  %23 = icmp eq i32 %12, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %28
  %25 = phi %"struct.WTF::KeyValuePair.491"* [ %29, %28 ], [ %10, %22 ]
  %26 = bitcast %"struct.WTF::KeyValuePair.491"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %31 [
    i64 -1, label %28
    i64 0, label %28
  ]

28:                                               ; preds = %24, %24
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %25, i64 1
  %30 = icmp eq %"struct.WTF::KeyValuePair.491"* %29, %14
  br i1 %30, label %73, label %24

31:                                               ; preds = %24, %22
  %32 = phi %"struct.WTF::KeyValuePair.491"* [ %10, %22 ], [ %25, %24 ]
  %33 = icmp eq %"struct.WTF::KeyValuePair.491"* %32, %14
  br i1 %33, label %73, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.WTF::HashMap.487", %"class.WTF::HashMap.487"* %1, i64 0, i32 0
  br label %36

36:                                               ; preds = %34, %71
  %37 = phi %"struct.WTF::KeyValuePair.491"* [ %32, %34 ], [ %65, %71 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %37, i64 0, i32 0
  %39 = tail call { %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E4findERKS1_(%"class.WTF::HashTable.488"* %35, %"class.WTF::String"* dereferenceable(8) %38) #17
  %40 = extractvalue { %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"* } %39, 0
  %41 = icmp eq %"struct.WTF::KeyValuePair.491"* %40, %20
  br i1 %41, label %73, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %37, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %40, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %37, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %40, i64 0, i32 1, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %73

50:                                               ; preds = %42
  %51 = icmp eq i32 %46, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %50
  %53 = bitcast %"class.WTF::Vector.1042"* %43 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast %"class.WTF::Vector.1042"* %44 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = zext i32 %46 to i64
  %58 = shl nuw nsw i64 %57, 3
  %59 = tail call i32 @bcmp(i8* %54, i8* %56, i64 %58) #17
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %52, %50
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %37, i64 1
  %63 = icmp eq %"struct.WTF::KeyValuePair.491"* %62, %14
  br i1 %63, label %73, label %64

64:                                               ; preds = %61, %68
  %65 = phi %"struct.WTF::KeyValuePair.491"* [ %69, %68 ], [ %62, %61 ]
  %66 = bitcast %"struct.WTF::KeyValuePair.491"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %71 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %64, %64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %65, i64 1
  %70 = icmp eq %"struct.WTF::KeyValuePair.491"* %69, %14
  br i1 %70, label %73, label %64

71:                                               ; preds = %64
  %72 = icmp eq %"struct.WTF::KeyValuePair.491"* %65, %14
  br i1 %72, label %73, label %36

73:                                               ; preds = %28, %61, %36, %42, %71, %52, %68, %8, %31, %2
  %74 = phi i1 [ false, %2 ], [ true, %31 ], [ true, %8 ], [ true, %68 ], [ true, %61 ], [ false, %36 ], [ false, %42 ], [ true, %71 ], [ false, %52 ], [ true, %28 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E4findERKS1_(%"class.WTF::HashTable.488"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.488", %"class.WTF::HashTable.488"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.491"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.488", %"class.WTF::HashTable.488"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.491"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.491"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.491"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.488", %"class.WTF::HashTable.488"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.491", %"struct.WTF::KeyValuePair.491"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.491"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.491"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"* } undef, %"struct.WTF::KeyValuePair.491"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"* } %77, %"struct.WTF::KeyValuePair.491"* %76, 1
  ret { %"struct.WTF::KeyValuePair.491"*, %"struct.WTF::KeyValuePair.491"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1016", %"class.WTF::Vector.1016"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.1016", %"class.WTF::Vector.1016"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1016", %"class.WTF::Vector.1016"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.1016", %"class.WTF::Vector.1016"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE4findERKm(%"class.WTF::HashTable.1012"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1015"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 4294967295
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair.1015"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.1015"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair.1015"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair.1015"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"* } undef, %"struct.WTF::KeyValuePair.1015"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"* } %77, %"struct.WTF::KeyValuePair.1015"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"* } %78
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1016"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1016", %"class.WTF::Vector.1016"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1016", %"class.WTF::Vector.1016"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1016", %"class.WTF::Vector.1016"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeImS0_EEEEmm(i64 %26) #17
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #17
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1016"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #17
  %47 = bitcast %"class.WTF::Vector.1016"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #17
  %51 = bitcast %"class.WTF::Vector.1016"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %56 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.1016", %"class.WTF::Vector.1016"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeImS0_EEEEmm(i64 %71) #17
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #17
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1016"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #17
  %87 = bitcast %"class.WTF::Vector.1016"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #17
  %91 = bitcast %"class.WTF::Vector.1016"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %100, i64 %103
  %105 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %104 to i8*
  %106 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #17
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeImS0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListImNS_18PartitionAllocatorEE6insertIRmEENS_30VectorBackedLinkedListIteratorIS2_EENS_35VectorBackedLinkedListConstIteratorIS2_EEOT_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %7, i32 0) #17
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %13, i32 %12) #17
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %41

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 0
  store i32 %16, i32* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  store i32 %12, i32* %25, align 4
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2
  %27 = load i64, i64* %3, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %22, %29
  br i1 %30, label %39, label %31, !prof !3

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %32, align 8
  %34 = zext i32 %22 to i64
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %33, i64 %34
  %36 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %23, i64 16, i1 false) #17
  %37 = load i32, i32* %21, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %21, align 4
  br label %40

39:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1016"* %13, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %5) #17
  br label %40

40:                                               ; preds = %31, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #17
  br label %48

41:                                               ; preds = %4
  %42 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %13, i32 %18) #17
  %43 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %17, align 8
  %45 = load i64, i64* %3, align 8
  %46 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %42, i64 0, i32 0
  store i32 %16, i32* %46, align 8
  store i32 %12, i32* %43, align 4
  %47 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %42, i64 0, i32 2
  store i64 %45, i64* %47, align 8
  br label %48

48:                                               ; preds = %41, %40
  %49 = phi i32 [ %22, %40 ], [ %18, %41 ]
  %50 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %13, i32 %16) #17
  %51 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %50, i64 0, i32 1
  store i32 %49, i32* %51, align 4
  %52 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %13, i32 %12) #17
  %53 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %52, i64 0, i32 0
  store i32 %49, i32* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %54, align 4
  %57 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeImNS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.1016"* %13, i32 %49) #17
  %58 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %57, 0
  %59 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %58, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1015"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERmRKjEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1012"*, i64* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1015"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1015"* @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1012"* %0, %"struct.WTF::KeyValuePair.1015"* null)
  %9 = load %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1015"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 4294967295
  br i1 %41, label %86, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair.1015"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair.1015"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %103, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, 4294967294
  %65 = select i1 %64, %"struct.WTF::KeyValuePair.1015"* %58, %"struct.WTF::KeyValuePair.1015"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 4294967295
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair.1015"* %65, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %65, i64 0, i32 0
  store i64 4294967295, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %65, i64 0, i32 1
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = add i32 %80, 2147483647
  %82 = and i32 %81, 2147483647
  %83 = and i32 %80, -2147483648
  %84 = or i32 %82, %83
  store i32 %84, i32* %79, align 8
  %85 = load i64, i64* %1, align 8
  br label %86

86:                                               ; preds = %10, %74, %76
  %87 = phi i64 [ %85, %76 ], [ %16, %74 ], [ %16, %10 ]
  %88 = phi %"struct.WTF::KeyValuePair.1015"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %88, i64 0, i32 0
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %88, i64 0, i32 1
  %91 = load i32, i32* %2, align 4
  store i32 %91, i32* %90, align 4
  %92 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %86
  %102 = tail call %"struct.WTF::KeyValuePair.1015"* @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1012"* %0, %"struct.WTF::KeyValuePair.1015"* %88)
  br label %103

103:                                              ; preds = %56, %86, %101
  %104 = phi i8 [ 1, %86 ], [ 1, %101 ], [ 0, %56 ]
  %105 = phi %"struct.WTF::KeyValuePair.1015"* [ %88, %86 ], [ %102, %101 ], [ %58, %56 ]
  %106 = insertvalue { %"struct.WTF::KeyValuePair.1015"*, i8 } undef, %"struct.WTF::KeyValuePair.1015"* %105, 0
  %107 = insertvalue { %"struct.WTF::KeyValuePair.1015"*, i8 } %106, i8 %104, 1
  ret { %"struct.WTF::KeyValuePair.1015"*, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1015"* @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1012"*, %"struct.WTF::KeyValuePair.1015"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairImjEEEEPKcv, i64 0, i64 0)) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1015"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %52, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %36, i64 %44, i32 0
  store i64 4294967295, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %36, i64 %44, i32 1
  store i32 0, i32* %47, align 8
  %48 = or i64 %44, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %36, i64 %48, i32 0
  store i64 4294967295, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %36, i64 %48, i32 1
  store i32 0, i32* %50, align 8
  %51 = add nuw nsw i64 %44, 2
  %52 = add i64 %45, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %38
  %55 = phi i64 [ 0, %38 ], [ %51, %43 ]
  %56 = icmp eq i64 %39, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %36, i64 %55, i32 0
  store i64 4294967295, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %36, i64 %55, i32 1
  store i32 0, i32* %59, align 8
  br label %60

60:                                               ; preds = %57, %54, %31
  %61 = call %"struct.WTF::KeyValuePair.1015"* @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable.1012"* %0, %"struct.WTF::KeyValuePair.1015"* %36, i32 %32, %"struct.WTF::KeyValuePair.1015"* %1) #17
  ret %"struct.WTF::KeyValuePair.1015"* %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1015"* @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable.1012"*, %"struct.WTF::KeyValuePair.1015"*, i32, %"struct.WTF::KeyValuePair.1015"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1012", align 8
  %6 = bitcast %"class.WTF::HashTable.1012"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1012"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1015"* %1, %"struct.WTF::KeyValuePair.1015"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1015"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1012"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1012"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1015"* %22 to i64
  br label %42

24:                                               ; preds = %65
  %25 = bitcast %"class.WTF::HashTable.1012"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1012"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %66, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1015"* [ null, %16 ], [ %69, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %67, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.1015"* %33

42:                                               ; preds = %21, %65
  %43 = phi i64 [ %66, %65 ], [ %23, %21 ]
  %44 = phi i32 [ %67, %65 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.1015"* [ %68, %65 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.1015"* [ %69, %65 ], [ null, %21 ]
  %47 = phi i32 [ %70, %65 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %49, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, 1
  %53 = icmp eq i64 %52, 4294967295
  br i1 %53, label %65, label %54

54:                                               ; preds = %42
  %55 = call { %"struct.WTF::KeyValuePair.1015"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.1012"* nonnull %5, i64* dereferenceable(8) %50) #17
  %56 = extractvalue { %"struct.WTF::KeyValuePair.1015"*, i8 } %55, 0
  %57 = bitcast %"struct.WTF::KeyValuePair.1015"* %56 to i8*
  %58 = bitcast %"struct.WTF::KeyValuePair.1015"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 16, i1 false) #17
  %59 = load %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"** %15, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %59, i64 %48
  %61 = icmp eq %"struct.WTF::KeyValuePair.1015"* %60, %3
  %62 = select i1 %61, %"struct.WTF::KeyValuePair.1015"* %56, %"struct.WTF::KeyValuePair.1015"* %46
  %63 = load i32, i32* %12, align 8
  %64 = ptrtoint %"struct.WTF::KeyValuePair.1015"* %59 to i64
  br label %65

65:                                               ; preds = %42, %54
  %66 = phi i64 [ %43, %42 ], [ %64, %54 ]
  %67 = phi i32 [ %44, %42 ], [ %63, %54 ]
  %68 = phi %"struct.WTF::KeyValuePair.1015"* [ %45, %42 ], [ %59, %54 ]
  %69 = phi %"struct.WTF::KeyValuePair.1015"* [ %46, %42 ], [ %62, %54 ]
  %70 = add i32 %47, 1
  %71 = icmp eq i32 %70, %67
  br i1 %71, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1015"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImjEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsIN5blink30OrderedTrackIndexSetHashTraitsENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.1012"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1015"*, %"struct.WTF::KeyValuePair.1015"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1012", %"class.WTF::HashTable.1012"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair.1015"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 4294967295
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair.1015"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair.1015"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair.1015"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.1015"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.1015"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, 4294967294
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair.1015"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1015", %"struct.WTF::KeyValuePair.1015"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 4294967295
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair.1015"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair.1015"*, i8 } undef, %"struct.WTF::KeyValuePair.1015"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair.1015"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair.1015"*, i8 } %83
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1511"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutBox"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutBox"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::LayoutBox"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64 %26) #17
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #17
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1511"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::LayoutBox"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::LayoutBox"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::LayoutBox"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #17
  %47 = bitcast %"class.WTF::Vector.1511"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #17
  %51 = bitcast %"class.WTF::Vector.1511"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::LayoutBox"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::LayoutBox"** %1 to i64
  %56 = ptrtoint %"class.blink::LayoutBox"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1511", %"class.WTF::Vector.1511"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::LayoutBox"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64 %71) #17
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #17
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1511"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::LayoutBox"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::LayoutBox"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #17
  %87 = bitcast %"class.WTF::Vector.1511"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #17
  %91 = bitcast %"class.WTF::Vector.1511"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::LayoutBox"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::LayoutBox"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::LayoutBox"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::LayoutBox"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %100, i64 %103
  %105 = bitcast %"class.blink::LayoutBox"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::LayoutBox"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1740"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjmEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable.1737"*, i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1740"*, %"struct.WTF::KeyValuePair.1740"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1740"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1740"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1737"* %0, %"struct.WTF::KeyValuePair.1740"* null)
  %9 = load %"struct.WTF::KeyValuePair.1740"*, %"struct.WTF::KeyValuePair.1740"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1740"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.1740"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.1740"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %97, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -2
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.1740"* %52, %"struct.WTF::KeyValuePair.1740"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.1740"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1740"* %59 to i64*
  store i64 4294967295, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.1740"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %81, i64 0, i32 1
  %84 = load i64, i64* %2, align 8
  %85 = trunc i64 %84 to i32
  store i32 %85, i32* %83, align 4
  %86 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, %88
  %92 = shl i32 %91, 1
  %93 = load i32, i32* %12, align 8
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %79
  %96 = tail call %"struct.WTF::KeyValuePair.1740"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1737"* %0, %"struct.WTF::KeyValuePair.1740"* %81)
  br label %97

97:                                               ; preds = %50, %79, %95
  %98 = phi i8 [ 1, %79 ], [ 1, %95 ], [ 0, %50 ]
  %99 = phi %"struct.WTF::KeyValuePair.1740"* [ %81, %79 ], [ %96, %95 ], [ %52, %50 ]
  %100 = insertvalue { %"struct.WTF::KeyValuePair.1740"*, i8 } undef, %"struct.WTF::KeyValuePair.1740"* %99, 0
  %101 = insertvalue { %"struct.WTF::KeyValuePair.1740"*, i8 } %100, i8 %98, 1
  ret { %"struct.WTF::KeyValuePair.1740"*, i8 } %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1740"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1737"*, %"struct.WTF::KeyValuePair.1740"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjjEEEEPKcv, i64 0, i64 0)) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1740"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %117, label %38

38:                                               ; preds = %31
  %39 = icmp ult i32 %32, 4
  br i1 %39, label %109, label %40

40:                                               ; preds = %38
  %41 = and i64 %33, 4294967292
  %42 = add nsw i64 %41, -4
  %43 = lshr exact i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp ult i64 %42, 28
  br i1 %46, label %94, label %47

47:                                               ; preds = %40
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %91, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %92, %49 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %50
  %53 = bitcast %"struct.WTF::KeyValuePair.1740"* %52 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %53, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %52, i64 2
  %55 = bitcast %"struct.WTF::KeyValuePair.1740"* %54 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %55, align 4
  %56 = or i64 %50, 4
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %56
  %58 = bitcast %"struct.WTF::KeyValuePair.1740"* %57 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %58, align 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %57, i64 2
  %60 = bitcast %"struct.WTF::KeyValuePair.1740"* %59 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %60, align 4
  %61 = or i64 %50, 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.1740"* %62 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %63, align 4
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %62, i64 2
  %65 = bitcast %"struct.WTF::KeyValuePair.1740"* %64 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %65, align 4
  %66 = or i64 %50, 12
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %66
  %68 = bitcast %"struct.WTF::KeyValuePair.1740"* %67 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %68, align 4
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %67, i64 2
  %70 = bitcast %"struct.WTF::KeyValuePair.1740"* %69 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %70, align 4
  %71 = or i64 %50, 16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair.1740"* %72 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %73, align 4
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %72, i64 2
  %75 = bitcast %"struct.WTF::KeyValuePair.1740"* %74 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %75, align 4
  %76 = or i64 %50, 20
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair.1740"* %77 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %78, align 4
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %77, i64 2
  %80 = bitcast %"struct.WTF::KeyValuePair.1740"* %79 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %80, align 4
  %81 = or i64 %50, 24
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %81
  %83 = bitcast %"struct.WTF::KeyValuePair.1740"* %82 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %83, align 4
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %82, i64 2
  %85 = bitcast %"struct.WTF::KeyValuePair.1740"* %84 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %85, align 4
  %86 = or i64 %50, 28
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %86
  %88 = bitcast %"struct.WTF::KeyValuePair.1740"* %87 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %88, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %87, i64 2
  %90 = bitcast %"struct.WTF::KeyValuePair.1740"* %89 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %90, align 4
  %91 = add i64 %50, 32
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %49, !llvm.loop !178

94:                                               ; preds = %49, %40
  %95 = phi i64 [ 0, %40 ], [ %91, %49 ]
  %96 = icmp eq i64 %45, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %104, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %105, %97 ], [ %45, %94 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %98
  %101 = bitcast %"struct.WTF::KeyValuePair.1740"* %100 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %101, align 4
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %100, i64 2
  %103 = bitcast %"struct.WTF::KeyValuePair.1740"* %102 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %103, align 4
  %104 = add i64 %98, 4
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !180

107:                                              ; preds = %97, %94
  %108 = icmp eq i64 %41, %33
  br i1 %108, label %117, label %109

109:                                              ; preds = %107, %38
  %110 = phi i64 [ 0, %38 ], [ %41, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %115, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %36, i64 %112
  %114 = bitcast %"struct.WTF::KeyValuePair.1740"* %113 to i64*
  store i64 4294967295, i64* %114, align 4
  %115 = add nuw nsw i64 %112, 1
  %116 = icmp eq i64 %115, %33
  br i1 %116, label %117, label %111, !llvm.loop !181

117:                                              ; preds = %111, %107, %31
  %118 = call %"struct.WTF::KeyValuePair.1740"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable.1737"* %0, %"struct.WTF::KeyValuePair.1740"* %36, i32 %32, %"struct.WTF::KeyValuePair.1740"* %1) #17
  ret %"struct.WTF::KeyValuePair.1740"* %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1740"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable.1737"*, %"struct.WTF::KeyValuePair.1740"*, i32, %"struct.WTF::KeyValuePair.1740"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.1740"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.1737"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.1740"*, %"struct.WTF::KeyValuePair.1740"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1740"* %16 to i64
  br label %31

18:                                               ; preds = %117
  %19 = bitcast %"class.WTF::HashTable.1737"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %118, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.1740"* [ null, %10 ], [ %121, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #17
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.1740"* %23

31:                                               ; preds = %13, %117
  %32 = phi i64 [ %17, %13 ], [ %118, %117 ]
  %33 = phi i32 [ %7, %13 ], [ %119, %117 ]
  %34 = phi %"struct.WTF::KeyValuePair.1740"* [ %16, %13 ], [ %120, %117 ]
  %35 = phi %"struct.WTF::KeyValuePair.1740"* [ null, %13 ], [ %121, %117 ]
  %36 = phi i32 [ 0, %13 ], [ %122, %117 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp ugt i32 %40, -3
  br i1 %41, label %117, label %42

42:                                               ; preds = %31
  %43 = shl i32 %40, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %40, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %1, i64 %57
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1740"* %58 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %58, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %80, label %63

63:                                               ; preds = %42
  %64 = xor i32 %55, -1
  %65 = lshr i32 %53, 23
  %66 = add i32 %65, %64
  %67 = shl i32 %66, 12
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 7
  %70 = xor i32 %69, %68
  %71 = shl i32 %70, 2
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 20
  %74 = xor i32 %73, %72
  %75 = or i32 %74, 1
  %76 = zext i32 %75 to i64
  br label %86

77:                                               ; preds = %93
  %78 = ptrtoint %"struct.WTF::KeyValuePair.1740"* %100 to i64
  %79 = inttoptr i64 %95 to %"struct.WTF::KeyValuePair.1740"*
  br label %80

80:                                               ; preds = %77, %42
  %81 = phi i64 [ %78, %77 ], [ %59, %42 ]
  %82 = phi %"struct.WTF::KeyValuePair.1740"* [ %79, %77 ], [ null, %42 ]
  %83 = icmp eq %"struct.WTF::KeyValuePair.1740"* %82, null
  %84 = ptrtoint %"struct.WTF::KeyValuePair.1740"* %82 to i64
  %85 = select i1 %83, i64 %81, i64 %84
  br label %105

86:                                               ; preds = %93, %63
  %87 = phi i64 [ 0, %63 ], [ %95, %93 ]
  %88 = phi i32 [ %61, %63 ], [ %103, %93 ]
  %89 = phi i64 [ %59, %63 ], [ %101, %93 ]
  %90 = phi i64 [ %57, %63 ], [ %99, %93 ]
  %91 = phi i64 [ 0, %63 ], [ %97, %93 ]
  %92 = icmp eq i32 %88, %40
  br i1 %92, label %105, label %93

93:                                               ; preds = %86
  %94 = icmp eq i32 %88, -2
  %95 = select i1 %94, i64 %89, i64 %87
  %96 = icmp eq i64 %91, 0
  %97 = select i1 %96, i64 %76, i64 %91
  %98 = add i64 %97, %90
  %99 = and i64 %98, %15
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %1, i64 %99
  %101 = ptrtoint %"struct.WTF::KeyValuePair.1740"* %100 to i64
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %100, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %77, label %86

105:                                              ; preds = %86, %80
  %106 = phi i64 [ %85, %80 ], [ %89, %86 ]
  %107 = inttoptr i64 %106 to %"struct.WTF::KeyValuePair.1740"*
  %108 = bitcast %"struct.WTF::KeyValuePair.1740"* %38 to i64*
  %109 = inttoptr i64 %106 to i64*
  %110 = load i64, i64* %108, align 4
  store i64 %110, i64* %109, align 4
  %111 = load %"struct.WTF::KeyValuePair.1740"*, %"struct.WTF::KeyValuePair.1740"** %9, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.1740", %"struct.WTF::KeyValuePair.1740"* %111, i64 %37
  %113 = icmp eq %"struct.WTF::KeyValuePair.1740"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair.1740"* %107, %"struct.WTF::KeyValuePair.1740"* %35
  %115 = load i32, i32* %6, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair.1740"* %111 to i64
  br label %117

117:                                              ; preds = %31, %105
  %118 = phi i64 [ %32, %31 ], [ %116, %105 ]
  %119 = phi i32 [ %33, %31 ], [ %115, %105 ]
  %120 = phi %"struct.WTF::KeyValuePair.1740"* [ %34, %31 ], [ %111, %105 ]
  %121 = phi %"struct.WTF::KeyValuePair.1740"* [ %35, %31 ], [ %114, %105 ]
  %122 = add i32 %36, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 %25
  ret %"class.blink::LayoutUnit"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1063"*, %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutUnit"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutUnit"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::LayoutUnit"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %26) #17
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #17
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::LayoutUnit"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::LayoutUnit"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::LayoutUnit"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #17
  %47 = bitcast %"class.WTF::Vector.1063"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #17
  %51 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::LayoutUnit"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::LayoutUnit"* %1 to i64
  %56 = ptrtoint %"class.blink::LayoutUnit"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::LayoutUnit"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %71) #17
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #17
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::LayoutUnit"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::LayoutUnit"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #17
  %87 = bitcast %"class.WTF::Vector.1063"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #17
  %91 = bitcast %"class.WTF::Vector.1063"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::LayoutUnit"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::LayoutUnit"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::LayoutUnit"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::LayoutUnit"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %101, i64 0, i32 0
  %105 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %100, i64 %103, i32 0
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %105, align 4
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1063"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.1063", %"class.WTF::Vector.1063"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 %25
  ret %"class.blink::LayoutUnit"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::GridTrack"* @_ZNK3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1032"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %24, i64 %25
  ret %"class.blink::GridTrack"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::GridTrack"* @_ZN3WTF6VectorIN5blink9GridTrackELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1032"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.1032", %"class.WTF::Vector.1032"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::GridTrack"*, %"class.blink::GridTrack"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::GridTrack", %"class.blink::GridTrack"* %24, i64 %25
  ret %"class.blink::GridTrack"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::LayoutBox"** @_ZNK3WTF6VectorIPN5blink9LayoutBoxELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1748"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1748", %"class.WTF::Vector.1748"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.1748", %"class.WTF::Vector.1748"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %24, i64 %25
  ret %"class.blink::LayoutBox"** %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1072"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES4_RmEENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.1069"*, %"class.blink::LayoutBox"** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1072"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1072"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.1069"* %0, %"struct.WTF::KeyValuePair.1072"* null)
  %9 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1072"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %42, label %78, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1072"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1072"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutBox"* %59, %43
  br i1 %64, label %109, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutBox"* %59, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1072"* %60, %"struct.WTF::KeyValuePair.1072"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1072"* %67, null
  br i1 %77, label %78, label %81

78:                                               ; preds = %10, %76
  %79 = phi %"struct.WTF::KeyValuePair.1072"* [ %72, %76 ], [ %39, %10 ]
  %80 = bitcast %"struct.WTF::KeyValuePair.1072"* %79 to i64*
  br label %91

81:                                               ; preds = %76
  %82 = bitcast %"struct.WTF::KeyValuePair.1072"* %67 to i64*
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %67, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, 2147483647
  %87 = and i32 %86, 2147483647
  %88 = and i32 %85, -2147483648
  %89 = or i32 %87, %88
  store i32 %89, i32* %84, align 8
  %90 = load i64, i64* %16, align 8
  br label %91

91:                                               ; preds = %78, %81
  %92 = phi i64* [ %80, %78 ], [ %82, %81 ]
  %93 = phi i64 [ %17, %78 ], [ %90, %81 ]
  %94 = phi %"struct.WTF::KeyValuePair.1072"* [ %79, %78 ], [ %67, %81 ]
  store i64 %93, i64* %92, align 8
  %95 = load i64, i64* %2, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %94, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %96, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %94, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %95, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 4
  %101 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = add i32 %102, %100
  %104 = shl i32 %103, 1
  %105 = load i32, i32* %12, align 8
  %106 = icmp ult i32 %104, %105
  br i1 %106, label %109, label %107

107:                                              ; preds = %91
  %108 = tail call %"struct.WTF::KeyValuePair.1072"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.1069"* %0, %"struct.WTF::KeyValuePair.1072"* %94)
  br label %109

109:                                              ; preds = %58, %91, %107
  %110 = phi i8 [ 1, %91 ], [ 1, %107 ], [ 0, %58 ]
  %111 = phi %"struct.WTF::KeyValuePair.1072"* [ %94, %91 ], [ %108, %107 ], [ %60, %58 ]
  %112 = insertvalue { %"struct.WTF::KeyValuePair.1072"*, i8 } undef, %"struct.WTF::KeyValuePair.1072"* %111, 0
  %113 = insertvalue { %"struct.WTF::KeyValuePair.1072"*, i8 } %112, i8 %110, 1
  ret { %"struct.WTF::KeyValuePair.1072"*, i8 } %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1072"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.1069"*, %"struct.WTF::KeyValuePair.1072"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEN4absl8optionalImEEEEEEPKcv, i64 0, i64 0)) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1072"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair.1072"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %45, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %50
  %52 = bitcast %"struct.WTF::KeyValuePair.1072"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %50, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %54
  %56 = bitcast %"struct.WTF::KeyValuePair.1072"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %54, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair.1072"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %58, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %69
  %72 = bitcast %"struct.WTF::KeyValuePair.1072"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %36, i64 %69, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !183

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.1072"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.1069"* %0, %"struct.WTF::KeyValuePair.1072"* %36, i32 %32, %"struct.WTF::KeyValuePair.1072"* %1) #17
  ret %"struct.WTF::KeyValuePair.1072"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1072"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.1069"*, %"struct.WTF::KeyValuePair.1072"*, i32, %"struct.WTF::KeyValuePair.1072"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1069", align 8
  %6 = bitcast %"class.WTF::HashTable.1069"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1069"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1072"* %1, %"struct.WTF::KeyValuePair.1072"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1072"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1069"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1069"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1072"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.1069"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1069"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1072"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.1072"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.1072"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.1072"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.1072"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.1072"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1069"* nonnull %5, %"class.blink::LayoutBox"** dereferenceable(8) %53) #17
  %55 = extractvalue { %"struct.WTF::KeyValuePair.1072"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.1072"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.1072"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #17
  %58 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.1072"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.1072"* %55, %"struct.WTF::KeyValuePair.1072"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.1072"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.1072"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.1072"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1072"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_N4absl8optionalImEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1069"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1072"*, %"struct.WTF::KeyValuePair.1072"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1069", %"class.WTF::HashTable.1069"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1072"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1072"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.1072"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1072"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1072"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1072"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutBox"* %63, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.1072"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1072", %"struct.WTF::KeyValuePair.1072"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.1072"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.1072"*, i8 } undef, %"struct.WTF::KeyValuePair.1072"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.1072"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.1072"*, i8 } %85
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!18 = !{!"branch_weights", i32 1, i32 4001}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE5beginEv: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE5beginEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE3endEv: argument 0"}
!27 = distinct !{!27, !"_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE3endEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE3endEv: argument 0"}
!30 = distinct !{!30, !"_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE3endEv"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZNK3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListImS3_EEEE: argument 0"}
!33 = distinct !{!33, !"_ZNK3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListImS3_EEEE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListImS3_EEEE: argument 0"}
!36 = distinct !{!36, !"_ZNK3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListImS3_EEEE"}
!37 = !{!32, !29, !35}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!43 = distinct !{!43, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!46 = distinct !{!46, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE3endEv: argument 0"}
!52 = distinct !{!52, !"_ZN3WTF13LinkedHashSetImN5blink30OrderedTrackIndexSetHashTraitsENS_18PartitionAllocatorEE3endEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!55 = distinct !{!55, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!58 = distinct !{!58, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!61 = distinct !{!61, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!64 = distinct !{!64, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!67 = distinct !{!67, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!70 = distinct !{!70, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!73 = distinct !{!73, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!76 = distinct !{!76, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!79 = distinct !{!79, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!82 = distinct !{!82, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!85 = distinct !{!85, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!88 = distinct !{!88, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!91 = distinct !{!91, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!94 = distinct !{!94, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!97 = distinct !{!97, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!100 = distinct !{!100, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!103 = distinct !{!103, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!106 = distinct !{!106, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!109 = distinct !{!109, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!112 = distinct !{!112, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!115 = distinct !{!115, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!118 = distinct !{!118, !"_ZN5blink6Length7PercentIiEES0_T_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!121 = distinct !{!121, !"_ZN5blink6Length7PercentIiEES0_T_"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!124 = distinct !{!124, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!127 = distinct !{!127, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!130 = distinct !{!130, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!133 = distinct !{!133, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!136 = distinct !{!136, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!139 = distinct !{!139, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!142 = distinct !{!142, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!145 = distinct !{!145, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!148 = distinct !{!148, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!151 = distinct !{!151, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!154 = distinct !{!154, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!157 = distinct !{!157, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!158 = !{!"branch_weights", i32 4001, i32 4000000}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!161 = distinct !{!161, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!164 = distinct !{!164, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZNK5blink10LayoutGrid12RowPositionsEv: argument 0"}
!167 = distinct !{!167, !"_ZNK5blink10LayoutGrid12RowPositionsEv"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZNK5blink10LayoutGrid15ColumnPositionsEv: argument 0"}
!170 = distinct !{!170, !"_ZNK5blink10LayoutGrid15ColumnPositionsEv"}
!171 = distinct !{!171, !172}
!172 = !{!"llvm.loop.unroll.disable"}
!173 = distinct !{!173, !172}
!174 = distinct !{!174, !172}
!175 = !{!176}
!176 = distinct !{!176, !177, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!177 = distinct !{!177, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!178 = distinct !{!178, !179}
!179 = !{!"llvm.loop.isvectorized", i32 1}
!180 = distinct !{!180, !172}
!181 = distinct !{!181, !182, !179}
!182 = !{!"llvm.loop.unroll.runtime.disable"}
!183 = distinct !{!183, !172}
