; ModuleID = '../../third_party/blink/renderer/core/timing/window_performance.cc'
source_filename = "../../third_party/blink/renderer/core/timing/window_performance.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.464 }
%class.scoped_refptr.464 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.465" }
%"class.base::RefCounted.465" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1053", i32, [4 x i8], %"class.std::__1::unique_ptr.1191", %"class.std::__1::unique_ptr.1191", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1197", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1203", %"class.std::__1::unique_ptr.1209", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1221", %"class.std::__1::unique_ptr.1227", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.245", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1056", %"class.std::__1::unique_ptr.1062", %"class.std::__1::unique_ptr.1068", %"class.std::__1::unique_ptr.1074", %"class.std::__1::unique_ptr.1080", %"class.std::__1::unique_ptr.1086", %"class.std::__1::unique_ptr.1097", %"class.std::__1::unique_ptr.1104", %"class.std::__1::unique_ptr.1104", %"class.std::__1::unique_ptr.1111", %"class.std::__1::unique_ptr.1118", %"class.std::__1::unique_ptr.1125", %"class.std::__1::unique_ptr.1125", %"class.std::__1::unique_ptr.1132", %"class.std::__1::unique_ptr.1139", %"class.std::__1::unique_ptr.1146", %"class.std::__1::unique_ptr.1171", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1089" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.1089" = type { %"struct.std::__1::__atomic_base.1090" }
%"struct.std::__1::__atomic_base.1090" = type { %"struct.std::__1::__atomic_base.1091" }
%"struct.std::__1::__atomic_base.1091" = type { %"struct.std::__1::__cxx_atomic_impl.1092" }
%"struct.std::__1::__cxx_atomic_impl.1092" = type { %"struct.std::__1::__cxx_atomic_base_impl.1093" }
%"struct.std::__1::__cxx_atomic_base_impl.1093" = type { i64 }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.blink::Worklist.1100"* }
%"class.blink::Worklist.1100" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1089" }
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.blink::Worklist.1107"* }
%"class.blink::Worklist.1107" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1089" }
%"class.std::__1::unique_ptr.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"class.blink::Worklist.1114"* }
%"class.blink::Worklist.1114" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1089" }
%"class.std::__1::unique_ptr.1118" = type { %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.blink::Worklist.1121"* }
%"class.blink::Worklist.1121" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1089" }
%"class.std::__1::unique_ptr.1125" = type { %"class.std::__1::__compressed_pair.1126" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"class.blink::Worklist.1128"* }
%"class.blink::Worklist.1128" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1089" }
%"class.std::__1::unique_ptr.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.blink::Worklist.1135"* }
%"class.blink::Worklist.1135" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1089" }
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.blink::Worklist.1142"* }
%"class.blink::Worklist.1142" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1089" }
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1149", %"class.std::__1::__compressed_pair.1157", %"class.std::__1::__compressed_pair.1162", %"class.std::__1::__compressed_pair.1164", [4 x i8] }>
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151", %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { i64 }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { float }
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1174", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1174" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1183" }
%"class.WTF::Vector.1183" = type { %"class.WTF::VectorBuffer.1184" }
%"class.WTF::VectorBuffer.1184" = type { %"class.WTF::VectorBufferBase.1185" }
%"class.WTF::VectorBufferBase.1185" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1197" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1200" }
%"class.WTF::VectorBuffer.1200" = type { %"class.WTF::VectorBufferBase.1201" }
%"class.WTF::VectorBufferBase.1201" = type { %"struct.std::__1::pair.1202"*, i32, i32 }
%"struct.std::__1::pair.1202" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1215" }
%"class.std::__1::unique_ptr.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1100"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1107"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1114"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1121"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1128"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1450", i64 }
%"class.std::__1::vector.1450" = type { %"class.std::__1::__vector_base.1451" }
%"class.std::__1::__vector_base.1451" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1452" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1227" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1233 }
%class.scoped_refptr.1233 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl.247" }
%"struct.std::__1::__cxx_atomic_impl.247" = type { %"struct.std::__1::__cxx_atomic_base_impl.248" }
%"struct.std::__1::__cxx_atomic_base_impl.248" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1040", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1040" = type { %"class.base::RefCounted.1041" }
%"class.base::RefCounted.1041" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1044" }
%"class.blink::HeapHashMap.1044" = type { %"class.WTF::HashMap.1047" }
%"class.WTF::HashMap.1047" = type { %"class.WTF::HashTable.1048" }
%"class.WTF::HashTable.1048" = type <{ %"struct.WTF::KeyValuePair.1050"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1050" = type { %"class.blink::WeakMember.1051", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.33" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i32 }
%"class.blink::WindowPerformance" = type { %"class.blink::Performance", %"class.blink::PerformanceMonitor::Client", %"class.blink::ExecutionContextClient", %"class.blink::PageVisibilityObserver", i64, i64, i16, %"class.blink::HeapDeque.53", %"class.WTF::Deque.60", %"class.blink::Member.22", %"class.blink::Member.65", %"class.blink::Member.72", %"class.blink::Member.74", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.blink::Performance" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::HeapVector.8", %"class.blink::HeapDeque", i32, i8, %"class.blink::HeapVector.8", i32, %"class.blink::HeapVector.8", i32, %"class.blink::HeapVector.8", %"class.blink::HeapVector.8", %"class.blink::HeapVector.8", %"class.blink::HeapVector.8", %"class.blink::Member.14", %"class.blink::Member.20", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.22", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"*, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet", %class.scoped_refptr.32, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.47" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.blink::Member.14"*, i32, i32 }
%"class.blink::HeapVector.8" = type { %"class.WTF::Vector.11" }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::UserTiming"* }
%"class.blink::UserTiming" = type opaque
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::PerformanceEntry"* }
%"class.blink::PerformanceEntry" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.28", i32, i32 }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30" }
%"class.WTF::VectorBufferBase.30" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%class.scoped_refptr.32 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.33" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.45", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.32, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.39", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"class.blink::WeakMember.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::Performance"* }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::BackgroundTracingHelper"* }
%"class.blink::BackgroundTracingHelper" = type opaque
%"class.blink::PerformanceMonitor::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.49" }
%"class.blink::WeakMember.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.687", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.767", i32, i8, [3 x i8], %"class.blink::HeapVector.769", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.777", %"class.blink::Member.779", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.788", %"class.blink::Member.849", %"class.blink::Member.851", i8, [7 x i8] }>
%"class.blink::Supplementable.687" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.688" }
%"class.blink::HeapHashMap.688" = type { %"class.WTF::HashMap.691" }
%"class.WTF::HashMap.691" = type { %"class.WTF::HashTable.692" }
%"class.WTF::HashTable.692" = type <{ %"struct.WTF::KeyValuePair.694"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.694" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.703" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.695" }
%"class.blink::HeapObserverSet.695" = type { i32, [4 x i8], %"class.blink::HeapHashSet.696" }
%"class.blink::HeapHashSet.696" = type { %"class.WTF::HashSet.699" }
%"class.WTF::HashSet.699" = type { %"class.WTF::HashTable.700" }
%"class.WTF::HashTable.700" = type <{ %"class.blink::WeakMember.702"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.702" = type opaque
%"class.blink::Supplementable.703" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.704" }
%"class.blink::HeapHashMap.704" = type { %"class.WTF::HashMap.707" }
%"class.WTF::HashMap.707" = type { %"class.WTF::HashTable.708" }
%"class.WTF::HashTable.708" = type <{ %"struct.WTF::KeyValuePair.710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.710" = type { i8*, %"class.blink::Member.2195" }
%"class.blink::Member.2195" = type { %"class.blink::MemberBase.2196" }
%"class.blink::MemberBase.2196" = type { %"class.blink::Supplement.2197"* }
%"class.blink::Supplement.2197" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2198" }
%"class.blink::Member.2198" = type { %"class.blink::MemberBase.2199" }
%"class.blink::MemberBase.2199" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.711, %"class.std::__1::unique_ptr.720", %"class.std::__1::unique_ptr.720", %"class.std::__1::unique_ptr.747", %"class.std::__1::unique_ptr.747", %"class.blink::Member.497", i32, [4 x i8], %"class.WTF::HashSet.763", i32, i32 }
%class.scoped_refptr.711 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.712", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.714", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.719 }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.714" = type { %"class.absl::optional_internal::optional_data.715" }
%"class.absl::optional_internal::optional_data.715" = type { %"class.absl::optional_internal::optional_data_base.716" }
%"class.absl::optional_internal::optional_data_base.716" = type { %"class.absl::optional_internal::optional_data_dtor_base.717" }
%"class.absl::optional_internal::optional_data_dtor_base.717" = type { i8, %union.anon.718 }
%union.anon.718 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.719 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.723", %"class.std::__1::map.734", %"class.std::__1::map.743"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.714" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.209 }
%union.anon.209 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.723" = type { %"class.std::__1::__tree.724" }
%"class.std::__1::__tree.724" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.725", %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.std::__1::map.734" = type { %"class.std::__1::__tree.735" }
%"class.std::__1::__tree.735" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.736", %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.std::__1::map.743" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.750" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map.750" = type { %"class.base::internal::flat_tree.751" }
%"class.base::internal::flat_tree.751" = type { %"class.std::__1::vector.752" }
%"class.std::__1::vector.752" = type { %"class.std::__1::__vector_base.753" }
%"class.std::__1::__vector_base.753" = type { %"struct.std::__1::pair.754"*, %"struct.std::__1::pair.754"*, %"class.std::__1::__compressed_pair.755" }
%"struct.std::__1::pair.754" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"struct.std::__1::pair.754"* }
%"class.blink::Member.497" = type { %"class.blink::MemberBase.50" }
%"class.WTF::HashSet.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.769" = type { %"class.WTF::Vector.772" }
%"class.WTF::Vector.772" = type { %"class.WTF::VectorBuffer.773" }
%"class.WTF::VectorBuffer.773" = type { %"class.WTF::VectorBufferBase.774" }
%"class.WTF::VectorBufferBase.774" = type { %"class.blink::Member.775"*, i32, i32 }
%"class.blink::Member.775" = type opaque
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.781", i32, i32 }
%"class.blink::HeapHashMap.781" = type { %"class.WTF::HashMap.784" }
%"class.WTF::HashMap.784" = type { %"class.WTF::HashTable.785" }
%"class.WTF::HashTable.785" = type <{ %"struct.WTF::KeyValuePair.787"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.787" = type opaque
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.791", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.791" = type { %"class.std::__1::unique_ptr.792" }
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.795" }
%"class.WTF::Vector.795" = type { %"class.WTF::VectorBuffer.796" }
%"class.WTF::VectorBuffer.796" = type { %"class.WTF::VectorBufferBase.797" }
%"class.WTF::VectorBufferBase.797" = type { %"class.mojo::StructPtr.798"*, i32, i32 }
%"class.mojo::StructPtr.798" = type { %"class.std::__1::unique_ptr.799" }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.802", %"class.WTF::HashMap.809", %"class.WTF::HashMap.814", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.819", i8, %"class.WTF::Vector.820", i32, %"class.mojo::StructPtr.825", %"class.WTF::Vector.820" }
%"class.mojo::StructPtr.802" = type { %"class.std::__1::unique_ptr.803" }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.809" = type { %"class.WTF::HashTable.810" }
%"class.WTF::HashTable.810" = type <{ %"struct.WTF::KeyValuePair.813"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.813" = type opaque
%"class.WTF::HashMap.814" = type { %"class.WTF::HashTable.815" }
%"class.WTF::HashTable.815" = type <{ %"struct.WTF::KeyValuePair.818"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.818" = type opaque
%"class.mojo::InlinedStructPtr.819" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.825" = type { %"class.std::__1::unique_ptr.826" }
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.820", i8, i8, [6 x i8] }>
%"class.WTF::Vector.820" = type { %"class.WTF::VectorBuffer.821" }
%"class.WTF::VectorBuffer.821" = type { %"class.WTF::VectorBufferBase.822" }
%"class.WTF::VectorBufferBase.822" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.840" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.321", i32 }>
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.324", %"class.base::OnceCallback.325", %"class.absl::optional", %"class.absl::optional.326", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.333", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.341", %"class.std::__1::map.352", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.361", i8, %class.scoped_refptr.206, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.362" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback.324" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.225", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.225" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.325" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.326" = type { %"class.absl::optional_internal::optional_data.327" }
%"class.absl::optional_internal::optional_data.327" = type { %"class.absl::optional_internal::optional_data_base.328" }
%"class.absl::optional_internal::optional_data_base.328" = type { %"class.absl::optional_internal::optional_data_dtor_base.329" }
%"class.absl::optional_internal::optional_data_dtor_base.329" = type { i8, %union.anon.330 }
%union.anon.330 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.206, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.331" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.331" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.284 }
%class.scoped_refptr.284 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2046", [4 x i8], %"class.base::RepeatingCallback.324", %class.scoped_refptr.206, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2046" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.332 }
%class.scoped_refptr.332 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.336", %class.scoped_refptr.337 }
%"class.base::RepeatingCallback.336" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.337 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.205", [4 x i8] }>
%"class.base::RefCountedThreadSafe.205" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.223" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.223" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.341" = type { %"class.std::__1::__tree.342" }
%"class.std::__1::__tree.342" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.std::__1::map.352" = type { %"class.std::__1::__tree.353" }
%"class.std::__1::__tree.353" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.361" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.206 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.362" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.840" = type { %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.51" }
%"class.blink::WeakMember.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.90", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.92", %"class.blink::Member.97", %"class.blink::Member.99", %"class.blink::Member.103", %"class.blink::Member.105", %"class.blink::Member.107", %"class.blink::Member.109", %"class.blink::Member.111", %"class.blink::HeapObserverSet", %"class.blink::Member.118", %"class.blink::Member.120", %"class.blink::Member.122", %"class.blink::Member.124", %"class.blink::Member.126", %"class.blink::Member.128", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.134", %"class.blink::Member.136", %"class.blink::Member.138", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.169", %"class.blink::Member.96", %"class.blink::Member.96", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.80" }
%"class.WTF::HashMap.80" = type { %"class.WTF::HashTable.81" }
%"class.WTF::HashTable.81" = type <{ %"struct.WTF::KeyValuePair.83"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.83" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.96", %"class.blink::Member.191", %"class.blink::Member.193", i8, i32, i8, i32, %"class.blink::Member.374", %"class.blink::Member.195", %"class.blink::FrameLifecycle", %"class.blink::Member.90", %"class.blink::Member.90", %"class.blink::Member.90", %"class.blink::Member.90", %"class.blink::Member.90", %"class.blink::Member.90", %"class.blink::Member.376", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.384", i8, %"class.base::UnguessableToken", %"class.absl::optional.386", %"class.absl::optional.391", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.90", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.90", %"class.blink::Member.195", %"class.blink::Member.197", %"class.blink::Member.199", i8, %"class.WTF::Vector.201" }
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.201" = type { %"class.WTF::VectorBuffer.202" }
%"class.WTF::VectorBuffer.202" = type { %"class.WTF::VectorBufferBase.203" }
%"class.WTF::VectorBufferBase.203" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.366" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.204, %"class.std::__1::unique_ptr.321", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.206, i32 }>
%class.scoped_refptr.204 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.206, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.287", %"class.absl::optional.292", %"class.absl::optional.249", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.312", i8, [7 x i8], %class.scoped_refptr.206, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.205" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.206, %"class.std::__1::unique_ptr.226", %"class.absl::optional.235", %"struct.std::__1::atomic.245", i8, i8, i8, i8, i32, i32, %"class.absl::optional.249", %"class.std::__1::unique_ptr.254", i8, i64, %class.scoped_refptr.283, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.285", %"class.base::WeakPtrFactory.286" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.206, i8, %"class.mojo::ScopedHandleBase.229", %class.scoped_refptr.230, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.231" }
%"class.mojo::ScopedHandleBase.229" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.230 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.231" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.235" = type { %"class.absl::optional_internal::optional_data.236" }
%"class.absl::optional_internal::optional_data.236" = type { %"class.absl::optional_internal::optional_data_base.237" }
%"class.absl::optional_internal::optional_data_base.237" = type { %"class.absl::optional_internal::optional_data_dtor_base.238" }
%"class.absl::optional_internal::optional_data_dtor_base.238" = type { i8, %union.anon.239 }
%union.anon.239 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.240", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.240" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.257", i8, i64, %class.scoped_refptr.258, %class.scoped_refptr.279 }
%"class.base::RepeatingCallback.257" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.258 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.268", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.259 }
%class.scoped_refptr.259 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.std::__1::map.268" = type { %"class.std::__1::__tree.269" }
%"class.std::__1::__tree.269" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%class.scoped_refptr.279 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.283 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.285" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.286" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.287" = type { %"class.absl::optional_internal::optional_data.288" }
%"class.absl::optional_internal::optional_data.288" = type { %"class.absl::optional_internal::optional_data_base.289" }
%"class.absl::optional_internal::optional_data_base.289" = type { %"class.absl::optional_internal::optional_data_dtor_base.290" }
%"class.absl::optional_internal::optional_data_dtor_base.290" = type { i8, %union.anon.291 }
%union.anon.291 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.292" = type { %"class.absl::optional_internal::optional_data.293" }
%"class.absl::optional_internal::optional_data.293" = type { %"class.absl::optional_internal::optional_data_base.294" }
%"class.absl::optional_internal::optional_data_base.294" = type { %"class.absl::optional_internal::optional_data_dtor_base.295" }
%"class.absl::optional_internal::optional_data_dtor_base.295" = type { i8, [7 x i8], %union.anon.296 }
%union.anon.296 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.297 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.297 = type { %"class.std::__1::map.300" }
%"class.std::__1::map.300" = type { %"class.std::__1::__tree.301" }
%"class.std::__1::__tree.301" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.311"*, i64 }
%"class.std::__1::unique_ptr.311" = type opaque
%"class.std::__1::map.312" = type { %"class.std::__1::__tree.313" }
%"class.std::__1::__tree.313" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.404", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.412", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.426", %"class.blink::FrameLoader", %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::Member.486", %"class.blink::Member.488", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.490", %class.scoped_refptr.492, %"class.blink::Member.493", %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::Member.509", %"class.blink::Member.511", %"class.blink::Member.513", %"class.blink::Member.515", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.519", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.540", %"class.std::__1::unique_ptr.541", %"class.absl::optional.391", i32, [4 x i8], %"class.std::__1::unique_ptr.547", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.555", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.560", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.565", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.568", %"class.blink::Member.570", %"class.blink::Member.572", %"class.blink::Member.574", %"class.mojo::StructPtr.577", %"class.blink::Member.585", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.587", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.404" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.405" }
%"class.blink::HeapHashMap.405" = type { %"class.WTF::HashMap.408" }
%"class.WTF::HashMap.408" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ %"struct.WTF::KeyValuePair.411"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.411" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.415", %"class.base::WeakPtrFactory.420" }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.419" = type opaque
%"class.base::WeakPtrFactory.420" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.424" }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.982" }
%"class.blink::WeakMember.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.324", %"class.base::RepeatingCallback.2208", i64, %"class.std::__1::map.2209", i8*, i64, %"class.base::WeakPtrFactory.2218" }
%"class.base::RepeatingCallback.2208" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2209" = type { %"class.std::__1::__tree.2210" }
%"class.std::__1::__tree.2210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2211", %"class.std::__1::__compressed_pair.2215" }
%"class.std::__1::__compressed_pair.2211" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.2215" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.base::WeakPtrFactory.2218" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.426" = type { %"class.WTF::HashSet.429" }
%"class.WTF::HashSet.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"class.blink::WeakMember.432"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.432" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.376", %"class.blink::Member.433", %"class.blink::Member.435", %"class.std::__1::unique_ptr.437", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.449" }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1761", %"class.blink::Member.1766", %"class.std::__1::unique_ptr.1768", %"class.std::__1::unique_ptr.788", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.1949, %"class.WTF::AtomicString", i32, %"class.absl::optional.1848", %class.scoped_refptr.719, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1813", i8, %"class.absl::optional.1820", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.376", %"class.blink::Member.1950", %"class.blink::Member.1020", %"class.blink::Member.1961", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.1963", %class.scoped_refptr.711, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.1976", %"class.std::__1::unique_ptr.1825", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.1978", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1983, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1997, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2005", %"class.blink::Member.2020", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2033", %"class.WTF::Vector.820", i8, i8, i8, %"class.blink::WebVector.1938", %"class.blink::WebVector.1938", %"class.mojo::Remote.2038" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1761" = type { %"class.WTF::VectorBuffer.1762" }
%"class.WTF::VectorBuffer.1762" = type { %"class.WTF::VectorBufferBase.1763" }
%"class.WTF::VectorBufferBase.1763" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.1766" = type { %"class.blink::MemberBase.1767" }
%"class.blink::MemberBase.1767" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.1768" = type { %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.1772", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1813", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1820", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1825", %"class.base::UnguessableToken", %"class.blink::WebVector.1831", %"class.base::TickClock"*, %"class.blink::WebVector.1840", %"class.absl::optional.1848", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1853", %"class.blink::WebVector", i8, %"class.blink::WebVector.1872", i8, %"class.std::__1::unique_ptr.1880", %"class.blink::WebVector.1938", %"class.blink::WebVector.1938" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr.1771" }
%"class.blink::WebPrivatePtr.1771" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector.1772" = type { %"class.std::__1::vector.1773" }
%"class.std::__1::vector.1773" = type { %"class.std::__1::__vector_base.1774" }
%"class.std::__1::__vector_base.1774" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1808" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1808" = type { %"struct.std::__1::__compressed_pair_elem.1809" }
%"struct.std::__1::__compressed_pair_elem.1809" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1775", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.1819", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.1819" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1831" = type { %"class.std::__1::vector.1832" }
%"class.std::__1::vector.1832" = type { %"class.std::__1::__vector_base.1833" }
%"class.std::__1::__vector_base.1833" = type { %"class.std::__1::unique_ptr.1834"*, %"class.std::__1::unique_ptr.1834"*, %"class.std::__1::__compressed_pair.1835" }
%"class.std::__1::unique_ptr.1834" = type opaque
%"class.std::__1::__compressed_pair.1835" = type { %"struct.std::__1::__compressed_pair_elem.1836" }
%"struct.std::__1::__compressed_pair_elem.1836" = type { %"class.std::__1::unique_ptr.1834"* }
%"class.blink::WebVector.1840" = type { %"class.std::__1::vector.1841" }
%"class.std::__1::vector.1841" = type { %"class.std::__1::__vector_base.1842" }
%"class.std::__1::__vector_base.1842" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1843" }
%"class.std::__1::__compressed_pair.1843" = type { %"struct.std::__1::__compressed_pair_elem.1844" }
%"struct.std::__1::__compressed_pair_elem.1844" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.1853" = type { %"class.absl::optional_internal::optional_data.1854" }
%"class.absl::optional_internal::optional_data.1854" = type { %"class.absl::optional_internal::optional_data_base.1855" }
%"class.absl::optional_internal::optional_data_base.1855" = type { %"class.absl::optional_internal::optional_data_dtor_base.1856" }
%"class.absl::optional_internal::optional_data_dtor_base.1856" = type { i8, [7 x i8], %union.anon.1857 }
%union.anon.1857 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.524" }
%"class.std::__1::vector.524" = type { %"class.std::__1::__vector_base.525" }
%"class.std::__1::__vector_base.525" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1872" = type { %"class.std::__1::vector.1873" }
%"class.std::__1::vector.1873" = type { %"class.std::__1::__vector_base.1874" }
%"class.std::__1::__vector_base.1874" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1875" }
%"class.std::__1::__compressed_pair.1875" = type { %"struct.std::__1::__compressed_pair_elem.1876" }
%"struct.std::__1::__compressed_pair_elem.1876" = type { i32* }
%"class.std::__1::unique_ptr.1880" = type { %"class.std::__1::__compressed_pair.1881" }
%"class.std::__1::__compressed_pair.1881" = type { %"struct.std::__1::__compressed_pair_elem.1882" }
%"struct.std::__1::__compressed_pair_elem.1882" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1883" }
%"class.blink::WebVector.1883" = type { %"class.std::__1::vector.1884" }
%"class.std::__1::vector.1884" = type { %"class.std::__1::__vector_base.1885" }
%"class.std::__1::__vector_base.1885" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1930" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1886", %"class.blink::WebVector.1894", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.1925", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1886" = type { %"class.std::__1::vector.1887" }
%"class.std::__1::vector.1887" = type { %"class.std::__1::__vector_base.1888" }
%"class.std::__1::__vector_base.1888" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1889" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1889" = type { %"struct.std::__1::__compressed_pair_elem.1890" }
%"struct.std::__1::__compressed_pair_elem.1890" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1894" = type { %"class.std::__1::vector.1895" }
%"class.std::__1::vector.1895" = type { %"class.std::__1::__vector_base.1896" }
%"class.std::__1::__vector_base.1896" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1920" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1897", %"class.blink::WebVector", %"class.blink::WebVector.1905", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1897" = type { %"class.std::__1::vector.1898" }
%"class.std::__1::vector.1898" = type { %"class.std::__1::__vector_base.1899" }
%"class.std::__1::__vector_base.1899" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1900" }
%"class.std::__1::__compressed_pair.1900" = type { %"struct.std::__1::__compressed_pair_elem.1901" }
%"struct.std::__1::__compressed_pair_elem.1901" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1905" = type { %"class.std::__1::vector.1906" }
%"class.std::__1::vector.1906" = type { %"class.std::__1::__vector_base.1907" }
%"class.std::__1::__vector_base.1907" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1915" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1908" }
%"class.blink::WebVector.1908" = type { %"class.std::__1::vector.1909" }
%"class.std::__1::vector.1909" = type { %"class.std::__1::__vector_base.1910" }
%"class.std::__1::__vector_base.1910" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { i8* }
%"class.std::__1::__compressed_pair.1915" = type { %"struct.std::__1::__compressed_pair_elem.1916" }
%"struct.std::__1::__compressed_pair_elem.1916" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1920" = type { %"struct.std::__1::__compressed_pair_elem.1921" }
%"struct.std::__1::__compressed_pair_elem.1921" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1925" = type { %"class.absl::optional_internal::optional_data.1926" }
%"class.absl::optional_internal::optional_data.1926" = type { %"class.absl::optional_internal::optional_data_base.1927" }
%"class.absl::optional_internal::optional_data_base.1927" = type { %"class.absl::optional_internal::optional_data_dtor_base.1928" }
%"class.absl::optional_internal::optional_data_dtor_base.1928" = type { i8, [7 x i8], %union.anon.1929 }
%union.anon.1929 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1930" = type { %"struct.std::__1::__compressed_pair_elem.1931" }
%"struct.std::__1::__compressed_pair_elem.1931" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.1949 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.1848" = type { %"class.absl::optional_internal::optional_data.1849" }
%"class.absl::optional_internal::optional_data.1849" = type { %"class.absl::optional_internal::optional_data_base.1850" }
%"class.absl::optional_internal::optional_data_base.1850" = type { %"class.absl::optional_internal::optional_data_dtor_base.1851" }
%"class.absl::optional_internal::optional_data_dtor_base.1851" = type { i8, %union.anon.1852 }
%union.anon.1852 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1820" = type { %"class.absl::optional_internal::optional_data.1821" }
%"class.absl::optional_internal::optional_data.1821" = type { %"class.absl::optional_internal::optional_data_base.1822" }
%"class.absl::optional_internal::optional_data_base.1822" = type { %"class.absl::optional_internal::optional_data_dtor_base.1823" }
%"class.absl::optional_internal::optional_data_dtor_base.1823" = type { i8, %union.anon.1824 }
%union.anon.1824 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1858", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.1858" = type { %"class.std::__1::__vector_base.1859" }
%"class.std::__1::__vector_base.1859" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1867" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1860", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1860" = type { %"class.std::__1::__vector_base.1861" }
%"class.std::__1::__vector_base.1861" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1862" }
%"class.std::__1::__compressed_pair.1862" = type { %"struct.std::__1::__compressed_pair_elem.1863" }
%"struct.std::__1::__compressed_pair_elem.1863" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1867" = type { %"struct.std::__1::__compressed_pair_elem.1868" }
%"struct.std::__1::__compressed_pair_elem.1868" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.1950" = type { %"class.blink::MemberBase.1951" }
%"class.blink::MemberBase.1951" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.820", %"class.blink::Member.1954", %"class.absl::optional.1956", i64, i64, i32, %class.scoped_refptr.883, %class.scoped_refptr.1949, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.883 }
%"class.blink::Member.1954" = type { %"class.blink::MemberBase.1955" }
%"class.blink::MemberBase.1955" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.1956" = type { %"class.absl::optional_internal::optional_data.1957" }
%"class.absl::optional_internal::optional_data.1957" = type { %"class.absl::optional_internal::optional_data_base.1958" }
%"class.absl::optional_internal::optional_data_base.1958" = type { %"class.absl::optional_internal::optional_data_dtor_base.1959" }
%"class.absl::optional_internal::optional_data_dtor_base.1959" = type { i8, %union.anon.1960 }
%union.anon.1960 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.883 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.885", i64, %"class.WTF::Vector.889", %"class.WTF::Vector.894", %"class.WTF::Vector.900", %"class.WTF::Vector.918", %class.scoped_refptr.711, %"class.WTF::HashMap.924", %"class.WTF::Vector.929", %"class.WTF::Vector.889", %"class.WTF::Vector.935", %"class.WTF::HashMap.940", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.884" }
%"class.base::RefCountedThreadSafe.884" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"class.WTF::Vector.894" = type { %"class.WTF::VectorBuffer.895" }
%"class.WTF::VectorBuffer.895" = type { %"class.WTF::VectorBufferBase.896", [8 x i8] }
%"class.WTF::VectorBufferBase.896" = type { %class.scoped_refptr.897*, i32, i32 }
%class.scoped_refptr.897 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.900" = type { %"class.WTF::VectorBuffer.901" }
%"class.WTF::VectorBuffer.901" = type { %"class.WTF::VectorBufferBase.902" }
%"class.WTF::VectorBufferBase.902" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.904", %"class.std::__1::unique_ptr.910" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.903 }
%class.scoped_refptr.903 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.918" = type { %"class.WTF::VectorBuffer.919" }
%"class.WTF::VectorBuffer.919" = type { %"class.WTF::VectorBufferBase.920" }
%"class.WTF::VectorBufferBase.920" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.921", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.921" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.924" = type { %"class.WTF::HashTable.925" }
%"class.WTF::HashTable.925" = type <{ %"struct.WTF::KeyValuePair.928"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.928" = type opaque
%"class.WTF::Vector.929" = type { %"class.WTF::VectorBuffer.930" }
%"class.WTF::VectorBuffer.930" = type { %"class.WTF::VectorBufferBase.931" }
%"class.WTF::VectorBufferBase.931" = type { %"class.mojo::ScopedHandleBase.932"*, i32, i32 }
%"class.mojo::ScopedHandleBase.932" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.889" = type { %"class.WTF::VectorBuffer.890" }
%"class.WTF::VectorBuffer.890" = type { %"class.WTF::VectorBufferBase.891", [16 x i8] }
%"class.WTF::VectorBufferBase.891" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.935" = type { %"class.WTF::VectorBuffer.936" }
%"class.WTF::VectorBuffer.936" = type { %"class.WTF::VectorBufferBase.937" }
%"class.WTF::VectorBufferBase.937" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.940" = type { %"class.WTF::HashTable.941" }
%"class.WTF::HashTable.941" = type <{ %"struct.WTF::KeyValuePair.944"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.944" = type { i8**, %"class.std::__1::unique_ptr.2200" }
%"class.std::__1::unique_ptr.2200" = type { %"class.std::__1::__compressed_pair.2201" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.2202" }
%"struct.std::__1::__compressed_pair_elem.2202" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1784", %class.scoped_refptr.1798, %class.scoped_refptr.1799, %"struct.blink::CacheControlHeader", %"class.absl::optional", %"class.absl::optional.1715", %"class.absl::optional.1715", %"class.absl::optional.1715", i64, %"class.blink::KURL", %"class.WTF::Vector.1761", %"class.WTF::String", %"class.WTF::Vector.820", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.391", %"class.WTF::Vector.820", %"class.blink::KURL", %"class.absl::optional.1800" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1778" }
%"class.WTF::HashMap.1778" = type { %"class.WTF::HashTable.1779" }
%"class.WTF::HashTable.1779" = type <{ %"struct.WTF::KeyValuePair.1782"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1782" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1783", i8 }
%"struct.std::__1::array.1783" = type { [16 x i8] }
%"class.absl::optional.1784" = type { %"class.absl::optional_internal::optional_data.1785" }
%"class.absl::optional_internal::optional_data.1785" = type { %"class.absl::optional_internal::optional_data_base.1786" }
%"class.absl::optional_internal::optional_data_base.1786" = type { %"class.absl::optional_internal::optional_data_dtor_base.1787" }
%"class.absl::optional_internal::optional_data_dtor_base.1787" = type { i8, %union.anon.1788 }
%union.anon.1788 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.820", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1789", %"class.WTF::Vector.1793" }
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1793" = type { %"class.WTF::VectorBuffer.1794" }
%"class.WTF::VectorBuffer.1794" = type { %"class.WTF::VectorBufferBase.1795" }
%"class.WTF::VectorBufferBase.1795" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1798 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1799 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional.1715" = type { %"class.absl::optional_internal::optional_data.1716" }
%"class.absl::optional_internal::optional_data.1716" = type { %"class.absl::optional_internal::optional_data_base.1717" }
%"class.absl::optional_internal::optional_data_base.1717" = type { %"class.absl::optional_internal::optional_data_dtor_base.1718" }
%"class.absl::optional_internal::optional_data_dtor_base.1718" = type { i8, %union.anon.1719 }
%union.anon.1719 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1708" }
%"class.base::time_internal::TimeBase.1708" = type { i64 }
%"class.absl::optional.1800" = type { %"class.absl::optional_internal::optional_data.1801" }
%"class.absl::optional_internal::optional_data.1801" = type { %"class.absl::optional_internal::optional_data_base.1802" }
%"class.absl::optional_internal::optional_data_base.1802" = type { %"class.absl::optional_internal::optional_data_dtor_base.1803" }
%"class.absl::optional_internal::optional_data_dtor_base.1803" = type { i8, %union.anon.1804 }
%union.anon.1804 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.1963" = type { %"class.mojo::internal::InterfacePtrState.1964" }
%"class.mojo::internal::InterfacePtrState.1964" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1965" }
%"class.std::__1::unique_ptr.1965" = type { %"class.std::__1::__compressed_pair.1966" }
%"class.std::__1::__compressed_pair.1966" = type { %"struct.std::__1::__compressed_pair_elem.1967" }
%"struct.std::__1::__compressed_pair_elem.1967" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.1971", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.435" }
%"class.WTF::Vector.1971" = type { %"class.WTF::VectorBuffer.1972" }
%"class.WTF::VectorBuffer.1972" = type { %"class.WTF::VectorBufferBase.1973" }
%"class.WTF::VectorBufferBase.1973" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1825" = type { %"class.std::__1::__compressed_pair.1826" }
%"class.std::__1::__compressed_pair.1826" = type { %"struct.std::__1::__compressed_pair_elem.1827" }
%"struct.std::__1::__compressed_pair_elem.1827" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.750" }
%"class.WTF::Vector.1978" = type { %"class.WTF::VectorBuffer.1979" }
%"class.WTF::VectorBuffer.1979" = type { %"class.WTF::VectorBufferBase.1980" }
%"class.WTF::VectorBufferBase.1980" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.1983 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1984", i64, %"class.WTF::Vector.1986", %"class.WTF::Vector.1991" }
%"class.WTF::RefCounted.1984" = type { %"class.base::RefCounted.1985" }
%"class.base::RefCounted.1985" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1986" = type { %"class.WTF::VectorBuffer.1987" }
%"class.WTF::VectorBuffer.1987" = type { %"class.WTF::VectorBufferBase.1988" }
%"class.WTF::VectorBufferBase.1988" = type { i8*, i32, i32 }
%"class.WTF::Vector.1991" = type { %"class.WTF::VectorBuffer.1992" }
%"class.WTF::VectorBuffer.1992" = type { %"class.WTF::VectorBufferBase.1993" }
%"class.WTF::VectorBufferBase.1993" = type { %"class.std::__1::unique_ptr.1994"*, i32, i32 }
%"class.std::__1::unique_ptr.1994" = type opaque
%class.scoped_refptr.1997 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type { %"class.WTF::RefCounted.1998", %"class.WTF::AtomicString", %"class.base::TimeTicks", i32, i32, %"class.base::TimeTicks", %"class.blink::KURL", %"class.blink::ResourceResponse", %"class.WTF::Vector.2000", i8, i8, %"class.mojo::PendingReceiver" }
%"class.WTF::RefCounted.1998" = type { %"class.base::RefCounted.1999" }
%"class.base::RefCounted.1999" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2000" = type { %"class.WTF::VectorBuffer.2001" }
%"class.WTF::VectorBuffer.2001" = type { %"class.WTF::VectorBufferBase.2002" }
%"class.WTF::VectorBufferBase.2002" = type { %"class.blink::ResourceResponse"*, i32, i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2009", %"class.std::__1::unique_ptr.2014", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2009" = type { %"class.WTF::HashTable.2010" }
%"class.WTF::HashTable.2010" = type <{ %"struct.WTF::KeyValuePair.2013"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2013" = type { %"class.WTF::Vector.2267", %class.scoped_refptr.2272 }
%"class.WTF::Vector.2267" = type { %"class.WTF::VectorBuffer.2268" }
%"class.WTF::VectorBuffer.2268" = type { %"class.WTF::VectorBufferBase.2269", [32 x i8] }
%"class.WTF::VectorBufferBase.2269" = type { i8*, i32, i32 }
%class.scoped_refptr.2272 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2273", %"class.WTF::Vector.2275", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2273" = type { %"class.base::RefCounted.2274" }
%"class.base::RefCounted.2274" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2275" = type { %"class.WTF::VectorBuffer.2276" }
%"class.WTF::VectorBuffer.2276" = type { %"class.WTF::VectorBufferBase.2269" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2279", i64, %"class.absl::optional.2284" }
%"class.std::__1::unique_ptr.2279" = type { %"class.std::__1::__compressed_pair.2280" }
%"class.std::__1::__compressed_pair.2280" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"class.absl::optional.2284" = type { %"class.absl::optional_internal::optional_data.2285" }
%"class.absl::optional_internal::optional_data.2285" = type { %"class.absl::optional_internal::optional_data_base.2286" }
%"class.absl::optional_internal::optional_data_base.2286" = type { %"class.absl::optional_internal::optional_data_dtor_base.2287" }
%"class.absl::optional_internal::optional_data_dtor_base.2287" = type { i8, %union.anon.2288 }
%union.anon.2288 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2289", %"class.std::__1::unique_ptr.2290" }
%"class.mojo::ScopedHandleBase.2289" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2290" = type { %"class.std::__1::__compressed_pair.2291" }
%"class.std::__1::__compressed_pair.2291" = type { %"struct.std::__1::__compressed_pair_elem.2292" }
%"struct.std::__1::__compressed_pair_elem.2292" = type { i8* }
%"class.std::__1::unique_ptr.2014" = type { %"class.std::__1::__compressed_pair.2015" }
%"class.std::__1::__compressed_pair.2015" = type { %"struct.std::__1::__compressed_pair_elem.2016" }
%"struct.std::__1::__compressed_pair_elem.2016" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2020" = type { %"class.blink::MemberBase.2021" }
%"class.blink::MemberBase.2021" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.440" }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.blink::KURL"* }
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2026" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2022", %"class.std::__1::bitset.2022", %"class.std::__1::bitset.2024" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2022" = type { %"class.std::__1::__bitset.2023" }
%"class.std::__1::__bitset.2023" = type { [11 x i64] }
%"class.std::__1::bitset.2024" = type { %"class.std::__1::__bitset.2025" }
%"class.std::__1::__bitset.2025" = type { [2 x i64] }
%"class.blink::HeapHashSet.2026" = type { %"class.WTF::HashSet.2029" }
%"class.WTF::HashSet.2029" = type { %"class.WTF::HashTable.2030" }
%"class.WTF::HashTable.2030" = type <{ %"class.blink::Member.2032"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2032" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2033" = type { %"class.WTF::VectorBuffer.2034" }
%"class.WTF::VectorBuffer.2034" = type { %"class.WTF::VectorBufferBase.2035" }
%"class.WTF::VectorBufferBase.2035" = type { i32*, i32, i32 }
%"class.blink::WebVector.1938" = type { %"class.std::__1::vector.1939" }
%"class.std::__1::vector.1939" = type { %"class.std::__1::__vector_base.1940" }
%"class.std::__1::__vector_base.1940" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.1941" }
%"class.std::__1::__compressed_pair.1941" = type { %"struct.std::__1::__compressed_pair_elem.1942" }
%"struct.std::__1::__compressed_pair_elem.1942" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2038" = type { %"class.mojo::internal::InterfacePtrState.2039" }
%"class.mojo::internal::InterfacePtrState.2039" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2040" }
%"class.std::__1::unique_ptr.2040" = type { %"class.std::__1::__compressed_pair.2041" }
%"class.std::__1::__compressed_pair.2041" = type { %"struct.std::__1::__compressed_pair_elem.2042" }
%"struct.std::__1::__compressed_pair_elem.2042" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.449" = type { %"class.WTF::HashTable.450" }
%"class.WTF::HashTable.450" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1470", %"class.blink::Member.376", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1475", i8, i32, %"class.blink::Color", %"class.absl::optional.1477", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1482", %"class.blink::Member.1484", %"class.blink::Member.1484", %"class.std::__1::unique_ptr.1487", i32, [4 x i8], %"class.WTF::HashSet.1490", %"class.blink::Member.1497", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1499", %"class.blink::HeapHashSet.1506", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1514", i8, %"class.blink::Member.1520", i8, i8, i32, %"class.blink::HeapLinkedHashSet.1522", %"class.blink::HeapLinkedHashSet.1536", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1550", i8, %"class.std::__1::unique_ptr.1556", %"class.std::__1::unique_ptr.1673", %"class.WTF::Vector.1679", i32, %class.scoped_refptr.1684, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1685", %"class.blink::Member.1687", %"class.blink::Member.1689", %"class.blink::HeapHashSet.1691", %"class.blink::HeapHashSet.1698", %"class.std::__1::unique_ptr.1705", %"class.std::__1::unique_ptr.1712", %"class.WTF::Vector.680" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1470" = type { %"class.WTF::HashTable.1471" }
%"class.WTF::HashTable.1471" = type <{ %class.scoped_refptr.1474*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1474 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1475" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1476", { i64, i64 } }
%"class.blink::WeakMember.1476" = type { %"class.blink::MemberBase.454" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1477" = type { %"class.absl::optional_internal::optional_data.1478" }
%"class.absl::optional_internal::optional_data.1478" = type { %"class.absl::optional_internal::optional_data_base.1479" }
%"class.absl::optional_internal::optional_data_base.1479" = type { %"class.absl::optional_internal::optional_data_dtor_base.1480" }
%"class.absl::optional_internal::optional_data_dtor_base.1480" = type { i8, %union.anon.1481 }
%union.anon.1481 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::HeapHashSet.1486"* }
%"class.blink::HeapHashSet.1486" = type opaque
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"class.WTF::HashSet.1490"* }
%"class.WTF::HashSet.1490" = type { %"class.WTF::HashTable.1491" }
%"class.WTF::HashTable.1491" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1499" = type { %"class.WTF::HashSet.1502" }
%"class.WTF::HashSet.1502" = type { %"class.WTF::HashTable.1503" }
%"class.WTF::HashTable.1503" = type <{ %"class.blink::Member.1505"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1505" = type opaque
%"class.blink::HeapHashSet.1506" = type { %"class.WTF::HashSet.1509" }
%"class.WTF::HashSet.1509" = type { %"class.WTF::HashTable.1510" }
%"class.WTF::HashTable.1510" = type <{ %"class.blink::Member.1512"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1746", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1757", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.455" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1748", %"class.blink::Member.1749", %"class.blink::Member.1751", %"class.blink::Member.1753", %"class.blink::Member.1755", %"class.WTF::Vector.680", i16, %class.scoped_refptr.32 }
%"class.blink::ThreadState::PrefinalizerRegistration.1748" = type { i8 }
%"class.blink::Member.1749" = type { %"class.blink::MemberBase.1750" }
%"class.blink::MemberBase.1750" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1753" = type { %"class.blink::MemberBase.1754" }
%"class.blink::MemberBase.1754" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1755" = type { %"class.blink::MemberBase.1756" }
%"class.blink::MemberBase.1756" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1757" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1758", { i64, i64 } }
%"class.blink::WeakMember.1758" = type { %"class.blink::MemberBase.1513" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1514" = type { %"class.std::__1::__compressed_pair.1515" }
%"class.std::__1::__compressed_pair.1515" = type { %"struct.std::__1::__compressed_pair_elem.1516" }
%"struct.std::__1::__compressed_pair_elem.1516" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.1522" = type { %"class.WTF::LinkedHashSet.1525" }
%"class.WTF::LinkedHashSet.1525" = type { %"class.WTF::HashMap.1526", %"class.WTF::VectorBackedLinkedList.1530" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.WTF::VectorBackedLinkedList.1530" = type { %"class.WTF::Vector.1531", i32, i32 }
%"class.WTF::Vector.1531" = type { %"class.WTF::VectorBuffer.1532" }
%"class.WTF::VectorBuffer.1532" = type { %"class.WTF::VectorBufferBase.1533" }
%"class.WTF::VectorBufferBase.1533" = type { %"class.WTF::VectorBackedLinkedListNode.1534"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1534" = type opaque
%"class.blink::HeapLinkedHashSet.1536" = type { %"class.WTF::LinkedHashSet.1539" }
%"class.WTF::LinkedHashSet.1539" = type { %"class.WTF::HashMap.1540", %"class.WTF::VectorBackedLinkedList.1544" }
%"class.WTF::HashMap.1540" = type { %"class.WTF::HashTable.1541" }
%"class.WTF::HashTable.1541" = type <{ %"struct.WTF::KeyValuePair.1543"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1543" = type opaque
%"class.WTF::VectorBackedLinkedList.1544" = type { %"class.WTF::Vector.1545", i32, i32 }
%"class.WTF::Vector.1545" = type { %"class.WTF::VectorBuffer.1546" }
%"class.WTF::VectorBuffer.1546" = type { %"class.WTF::VectorBufferBase.1547" }
%"class.WTF::VectorBufferBase.1547" = type { %"class.WTF::VectorBackedLinkedListNode.1548"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1548" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1550" = type { %"class.std::__1::__compressed_pair.1551" }
%"class.std::__1::__compressed_pair.1551" = type { %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1556" = type { %"class.std::__1::__compressed_pair.1557" }
%"class.std::__1::__compressed_pair.1557" = type { %"struct.std::__1::__compressed_pair_elem.1558" }
%"struct.std::__1::__compressed_pair_elem.1558" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1559, %class.scoped_refptr.1559, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1650", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1655", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1559 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1560", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1567" }
%"class.WTF::RefCounted.1560" = type { %"class.base::RefCounted.1561" }
%"class.base::RefCounted.1561" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1562", i32, [4 x i8] }>
%"class.WTF::Vector.1562" = type { %"class.WTF::VectorBuffer.1563" }
%"class.WTF::VectorBuffer.1563" = type { %"class.WTF::VectorBufferBase.1564" }
%"class.WTF::VectorBufferBase.1564" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1567" = type { %"class.WTF::VectorBuffer.1568" }
%"class.WTF::VectorBuffer.1568" = type { %"class.WTF::VectorBufferBase.1569" }
%"class.WTF::VectorBufferBase.1569" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1573", %"class.std::__1::unique_ptr.1622", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1570, %class.scoped_refptr.1571, %class.scoped_refptr.1572 }
%class.scoped_refptr.1570 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1586", i8, i8, %class.scoped_refptr.1570, i32, i32 }
%"class.WTF::RefCounted.1586" = type { %"class.base::RefCounted.1587" }
%"class.base::RefCounted.1587" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1571 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1741" }
%"class.blink::PaintPropertyNode.1741" = type { %"class.WTF::RefCounted.1742", i8, i8, %class.scoped_refptr.1571, i32, i32 }
%"class.WTF::RefCounted.1742" = type { %"class.base::RefCounted.1743" }
%"class.base::RefCounted.1743" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1572 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1738" }
%"class.blink::PaintPropertyNode.1738" = type { %"class.WTF::RefCounted.1739", i8, i8, %class.scoped_refptr.1572, i32, i32 }
%"class.WTF::RefCounted.1739" = type { %"class.base::RefCounted.1740" }
%"class.base::RefCounted.1740" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1573" = type { %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1576", %"class.WTF::Vector.1581", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1576" = type { %"class.WTF::VectorBuffer.1577" }
%"class.WTF::VectorBuffer.1577" = type { %"class.WTF::VectorBufferBase.1578" }
%"class.WTF::VectorBufferBase.1578" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1581" = type { %"class.WTF::VectorBuffer.1582" }
%"class.WTF::VectorBuffer.1582" = type { %"class.WTF::VectorBufferBase.1583" }
%"class.WTF::VectorBufferBase.1583" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1601" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1594, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1595", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1588" }
%"class.std::__1::unique_ptr.1588" = type { %"class.std::__1::__compressed_pair.1589" }
%"class.std::__1::__compressed_pair.1589" = type { %"struct.std::__1::__compressed_pair_elem.1590" }
%"struct.std::__1::__compressed_pair_elem.1590" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1594 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1723", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1723" = type { %"class.WTF::RefCounted.1724", i8, i8, %class.scoped_refptr.1594, i32, i32 }
%"class.WTF::RefCounted.1724" = type { %"class.base::RefCounted.1725" }
%"class.base::RefCounted.1725" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1726" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1726" = type { %"class.absl::optional_internal::optional_data.1727" }
%"class.absl::optional_internal::optional_data.1727" = type { %"class.absl::optional_internal::optional_data_base.1728" }
%"class.absl::optional_internal::optional_data_base.1728" = type { %"class.absl::optional_internal::optional_data_dtor_base.1729" }
%"class.absl::optional_internal::optional_data_dtor_base.1729" = type { i8, %union.anon.1730 }
%union.anon.1730 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1731", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1731" = type { %"class.std::__1::__vector_base.1732" }
%"class.std::__1::__vector_base.1732" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1733" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1595" = type { %"class.std::__1::__compressed_pair.1596" }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1601" = type { %"class.std::__1::__compressed_pair.1602" }
%"class.std::__1::__compressed_pair.1602" = type { %"struct.std::__1::__compressed_pair_elem.1603" }
%"struct.std::__1::__compressed_pair_elem.1603" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1604", %"class.std::__1::unique_ptr.1610", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1625", %"class.absl::optional.1625" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, [3 x i8], %union.anon.1629 }
%union.anon.1629 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1567"*, %"class.absl::optional.1635", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1635" = type { %"class.absl::optional_internal::optional_data.1636" }
%"class.absl::optional_internal::optional_data.1636" = type { %"class.absl::optional_internal::optional_data_base.1637" }
%"class.absl::optional_internal::optional_data_base.1637" = type { %"class.absl::optional_internal::optional_data_dtor_base.1638" }
%"class.absl::optional_internal::optional_data_dtor_base.1638" = type { i8, %union.anon.1639 }
%union.anon.1639 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1640", %"class.WTF::Vector.1645" }
%"class.WTF::Vector.1640" = type { %"class.WTF::VectorBuffer.1641" }
%"class.WTF::VectorBuffer.1641" = type { %"class.WTF::VectorBufferBase.1642", [128 x i8] }
%"class.WTF::VectorBufferBase.1642" = type { i32*, i32, i32 }
%"class.WTF::Vector.1645" = type { %"class.WTF::VectorBuffer.1646" }
%"class.WTF::VectorBuffer.1646" = type { %"class.WTF::VectorBufferBase.1647", [128 x i8] }
%"class.WTF::VectorBufferBase.1647" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1650" = type { %"class.WTF::VectorBuffer.1651" }
%"class.WTF::VectorBuffer.1651" = type { %"class.WTF::VectorBufferBase.1652" }
%"class.WTF::VectorBufferBase.1652" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1655" = type { %"class.WTF::HashTable.1656" }
%"class.WTF::HashTable.1656" = type <{ %"struct.WTF::KeyValuePair.1659"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1659" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1660", %"class.WTF::Vector.1665" }
%"class.WTF::HashMap.1660" = type { %"class.WTF::HashTable.1661" }
%"class.WTF::HashTable.1661" = type <{ %"struct.WTF::KeyValuePair.1664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1664" = type opaque
%"class.WTF::Vector.1665" = type { %"class.WTF::VectorBuffer.1666" }
%"class.WTF::VectorBuffer.1666" = type { %"class.WTF::VectorBufferBase.1667" }
%"class.WTF::VectorBufferBase.1667" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1673" = type { %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.1675" }
%"struct.std::__1::__compressed_pair_elem.1675" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1679" = type { %"class.WTF::VectorBuffer.1680" }
%"class.WTF::VectorBuffer.1680" = type { %"class.WTF::VectorBufferBase.1681" }
%"class.WTF::VectorBufferBase.1681" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1684 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1691" = type { %"class.WTF::HashSet.1694" }
%"class.WTF::HashSet.1694" = type { %"class.WTF::HashTable.1695" }
%"class.WTF::HashTable.1695" = type <{ %"class.blink::WeakMember.1697"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1697" = type opaque
%"class.blink::HeapHashSet.1698" = type { %"class.WTF::HashSet.1701" }
%"class.WTF::HashSet.1701" = type { %"class.WTF::HashTable.1702" }
%"class.WTF::HashTable.1702" = type <{ %"class.blink::WeakMember.1704"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1704" = type opaque
%"class.std::__1::unique_ptr.1705" = type { %"class.std::__1::__compressed_pair.1706" }
%"class.std::__1::__compressed_pair.1706" = type { %"struct.std::__1::__compressed_pair_elem.1707" }
%"struct.std::__1::__compressed_pair_elem.1707" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1712" = type { %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.1714" }
%"struct.std::__1::__compressed_pair_elem.1714" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1715", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.680" = type { %"class.WTF::VectorBuffer.681" }
%"class.WTF::VectorBuffer.681" = type { %"class.WTF::VectorBufferBase.682" }
%"class.WTF::VectorBufferBase.682" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.466" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.457", %"class.blink::Member.457" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.457", %"class.blink::Member.458", %"class.blink::Member.457", %"class.blink::Member.457", %"class.blink::Member.460" }
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.592", %"class.blink::Member.594", %"class.blink::Member.458", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.618", %"class.blink::Member.620", %"class.blink::Member.622", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.627", %"class.blink::HeapVector.629" }
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.672", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.680", %"class.WTF::Vector.680", i8, i32, %"class.blink::Member.685", %"class.blink::Member.497", %"class.blink::Member.1018", %"class.blink::Member.1020", %"class.blink::Member.1022", %"class.blink::Member.1024", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1026", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1032", %"class.blink::Member.1034", %"class.blink::Member.635", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1036", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1236", %"class.blink::HeapVector.611", %"class.blink::Member.455", %"class.blink::Member.993", %"class.blink::Member.455", %"class.blink::Member.455", %"class.blink::Member.455", %"class.blink::UserActionElementSet", %"class.blink::Member.1245", double, double, i64, i64, %"class.blink::HeapHashSet.1247", %"class.blink::HeapHashSet.1254", i16, i8, %"class.blink::Member.1261", %"class.blink::Member.1263", %"class.blink::Member.1265", %"class.blink::Member.1267", %"class.blink::TextLinkColors", %"class.blink::Member.1269", i8, [7 x i8], %"class.blink::HeapHashMap.1271", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.455", %"class.WTF::Vector.1278", %"class.blink::Member.1283", %"class.blink::Member.1287", i8, %"class.blink::Member.455", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1289", %"class.blink::HeapVector.1291", %"class.std::__1::unique_ptr.1299", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1305", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1318", %"class.WTF::Vector.1320", i8, i8, %"class.std::__1::unique_ptr.1325", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.611", %"class.blink::HeapVector.1331", i32, i8, %"class.blink::HeapTaskRunnerTimer.1236", %"class.blink::HeapTaskRunnerTimer.1236", %"class.blink::DocumentTiming", %"class.blink::Member.1339", i8, i32, %"class.blink::Member.1341", %"class.blink::Member.1343", %"class.blink::Member.1345", %"class.blink::HeapTaskRunnerTimer.1236", %"class.blink::Member.1347", %"class.WTF::HashMap.1349", %"class.blink::Member.1354", %"class.blink::Member.1356", %"class.blink::Member.1358", %"class.blink::Member.1360", %"class.blink::Member.594", %"class.blink::Member.594", %"class.blink::HeapTaskRunnerTimer.1236", %"class.blink::HeapHashSet.1362", i8, i32, %"class.blink::Member.1369", %"class.blink::Member.1371", i32, %"class.blink::Member.1373", %"class.blink::Member.1375", %"class.blink::Member.1377", %"class.std::__1::unique_ptr.1379", i64, %"class.std::__1::unique_ptr.1385", i32, i32, %"class.blink::Member.1391", %"class.blink::Member.1393", %"class.blink::Member.1395", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1397", %"class.WTF::Vector.1004", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1399", %"class.blink::Member.1406", %"class.std::__1::unique_ptr.1408", %"class.blink::Member.1414", i8, i8, %"class.WTF::String", %"class.blink::Member.1416", i8, [7 x i8], %"class.blink::HeapHashMap.1418", %"class.blink::HeapObserverSet.1425", %"class.blink::Member.1433", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1435", i32, i8, i8, %"class.blink::WeakMember", %"class.blink::Member.1437" }
%"class.blink::Supplementable.672" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.673" }
%"class.blink::HeapHashMap.673" = type { %"class.WTF::HashMap.676" }
%"class.WTF::HashMap.676" = type { %"class.WTF::HashTable.677" }
%"class.WTF::HashTable.677" = type <{ %"struct.WTF::KeyValuePair.679"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.679" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.637", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.639, %"class.WTF::Vector.640", %"class.WTF::Vector.640", %"class.blink::Member.457", %"class.blink::Member.645", %"class.blink::HeapHashSet.649", %"class.blink::Member.594", %"class.WTF::HashSet.656", %"class.WTF::TextPosition", %"class.blink::Member.660", %"class.blink::HeapVector.662", %"class.blink::Member.669" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.639 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.640" = type { %"class.WTF::VectorBuffer.641" }
%"class.WTF::VectorBuffer.641" = type { %"class.WTF::VectorBufferBase.642" }
%"class.WTF::VectorBufferBase.642" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.647" }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.649" = type { %"class.WTF::HashSet.652" }
%"class.WTF::HashSet.652" = type { %"class.WTF::HashTable.653" }
%"class.WTF::HashTable.653" = type <{ %"class.blink::WeakMember.655"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.655" = type { %"class.blink::MemberBase.459" }
%"class.WTF::HashSet.656" = type { %"class.WTF::HashTable.657" }
%"class.WTF::HashTable.657" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.662" = type { %"class.WTF::Vector.665" }
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.666" }
%"class.WTF::VectorBuffer.666" = type { %"class.WTF::VectorBufferBase.667" }
%"class.WTF::VectorBufferBase.667" = type { %"class.blink::Member.645"*, i32, i32 }
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1036" = type { %"class.WTF::VectorBuffer.1037" }
%"class.WTF::VectorBuffer.1037" = type { %"class.WTF::VectorBufferBase.1038" }
%"class.WTF::VectorBufferBase.1038" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1039 }
%class.scoped_refptr.1039 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.594", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.457", %"class.blink::Member.457", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1238" }
%"class.blink::HeapHashMap.1238" = type { %"class.WTF::HashMap.1241" }
%"class.WTF::HashMap.1241" = type { %"class.WTF::HashTable.1242" }
%"class.WTF::HashTable.1242" = type <{ %"struct.WTF::KeyValuePair.1244"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1244" = type opaque
%"class.blink::Member.1245" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1247" = type { %"class.WTF::HashSet.1250" }
%"class.WTF::HashSet.1250" = type { %"class.WTF::HashTable.1251" }
%"class.WTF::HashTable.1251" = type <{ %"class.blink::WeakMember.1253"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1253" = type opaque
%"class.blink::HeapHashSet.1254" = type { %"class.WTF::HashSet.1257" }
%"class.WTF::HashSet.1257" = type { %"class.WTF::HashTable.1258" }
%"class.WTF::HashTable.1258" = type <{ %"class.blink::WeakMember.1260"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1260" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.458", %"class.blink::HeapVector.629" }
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1271" = type { %"class.WTF::HashMap.1274" }
%"class.WTF::HashMap.1274" = type { %"class.WTF::HashTable.1275" }
%"class.WTF::HashTable.1275" = type <{ %"struct.WTF::KeyValuePair.1277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1277" = type opaque
%"class.WTF::Vector.1278" = type { %"class.WTF::VectorBuffer.1279" }
%"class.WTF::VectorBuffer.1279" = type { %"class.WTF::VectorBufferBase.1280" }
%"class.WTF::VectorBufferBase.1280" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1291" = type { %"class.WTF::Vector.1294" }
%"class.WTF::Vector.1294" = type { %"class.WTF::VectorBuffer.1295" }
%"class.WTF::VectorBuffer.1295" = type { %"class.WTF::VectorBufferBase.1296" }
%"class.WTF::VectorBufferBase.1296" = type { %"class.blink::Member.1297"*, i32, i32 }
%"class.blink::Member.1297" = type opaque
%"class.std::__1::unique_ptr.1299" = type { %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1305" = type { %"class.WTF::HashSet.1308" }
%"class.WTF::HashSet.1308" = type { %"class.WTF::HashTable.1309" }
%"class.WTF::HashTable.1309" = type <{ %"class.blink::WeakMember.1311"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1311" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1312", i32, [4 x i8] }>
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"struct.std::__1::pair.1315"*, i32, i32 }
%"struct.std::__1::pair.1315" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1320" = type { %"class.WTF::VectorBuffer.1321" }
%"class.WTF::VectorBuffer.1321" = type { %"class.WTF::VectorBufferBase.1322" }
%"class.WTF::VectorBufferBase.1322" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.611" = type { %"class.WTF::Vector.614" }
%"class.WTF::Vector.614" = type { %"class.WTF::VectorBuffer.615" }
%"class.WTF::VectorBuffer.615" = type { %"class.WTF::VectorBufferBase.616" }
%"class.WTF::VectorBufferBase.616" = type { %"class.blink::Member.455"*, i32, i32 }
%"class.blink::HeapVector.1331" = type { %"class.WTF::Vector.1334" }
%"class.WTF::Vector.1334" = type { %"class.WTF::VectorBuffer.1335" }
%"class.WTF::VectorBuffer.1335" = type { %"class.WTF::VectorBufferBase.1336" }
%"class.WTF::VectorBufferBase.1336" = type { %"class.blink::Member.1337"*, i32, i32 }
%"class.blink::Member.1337" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.594" }
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1349" = type { %"class.WTF::HashTable.1350" }
%"class.WTF::HashTable.1350" = type <{ %"struct.WTF::KeyValuePair.1353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1353" = type opaque
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1236" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1237", { i64, i64 } }
%"class.blink::WeakMember.1237" = type { %"class.blink::MemberBase.595" }
%"class.blink::HeapHashSet.1362" = type { %"class.WTF::HashSet.1365" }
%"class.WTF::HashSet.1365" = type { %"class.WTF::HashTable.1366" }
%"class.WTF::HashTable.1366" = type <{ %"class.blink::Member.1368"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1368" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1379" = type { %"class.std::__1::__compressed_pair.1380" }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1385" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1004" = type { %"class.WTF::VectorBuffer.1005" }
%"class.WTF::VectorBuffer.1005" = type { %"class.WTF::VectorBufferBase.1006" }
%"class.WTF::VectorBufferBase.1006" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1399" = type { %"class.WTF::HashMap.1402" }
%"class.WTF::HashMap.1402" = type { %"class.WTF::HashTable.1403" }
%"class.WTF::HashTable.1403" = type <{ %"struct.WTF::KeyValuePair.1405"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1405" = type opaque
%"class.blink::Member.1406" = type { %"class.blink::MemberBase.1407" }
%"class.blink::MemberBase.1407" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1408" = type { %"class.std::__1::__compressed_pair.1409" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.1410" }
%"struct.std::__1::__compressed_pair_elem.1410" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1418" = type { %"class.WTF::HashMap.1421" }
%"class.WTF::HashMap.1421" = type { %"class.WTF::HashTable.1422" }
%"class.WTF::HashTable.1422" = type <{ %"struct.WTF::KeyValuePair.1424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1424" = type opaque
%"class.blink::HeapObserverSet.1425" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1426" }
%"class.blink::HeapHashSet.1426" = type { %"class.WTF::HashSet.1429" }
%"class.WTF::HashSet.1429" = type { %"class.WTF::HashTable.1430" }
%"class.WTF::HashTable.1430" = type <{ %"class.blink::WeakMember.1432"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1432" = type opaque
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.594", %"class.blink::HeapHashSet.1441", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1448", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1441" = type { %"class.WTF::HashSet.1444" }
%"class.WTF::HashSet.1444" = type { %"class.WTF::HashTable.1445" }
%"class.WTF::HashTable.1445" = type <{ %"class.blink::Member.1447"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1447" = type opaque
%"class.blink::HeapTaskRunnerTimer.1448" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1449", { i64, i64 } }
%"class.blink::WeakMember.1449" = type { %"class.blink::MemberBase.1436" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Node"* }
%"class.blink::Member.1437" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.600" }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type { %"class.WTF::AtomicString", %"class.blink::Member.607" }
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.455", i32, %"class.blink::HeapVector.611" }
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.624" }
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::HeapHashMap.626"* }
%"class.blink::HeapHashMap.626" = type opaque
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.629" = type { %"class.WTF::Vector.632" }
%"class.WTF::Vector.632" = type { %"class.WTF::VectorBuffer.633" }
%"class.WTF::VectorBuffer.633" = type { %"class.WTF::VectorBufferBase.634" }
%"class.WTF::VectorBufferBase.634" = type { %"class.blink::Member.635"*, i32, i32 }
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.457" = type { %"class.blink::MemberBase.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.470", %"class.blink::Member.472", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.470" = type { %"class.WTF::SingleThreadedBitField.471" }
%"class.WTF::SingleThreadedBitField.471" = type { i32 }
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.474 }
%class.scoped_refptr.474 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.475", %"class.WTF::AtomicString", %"class.WTF::Vector.477" }
%"class.WTF::RefCounted.475" = type { %"class.base::RefCounted.476" }
%"class.base::RefCounted.476" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479", [32 x i8] }
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.492 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type { %"class.base::sequence_manager::TaskTimeObserver", i8, %"class.base::TimeDelta", i32, i32, i32, i8*, [7 x %"class.base::TimeDelta"], %"class.blink::Member.376", %"class.blink::Member.497", %"class.v8::Isolate"*, i8, i8, [6 x i8], %"class.blink::HeapHashMap.498" }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }
%"class.blink::HeapHashMap.498" = type { %"class.WTF::HashMap.501" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.504" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.517" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2221" }
%"class.mojo::Remote.2221" = type { %"class.mojo::internal::InterfacePtrState.2222" }
%"class.mojo::internal::InterfacePtrState.2222" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2223" }
%"class.std::__1::unique_ptr.2223" = type { %"class.std::__1::__compressed_pair.2224" }
%"class.std::__1::__compressed_pair.2224" = type { %"struct.std::__1::__compressed_pair_elem.2225" }
%"struct.std::__1::__compressed_pair_elem.2225" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.522, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.522 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.523", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.523" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.531, i8, [7 x i8] }>
%class.scoped_refptr.531 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.532", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.532" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.533" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.540" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.553" }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2231" }
%"class.mojo::AssociatedRemote.2231" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2232" }
%"class.mojo::internal::AssociatedInterfacePtrState.2232" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2233" }
%"class.std::__1::unique_ptr.2233" = type { %"class.std::__1::__compressed_pair.2234" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.2235" }
%"struct.std::__1::__compressed_pair_elem.2235" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.555" = type { %"class.blink::Member.556" }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2241" }
%"class.mojo::AssociatedRemote.2241" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2242" }
%"class.mojo::internal::AssociatedInterfacePtrState.2242" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2243" }
%"class.std::__1::unique_ptr.2243" = type { %"class.std::__1::__compressed_pair.2244" }
%"class.std::__1::__compressed_pair.2244" = type { %"struct.std::__1::__compressed_pair_elem.2245" }
%"struct.std::__1::__compressed_pair_elem.2245" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.558" }
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2251", %"class.blink::Member.376", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2251" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2252" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.321" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2252" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.560" = type { %"class.blink::Member.561" }
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2255", %"class.blink::Member.376", %"class.mojo::AssociatedReceiver.2256" }
%"class.blink::ThreadState::PrefinalizerRegistration.2255" = type { i8 }
%"class.mojo::AssociatedReceiver.2256" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2257" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2257" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.563" }
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2260", %"class.blink::Member.376", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2260" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.204, %"class.std::__1::unique_ptr.321", %"class.base::WeakPtrFactory.2261" }
%"class.base::WeakPtrFactory.2261" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.565" = type { %"class.blink::Member.566" }
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2264", %"class.blink::Member.376", %"class.mojo::AssociatedReceiver.2265" }
%"class.blink::ThreadState::PrefinalizerRegistration.2264" = type { i8 }
%"class.mojo::AssociatedReceiver.2265" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2266" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2266" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::HeapHashMap.576"* }
%"class.blink::HeapHashMap.576" = type opaque
%"class.mojo::StructPtr.577" = type { %"class.std::__1::unique_ptr.578" }
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.581" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.581" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.587" = type { %"class.absl::optional_internal::optional_data.588" }
%"class.absl::optional_internal::optional_data.588" = type { %"class.absl::optional_internal::optional_data_base.589" }
%"class.absl::optional_internal::optional_data_base.589" = type { %"class.absl::optional_internal::optional_data_dtor_base.590" }
%"class.absl::optional_internal::optional_data_dtor_base.590" = type { i8, %union.anon.591 }
%union.anon.591 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.90", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.378"*, %"struct.std::__1::pair.378"*, %"class.std::__1::__compressed_pair.379" }
%"struct.std::__1::pair.378" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"struct.std::__1::pair.378"* }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.386" = type { %"class.absl::optional_internal::optional_data.387" }
%"class.absl::optional_internal::optional_data.387" = type { %"class.absl::optional_internal::optional_data_base.388" }
%"class.absl::optional_internal::optional_data_base.388" = type { %"class.absl::optional_internal::optional_data_dtor_base.389" }
%"class.absl::optional_internal::optional_data_dtor_base.389" = type { i8, %union.anon.390 }
%union.anon.390 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.391" = type { %"class.absl::optional_internal::optional_data.392" }
%"class.absl::optional_internal::optional_data.392" = type { %"class.absl::optional_internal::optional_data_base.393" }
%"class.absl::optional_internal::optional_data_base.393" = type { %"class.absl::optional_internal::optional_data_dtor_base.394" }
%"class.absl::optional_internal::optional_data_dtor_base.394" = type { i8, %union.anon.395 }
%union.anon.395 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.396 }
%class.scoped_refptr.396 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.397" }
%"class.blink::HeapHashSet.397" = type { %"class.WTF::HashSet.400" }
%"class.WTF::HashSet.400" = type { %"class.WTF::HashTable.401" }
%"class.WTF::HashTable.401" = type <{ %"class.blink::WeakMember.403"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.403" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.96", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ %"class.blink::WeakMember.117"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.117" = type opaque
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.140" }
%"class.WTF::Deque.140" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.143" }
%"class.WTF::VectorBuffer.143" = type { %"class.WTF::VectorBufferBase.144" }
%"class.WTF::VectorBufferBase.144" = type { %"class.std::__1::unique_ptr.145"*, i32, i32 }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.151", i32, [4 x i8] }>
%"class.std::__1::bitset.151" = type { %"class.std::__1::__bitset.152" }
%"class.std::__1::__bitset.152" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.153" }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.158", i64, %"class.absl::optional", i64 }
%"class.absl::optional.158" = type { %"class.absl::optional_internal::optional_data.159" }
%"class.absl::optional_internal::optional_data.159" = type { %"class.absl::optional_internal::optional_data_base.160" }
%"class.absl::optional_internal::optional_data_base.160" = type { %"class.absl::optional_internal::optional_data_dtor_base.161" }
%"class.absl::optional_internal::optional_data_dtor_base.161" = type { i8, %union.anon.162 }
%union.anon.162 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.163" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.169" = type { %"class.WTF::HashSet.172" }
%"class.WTF::HashSet.172" = type { %"class.WTF::HashTable.173" }
%"class.WTF::HashTable.173" = type <{ %"class.blink::WeakMember.175"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.175" = type opaque
%"class.blink::Member.96" = type { %"class.blink::MemberBase.52" }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::HeapDeque.53" = type { %"class.WTF::Deque.56" }
%"class.WTF::Deque.56" = type { %"class.WTF::Deque<blink::Member<blink::PerformanceEventTiming>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PerformanceEventTiming>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %"class.blink::Member.22"*, i32, i32 }
%"class.WTF::Deque.60" = type { %"class.WTF::Deque<unsigned long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<unsigned long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { i64*, i32, i32 }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::PerformanceEventTiming"* }
%"class.blink::PerformanceEventTiming" = type { %"class.blink::PerformanceEntry.base", %"class.WTF::AtomicString", double, double, i8, %"class.blink::WeakMember" }
%"class.blink::PerformanceEntry.base" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32 }>
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::EventCounts"* }
%"class.blink::EventCounts" = type { %"class.blink::ScriptWrappable", %"class.blink::Maplike", %"class.WTF::HashMap.67" }
%"class.blink::Maplike" = type { %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::HashMap.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"struct.WTF::KeyValuePair.71"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.71" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::PerformanceNavigation"* }
%"class.blink::PerformanceNavigation" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::PerformanceTiming"* }
%"class.blink::PerformanceTiming" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.853", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.861", %"class.blink::Member.594", %"class.blink::Member.863", i8, %"class.blink::Member.865", %"class.blink::Member.867", %"class.blink::Member.869", %"class.blink::Member.869", %"class.blink::Member.869", %"class.blink::Member.869", %"class.blink::Member.869", %"class.blink::Member.869", %"class.blink::Member.871", %"class.blink::Member.873", %"class.blink::Member.875", %"class.blink::Member.877", %"class.blink::Member.879", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.820", %"class.blink::Member.881", %class.scoped_refptr.883, %"class.blink::HeapHashSet.945", %"class.blink::Member.952", %"class.blink::HeapHashMap.965", %"class.std::__1::unique_ptr.972", %"class.blink::Member.978", %"class.blink::Member.997", %"class.blink::Member.999", %"class.blink::Member.1001", %"class.WTF::Vector.1004", %"class.util::TokenType", %"class.WTF::HashSet.1009", %"class.WTF::Deque.1013" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.687", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.767", i32, i8, [3 x i8], %"class.blink::HeapVector.769", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.777", %"class.blink::Member.779", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.788", %"class.blink::Member.849", %"class.blink::Member.851", i8 }>
%"class.blink::Supplementable.853" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.854" }
%"class.blink::HeapHashMap.854" = type { %"class.WTF::HashMap.857" }
%"class.WTF::HashMap.857" = type { %"class.WTF::HashTable.858" }
%"class.WTF::HashTable.858" = type <{ %"struct.WTF::KeyValuePair.860"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.860" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.861" = type { %"class.blink::MemberBase.862" }
%"class.blink::MemberBase.862" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%"class.blink::HeapHashSet.945" = type { %"class.WTF::HashSet.948" }
%"class.WTF::HashSet.948" = type { %"class.WTF::HashTable.949" }
%"class.WTF::HashTable.949" = type <{ %"class.blink::WeakMember.951"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.951" = type opaque
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.959", %"class.blink::Member.959", %"class.blink::Member.961", %"class.blink::Member.963", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.954" }
%"class.absl::optional.954" = type { %"class.absl::optional_internal::optional_data.955" }
%"class.absl::optional_internal::optional_data.955" = type { %"class.absl::optional_internal::optional_data_base.956" }
%"class.absl::optional_internal::optional_data_base.956" = type { %"class.absl::optional_internal::optional_data_dtor_base.957" }
%"class.absl::optional_internal::optional_data_dtor_base.957" = type { i8, %union.anon.958 }
%union.anon.958 = type { i64 }
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::Event"* }
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.965" = type { %"class.WTF::HashMap.968" }
%"class.WTF::HashMap.968" = type { %"class.WTF::HashTable.969" }
%"class.WTF::HashTable.969" = type <{ %"struct.WTF::KeyValuePair.971"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.971" = type opaque
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.376", %"class.blink::CachedTextInputInfo", %"class.blink::Member.993", %"class.blink::Member.995", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.984", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.986", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.986" = type { %"class.WTF::HashMap.989" }
%"class.WTF::HashMap.989" = type { %"class.WTF::HashTable.990" }
%"class.WTF::HashTable.990" = type <{ %"struct.WTF::KeyValuePair.992"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.992" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.457", i32, i32 }
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.685", %"class.blink::Member.1464", %"class.blink::Member.1466" }
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.685", %"class.blink::HeapMojoRemote.1459" }
%"class.blink::HeapMojoRemote.1459" = type { %"class.blink::Member.1460" }
%"class.blink::Member.1460" = type { %"class.blink::MemberBase.1461" }
%"class.blink::MemberBase.1461" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::HeapHashMap.1003"* }
%"class.blink::HeapHashMap.1003" = type opaque
%"class.WTF::HashSet.1009" = type { %"class.WTF::HashTable.1010" }
%"class.WTF::HashTable.1010" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1013" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1016" }
%"class.WTF::VectorBuffer.1016" = type { %"class.WTF::VectorBufferBase.1017" }
%"class.WTF::VectorBufferBase.1017" = type { i64*, i32, i32 }
%"class.blink::VisibilityStateEntry" = type { %"class.blink::PerformanceEntry.base", [4 x i8] }
%"class.blink::MemoryInfo" = type { %"class.blink::ScriptWrappable", %"struct.blink::HeapInfo" }
%"struct.blink::HeapInfo" = type { i64, i64, i64 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2049, %"class.blink::Member.2050", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2054" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2049 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2052" }
%"class.blink::Persistent.2052" = type { %"class.blink::PersistentBase.2053" }
%"class.blink::PersistentBase.2053" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2054" = type { %"class.base::StrongAlias.2055" }
%"class.base::StrongAlias.2055" = type { %"class.base::UnguessableToken" }
%"class.ukm::builders::PerformanceAPI_Memory_Legacy" = type { %"class.ukm::internal::UkmEntryBuilderBase" }
%"class.ukm::internal::UkmEntryBuilderBase" = type { i32 (...)**, %"class.mojo::StructPtr.2056" }
%"class.mojo::StructPtr.2056" = type { %"class.std::__1::unique_ptr.2057" }
%"class.std::__1::unique_ptr.2057" = type { %"class.std::__1::__compressed_pair.2058" }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.2059" }
%"struct.std::__1::__compressed_pair_elem.2059" = type { %"class.ukm::mojom::UkmEntry"* }
%"class.ukm::mojom::UkmEntry" = type { i64, i64, %"class.base::flat_map.2060" }
%"class.base::flat_map.2060" = type { %"class.base::internal::flat_tree.2061" }
%"class.base::internal::flat_tree.2061" = type { %"class.std::__1::vector.2062" }
%"class.std::__1::vector.2062" = type { %"class.std::__1::__vector_base.2063" }
%"class.std::__1::__vector_base.2063" = type { %"struct.std::__1::pair.2064"*, %"struct.std::__1::pair.2064"*, %"class.std::__1::__compressed_pair.2065" }
%"struct.std::__1::pair.2064" = type opaque
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { %"struct.std::__1::pair.2064"* }
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::PerformanceNavigationTiming" = type { %"class.blink::PerformanceResourceTiming", %"class.blink::ExecutionContextClient", %class.scoped_refptr.1997 }
%"class.blink::PerformanceResourceTiming" = type { %"class.blink::PerformanceEntry.base", %"class.blink::mojom::blink::WorkerTimingContainer", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.base::TimeTicks", i8, %class.scoped_refptr.1798, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32, i32, i64, i64, i8, i8, i8, i8, i8, %"class.blink::HeapVector.2073", %"class.blink::HeapVector.8", %"class.blink::HeapMojoReceiver.2082" }
%"class.blink::mojom::blink::WorkerTimingContainer" = type { i32 (...)** }
%"class.blink::HeapVector.2073" = type { %"class.WTF::Vector.2076" }
%"class.WTF::Vector.2076" = type { %"class.WTF::VectorBuffer.2077" }
%"class.WTF::VectorBuffer.2077" = type { %"class.WTF::VectorBufferBase.2078" }
%"class.WTF::VectorBufferBase.2078" = type { %"class.blink::Member.2079"*, i32, i32 }
%"class.blink::Member.2079" = type { %"class.blink::MemberBase.2080" }
%"class.blink::MemberBase.2080" = type { %"class.blink::PerformanceServerTiming"* }
%"class.blink::PerformanceServerTiming" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", double, %"class.WTF::String" }
%"class.blink::HeapMojoReceiver.2082" = type { %"class.blink::Member.2083" }
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::V8ObjectBuilder" = type { %"class.blink::ScriptState"*, %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"struct.std::__1::pair.2085" = type { %"class.WTF::AtomicString", %"class.blink::DOMWindow"* }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.90", %"class.blink::Member.2105", %"struct.blink::FramePolicy", %"class.blink::Member.2107", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.2105" = type { %"class.blink::MemberBase.2106" }
%"class.blink::MemberBase.2106" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback.2109" }
%"class.base::OnceCallback.2109" = type { %"class.base::internal::CallbackBase" }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.2110" }
%"class.blink::PersistentBase.2110" = type { %"class.blink::WindowPerformance"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.2111" }
%"struct.std::__1::atomic.2111" = type { %"struct.std::__1::__atomic_base.2112" }
%"struct.std::__1::__atomic_base.2112" = type { %"struct.std::__1::__cxx_atomic_impl.2113" }
%"struct.std::__1::__cxx_atomic_impl.2113" = type { %"struct.std::__1::__cxx_atomic_base_impl.2114" }
%"struct.std::__1::__cxx_atomic_base_impl.2114" = type { %"class.blink::PersistentNode"* }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.2314" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::CrossThreadWeakPersistent" }
%"class.std::__1::__tuple_leaf.2314" = type { i64 }
%"class.std::__1::unique_ptr.2149" = type { %"class.std::__1::__compressed_pair.2150" }
%"class.std::__1::__compressed_pair.2150" = type { %"struct.std::__1::__compressed_pair_elem.2151" }
%"struct.std::__1::__compressed_pair_elem.2151" = type { %"class.blink::TracedValue"* }
%"class.blink::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.2152" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2152" = type { %"class.std::__1::__compressed_pair.2153" }
%"class.std::__1::__compressed_pair.2153" = type { %"struct.std::__1::__compressed_pair_elem.2154" }
%"struct.std::__1::__compressed_pair_elem.2154" = type { %"class.base::trace_event::TracedValue"* }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.2155" }
%"class.std::__1::unique_ptr.2155" = type { %"class.std::__1::__compressed_pair.2156" }
%"class.std::__1::__compressed_pair.2156" = type { %"struct.std::__1::__compressed_pair_elem.2157" }
%"struct.std::__1::__compressed_pair_elem.2157" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.blink::InteractiveDetector" = type { %"class.blink::Supplement", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::LongTaskObserver", %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %struct.anon.2117, %"class.WTF::Vector.2128", %"class.WTF::Vector.2128", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.2133", %"class.blink::HeapTaskRunnerTimer.2141", %"class.base::TimeTicks", %"class.WTF::Vector.2144", i8, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.ukm::UkmRecorder"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.594" }
%"class.blink::LongTaskObserver" = type { %"class.blink::GarbageCollectedMixin" }
%struct.anon.2117 = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.2118", %"class.absl::optional.2118", %"class.absl::optional", %"class.absl::optional.2118", %"class.absl::optional", %"class.WTF::Vector.2123" }
%"class.absl::optional.2118" = type { %"class.absl::optional_internal::optional_data.2119" }
%"class.absl::optional_internal::optional_data.2119" = type { %"class.absl::optional_internal::optional_data_base.2120" }
%"class.absl::optional_internal::optional_data_base.2120" = type { %"class.absl::optional_internal::optional_data_dtor_base.2121" }
%"class.absl::optional_internal::optional_data_dtor_base.2121" = type { i8, %union.anon.2122 }
%union.anon.2122 = type { %"class.base::TimeTicks" }
%"class.WTF::Vector.2123" = type { %"class.WTF::VectorBuffer.2124" }
%"class.WTF::VectorBuffer.2124" = type { %"class.WTF::VectorBufferBase.2125" }
%"class.WTF::VectorBufferBase.2125" = type { %"class.absl::optional"*, i32, i32 }
%"class.WTF::Vector.2128" = type { %"class.WTF::VectorBuffer.2129" }
%"class.WTF::VectorBuffer.2129" = type { %"class.WTF::VectorBufferBase.2130" }
%"class.WTF::VectorBufferBase.2130" = type { %"class.WTF::PODInterval"*, i32, i32 }
%"class.WTF::PODInterval" = type opaque
%"class.std::__1::unique_ptr.2133" = type { %"class.std::__1::__compressed_pair.2134" }
%"class.std::__1::__compressed_pair.2134" = type { %"struct.std::__1::__compressed_pair_elem.2135" }
%"struct.std::__1::__compressed_pair_elem.2135" = type { %"class.blink::InteractiveDetector::NetworkActivityChecker"* }
%"class.blink::InteractiveDetector::NetworkActivityChecker" = type { i32 (...)**, %"class.blink::WeakPersistent" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.2136" }
%"class.blink::PersistentBase.2136" = type { %"class.blink::Document"*, %"class.blink::PersistentNodePtr.2137" }
%"class.blink::PersistentNodePtr.2137" = type { %"class.blink::PersistentNode"* }
%"class.blink::HeapTaskRunnerTimer.2141" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2142", { i64, i64 } }
%"class.blink::WeakMember.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::InteractiveDetector"* }
%"class.WTF::Vector.2144" = type { %"class.WTF::VectorBuffer.2145" }
%"class.WTF::VectorBuffer.2145" = type { %"class.WTF::VectorBufferBase.2146" }
%"class.WTF::VectorBufferBase.2146" = type { %"struct.blink::InteractiveDetector::VisibilityChangeEvent"*, i32, i32 }
%"struct.blink::InteractiveDetector::VisibilityChangeEvent" = type <{ %"class.base::TimeTicks", i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2369", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.2369" = type { %"class.std::__1::__vector_base.2370" }
%"class.std::__1::__vector_base.2370" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2371" }
%"class.std::__1::__compressed_pair.2371" = type { %"struct.std::__1::__compressed_pair_elem.2372" }
%"struct.std::__1::__compressed_pair_elem.2372" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2279", i64, i64 }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.2376" }
%"class.std::__1::list.2376" = type { %"class.std::__1::__list_imp.2377" }
%"class.std::__1::__list_imp.2377" = type { %"struct.std::__1::__list_node_base.2378", %"class.std::__1::__compressed_pair.2379" }
%"struct.std::__1::__list_node_base.2378" = type { %"struct.std::__1::__list_node_base.2378"*, %"struct.std::__1::__list_node_base.2378"* }
%"class.std::__1::__compressed_pair.2379" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::PerformanceElementTiming" = type { %"class.blink::PerformanceEntry.base", %"class.blink::WeakMember.2167", %"class.blink::Member.2168", double, double, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::WeakMember.2167" = type { %"class.blink::MemberBase.456" }
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::DOMRectReadOnly"* }
%"class.blink::DOMRectReadOnly" = type { %"class.blink::ScriptWrappable", double, double, double, double }
%"class.blink::LayoutShift" = type { %"class.blink::PerformanceEntry.base", double, i8, double, %"class.blink::HeapVector.2170" }
%"class.blink::HeapVector.2170" = type { %"class.WTF::Vector.2173" }
%"class.WTF::Vector.2173" = type { %"class.WTF::VectorBuffer.2174" }
%"class.WTF::VectorBuffer.2174" = type { %"class.WTF::VectorBufferBase.2175", [40 x i8] }
%"class.WTF::VectorBufferBase.2175" = type { %"class.blink::Member.2176"*, i32, i32 }
%"class.blink::Member.2176" = type { %"class.blink::MemberBase.2177" }
%"class.blink::MemberBase.2177" = type { %"class.blink::LayoutShiftAttribution"* }
%"class.blink::LayoutShiftAttribution" = type { %"class.blink::ScriptWrappable", %"class.blink::WeakMember", %"class.blink::Member.2168", %"class.blink::Member.2168" }
%"class.blink::LargestContentfulPaint" = type { %"class.blink::PerformanceEntry.base", i64, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::WeakMember.2167" }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2182", i8, [7 x i8] }>
%"class.blink::Member.2182" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::EventListener"* }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.2187", %"class.blink::ScriptValue" }
%"class.blink::Member.2187" = type { %"class.blink::MemberBase.2188" }
%"class.blink::MemberBase.2188" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.2184", %class.scoped_refptr.1039 }
%"class.blink::TraceWrapperV8Reference.2184" = type { %"class.v8::TracedReference.2185" }
%"class.v8::TracedReference.2185" = type { %"class.v8::BasicTracedReference.2186" }
%"class.v8::BasicTracedReference.2186" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2184" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2189", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2189" = type { %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.2191" }
%"struct.std::__1::__compressed_pair_elem.2191" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.2315" }
%"class.blink::PersistentBase.2315" = type { %"class.blink::WindowPerformance"*, %"class.blink::CrossThreadPersistentNodePtr.2316" }
%"class.blink::CrossThreadPersistentNodePtr.2316" = type { %"struct.std::__1::atomic.2111" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.2391" = type { i8 }

$_ZN5blink15V8ObjectBuilder3AddIPNS_17PerformanceTimingEEERS0_RKN3WTF10StringViewERKT_ = comdat any

$_ZN5blink15V8ObjectBuilder3AddIPNS_21PerformanceNavigationEEERS0_RKN3WTF10StringViewERKT_ = comdat any

$_ZNK5blink18PerformanceMonitor6Client5TraceEPNS_7VisitorE = comdat any

$_ZN3WTF19CrossThreadBindOnceIMN5blink17WindowPerformanceEFvmNS1_13WebSwapResultEN4base9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EERmEEEDaOT_DpOT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSK_yjySK_OT_SK_OT0_ = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink11Performance18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZN5blink18PerformanceMonitor6Client16ReportLongLayoutEN4base9TimeDeltaE = comdat any

$_ZN5blink18PerformanceMonitor6Client22ReportGenericViolationENS0_9ViolationERKN3WTF6StringEN4base9TimeDeltaEPNS_14SourceLocationE = comdat any

$_ZN5blink18PerformanceMonitor6Client14ReportLongTaskEN4base9TimeTicksES3_PNS_16ExecutionContextEb = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEFvS5_S6_EE7RunOnceEPNS0_13BindStateBaseES5_OS6_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEFvS5_S6_EE7RunImplIS8_NSt3__15tupleIJSA_mEEEJLm0ELm1EEEEvOT_OT0_NSF_16integer_sequenceImJXspT1_EEEEOS5_OS6_ = comdat any

$_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_17WindowPerformanceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal9BindStateIMN5blink17WindowPerformanceEFvmNS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EEmEEC2IS7_JS9_mEEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink17WindowPerformanceEFvmNS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EEmEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_27PerformanceNavigationTimingEE4CallIJPNS_14LocalDOMWindowERPNS_18ResourceTimingInfoERN4base9TimeTicksEbNS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEEEEEPS1_DpOT_ = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_22PerformanceEventTimingEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11EventCountsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21PerformanceNavigationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17PerformanceTimingEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF5DequeIN5blink6MemberINS1_22PerformanceEventTimingEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_22PerformanceEventTimingEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF5DequeImLj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_20VisibilityStateEntryEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink18PerformanceMonitor6ClientE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink17WindowPerformanceE = hidden unnamed_addr constant { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] } { [38 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::WindowPerformance"*)* @_ZN5blink17WindowPerformanceD2Ev to i8*), i8* bitcast (void (%"class.blink::WindowPerformance"*)* @_ZN5blink17WindowPerformanceD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::WindowPerformance"*, %"class.blink::Visitor"*)* @_ZNK5blink17WindowPerformance5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::Performance"*)* @_ZNK5blink11Performance18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Performance"*)* @_ZNK5blink11Performance13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::WindowPerformance"*)* @_ZNK5blink17WindowPerformance19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.blink::PerformanceTiming"* (%"class.blink::WindowPerformance"*)* @_ZNK5blink17WindowPerformance6timingEv to i8*), i8* bitcast (%"class.blink::PerformanceNavigation"* (%"class.blink::WindowPerformance"*)* @_ZNK5blink17WindowPerformance10navigationEv to i8*), i8* bitcast (%"class.blink::MemoryInfo"* (%"class.blink::WindowPerformance"*, %"class.blink::ScriptState"*)* @_ZNK5blink17WindowPerformance6memoryEPNS_11ScriptStateE to i8*), i8* bitcast (void (%"class.blink::ScriptPromise"*, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZNK5blink11Performance30measureUserAgentSpecificMemoryEPNS_11ScriptStateERNS_14ExceptionStateE to i8*), i8* bitcast (%"class.blink::EventCounts"* (%"class.blink::WindowPerformance"*)* @_ZN5blink17WindowPerformance11eventCountsEv to i8*), i8* bitcast (%"class.blink::PerformanceNavigationTiming"* (%"class.blink::WindowPerformance"*)* @_ZN5blink17WindowPerformance30CreateNavigationTimingInstanceEv to i8*), i8* bitcast (void (%"class.blink::WindowPerformance"*, %"class.blink::V8ObjectBuilder"*)* @_ZNK5blink17WindowPerformance14BuildJSONValueERNS_15V8ObjectBuilderE to i8*), i8* bitcast (void (%"class.blink::WindowPerformance"*)* @_ZN5blink17WindowPerformance21PageVisibilityChangedEv to i8*), i8* bitcast (void (%"class.blink::WindowPerformance"*, i64, i64, %"class.blink::ExecutionContext"*, i1)* @_ZN5blink17WindowPerformance14ReportLongTaskEN4base9TimeTicksES2_PNS_16ExecutionContextEb to i8*)], [6 x i8*] [i8* inttoptr (i64 -672 to i8*), i8* null, i8* bitcast (void (%"class.blink::WindowPerformance"*, %"class.blink::Visitor"*)* @_ZThn672_NK5blink17WindowPerformance5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::WindowPerformance"*, i64, i64, %"class.blink::ExecutionContext"*, i1)* @_ZThn672_N5blink17WindowPerformance14ReportLongTaskEN4base9TimeTicksES2_PNS_16ExecutionContextEb to i8*), i8* bitcast (void (%"class.blink::PerformanceMonitor::Client"*, i64)* @_ZN5blink18PerformanceMonitor6Client16ReportLongLayoutEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.blink::PerformanceMonitor::Client"*, i64, %"class.WTF::String"*, i64, %"class.blink::SourceLocation"*)* @_ZN5blink18PerformanceMonitor6Client22ReportGenericViolationENS0_9ViolationERKN3WTF6StringEN4base9TimeDeltaEPNS_14SourceLocationE to i8*)], [3 x i8*] [i8* inttoptr (i64 -680 to i8*), i8* null, i8* bitcast (void (%"class.blink::WindowPerformance"*, %"class.blink::Visitor"*)* @_ZThn680_NK5blink17WindowPerformance5TraceEPNS_7VisitorE to i8*)], [4 x i8*] [i8* inttoptr (i64 -696 to i8*), i8* null, i8* bitcast (void (%"class.blink::WindowPerformance"*, %"class.blink::Visitor"*)* @_ZThn696_NK5blink17WindowPerformance5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::WindowPerformance"*)* @_ZThn696_N5blink17WindowPerformance21PageVisibilityChangedEv to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"timing\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"navigation\00", align 1
@_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE23s_kAmbiguousAttribution = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE23s_kAmbiguousAttribution = internal global i64 0, align 8
@_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE21s_kUnknownAttribution = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE21s_kUnknownAttribution = internal global i64 0, align 8
@_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE35s_kCrossOriginDescendantAttribution = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE35s_kCrossOriginDescendantAttribution = internal global i64 0, align 8
@_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE33s_kCrossOriginAncestorAttribution = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE33s_kCrossOriginAncestorAttribution = internal global i64 0, align 8
@_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE25s_kCrossOriginAttribution = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE25s_kCrossOriginAttribution = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names12kPointeroverE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names13kPointerenterE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names12kPointerdownE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names10kPointerupE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names14kPointercancelE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names11kPointeroutE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names13kPointerleaveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names18kGotpointercaptureE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names19kLostpointercaptureE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [12 x i8] c"EventTiming\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"frame\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"pointerdown\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"pointerup\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"click\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"keydown\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"mousedown\00", align 1
@_ZTVN5blink18PerformanceMonitor6ClientE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PerformanceMonitor::Client"*, %"class.blink::Visitor"*)* @_ZNK5blink18PerformanceMonitor6Client5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::PerformanceMonitor::Client"*, i64, i64, %"class.blink::ExecutionContext"*, i1)* @_ZN5blink18PerformanceMonitor6Client14ReportLongTaskEN4base9TimeTicksES3_PNS_16ExecutionContextEb to i8*), i8* bitcast (void (%"class.blink::PerformanceMonitor::Client"*, i64)* @_ZN5blink18PerformanceMonitor6Client16ReportLongLayoutEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.blink::PerformanceMonitor::Client"*, i64, %"class.WTF::String"*, i64, %"class.blink::SourceLocation"*)* @_ZN5blink18PerformanceMonitor6Client22ReportGenericViolationENS0_9ViolationERKN3WTF6StringEN4base9TimeDeltaEPNS_14SourceLocationE to i8*)] }, comdat, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase34is_visibility_state_entry_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZZN5blink12_GLOBAL__N_111SelfKeywordEvE18s_kSelfAttribution = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_111SelfKeywordEvE18s_kSelfAttribution = internal global i64 0, align 8
@.str.11 = private unnamed_addr constant [5 x i8] c"self\00", align 1
@_ZZN5blink12_GLOBAL__N_125SameOriginAncestorKeywordEvE32s_kSameOriginAncestorAttribution = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_125SameOriginAncestorKeywordEvE32s_kSameOriginAncestorAttribution = internal global i64 0, align 8
@.str.12 = private unnamed_addr constant [21 x i8] c"same-origin-ancestor\00", align 1
@_ZZN5blink12_GLOBAL__N_127SameOriginDescendantKeywordEvE34s_kSameOriginDescendantAttribution = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_127SameOriginDescendantKeywordEvE34s_kSameOriginDescendantAttribution = internal global i64 0, align 8
@.str.13 = private unnamed_addr constant [23 x i8] c"same-origin-descendant\00", align 1
@_ZZN5blink12_GLOBAL__N_117SameOriginKeywordEvE24s_kSameOriginAttribution = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_117SameOriginKeywordEvE24s_kSameOriginAttribution = internal global i64 0, align 8
@.str.14 = private unnamed_addr constant [12 x i8] c"same-origin\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"iframe\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"embed\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"portal\00", align 1
@.str.19 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink10html_names9kDataAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase24is_event_timing_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11Performance18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.20 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.21 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.23 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.24 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"multiple-contexts\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"cross-origin-descendant\00", align 1
@.str.30 = private unnamed_addr constant [22 x i8] c"cross-origin-ancestor\00", align 1
@.str.31 = private unnamed_addr constant [25 x i8] c"cross-origin-unreachable\00", align 1
@.str.32 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.33 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.35 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.36 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_22PerformanceEventTimingEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::PerformanceEventTiming>, WTF::VectorTraits<blink::Member<blink::PerformanceEventTiming> > >]\00", align 1
@.str.37 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned long]\00", align 1
@.str.38 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.39 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16PerformanceEntryEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [173 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::PerformanceEntry>, WTF::VectorTraits<blink::Member<blink::PerformanceEntry> > >]\00", align 1

@_ZN5blink17WindowPerformanceC1EPNS_14LocalDOMWindowE = hidden unnamed_addr alias void (%"class.blink::WindowPerformance"*, %"class.blink::LocalDOMWindow"*), void (%"class.blink::WindowPerformance"*, %"class.blink::LocalDOMWindow"*)* @_ZN5blink17WindowPerformanceC2EPNS_14LocalDOMWindowE
@_ZN5blink17WindowPerformanceD1Ev = hidden unnamed_addr alias void (%"class.blink::WindowPerformance"*), void (%"class.blink::WindowPerformance"*)* @_ZN5blink17WindowPerformanceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformanceC2EPNS_14LocalDOMWindowE(%"class.blink::WindowPerformance"*, %"class.blink::LocalDOMWindow"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.blink::Frame"** %4 to %"class.blink::LocalFrame"**
  %6 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %6, i64 0, i32 10, i32 2, i32 0, i32 0
  %8 = load %"class.blink::DocumentLoader"*, %"class.blink::DocumentLoader"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %8, i64 0, i32 37, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call zeroext i1 @_ZNK5blink14LocalDOMWindow29CrossOriginIsolatedCapabilityEv(%"class.blink::LocalDOMWindow"* %1) #11
  %12 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink14LocalDOMWindow13GetTaskRunnerENS_8TaskTypeE(%"class.blink::LocalDOMWindow"* %1, i8 zeroext 19) #11
  %13 = icmp eq %"class.blink::LocalDOMWindow"* %1, null
  %14 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %1, i64 0, i32 1
  %15 = bitcast %"class.blink::ExecutionContext.base"* %14 to %"class.blink::ExecutionContext"*
  %16 = select i1 %13, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %15
  tail call void @_ZN5blink11PerformanceC2EN4base9TimeTicksEb13scoped_refptrINS1_22SingleThreadTaskRunnerEEPNS_16ExecutionContextE(%"class.blink::Performance"* %3, i64 %10, i1 zeroext %11, %"class.base::SingleThreadTaskRunner"* %12, %"class.blink::ExecutionContext"* %16) #11
  %17 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::PerformanceMonitor::Client", %"class.blink::PerformanceMonitor::Client"* %17, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink18PerformanceMonitor6ClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  tail call void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"* %19, %"class.blink::ExecutionContext"* %16) #11
  %20 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 3
  %21 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %21, i64 0, i32 0
  %23 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %22) #11
  tail call void @_ZN5blink22PageVisibilityObserverC2EPNS_4PageE(%"class.blink::PageVisibilityObserver"* %20, %"class.blink::Page"* %23) #11
  %24 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = bitcast %"class.blink::PerformanceMonitor::Client"* %17 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PageVisibilityObserver", %"class.blink::PageVisibilityObserver"* %20, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 4
  %28 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %28, align 8
  %29 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 6
  store i16 0, i16* %29, align 8
  %30 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7
  %31 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = bitcast %"class.blink::HeapDeque.53"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 81, i1 false)
  %34 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %5, align 8
  %35 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %34, i64 0, i32 25, i32 0, i32 0
  %36 = load %"class.blink::PerformanceMonitor"*, %"class.blink::PerformanceMonitor"** %35, align 8
  tail call void @_ZN5blink18PerformanceMonitor9SubscribeENS0_9ViolationEN4base9TimeDeltaEPNS0_6ClientE(%"class.blink::PerformanceMonitor"* %36, i64 0, i64 50000, %"class.blink::PerformanceMonitor::Client"* %17) #11
  %37 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_visibility_state_entry_enabled_E, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %41 = load %"class.blink::Page"*, %"class.blink::Page"** %40, align 8
  %42 = tail call zeroext i1 @_ZNK5blink4Page13IsPageVisibleEv(%"class.blink::Page"* %41) #11
  tail call void @_ZN5blink17WindowPerformance23AddVisibilityStateEntryEbN4base9TimeTicksE(%"class.blink::WindowPerformance"* %0, i1 zeroext %42, i64 0)
  br label %43

43:                                               ; preds = %2, %39
  ret void
}

declare zeroext i1 @_ZNK5blink14LocalDOMWindow29CrossOriginIsolatedCapabilityEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink14LocalDOMWindow13GetTaskRunnerENS_8TaskTypeE(%"class.blink::LocalDOMWindow"*, i8 zeroext) unnamed_addr #1

declare void @_ZN5blink11PerformanceC2EN4base9TimeTicksEb13scoped_refptrINS1_22SingleThreadTaskRunnerEEPNS_16ExecutionContextE(%"class.blink::Performance"*, i64, i1 zeroext, %"class.base::SingleThreadTaskRunner"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

declare void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #1

declare void @_ZN5blink22PageVisibilityObserverC2EPNS_4PageE(%"class.blink::PageVisibilityObserver"*, %"class.blink::Page"*) unnamed_addr #1

declare void @_ZN5blink18PerformanceMonitor9SubscribeENS0_9ViolationEN4base9TimeDeltaEPNS0_6ClientE(%"class.blink::PerformanceMonitor"*, i64, i64, %"class.blink::PerformanceMonitor::Client"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance23AddVisibilityStateEntryEbN4base9TimeTicksE(%"class.blink::WindowPerformance"*, i1 zeroext, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::VisibilityStateEntry"*, align 8
  %5 = bitcast %"class.blink::VisibilityStateEntry"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.blink::VisibilityStateEntry"* inttoptr (i64 -6148914691236517206 to %"class.blink::VisibilityStateEntry"*), %"class.blink::VisibilityStateEntry"** %4, align 8
  %6 = xor i1 %1, true
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink21PageHiddenStateStringEb(i1 zeroext %6) #11
  %8 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %9 = tail call double @_ZNK5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksE(%"class.blink::Performance"* %8, i64 %2) #11
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %11 = bitcast i8* %10 to %"class.blink::VisibilityStateEntry"*
  tail call void @_ZN5blink20VisibilityStateEntryC1EN3WTF12AtomicStringEd(%"class.blink::VisibilityStateEntry"* %11, %"class.WTF::StringImpl"* %7, double %9) #11
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = bitcast %"class.blink::VisibilityStateEntry"** %4 to i8**
  store i8* %10, i8** %16, align 8
  %17 = tail call zeroext i1 @_ZNK5blink11Performance14HasObserverForENS_16PerformanceEntry9EntryTypeE(%"class.blink::Performance"* %8, i32 4096) #11
  %18 = ptrtoint i8* %10 to i64
  br i1 %17, label %19, label %21

19:                                               ; preds = %3
  %20 = bitcast i8* %10 to %"class.blink::PerformanceEntry"*
  tail call void @_ZNK5blink11Performance22NotifyObserversOfEntryERNS_16PerformanceEntryE(%"class.blink::Performance"* %8, %"class.blink::PerformanceEntry"* dereferenceable(48) %20) #11
  br label %21

21:                                               ; preds = %19, %3
  %22 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0, i32 12, i32 0
  %23 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %24, 50
  br i1 %25, label %26, label %44

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %24, %28
  br i1 %29, label %43, label %30, !prof !3

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %22, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %31, align 8
  %33 = zext i32 %24 to i64
  %34 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %32, i64 %33
  %35 = bitcast %"class.blink::Member.14"* %34 to i64*
  store atomic i64 %18, i64* %35 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %30
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #11
  br label %40

40:                                               ; preds = %38, %30
  %41 = load i32, i32* %23, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %23, align 4
  br label %44

43:                                               ; preds = %26
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_20VisibilityStateEntryEEEvOT_(%"class.WTF::Vector.11"* %22, %"class.blink::VisibilityStateEntry"** nonnull dereferenceable(8) %4) #11
  br label %44

44:                                               ; preds = %43, %40, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

declare zeroext i1 @_ZNK5blink4Page13IsPageVisibleEv(%"class.blink::Page"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformanceD2Ev(%"class.blink::WindowPerformance"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i64* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #11
  store i64* null, i64** %6, align 8
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  tail call void @_ZN5blink11PerformanceD2Ev(%"class.blink::Performance"* %12) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink11PerformanceD2Ev(%"class.blink::Performance"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformanceD0Ev(%"class.blink::WindowPerformance"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }, { [38 x i8*], [6 x i8*], [3 x i8*], [4 x i8*] }* @_ZTVN5blink17WindowPerformanceE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i64* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #11
  store i64* null, i64** %6, align 8
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  tail call void @_ZN5blink11PerformanceD2Ev(%"class.blink::Performance"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink17WindowPerformance19GetExecutionContextEv(%"class.blink::WindowPerformance"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %3 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %2) #11
  ret %"class.blink::ExecutionContext"* %3
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::PerformanceTiming"*, %"class.blink::PerformanceTiming"** %3, align 8
  %5 = icmp eq %"class.blink::PerformanceTiming"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %8 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %7) #11
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #11
  %10 = bitcast i8* %9 to %"class.blink::PerformanceTiming"*
  %11 = icmp eq %"class.blink::LocalDOMWindow"* %8, null
  %12 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %8, i64 0, i32 1
  %13 = bitcast %"class.blink::ExecutionContext.base"* %12 to %"class.blink::ExecutionContext"*
  %14 = select i1 %11, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %13
  tail call void @_ZN5blink17PerformanceTimingC1EPNS_16ExecutionContextE(%"class.blink::PerformanceTiming"* %10, %"class.blink::ExecutionContext"* %14) #11
  %15 = getelementptr inbounds i8, i8* %9, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = ptrtoint i8* %9 to i64
  %20 = bitcast %"class.blink::Member.74"* %2 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  %23 = bitcast i8* %9 to %"class.blink::PerformanceTiming"*
  br i1 %22, label %27, label %24

24:                                               ; preds = %6
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  %26 = load %"class.blink::PerformanceTiming"*, %"class.blink::PerformanceTiming"** %3, align 8
  br label %27

27:                                               ; preds = %1, %24, %6
  %28 = phi %"class.blink::PerformanceTiming"* [ %4, %1 ], [ %26, %24 ], [ %23, %6 ]
  ret %"class.blink::PerformanceTiming"* %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PerformanceNavigation"* @_ZNK5blink17WindowPerformance10navigationEv(%"class.blink::WindowPerformance"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 11
  %3 = getelementptr inbounds %"class.blink::Member.72", %"class.blink::Member.72"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::PerformanceNavigation"*, %"class.blink::PerformanceNavigation"** %3, align 8
  %5 = icmp eq %"class.blink::PerformanceNavigation"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %8 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %7) #11
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #11
  %10 = bitcast i8* %9 to %"class.blink::PerformanceNavigation"*
  %11 = icmp eq %"class.blink::LocalDOMWindow"* %8, null
  %12 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %8, i64 0, i32 1
  %13 = bitcast %"class.blink::ExecutionContext.base"* %12 to %"class.blink::ExecutionContext"*
  %14 = select i1 %11, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %13
  tail call void @_ZN5blink21PerformanceNavigationC1EPNS_16ExecutionContextE(%"class.blink::PerformanceNavigation"* %10, %"class.blink::ExecutionContext"* %14) #11
  %15 = getelementptr inbounds i8, i8* %9, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = ptrtoint i8* %9 to i64
  %20 = bitcast %"class.blink::Member.72"* %2 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  %23 = bitcast i8* %9 to %"class.blink::PerformanceNavigation"*
  br i1 %22, label %27, label %24

24:                                               ; preds = %6
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  %26 = load %"class.blink::PerformanceNavigation"*, %"class.blink::PerformanceNavigation"** %3, align 8
  br label %27

27:                                               ; preds = %1, %24, %6
  %28 = phi %"class.blink::PerformanceNavigation"* [ %4, %1 ], [ %26, %24 ], [ %23, %6 ]
  ret %"class.blink::PerformanceNavigation"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MemoryInfo"* @_ZNK5blink17WindowPerformance6memoryEPNS_11ScriptStateE(%"class.blink::WindowPerformance"* nocapture readnone, %"class.blink::ScriptState"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.ukm::builders::PerformanceAPI_Memory_Legacy", align 8
  %4 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #11
  %5 = bitcast %"class.blink::Platform"* %4 to i1 (%"class.blink::Platform"*)***
  %6 = load i1 (%"class.blink::Platform"*)**, i1 (%"class.blink::Platform"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %6, i64 19
  %8 = load i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::Platform"* %4) #11
  %10 = xor i1 %9, true
  %11 = zext i1 %10 to i32
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #11
  %13 = bitcast i8* %12 to %"class.blink::MemoryInfo"*
  tail call void @_ZN5blink10MemoryInfoC1ENS0_9PrecisionE(%"class.blink::MemoryInfo"* %13, i32 %11) #11
  %14 = getelementptr inbounds i8, i8* %12, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  %18 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #11
  %19 = bitcast %"class.ukm::builders::PerformanceAPI_Memory_Legacy"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = bitcast %"class.blink::ExecutionContext"* %18 to i64 (%"class.blink::ExecutionContext"*)***
  %21 = load i64 (%"class.blink::ExecutionContext"*)**, i64 (%"class.blink::ExecutionContext"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.blink::ExecutionContext"*)*, i64 (%"class.blink::ExecutionContext"*)** %21, i64 45
  %23 = load i64 (%"class.blink::ExecutionContext"*)*, i64 (%"class.blink::ExecutionContext"*)** %22, align 8
  %24 = tail call i64 %23(%"class.blink::ExecutionContext"* %18) #11
  call void @_ZN3ukm8builders28PerformanceAPI_Memory_LegacyC1El(%"class.ukm::builders::PerformanceAPI_Memory_Legacy"* nonnull %3, i64 %24) #11
  %25 = getelementptr inbounds i8, i8* %12, i64 16
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %27, 10
  %29 = call dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory_Legacy"* @_ZN3ukm8builders28PerformanceAPI_Memory_Legacy13SetJavaScriptEl(%"class.ukm::builders::PerformanceAPI_Memory_Legacy"* nonnull %3, i64 %28) #11
  %30 = getelementptr inbounds %"class.ukm::builders::PerformanceAPI_Memory_Legacy", %"class.ukm::builders::PerformanceAPI_Memory_Legacy"* %29, i64 0, i32 0
  %31 = bitcast %"class.blink::ExecutionContext"* %18 to %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)***
  %32 = load %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)**, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)** %32, i64 44
  %34 = load %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)** %33, align 8
  %35 = call %"class.ukm::UkmRecorder"* %34(%"class.blink::ExecutionContext"* %18) #11
  call void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"* %30, %"class.ukm::UkmRecorder"* %35) #11
  call void @_ZN3ukm8builders28PerformanceAPI_Memory_LegacyD1Ev(%"class.ukm::builders::PerformanceAPI_Memory_Legacy"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  ret %"class.blink::MemoryInfo"* %13
}

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #1

declare void @_ZN3ukm8builders28PerformanceAPI_Memory_LegacyC1El(%"class.ukm::builders::PerformanceAPI_Memory_Legacy"*, i64) unnamed_addr #1

declare dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory_Legacy"* @_ZN3ukm8builders28PerformanceAPI_Memory_Legacy13SetJavaScriptEl(%"class.ukm::builders::PerformanceAPI_Memory_Legacy"*, i64) local_unnamed_addr #1

declare void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"*, %"class.ukm::UkmRecorder"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3ukm8builders28PerformanceAPI_Memory_LegacyD1Ev(%"class.ukm::builders::PerformanceAPI_Memory_Legacy"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PerformanceNavigationTiming"* @_ZN5blink17WindowPerformance30CreateNavigationTimingInstanceEv(%"class.blink::WindowPerformance"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ResourceTimingInfo"*, align 8
  %3 = alloca %"class.blink::HeapVector.2073", align 8
  %4 = alloca %"class.blink::LocalDOMWindow"*, align 8
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %7 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %6) #11
  %8 = icmp eq %"class.blink::LocalDOMWindow"* %7, null
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %6) #11
  %11 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %10) #11
  %12 = tail call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %11) #11
  %13 = icmp eq %"class.blink::DocumentLoader"* %12, null
  br i1 %13, label %39, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::ResourceTimingInfo"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = tail call %"class.blink::ResourceTimingInfo"* @_ZNK5blink14DocumentLoader23GetNavigationTimingInfoEv(%"class.blink::DocumentLoader"* nonnull %12) #11
  store %"class.blink::ResourceTimingInfo"* %16, %"class.blink::ResourceTimingInfo"** %2, align 8
  %17 = icmp eq %"class.blink::ResourceTimingInfo"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::HeapVector.2073"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.blink::HeapVector.2073", %"class.blink::HeapVector.2073"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.blink::HeapVector.2073"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZN5blink23PerformanceServerTiming17ParseServerTimingERKNS_18ResourceTimingInfoE(%"class.blink::HeapVector.2073"* nonnull sret %3, %"class.blink::ResourceTimingInfo"* nonnull dereferenceable(1272) %16) #11
  %22 = load i32, i32* %20, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::DocumentLoader"* %12 to void (%"class.blink::DocumentLoader"*, i32)***
  %26 = load void (%"class.blink::DocumentLoader"*, i32)**, void (%"class.blink::DocumentLoader"*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::DocumentLoader"*, i32)*, void (%"class.blink::DocumentLoader"*, i32)** %26, i64 3
  %28 = load void (%"class.blink::DocumentLoader"*, i32)*, void (%"class.blink::DocumentLoader"*, i32)** %27, align 8
  call void %28(%"class.blink::DocumentLoader"* nonnull %12, i32 2157) #11
  br label %29

29:                                               ; preds = %24, %18
  %30 = bitcast %"class.blink::LocalDOMWindow"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %6) #11
  store %"class.blink::LocalDOMWindow"* %31, %"class.blink::LocalDOMWindow"** %4, align 8
  %32 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0, i32 18
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  %33 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %6) #11
  %34 = call zeroext i1 @_ZNK5blink14LocalDOMWindow29CrossOriginIsolatedCapabilityEv(%"class.blink::LocalDOMWindow"* %33) #11
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %5, align 1
  %36 = call %"class.blink::PerformanceNavigationTiming"* @_ZN5blink25MakeGarbageCollectedTraitINS_27PerformanceNavigationTimingEE4CallIJPNS_14LocalDOMWindowERPNS_18ResourceTimingInfoERN4base9TimeTicksEbNS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEEEEEPS1_DpOT_(%"class.blink::LocalDOMWindow"** nonnull dereferenceable(8) %4, %"class.blink::ResourceTimingInfo"** nonnull dereferenceable(8) %2, %"class.base::TimeTicks"* dereferenceable(8) %32, i8* nonnull dereferenceable(1) %5, %"class.blink::HeapVector.2073"* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  br label %37

37:                                               ; preds = %14, %29
  %38 = phi %"class.blink::PerformanceNavigationTiming"* [ %36, %29 ], [ null, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %39

39:                                               ; preds = %37, %9, %1
  %40 = phi %"class.blink::PerformanceNavigationTiming"* [ null, %1 ], [ %38, %37 ], [ null, %9 ]
  ret %"class.blink::PerformanceNavigationTiming"* %40
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #1

declare %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::ResourceTimingInfo"* @_ZNK5blink14DocumentLoader23GetNavigationTimingInfoEv(%"class.blink::DocumentLoader"*) local_unnamed_addr #1

declare void @_ZN5blink23PerformanceServerTiming17ParseServerTimingERKNS_18ResourceTimingInfoE(%"class.blink::HeapVector.2073"* sret, %"class.blink::ResourceTimingInfo"* dereferenceable(1272)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17WindowPerformance14BuildJSONValueERNS_15V8ObjectBuilderE(%"class.blink::WindowPerformance"*, %"class.blink::V8ObjectBuilder"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::PerformanceTiming"*, align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::PerformanceNavigation"*, align 8
  %7 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  tail call void @_ZNK5blink11Performance14BuildJSONValueERNS_15V8ObjectBuilderE(%"class.blink::Performance"* %7, %"class.blink::V8ObjectBuilder"* dereferenceable(16) %1) #11
  %8 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %10 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 6, i32* %12, align 8
  %13 = bitcast %"class.blink::PerformanceTiming"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PerformanceTiming"*, %"class.blink::PerformanceTiming"** %15, align 8
  %17 = icmp eq %"class.blink::PerformanceTiming"* %16, null
  br i1 %17, label %18, label %38

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %20 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #11
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #11
  %22 = bitcast i8* %21 to %"class.blink::PerformanceTiming"*
  %23 = icmp eq %"class.blink::LocalDOMWindow"* %20, null
  %24 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %20, i64 0, i32 1
  %25 = bitcast %"class.blink::ExecutionContext.base"* %24 to %"class.blink::ExecutionContext"*
  %26 = select i1 %23, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %25
  tail call void @_ZN5blink17PerformanceTimingC1EPNS_16ExecutionContextE(%"class.blink::PerformanceTiming"* %22, %"class.blink::ExecutionContext"* %26) #11
  %27 = getelementptr inbounds i8, i8* %21, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = ptrtoint i8* %21 to i64
  %32 = bitcast %"class.blink::Member.74"* %14 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %18
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #11
  %37 = load %"class.blink::PerformanceTiming"*, %"class.blink::PerformanceTiming"** %15, align 8
  br label %38

38:                                               ; preds = %2, %18, %35
  %39 = phi %"class.blink::PerformanceTiming"* [ %16, %2 ], [ %37, %35 ], [ %22, %18 ]
  store %"class.blink::PerformanceTiming"* %39, %"class.blink::PerformanceTiming"** %4, align 8
  %40 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder3AddIPNS_17PerformanceTimingEEERS0_RKN3WTF10StringViewERKT_(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.blink::PerformanceTiming"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  %41 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 10, i32* %45, align 8
  %46 = bitcast %"class.blink::PerformanceNavigation"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 11
  %48 = getelementptr inbounds %"class.blink::Member.72", %"class.blink::Member.72"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::PerformanceNavigation"*, %"class.blink::PerformanceNavigation"** %48, align 8
  %50 = icmp eq %"class.blink::PerformanceNavigation"* %49, null
  br i1 %50, label %51, label %71

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %53 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %52) #11
  %54 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #11
  %55 = bitcast i8* %54 to %"class.blink::PerformanceNavigation"*
  %56 = icmp eq %"class.blink::LocalDOMWindow"* %53, null
  %57 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %53, i64 0, i32 1
  %58 = bitcast %"class.blink::ExecutionContext.base"* %57 to %"class.blink::ExecutionContext"*
  %59 = select i1 %56, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %58
  call void @_ZN5blink21PerformanceNavigationC1EPNS_16ExecutionContextE(%"class.blink::PerformanceNavigation"* %55, %"class.blink::ExecutionContext"* %59) #11
  %60 = getelementptr inbounds i8, i8* %54, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  %64 = ptrtoint i8* %54 to i64
  %65 = bitcast %"class.blink::Member.72"* %47 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %51
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #11
  %70 = load %"class.blink::PerformanceNavigation"*, %"class.blink::PerformanceNavigation"** %48, align 8
  br label %71

71:                                               ; preds = %38, %51, %68
  %72 = phi %"class.blink::PerformanceNavigation"* [ %49, %38 ], [ %70, %68 ], [ %55, %51 ]
  store %"class.blink::PerformanceNavigation"* %72, %"class.blink::PerformanceNavigation"** %6, align 8
  %73 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder3AddIPNS_21PerformanceNavigationEEERS0_RKN3WTF10StringViewERKT_(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.blink::PerformanceNavigation"** nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  ret void
}

declare void @_ZNK5blink11Performance14BuildJSONValueERNS_15V8ObjectBuilderE(%"class.blink::Performance"*, %"class.blink::V8ObjectBuilder"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder3AddIPNS_17PerformanceTimingEEERS0_RKN3WTF10StringViewERKT_(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::PerformanceTiming"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::PerformanceTiming"** %2 to %"class.blink::ScriptWrappable"**
  %5 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %0, i64 0, i32 0
  %7 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.v8::Context"*, %"class.v8::Context"** %8, align 8
  %10 = icmp eq %"class.v8::Context"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::ScriptState"* %7 to %"class.v8::internal::Isolate"**
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = bitcast %"class.v8::Context"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %15) #11
  %17 = bitcast i64* %16 to %"class.v8::Context"*
  br label %18

18:                                               ; preds = %3, %11
  %19 = phi %"class.v8::Context"* [ %17, %11 ], [ null, %3 ]
  %20 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %19) #11
  %21 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %22 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %21, i64 0, i32 0
  %23 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %24 = icmp eq %"class.blink::ScriptWrappable"* %5, null
  br i1 %24, label %25, label %28, !prof !3

25:                                               ; preds = %18
  %26 = ptrtoint %"class.v8::Isolate"* %23 to i64
  %27 = add i64 %26, 176
  br label %44

28:                                               ; preds = %18
  %29 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %5, %"class.v8::Isolate"* %23) #11
  %30 = ptrtoint %"class.v8::Object"* %29 to i64
  %31 = icmp eq %"class.v8::Object"* %29, null
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %20) #11
  %34 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %33) #11
  %35 = bitcast %"class.blink::ScriptWrappable"* %5 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %36 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %36, i64 7
  %38 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %37, align 8
  %39 = tail call %"class.v8::Value"* %38(%"class.blink::ScriptWrappable"* nonnull %5, %"class.blink::ScriptState"* %34) #11
  %40 = icmp eq %"class.v8::Value"* %39, null
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %42

42:                                               ; preds = %41, %32
  %43 = ptrtoint %"class.v8::Value"* %39 to i64
  br label %44

44:                                               ; preds = %25, %28, %42
  %45 = phi i64 [ %27, %25 ], [ %43, %42 ], [ %30, %28 ]
  %46 = inttoptr i64 %45 to %"class.v8::Value"*
  tail call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* %0, %"class.WTF::StringView"* dereferenceable(24) %1, %"class.v8::Value"* %46) #11
  ret %"class.blink::V8ObjectBuilder"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder3AddIPNS_21PerformanceNavigationEEERS0_RKN3WTF10StringViewERKT_(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::PerformanceNavigation"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::PerformanceNavigation"** %2 to %"class.blink::ScriptWrappable"**
  %5 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %0, i64 0, i32 0
  %7 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.v8::Context"*, %"class.v8::Context"** %8, align 8
  %10 = icmp eq %"class.v8::Context"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::ScriptState"* %7 to %"class.v8::internal::Isolate"**
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = bitcast %"class.v8::Context"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %15) #11
  %17 = bitcast i64* %16 to %"class.v8::Context"*
  br label %18

18:                                               ; preds = %3, %11
  %19 = phi %"class.v8::Context"* [ %17, %11 ], [ null, %3 ]
  %20 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %19) #11
  %21 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %22 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %21, i64 0, i32 0
  %23 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %24 = icmp eq %"class.blink::ScriptWrappable"* %5, null
  br i1 %24, label %25, label %28, !prof !3

25:                                               ; preds = %18
  %26 = ptrtoint %"class.v8::Isolate"* %23 to i64
  %27 = add i64 %26, 176
  br label %44

28:                                               ; preds = %18
  %29 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %5, %"class.v8::Isolate"* %23) #11
  %30 = ptrtoint %"class.v8::Object"* %29 to i64
  %31 = icmp eq %"class.v8::Object"* %29, null
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %20) #11
  %34 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %33) #11
  %35 = bitcast %"class.blink::ScriptWrappable"* %5 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %36 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %36, i64 7
  %38 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %37, align 8
  %39 = tail call %"class.v8::Value"* %38(%"class.blink::ScriptWrappable"* nonnull %5, %"class.blink::ScriptState"* %34) #11
  %40 = icmp eq %"class.v8::Value"* %39, null
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %42

42:                                               ; preds = %41, %32
  %43 = ptrtoint %"class.v8::Value"* %39 to i64
  br label %44

44:                                               ; preds = %25, %28, %42
  %45 = phi i64 [ %27, %25 ], [ %43, %42 ], [ %30, %28 ]
  %46 = inttoptr i64 %45 to %"class.v8::Value"*
  tail call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* %0, %"class.WTF::StringView"* dereferenceable(24) %1, %"class.v8::Value"* %46) #11
  ret %"class.blink::V8ObjectBuilder"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7
  %4 = bitcast %"class.blink::HeapDeque.53"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapDeque.53"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #11
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 9
  %20 = bitcast %"class.blink::Member.22"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22PerformanceEventTimingEE5TraceEPNS_7VisitorEPKv) #11
  br label %29

29:                                               ; preds = %18, %23
  %30 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 10
  %31 = bitcast %"class.blink::Member.65"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11EventCountsEE5TraceEPNS_7VisitorEPKv) #11
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 11
  %42 = bitcast %"class.blink::Member.72"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = inttoptr i64 %43 to i8*
  %47 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* nonnull %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21PerformanceNavigationEE5TraceEPNS_7VisitorEPKv) #11
  br label %51

51:                                               ; preds = %40, %45
  %52 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 12
  %53 = bitcast %"class.blink::Member.74"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17PerformanceTimingEE5TraceEPNS_7VisitorEPKv) #11
  br label %62

62:                                               ; preds = %51, %56
  %63 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  tail call void @_ZNK5blink11Performance5TraceEPNS_7VisitorE(%"class.blink::Performance"* %63, %"class.blink::Visitor"* %1) #11
  %64 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  tail call void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"* %64, %"class.blink::Visitor"* %1) #11
  %65 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 3
  tail call void @_ZNK5blink22PageVisibilityObserver5TraceEPNS_7VisitorE(%"class.blink::PageVisibilityObserver"* %65, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink11Performance5TraceEPNS_7VisitorE(%"class.blink::Performance"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18PerformanceMonitor6Client5TraceEPNS_7VisitorE(%"class.blink::PerformanceMonitor::Client"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink22PageVisibilityObserver5TraceEPNS_7VisitorE(%"class.blink::PageVisibilityObserver"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn672_NK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 -1, i32 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::WindowPerformance"*
  tail call void @_ZNK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn680_NK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 -1, i32 0, i32 10
  %4 = bitcast %"class.blink::HeapVector.8"* %3 to %"class.blink::WindowPerformance"*
  tail call void @_ZNK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn696_NK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 -1, i32 0, i32 9
  %4 = bitcast %"class.blink::HeapVector.8"* %3 to %"class.blink::WindowPerformance"*
  tail call void @_ZNK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.WTF::StringImpl"*, %"class.blink::DOMWindow"* } @_ZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameE(%"class.blink::ExecutionContext"*, i1 zeroext, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  br i1 %1, label %6, label %34

6:                                                ; preds = %3
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE23s_kAmbiguousAttribution to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !4

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE23s_kAmbiguousAttribution) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE23s_kAmbiguousAttribution to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i64 17) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE23s_kAmbiguousAttribution) #11
  br label %13

13:                                               ; preds = %9, %12, %6
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE23s_kAmbiguousAttribution to %"class.WTF::StringImpl"**), align 8, !noalias !5
  %15 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %337, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4, !noalias !5
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %337

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4, !noalias !5
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #11
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  tail call void @llvm.trap() #11, !noalias !5
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4, !noalias !5
  br label %337

34:                                               ; preds = %3
  %35 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %35, label %50, label %36

36:                                               ; preds = %34
  %37 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %38 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %38, i64 1
  %40 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::ExecutionContext"* nonnull %0) #11
  br i1 %41, label %42, label %50

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds i32, i32* %43, i64 18
  %47 = bitcast i32* %46 to %"class.blink::LocalFrame"**
  %48 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %47, align 8
  %49 = icmp eq %"class.blink::LocalFrame"* %48, null
  br i1 %49, label %50, label %78

50:                                               ; preds = %34, %36, %45, %42
  %51 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE21s_kUnknownAttribution to i8*) acquire, align 8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %57, !prof !4

53:                                               ; preds = %50
  %54 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE21s_kUnknownAttribution) #11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE21s_kUnknownAttribution to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i64 7) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE21s_kUnknownAttribution) #11
  br label %57

57:                                               ; preds = %53, %56, %50
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE21s_kUnknownAttribution to %"class.WTF::StringImpl"**), align 8, !noalias !8
  %59 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %60 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %60, label %337, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4, !noalias !8
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %337

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %68 = load i32, i32* %67, align 4, !noalias !8
  %69 = zext i32 %68 to i33
  %70 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #11
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !3

75:                                               ; preds = %66
  tail call void @llvm.trap() #11, !noalias !8
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4, !noalias !8
  br label %337

78:                                               ; preds = %45
  %79 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %48, i64 0, i32 0
  %80 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 0
  %81 = bitcast %"class.blink::LocalFrame"* %2 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %82 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %81, align 8
  %83 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %82, i64 10
  %84 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %83, align 8
  %85 = tail call %"class.blink::SecurityContext"* %84(%"class.blink::Frame"* %80) #11
  %86 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %85, i64 0, i32 2, i32 0
  %87 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %86, align 8
  %88 = bitcast %"class.blink::LocalFrame"* %48 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %89 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %88, align 8
  %90 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %89, i64 10
  %91 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %90, align 8
  %92 = tail call %"class.blink::SecurityContext"* %91(%"class.blink::Frame"* %79) #11
  %93 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %92, i64 0, i32 2, i32 0
  %94 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %93, align 8
  %95 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #11
  store i32 -1431655766, i32* %4, align 4
  %96 = call zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"* %87, %"class.blink::SecurityOrigin"* %94, i32* nonnull dereferenceable(4) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #11
  br i1 %96, label %97, label %218

97:                                               ; preds = %78
  %98 = icmp eq %"class.blink::LocalFrame"* %48, %2
  br i1 %98, label %99, label %126

99:                                               ; preds = %97
  %100 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_111SelfKeywordEvE18s_kSelfAttribution to i8*) acquire, align 8
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %106, !prof !4

102:                                              ; preds = %99
  %103 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_111SelfKeywordEvE18s_kSelfAttribution) #11
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105

105:                                              ; preds = %102
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_111SelfKeywordEvE18s_kSelfAttribution to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_111SelfKeywordEvE18s_kSelfAttribution) #11
  br label %106

106:                                              ; preds = %105, %102, %99
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_111SelfKeywordEvE18s_kSelfAttribution to %"class.WTF::StringImpl"**), align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %213, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %213

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i33
  %118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %117, i33 1) #11
  %119 = extractvalue { i33, i1 } %118, 1
  %120 = extractvalue { i33, i1 } %118, 0
  %121 = icmp slt i33 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %124, !prof !3

123:                                              ; preds = %114
  call void @llvm.trap() #11
  unreachable

124:                                              ; preds = %114
  %125 = trunc i33 %120 to i32
  store i32 %125, i32* %115, align 4
  br label %213

126:                                              ; preds = %97
  %127 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 0, i32 1
  %128 = call zeroext i1 @_ZNK5blink9FrameTree14IsDescendantOfEPKNS_5FrameE(%"class.blink::FrameTree"* %127, %"class.blink::Frame"* %79) #11
  br i1 %128, label %129, label %156

129:                                              ; preds = %126
  %130 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_125SameOriginAncestorKeywordEvE32s_kSameOriginAncestorAttribution to i8*) acquire, align 8
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %136, !prof !4

132:                                              ; preds = %129
  %133 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_125SameOriginAncestorKeywordEvE32s_kSameOriginAncestorAttribution) #11
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_125SameOriginAncestorKeywordEvE32s_kSameOriginAncestorAttribution to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i64 20) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_125SameOriginAncestorKeywordEvE32s_kSameOriginAncestorAttribution) #11
  br label %136

136:                                              ; preds = %135, %132, %129
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_125SameOriginAncestorKeywordEvE32s_kSameOriginAncestorAttribution to %"class.WTF::StringImpl"**), align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %213, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %213

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i33
  %148 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %147, i33 1) #11
  %149 = extractvalue { i33, i1 } %148, 1
  %150 = extractvalue { i33, i1 } %148, 0
  %151 = icmp slt i33 %150, 0
  %152 = or i1 %149, %151
  br i1 %152, label %153, label %154, !prof !3

153:                                              ; preds = %144
  call void @llvm.trap() #11
  unreachable

154:                                              ; preds = %144
  %155 = trunc i33 %150 to i32
  store i32 %155, i32* %145, align 4
  br label %213

156:                                              ; preds = %126
  %157 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %48, i64 0, i32 0, i32 1
  %158 = call zeroext i1 @_ZNK5blink9FrameTree14IsDescendantOfEPKNS_5FrameE(%"class.blink::FrameTree"* %157, %"class.blink::Frame"* %80) #11
  br i1 %158, label %159, label %186

159:                                              ; preds = %156
  %160 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_127SameOriginDescendantKeywordEvE34s_kSameOriginDescendantAttribution to i8*) acquire, align 8
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %166, !prof !4

162:                                              ; preds = %159
  %163 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_127SameOriginDescendantKeywordEvE34s_kSameOriginDescendantAttribution) #11
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %166, label %165

165:                                              ; preds = %162
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_127SameOriginDescendantKeywordEvE34s_kSameOriginDescendantAttribution to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i64 22) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_127SameOriginDescendantKeywordEvE34s_kSameOriginDescendantAttribution) #11
  br label %166

166:                                              ; preds = %165, %162, %159
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_127SameOriginDescendantKeywordEvE34s_kSameOriginDescendantAttribution to %"class.WTF::StringImpl"**), align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %213, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %213

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i33
  %178 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %177, i33 1) #11
  %179 = extractvalue { i33, i1 } %178, 1
  %180 = extractvalue { i33, i1 } %178, 0
  %181 = icmp slt i33 %180, 0
  %182 = or i1 %179, %181
  br i1 %182, label %183, label %184, !prof !3

183:                                              ; preds = %174
  call void @llvm.trap() #11
  unreachable

184:                                              ; preds = %174
  %185 = trunc i33 %180 to i32
  store i32 %185, i32* %175, align 4
  br label %213

186:                                              ; preds = %156
  %187 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_117SameOriginKeywordEvE24s_kSameOriginAttribution to i8*) acquire, align 8
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %193, !prof !4

189:                                              ; preds = %186
  %190 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_117SameOriginKeywordEvE24s_kSameOriginAttribution) #11
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %193, label %192

192:                                              ; preds = %189
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_117SameOriginKeywordEvE24s_kSameOriginAttribution to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i64 11) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_117SameOriginKeywordEvE24s_kSameOriginAttribution) #11
  br label %193

193:                                              ; preds = %192, %189, %186
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_117SameOriginKeywordEvE24s_kSameOriginAttribution to %"class.WTF::StringImpl"**), align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %213, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i33
  %205 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %204, i33 1) #11
  %206 = extractvalue { i33, i1 } %205, 1
  %207 = extractvalue { i33, i1 } %205, 0
  %208 = icmp slt i33 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211, !prof !3

210:                                              ; preds = %201
  call void @llvm.trap() #11
  unreachable

211:                                              ; preds = %201
  %212 = trunc i33 %207 to i32
  store i32 %212, i32* %202, align 4
  br label %213

213:                                              ; preds = %211, %196, %193, %184, %169, %166, %154, %139, %136, %124, %109, %106
  %214 = phi %"class.WTF::StringImpl"* [ null, %106 ], [ %107, %109 ], [ %107, %124 ], [ null, %136 ], [ %137, %139 ], [ %137, %154 ], [ null, %166 ], [ %167, %169 ], [ %167, %184 ], [ null, %193 ], [ %194, %196 ], [ %194, %211 ]
  %215 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %48, i64 0, i32 0, i32 4, i32 0, i32 0
  %216 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %215, align 8
  %217 = ptrtoint %"class.WTF::StringImpl"* %214 to i64
  br label %337

218:                                              ; preds = %78
  %219 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %48, i64 0, i32 0, i32 1
  %220 = call zeroext i1 @_ZNK5blink9FrameTree14IsDescendantOfEPKNS_5FrameE(%"class.blink::FrameTree"* %219, %"class.blink::Frame"* %80) #11
  br i1 %220, label %221, label %278

221:                                              ; preds = %218
  %222 = icmp eq %"class.blink::LocalFrame"* %48, %2
  br i1 %222, label %225, label %223

223:                                              ; preds = %221
  %224 = bitcast i32* %5 to i8*
  br label %229

225:                                              ; preds = %229, %221
  %226 = phi %"class.blink::Frame"* [ %79, %221 ], [ %246, %229 ]
  %227 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE35s_kCrossOriginDescendantAttribution to i8*) acquire, align 8
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %250, label %254, !prof !4

229:                                              ; preds = %223, %229
  %230 = phi %"class.blink::Frame"* [ %79, %223 ], [ %248, %229 ]
  %231 = phi %"class.blink::Frame"* [ %79, %223 ], [ %246, %229 ]
  %232 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %81, align 8
  %233 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %232, i64 10
  %234 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %233, align 8
  %235 = call %"class.blink::SecurityContext"* %234(%"class.blink::Frame"* %80) #11
  %236 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %235, i64 0, i32 2, i32 0
  %237 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %236, align 8
  %238 = bitcast %"class.blink::Frame"* %230 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %239 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %238, align 8
  %240 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %239, i64 10
  %241 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %240, align 8
  %242 = call %"class.blink::SecurityContext"* %241(%"class.blink::Frame"* %230) #11
  %243 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %242, i64 0, i32 2, i32 0
  %244 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %243, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %224) #11
  store i32 -1431655766, i32* %5, align 4
  %245 = call zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"* %237, %"class.blink::SecurityOrigin"* %244, i32* nonnull dereferenceable(4) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %224) #11
  %246 = select i1 %245, %"class.blink::Frame"* %231, %"class.blink::Frame"* %230
  %247 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %230, i64 0, i32 1
  %248 = call %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"* %247) #11
  %249 = icmp eq %"class.blink::Frame"* %248, %80
  br i1 %249, label %225, label %229

250:                                              ; preds = %225
  %251 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE35s_kCrossOriginDescendantAttribution) #11
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %254, label %253

253:                                              ; preds = %250
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE35s_kCrossOriginDescendantAttribution to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i64 0, i64 0), i64 23) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE35s_kCrossOriginDescendantAttribution) #11
  br label %254

254:                                              ; preds = %250, %253, %225
  %255 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %226, i64 0, i32 4, i32 0, i32 0
  %256 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %255, align 8
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE35s_kCrossOriginDescendantAttribution to %"class.WTF::StringImpl"**), align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %276, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %276

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = zext i32 %266 to i33
  %268 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %267, i33 1) #11
  %269 = extractvalue { i33, i1 } %268, 1
  %270 = extractvalue { i33, i1 } %268, 0
  %271 = icmp slt i33 %270, 0
  %272 = or i1 %269, %271
  br i1 %272, label %273, label %274, !prof !3

273:                                              ; preds = %264
  call void @llvm.trap() #11
  unreachable

274:                                              ; preds = %264
  %275 = trunc i33 %270 to i32
  store i32 %275, i32* %265, align 4
  br label %276

276:                                              ; preds = %254, %259, %274
  %277 = ptrtoint %"class.WTF::StringImpl"* %257 to i64
  br label %337

278:                                              ; preds = %218
  %279 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 0, i32 1
  %280 = call zeroext i1 @_ZNK5blink9FrameTree14IsDescendantOfEPKNS_5FrameE(%"class.blink::FrameTree"* %279, %"class.blink::Frame"* %79) #11
  br i1 %280, label %281, label %309

281:                                              ; preds = %278
  %282 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE33s_kCrossOriginAncestorAttribution to i8*) acquire, align 8
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %284, label %288, !prof !4

284:                                              ; preds = %281
  %285 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE33s_kCrossOriginAncestorAttribution) #11
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %288, label %287

287:                                              ; preds = %284
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE33s_kCrossOriginAncestorAttribution to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i64 0, i64 0), i64 21) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE33s_kCrossOriginAncestorAttribution) #11
  br label %288

288:                                              ; preds = %284, %287, %281
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE33s_kCrossOriginAncestorAttribution to %"class.WTF::StringImpl"**), align 8, !noalias !11
  %290 = ptrtoint %"class.WTF::StringImpl"* %289 to i64
  %291 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %291, label %337, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4, !noalias !11
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %337

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %299 = load i32, i32* %298, align 4, !noalias !11
  %300 = zext i32 %299 to i33
  %301 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %300, i33 1) #11
  %302 = extractvalue { i33, i1 } %301, 1
  %303 = extractvalue { i33, i1 } %301, 0
  %304 = icmp slt i33 %303, 0
  %305 = or i1 %302, %304
  br i1 %305, label %306, label %307, !prof !3

306:                                              ; preds = %297
  call void @llvm.trap() #11, !noalias !11
  unreachable

307:                                              ; preds = %297
  %308 = trunc i33 %303 to i32
  store i32 %308, i32* %298, align 4, !noalias !11
  br label %337

309:                                              ; preds = %278
  %310 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE25s_kCrossOriginAttribution to i8*) acquire, align 8
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %312, label %316, !prof !4

312:                                              ; preds = %309
  %313 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE25s_kCrossOriginAttribution) #11
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %316, label %315

315:                                              ; preds = %312
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE25s_kCrossOriginAttribution to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.31, i64 0, i64 0), i64 24) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE25s_kCrossOriginAttribution) #11
  br label %316

316:                                              ; preds = %312, %315, %309
  %317 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameEE25s_kCrossOriginAttribution to %"class.WTF::StringImpl"**), align 8, !noalias !14
  %318 = ptrtoint %"class.WTF::StringImpl"* %317 to i64
  %319 = icmp eq %"class.WTF::StringImpl"* %317, null
  br i1 %319, label %337, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4, !noalias !14
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %337

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 0
  %327 = load i32, i32* %326, align 4, !noalias !14
  %328 = zext i32 %327 to i33
  %329 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %328, i33 1) #11
  %330 = extractvalue { i33, i1 } %329, 1
  %331 = extractvalue { i33, i1 } %329, 0
  %332 = icmp slt i33 %331, 0
  %333 = or i1 %330, %332
  br i1 %333, label %334, label %335, !prof !3

334:                                              ; preds = %325
  call void @llvm.trap() #11, !noalias !14
  unreachable

335:                                              ; preds = %325
  %336 = trunc i33 %331 to i32
  store i32 %336, i32* %326, align 4, !noalias !14
  br label %337

337:                                              ; preds = %316, %320, %335, %288, %292, %307, %57, %61, %76, %13, %17, %32, %276, %213
  %338 = phi i64 [ %217, %213 ], [ %277, %276 ], [ %15, %32 ], [ %15, %17 ], [ %15, %13 ], [ %59, %76 ], [ %59, %61 ], [ %59, %57 ], [ %290, %307 ], [ %290, %292 ], [ %290, %288 ], [ %318, %335 ], [ %318, %320 ], [ %318, %316 ]
  %339 = phi %"class.blink::DOMWindow"* [ %216, %213 ], [ %256, %276 ], [ null, %32 ], [ null, %17 ], [ null, %13 ], [ null, %76 ], [ null, %61 ], [ null, %57 ], [ null, %307 ], [ null, %292 ], [ null, %288 ], [ null, %335 ], [ null, %320 ], [ null, %316 ]
  %340 = inttoptr i64 %338 to %"class.WTF::StringImpl"*
  %341 = insertvalue { %"class.WTF::StringImpl"*, %"class.blink::DOMWindow"* } undef, %"class.WTF::StringImpl"* %340, 0
  %342 = insertvalue { %"class.WTF::StringImpl"*, %"class.blink::DOMWindow"* } %341, %"class.blink::DOMWindow"* %339, 1
  ret { %"class.WTF::StringImpl"*, %"class.blink::DOMWindow"* } %342
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink9FrameTree14IsDescendantOfEPKNS_5FrameE(%"class.blink::FrameTree"*, %"class.blink::Frame"*) local_unnamed_addr #1

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance14ReportLongTaskEN4base9TimeTicksES2_PNS_16ExecutionContextEb(%"class.blink::WindowPerformance"*, i64, i64, %"class.blink::ExecutionContext"*, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"struct.std::__1::pair.2085", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %14 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #11
  %15 = icmp eq %"class.blink::LocalDOMWindow"* %14, null
  br i1 %15, label %278, label %16

16:                                               ; preds = %5
  %17 = bitcast %"struct.std::__1::pair.2085"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"struct.std::__1::pair.2085", %"struct.std::__1::pair.2085"* %7, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair.2085", %"struct.std::__1::pair.2085"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::pair.2085", %"struct.std::__1::pair.2085"* %7, i64 0, i32 1
  %21 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #11
  %22 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.blink::Frame"** %22 to %"class.blink::LocalFrame"**
  %24 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %23, align 8
  %25 = tail call { %"class.WTF::StringImpl"*, %"class.blink::DOMWindow"* } @_ZN5blink17WindowPerformance20SanitizedAttributionEPNS_16ExecutionContextEbPNS_10LocalFrameE(%"class.blink::ExecutionContext"* %3, i1 zeroext %4, %"class.blink::LocalFrame"* %24)
  %26 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::DOMWindow"* } %25, 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %19, align 8
  %27 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::DOMWindow"* } %25, 1
  store %"class.blink::DOMWindow"* %27, %"class.blink::DOMWindow"** %20, align 8
  %28 = icmp eq %"class.blink::DOMWindow"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %27, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::Frame"*, %"class.blink::Frame"** %30, align 8
  %32 = icmp eq %"class.blink::Frame"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink5Frame20DeprecatedLocalOwnerEv(%"class.blink::Frame"* nonnull %31) #11
  %35 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %34, null
  br i1 %35, label %36, label %56

36:                                               ; preds = %33, %29, %16
  %37 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %38 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #11
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  call void @_ZN5blink11Performance17AddLongTaskTimingEN4base9TimeTicksES2_RKN3WTF12AtomicStringES6_S6_S6_S6_(%"class.blink::Performance"* %37, i64 %1, i64 %2, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, %"class.WTF::AtomicString"* dereferenceable(8) %39, %"class.WTF::AtomicString"* dereferenceable(8) %39, %"class.WTF::AtomicString"* dereferenceable(8) %39) #11
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %260, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %260

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #11
  br label %260

56:                                               ; preds = %33
  %57 = load %"class.blink::Frame"*, %"class.blink::Frame"** %30, align 8
  %58 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink5Frame20DeprecatedLocalOwnerEv(%"class.blink::Frame"* %57) #11
  %59 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %60 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  %61 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  %62 = bitcast %"class.blink::HTMLFrameOwnerElement"* %58 to i32 (%"class.blink::HTMLFrameOwnerElement"*)***
  %63 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)**, i32 (%"class.blink::HTMLFrameOwnerElement"*)*** %62, align 8
  %64 = getelementptr inbounds i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %63, i64 172
  %65 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %64, align 8
  %66 = tail call i32 %65(%"class.blink::HTMLFrameOwnerElement"* %58) #11
  switch i32 %66, label %73 [
    i32 0, label %67
    i32 1, label %68
    i32 2, label %69
    i32 3, label %70
    i32 4, label %71
    i32 5, label %72
  ]

67:                                               ; preds = %56
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #11
  br label %74

68:                                               ; preds = %56
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i64 6) #11
  br label %74

69:                                               ; preds = %56
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i64 6) #11
  br label %74

70:                                               ; preds = %56
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i64 5) #11
  br label %74

71:                                               ; preds = %56
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #11
  br label %74

72:                                               ; preds = %56
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i64 6) #11
  br label %74

73:                                               ; preds = %56
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i64 0) #11
  br label %74

74:                                               ; preds = %67, %68, %69, %70, %71, %72, %73
  %75 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %76 = load i64, i64* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %77 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #11
  %80 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)**, i32 (%"class.blink::HTMLFrameOwnerElement"*)*** %62, align 8
  %81 = getelementptr inbounds i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %80, i64 172
  %82 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %81, align 8
  %83 = call i32 %82(%"class.blink::HTMLFrameOwnerElement"* %58) #11
  %84 = icmp eq i32 %83, 2
  br i1 %84, label %85, label %111

85:                                               ; preds = %74
  %86 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kDataAttrE, align 8
  %87 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %58, i64 0, i32 0, i32 0
  %88 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %87, %"class.blink::QualifiedName"* dereferenceable(8) %86) #11
  br i1 %88, label %89, label %137

89:                                               ; preds = %85
  %90 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %87, %"class.blink::QualifiedName"* dereferenceable(8) %86) #11
  %91 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %137, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %137

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i33
  %103 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #11
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !3

108:                                              ; preds = %99
  call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %99
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %100, align 4
  br label %137

111:                                              ; preds = %74
  %112 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %113 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %58, i64 0, i32 0, i32 0
  %114 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %113, %"class.blink::QualifiedName"* dereferenceable(8) %112) #11
  br i1 %114, label %115, label %137

115:                                              ; preds = %111
  %116 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %113, %"class.blink::QualifiedName"* dereferenceable(8) %112) #11
  %117 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %137, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i33
  %129 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %128, i33 1) #11
  %130 = extractvalue { i33, i1 } %129, 1
  %131 = extractvalue { i33, i1 } %129, 0
  %132 = icmp slt i33 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %134, label %135, !prof !3

134:                                              ; preds = %125
  call void @llvm.trap() #11
  unreachable

135:                                              ; preds = %125
  %136 = trunc i33 %131 to i32
  store i32 %136, i32* %126, align 4
  br label %137

137:                                              ; preds = %85, %89, %94, %109, %111, %115, %120, %135
  %138 = phi %"class.WTF::StringImpl"* [ null, %85 ], [ null, %111 ], [ null, %89 ], [ %92, %94 ], [ %92, %109 ], [ null, %115 ], [ %118, %120 ], [ %118, %135 ]
  %139 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %139, align 8
  %140 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #11
  %141 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %142 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %58, i64 0, i32 0, i32 0
  %143 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %142, %"class.blink::QualifiedName"* dereferenceable(8) %141) #11
  br i1 %143, label %144, label %166

144:                                              ; preds = %137
  %145 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %142, %"class.blink::QualifiedName"* dereferenceable(8) %141) #11
  %146 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %166, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %166

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i33
  %158 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %157, i33 1) #11
  %159 = extractvalue { i33, i1 } %158, 1
  %160 = extractvalue { i33, i1 } %158, 0
  %161 = icmp slt i33 %160, 0
  %162 = or i1 %159, %161
  br i1 %162, label %163, label %164, !prof !3

163:                                              ; preds = %154
  call void @llvm.trap() #11
  unreachable

164:                                              ; preds = %154
  %165 = trunc i33 %160 to i32
  store i32 %165, i32* %155, align 4
  br label %166

166:                                              ; preds = %164, %149, %144, %137
  %167 = phi %"class.WTF::StringImpl"* [ null, %137 ], [ null, %144 ], [ %147, %149 ], [ %147, %164 ]
  %168 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %168, align 8
  %169 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #11
  %170 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %171 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %142, %"class.blink::QualifiedName"* dereferenceable(8) %170) #11
  br i1 %171, label %172, label %194

172:                                              ; preds = %166
  %173 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %142, %"class.blink::QualifiedName"* dereferenceable(8) %170) #11
  %174 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %194, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %194

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = zext i32 %184 to i33
  %186 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %185, i33 1) #11
  %187 = extractvalue { i33, i1 } %186, 1
  %188 = extractvalue { i33, i1 } %186, 0
  %189 = icmp slt i33 %188, 0
  %190 = or i1 %187, %189
  br i1 %190, label %191, label %192, !prof !3

191:                                              ; preds = %182
  call void @llvm.trap() #11
  unreachable

192:                                              ; preds = %182
  %193 = trunc i33 %188 to i32
  store i32 %193, i32* %183, align 4
  br label %194

194:                                              ; preds = %192, %177, %172, %166
  %195 = phi %"class.WTF::StringImpl"* [ null, %166 ], [ null, %172 ], [ %175, %177 ], [ %175, %192 ]
  %196 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %196, align 8
  call void @_ZN5blink11Performance17AddLongTaskTimingEN4base9TimeTicksES2_RKN3WTF12AtomicStringES6_S6_S6_S6_(%"class.blink::Performance"* %59, i64 %1, i64 %2, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12) #11
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #11
  br label %212

212:                                              ; preds = %194, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #11
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #11
  br label %228

228:                                              ; preds = %212, %224, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #11
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #11
  br label %244

244:                                              ; preds = %228, %240, %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #11
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #11
  br label %260

260:                                              ; preds = %259, %256, %244, %55, %52, %36
  %261 = phi i8* [ %38, %36 ], [ %38, %52 ], [ %38, %55 ], [ %60, %244 ], [ %60, %256 ], [ %60, %259 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #11
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #11
  br label %277

277:                                              ; preds = %260, %273, %276
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  br label %278

278:                                              ; preds = %5, %277
  ret void
}

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink5Frame20DeprecatedLocalOwnerEv(%"class.blink::Frame"*) local_unnamed_addr #1

declare void @_ZN5blink11Performance17AddLongTaskTimingEN4base9TimeTicksES2_RKN3WTF12AtomicStringES6_S6_S6_S6_(%"class.blink::Performance"*, i64, i64, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn672_N5blink17WindowPerformance14ReportLongTaskEN4base9TimeTicksES2_PNS_16ExecutionContextEb(%"class.blink::WindowPerformance"*, i64, i64, %"class.blink::ExecutionContext"*, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 -1, i32 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i32* %6 to %"class.blink::WindowPerformance"*
  tail call void @_ZN5blink17WindowPerformance14ReportLongTaskEN4base9TimeTicksES2_PNS_16ExecutionContextEb(%"class.blink::WindowPerformance"* %7, i64 %1, i64 %2, %"class.blink::ExecutionContext"* %3, i1 zeroext %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance19RegisterEventTimingERKN3WTF12AtomicStringEN4base9TimeTicksES6_S6_bPNS_4NodeE(%"class.blink::WindowPerformance"*, %"class.WTF::AtomicString"* dereferenceable(8), i64, i64, i64, i1 zeroext, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to { i64, i64 }*
  %11 = alloca %"class.blink::CrossThreadWeakPersistent", align 8
  %12 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %13 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #11
  %14 = icmp eq %"class.blink::LocalDOMWindow"* %13, null
  br i1 %14, label %236, label %15

15:                                               ; preds = %7
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kPointeroverE, align 8
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %83, label %22

22:                                               ; preds = %15
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerenterE, align 8
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %18, %25
  br i1 %26, label %83, label %27

27:                                               ; preds = %22
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kPointerdownE, align 8
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %18, %30
  br i1 %31, label %83, label %32

32:                                               ; preds = %27
  %33 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kPointerupE, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %18, %35
  br i1 %36, label %83, label %37

37:                                               ; preds = %32
  %38 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kPointercancelE, align 8
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %18, %40
  br i1 %41, label %83, label %42

42:                                               ; preds = %37
  %43 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kPointeroutE, align 8
  %44 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %18, %45
  br i1 %46, label %83, label %47

47:                                               ; preds = %42
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerleaveE, align 8
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %18, %50
  br i1 %51, label %83, label %52

52:                                               ; preds = %47
  %53 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names18kGotpointercaptureE, align 8
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %18, %55
  br i1 %56, label %83, label %57

57:                                               ; preds = %52
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names19kLostpointercaptureE, align 8
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %18, %60
  br i1 %61, label %83, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 10
  %64 = getelementptr inbounds %"class.blink::Member.65", %"class.blink::Member.65"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::EventCounts"*, %"class.blink::EventCounts"** %64, align 8
  %66 = icmp eq %"class.blink::EventCounts"* %65, null
  br i1 %66, label %67, label %81

67:                                               ; preds = %62
  %68 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %69 = bitcast i8* %68 to %"class.blink::EventCounts"*
  tail call void @_ZN5blink11EventCountsC1Ev(%"class.blink::EventCounts"* %69) #11
  %70 = getelementptr inbounds i8, i8* %68, i64 -4
  %71 = bitcast i8* %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = or i16 %72, 1
  store atomic i16 %73, i16* %71 release, align 2
  %74 = ptrtoint i8* %68 to i64
  %75 = bitcast %"class.blink::Member.65"* %63 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %67
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #11
  %80 = load %"class.blink::EventCounts"*, %"class.blink::EventCounts"** %64, align 8
  br label %81

81:                                               ; preds = %62, %67, %78
  %82 = phi %"class.blink::EventCounts"* [ %65, %62 ], [ %80, %78 ], [ %69, %67 ]
  tail call void @_ZN5blink11EventCounts3AddERKN3WTF12AtomicStringE(%"class.blink::EventCounts"* %82, %"class.WTF::AtomicString"* dereferenceable(8) %1) #11
  br label %83

83:                                               ; preds = %57, %52, %47, %42, %37, %32, %27, %22, %15, %81
  %84 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %85 = tail call double @_ZNK5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksE(%"class.blink::Performance"* %84, i64 %2) #11
  %86 = tail call double @_ZNK5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksE(%"class.blink::Performance"* %84, i64 %3) #11
  %87 = tail call double @_ZNK5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksE(%"class.blink::Performance"* %84, i64 %4) #11
  %88 = tail call %"class.blink::PerformanceEventTiming"* @_ZN5blink22PerformanceEventTiming6CreateERKN3WTF12AtomicStringEdddbPNS_4NodeE(%"class.WTF::AtomicString"* dereferenceable(8) %1, double %85, double %86, double %87, i1 zeroext %5, %"class.blink::Node"* %6) #11
  %89 = ptrtoint %"class.blink::PerformanceEventTiming"* %88 to i64
  %90 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7, i32 0
  %91 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %99, label %96

96:                                               ; preds = %83
  %97 = add i32 %95, 1
  %98 = icmp eq i32 %97, %92
  br i1 %98, label %108, label %110

99:                                               ; preds = %83
  %100 = icmp eq i32 %95, 0
  %101 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  br i1 %100, label %106, label %103

103:                                              ; preds = %99
  %104 = add i32 %102, -1
  %105 = icmp eq i32 %95, %104
  br i1 %105, label %108, label %110

106:                                              ; preds = %99
  %107 = icmp eq i32 %102, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %106, %103, %96
  tail call void @_ZN3WTF5DequeIN5blink6MemberINS1_22PerformanceEventTimingEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.56"* %90) #11
  %109 = load i32, i32* %94, align 4
  br label %110

110:                                              ; preds = %108, %106, %103, %96
  %111 = phi i32 [ %95, %96 ], [ %95, %103 ], [ 0, %106 ], [ %109, %108 ]
  %112 = getelementptr inbounds %"class.WTF::Deque.56", %"class.WTF::Deque.56"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::Member.22"*, %"class.blink::Member.22"** %112, align 8
  %114 = zext i32 %111 to i64
  %115 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %113, i64 %114
  %116 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = add i32 %117, -1
  %119 = icmp eq i32 %111, %118
  %120 = add i32 %111, 1
  %121 = select i1 %119, i32 0, i32 %120
  store i32 %121, i32* %94, align 4
  %122 = bitcast %"class.blink::Member.22"* %115 to i64*
  store atomic i64 %89, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %110
  %126 = bitcast %"class.blink::PerformanceEventTiming"* %88 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #11
  br label %128

128:                                              ; preds = %110, %125
  %129 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8
  %130 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 4
  %131 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8, i32 2
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %139, label %136

136:                                              ; preds = %128
  %137 = add i32 %135, 1
  %138 = icmp eq i32 %137, %132
  br i1 %138, label %148, label %150

139:                                              ; preds = %128
  %140 = icmp eq i32 %135, 0
  %141 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  br i1 %140, label %146, label %143

143:                                              ; preds = %139
  %144 = add i32 %142, -1
  %145 = icmp eq i32 %135, %144
  br i1 %145, label %148, label %150

146:                                              ; preds = %139
  %147 = icmp eq i32 %142, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %146, %143, %136
  tail call void @_ZN3WTF5DequeImLj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.60"* %129) #11
  %149 = load i32, i32* %134, align 4
  br label %150

150:                                              ; preds = %136, %143, %146, %148
  %151 = phi i32 [ %135, %136 ], [ %135, %143 ], [ 0, %146 ], [ %149, %148 ]
  %152 = getelementptr inbounds %"class.WTF::Deque.60", %"class.WTF::Deque.60"* %129, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i64*, i64** %152, align 8
  %154 = zext i32 %151 to i64
  %155 = getelementptr inbounds i64, i64* %153, i64 %154
  %156 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = add i32 %157, -1
  %159 = icmp eq i32 %151, %158
  %160 = add i32 %151, 1
  %161 = select i1 %159, i32 0, i32 %160
  store i32 %161, i32* %134, align 4
  %162 = load i64, i64* %130, align 8
  store i64 %162, i64* %155, align 8
  %163 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 6
  %164 = load i16, i16* %163, align 8
  %165 = icmp eq i16 %164, 0
  br i1 %165, label %171, label %166

166:                                              ; preds = %150
  %167 = load i64, i64* %130, align 8
  %168 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 5
  %169 = load i64, i64* %168, align 8
  %170 = icmp ugt i64 %167, %169
  br i1 %170, label %171, label %236

171:                                              ; preds = %150, %166
  %172 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #11
  %173 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %172, i64 0, i32 0, i32 1, i32 0, i32 0
  %174 = bitcast %"class.blink::Frame"** %173 to %"class.blink::LocalFrame"**
  %175 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %175, i64 0, i32 0
  %177 = tail call dereferenceable(40) %"class.blink::ChromeClient"* @_ZNK5blink5Frame15GetChromeClientEv(%"class.blink::Frame"* %176) #11
  %178 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #11
  %179 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %178, i64 0, i32 0, i32 1, i32 0, i32 0
  %180 = bitcast %"class.blink::Frame"** %179 to %"class.blink::LocalFrame"**
  %181 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %180, align 8
  %182 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #11
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WindowPerformance"*, i64, i32, i64)* @_ZN5blink17WindowPerformance18ReportEventTimingsEmNS_13WebSwapResultEN4base9TimeTicksE to i64), i64 0>, <2 x i64>* %9, align 16
  %183 = bitcast %"class.blink::CrossThreadWeakPersistent"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %183) #11
  %184 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %11, i64 0, i32 0
  %185 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %11, i64 0, i32 0, i32 0
  store %"class.blink::WindowPerformance"* %0, %"class.blink::WindowPerformance"** %185, align 8, !alias.scope !17
  %186 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %11, i64 0, i32 0, i32 1
  %187 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %187, align 8, !alias.scope !17
  %188 = ptrtoint %"class.blink::WindowPerformance"* %0 to i64
  switch i64 %188, label %189 [
    i64 0, label %208
    i64 -1, label %208
  ]

189:                                              ; preds = %171
  %190 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !17
  %191 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %190, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %191) #11, !noalias !17
  %192 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11, !noalias !17
  %193 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %192, i64 0, i32 0, i32 0
  %194 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %193, align 8, !noalias !17
  %195 = icmp eq %"class.blink::PersistentNode"* %194, null
  br i1 %195, label %196, label %199, !prof !3

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %192, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %197) #11
  %198 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %193, align 8
  br label %199

199:                                              ; preds = %196, %189
  %200 = phi %"class.blink::PersistentNode"* [ %198, %196 ], [ %194, %189 ]
  %201 = bitcast %"class.blink::PersistentNode"* %200 to i64*
  %202 = load i64, i64* %201, align 8, !noalias !17
  %203 = bitcast %"class.blink::CrossThreadPersistentRegion"* %192 to i64*
  store i64 %202, i64* %203, align 8, !noalias !17
  %204 = bitcast %"class.blink::PersistentNode"* %200 to %"class.blink::PersistentBase.2110"**
  store %"class.blink::PersistentBase.2110"* %184, %"class.blink::PersistentBase.2110"** %204, align 8, !noalias !17
  %205 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %200, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %205, align 8
  %206 = ptrtoint %"class.blink::PersistentNode"* %200 to i64
  %207 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %186 to i64*
  store atomic i64 %206, i64* %207 release, align 8, !alias.scope !17
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %191) #11
  br label %208

208:                                              ; preds = %171, %171, %199
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink17WindowPerformanceEFvmNS1_13WebSwapResultEN4base9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EERmEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %8, { i64, i64 }* nonnull dereferenceable(16) %10, %"class.blink::CrossThreadWeakPersistent"* nonnull dereferenceable(16) %11, i64* dereferenceable(8) %130)
  %209 = bitcast %"class.blink::ChromeClient"* %177 to void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, %"class.WTF::CrossThreadOnceFunction"*)***
  %210 = load void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, %"class.WTF::CrossThreadOnceFunction"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, %"class.WTF::CrossThreadOnceFunction"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, %"class.WTF::CrossThreadOnceFunction"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, %"class.WTF::CrossThreadOnceFunction"*)** %210, i64 104
  %212 = load void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, %"class.WTF::CrossThreadOnceFunction"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, %"class.WTF::CrossThreadOnceFunction"*)** %211, align 8
  call void %212(%"class.blink::ChromeClient"* %177, %"class.blink::LocalFrame"* dereferenceable(1176) %181, %"class.WTF::CrossThreadOnceFunction"* nonnull %8) #11
  %213 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %213) #11
  %214 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %186 to i64*
  %215 = load atomic i64, i64* %214 acquire, align 8
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %231, label %217

217:                                              ; preds = %208
  %218 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %219 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %218, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %219) #11
  %220 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %221 = load atomic i64, i64* %214 monotonic, align 8
  %222 = inttoptr i64 %221 to %"class.blink::PersistentNode"*
  %223 = icmp eq i64 %221, 0
  br i1 %223, label %230, label %224

224:                                              ; preds = %217
  %225 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %220, i64 0, i32 0, i32 0
  %226 = bitcast %"class.blink::CrossThreadPersistentRegion"* %220 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = inttoptr i64 %221 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %222, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %229, align 8
  store %"class.blink::PersistentNode"* %222, %"class.blink::PersistentNode"** %225, align 8
  br label %230

230:                                              ; preds = %224, %217
  store atomic i64 0, i64* %214 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %219) #11
  br label %231

231:                                              ; preds = %208, %230
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %183) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #11
  %232 = load i64, i64* %130, align 8
  %233 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 5
  store i64 %232, i64* %233, align 8
  %234 = load i16, i16* %163, align 8
  %235 = add i16 %234, 1
  store i16 %235, i16* %163, align 8
  br label %236

236:                                              ; preds = %166, %231, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EventCounts"* @_ZN5blink17WindowPerformance11eventCountsEv(%"class.blink::WindowPerformance"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 10
  %3 = getelementptr inbounds %"class.blink::Member.65", %"class.blink::Member.65"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::EventCounts"*, %"class.blink::EventCounts"** %3, align 8
  %5 = icmp eq %"class.blink::EventCounts"* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %8 = bitcast i8* %7 to %"class.blink::EventCounts"*
  tail call void @_ZN5blink11EventCountsC1Ev(%"class.blink::EventCounts"* %8) #11
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast %"class.blink::Member.65"* %2 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  %17 = bitcast i8* %7 to %"class.blink::EventCounts"*
  br i1 %16, label %21, label %18

18:                                               ; preds = %6
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #11
  %20 = load %"class.blink::EventCounts"*, %"class.blink::EventCounts"** %3, align 8
  br label %21

21:                                               ; preds = %1, %18, %6
  %22 = phi %"class.blink::EventCounts"* [ %4, %1 ], [ %20, %18 ], [ %17, %6 ]
  ret %"class.blink::EventCounts"* %22
}

declare void @_ZN5blink11EventCounts3AddERKN3WTF12AtomicStringE(%"class.blink::EventCounts"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::PerformanceEventTiming"* @_ZN5blink22PerformanceEventTiming6CreateERKN3WTF12AtomicStringEdddbPNS_4NodeE(%"class.WTF::AtomicString"* dereferenceable(8), double, double, double, i1 zeroext, %"class.blink::Node"*) local_unnamed_addr #1

declare double @_ZNK5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksE(%"class.blink::Performance"*, i64) local_unnamed_addr #1

declare dereferenceable(40) %"class.blink::ChromeClient"* @_ZNK5blink5Frame15GetChromeClientEv(%"class.blink::Frame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF19CrossThreadBindOnceIMN5blink17WindowPerformanceEFvmNS1_13WebSwapResultEN4base9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EERmEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* noalias sret, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadWeakPersistent"* dereferenceable(16), i64* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.base::OnceCallback.2109", align 8
  %6 = alloca %"class.base::OnceCallback.2109", align 8
  %7 = alloca %"class.blink::CrossThreadWeakPersistent", align 8
  %8 = alloca i64, align 8
  %9 = bitcast %"class.blink::CrossThreadWeakPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #11, !alias.scope !20
  %11 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !20
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #11, !noalias !20
  %13 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %13, align 8, !noalias !20
  call void @_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2110"* nonnull %10, %"class.blink::WindowPerformance"* %14) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #11
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = load i64, i64* %3, align 8
  store i64 %16, i64* %8, align 8
  %17 = call i8* @_Znwm(i64 72) #14, !noalias !23
  %18 = bitcast i8* %17 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink17WindowPerformanceEFvmNS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EEmEEC2IS7_JS9_mEEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.base::TimeTicks"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEFvS5_S6_EE7RunOnceEPNS0_13BindStateBaseES5_OS6_ to void ()*), { i64, i64 }* dereferenceable(16) %1, %"class.blink::CrossThreadWeakPersistent"* nonnull dereferenceable(16) %7, i64* nonnull dereferenceable(8) %8) #11, !noalias !23
  %19 = bitcast %"class.base::OnceCallback.2109"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.base::OnceCallback.2109", %"class.base::OnceCallback.2109"* %6, i64 0, i32 0, i32 0, i32 0
  %21 = ptrtoint i8* %17 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8, !noalias !28
  %22 = getelementptr inbounds %"class.base::OnceCallback.2109", %"class.base::OnceCallback.2109"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::CrossThreadOnceFunction"* %0 to i64*
  store i64 %21, i64* %23, align 8, !alias.scope !28
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8, !noalias !28
  %24 = getelementptr inbounds %"class.base::OnceCallback.2109", %"class.base::OnceCallback.2109"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %25 = getelementptr inbounds %"class.base::OnceCallback.2109", %"class.base::OnceCallback.2109"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %26 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %7, i64 0, i32 0, i32 1
  %27 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %26 to i64*
  %28 = load atomic i64, i64* %27 acquire, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %44, label %30

30:                                               ; preds = %4
  %31 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %32 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %31, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %32) #11
  %33 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %34 = load atomic i64, i64* %27 monotonic, align 8
  %35 = inttoptr i64 %34 to %"class.blink::PersistentNode"*
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %33, i64 0, i32 0, i32 0
  %39 = bitcast %"class.blink::CrossThreadPersistentRegion"* %33 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = inttoptr i64 %34 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %42, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %38, align 8
  br label %43

43:                                               ; preds = %37, %30
  store atomic i64 0, i64* %27 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %32) #11
  br label %44

44:                                               ; preds = %4, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance18ReportEventTimingsEmNS_13WebSwapResultEN4base9TimeTicksE(%"class.blink::WindowPerformance"*, i64, i32, i64) #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.std::__1::unique_ptr.2149", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 6
  %28 = load i16, i16* %27, align 8
  %29 = add i16 %28, -1
  store i16 %29, i16* %27, align 8
  %30 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %549, label %35

35:                                               ; preds = %4
  %36 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %37 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %36) #11
  %38 = icmp eq %"class.blink::LocalDOMWindow"* %37, null
  br i1 %38, label %549, label %39

39:                                               ; preds = %35
  %40 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %36) #11
  %41 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %40) #11
  %42 = tail call %"class.blink::InteractiveDetector"* @_ZN5blink19InteractiveDetector4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %41) #11
  %43 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %36) #11
  %44 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase24is_event_timing_enabled_E, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %47 = tail call double @_ZNK5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksE(%"class.blink::Performance"* %46, i64 %3) #11
  %48 = load i32, i32* %30, align 8
  %49 = load i32, i32* %32, align 4
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %549, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8, i32 1
  %55 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast %"class.std::__1::unique_ptr.2149"* %25 to i8*
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.2149", %"class.std::__1::unique_ptr.2149"* %25, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %60 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::StringView"* %15 to i8*
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %66 = bitcast i8** %65 to %"class.WTF::StringImpl"**
  %67 = bitcast %"class.WTF::StringView"* %15 to i64*
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  %69 = bitcast %"class.WTF::StringView"* %16 to i8*
  %70 = bitcast %"class.WTF::StringView"* %16 to i64*
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  %73 = bitcast %"class.WTF::StringView"* %11 to i8*
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  %77 = bitcast %"class.WTF::StringView"* %11 to i64*
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %79 = bitcast %"class.WTF::StringView"* %12 to i8*
  %80 = bitcast %"class.WTF::StringView"* %12 to i64*
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %83 = bitcast %"class.WTF::StringView"* %5 to i8*
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %86 = bitcast i8** %85 to %"class.WTF::StringImpl"**
  %87 = bitcast %"class.WTF::StringView"* %5 to i64*
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %89 = bitcast %"class.WTF::StringView"* %6 to i8*
  %90 = bitcast %"class.WTF::StringView"* %6 to i64*
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %93 = bitcast %"class.WTF::StringView"* %7 to i8*
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %96 = bitcast i8** %95 to %"class.WTF::StringImpl"**
  %97 = bitcast %"class.WTF::StringView"* %7 to i64*
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %99 = bitcast %"class.WTF::StringView"* %8 to i8*
  %100 = bitcast %"class.WTF::StringView"* %8 to i64*
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %103 = bitcast %"class.WTF::StringView"* %9 to i8*
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %106 = bitcast i8** %105 to %"class.WTF::StringImpl"**
  %107 = bitcast %"class.WTF::StringView"* %9 to i64*
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %109 = bitcast %"class.WTF::StringView"* %10 to i8*
  %110 = bitcast %"class.WTF::StringView"* %10 to i64*
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %113 = icmp eq %"class.blink::InteractiveDetector"* %42, null
  %114 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %115 = icmp ne %"class.blink::InteractiveDetector"* %42, null
  %116 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %118 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %120 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %121 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0, i32 17, i32 0, i32 0
  %122 = bitcast %"class.WTF::StringView"* %13 to i8*
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %125 = bitcast i8** %124 to %"class.WTF::StringImpl"**
  %126 = bitcast %"class.WTF::StringView"* %13 to i64*
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  %128 = bitcast %"class.WTF::StringView"* %14 to i8*
  %129 = bitcast %"class.WTF::StringView"* %14 to i64*
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  %132 = bitcast %"class.WTF::StringView"* %17 to i8*
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %135 = bitcast i8** %134 to %"class.WTF::StringImpl"**
  %136 = bitcast %"class.WTF::StringView"* %17 to i64*
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  %138 = bitcast %"class.WTF::StringView"* %18 to i8*
  %139 = bitcast %"class.WTF::StringView"* %18 to i64*
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  %142 = bitcast %"class.WTF::StringView"* %19 to i8*
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %145 = bitcast i8** %144 to %"class.WTF::StringImpl"**
  %146 = bitcast %"class.WTF::StringView"* %19 to i64*
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  %148 = bitcast %"class.WTF::StringView"* %20 to i8*
  %149 = bitcast %"class.WTF::StringView"* %20 to i64*
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  %152 = bitcast %"class.WTF::StringView"* %21 to i8*
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 0
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  %155 = bitcast i8** %154 to %"class.WTF::StringImpl"**
  %156 = bitcast %"class.WTF::StringView"* %21 to i64*
  %157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  %158 = bitcast %"class.WTF::StringView"* %22 to i8*
  %159 = bitcast %"class.WTF::StringView"* %22 to i64*
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  %162 = bitcast %"class.WTF::StringView"* %23 to i8*
  %163 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 0
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  %165 = bitcast i8** %164 to %"class.WTF::StringImpl"**
  %166 = bitcast %"class.WTF::StringView"* %23 to i64*
  %167 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  %168 = bitcast %"class.WTF::StringView"* %24 to i8*
  %169 = bitcast %"class.WTF::StringView"* %24 to i64*
  %170 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  %172 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 9, i32 0, i32 0
  %173 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 9
  %174 = bitcast %"class.blink::Member.22"* %173 to i64*
  br label %175

175:                                              ; preds = %51, %545
  %176 = phi i32 [ %48, %51 ], [ %546, %545 ]
  %177 = load %"class.blink::Member.22"*, %"class.blink::Member.22"** %52, align 8
  %178 = zext i32 %176 to i64
  %179 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %177, i64 %178
  %180 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %179, i64 0, i32 0, i32 0
  %181 = load %"class.blink::PerformanceEventTiming"*, %"class.blink::PerformanceEventTiming"** %180, align 8
  %182 = load i64*, i64** %53, align 8
  %183 = load i32, i32* %54, align 8
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds i64, i64* %182, i64 %184
  %186 = load i64, i64* %185, align 8
  %187 = icmp ugt i64 %186, %1
  br i1 %187, label %549, label %188

188:                                              ; preds = %175
  %189 = add i32 %176, 1
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %177, i64 %190
  %192 = bitcast %"class.blink::Member.22"* %179 to i8*
  %193 = ptrtoint %"class.blink::Member.22"* %191 to i64
  %194 = ptrtoint %"class.blink::Member.22"* %179 to i64
  %195 = sub i64 %193, %194
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %192, i64 %195) #11
  %196 = load i32, i32* %30, align 8
  %197 = load i32, i32* %55, align 8
  %198 = add i32 %197, -1
  %199 = icmp eq i32 %196, %198
  %200 = add i32 %196, 1
  %201 = select i1 %199, i32 0, i32 %200
  store i32 %201, i32* %30, align 8
  %202 = load i32, i32* %54, align 8
  %203 = add i32 %202, 1
  %204 = load i32, i32* %56, align 8
  %205 = add i32 %204, -1
  %206 = icmp eq i32 %202, %205
  %207 = select i1 %206, i32 0, i32 %203
  store i32 %207, i32* %54, align 8
  %208 = bitcast %"class.blink::PerformanceEventTiming"* %181 to %"class.blink::PerformanceEntry"*
  %209 = call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %208) #11
  %210 = fsub double %47, %209
  %211 = fmul double %210, 1.250000e-01
  %212 = call double @llvm.round.f64(double %211)
  %213 = fmul double %212, 8.000000e+00
  %214 = fptosi double %213 to i32
  %215 = call double @_ZNK5blink22PerformanceEventTiming15processingStartEv(%"class.blink::PerformanceEventTiming"* %181) #11
  %216 = call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %208) #11
  %217 = fsub double %215, %216
  %218 = fmul double %217, 1.000000e+03
  %219 = fcmp ult double %218, 0xC3E0000000000000
  %220 = fcmp ugt double %218, 0x43DFFFFFFFFFFFFF
  %221 = fcmp ogt double %218, 0xC3E0000000000000
  %222 = select i1 %221, double %218, double 0xC3E0000000000000
  %223 = fptosi double %222 to i64
  %224 = select i1 %219, i64 0, i64 9223372036854775807
  %225 = select i1 %220, i64 %224, i64 %223
  %226 = call double @_ZNK5blink22PerformanceEventTiming13processingEndEv(%"class.blink::PerformanceEventTiming"* %181) #11
  %227 = call double @_ZNK5blink22PerformanceEventTiming15processingStartEv(%"class.blink::PerformanceEventTiming"* %181) #11
  %228 = fsub double %226, %227
  %229 = fmul double %228, 1.000000e+03
  %230 = fcmp ult double %229, 0xC3E0000000000000
  %231 = fcmp ugt double %229, 0x43DFFFFFFFFFFFFF
  %232 = fcmp ogt double %229, 0xC3E0000000000000
  %233 = select i1 %232, double %229, double 0xC3E0000000000000
  %234 = fptosi double %233 to i64
  %235 = select i1 %230, i64 0, i64 9223372036854775807
  %236 = select i1 %231, i64 %235, i64 %234
  %237 = call double @_ZNK5blink22PerformanceEventTiming13processingEndEv(%"class.blink::PerformanceEventTiming"* %181) #11
  %238 = fsub double %47, %237
  %239 = fmul double %238, 1.000000e+03
  %240 = fcmp ult double %239, 0xC3E0000000000000
  %241 = fcmp ugt double %239, 0x43DFFFFFFFFFFFFF
  %242 = fcmp ogt double %239, 0xC3E0000000000000
  %243 = select i1 %242, double %239, double 0xC3E0000000000000
  %244 = fptosi double %243 to i64
  %245 = select i1 %240, i64 0, i64 9223372036854775807
  %246 = select i1 %241, i64 %245, i64 %244
  %247 = sitofp i32 %214 to double
  call void @_ZN5blink22PerformanceEventTiming11SetDurationEd(%"class.blink::PerformanceEventTiming"* %181, double %247) #11
  %248 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), align 16
  %249 = and i8 %248, 25
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %288, label %251, !prof !31

251:                                              ; preds = %188
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #11
  %252 = call %"class.blink::TracedValue"* @_ZNK5blink22PerformanceEventTiming13ToTracedValueEv(%"class.blink::PerformanceEventTiming"* %181) #11
  store %"class.blink::TracedValue"* %252, %"class.blink::TracedValue"** %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #11
  %253 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %36) #11
  %254 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %253, i64 0, i32 0, i32 1, i32 0, i32 0
  %255 = bitcast %"class.blink::Frame"** %254 to %"class.blink::LocalFrame"**
  %256 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %255, align 8
  %257 = icmp eq %"class.blink::LocalFrame"* %256, null
  br i1 %257, label %272, label %258

258:                                              ; preds = %251
  %259 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %256, i64 0, i32 0
  %260 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN5blink5Frame12ToTraceValueEv(%"class.blink::Frame"* nonnull %259) #11, !noalias !32
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %261, i64 0, i32 1, i32 0
  %263 = load i8, i8* %262, align 1, !noalias !32
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %267, label %265

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %266, i64 24, i1 false) #11
  br label %273

267:                                              ; preds = %258
  %268 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load i8*, i8** %268, align 8, !noalias !32
  %270 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %271 = load i64, i64* %270, align 8, !noalias !32
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %26, i8* %269, i64 %271) #11
  br label %273

272:                                              ; preds = %251
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #11, !alias.scope !32
  br label %273

273:                                              ; preds = %265, %267, %272
  %274 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSK_yjySK_OT_SK_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::unique_ptr.2149"* nonnull dereferenceable(8) %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %26)
  %275 = load i8, i8* %61, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %273
  %278 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %278) #14
  br label %279

279:                                              ; preds = %273, %277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #11
  %280 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %58, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %58, align 8
  %281 = icmp eq %"class.blink::TracedValue"* %280, null
  br i1 %281, label %287, label %282

282:                                              ; preds = %279
  %283 = bitcast %"class.blink::TracedValue"* %280 to void (%"class.blink::TracedValue"*)***
  %284 = load void (%"class.blink::TracedValue"*)**, void (%"class.blink::TracedValue"*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %284, i64 1
  %286 = load void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %285, align 8
  call void %286(%"class.blink::TracedValue"* nonnull %280) #11
  br label %287

287:                                              ; preds = %279, %282
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #11
  br label %288

288:                                              ; preds = %188, %287
  %289 = phi i64 [ -6148914691236517206, %188 ], [ %274, %287 ]
  %290 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %188 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), %287 ]
  %291 = phi i8* [ null, %188 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), %287 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  %292 = getelementptr inbounds %"class.blink::PerformanceEventTiming", %"class.blink::PerformanceEventTiming"* %181, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %295, label %297

295:                                              ; preds = %288
  store i8* null, i8** %65, align 8
  %296 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %296, i64* %67, align 8
  br label %302

297:                                              ; preds = %288
  store %"class.WTF::StringImpl"* %293, %"class.WTF::StringImpl"** %64, align 8
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 1
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 1
  store %"class.WTF::StringImpl"* %300, %"class.WTF::StringImpl"** %66, align 8
  %301 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %302

302:                                              ; preds = %297, %295
  %303 = phi i64 [ %301, %297 ], [ %296, %295 ]
  %304 = phi i32 [ %299, %297 ], [ 0, %295 ]
  store i32 %304, i32* %68, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #11
  store i64 %303, i64* %70, align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8** %71, align 8
  store i32 11, i32* %72, align 8
  %305 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  br i1 %305, label %306, label %318

306:                                              ; preds = %302
  %307 = load i8, i8* %116, align 8, !range !2
  %308 = icmp eq i8 %307, 0
  store i64 %225, i64* %117, align 8
  br i1 %308, label %309, label %310

309:                                              ; preds = %306
  store i8 1, i8* %116, align 8
  br label %310

310:                                              ; preds = %306, %309
  %311 = load i8, i8* %118, align 8, !range !2
  %312 = icmp eq i8 %311, 0
  store i64 %236, i64* %119, align 8
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  store i8 1, i8* %118, align 8
  br label %314

314:                                              ; preds = %310, %313
  %315 = load i8, i8* %114, align 8, !range !2
  %316 = icmp eq i8 %315, 0
  store i64 %246, i64* %120, align 8
  br i1 %316, label %317, label %434

317:                                              ; preds = %314
  store i8 1, i8* %114, align 8
  br label %434

318:                                              ; preds = %302
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #11
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %321, label %323

321:                                              ; preds = %318
  store i8* null, i8** %75, align 8
  %322 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %322, i64* %77, align 8
  br label %328

323:                                              ; preds = %318
  store %"class.WTF::StringImpl"* %319, %"class.WTF::StringImpl"** %74, align 8
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 1
  store %"class.WTF::StringImpl"* %326, %"class.WTF::StringImpl"** %76, align 8
  %327 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %328

328:                                              ; preds = %323, %321
  %329 = phi i64 [ %327, %323 ], [ %322, %321 ]
  %330 = phi i32 [ %325, %323 ], [ 0, %321 ]
  store i32 %330, i32* %78, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #11
  store i64 %329, i64* %80, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8** %81, align 8
  store i32 9, i32* %82, align 8
  %331 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br i1 %331, label %332, label %368

332:                                              ; preds = %328
  %333 = load i8, i8* %114, align 8, !range !2
  %334 = icmp ne i8 %333, 0
  %335 = and i1 %115, %334
  br i1 %335, label %336, label %434

336:                                              ; preds = %332
  %337 = load i8, i8* %116, align 8, !range !2
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

340:                                              ; preds = %336
  %341 = load i64, i64* %117, align 8
  %342 = load i8, i8* %118, align 8, !range !2
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %340
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

345:                                              ; preds = %340
  %346 = load i64, i64* %119, align 8
  %347 = load i64, i64* %120, align 8
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %367, label %350

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %367

355:                                              ; preds = %350
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %357 = load i32, i32* %356, align 4
  %358 = zext i32 %357 to i33
  %359 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %358, i33 1) #11
  %360 = extractvalue { i33, i1 } %359, 1
  %361 = extractvalue { i33, i1 } %359, 0
  %362 = icmp slt i33 %361, 0
  %363 = or i1 %360, %362
  br i1 %363, label %364, label %365, !prof !3

364:                                              ; preds = %355
  call void @llvm.trap() #11
  unreachable

365:                                              ; preds = %355
  %366 = trunc i33 %361 to i32
  store i32 %366, i32* %356, align 4
  br label %367

367:                                              ; preds = %345, %350, %365
  call void @_ZN5blink19InteractiveDetector25RecordInputEventTimingUKMEN4base9TimeDeltaES2_S2_N3WTF12AtomicStringE(%"class.blink::InteractiveDetector"* nonnull %42, i64 %341, i64 %346, i64 %347, %"class.WTF::StringImpl"* %348) #11
  br label %434

368:                                              ; preds = %328
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #11
  %369 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %370 = icmp eq %"class.WTF::StringImpl"* %369, null
  br i1 %370, label %371, label %373

371:                                              ; preds = %368
  store i8* null, i8** %85, align 8
  %372 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %372, i64* %87, align 8
  br label %378

373:                                              ; preds = %368
  store %"class.WTF::StringImpl"* %369, %"class.WTF::StringImpl"** %84, align 8
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 1
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 1
  store %"class.WTF::StringImpl"* %376, %"class.WTF::StringImpl"** %86, align 8
  %377 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %378

378:                                              ; preds = %373, %371
  %379 = phi i64 [ %377, %373 ], [ %372, %371 ]
  %380 = phi i32 [ %375, %373 ], [ 0, %371 ]
  store i32 %380, i32* %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #11
  store i64 %379, i64* %90, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8** %91, align 8
  store i32 5, i32* %92, align 8
  %381 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #11
  br i1 %381, label %412, label %382

382:                                              ; preds = %378
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %385, label %387

385:                                              ; preds = %382
  store i8* null, i8** %95, align 8
  %386 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %386, i64* %97, align 8
  br label %392

387:                                              ; preds = %382
  store %"class.WTF::StringImpl"* %383, %"class.WTF::StringImpl"** %94, align 8
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 1
  store %"class.WTF::StringImpl"* %390, %"class.WTF::StringImpl"** %96, align 8
  %391 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %392

392:                                              ; preds = %387, %385
  %393 = phi i64 [ %391, %387 ], [ %386, %385 ]
  %394 = phi i32 [ %389, %387 ], [ 0, %385 ]
  store i32 %394, i32* %98, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #11
  store i64 %393, i64* %100, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %101, align 8
  store i32 7, i32* %102, align 8
  %395 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  br i1 %395, label %412, label %396

396:                                              ; preds = %392
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #11
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %398 = icmp eq %"class.WTF::StringImpl"* %397, null
  br i1 %398, label %399, label %401

399:                                              ; preds = %396
  store i8* null, i8** %105, align 8
  %400 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %400, i64* %107, align 8
  br label %406

401:                                              ; preds = %396
  store %"class.WTF::StringImpl"* %397, %"class.WTF::StringImpl"** %104, align 8
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 1
  %403 = load i32, i32* %402, align 4
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 1
  store %"class.WTF::StringImpl"* %404, %"class.WTF::StringImpl"** %106, align 8
  %405 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %406

406:                                              ; preds = %401, %399
  %407 = phi i64 [ %405, %401 ], [ %400, %399 ]
  %408 = phi i32 [ %403, %401 ], [ 0, %399 ]
  store i32 %408, i32* %108, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #11
  store i64 %407, i64* %110, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8** %111, align 8
  store i32 9, i32* %112, align 8
  %409 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #11
  %410 = xor i1 %409, true
  %411 = or i1 %113, %410
  br i1 %411, label %434, label %413

412:                                              ; preds = %392, %378
  br i1 %113, label %434, label %413

413:                                              ; preds = %406, %412
  %414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %415 = icmp eq %"class.WTF::StringImpl"* %414, null
  br i1 %415, label %433, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load atomic i32, i32* %417 monotonic, align 4
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %433

421:                                              ; preds = %416
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  %424 = zext i32 %423 to i33
  %425 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %424, i33 1) #11
  %426 = extractvalue { i33, i1 } %425, 1
  %427 = extractvalue { i33, i1 } %425, 0
  %428 = icmp slt i33 %427, 0
  %429 = or i1 %426, %428
  br i1 %429, label %430, label %431, !prof !3

430:                                              ; preds = %421
  call void @llvm.trap() #11
  unreachable

431:                                              ; preds = %421
  %432 = trunc i33 %427 to i32
  store i32 %432, i32* %422, align 4
  br label %433

433:                                              ; preds = %413, %416, %431
  call void @_ZN5blink19InteractiveDetector25RecordInputEventTimingUKMEN4base9TimeDeltaES2_S2_N3WTF12AtomicStringE(%"class.blink::InteractiveDetector"* nonnull %42, i64 %225, i64 %236, i64 %246, %"class.WTF::StringImpl"* %414) #11
  br label %434

434:                                              ; preds = %317, %314, %406, %412, %367, %332, %433
  %435 = load %"class.blink::PerformanceEventTiming"*, %"class.blink::PerformanceEventTiming"** %121, align 8
  %436 = icmp eq %"class.blink::PerformanceEventTiming"* %435, null
  br i1 %436, label %437, label %519

437:                                              ; preds = %434
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #11
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %440, label %442

440:                                              ; preds = %437
  store i8* null, i8** %124, align 8
  %441 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %441, i64* %126, align 8
  br label %447

442:                                              ; preds = %437
  store %"class.WTF::StringImpl"* %438, %"class.WTF::StringImpl"** %123, align 8
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 1
  %444 = load i32, i32* %443, align 4
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 1
  store %"class.WTF::StringImpl"* %445, %"class.WTF::StringImpl"** %125, align 8
  %446 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %447

447:                                              ; preds = %442, %440
  %448 = phi i64 [ %446, %442 ], [ %441, %440 ]
  %449 = phi i32 [ %444, %442 ], [ 0, %440 ]
  store i32 %449, i32* %127, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #11
  store i64 %448, i64* %129, align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8** %130, align 8
  store i32 11, i32* %131, align 8
  %450 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #11
  br i1 %450, label %451, label %459

451:                                              ; preds = %447
  %452 = call %"class.blink::PerformanceEventTiming"* @_ZN5blink22PerformanceEventTiming22CreateFirstInputTimingEPS0_(%"class.blink::PerformanceEventTiming"* %181) #11
  %453 = ptrtoint %"class.blink::PerformanceEventTiming"* %452 to i64
  store atomic i64 %453, i64* %174 monotonic, align 8
  %454 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %519, label %456

456:                                              ; preds = %451
  %457 = bitcast %"class.blink::PerformanceEventTiming"* %452 to i8*
  %458 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %457) #11
  br label %519

459:                                              ; preds = %447
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #11
  %460 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %461 = icmp eq %"class.WTF::StringImpl"* %460, null
  br i1 %461, label %462, label %464

462:                                              ; preds = %459
  store i8* null, i8** %134, align 8
  %463 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %463, i64* %136, align 8
  br label %469

464:                                              ; preds = %459
  store %"class.WTF::StringImpl"* %460, %"class.WTF::StringImpl"** %133, align 8
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 0, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 1
  store %"class.WTF::StringImpl"* %467, %"class.WTF::StringImpl"** %135, align 8
  %468 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %469

469:                                              ; preds = %464, %462
  %470 = phi i64 [ %468, %464 ], [ %463, %462 ]
  %471 = phi i32 [ %466, %464 ], [ 0, %462 ]
  store i32 %471, i32* %137, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #11
  store i64 %470, i64* %139, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8** %140, align 8
  store i32 9, i32* %141, align 8
  %472 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #11
  br i1 %472, label %473, label %475

473:                                              ; preds = %469
  %474 = load %"class.blink::PerformanceEventTiming"*, %"class.blink::PerformanceEventTiming"** %172, align 8
  call void @_ZN5blink17WindowPerformance24DispatchFirstInputTimingEPNS_22PerformanceEventTimingE(%"class.blink::WindowPerformance"* %0, %"class.blink::PerformanceEventTiming"* %474)
  br label %519

475:                                              ; preds = %469
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #11
  %476 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %477 = icmp eq %"class.WTF::StringImpl"* %476, null
  br i1 %477, label %478, label %480

478:                                              ; preds = %475
  store i8* null, i8** %144, align 8
  %479 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %479, i64* %146, align 8
  br label %485

480:                                              ; preds = %475
  store %"class.WTF::StringImpl"* %476, %"class.WTF::StringImpl"** %143, align 8
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 0, i32 1
  %482 = load i32, i32* %481, align 4
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 1
  store %"class.WTF::StringImpl"* %483, %"class.WTF::StringImpl"** %145, align 8
  %484 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %485

485:                                              ; preds = %480, %478
  %486 = phi i64 [ %484, %480 ], [ %479, %478 ]
  %487 = phi i32 [ %482, %480 ], [ 0, %478 ]
  store i32 %487, i32* %147, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #11
  store i64 %486, i64* %149, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8** %150, align 8
  store i32 5, i32* %151, align 8
  %488 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %19, %"class.WTF::StringView"* nonnull dereferenceable(24) %20) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #11
  br i1 %488, label %517, label %489

489:                                              ; preds = %485
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #11
  %490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %491 = icmp eq %"class.WTF::StringImpl"* %490, null
  br i1 %491, label %492, label %494

492:                                              ; preds = %489
  store i8* null, i8** %154, align 8
  %493 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %493, i64* %156, align 8
  br label %499

494:                                              ; preds = %489
  store %"class.WTF::StringImpl"* %490, %"class.WTF::StringImpl"** %153, align 8
  %495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %490, i64 0, i32 1
  %496 = load i32, i32* %495, align 4
  %497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %490, i64 1
  store %"class.WTF::StringImpl"* %497, %"class.WTF::StringImpl"** %155, align 8
  %498 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %499

499:                                              ; preds = %494, %492
  %500 = phi i64 [ %498, %494 ], [ %493, %492 ]
  %501 = phi i32 [ %496, %494 ], [ 0, %492 ]
  store i32 %501, i32* %157, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #11
  store i64 %500, i64* %159, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %160, align 8
  store i32 7, i32* %161, align 8
  %502 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %21, %"class.WTF::StringView"* nonnull dereferenceable(24) %22) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #11
  br i1 %502, label %517, label %503

503:                                              ; preds = %499
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #11
  %504 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %505 = icmp eq %"class.WTF::StringImpl"* %504, null
  br i1 %505, label %506, label %508

506:                                              ; preds = %503
  store i8* null, i8** %164, align 8
  %507 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %507, i64* %166, align 8
  br label %513

508:                                              ; preds = %503
  store %"class.WTF::StringImpl"* %504, %"class.WTF::StringImpl"** %163, align 8
  %509 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 1
  %510 = load i32, i32* %509, align 4
  %511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 1
  store %"class.WTF::StringImpl"* %511, %"class.WTF::StringImpl"** %165, align 8
  %512 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %513

513:                                              ; preds = %508, %506
  %514 = phi i64 [ %512, %508 ], [ %507, %506 ]
  %515 = phi i32 [ %510, %508 ], [ 0, %506 ]
  store i32 %515, i32* %167, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #11
  store i64 %514, i64* %169, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8** %170, align 8
  store i32 9, i32* %171, align 8
  %516 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %24) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #11
  br i1 %516, label %517, label %519

517:                                              ; preds = %513, %499, %485
  %518 = call %"class.blink::PerformanceEventTiming"* @_ZN5blink22PerformanceEventTiming22CreateFirstInputTimingEPS0_(%"class.blink::PerformanceEventTiming"* %181) #11
  call void @_ZN5blink17WindowPerformance24DispatchFirstInputTimingEPNS_22PerformanceEventTimingE(%"class.blink::WindowPerformance"* %0, %"class.blink::PerformanceEventTiming"* %518)
  br label %519

519:                                              ; preds = %434, %456, %451, %513, %517, %473
  br i1 %45, label %539, label %520

520:                                              ; preds = %519
  %521 = call zeroext i1 @_ZNK5blink11Performance14HasObserverForENS_16PerformanceEntry9EntryTypeE(%"class.blink::Performance"* %46, i32 128) #11
  br i1 %521, label %522, label %534

522:                                              ; preds = %520
  %523 = call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %36) #11
  %524 = icmp eq %"class.blink::ExecutionContext"* %523, null
  %525 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %523, i64 0, i32 3
  %526 = icmp eq %"class.blink::UseCounter"* %525, null
  %527 = or i1 %524, %526
  br i1 %527, label %533, label %528

528:                                              ; preds = %522
  %529 = bitcast %"class.blink::UseCounter"* %525 to void (%"class.blink::UseCounter"*, i32)***
  %530 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %529, align 8
  %531 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %530, i64 3
  %532 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %531, align 8
  call void %532(%"class.blink::UseCounter"* nonnull %525, i32 2487) #11
  br label %533

533:                                              ; preds = %522, %528
  call void @_ZNK5blink11Performance22NotifyObserversOfEntryERNS_16PerformanceEntryE(%"class.blink::Performance"* %46, %"class.blink::PerformanceEntry"* dereferenceable(48) %208) #11
  br label %534

534:                                              ; preds = %533, %520
  %535 = icmp sgt i32 %214, 103
  br i1 %535, label %536, label %539

536:                                              ; preds = %534
  %537 = call zeroext i1 @_ZNK5blink11Performance23IsEventTimingBufferFullEv(%"class.blink::Performance"* %46) #11
  br i1 %537, label %539, label %538

538:                                              ; preds = %536
  call void @_ZN5blink11Performance20AddEventTimingBufferERNS_22PerformanceEventTimingE(%"class.blink::Performance"* %46, %"class.blink::PerformanceEventTiming"* dereferenceable(88) %181) #11
  br label %539

539:                                              ; preds = %519, %534, %536, %538
  %540 = icmp eq i8* %291, null
  br i1 %540, label %545, label %541

541:                                              ; preds = %539
  %542 = load i8, i8* %291, align 1
  %543 = icmp eq i8 %542, 0
  br i1 %543, label %545, label %544

544:                                              ; preds = %541
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %291, i8* %290, i64 %289) #11
  br label %545

545:                                              ; preds = %544, %541, %539
  %546 = load i32, i32* %30, align 8
  %547 = load i32, i32* %32, align 4
  %548 = icmp eq i32 %546, %547
  br i1 %548, label %549, label %175

549:                                              ; preds = %545, %175, %39, %35, %4
  ret void
}

declare %"class.blink::InteractiveDetector"* @_ZN5blink19InteractiveDetector4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #5

declare double @_ZNK5blink22PerformanceEventTiming15processingStartEv(%"class.blink::PerformanceEventTiming"*) local_unnamed_addr #1

declare double @_ZNK5blink22PerformanceEventTiming13processingEndEv(%"class.blink::PerformanceEventTiming"*) local_unnamed_addr #1

declare void @_ZN5blink22PerformanceEventTiming11SetDurationEd(%"class.blink::PerformanceEventTiming"*, double) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSK_yjySK_OT_SK_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::unique_ptr.2149"* dereferenceable(8), i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247241214, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.2149", %"class.std::__1::unique_ptr.2149"* %8, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %23, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TracedValue", %"class.blink::TracedValue"* %24, i64 0, i32 0
  %26 = bitcast %"union.base::trace_event::TraceValue"* %22 to %"class.base::trace_event::ConvertableToTraceFormat"**
  store %"class.base::trace_event::ConvertableToTraceFormat"* %25, %"class.base::trace_event::ConvertableToTraceFormat"** %26, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %28 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %35 = select i1 %31, i8* %33, i8* %34
  %36 = bitcast %"union.base::trace_event::TraceValue"* %27 to i8**
  store i8* %35, i8** %36, align 8
  %37 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #11
  %38 = load i8, i8* %18, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %74, label %40

40:                                               ; preds = %11, %69
  %41 = phi i64 [ %70, %69 ], [ 0, %11 ]
  %42 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 8
  br i1 %44, label %45, label %56

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %41
  %47 = bitcast %"union.base::trace_event::TraceValue"* %46 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %48 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %47, align 8
  %49 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %48, null
  br i1 %49, label %69, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %48 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %52 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %52, i64 1
  %54 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %53, align 8
  call void %54(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %48) #11
  %55 = load i8, i8* %42, align 1
  br label %56

56:                                               ; preds = %50, %40
  %57 = phi i8 [ %43, %40 ], [ %55, %50 ]
  %58 = icmp eq i8 %57, 9
  br i1 %58, label %59, label %69

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %41
  %61 = bitcast %"union.base::trace_event::TraceValue"* %60 to %"class.protozero::HeapBuffered"**
  %62 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %61, align 8
  %63 = icmp eq %"class.protozero::HeapBuffered"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %62, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %65) #11
  %66 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %62, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %66) #11
  %67 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %62, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %67) #11
  %68 = bitcast %"class.protozero::HeapBuffered"* %62 to i8*
  call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %64, %59, %56, %45
  %70 = add nuw nsw i64 %41, 1
  %71 = load i8, i8* %18, align 8
  %72 = zext i8 %71 to i64
  %73 = icmp ult i64 %70, %72
  br i1 %73, label %40, label %74

74:                                               ; preds = %69, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i64 %37
}

declare %"class.blink::TracedValue"* @_ZNK5blink22PerformanceEventTiming13ToTracedValueEv(%"class.blink::PerformanceEventTiming"*) local_unnamed_addr #1

declare void @_ZN5blink19InteractiveDetector25RecordInputEventTimingUKMEN4base9TimeDeltaES2_S2_N3WTF12AtomicStringE(%"class.blink::InteractiveDetector"*, i64, i64, i64, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.blink::PerformanceEventTiming"* @_ZN5blink22PerformanceEventTiming22CreateFirstInputTimingEPS0_(%"class.blink::PerformanceEventTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance24DispatchFirstInputTimingEPNS_22PerformanceEventTimingE(%"class.blink::WindowPerformance"*, %"class.blink::PerformanceEventTiming"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::PerformanceEventTiming"* %1, null
  br i1 %3, label %41, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink11Performance14HasObserverForENS_16PerformanceEntry9EntryTypeE(%"class.blink::Performance"* %5, i32 256) #11
  br i1 %6, label %7, label %32

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 2
  %9 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %8) #11
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 2487) #11
  br label %19

19:                                               ; preds = %7, %14
  %20 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %8) #11
  %21 = icmp eq %"class.blink::ExecutionContext"* %20, null
  %22 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %20, i64 0, i32 3
  %23 = icmp eq %"class.blink::UseCounter"* %22, null
  %24 = or i1 %21, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::UseCounter"* %22 to void (%"class.blink::UseCounter"*, i32)***
  %27 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %27, i64 3
  %29 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %28, align 8
  tail call void %29(%"class.blink::UseCounter"* nonnull %22, i32 3254) #11
  br label %30

30:                                               ; preds = %19, %25
  %31 = bitcast %"class.blink::PerformanceEventTiming"* %1 to %"class.blink::PerformanceEntry"*
  tail call void @_ZNK5blink11Performance22NotifyObserversOfEntryERNS_16PerformanceEntryE(%"class.blink::Performance"* %5, %"class.blink::PerformanceEntry"* nonnull dereferenceable(48) %31) #11
  br label %32

32:                                               ; preds = %30, %4
  %33 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0, i32 17
  %34 = ptrtoint %"class.blink::PerformanceEventTiming"* %1 to i64
  %35 = bitcast %"class.blink::Member.22"* %33 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::PerformanceEventTiming"* %1 to i8*
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %39) #11
  br label %41

41:                                               ; preds = %38, %32, %2
  ret void
}

declare zeroext i1 @_ZNK5blink11Performance14HasObserverForENS_16PerformanceEntry9EntryTypeE(%"class.blink::Performance"*, i32) local_unnamed_addr #1

declare void @_ZNK5blink11Performance22NotifyObserversOfEntryERNS_16PerformanceEntryE(%"class.blink::Performance"*, %"class.blink::PerformanceEntry"* dereferenceable(48)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink11Performance23IsEventTimingBufferFullEv(%"class.blink::Performance"*) local_unnamed_addr #1

declare void @_ZN5blink11Performance20AddEventTimingBufferERNS_22PerformanceEventTimingE(%"class.blink::Performance"*, %"class.blink::PerformanceEventTiming"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance16AddElementTimingERKN3WTF12AtomicStringERKNS1_6StringERKNS_9FloatRectEN4base9TimeTicksESC_S4_RKNS_7IntSizeES4_PNS_7ElementE(%"class.blink::WindowPerformance"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::FloatRect"* dereferenceable(16), i64, i64, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::IntSize"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %11 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %12 = tail call double @_ZNK5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksE(%"class.blink::Performance"* %11, i64 %4) #11
  %13 = tail call double @_ZNK5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksE(%"class.blink::Performance"* %11, i64 %5) #11
  %14 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %7, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = tail call %"class.blink::PerformanceElementTiming"* @_ZN5blink24PerformanceElementTiming6CreateERKN3WTF12AtomicStringERKNS1_6StringERKNS_9FloatRectEddS4_iiS4_PNS_7ElementE(%"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::FloatRect"* dereferenceable(16) %3, double %12, double %13, %"class.WTF::AtomicString"* dereferenceable(8) %6, i32 %15, i32 %17, %"class.WTF::AtomicString"* dereferenceable(8) %8, %"class.blink::Element"* %9) #11
  %19 = tail call zeroext i1 @_ZNK5blink11Performance14HasObserverForENS_16PerformanceEntry9EntryTypeE(%"class.blink::Performance"* %11, i32 512) #11
  br i1 %19, label %20, label %22

20:                                               ; preds = %10
  %21 = bitcast %"class.blink::PerformanceElementTiming"* %18 to %"class.blink::PerformanceEntry"*
  tail call void @_ZNK5blink11Performance22NotifyObserversOfEntryERNS_16PerformanceEntryE(%"class.blink::Performance"* %11, %"class.blink::PerformanceEntry"* dereferenceable(48) %21) #11
  br label %22

22:                                               ; preds = %20, %10
  %23 = tail call zeroext i1 @_ZNK5blink11Performance25IsElementTimingBufferFullEv(%"class.blink::Performance"* %11) #11
  br i1 %23, label %25, label %24

24:                                               ; preds = %22
  tail call void @_ZN5blink11Performance22AddElementTimingBufferERNS_24PerformanceElementTimingE(%"class.blink::Performance"* %11, %"class.blink::PerformanceElementTiming"* dereferenceable(112) %18) #11
  br label %25

25:                                               ; preds = %24, %22
  ret void
}

declare %"class.blink::PerformanceElementTiming"* @_ZN5blink24PerformanceElementTiming6CreateERKN3WTF12AtomicStringERKNS1_6StringERKNS_9FloatRectEddS4_iiS4_PNS_7ElementE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::FloatRect"* dereferenceable(16), double, double, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink11Performance25IsElementTimingBufferFullEv(%"class.blink::Performance"*) local_unnamed_addr #1

declare void @_ZN5blink11Performance22AddElementTimingBufferERNS_24PerformanceElementTimingE(%"class.blink::Performance"*, %"class.blink::PerformanceElementTiming"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance19AddLayoutShiftEntryEPNS_11LayoutShiftE(%"class.blink::WindowPerformance"*, %"class.blink::LayoutShift"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink11Performance14HasObserverForENS_16PerformanceEntry9EntryTypeE(%"class.blink::Performance"* %3, i32 1024) #11
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::LayoutShift"* %1 to %"class.blink::PerformanceEntry"*
  tail call void @_ZNK5blink11Performance22NotifyObserversOfEntryERNS_16PerformanceEntryE(%"class.blink::Performance"* %3, %"class.blink::PerformanceEntry"* dereferenceable(48) %6) #11
  br label %7

7:                                                ; preds = %5, %2
  tail call void @_ZN5blink11Performance20AddLayoutShiftBufferERNS_11LayoutShiftE(%"class.blink::Performance"* %3, %"class.blink::LayoutShift"* dereferenceable(128) %1) #11
  ret void
}

declare void @_ZN5blink11Performance20AddLayoutShiftBufferERNS_11LayoutShiftE(%"class.blink::Performance"*, %"class.blink::LayoutShift"* dereferenceable(128)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink21PageHiddenStateStringEb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance21PageVisibilityChangedEv(%"class.blink::WindowPerformance"*) unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_visibility_state_entry_enabled_E, align 1, !range !2
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %6 = load %"class.blink::Page"*, %"class.blink::Page"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink4Page13IsPageVisibleEv(%"class.blink::Page"* %6) #11
  %8 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  tail call void @_ZN5blink17WindowPerformance23AddVisibilityStateEntryEbN4base9TimeTicksE(%"class.blink::WindowPerformance"* %0, i1 zeroext %7, i64 %8)
  br label %9

9:                                                ; preds = %1, %4
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn696_N5blink17WindowPerformance21PageVisibilityChangedEv(%"class.blink::WindowPerformance"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 -1, i32 0, i32 9
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_visibility_state_entry_enabled_E, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::HeapVector.8"* %2 to %"class.blink::WindowPerformance"*
  %7 = getelementptr inbounds %"class.blink::HeapVector.8", %"class.blink::HeapVector.8"* %2, i64 44
  %8 = bitcast %"class.blink::HeapVector.8"* %7 to %"class.blink::Page"**
  %9 = load %"class.blink::Page"*, %"class.blink::Page"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5blink4Page13IsPageVisibleEv(%"class.blink::Page"* %9) #11
  %11 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  tail call void @_ZN5blink17WindowPerformance23AddVisibilityStateEntryEbN4base9TimeTicksE(%"class.blink::WindowPerformance"* %6, i1 zeroext %10, i64 %11) #11
  br label %12

12:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance31OnLargestContentfulPaintUpdatedEN4base9TimeTicksEmS2_RKN3WTF12AtomicStringERKNS3_6StringEPNS_7ElementE(%"class.blink::WindowPerformance"*, i64, i64, i64, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::TimeDelta", align 8
  %9 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 0
  %10 = tail call i64 @_ZNK5blink11Performance24MonotonicTimeToTimeDeltaEN4base9TimeTicksE(%"class.blink::Performance"* %9, i64 %1) #11
  %11 = tail call i64 @_ZNK5blink11Performance24MonotonicTimeToTimeDeltaEN4base9TimeTicksE(%"class.blink::Performance"* %9, i64 %3) #11
  %12 = bitcast %"class.base::TimeDelta"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  %14 = icmp eq i64 %10, 0
  %15 = select i1 %14, i64 %11, i64 %10
  store i64 %15, i64* %13, align 8
  %16 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %8) #11
  %17 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #11
  %18 = bitcast i8* %17 to %"class.blink::LargestContentfulPaint"*
  call void @_ZN5blink22LargestContentfulPaintC1EdN4base9TimeDeltaEmS2_RKN3WTF12AtomicStringERKNS3_6StringEPNS_7ElementE(%"class.blink::LargestContentfulPaint"* %18, double %16, i64 %10, i64 %2, i64 %11, %"class.WTF::AtomicString"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5, %"class.blink::Element"* %6) #11
  %19 = getelementptr inbounds i8, i8* %17, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = call zeroext i1 @_ZNK5blink11Performance14HasObserverForENS_16PerformanceEntry9EntryTypeE(%"class.blink::Performance"* %9, i32 2048) #11
  br i1 %23, label %24, label %26

24:                                               ; preds = %7
  %25 = bitcast i8* %17 to %"class.blink::PerformanceEntry"*
  call void @_ZNK5blink11Performance22NotifyObserversOfEntryERNS_16PerformanceEntryE(%"class.blink::Performance"* %9, %"class.blink::PerformanceEntry"* dereferenceable(48) %25) #11
  br label %26

26:                                               ; preds = %24, %7
  call void @_ZN5blink11Performance25AddLargestContentfulPaintEPNS_22LargestContentfulPaintE(%"class.blink::Performance"* %9, %"class.blink::LargestContentfulPaint"* %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  ret void
}

declare i64 @_ZNK5blink11Performance24MonotonicTimeToTimeDeltaEN4base9TimeTicksE(%"class.blink::Performance"*, i64) local_unnamed_addr #1

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare void @_ZN5blink11Performance25AddLargestContentfulPaintEPNS_22LargestContentfulPaintE(%"class.blink::Performance"*, %"class.blink::LargestContentfulPaint"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink17WindowPerformance15OnPaintFinishedEv(%"class.blink::WindowPerformance"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %2, align 8
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #11
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11Performance18GetWrapperTypeInfoEv(%"class.blink::Performance"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11Performance18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11Performance13InterfaceNameEv(%"class.blink::Performance"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.21, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.21, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

declare void @_ZNK5blink11Performance30measureUserAgentSpecificMemoryEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::Performance"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18PerformanceMonitor6Client16ReportLongLayoutEN4base9TimeDeltaE(%"class.blink::PerformanceMonitor::Client"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18PerformanceMonitor6Client22ReportGenericViolationENS0_9ViolationERKN3WTF6StringEN4base9TimeDeltaEPNS_14SourceLocationE(%"class.blink::PerformanceMonitor::Client"*, i64, %"class.WTF::String"* dereferenceable(8), i64, %"class.blink::SourceLocation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18PerformanceMonitor6Client14ReportLongTaskEN4base9TimeTicksES3_PNS_16ExecutionContextEb(%"class.blink::PerformanceMonitor::Client"*, i64, i64, %"class.blink::ExecutionContext"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEFvS5_S6_EE7RunOnceEPNS0_13BindStateBaseES5_OS6_(%"class.base::internal::BindStateBase"*, i32, %"class.base::TimeTicks"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = bitcast %"class.base::internal::BindStateBase"* %5 to { i64, i64 }*
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.std::__1::tuple"*
  call void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEFvS5_S6_EE7RunImplIS8_NSt3__15tupleIJSA_mEEEJLm0ELm1EEEEvOT_OT0_NSF_16integer_sequenceImJXspT1_EEEEOS5_OS6_({ i64, i64 }* dereferenceable(16) %6, %"class.std::__1::tuple"* dereferenceable(24) %8, i32* nonnull dereferenceable(4) %4, %"class.base::TimeTicks"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEFvS5_S6_EE7RunImplIS8_NSt3__15tupleIJSA_mEEEJLm0ELm1EEEEvOT_OT0_NSF_16integer_sequenceImJXspT1_EEEEOS5_OS6_({ i64, i64 }* dereferenceable(16), %"class.std::__1::tuple"* dereferenceable(24), i32* dereferenceable(4), %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.blink::CrossThreadPersistent", align 8
  %6 = bitcast %"class.blink::CrossThreadPersistent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #11, !alias.scope !35
  %8 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !35
  %9 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %8, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #11, !noalias !35
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %10, align 8, !noalias !35
  call void @_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2315"* nonnull %7, %"class.blink::WindowPerformance"* %11) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #11
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 0
  %14 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %13, align 8
  %15 = icmp eq %"class.blink::WindowPerformance"* %14, null
  br i1 %15, label %41, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.blink::WindowPerformance"* %14 to i8*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 %21
  %23 = bitcast i8* %22 to %"class.blink::WindowPerformance"*
  %24 = and i64 %19, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %16
  %27 = bitcast i8* %22 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = add i64 %19, -1
  %30 = getelementptr i8, i8* %28, i64 %29
  %31 = bitcast i8* %30 to void (%"class.blink::WindowPerformance"*, i64, i32, i64)**
  %32 = load void (%"class.blink::WindowPerformance"*, i64, i32, i64)*, void (%"class.blink::WindowPerformance"*, i64, i32, i64)** %31, align 8
  br label %35

33:                                               ; preds = %16
  %34 = inttoptr i64 %19 to void (%"class.blink::WindowPerformance"*, i64, i32, i64)*
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi void (%"class.blink::WindowPerformance"*, i64, i32, i64)* [ %32, %26 ], [ %34, %33 ]
  %37 = load i64, i64* %12, align 8
  %38 = load i32, i32* %2, align 4
  %39 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  call void %36(%"class.blink::WindowPerformance"* %23, i64 %37, i32 %38, i64 %40) #11
  br label %41

41:                                               ; preds = %4, %35
  %42 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 1
  %43 = bitcast %"class.blink::CrossThreadPersistentNodePtr.2316"* %42 to i64*
  %44 = load atomic i64, i64* %43 acquire, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %41
  %47 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %48 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %47, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %48) #11
  %49 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %50 = load atomic i64, i64* %43 monotonic, align 8
  %51 = inttoptr i64 %50 to %"class.blink::PersistentNode"*
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %49, i64 0, i32 0, i32 0
  %55 = bitcast %"class.blink::CrossThreadPersistentRegion"* %49 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = inttoptr i64 %50 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %51, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %58, align 8
  store %"class.blink::PersistentNode"* %51, %"class.blink::PersistentNode"** %54, align 8
  br label %59

59:                                               ; preds = %53, %46
  store atomic i64 0, i64* %43 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %48) #11
  br label %60

60:                                               ; preds = %41, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2315"*, %"class.blink::WindowPerformance"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.2315", %"class.blink::PersistentBase.2315"* %0, i64 0, i32 0
  store %"class.blink::WindowPerformance"* %1, %"class.blink::WindowPerformance"** %3, align 8
  %4 = ptrtoint %"class.blink::WindowPerformance"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.2315", %"class.blink::PersistentBase.2315"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr.2316"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.2315"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #11
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.2315"**
  store %"class.blink::PersistentBase.2315"* %0, %"class.blink::PersistentBase.2315"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.2315", %"class.blink::PersistentBase.2315"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr.2316"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::WindowPerformance"**
  %5 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::WindowPerformance"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::WindowPerformance"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17WindowPerformanceEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17WindowPerformanceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WindowPerformance"*
  tail call void @_ZNK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"* %3, %"class.blink::Visitor"* %0)
  ret void
}

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink17WindowPerformanceEFvmNS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EEmEEC2IS7_JS9_mEEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadWeakPersistent"* dereferenceable(16), i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %6, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink17WindowPerformanceEFvmNS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EEmEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE) #11
  %7 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::tuple"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #11
  %14 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %15 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %14, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #11
  %16 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %16 to i64*
  %18 = load atomic i64, i64* %17 acquire, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %5
  %21 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %22 = load atomic i64, i64* %17 monotonic, align 8
  %23 = inttoptr i64 %22 to %"class.blink::PersistentNode"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %21, i64 0, i32 0, i32 0
  %27 = bitcast %"class.blink::CrossThreadPersistentRegion"* %21 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %22 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %30, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %26, align 8
  br label %31

31:                                               ; preds = %25, %20
  store atomic i64 0, i64* %17 release, align 8
  br label %32

32:                                               ; preds = %31, %5
  %33 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %3, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::CrossThreadWeakPersistent"* %3 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::tuple"* %11 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.blink::WindowPerformance"* null, %"class.blink::WindowPerformance"** %33, align 8
  %37 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %3, i64 0, i32 0, i32 1
  %38 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %37 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  store atomic i64 %39, i64* %17 monotonic, align 8
  store atomic i64 0, i64* %38 monotonic, align 8
  %40 = load atomic i64, i64* %17 acquire, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %32
  %43 = load atomic i64, i64* %17 monotonic, align 8
  %44 = inttoptr i64 %43 to %"class.blink::PersistentNode"*
  %45 = inttoptr i64 %43 to %"class.blink::PersistentBase.2110"**
  store %"class.blink::PersistentBase.2110"* %12, %"class.blink::PersistentBase.2110"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  br label %47

47:                                               ; preds = %32, %42
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #11
  %48 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %49 = load i64, i64* %4, align 8
  store i64 %49, i64* %48, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink17WindowPerformanceEFvmNS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EEmEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #11
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #11
  br label %22

22:                                               ; preds = %3, %21
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::WindowPerformance"**
  %6 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %5, align 8
  %7 = icmp eq %"class.blink::WindowPerformance"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #11
  ret void
}

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WindowPerformance"**
  %4 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %3, align 8
  %5 = icmp eq %"class.blink::WindowPerformance"* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::WindowPerformance", %"class.blink::WindowPerformance"* %4, i64 -1, i32 15, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %union.anon* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %18
  store %"class.blink::WindowPerformance"* null, %"class.blink::WindowPerformance"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %28 = bitcast i8* %26 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = inttoptr i64 %29 to %"class.blink::PersistentNode"*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %27, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::CrossThreadPersistentRegion"* %27 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = inttoptr i64 %29 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %33, align 8
  br label %38

38:                                               ; preds = %25, %32
  store atomic i64 0, i64* %28 release, align 8
  br label %39

39:                                               ; preds = %18, %13, %2, %38
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.2110"*, %"class.blink::WindowPerformance"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.2110", %"class.blink::PersistentBase.2110"* %0, i64 0, i32 0
  store %"class.blink::WindowPerformance"* %1, %"class.blink::WindowPerformance"** %3, align 8
  %4 = ptrtoint %"class.blink::WindowPerformance"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.2110", %"class.blink::PersistentBase.2110"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.2110"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #11
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.2110"**
  store %"class.blink::PersistentBase.2110"* %0, %"class.blink::PersistentBase.2110"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.2110", %"class.blink::PersistentBase.2110"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN5blink5Frame12ToTraceValueEv(%"class.blink::Frame"*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink17PerformanceTimingC1EPNS_16ExecutionContextE(%"class.blink::PerformanceTiming"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink21PerformanceNavigationC1EPNS_16ExecutionContextE(%"class.blink::PerformanceNavigation"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

declare void @_ZN5blink10MemoryInfoC1ENS0_9PrecisionE(%"class.blink::MemoryInfo"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PerformanceNavigationTiming"* @_ZN5blink25MakeGarbageCollectedTraitINS_27PerformanceNavigationTimingEE4CallIJPNS_14LocalDOMWindowERPNS_18ResourceTimingInfoERN4base9TimeTicksEbNS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEEEEEPS1_DpOT_(%"class.blink::LocalDOMWindow"** dereferenceable(8), %"class.blink::ResourceTimingInfo"** dereferenceable(8), %"class.base::TimeTicks"* dereferenceable(8), i8* dereferenceable(1), %"class.blink::HeapVector.2073"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.blink::HeapVector.2073", align 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 224) #11
  %8 = bitcast i8* %7 to %"class.blink::PerformanceNavigationTiming"*
  %9 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %0, align 8
  %10 = load %"class.blink::ResourceTimingInfo"*, %"class.blink::ResourceTimingInfo"** %1, align 8
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i8, i8* %3, align 1, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %"class.blink::HeapVector.2073", %"class.blink::HeapVector.2073"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::HeapVector.2073", %"class.blink::HeapVector.2073"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = bitcast %"class.blink::HeapVector.2073"* %4 to i64*
  %18 = bitcast %"class.blink::HeapVector.2073"* %6 to i64*
  store i64 0, i64* %18, align 8
  %19 = load i64, i64* %17, align 8
  %20 = bitcast %"class.blink::HeapVector.2073"* %6 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.blink::HeapVector.2073", %"class.blink::HeapVector.2073"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %15, align 8
  store i32 0, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::HeapVector.2073", %"class.blink::HeapVector.2073"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %16, align 4
  store i32 0, i32* %23, align 4
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %5
  %28 = inttoptr i64 %19 to i8*
  %29 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %28) #11
  br label %30

30:                                               ; preds = %27, %5
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.blink::HeapVector.2073"* %4 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #11
  br label %37

37:                                               ; preds = %30, %33
  call void @_ZN5blink27PerformanceNavigationTimingC1EPNS_14LocalDOMWindowEPNS_18ResourceTimingInfoEN4base9TimeTicksEbNS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEE(%"class.blink::PerformanceNavigationTiming"* %8, %"class.blink::LocalDOMWindow"* %9, %"class.blink::ResourceTimingInfo"* %10, i64 %12, i1 zeroext %14, %"class.blink::HeapVector.2073"* nonnull %6) #11
  %38 = getelementptr inbounds i8, i8* %7, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  ret %"class.blink::PerformanceNavigationTiming"* %8
}

declare void @_ZN5blink27PerformanceNavigationTimingC1EPNS_14LocalDOMWindowEPNS_18ResourceTimingInfoEN4base9TimeTicksEbNS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEE(%"class.blink::PerformanceNavigationTiming"*, %"class.blink::LocalDOMWindow"*, %"class.blink::ResourceTimingInfo"*, i64, i1 zeroext, %"class.blink::HeapVector.2073"*) unnamed_addr #1

declare void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #11
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #11
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #11
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #11
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.1047", %"class.WTF::HashMap.1047"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.1050"*, %"struct.WTF::KeyValuePair.1050"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.1048"* %47, %"class.blink::ScriptWrappable"* %0) #11
  %49 = extractvalue { %"struct.WTF::KeyValuePair.1050"*, %"struct.WTF::KeyValuePair.1050"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.1047", %"class.WTF::HashMap.1047"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.1050"*, %"struct.WTF::KeyValuePair.1050"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1050", %"struct.WTF::KeyValuePair.1050"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.1050"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1050", %"struct.WTF::KeyValuePair.1050"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #11
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.24, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.24, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i64 0, i64 0)) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1050"*, %"struct.WTF::KeyValuePair.1050"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.1048"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.1048", %"class.WTF::HashTable.1048"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1050"*, %"struct.WTF::KeyValuePair.1050"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1050"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.1048", %"class.WTF::HashTable.1048"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1050", %"struct.WTF::KeyValuePair.1050"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1050", %"struct.WTF::KeyValuePair.1050"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1050", %"struct.WTF::KeyValuePair.1050"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1050", %"struct.WTF::KeyValuePair.1050"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1050", %"struct.WTF::KeyValuePair.1050"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.1050"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.1050"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1050", %"struct.WTF::KeyValuePair.1050"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1050", %"struct.WTF::KeyValuePair.1050"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.1050"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.1050"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1050"*, %"struct.WTF::KeyValuePair.1050"* } undef, %"struct.WTF::KeyValuePair.1050"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.1050"*, %"struct.WTF::KeyValuePair.1050"* } %78, %"struct.WTF::KeyValuePair.1050"* %77, 1
  ret { %"struct.WTF::KeyValuePair.1050"*, %"struct.WTF::KeyValuePair.1050"* } %79
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.22"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.22"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22PerformanceEventTimingEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22PerformanceEventTimingEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PerformanceEventTiming"*
  tail call void @_ZNK5blink22PerformanceEventTiming5TraceEPNS_7VisitorE(%"class.blink::PerformanceEventTiming"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink22PerformanceEventTiming5TraceEPNS_7VisitorE(%"class.blink::PerformanceEventTiming"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11EventCountsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21PerformanceNavigationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PerformanceNavigation"*
  tail call void @_ZNK5blink21PerformanceNavigation5TraceEPNS_7VisitorE(%"class.blink::PerformanceNavigation"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink21PerformanceNavigation5TraceEPNS_7VisitorE(%"class.blink::PerformanceNavigation"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17PerformanceTimingEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PerformanceTiming"*
  tail call void @_ZNK5blink17PerformanceTiming5TraceEPNS_7VisitorE(%"class.blink::PerformanceTiming"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink17PerformanceTiming5TraceEPNS_7VisitorE(%"class.blink::PerformanceTiming"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink6MemberINS1_22PerformanceEventTimingEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.56"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.56", %"class.WTF::Deque.56"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.56", %"class.WTF::Deque.56"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member.22"*, %"class.blink::Member.22"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_22PerformanceEventTimingEEEEEmm(i64 %11) #11
  %13 = load %"class.blink::Member.22"*, %"class.blink::Member.22"** %4, align 8
  %14 = icmp eq %"class.blink::Member.22"* %13, null
  br i1 %14, label %104, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::Member.22"* %13 to i8*
  %17 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %16, i64 %12) #11
  br i1 %17, label %18, label %104

18:                                               ; preds = %15
  %19 = lshr i64 %12, 3
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %2, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.56", %"class.WTF::Deque.56"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Deque.56", %"class.WTF::Deque.56"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %22, %24
  br i1 %25, label %26, label %245

26:                                               ; preds = %18
  %27 = sub i32 %22, %3
  %28 = add i32 %27, %20
  %29 = zext i32 %22 to i64
  %30 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %29
  %31 = zext i32 %3 to i64
  %32 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %31
  %33 = load %"class.blink::Member.22"*, %"class.blink::Member.22"** %4, align 8
  %34 = zext i32 %28 to i64
  %35 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %33, i64 %34
  %36 = icmp ne %"class.blink::Member.22"* %35, null
  %37 = icmp ne %"class.blink::Member.22"* %30, null
  %38 = and i1 %37, %36
  br i1 %38, label %39, label %92, !prof !31

39:                                               ; preds = %26
  %40 = icmp eq %"class.blink::Member.22"* %30, %35
  br i1 %40, label %72, label %41

41:                                               ; preds = %39
  %42 = icmp ult %"class.blink::Member.22"* %35, %30
  br i1 %42, label %43, label %54

43:                                               ; preds = %41
  %44 = icmp ult i32 %22, %3
  br i1 %44, label %45, label %72

45:                                               ; preds = %43, %45
  %46 = phi %"class.blink::Member.22"* [ %52, %45 ], [ %35, %43 ]
  %47 = phi %"class.blink::Member.22"* [ %51, %45 ], [ %30, %43 ]
  %48 = bitcast %"class.blink::Member.22"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member.22"* %46 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %47, i64 1
  %52 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %46, i64 1
  %53 = icmp ult %"class.blink::Member.22"* %51, %32
  br i1 %53, label %45, label %72

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %32, i64 -1
  %56 = icmp ult %"class.blink::Member.22"* %55, %30
  br i1 %56, label %72, label %57

57:                                               ; preds = %54
  %58 = ptrtoint %"class.blink::Member.22"* %55 to i64
  %59 = ptrtoint %"class.blink::Member.22"* %30 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %35, i64 %61
  br label %63

63:                                               ; preds = %63, %57
  %64 = phi %"class.blink::Member.22"* [ %70, %63 ], [ %62, %57 ]
  %65 = phi %"class.blink::Member.22"* [ %69, %63 ], [ %55, %57 ]
  %66 = bitcast %"class.blink::Member.22"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::Member.22"* %64 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %65, i64 -1
  %70 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %64, i64 -1
  %71 = icmp ult %"class.blink::Member.22"* %69, %30
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %45, %54, %43, %39
  %73 = ptrtoint %"class.blink::Member.22"* %32 to i64
  %74 = ptrtoint %"class.blink::Member.22"* %30 to i64
  %75 = sub i64 %73, %74
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %72
  %78 = ashr exact i64 %75, 3
  br label %79

79:                                               ; preds = %89, %77
  %80 = phi i64 [ %82, %89 ], [ %78, %77 ]
  %81 = phi %"class.blink::Member.22"* [ %90, %89 ], [ %35, %77 ]
  %82 = add i64 %80, -1
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.blink::Member.22"* %81 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %87) #11
  br label %89

89:                                               ; preds = %85, %79
  %90 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %81, i64 1
  %91 = icmp eq i64 %82, 0
  br i1 %91, label %92, label %79

92:                                               ; preds = %89, %26, %72
  %93 = load i32, i32* %21, align 8
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %94
  %96 = icmp ult i32 %28, %3
  %97 = select i1 %96, i32 %28, i32 %3
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %98
  %100 = bitcast %"class.blink::Member.22"* %95 to i8*
  %101 = ptrtoint %"class.blink::Member.22"* %99 to i64
  %102 = ptrtoint %"class.blink::Member.22"* %95 to i64
  %103 = sub i64 %101, %102
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %100, i64 %103) #11
  store i32 %28, i32* %21, align 8
  br label %245

104:                                              ; preds = %1, %15
  %105 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_22PerformanceEventTimingEEEEEmm(i64 %11) #11
  %106 = lshr i64 %105, 3
  %107 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %106) #11
  %108 = ptrtoint %"class.blink::HeapVectorBacking"* %107 to i64
  %109 = bitcast %"class.WTF::Deque.56"* %0 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = trunc i64 %106 to i32
  store i32 %110, i32* %2, align 8
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %107, i64 0, i32 0
  %115 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #11
  br label %116

116:                                              ; preds = %104, %113
  %117 = getelementptr inbounds %"class.WTF::Deque.56", %"class.WTF::Deque.56"* %0, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %"class.WTF::Deque.56", %"class.WTF::Deque.56"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp ugt i32 %118, %120
  br i1 %121, label %166, label %122

122:                                              ; preds = %116
  %123 = zext i32 %118 to i64
  %124 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %123
  %125 = load %"class.blink::Member.22"*, %"class.blink::Member.22"** %4, align 8
  %126 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %125, i64 %123
  %127 = icmp ne %"class.blink::Member.22"* %126, null
  %128 = icmp ne %"class.blink::Member.22"* %124, null
  %129 = and i1 %128, %127
  br i1 %129, label %130, label %154, !prof !31

130:                                              ; preds = %122
  %131 = zext i32 %120 to i64
  %132 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %131
  %133 = bitcast %"class.blink::Member.22"* %124 to i8*
  %134 = ptrtoint %"class.blink::Member.22"* %132 to i64
  %135 = ptrtoint %"class.blink::Member.22"* %124 to i64
  %136 = sub i64 %134, %135
  %137 = bitcast %"class.blink::Member.22"* %126 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %137, i8* nonnull %133, i64 %136) #11
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %154, label %139

139:                                              ; preds = %130
  %140 = ashr exact i64 %136, 3
  br label %141

141:                                              ; preds = %151, %139
  %142 = phi i64 [ %144, %151 ], [ %140, %139 ]
  %143 = phi %"class.blink::Member.22"* [ %152, %151 ], [ %126, %139 ]
  %144 = add i64 %142, -1
  %145 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = bitcast %"class.blink::Member.22"* %143 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #11
  br label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %143, i64 1
  %153 = icmp eq i64 %144, 0
  br i1 %153, label %154, label %141

154:                                              ; preds = %151, %122, %130
  %155 = load i32, i32* %117, align 8
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %156
  %158 = load i32, i32* %119, align 4
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %159
  %161 = bitcast %"class.blink::Member.22"* %157 to i8*
  %162 = ptrtoint %"class.blink::Member.22"* %160 to i64
  %163 = ptrtoint %"class.blink::Member.22"* %157 to i64
  %164 = sub i64 %162, %163
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %161, i64 %164) #11
  %165 = bitcast %"class.blink::Member.22"* %5 to i8*
  br label %243

166:                                              ; preds = %116
  %167 = load %"class.blink::Member.22"*, %"class.blink::Member.22"** %4, align 8
  %168 = icmp ne %"class.blink::Member.22"* %167, null
  %169 = icmp ne %"class.blink::Member.22"* %5, null
  %170 = and i1 %169, %168
  br i1 %170, label %173, label %171, !prof !31

171:                                              ; preds = %166
  %172 = bitcast %"class.blink::Member.22"* %5 to i8*
  br label %192

173:                                              ; preds = %166
  %174 = zext i32 %120 to i64
  %175 = bitcast %"class.blink::Member.22"* %5 to i8*
  %176 = shl nuw nsw i64 %174, 3
  %177 = bitcast %"class.blink::Member.22"* %167 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %177, i8* nonnull %175, i64 %176) #11
  %178 = icmp eq i32 %120, 0
  br i1 %178, label %192, label %179

179:                                              ; preds = %173, %189
  %180 = phi i64 [ %182, %189 ], [ %174, %173 ]
  %181 = phi %"class.blink::Member.22"* [ %190, %189 ], [ %167, %173 ]
  %182 = add nsw i64 %180, -1
  %183 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = bitcast %"class.blink::Member.22"* %181 to i8**
  %187 = load i8*, i8** %186, align 8
  %188 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %187) #11
  br label %189

189:                                              ; preds = %185, %179
  %190 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %181, i64 1
  %191 = icmp eq i64 %182, 0
  br i1 %191, label %192, label %179

192:                                              ; preds = %189, %171, %173
  %193 = phi i8* [ %172, %171 ], [ %175, %173 ], [ %175, %189 ]
  %194 = load i32, i32* %119, align 4
  %195 = zext i32 %194 to i64
  %196 = shl nuw nsw i64 %195, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %193, i64 %196) #11
  %197 = load i32, i32* %2, align 8
  %198 = load i32, i32* %117, align 8
  %199 = sub i32 %198, %3
  %200 = add i32 %199, %197
  %201 = zext i32 %198 to i64
  %202 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %201
  %203 = zext i32 %3 to i64
  %204 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %203
  %205 = load %"class.blink::Member.22"*, %"class.blink::Member.22"** %4, align 8
  %206 = zext i32 %200 to i64
  %207 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %205, i64 %206
  %208 = icmp ne %"class.blink::Member.22"* %207, null
  %209 = icmp ne %"class.blink::Member.22"* %202, null
  %210 = and i1 %209, %208
  br i1 %210, label %213, label %211, !prof !31

211:                                              ; preds = %192
  %212 = ptrtoint %"class.blink::Member.22"* %204 to i64
  br label %235

213:                                              ; preds = %192
  %214 = bitcast %"class.blink::Member.22"* %202 to i8*
  %215 = ptrtoint %"class.blink::Member.22"* %204 to i64
  %216 = ptrtoint %"class.blink::Member.22"* %202 to i64
  %217 = sub i64 %215, %216
  %218 = bitcast %"class.blink::Member.22"* %207 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %218, i8* nonnull %214, i64 %217) #11
  %219 = icmp eq i64 %217, 0
  br i1 %219, label %235, label %220

220:                                              ; preds = %213
  %221 = ashr exact i64 %217, 3
  br label %222

222:                                              ; preds = %232, %220
  %223 = phi i64 [ %225, %232 ], [ %221, %220 ]
  %224 = phi %"class.blink::Member.22"* [ %233, %232 ], [ %207, %220 ]
  %225 = add i64 %223, -1
  %226 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %232, label %228

228:                                              ; preds = %222
  %229 = bitcast %"class.blink::Member.22"* %224 to i8**
  %230 = load i8*, i8** %229, align 8
  %231 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %230) #11
  br label %232

232:                                              ; preds = %228, %222
  %233 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %224, i64 1
  %234 = icmp eq i64 %225, 0
  br i1 %234, label %235, label %222

235:                                              ; preds = %232, %211, %213
  %236 = phi i64 [ %212, %211 ], [ %215, %213 ], [ %215, %232 ]
  %237 = load i32, i32* %117, align 8
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.blink::Member.22", %"class.blink::Member.22"* %5, i64 %238
  %240 = bitcast %"class.blink::Member.22"* %239 to i8*
  %241 = ptrtoint %"class.blink::Member.22"* %239 to i64
  %242 = sub i64 %236, %241
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %240, i64 %242) #11
  store i32 %200, i32* %117, align 8
  br label %243

243:                                              ; preds = %235, %154
  %244 = phi i8* [ %193, %235 ], [ %165, %154 ]
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %244) #11
  br label %245

245:                                              ; preds = %92, %18, %243
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_22PerformanceEventTimingEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.33, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.35, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_22PerformanceEventTimingEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_22PerformanceEventTimingEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i8 1 }
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeImLj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.60"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.60", %"class.WTF::Deque.60"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.60", %"class.WTF::Deque.60"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %11) #11
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %11) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque.60"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque.60", %"class.WTF::Deque.60"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.60", %"class.WTF::Deque.60"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to i64*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds i64, i64* %5, i64 %26
  %28 = getelementptr inbounds i64, i64* %24, i64 %26
  %29 = icmp ne i64* %28, null
  %30 = icmp ne i64* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !31

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds i64, i64* %5, i64 %33
  %35 = bitcast i64* %27 to i8*
  %36 = ptrtoint i64* %34 to i64
  %37 = ptrtoint i64* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast i64* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #11
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne i64* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !31

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast i64* %5 to i8*
  %47 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #11
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load i64*, i64** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi i64* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds i64, i64* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds i64, i64* %52, i64 %59
  %61 = icmp ne i64* %60, null
  %62 = icmp ne i64* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !31

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds i64, i64* %5, i64 %65
  %67 = bitcast i64* %58 to i8*
  %68 = ptrtoint i64* %66 to i64
  %69 = ptrtoint i64* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #11
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast i64* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.37, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #12

declare void @_ZN5blink20VisibilityStateEntryC1EN3WTF12AtomicStringEd(%"class.blink::VisibilityStateEntry"*, %"class.WTF::StringImpl"*, double) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_20VisibilityStateEntryEEEvOT_(%"class.WTF::Vector.11"*, %"class.blink::VisibilityStateEntry"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.11"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %16, i64 %18
  %20 = bitcast %"class.blink::VisibilityStateEntry"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.14"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.11"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %8, align 8
  %10 = icmp eq %"class.blink::Member.14"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2391"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2391"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2391", %"class.blink::HeapVectorBacking.2391"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %8, align 8
  %26 = icmp eq %"class.blink::Member.14"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.14"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.38, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.11"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.11"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.11"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2391"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2391"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2391"* %17, null
  %23 = icmp ne %"class.blink::Member.14"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.14"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !31

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.11"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2391", %"class.blink::HeapVectorBacking.2391"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.11"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2391", %"class.blink::HeapVectorBacking.2391"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.33, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2391"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.35, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2391"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2391"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16PerformanceEntryEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.14"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.14"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZN5blink11EventCountsC1Ev(%"class.blink::EventCounts"*) unnamed_addr #1

declare void @_ZN5blink22LargestContentfulPaintC1EdN4base9TimeDeltaEmS2_RKN3WTF12AtomicStringERKNS3_6StringEPNS_7ElementE(%"class.blink::LargestContentfulPaint"*, double, i64, i64, i64, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__19make_pairIRKN3WTF12AtomicStringEDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__19make_pairIRKN3WTF12AtomicStringEDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__19make_pairIRKN3WTF12AtomicStringEDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__19make_pairIRKN3WTF12AtomicStringEDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__19make_pairIRKN3WTF12AtomicStringEDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__19make_pairIRKN3WTF12AtomicStringEDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__19make_pairIRKN3WTF12AtomicStringEDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__19make_pairIRKN3WTF12AtomicStringEDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink29WrapCrossThreadWeakPersistentINS_17WindowPerformanceEEENS_25CrossThreadWeakPersistentIT_EEPS3_: argument 0"}
!19 = distinct !{!19, !"_ZN5blink29WrapCrossThreadWeakPersistentINS_17WindowPerformanceEEENS_25CrossThreadWeakPersistentIT_EEPS3_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink25CrossThreadWeakPersistentINS1_17WindowPerformanceEEEE4CopyERKS4_: argument 0"}
!22 = distinct !{!22, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink25CrossThreadWeakPersistentINS1_17WindowPerformanceEEEE4CopyERKS4_"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17WindowPerformanceEFvmNS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EEmEEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base8BindOnceIMN5blink17WindowPerformanceEFvmNS1_13WebSwapResultENS_9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EEmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8BindOnceIMN5blink17WindowPerformanceEFvmNS1_13WebSwapResultENS_9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EEmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvN5blink13WebSwapResultEN4base9TimeTicksEEEEDaNS4_12OnceCallbackIT_EE: argument 0"}
!30 = distinct !{!30, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvN5blink13WebSwapResultEN4base9TimeTicksEEEEDaNS4_12OnceCallbackIT_EE"}
!31 = !{!"branch_weights", i32 2000, i32 1}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blinkL12ToTraceValueEPNS_5FrameE: argument 0"}
!34 = distinct !{!34, !"_ZN5blinkL12ToTraceValueEPNS_5FrameE"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4base16BindUnwrapTraitsIN5blink25CrossThreadWeakPersistentINS1_17WindowPerformanceEEEE6UnwrapERKS4_: argument 0"}
!37 = distinct !{!37, !"_ZN4base16BindUnwrapTraitsIN5blink25CrossThreadWeakPersistentINS1_17WindowPerformanceEEEE6UnwrapERKS4_"}
!38 = distinct !{!38, !39, !"_ZN4base8internal6UnwrapIN5blink25CrossThreadWeakPersistentINS2_17WindowPerformanceEEEEEDcOT_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8internal6UnwrapIN5blink25CrossThreadWeakPersistentINS2_17WindowPerformanceEEEEEDcOT_"}
