; ModuleID = '../../native_client/src/trusted/service_runtime/nacl_copy.c'
source_filename = "../../native_client/src/trusted/service_runtime/nacl_copy.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClAppThread = type opaque
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type opaque
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque

@.str = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"../../native_client/src/trusted/service_runtime/nacl_copy.c\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"dst_buffer_bytes > 0\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCopyInFromUser(%struct.NaClApp* nocapture readonly, i8* nocapture, i64, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = add i64 %3, %2
  %8 = icmp ult i64 %7, %2
  br i1 %8, label %22, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = zext i8 %11 to i64
  %13 = shl i64 1, %12
  %14 = icmp ult i64 %13, %7
  br i1 %14, label %22, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %2
  %19 = icmp eq i64 %18, -1
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = inttoptr i64 %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %21, i64 %3, i1 false)
  br label %22

22:                                               ; preds = %9, %6, %4, %15, %20
  %23 = phi i32 [ 1, %20 ], [ 0, %15 ], [ 0, %4 ], [ 0, %6 ], [ 0, %9 ]
  ret i32 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCopyInFromUserAndDropLock(%struct.NaClApp* nocapture readonly, i8* nocapture, i64, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = add i64 %3, %2
  %8 = icmp ult i64 %7, %2
  br i1 %8, label %22, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = zext i8 %11 to i64
  %13 = shl i64 1, %12
  %14 = icmp ult i64 %13, %7
  br i1 %14, label %22, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %2
  %19 = icmp eq i64 %18, -1
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = inttoptr i64 %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %21, i64 %3, i1 false)
  br label %22

22:                                               ; preds = %9, %6, %4, %15, %20
  %23 = phi i32 [ 1, %20 ], [ 0, %15 ], [ 0, %4 ], [ 0, %6 ], [ 0, %9 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCopyInFromUserZStr(%struct.NaClApp* nocapture readonly, i8*, i64, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %7

7:                                                ; preds = %4, %6
  %8 = icmp eq i64 %3, 0
  br i1 %8, label %28, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = zext i8 %11 to i64
  %13 = lshr i64 %3, %12
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %3
  %19 = icmp eq i64 %18, -1
  br i1 %19, label %28, label %20

20:                                               ; preds = %15
  %21 = inttoptr i64 %18 to i8*
  %22 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %1, i1 false, i1 true, i1 false) #5
  %23 = tail call i8* @__strncpy_chk(i8* %1, i8* %21, i64 %2, i64 %22) #5
  %24 = add i64 %2, -1
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %20, %15, %9, %7
  %29 = phi i8* [ %1, %7 ], [ %1, %9 ], [ %1, %15 ], [ %25, %20 ]
  store i8 0, i8* %29, align 1
  br label %30

30:                                               ; preds = %28, %20
  %31 = phi i32 [ 1, %20 ], [ 0, %28 ]
  ret i32 %31
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClCopyOutToUser(%struct.NaClApp* nocapture readonly, i64, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = add i64 %3, %1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %22, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = zext i8 %11 to i64
  %13 = shl i64 1, %12
  %14 = icmp ult i64 %13, %7
  br i1 %14, label %22, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %1
  %19 = icmp eq i64 %18, -1
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = inttoptr i64 %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %2, i64 %3, i1 false)
  br label %22

22:                                               ; preds = %9, %6, %4, %15, %20
  %23 = phi i32 [ 1, %20 ], [ 0, %15 ], [ 0, %4 ], [ 0, %6 ], [ 0, %9 ]
  ret i32 %23
}

; Function Attrs: nofree nounwind
declare i8* @__strncpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
