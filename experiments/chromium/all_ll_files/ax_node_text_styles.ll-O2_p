; ModuleID = '../../ui/accessibility/ax_node_text_styles.cc'
source_filename = "../../ui/accessibility/ax_node_text_styles.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.ui::AXNodeTextStyles" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN2ui16AXNodeTextStylesC1Ev = hidden unnamed_addr alias void (%"struct.ui::AXNodeTextStyles"*), void (%"struct.ui::AXNodeTextStyles"*)* @_ZN2ui16AXNodeTextStylesC2Ev
@_ZN2ui16AXNodeTextStylesC1EOS0_ = hidden unnamed_addr alias void (%"struct.ui::AXNodeTextStyles"*, %"struct.ui::AXNodeTextStyles"*), void (%"struct.ui::AXNodeTextStyles"*, %"struct.ui::AXNodeTextStyles"*)* @_ZN2ui16AXNodeTextStylesC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui16AXNodeTextStylesC2Ev(%"struct.ui::AXNodeTextStyles"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 9
  %3 = bitcast %"struct.ui::AXNodeTextStyles"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -1, i64 36, i1 false)
  store float -1.000000e+00, float* %2, align 4
  %4 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 10
  store float -1.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 11
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui16AXNodeTextStylesC2EOS0_(%"struct.ui::AXNodeTextStyles"* nocapture, %"struct.ui::AXNodeTextStyles"* nocapture dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 6
  %22 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 7
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %24, align 4
  %27 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 8
  %28 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 8
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %27, align 8
  %30 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 9
  %31 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 9
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = bitcast float* %30 to i32*
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 10
  %36 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 10
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 8
  %39 = bitcast float* %35 to i32*
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 11
  %41 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 11
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.ui::AXNodeTextStyles"* @_ZN2ui16AXNodeTextStylesaSEOS0_(%"struct.ui::AXNodeTextStyles"* returned, %"struct.ui::AXNodeTextStyles"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 2
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 3
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 4
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 5
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 6
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 7
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 7
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 8
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 8
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 9
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 9
  %34 = bitcast float* %33 to i32*
  store i32 %32, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 10
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 10
  %39 = bitcast float* %38 to i32*
  store i32 %37, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 11
  %41 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 11
  %42 = icmp eq %"struct.ui::AXNodeTextStyles"* %0, %1
  br i1 %42, label %72, label %43

43:                                               ; preds = %2
  %44 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %47, label %62, label %52

52:                                               ; preds = %43
  br i1 %51, label %56, label %53

53:                                               ; preds = %52
  %54 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #6
  br label %72

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %41, i8* %58, i64 %60) #6
  br label %72

62:                                               ; preds = %43
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %68 = zext i8 %50 to i64
  %69 = select i1 %51, i8* %64, i8* %67
  %70 = select i1 %51, i64 %66, i64 %68
  %71 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %41, i8* %69, i64 %70) #6
  br label %72

72:                                               ; preds = %2, %53, %56, %62
  ret %"struct.ui::AXNodeTextStyles"* %0
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui16AXNodeTextStyleseqERKS0_(%"struct.ui::AXNodeTextStyles"* nocapture readonly, %"struct.ui::AXNodeTextStyles"* nocapture readonly dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %120

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %120

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %120

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %120

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %120

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %120

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %120

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 9
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 9
  %48 = load float, float* %47, align 4
  %49 = fcmp oeq float %46, %48
  br i1 %49, label %50, label %120

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 10
  %52 = load float, float* %51, align 8
  %53 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 10
  %54 = load float, float* %53, align 8
  %55 = fcmp oeq float %52, %54
  br i1 %55, label %56, label %120

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 7
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 7
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %120

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 8
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 8
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %120

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 11
  %70 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 11
  %71 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %73 to i64
  %78 = select i1 %74, i64 %76, i64 %77
  %79 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %81 to i64
  %86 = select i1 %82, i64 %84, i64 %85
  %87 = icmp eq i64 %78, %86
  br i1 %87, label %88, label %120

88:                                               ; preds = %68
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  %92 = select i1 %74, i8* %90, i8* %91
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  %96 = select i1 %82, i8* %94, i8* %95
  %97 = icmp eq i64 %78, 0
  br i1 %74, label %104, label %98

98:                                               ; preds = %88
  br i1 %97, label %120, label %99

99:                                               ; preds = %98
  %100 = ptrtoint i8* %90 to i64
  %101 = trunc i64 %100 to i8
  %102 = load i8, i8* %96, align 1
  %103 = icmp eq i8 %102, %101
  br i1 %103, label %108, label %120

104:                                              ; preds = %88
  br i1 %97, label %120, label %105

105:                                              ; preds = %104
  %106 = tail call i32 @bcmp(i8* %92, i8* %96, i64 %78) #6
  %107 = icmp eq i32 %106, 0
  br label %120

108:                                              ; preds = %99, %115
  %109 = phi i64 [ %112, %115 ], [ %77, %99 ]
  %110 = phi i8* [ %113, %115 ], [ %91, %99 ]
  %111 = phi i8* [ %116, %115 ], [ %96, %99 ]
  %112 = add i64 %109, -1
  %113 = getelementptr inbounds i8, i8* %110, i64 1
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds i8, i8* %111, i64 1
  %117 = load i8, i8* %113, align 1
  %118 = load i8, i8* %116, align 1
  %119 = icmp eq i8 %117, %118
  br i1 %119, label %108, label %120

120:                                              ; preds = %115, %108, %99, %105, %104, %98, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  %121 = phi i1 [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ false, %68 ], [ %107, %105 ], [ true, %104 ], [ true, %98 ], [ false, %99 ], [ true, %108 ], [ false, %115 ]
  ret i1 %121
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui16AXNodeTextStylesneERKS0_(%"struct.ui::AXNodeTextStyles"* nocapture readonly, %"struct.ui::AXNodeTextStyles"* nocapture readonly dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = tail call zeroext i1 @_ZNK2ui16AXNodeTextStyleseqERKS0_(%"struct.ui::AXNodeTextStyles"* %0, %"struct.ui::AXNodeTextStyles"* dereferenceable(72) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui16AXNodeTextStyles7IsUnsetEv(%"struct.ui::AXNodeTextStyles"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %5, label %51

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %51

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %51

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %51

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %51

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 9
  %23 = load float, float* %22, align 4
  %24 = fcmp oeq float %23, -1.000000e+00
  br i1 %24, label %25, label %51

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 10
  %27 = load float, float* %26, align 8
  %28 = fcmp oeq float %27, -1.000000e+00
  br i1 %28, label %29, label %51

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 7
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %51

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 8
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %51

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 11
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"struct.ui::AXNodeTextStyles", %"struct.ui::AXNodeTextStyles"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  br label %48

46:                                               ; preds = %37
  %47 = zext i8 %41 to i64
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i64 [ %45, %43 ], [ %47, %46 ]
  %50 = icmp eq i64 %49, 0
  br label %51

51:                                               ; preds = %48, %33, %29, %25, %21, %17, %13, %9, %5, %1
  %52 = phi i1 [ false, %33 ], [ false, %29 ], [ false, %25 ], [ false, %21 ], [ false, %17 ], [ false, %13 ], [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %50, %48 ]
  ret i1 %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
