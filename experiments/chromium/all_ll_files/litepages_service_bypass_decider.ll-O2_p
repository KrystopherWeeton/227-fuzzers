; ModuleID = '../../chrome/browser/subresource_redirect/litepages_service_bypass_decider.cc'
source_filename = "../../chrome/browser/subresource_redirect/litepages_service_bypass_decider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.LitePagesServiceBypassDecider = type { %"class.base::SupportsWeakPtr", %"class.absl::optional" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

@.str = private unnamed_addr constant [50 x i8] c"SubresourceRedirect.LitePagesService.BypassResult\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"SubresourceRedirect.BypassDuration\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN29LitePagesServiceBypassDeciderC1Ev = hidden unnamed_addr alias void (%class.LitePagesServiceBypassDecider*), void (%class.LitePagesServiceBypassDecider*)* @_ZN29LitePagesServiceBypassDeciderC2Ev
@_ZN29LitePagesServiceBypassDeciderD1Ev = hidden unnamed_addr alias void (%class.LitePagesServiceBypassDecider*), void (%class.LitePagesServiceBypassDecider*)* @_ZN29LitePagesServiceBypassDeciderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29LitePagesServiceBypassDeciderC2Ev(%class.LitePagesServiceBypassDecider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.LitePagesServiceBypassDecider, %class.LitePagesServiceBypassDecider* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %2) #5
  %3 = getelementptr inbounds %class.LitePagesServiceBypassDecider, %class.LitePagesServiceBypassDecider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29LitePagesServiceBypassDeciderD2Ev(%class.LitePagesServiceBypassDecider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.LitePagesServiceBypassDecider, %class.LitePagesServiceBypassDecider* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN29LitePagesServiceBypassDecider14ShouldAllowNowEv(%class.LitePagesServiceBypassDecider* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.LitePagesServiceBypassDecider, %class.LitePagesServiceBypassDecider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %7 = load i8, i8* %2, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.LitePagesServiceBypassDecider, %class.LitePagesServiceBypassDecider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp sgt i64 %6, %11
  br label %13

13:                                               ; preds = %1, %9, %5
  %14 = phi i1 [ true, %1 ], [ %12, %9 ], [ true, %5 ]
  %15 = xor i1 %14, true
  tail call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i1 zeroext %15) #5
  ret i1 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base19UmaHistogramBooleanEPKcb(i8*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29LitePagesServiceBypassDecider34NotifyFetchFailureWithResponseCodeEiN4base9TimeDeltaE(%class.LitePagesServiceBypassDecider* nocapture, i32, i64) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %5 [
    i32 503, label %4
    i32 403, label %4
  ]

4:                                                ; preds = %3, %3
  tail call void @_ZN29LitePagesServiceBypassDecider18NotifyFetchFailureEN4base9TimeDeltaE(%class.LitePagesServiceBypassDecider* %0, i64 %2)
  br label %5

5:                                                ; preds = %3, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29LitePagesServiceBypassDecider18NotifyFetchFailureEN4base9TimeDeltaE(%class.LitePagesServiceBypassDecider* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca i64, align 8
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @_ZN20subresource_redirect29GetLitePagesBypassMaxDurationEv() #5
  %9 = icmp slt i64 %8, %1
  %10 = select i1 %9, i64 %8, i64 %1
  br label %13

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN20subresource_redirect32GetLitePagesBypassRandomDurationEv() #5
  br label %13

13:                                               ; preds = %11, %7
  %14 = phi i64 [ %12, %11 ], [ %10, %7 ]
  %15 = getelementptr inbounds %class.LitePagesServiceBypassDecider, %class.LitePagesServiceBypassDecider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  br i1 %17, label %48, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.LitePagesServiceBypassDecider, %class.LitePagesServiceBypassDecider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %22 = add i64 %14, -9223372036854775807
  %23 = icmp ult i64 %22, 2
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = icmp slt i64 %14, 0
  %26 = select i1 %25, i64 -9223372036854775808, i64 9223372036854775807
  %27 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %21, i64 %14) #5
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  %30 = select i1 %28, i64 %26, i64 %29, !prof !3
  br label %39

31:                                               ; preds = %19
  %32 = add i64 %21, -9223372036854775807
  %33 = icmp ugt i64 %32, 1
  %34 = icmp eq i64 %21, %14
  %35 = or i1 %34, %33
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #5
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #5
  br label %39

39:                                               ; preds = %24, %31, %36
  %40 = phi i64 [ %30, %24 ], [ %14, %31 ], [ %14, %36 ]
  store i64 %40, i64* %5, align 8
  %41 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %20, i64 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp slt i64 %42, %40
  %44 = bitcast i64* %5 to %"class.base::TimeTicks"*
  %45 = select i1 %43, %"class.base::TimeTicks"* %44, %"class.base::TimeTicks"* %20
  %46 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %45, i64 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  br label %67

48:                                               ; preds = %13
  %49 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %50 = add i64 %14, -9223372036854775807
  %51 = icmp ult i64 %50, 2
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  %53 = icmp slt i64 %14, 0
  %54 = select i1 %53, i64 -9223372036854775808, i64 9223372036854775807
  %55 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %49, i64 %14) #5
  %56 = extractvalue { i64, i1 } %55, 1
  %57 = extractvalue { i64, i1 } %55, 0
  %58 = select i1 %56, i64 %54, i64 %57, !prof !3
  br label %67

59:                                               ; preds = %48
  %60 = add i64 %49, -9223372036854775807
  %61 = icmp ugt i64 %60, 1
  %62 = icmp eq i64 %49, %14
  %63 = or i1 %62, %61
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #5
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #5
  br label %67

67:                                               ; preds = %64, %59, %52, %39
  %68 = phi i64 [ %47, %39 ], [ %58, %52 ], [ %14, %59 ], [ %14, %64 ]
  %69 = load i8, i8* %15, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = getelementptr inbounds %class.LitePagesServiceBypassDecider, %class.LitePagesServiceBypassDecider* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %68, i64* %71, align 8
  br i1 %70, label %72, label %73

72:                                               ; preds = %67
  store i8 1, i8* %15, align 8
  br label %73

73:                                               ; preds = %67, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  call void @_ZN4base21UmaHistogramLongTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i64 %14) #5
  ret void
}

declare i64 @_ZN20subresource_redirect29GetLitePagesBypassMaxDurationEv() local_unnamed_addr #2

declare i64 @_ZN20subresource_redirect32GetLitePagesBypassRandomDurationEv() local_unnamed_addr #2

declare void @_ZN4base21UmaHistogramLongTimesEPKcNS_9TimeDeltaE(i8*, i64) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
