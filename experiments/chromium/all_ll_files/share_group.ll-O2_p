; ModuleID = '../../gpu/command_buffer/client/share_group.cc'
source_filename = "../../gpu/command_buffer/client/share_group.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.gpu::gles2::ShareGroupContextData::IdHandlerData" = type <{ %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.gpu::gles2::ShareGroup" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], [6 x %"class.std::__1::unique_ptr"], [1 x %"class.std::__1::unique_ptr.5"], %"class.std::__1::unique_ptr.11", %"class.gpu::ClientDiscardableTextureManager", i8, [7 x i8], i64, %"class.base::Lock", i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.gpu::gles2::IdHandlerInterface"* }
%"class.gpu::gles2::IdHandlerInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.gpu::gles2::RangeIdHandlerInterface"* }
%"class.gpu::gles2::RangeIdHandlerInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.gpu::gles2::ProgramInfoManager"* }
%"class.gpu::gles2::ProgramInfoManager" = type { %"class.std::__1::unordered_map", %"class.base::Lock" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.14", %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.30", [4 x i8] }>
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { float }
%"class.gpu::ClientDiscardableTextureManager" = type { %"class.base::Lock", %"class.std::__1::map", %"class.gpu::ClientDiscardableManager" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.gpu::ClientDiscardableManager" = type { i32, i64, i32, %"class.std::__1::vector.43", %"class.std::__1::map.51", %"class.std::__1::queue" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.std::__1::unique_ptr.45"*, %"class.std::__1::unique_ptr.45"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.45" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.45"* }
%"class.std::__1::map.51" = type { %"class.std::__1::__tree.52" }
%"class.std::__1::__tree.52" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.gpu::ClientDiscardableHandle"*, i64 }
%"class.gpu::ClientDiscardableHandle" = type { %"class.gpu::DiscardableHandleBase" }
%"class.gpu::DiscardableHandleBase" = type { %class.scoped_refptr, i32, i32 }
%class.scoped_refptr = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe.62", [4 x i8], %"class.std::__1::unique_ptr.63", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.62" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.gpu::IdAllocator" = type { %"class.std::__1::map.78" }
%"class.std::__1::map.78" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.gpu::gles2::NonReusedIdHandler" = type <{ %"class.gpu::gles2::IdHandlerInterface", %"class.base::Lock", i32, [4 x i8] }>
%"class.gpu::gles2::GLES2Implementation" = type { %"class.gpu::gles2::GLES2Interface", %"class.gpu::ImplementationBase", %"class.gpu::gles2::QueryTrackerClient", %"class.gpu::gles2::GLES2Util", %"class.gpu::gles2::GLES2CmdHelper"*, %"class.std::__1::basic_string", %"class.gpu::gles2::DebugMarkerManager", %"class.std::__1::basic_string", %"class.std::__1::queue.201", i32, %"struct.gpu::gles2::GLES2Implementation::GLStaticState", %"struct.gpu::gles2::ClientContextState", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.215", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.221", [2 x i32], i32, %"class.gpu::LogSettings", i8, i8, i32, i32, i32, i32, %"class.std::__1::set", %"class.std::__1::map.236", %"class.std::__1::unordered_map.247", %"class.std::__1::map.271", %class.scoped_refptr.280, %"class.gpu::gles2::ShareGroupContextData", [5 x %"class.std::__1::unique_ptr.281"], %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.317", %"class.absl::optional", %"class.absl::optional.347", %"class.base::RepeatingCallback", i8, %"class.std::__1::deque", i32, i8, i8*, %"class.std::__1::vector.363", i64, %"class.base::flat_map.370", %"class.base::flat_map.380", %"class.std::__1::basic_string", i8, i32, %"class.base::WeakPtrFactory.390" }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"class.gpu::ImplementationBase" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.gpu::ContextSupport", %"class.gpu::GpuControlClient", %"class.gpu::TransferBufferInterface"*, %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.137", %"class.base::OnceCallback", i8, %"class.gpu::GpuControl"*, %"struct.gpu::Capabilities", %"class.gpu::CommandBufferHelper"*, %"class.base::WeakPtrFactory" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.gpu::ContextSupport" = type { i32 (...)** }
%"class.gpu::GpuControlClient" = type { i32 (...)** }
%"class.gpu::TransferBufferInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.gpu::MappedMemoryManager"* }
%"class.gpu::MappedMemoryManager" = type <{ i32, [4 x i8], %"class.gpu::CommandBufferHelper"*, %"class.std::__1::vector.114", i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.std::__1::unique_ptr.116"*, %"class.std::__1::unique_ptr.116"*, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.gpu::MemoryChunk"* }
%"class.gpu::MemoryChunk" = type { i32, %class.scoped_refptr, %"class.gpu::FencedAllocatorWrapper" }
%"class.gpu::FencedAllocatorWrapper" = type { %"class.gpu::FencedAllocator", i8* }
%"class.gpu::FencedAllocator" = type <{ %"class.gpu::CommandBufferHelper"*, %"class.std::__1::vector.119", i32, [4 x i8] }>
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.gpu::FencedAllocator::Block"*, %"struct.gpu::FencedAllocator::Block"*, %"class.std::__1::__compressed_pair.121" }
%"struct.gpu::FencedAllocator::Block" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.gpu::FencedAllocator::Block"* }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::unique_ptr.116"* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.gpu::gles2::QueryTracker"* }
%"class.gpu::gles2::QueryTracker" = type <{ %"class.std::__1::unordered_map.140", %"class.base::flat_map", %"class.gpu::gles2::QuerySyncManager", %"class.gpu::MappedMemoryManager"*, i32, i32, %"struct.gpu::gles2::DisjointValueSync"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.140" = type { %"class.std::__1::__hash_table.141" }
%"class.std::__1::__hash_table.141" = type <{ %"class.std::__1::unique_ptr.142", %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.160", [4 x i8] }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144", %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base.145"** }
%"struct.std::__1::__hash_node_base.145" = type { %"struct.std::__1::__hash_node_base.145"* }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.std::__1::__bucket_list_deallocator.147" }
%"class.std::__1::__bucket_list_deallocator.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.std::__1::__hash_node_base.145" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.164" }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.166" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::pair"* }
%"class.gpu::gles2::QuerySyncManager" = type { %"class.gpu::MappedMemoryManager"*, %"class.base::circular_deque.171" }
%"class.base::circular_deque.171" = type { %"class.base::internal::VectorBuffer.172", i64, i64 }
%"class.base::internal::VectorBuffer.172" = type { %"class.std::__1::unique_ptr.173"*, i64 }
%"class.std::__1::unique_ptr.173" = type opaque
%"struct.gpu::gles2::DisjointValueSync" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.178", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.178" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gpu::GpuControl" = type opaque
%"struct.gpu::Capabilities" = type { %"struct.gpu::Capabilities::PerStagePrecisions", %"struct.gpu::Capabilities::PerStagePrecisions", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i64, float, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, %"struct.gpu::GpuMemoryBufferFormatSet", %"class.std::__1::vector.179" }
%"struct.gpu::Capabilities::PerStagePrecisions" = type { %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision" }
%"struct.gpu::Capabilities::ShaderPrecision" = type { i32, i32, i32 }
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.181" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"class.gpu::CommandBufferHelper" = type <{ i32 (...)**, %"class.gpu::CommandBuffer"*, i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.gpu::CommandBuffer" = type { i32 (...)** }
%"union.gpu::CommandBufferEntry" = type { %"struct.gpu::CommandHeader" }
%"struct.gpu::CommandHeader" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.186 }
%class.scoped_refptr.186 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.187", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.187" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.188" }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i8 }
%"class.gpu::gles2::QueryTrackerClient" = type { i32 (...)** }
%"class.gpu::gles2::GLES2Util" = type { i32, i32 }
%"class.gpu::gles2::GLES2CmdHelper" = type { %"class.gpu::CommandBufferHelper.base", [4 x i8] }
%"class.gpu::CommandBufferHelper.base" = type <{ i32 (...)**, %"class.gpu::CommandBuffer"*, i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, %"class.base::TimeTicks", i32 }>
%"class.gpu::gles2::DebugMarkerManager" = type { %"class.std::__1::stack.198", %"class.std::__1::basic_string" }
%"class.std::__1::stack.198" = type { %"class.base::circular_deque.199" }
%"class.base::circular_deque.199" = type { %"class.base::internal::VectorBuffer.200", i64, i64 }
%"class.base::internal::VectorBuffer.200" = type { %"class.gpu::gles2::DebugMarkerManager::Group"*, i64 }
%"class.gpu::gles2::DebugMarkerManager::Group" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::queue.201" = type { %"class.base::circular_deque.202" }
%"class.base::circular_deque.202" = type { %"class.base::internal::VectorBuffer.203", i64, i64 }
%"class.base::internal::VectorBuffer.203" = type { i32*, i64 }
%"struct.gpu::gles2::GLES2Implementation::GLStaticState" = type { %"class.std::__1::map.204" }
%"class.std::__1::map.204" = type { %"class.std::__1::__tree.205" }
%"class.std::__1::__tree.205" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.gpu::gles2::ClientContextState" = type { %"struct.gpu::gles2::ClientContextState::EnableFlags", i32, i32, i32, i32 }
%"struct.gpu::gles2::ClientContextState::EnableFlags" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.gpu::gles2::GLES2Implementation::TextureUnit"* }
%"struct.gpu::gles2::GLES2Implementation::TextureUnit" = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.gpu::gles2::VertexArrayObjectManager"* }
%"class.gpu::gles2::VertexArrayObjectManager" = type opaque
%"class.gpu::LogSettings" = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.227" }
%"class.std::__1::__tree.227" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.236" = type { %"class.std::__1::__tree.237" }
%"class.std::__1::__tree.237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.247" = type { %"class.std::__1::__hash_table.248" }
%"class.std::__1::__hash_table.248" = type <{ %"class.std::__1::unique_ptr.249", %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.267", [4 x i8] }>
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251", %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.std::__1::__hash_node_base.252"** }
%"struct.std::__1::__hash_node_base.252" = type { %"struct.std::__1::__hash_node_base.252"* }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.std::__1::__bucket_list_deallocator.254" }
%"class.std::__1::__bucket_list_deallocator.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.252" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::map.271" = type { %"class.std::__1::__tree.272" }
%"class.std::__1::__tree.272" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%class.scoped_refptr.280 = type { %"class.gpu::gles2::ShareGroup"* }
%"class.gpu::gles2::ShareGroupContextData" = type { [6 x %"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"] }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.gpu::IdAllocator"* }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.gpu::gles2::BufferTracker"* }
%"class.gpu::gles2::BufferTracker" = type { %"class.gpu::MappedMemoryManager"*, %"class.std::__1::unordered_map.290" }
%"class.std::__1::unordered_map.290" = type { %"class.std::__1::__hash_table.291" }
%"class.std::__1::__hash_table.291" = type <{ %"class.std::__1::unique_ptr.292", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.310", [4 x i8] }>
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294", %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base.295"** }
%"struct.std::__1::__hash_node_base.295" = type { %"struct.std::__1::__hash_node_base.295"* }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.std::__1::__bucket_list_deallocator.297" }
%"class.std::__1::__bucket_list_deallocator.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base.295" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.gpu::gles2::ReadbackBufferShadowTracker"* }
%"class.gpu::gles2::ReadbackBufferShadowTracker" = type { %"class.base::flat_map.320", %"class.std::__1::vector.336", i64, %"class.gpu::MappedMemoryManager"*, %"class.gpu::gles2::GLES2CmdHelper"* }
%"class.base::flat_map.320" = type { %"class.base::internal::flat_tree.321" }
%"class.base::internal::flat_tree.321" = type { %"class.std::__1::vector.322" }
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"struct.std::__1::pair.324"*, %"struct.std::__1::pair.324"*, %"class.std::__1::__compressed_pair.331" }
%"struct.std::__1::pair.324" = type { i32, %"class.std::__1::unique_ptr.325" }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.gpu::gles2::ReadbackBufferShadowTracker::Buffer"* }
%"class.gpu::gles2::ReadbackBufferShadowTracker::Buffer" = type <{ %"class.base::SupportsWeakPtr", i32, [4 x i8], %"class.gpu::gles2::ReadbackBufferShadowTracker"*, i32, i32, i8*, i64, i64, i32, i8, [3 x i8] }>
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::pair.324"* }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { %"class.base::WeakPtr"*, %"class.base::WeakPtr"*, %"class.std::__1::__compressed_pair.338" }
%"class.base::WeakPtr" = type opaque
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.base::WeakPtr"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.346 }
%union.anon.346 = type { %"class.gpu::ScopedMappedMemoryPtr" }
%"class.gpu::ScopedMappedMemoryPtr" = type { i8*, i32, i32, i32, i8, %"class.gpu::CommandBufferHelper"*, %"class.gpu::MappedMemoryManager"* }
%"class.absl::optional.347" = type { %"class.absl::optional_internal::optional_data.348" }
%"class.absl::optional_internal::optional_data.348" = type { %"class.absl::optional_internal::optional_data_base.349" }
%"class.absl::optional_internal::optional_data_base.349" = type { %"class.absl::optional_internal::optional_data_dtor_base.350" }
%"class.absl::optional_internal::optional_data_dtor_base.350" = type { i8, %union.anon.351 }
%union.anon.351 = type { %"class.gpu::ScopedTransferBufferPtr" }
%"class.gpu::ScopedTransferBufferPtr" = type { i8*, i32, %"class.gpu::CommandBufferHelper"*, %"class.gpu::TransferBufferInterface"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.359" }
%"struct.std::__1::__split_buffer" = type { %"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback"**, %"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback"**, %"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback"**, %"class.std::__1::__compressed_pair.354" }
%"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"struct.gpu::gles2::GLES2Implementation::DeferredErrorCallback"** }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.363" = type { %"class.std::__1::__vector_base.364" }
%"class.std::__1::__vector_base.364" = type { i8**, i8**, %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { i8** }
%"class.base::flat_map.370" = type { %"class.base::internal::flat_tree.371" }
%"class.base::internal::flat_tree.371" = type { %"class.std::__1::vector.372" }
%"class.std::__1::vector.372" = type { %"class.std::__1::__vector_base.373" }
%"class.std::__1::__vector_base.373" = type { %"struct.std::__1::pair.374"*, %"struct.std::__1::pair.374"*, %"class.std::__1::__compressed_pair.375" }
%"struct.std::__1::pair.374" = type opaque
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::pair.374"* }
%"class.base::flat_map.380" = type { %"class.base::internal::flat_tree.381" }
%"class.base::internal::flat_tree.381" = type { %"class.std::__1::vector.382" }
%"class.std::__1::vector.382" = type { %"class.std::__1::__vector_base.383" }
%"class.std::__1::__vector_base.383" = type { %"struct.std::__1::pair.384"*, %"struct.std::__1::pair.384"*, %"class.std::__1::__compressed_pair.385" }
%"struct.std::__1::pair.384" = type opaque
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::pair.384"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::WeakPtrFactory.390" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::gles2::IdHandler" = type { %"class.gpu::gles2::IdHandlerInterface", %"class.base::Lock", %"class.gpu::IdAllocator" }
%"class.gpu::gles2::StrictIdHandler" = type { %"class.gpu::gles2::IdHandlerInterface", i32, %"class.base::Lock", %"class.std::__1::vector.93", %"class.std::__1::stack" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { i8*, i8*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i8* }
%"class.std::__1::stack" = type { %"class.base::circular_deque.100" }
%"class.base::circular_deque.100" = type { %"class.base::internal::VectorBuffer.101", i64, i64 }
%"class.base::internal::VectorBuffer.101" = type { i32*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gpu::gles2::RangeIdHandler" = type { %"class.gpu::gles2::RangeIdHandlerInterface", %"class.base::Lock", %"class.gpu::IdAllocator" }

$_ZN3gpu5gles218NonReusedIdHandlerD2Ev = comdat any

$_ZN3gpu5gles218NonReusedIdHandlerD0Ev = comdat any

$_ZN3gpu5gles218NonReusedIdHandler7MakeIdsEPNS0_19GLES2ImplementationEjiPj = comdat any

$_ZN3gpu5gles218NonReusedIdHandler7FreeIdsEPNS0_19GLES2ImplementationEiPKjMS2_FviS5_E = comdat any

$_ZN3gpu5gles218NonReusedIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjMS2_FvjjE = comdat any

$_ZN3gpu5gles218NonReusedIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjMS2_FvjjjE = comdat any

$_ZN3gpu5gles218NonReusedIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjllMS2_FvjjjllE = comdat any

$_ZN3gpu5gles218NonReusedIdHandler11FreeContextEPNS0_19GLES2ImplementationE = comdat any

$_ZN3gpu5gles29IdHandlerD2Ev = comdat any

$_ZN3gpu5gles29IdHandlerD0Ev = comdat any

$_ZN3gpu5gles29IdHandler7MakeIdsEPNS0_19GLES2ImplementationEjiPj = comdat any

$_ZN3gpu5gles29IdHandler7FreeIdsEPNS0_19GLES2ImplementationEiPKjMS2_FviS5_E = comdat any

$_ZN3gpu5gles29IdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjMS2_FvjjE = comdat any

$_ZN3gpu5gles29IdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjMS2_FvjjjE = comdat any

$_ZN3gpu5gles29IdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjllMS2_FvjjjllE = comdat any

$_ZN3gpu5gles29IdHandler11FreeContextEPNS0_19GLES2ImplementationE = comdat any

$_ZN3gpu5gles215StrictIdHandlerD2Ev = comdat any

$_ZN3gpu5gles215StrictIdHandlerD0Ev = comdat any

$_ZN3gpu5gles215StrictIdHandler7MakeIdsEPNS0_19GLES2ImplementationEjiPj = comdat any

$_ZN3gpu5gles215StrictIdHandler7FreeIdsEPNS0_19GLES2ImplementationEiPKjMS2_FviS5_E = comdat any

$_ZN3gpu5gles215StrictIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjMS2_FvjjE = comdat any

$_ZN3gpu5gles215StrictIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjMS2_FvjjjE = comdat any

$_ZN3gpu5gles215StrictIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjllMS2_FvjjjllE = comdat any

$_ZN3gpu5gles215StrictIdHandler11FreeContextEPNS0_19GLES2ImplementationE = comdat any

$_ZN4base14circular_dequeIjED2Ev = comdat any

$_ZN4base8internal12VectorBufferIjEixEm = comdat any

$_ZN3gpu5gles215StrictIdHandler21CollectPendingFreeIdsEPNS0_19GLES2ImplementationE = comdat any

$_ZN4base14circular_dequeIjE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIjE10MoveBufferERNS_8internal12VectorBufferIjEEmmPS4_PmS7_ = comdat any

$_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4base8internal12VectorBufferIjEixEm = comdat any

$_ZN4base14circular_dequeIjE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN3gpu5gles214RangeIdHandlerD2Ev = comdat any

$_ZN3gpu5gles214RangeIdHandlerD0Ev = comdat any

$_ZN3gpu5gles214RangeIdHandler11MakeIdRangeEPNS0_19GLES2ImplementationEiPj = comdat any

$_ZN3gpu5gles214RangeIdHandler11FreeIdRangeEPNS0_19GLES2ImplementationEjiMS2_FvjiE = comdat any

$_ZN3gpu5gles214RangeIdHandler11FreeContextEPNS0_19GLES2ImplementationE = comdat any

$_ZTVN3gpu5gles218NonReusedIdHandlerE = comdat any

$_ZTVN3gpu5gles29IdHandlerE = comdat any

$_ZTVN3gpu5gles215StrictIdHandlerE = comdat any

$_ZTVN3gpu5gles214RangeIdHandlerE = comdat any

@_ZTVN3gpu5gles218NonReusedIdHandlerE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::NonReusedIdHandler"*)* @_ZN3gpu5gles218NonReusedIdHandlerD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::NonReusedIdHandler"*)* @_ZN3gpu5gles218NonReusedIdHandlerD0Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32*)* @_ZN3gpu5gles218NonReusedIdHandler7MakeIdsEPNS0_19GLES2ImplementationEjiPj to i8*), i8* bitcast (i1 (%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32*, i64, i64)* @_ZN3gpu5gles218NonReusedIdHandler7FreeIdsEPNS0_19GLES2ImplementationEiPKjMS2_FviS5_E to i8*), i8* bitcast (i1 (%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i64, i64)* @_ZN3gpu5gles218NonReusedIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjMS2_FvjjE to i8*), i8* bitcast (i1 (%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, { i64, i64 }*)* @_ZN3gpu5gles218NonReusedIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjMS2_FvjjjE to i8*), i8* bitcast (i1 (%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64, { i64, i64 }*)* @_ZN3gpu5gles218NonReusedIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjllMS2_FvjjjllE to i8*), i8* bitcast (void (%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*)* @_ZN3gpu5gles218NonReusedIdHandler11FreeContextEPNS0_19GLES2ImplementationE to i8*)] }, comdat, align 8
@_ZTVN3gpu5gles29IdHandlerE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::IdHandler"*)* @_ZN3gpu5gles29IdHandlerD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::IdHandler"*)* @_ZN3gpu5gles29IdHandlerD0Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32*)* @_ZN3gpu5gles29IdHandler7MakeIdsEPNS0_19GLES2ImplementationEjiPj to i8*), i8* bitcast (i1 (%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32*, i64, i64)* @_ZN3gpu5gles29IdHandler7FreeIdsEPNS0_19GLES2ImplementationEiPKjMS2_FviS5_E to i8*), i8* bitcast (i1 (%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i64, i64)* @_ZN3gpu5gles29IdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjMS2_FvjjE to i8*), i8* bitcast (i1 (%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, { i64, i64 }*)* @_ZN3gpu5gles29IdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjMS2_FvjjjE to i8*), i8* bitcast (i1 (%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64, { i64, i64 }*)* @_ZN3gpu5gles29IdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjllMS2_FvjjjllE to i8*), i8* bitcast (void (%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*)* @_ZN3gpu5gles29IdHandler11FreeContextEPNS0_19GLES2ImplementationE to i8*)] }, comdat, align 8
@_ZTVN3gpu5gles215StrictIdHandlerE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::StrictIdHandler"*)* @_ZN3gpu5gles215StrictIdHandlerD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::StrictIdHandler"*)* @_ZN3gpu5gles215StrictIdHandlerD0Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32*)* @_ZN3gpu5gles215StrictIdHandler7MakeIdsEPNS0_19GLES2ImplementationEjiPj to i8*), i8* bitcast (i1 (%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32*, i64, i64)* @_ZN3gpu5gles215StrictIdHandler7FreeIdsEPNS0_19GLES2ImplementationEiPKjMS2_FviS5_E to i8*), i8* bitcast (i1 (%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i64, i64)* @_ZN3gpu5gles215StrictIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjMS2_FvjjE to i8*), i8* bitcast (i1 (%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, { i64, i64 }*)* @_ZN3gpu5gles215StrictIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjMS2_FvjjjE to i8*), i8* bitcast (i1 (%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64, { i64, i64 }*)* @_ZN3gpu5gles215StrictIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjllMS2_FvjjjllE to i8*), i8* bitcast (void (%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*)* @_ZN3gpu5gles215StrictIdHandler11FreeContextEPNS0_19GLES2ImplementationE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN3gpu5gles214RangeIdHandlerE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::RangeIdHandler"*)* @_ZN3gpu5gles214RangeIdHandlerD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::RangeIdHandler"*)* @_ZN3gpu5gles214RangeIdHandlerD0Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::RangeIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32*)* @_ZN3gpu5gles214RangeIdHandler11MakeIdRangeEPNS0_19GLES2ImplementationEiPj to i8*), i8* bitcast (void (%"class.gpu::gles2::RangeIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i64, i64)* @_ZN3gpu5gles214RangeIdHandler11FreeIdRangeEPNS0_19GLES2ImplementationEjiMS2_FvjiE to i8*), i8* bitcast (void (%"class.gpu::gles2::RangeIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*)* @_ZN3gpu5gles214RangeIdHandler11FreeContextEPNS0_19GLES2ImplementationE to i8*)] }, comdat, align 8

@_ZN3gpu5gles221ShareGroupContextData13IdHandlerDataC1Ev = hidden unnamed_addr alias void (%"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"*), void (%"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"*)* @_ZN3gpu5gles221ShareGroupContextData13IdHandlerDataC2Ev
@_ZN3gpu5gles221ShareGroupContextData13IdHandlerDataD1Ev = hidden unnamed_addr alias void (%"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"*), void (%"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"*)* @_ZN3gpu5gles221ShareGroupContextData13IdHandlerDataD2Ev
@_ZN3gpu5gles210ShareGroupC1Ebm = hidden unnamed_addr alias void (%"class.gpu::gles2::ShareGroup"*, i1, i64), void (%"class.gpu::gles2::ShareGroup"*, i1, i64)* @_ZN3gpu5gles210ShareGroupC2Ebm
@_ZN3gpu5gles210ShareGroupD1Ev = hidden unnamed_addr alias void (%"class.gpu::gles2::ShareGroup"*), void (%"class.gpu::gles2::ShareGroup"*)* @_ZN3gpu5gles210ShareGroupD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles221ShareGroupContextData13IdHandlerDataC2Ev(%"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles221ShareGroupContextData13IdHandlerDataD2Ev(%"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::gles2::ShareGroupContextData::IdHandlerData", %"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"struct.gpu::gles2::ShareGroupContextData::IdHandlerData", %"struct.gpu::gles2::ShareGroupContextData::IdHandlerData"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles210ShareGroupC2Ebm(%"class.gpu::gles2::ShareGroup"*, i1 zeroext, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 0
  %6 = zext i1 %1 to i8
  %7 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 3, i64 0
  %8 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 4
  %9 = bitcast %"class.std::__1::unique_ptr.11"* %8 to i64*
  %10 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 5
  %11 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 64, i1 false)
  tail call void @_ZN3gpu31ClientDiscardableTextureManagerC1Ev(%"class.gpu::ClientDiscardableTextureManager"* %10) #13
  %12 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 6
  store i8 %6, i8* %12, align 8
  %13 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 8
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %14) #13
  %15 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 10
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 1, i32 0, i32 0, i32 0
  %17 = bitcast %"class.gpu::gles2::IdHandlerInterface"** %16 to i8**
  br i1 %1, label %18, label %54

18:                                               ; preds = %3, %51
  %19 = phi i64 [ %52, %51 ], [ 0, %3 ]
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %21, label %35

21:                                               ; preds = %18
  %22 = tail call i8* @_Znwm(i64 56) #12
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles218NonReusedIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %25) #13
  %26 = getelementptr inbounds i8, i8* %22, i64 48
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 8
  %28 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %16, align 8
  store i8* %22, i8** %17, align 8
  %29 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %28, null
  br i1 %29, label %51, label %30

30:                                               ; preds = %21
  %31 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %28 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %32 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %32, i64 1
  %34 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %33, align 8
  tail call void %34(%"class.gpu::gles2::IdHandlerInterface"* nonnull %28) #13
  br label %51

35:                                               ; preds = %18
  %36 = tail call i8* @_Znwm(i64 72) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 72, i1 false) #13
  %37 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles29IdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  %39 = bitcast i8* %38 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %39) #13
  %40 = getelementptr inbounds i8, i8* %36, i64 48
  %41 = bitcast i8* %40 to %"class.gpu::IdAllocator"*
  tail call void @_ZN3gpu11IdAllocatorC1Ev(%"class.gpu::IdAllocator"* %41) #13
  %42 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 %19, i32 0, i32 0, i32 0
  %43 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %42, align 8
  %44 = bitcast %"class.gpu::gles2::IdHandlerInterface"** %42 to i8**
  store i8* %36, i8** %44, align 8
  %45 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %43, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %35
  %47 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %43 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %48 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %48, i64 1
  %50 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %49, align 8
  tail call void %50(%"class.gpu::gles2::IdHandlerInterface"* nonnull %43) #13
  br label %51

51:                                               ; preds = %35, %46, %21, %30
  %52 = add nuw nsw i64 %19, 1
  %53 = icmp eq i64 %52, 6
  br i1 %53, label %92, label %18

54:                                               ; preds = %3, %89
  %55 = phi i64 [ %90, %89 ], [ 0, %3 ]
  %56 = icmp eq i64 %55, 1
  br i1 %56, label %57, label %71

57:                                               ; preds = %54
  %58 = tail call i8* @_Znwm(i64 56) #12
  %59 = bitcast i8* %58 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles218NonReusedIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 8
  %61 = bitcast i8* %60 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %61) #13
  %62 = getelementptr inbounds i8, i8* %58, i64 48
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 8
  %64 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %16, align 8
  store i8* %58, i8** %17, align 8
  %65 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %64, null
  br i1 %65, label %89, label %66

66:                                               ; preds = %57
  %67 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %64 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %68 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %68, i64 1
  %70 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %69, align 8
  tail call void %70(%"class.gpu::gles2::IdHandlerInterface"* nonnull %64) #13
  br label %89

71:                                               ; preds = %54
  %72 = tail call i8* @_Znwm(i64 112) #12
  %73 = bitcast i8* %72 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles215StrictIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds i8, i8* %72, i64 8
  %75 = bitcast i8* %74 to i32*
  %76 = trunc i64 %55 to i32
  store i32 %76, i32* %75, align 8
  %77 = getelementptr inbounds i8, i8* %72, i64 16
  %78 = bitcast i8* %77 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %78) #13
  %79 = getelementptr inbounds i8, i8* %72, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 56, i1 false) #13
  %80 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 %55, i32 0, i32 0, i32 0
  %81 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %80, align 8
  %82 = bitcast %"class.gpu::gles2::IdHandlerInterface"** %80 to i8**
  store i8* %72, i8** %82, align 8
  %83 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %81, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %71
  %85 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %81 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %86 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %86, i64 1
  %88 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %87, align 8
  tail call void %88(%"class.gpu::gles2::IdHandlerInterface"* nonnull %81) #13
  br label %89

89:                                               ; preds = %71, %84, %57, %66
  %90 = add nuw nsw i64 %55, 1
  %91 = icmp eq i64 %90, 6
  br i1 %91, label %92, label %54

92:                                               ; preds = %89, %51
  %93 = tail call i8* @_Znwm(i64 80) #12
  %94 = bitcast i8* %93 to %"class.gpu::gles2::ProgramInfoManager"*
  tail call void @_ZN3gpu5gles218ProgramInfoManagerC1Ev(%"class.gpu::gles2::ProgramInfoManager"* nonnull %94) #13
  %95 = ptrtoint i8* %93 to i64
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %8, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.gpu::gles2::ProgramInfoManager"*, %"class.gpu::gles2::ProgramInfoManager"** %96, align 8
  store i64 %95, i64* %9, align 8
  %98 = icmp eq %"class.gpu::gles2::ProgramInfoManager"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %92
  tail call void @_ZN3gpu5gles218ProgramInfoManagerD1Ev(%"class.gpu::gles2::ProgramInfoManager"* nonnull %97) #13
  %100 = bitcast %"class.gpu::gles2::ProgramInfoManager"* %97 to i8*
  tail call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %99, %92
  %102 = tail call i8* @_Znwm(i64 72) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %102, i8 0, i64 72, i1 false) #13
  %103 = bitcast i8* %102 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gpu5gles214RangeIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 8
  %105 = bitcast i8* %104 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %105) #13
  %106 = getelementptr inbounds i8, i8* %102, i64 48
  %107 = bitcast i8* %106 to %"class.gpu::IdAllocator"*
  tail call void @_ZN3gpu11IdAllocatorC1Ev(%"class.gpu::IdAllocator"* %107) #13
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %7, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.gpu::gles2::RangeIdHandlerInterface"*, %"class.gpu::gles2::RangeIdHandlerInterface"** %108, align 8
  %110 = bitcast %"class.std::__1::unique_ptr.5"* %7 to i8**
  store i8* %102, i8** %110, align 8
  %111 = icmp eq %"class.gpu::gles2::RangeIdHandlerInterface"* %109, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %101
  %113 = bitcast %"class.gpu::gles2::RangeIdHandlerInterface"* %109 to void (%"class.gpu::gles2::RangeIdHandlerInterface"*)***
  %114 = load void (%"class.gpu::gles2::RangeIdHandlerInterface"*)**, void (%"class.gpu::gles2::RangeIdHandlerInterface"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.gpu::gles2::RangeIdHandlerInterface"*)*, void (%"class.gpu::gles2::RangeIdHandlerInterface"*)** %114, i64 1
  %116 = load void (%"class.gpu::gles2::RangeIdHandlerInterface"*)*, void (%"class.gpu::gles2::RangeIdHandlerInterface"*)** %115, align 8
  tail call void %116(%"class.gpu::gles2::RangeIdHandlerInterface"* nonnull %109) #13
  br label %117

117:                                              ; preds = %112, %101
  ret void
}

declare void @_ZN3gpu31ClientDiscardableTextureManagerC1Ev(%"class.gpu::ClientDiscardableTextureManager"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles210ShareGroup4LoseEv(%"class.gpu::gles2::ShareGroup"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 10
  store i8 1, i8* %9, align 8
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gpu5gles210ShareGroup6IsLostEv(%"class.gpu::gles2::ShareGroup"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 10
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp ne i8 %10, 0
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #13
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles210ShareGroup31SetProgramInfoManagerForTestingEPNS0_18ProgramInfoManagerE(%"class.gpu::gles2::ShareGroup"* nocapture, %"class.gpu::gles2::ProgramInfoManager"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::gles2::ProgramInfoManager"*, %"class.gpu::gles2::ProgramInfoManager"** %3, align 8
  store %"class.gpu::gles2::ProgramInfoManager"* %1, %"class.gpu::gles2::ProgramInfoManager"** %3, align 8
  %5 = icmp eq %"class.gpu::gles2::ProgramInfoManager"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZN3gpu5gles218ProgramInfoManagerD1Ev(%"class.gpu::gles2::ProgramInfoManager"* nonnull %4) #13
  %7 = bitcast %"class.gpu::gles2::ProgramInfoManager"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #12
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles210ShareGroupD2Ev(%"class.gpu::gles2::ShareGroup"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %2) #13
  %3 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 5
  tail call void @_ZN3gpu31ClientDiscardableTextureManagerD1Ev(%"class.gpu::ClientDiscardableTextureManager"* %3) #13
  %4 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.gpu::gles2::ProgramInfoManager"*, %"class.gpu::gles2::ProgramInfoManager"** %4, align 8
  store %"class.gpu::gles2::ProgramInfoManager"* null, %"class.gpu::gles2::ProgramInfoManager"** %4, align 8
  %6 = icmp eq %"class.gpu::gles2::ProgramInfoManager"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN3gpu5gles218ProgramInfoManagerD1Ev(%"class.gpu::gles2::ProgramInfoManager"* nonnull %5) #13
  %8 = bitcast %"class.gpu::gles2::ProgramInfoManager"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.gpu::gles2::RangeIdHandlerInterface"*, %"class.gpu::gles2::RangeIdHandlerInterface"** %10, align 8
  store %"class.gpu::gles2::RangeIdHandlerInterface"* null, %"class.gpu::gles2::RangeIdHandlerInterface"** %10, align 8
  %12 = icmp eq %"class.gpu::gles2::RangeIdHandlerInterface"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.gpu::gles2::RangeIdHandlerInterface"* %11 to void (%"class.gpu::gles2::RangeIdHandlerInterface"*)***
  %15 = load void (%"class.gpu::gles2::RangeIdHandlerInterface"*)**, void (%"class.gpu::gles2::RangeIdHandlerInterface"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gpu::gles2::RangeIdHandlerInterface"*)*, void (%"class.gpu::gles2::RangeIdHandlerInterface"*)** %15, i64 1
  %17 = load void (%"class.gpu::gles2::RangeIdHandlerInterface"*)*, void (%"class.gpu::gles2::RangeIdHandlerInterface"*)** %16, align 8
  tail call void %17(%"class.gpu::gles2::RangeIdHandlerInterface"* nonnull %11) #13
  br label %18

18:                                               ; preds = %9, %13
  %19 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 5, i32 0, i32 0, i32 0
  %20 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %19, align 8
  store %"class.gpu::gles2::IdHandlerInterface"* null, %"class.gpu::gles2::IdHandlerInterface"** %19, align 8
  %21 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %20 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %24 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %24, i64 1
  %26 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %25, align 8
  tail call void %26(%"class.gpu::gles2::IdHandlerInterface"* nonnull %20) #13
  br label %27

27:                                               ; preds = %18, %22
  %28 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 4, i32 0, i32 0, i32 0
  %29 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %28, align 8
  store %"class.gpu::gles2::IdHandlerInterface"* null, %"class.gpu::gles2::IdHandlerInterface"** %28, align 8
  %30 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %29 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %33 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %33, i64 1
  %35 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %34, align 8
  tail call void %35(%"class.gpu::gles2::IdHandlerInterface"* nonnull %29) #13
  br label %36

36:                                               ; preds = %31, %27
  %37 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 3, i32 0, i32 0, i32 0
  %38 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %37, align 8
  store %"class.gpu::gles2::IdHandlerInterface"* null, %"class.gpu::gles2::IdHandlerInterface"** %37, align 8
  %39 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %38 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %42 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %42, i64 1
  %44 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %43, align 8
  tail call void %44(%"class.gpu::gles2::IdHandlerInterface"* nonnull %38) #13
  br label %45

45:                                               ; preds = %40, %36
  %46 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 2, i32 0, i32 0, i32 0
  %47 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %46, align 8
  store %"class.gpu::gles2::IdHandlerInterface"* null, %"class.gpu::gles2::IdHandlerInterface"** %46, align 8
  %48 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %47 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %51 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %51, i64 1
  %53 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %52, align 8
  tail call void %53(%"class.gpu::gles2::IdHandlerInterface"* nonnull %47) #13
  br label %54

54:                                               ; preds = %49, %45
  %55 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 1, i32 0, i32 0, i32 0
  %56 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %55, align 8
  store %"class.gpu::gles2::IdHandlerInterface"* null, %"class.gpu::gles2::IdHandlerInterface"** %55, align 8
  %57 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %56 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %60 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %60, i64 1
  %62 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %61, align 8
  tail call void %62(%"class.gpu::gles2::IdHandlerInterface"* nonnull %56) #13
  br label %63

63:                                               ; preds = %58, %54
  %64 = getelementptr inbounds %"class.gpu::gles2::ShareGroup", %"class.gpu::gles2::ShareGroup"* %0, i64 0, i32 2, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.gpu::gles2::IdHandlerInterface"*, %"class.gpu::gles2::IdHandlerInterface"** %64, align 8
  store %"class.gpu::gles2::IdHandlerInterface"* null, %"class.gpu::gles2::IdHandlerInterface"** %64, align 8
  %66 = icmp eq %"class.gpu::gles2::IdHandlerInterface"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.gpu::gles2::IdHandlerInterface"* %65 to void (%"class.gpu::gles2::IdHandlerInterface"*)***
  %69 = load void (%"class.gpu::gles2::IdHandlerInterface"*)**, void (%"class.gpu::gles2::IdHandlerInterface"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %69, i64 1
  %71 = load void (%"class.gpu::gles2::IdHandlerInterface"*)*, void (%"class.gpu::gles2::IdHandlerInterface"*)** %70, align 8
  tail call void %71(%"class.gpu::gles2::IdHandlerInterface"* nonnull %65) #13
  br label %72

72:                                               ; preds = %67, %63
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gpu31ClientDiscardableTextureManagerD1Ev(%"class.gpu::ClientDiscardableTextureManager"*) unnamed_addr #3

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles218NonReusedIdHandlerD2Ev(%"class.gpu::gles2::NonReusedIdHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::NonReusedIdHandler", %"class.gpu::gles2::NonReusedIdHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles218NonReusedIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::NonReusedIdHandler", %"class.gpu::gles2::NonReusedIdHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles218NonReusedIdHandlerD0Ev(%"class.gpu::gles2::NonReusedIdHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::NonReusedIdHandler", %"class.gpu::gles2::NonReusedIdHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles218NonReusedIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::NonReusedIdHandler", %"class.gpu::gles2::NonReusedIdHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #13
  %4 = bitcast %"class.gpu::gles2::NonReusedIdHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles218NonReusedIdHandler7MakeIdsEPNS0_19GLES2ImplementationEjiPj(%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32*) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.gpu::gles2::NonReusedIdHandler", %"class.gpu::gles2::NonReusedIdHandler"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #13
  br label %12

12:                                               ; preds = %5, %10
  %13 = icmp sgt i32 %3, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.gpu::gles2::NonReusedIdHandler", %"class.gpu::gles2::NonReusedIdHandler"* %0, i64 0, i32 2
  %16 = zext i32 %3 to i64
  %17 = and i64 %16, 1
  %18 = icmp eq i32 %3, 1
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = sub nsw i64 %16, %17
  br label %31

21:                                               ; preds = %31, %14
  %22 = phi i64 [ 0, %14 ], [ %43, %31 ]
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %15, align 8
  %26 = add i32 %25, 1
  store i32 %26, i32* %15, align 8
  %27 = add i32 %26, %2
  %28 = getelementptr inbounds i32, i32* %4, i64 %22
  store i32 %27, i32* %28, align 4
  br label %29

29:                                               ; preds = %24, %21, %12
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #13
  ret void

31:                                               ; preds = %31, %19
  %32 = phi i64 [ 0, %19 ], [ %43, %31 ]
  %33 = phi i64 [ %20, %19 ], [ %44, %31 ]
  %34 = load i32, i32* %15, align 8
  %35 = add i32 %34, 1
  store i32 %35, i32* %15, align 8
  %36 = add i32 %35, %2
  %37 = getelementptr inbounds i32, i32* %4, i64 %32
  store i32 %36, i32* %37, align 4
  %38 = or i64 %32, 1
  %39 = load i32, i32* %15, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %15, align 8
  %41 = add i32 %40, %2
  %42 = getelementptr inbounds i32, i32* %4, i64 %38
  store i32 %41, i32* %42, align 4
  %43 = add nuw nsw i64 %32, 2
  %44 = add i64 %33, -2
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %21, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles218NonReusedIdHandler7FreeIdsEPNS0_19GLES2ImplementationEiPKjMS2_FviS5_E(%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32*, i64, i64) unnamed_addr #0 comdat align 2 {
  %7 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 %5
  %9 = bitcast i8* %8 to %"class.gpu::gles2::GLES2Implementation"*
  %10 = and i64 %4, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = bitcast i8* %8 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = add i64 %4, -1
  %16 = getelementptr i8, i8* %14, i64 %15
  %17 = bitcast i8* %16 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)**
  %18 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)** %17, align 8
  br label %21

19:                                               ; preds = %6
  %20 = inttoptr i64 %4 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)*
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)* [ %18, %12 ], [ %20, %19 ]
  tail call void %22(%"class.gpu::gles2::GLES2Implementation"* %9, i32 %2, i32* %3) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles218NonReusedIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjMS2_FvjjE(%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i64, i64) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles218NonReusedIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjMS2_FvjjjE(%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, { i64, i64 }* byval({ i64, i64 }) align 8) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles218NonReusedIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjllMS2_FvjjjllE(%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64, { i64, i64 }* byval({ i64, i64 }) align 8) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles218NonReusedIdHandler11FreeContextEPNS0_19GLES2ImplementationE(%"class.gpu::gles2::NonReusedIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3gpu11IdAllocatorC1Ev(%"class.gpu::IdAllocator"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles29IdHandlerD2Ev(%"class.gpu::gles2::IdHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles29IdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 2
  tail call void @_ZN3gpu11IdAllocatorD1Ev(%"class.gpu::IdAllocator"* %3) #13
  %4 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles29IdHandlerD0Ev(%"class.gpu::gles2::IdHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles29IdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 2
  tail call void @_ZN3gpu11IdAllocatorD1Ev(%"class.gpu::IdAllocator"* %3) #13
  %4 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %4) #13
  %5 = bitcast %"class.gpu::gles2::IdHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles29IdHandler7MakeIdsEPNS0_19GLES2ImplementationEjiPj(%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32*) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #13
  br label %12

12:                                               ; preds = %5, %10
  %13 = icmp eq i32 %2, 0
  %14 = icmp sgt i32 %3, 0
  br i1 %13, label %19, label %15

15:                                               ; preds = %12
  br i1 %14, label %16, label %37

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 2
  %18 = zext i32 %3 to i64
  br label %29

19:                                               ; preds = %12
  br i1 %14, label %20, label %37

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 2
  %22 = zext i32 %3 to i64
  br label %23

23:                                               ; preds = %23, %20
  %24 = phi i64 [ 0, %20 ], [ %27, %23 ]
  %25 = tail call i32 @_ZN3gpu11IdAllocator10AllocateIDEv(%"class.gpu::IdAllocator"* %21) #13
  %26 = getelementptr inbounds i32, i32* %4, i64 %24
  store i32 %25, i32* %26, align 4
  %27 = add nuw nsw i64 %24, 1
  %28 = icmp eq i64 %27, %22
  br i1 %28, label %37, label %23

29:                                               ; preds = %29, %16
  %30 = phi i64 [ 0, %16 ], [ %35, %29 ]
  %31 = phi i32 [ %2, %16 ], [ %34, %29 ]
  %32 = tail call i32 @_ZN3gpu11IdAllocator19AllocateIDAtOrAboveEj(%"class.gpu::IdAllocator"* %17, i32 %31) #13
  %33 = getelementptr inbounds i32, i32* %4, i64 %30
  store i32 %32, i32* %33, align 4
  %34 = add i32 %32, 1
  %35 = add nuw nsw i64 %30, 1
  %36 = icmp eq i64 %35, %18
  br i1 %36, label %37, label %29

37:                                               ; preds = %29, %23, %15, %19
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles29IdHandler7FreeIdsEPNS0_19GLES2ImplementationEiPKjMS2_FviS5_E(%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32*, i64, i64) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !2

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #13
  br label %13

13:                                               ; preds = %6, %11
  %14 = icmp sgt i32 %2, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 2
  %17 = zext i32 %2 to i64
  br label %24

18:                                               ; preds = %24, %13
  %19 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %5
  %21 = bitcast i8* %20 to %"class.gpu::gles2::GLES2Implementation"*
  %22 = and i64 %4, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %37, label %30

24:                                               ; preds = %24, %15
  %25 = phi i64 [ 0, %15 ], [ %28, %24 ]
  %26 = getelementptr inbounds i32, i32* %3, i64 %25
  %27 = load i32, i32* %26, align 4
  tail call void @_ZN3gpu11IdAllocator6FreeIDEj(%"class.gpu::IdAllocator"* %16, i32 %27) #13
  %28 = add nuw nsw i64 %25, 1
  %29 = icmp eq i64 %28, %17
  br i1 %29, label %18, label %24

30:                                               ; preds = %18
  %31 = bitcast i8* %20 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = add i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)**
  %36 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)** %35, align 8
  br label %39

37:                                               ; preds = %18
  %38 = inttoptr i64 %4 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)*
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)* [ %36, %30 ], [ %38, %37 ]
  tail call void %40(%"class.gpu::gles2::GLES2Implementation"* %21, i32 %2, i32* %3) #13
  %41 = tail call %"class.gpu::gles2::GLES2CmdHelper"* @_ZNK3gpu5gles219GLES2Implementation6helperEv(%"class.gpu::gles2::GLES2Implementation"* %1) #13
  %42 = bitcast %"class.gpu::gles2::GLES2CmdHelper"* %41 to %"class.gpu::CommandBufferHelper"*
  tail call void @_ZN3gpu19CommandBufferHelper15OrderingBarrierEv(%"class.gpu::CommandBufferHelper"* %42) #13
  %43 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles29IdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjMS2_FvjjE(%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i64, i64) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !2

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #13
  br label %13

13:                                               ; preds = %6, %11
  %14 = icmp eq i32 %3, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 2
  %17 = tail call zeroext i1 @_ZN3gpu11IdAllocator10MarkAsUsedEj(%"class.gpu::IdAllocator"* %16, i32 %3) #13
  br label %18

18:                                               ; preds = %13, %15
  %19 = phi i1 [ %17, %15 ], [ true, %13 ]
  %20 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %5
  %22 = bitcast i8* %21 to %"class.gpu::gles2::GLES2Implementation"*
  %23 = and i64 %4, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = bitcast i8* %21 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = add i64 %4, -1
  %29 = getelementptr i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)**
  %31 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)** %30, align 8
  br label %34

32:                                               ; preds = %18
  %33 = inttoptr i64 %4 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)*
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)* [ %31, %25 ], [ %33, %32 ]
  tail call void %35(%"class.gpu::gles2::GLES2Implementation"* %22, i32 %2, i32 %3) #13
  %36 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #13
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles29IdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjMS2_FvjjjE(%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, { i64, i64 }* byval({ i64, i64 }) align 8) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %12) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15, !prof !2

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %16) #13
  br label %17

17:                                               ; preds = %6, %15
  %18 = icmp eq i32 %4, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 2
  %21 = tail call zeroext i1 @_ZN3gpu11IdAllocator10MarkAsUsedEj(%"class.gpu::IdAllocator"* %20, i32 %4) #13
  br label %22

22:                                               ; preds = %17, %19
  %23 = phi i1 [ %21, %19 ], [ true, %17 ]
  %24 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %10
  %26 = bitcast i8* %25 to %"class.gpu::gles2::GLES2Implementation"*
  %27 = and i64 %8, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %22
  %30 = bitcast i8* %25 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = add i64 %8, -1
  %33 = getelementptr i8, i8* %31, i64 %32
  %34 = bitcast i8* %33 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)**
  %35 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)** %34, align 8
  br label %38

36:                                               ; preds = %22
  %37 = inttoptr i64 %8 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)*
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)* [ %35, %29 ], [ %37, %36 ]
  tail call void %39(%"class.gpu::gles2::GLES2Implementation"* %26, i32 %2, i32 %3, i32 %4) #13
  %40 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #13
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles29IdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjllMS2_FvjjjllE(%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64, { i64, i64 }* byval({ i64, i64 }) align 8) unnamed_addr #0 comdat align 2 {
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0, i32 0
  %15 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %14) #13
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17, !prof !2

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %18) #13
  br label %19

19:                                               ; preds = %8, %17
  %20 = icmp eq i32 %4, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.gpu::gles2::IdHandler", %"class.gpu::gles2::IdHandler"* %0, i64 0, i32 2
  %23 = tail call zeroext i1 @_ZN3gpu11IdAllocator10MarkAsUsedEj(%"class.gpu::IdAllocator"* %22, i32 %4) #13
  br label %24

24:                                               ; preds = %19, %21
  %25 = phi i1 [ %23, %21 ], [ true, %19 ]
  %26 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %12
  %28 = bitcast i8* %27 to %"class.gpu::gles2::GLES2Implementation"*
  %29 = and i64 %10, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %24
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %10, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)**
  %37 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)** %36, align 8
  br label %40

38:                                               ; preds = %24
  %39 = inttoptr i64 %10 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)* [ %37, %31 ], [ %39, %38 ]
  tail call void %41(%"class.gpu::gles2::GLES2Implementation"* %28, i32 %2, i32 %3, i32 %4, i64 %5, i64 %6) #13
  %42 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #13
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles29IdHandler11FreeContextEPNS0_19GLES2ImplementationE(%"class.gpu::gles2::IdHandler"*, %"class.gpu::gles2::GLES2Implementation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gpu11IdAllocatorD1Ev(%"class.gpu::IdAllocator"*) unnamed_addr #3

declare i32 @_ZN3gpu11IdAllocator10AllocateIDEv(%"class.gpu::IdAllocator"*) local_unnamed_addr #1

declare i32 @_ZN3gpu11IdAllocator19AllocateIDAtOrAboveEj(%"class.gpu::IdAllocator"*, i32) local_unnamed_addr #1

declare void @_ZN3gpu11IdAllocator6FreeIDEj(%"class.gpu::IdAllocator"*, i32) local_unnamed_addr #1

declare %"class.gpu::gles2::GLES2CmdHelper"* @_ZNK3gpu5gles219GLES2Implementation6helperEv(%"class.gpu::gles2::GLES2Implementation"*) local_unnamed_addr #1

declare void @_ZN3gpu19CommandBufferHelper15OrderingBarrierEv(%"class.gpu::CommandBufferHelper"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3gpu11IdAllocator10MarkAsUsedEj(%"class.gpu::IdAllocator"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles215StrictIdHandlerD2Ev(%"class.gpu::gles2::StrictIdHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles215StrictIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base14circular_dequeIjED2Ev(%"class.base::circular_deque.100"* %3) #13
  %4 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  tail call void @_ZdlPv(i8* nonnull %5) #12
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles215StrictIdHandlerD0Ev(%"class.gpu::gles2::StrictIdHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gpu5gles215StrictIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base14circular_dequeIjED2Ev(%"class.base::circular_deque.100"* %3) #13
  %4 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  tail call void @_ZdlPv(i8* nonnull %5) #12
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %12) #13
  %13 = bitcast %"class.gpu::gles2::StrictIdHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles215StrictIdHandler7MakeIdsEPNS0_19GLES2ImplementationEjiPj(%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32*) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #13
  br label %12

12:                                               ; preds = %5, %10
  tail call void @_ZN3gpu5gles215StrictIdHandler21CollectPendingFreeIdsEPNS0_19GLES2ImplementationE(%"class.gpu::gles2::StrictIdHandler"* %0, %"class.gpu::gles2::GLES2Implementation"* %1)
  %13 = icmp sgt i32 %3, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 4, i32 0, i32 1
  %17 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 4, i32 0, i32 2
  %18 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0
  %21 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast i8** %23 to i64*
  %26 = bitcast %"class.std::__1::vector.93"* %22 to i64*
  %27 = bitcast i8** %24 to i64*
  %28 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %22, i64 0, i32 0, i32 0
  %29 = zext i32 %3 to i64
  br label %32

30:                                               ; preds = %119, %12
  %31 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #13
  ret void

32:                                               ; preds = %119, %14
  %33 = phi i64 [ 0, %14 ], [ %120, %119 ]
  %34 = load i64, i64* %16, align 8
  %35 = load i64, i64* %17, align 8
  %36 = icmp eq i64 %34, %35
  br i1 %36, label %63, label %37

37:                                               ; preds = %32
  %38 = icmp eq i64 %35, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = load i64, i64* %18, align 8
  br label %41

41:                                               ; preds = %37, %39
  %42 = phi i64 [ %40, %39 ], [ %35, %37 ]
  %43 = add i64 %42, -1
  %44 = tail call dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %19, i64 %43) #13
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds i32, i32* %4, i64 %33
  store i32 %45, i32* %46, align 4
  %47 = load i64, i64* %17, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %41
  %50 = load i64, i64* %18, align 8
  br label %51

51:                                               ; preds = %41, %49
  %52 = phi i64 [ %50, %49 ], [ %47, %41 ]
  %53 = add i64 %52, -1
  store i64 %53, i64* %17, align 8
  %54 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %19, i64 %53) #13
  %55 = load i64, i64* %17, align 8
  %56 = add i64 %55, 1
  %57 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %19, i64 %56) #13
  tail call void @_ZN4base14circular_dequeIjE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.100"* %20) #13
  %58 = load i32, i32* %46, align 4
  %59 = add i32 %58, -1
  %60 = zext i32 %59 to i64
  %61 = load i8*, i8** %21, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 2, i8* %62, align 1
  br label %119

63:                                               ; preds = %32
  %64 = load i8*, i8** %23, align 8
  %65 = load i8*, i8** %24, align 8
  %66 = icmp ult i8* %64, %65
  %67 = ptrtoint i8* %65 to i64
  br i1 %66, label %68, label %71

68:                                               ; preds = %63
  store i8 2, i8* %64, align 1
  %69 = getelementptr inbounds i8, i8* %64, i64 1
  %70 = ptrtoint i8* %69 to i64
  store i64 %70, i64* %25, align 8
  br label %113

71:                                               ; preds = %63
  %72 = ptrtoint i8* %64 to i64
  %73 = load i64, i64* %26, align 8
  %74 = sub i64 %72, %73
  %75 = add i64 %74, 1
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.std::__1::vector.93"* %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %78) #14
  unreachable

79:                                               ; preds = %71
  %80 = sub i64 %67, %73
  %81 = icmp ult i64 %80, 4611686018427387903
  br i1 %81, label %82, label %87

82:                                               ; preds = %79
  %83 = shl i64 %80, 1
  %84 = icmp ult i64 %83, %75
  %85 = select i1 %84, i64 %75, i64 %83
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %82, %79
  %88 = phi i64 [ %85, %82 ], [ 9223372036854775807, %79 ]
  %89 = tail call i8* @_Znwm(i64 %88) #12
  br label %90

90:                                               ; preds = %87, %82
  %91 = phi i64 [ %88, %87 ], [ 0, %82 ]
  %92 = phi i8* [ %89, %87 ], [ null, %82 ]
  %93 = getelementptr inbounds i8, i8* %92, i64 %74
  %94 = getelementptr inbounds i8, i8* %92, i64 %91
  %95 = ptrtoint i8* %94 to i64
  store i8 2, i8* %93, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 1
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8*, i8** %28, align 8
  %99 = load i64, i64* %25, align 8
  %100 = ptrtoint i8* %98 to i64
  %101 = sub i64 %99, %100
  %102 = sub i64 0, %101
  %103 = getelementptr inbounds i8, i8* %93, i64 %102
  %104 = ptrtoint i8* %103 to i64
  %105 = icmp sgt i64 %101, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %90
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %98, i64 %101, i1 false) #13
  %107 = load i8*, i8** %28, align 8
  br label %108

108:                                              ; preds = %106, %90
  %109 = phi i8* [ %98, %90 ], [ %107, %106 ]
  store i64 %104, i64* %26, align 8
  store i64 %97, i64* %25, align 8
  store i64 %95, i64* %27, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %108
  tail call void @_ZdlPv(i8* nonnull %109) #12
  %112 = load i64, i64* %25, align 8
  br label %113

113:                                              ; preds = %68, %108, %111
  %114 = phi i64 [ %70, %68 ], [ %97, %108 ], [ %112, %111 ]
  %115 = load i64, i64* %26, align 8
  %116 = sub i64 %114, %115
  %117 = trunc i64 %116 to i32
  %118 = getelementptr inbounds i32, i32* %4, i64 %33
  store i32 %117, i32* %118, align 4
  br label %119

119:                                              ; preds = %51, %113
  %120 = add nuw nsw i64 %33, 1
  %121 = icmp eq i64 %120, %29
  br i1 %121, label %30, label %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles215StrictIdHandler7FreeIdsEPNS0_19GLES2ImplementationEiPKjMS2_FviS5_E(%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32*, i64, i64) unnamed_addr #0 comdat align 2 {
  %7 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 %5
  %9 = bitcast i8* %8 to %"class.gpu::gles2::GLES2Implementation"*
  %10 = and i64 %4, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = bitcast i8* %8 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = add i64 %4, -1
  %16 = getelementptr i8, i8* %14, i64 %15
  %17 = bitcast i8* %16 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)**
  %18 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)** %17, align 8
  br label %21

19:                                               ; preds = %6
  %20 = inttoptr i64 %4 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)*
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32*)* [ %18, %12 ], [ %20, %19 ]
  tail call void %22(%"class.gpu::gles2::GLES2Implementation"* %9, i32 %2, i32* %3) #13
  %23 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %23, i64 0, i32 0, i32 0
  %25 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %24) #13
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27, !prof !2

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %23, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %28) #13
  br label %29

29:                                               ; preds = %21, %27
  tail call void @_ZN3gpu5gles215StrictIdHandler21CollectPendingFreeIdsEPNS0_19GLES2ImplementationE(%"class.gpu::gles2::StrictIdHandler"* %0, %"class.gpu::gles2::GLES2Implementation"* %1)
  %30 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3
  %34 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.93"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = trunc i64 %39 to i32
  %41 = icmp sgt i32 %2, 0
  br i1 %41, label %42, label %52

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %33, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.gpu::gles2::GLES2Implementation", %"class.gpu::gles2::GLES2Implementation"* %1, i64 0, i32 56, i32 0, i64 %32, i32 0
  %45 = getelementptr inbounds %"class.gpu::gles2::GLES2Implementation", %"class.gpu::gles2::GLES2Implementation"* %1, i64 0, i32 56, i32 0, i64 %32, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.gpu::gles2::GLES2Implementation", %"class.gpu::gles2::GLES2Implementation"* %1, i64 0, i32 56, i32 0, i64 %32, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast i32** %45 to i64*
  %48 = bitcast %"class.std::__1::vector"* %44 to i64*
  %49 = bitcast i32** %46 to i64*
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %44, i64 0, i32 0, i32 0
  %51 = zext i32 %2 to i64
  br label %57

52:                                               ; preds = %132, %29
  %53 = phi i8 [ 1, %29 ], [ %133, %132 ]
  %54 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %24) #13
  %55 = and i8 %53, 1
  %56 = icmp ne i8 %55, 0
  ret i1 %56

57:                                               ; preds = %132, %42
  %58 = phi i64 [ 0, %42 ], [ %134, %132 ]
  %59 = phi i8 [ 1, %42 ], [ %133, %132 ]
  %60 = getelementptr inbounds i32, i32* %3, i64 %58
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %132, label %63

63:                                               ; preds = %57
  %64 = icmp ugt i32 %61, %40
  br i1 %64, label %132, label %65

65:                                               ; preds = %63
  %66 = add i32 %61, -1
  %67 = zext i32 %66 to i64
  %68 = load i8*, i8** %43, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %67
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 2
  br i1 %71, label %72, label %132

72:                                               ; preds = %65
  store i8 1, i8* %69, align 1
  %73 = load i32*, i32** %45, align 8
  %74 = load i32*, i32** %46, align 8
  %75 = icmp eq i32* %73, %74
  %76 = ptrtoint i32* %74 to i64
  br i1 %75, label %80, label %77

77:                                               ; preds = %72
  store i32 %61, i32* %73, align 4
  %78 = getelementptr inbounds i32, i32* %73, i64 1
  %79 = ptrtoint i32* %78 to i64
  store i64 %79, i64* %47, align 8
  br label %132

80:                                               ; preds = %72
  %81 = ptrtoint i32* %73 to i64
  %82 = load i64, i64* %48, align 8
  %83 = sub i64 %81, %82
  %84 = ashr exact i64 %83, 2
  %85 = add nsw i64 %84, 1
  %86 = icmp ugt i64 %85, 4611686018427387903
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::vector"* %44 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %88) #14
  unreachable

89:                                               ; preds = %80
  %90 = sub i64 %76, %82
  %91 = ashr exact i64 %90, 2
  %92 = icmp ult i64 %91, 2305843009213693951
  br i1 %92, label %93, label %101

93:                                               ; preds = %89
  %94 = ashr exact i64 %90, 1
  %95 = icmp ult i64 %94, %85
  %96 = select i1 %95, i64 %85, i64 %94
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %93
  %99 = icmp ugt i64 %96, 4611686018427387903
  br i1 %99, label %100, label %101

100:                                              ; preds = %98
  tail call void @abort() #14
  unreachable

101:                                              ; preds = %98, %89
  %102 = phi i64 [ %96, %98 ], [ 4611686018427387903, %89 ]
  %103 = shl i64 %102, 2
  %104 = tail call i8* @_Znwm(i64 %103) #12
  %105 = bitcast i8* %104 to i32*
  br label %106

106:                                              ; preds = %101, %93
  %107 = phi i64 [ %102, %101 ], [ 0, %93 ]
  %108 = phi i32* [ %105, %101 ], [ null, %93 ]
  %109 = getelementptr inbounds i32, i32* %108, i64 %84
  %110 = getelementptr inbounds i32, i32* %108, i64 %107
  %111 = ptrtoint i32* %110 to i64
  store i32 %61, i32* %109, align 4
  %112 = getelementptr inbounds i32, i32* %109, i64 1
  %113 = ptrtoint i32* %112 to i64
  %114 = load i32*, i32** %50, align 8
  %115 = load i64, i64* %47, align 8
  %116 = ptrtoint i32* %114 to i64
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 2
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds i32, i32* %109, i64 %119
  %121 = ptrtoint i32* %120 to i64
  %122 = icmp sgt i64 %117, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %106
  %124 = bitcast i32* %120 to i8*
  %125 = bitcast i32* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %117, i1 false) #13
  %126 = load i32*, i32** %50, align 8
  br label %127

127:                                              ; preds = %123, %106
  %128 = phi i32* [ %114, %106 ], [ %126, %123 ]
  store i64 %121, i64* %48, align 8
  store i64 %113, i64* %47, align 8
  store i64 %111, i64* %49, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = bitcast i32* %128 to i8*
  tail call void @_ZdlPv(i8* %131) #12
  br label %132

132:                                              ; preds = %130, %127, %77, %57, %65, %63
  %133 = phi i8 [ 0, %63 ], [ 0, %65 ], [ %59, %57 ], [ %59, %77 ], [ %59, %127 ], [ %59, %130 ]
  %134 = add nuw nsw i64 %58, 1
  %135 = icmp eq i64 %134, %51
  br i1 %135, label %52, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles215StrictIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjMS2_FvjjE(%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i64, i64) unnamed_addr #0 comdat align 2 {
  %7 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 %5
  %9 = bitcast i8* %8 to %"class.gpu::gles2::GLES2Implementation"*
  %10 = and i64 %4, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = bitcast i8* %8 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = add i64 %4, -1
  %16 = getelementptr i8, i8* %14, i64 %15
  %17 = bitcast i8* %16 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)**
  %18 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)** %17, align 8
  br label %21

19:                                               ; preds = %6
  %20 = inttoptr i64 %4 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)*
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)* [ %18, %12 ], [ %20, %19 ]
  tail call void %22(%"class.gpu::gles2::GLES2Implementation"* %9, i32 %2, i32 %3) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles215StrictIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjMS2_FvjjjE(%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, { i64, i64 }* byval({ i64, i64 }) align 8) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %10
  %13 = bitcast i8* %12 to %"class.gpu::gles2::GLES2Implementation"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %6
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)**
  %22 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)** %21, align 8
  br label %25

23:                                               ; preds = %6
  %24 = inttoptr i64 %8 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)*
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.gpu::gles2::GLES2Implementation"* %13, i32 %2, i32 %3, i32 %4) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3gpu5gles215StrictIdHandler17MarkAsUsedForBindEPNS0_19GLES2ImplementationEjjjllMS2_FvjjjllE(%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64, { i64, i64 }* byval({ i64, i64 }) align 8) unnamed_addr #0 comdat align 2 {
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = bitcast i8* %14 to %"class.gpu::gles2::GLES2Implementation"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %8
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)**
  %24 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)** %23, align 8
  br label %27

25:                                               ; preds = %8
  %26 = inttoptr i64 %10 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32, i32, i64, i64)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.gpu::gles2::GLES2Implementation"* %15, i32 %2, i32 %3, i32 %4, i64 %5, i64 %6) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles215StrictIdHandler11FreeContextEPNS0_19GLES2ImplementationE(%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #13
  br label %9

9:                                                ; preds = %2, %7
  tail call void @_ZN3gpu5gles215StrictIdHandler21CollectPendingFreeIdsEPNS0_19GLES2ImplementationE(%"class.gpu::gles2::StrictIdHandler"* %0, %"class.gpu::gles2::GLES2Implementation"* %1)
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIjED2Ev(%"class.base::circular_deque.100"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %9, i64 %3) #13
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %9, i64 %13) #13
  %15 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %9, i64 0) #13
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %9, i64 %5) #13
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque.100"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.101", %"class.base::internal::VectorBuffer.101"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.101", %"class.base::internal::VectorBuffer.101"* %0, i64 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %1
  ret i32* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles215StrictIdHandler21CollectPendingFreeIdsEPNS0_19GLES2ImplementationE(%"class.gpu::gles2::StrictIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.gpu::gles2::GLES2CmdHelper"* @_ZNK3gpu5gles219GLES2Implementation6helperEv(%"class.gpu::gles2::GLES2Implementation"* %1) #13
  %4 = getelementptr inbounds %"class.gpu::gles2::GLES2CmdHelper", %"class.gpu::gles2::GLES2CmdHelper"* %3, i64 0, i32 0, i32 23
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %"class.gpu::gles2::GLES2Implementation", %"class.gpu::gles2::GLES2Implementation"* %1, i64 0, i32 56, i32 0, i64 %8, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %5
  br i1 %11, label %61, label %12

12:                                               ; preds = %2
  store i32 %5, i32* %9, align 8
  %13 = getelementptr inbounds %"class.gpu::gles2::GLES2Implementation", %"class.gpu::gles2::GLES2Implementation"* %1, i64 0, i32 56, i32 0, i64 %8, i32 0
  %14 = getelementptr inbounds %"class.gpu::gles2::GLES2Implementation", %"class.gpu::gles2::GLES2Implementation"* %1, i64 0, i32 56, i32 0, i64 %8, i32 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %27, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 4
  %23 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %22, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 4, i32 0, i32 2
  %26 = getelementptr inbounds %"class.gpu::gles2::StrictIdHandler", %"class.gpu::gles2::StrictIdHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  br label %29

27:                                               ; preds = %51, %12
  %28 = phi i64 [ %16, %12 ], [ %57, %51 ]
  store i64 %28, i64* %15, align 8
  br label %61

29:                                               ; preds = %20, %51
  %30 = phi i64 [ %18, %20 ], [ %57, %51 ]
  %31 = phi i64 [ 0, %20 ], [ %55, %51 ]
  %32 = phi i32 [ 0, %20 ], [ %54, %51 ]
  %33 = inttoptr i64 %30 to i32*
  %34 = getelementptr inbounds i32, i32* %33, i64 %31
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, -1
  %37 = zext i32 %36 to i64
  %38 = load i8*, i8** %21, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %37
  store i8 0, i8* %39, align 1
  tail call void @_ZN4base14circular_dequeIjE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.100"* %23, i64 1) #13
  %40 = load i64, i64* %25, align 8
  %41 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %24, i64 %40) #13
  store i32 %35, i32* %41, align 4
  %42 = load i64, i64* %25, align 8
  %43 = load i64, i64* %26, align 8
  %44 = add i64 %43, -1
  %45 = icmp eq i64 %42, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %29
  store i64 0, i64* %25, align 8
  br label %50

47:                                               ; preds = %29
  %48 = add i64 %42, 1
  store i64 %48, i64* %25, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47, %46
  br label %51

51:                                               ; preds = %47, %50
  %52 = phi i64 [ %44, %50 ], [ %42, %47 ]
  %53 = tail call dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %24, i64 %52) #13
  %54 = add i32 %32, 1
  %55 = zext i32 %54 to i64
  %56 = load i64, i64* %15, align 8
  %57 = load i64, i64* %17, align 8
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = icmp ugt i64 %59, %55
  br i1 %60, label %29, label %27

61:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIjE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.100"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer.101"*
  %5 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 4) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !4

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer.101", %"class.base::internal::VectorBuffer.101"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIjE10MoveBufferERNS_8internal12VectorBufferIjEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer.101"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer.101"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque.100"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque.100"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIjE10MoveBufferERNS_8internal12VectorBufferIjEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer.101"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer.101"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer.101", %"class.base::internal::VectorBuffer.101"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %0, i64 %1)
  %12 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer.101", %"class.base::internal::VectorBuffer.101"* %3, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_(i32* %11, i32* %12, i32* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %0, i64 %1)
  %20 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer.101", %"class.base::internal::VectorBuffer.101"* %3, i64 0, i32 0
  %22 = load i32*, i32** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_(i32* %19, i32* %20, i32* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %0, i64 0)
  %25 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %0, i64 %2)
  %26 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_(i32* %24, i32* %25, i32* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_(i32*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint i32* %0 to i64
  %6 = icmp ult i32* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint i32* %2 to i64
  %9 = ptrtoint i32* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #13
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #13
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !4

16:                                               ; preds = %7
  tail call void @llvm.trap() #13
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 14) #13
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #13
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #13
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8) #13
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint i32* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #13
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !4

45:                                               ; preds = %41
  call void @llvm.trap() #13
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast i32* %0 to i8*
  %50 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %49, i64 %48, i1 false)
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer.101"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.101", %"class.base::internal::VectorBuffer.101"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.101", %"class.base::internal::VectorBuffer.101"* %0, i64 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %1
  ret i32* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIjE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.100"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer.101"*
  %4 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 4) #13
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #13
  br i1 %31, label %32, label %33, !prof !4

32:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer.101", %"class.base::internal::VectorBuffer.101"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #13
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque.100", %"class.base::circular_deque.100"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIjE10MoveBufferERNS_8internal12VectorBufferIjEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer.101"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer.101"* nonnull %3, i64* %11, i64* %13) #13
  %39 = bitcast %"class.base::circular_deque.100"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #13
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque.100"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare void @_ZN3gpu5gles218ProgramInfoManagerC1Ev(%"class.gpu::gles2::ProgramInfoManager"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles214RangeIdHandlerD2Ev(%"class.gpu::gles2::RangeIdHandler"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gpu5gles214RangeIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 2
  tail call void @_ZN3gpu11IdAllocatorD1Ev(%"class.gpu::IdAllocator"* %3) #13
  %4 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %4) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles214RangeIdHandlerD0Ev(%"class.gpu::gles2::RangeIdHandler"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gpu5gles214RangeIdHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 2
  tail call void @_ZN3gpu11IdAllocatorD1Ev(%"class.gpu::IdAllocator"* %3) #13
  %4 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %4) #13
  %5 = bitcast %"class.gpu::gles2::RangeIdHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles214RangeIdHandler11MakeIdRangeEPNS0_19GLES2ImplementationEiPj(%"class.gpu::gles2::RangeIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #13
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #13
  br label %11

11:                                               ; preds = %4, %9
  %12 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 2
  %13 = tail call i32 @_ZN3gpu11IdAllocator15AllocateIDRangeEj(%"class.gpu::IdAllocator"* %12, i32 %2) #13
  store i32 %13, i32* %3, align 4
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles214RangeIdHandler11FreeIdRangeEPNS0_19GLES2ImplementationEjiMS2_FvjiE(%"class.gpu::gles2::RangeIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*, i32, i32, i64, i64) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !2

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #13
  br label %13

13:                                               ; preds = %6, %11
  %14 = getelementptr inbounds %"class.gpu::gles2::RangeIdHandler", %"class.gpu::gles2::RangeIdHandler"* %0, i64 0, i32 2
  tail call void @_ZN3gpu11IdAllocator11FreeIDRangeEjj(%"class.gpu::IdAllocator"* %14, i32 %2, i32 %3) #13
  %15 = bitcast %"class.gpu::gles2::GLES2Implementation"* %1 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %5
  %17 = bitcast i8* %16 to %"class.gpu::gles2::GLES2Implementation"*
  %18 = and i64 %4, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %13
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %4, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)**
  %26 = load void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)** %25, align 8
  br label %29

27:                                               ; preds = %13
  %28 = inttoptr i64 %4 to void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)*
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi void (%"class.gpu::gles2::GLES2Implementation"*, i32, i32)* [ %26, %20 ], [ %28, %27 ]
  tail call void %30(%"class.gpu::gles2::GLES2Implementation"* %17, i32 %2, i32 %3) #13
  %31 = tail call %"class.gpu::gles2::GLES2CmdHelper"* @_ZNK3gpu5gles219GLES2Implementation6helperEv(%"class.gpu::gles2::GLES2Implementation"* %1) #13
  %32 = bitcast %"class.gpu::gles2::GLES2CmdHelper"* %31 to %"class.gpu::CommandBufferHelper"*
  tail call void @_ZN3gpu19CommandBufferHelper15OrderingBarrierEv(%"class.gpu::CommandBufferHelper"* %32) #13
  %33 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles214RangeIdHandler11FreeContextEPNS0_19GLES2ImplementationE(%"class.gpu::gles2::RangeIdHandler"*, %"class.gpu::gles2::GLES2Implementation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZN3gpu11IdAllocator15AllocateIDRangeEj(%"class.gpu::IdAllocator"*, i32) local_unnamed_addr #1

declare void @_ZN3gpu11IdAllocator11FreeIDRangeEjj(%"class.gpu::IdAllocator"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu5gles218ProgramInfoManagerD1Ev(%"class.gpu::gles2::ProgramInfoManager"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
