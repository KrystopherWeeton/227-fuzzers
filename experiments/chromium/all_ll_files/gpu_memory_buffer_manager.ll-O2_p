; ModuleID = '../../gpu/command_buffer/client/gpu_memory_buffer_manager.cc'
source_filename = "../../gpu/command_buffer/client/gpu_memory_buffer_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::GpuMemoryBufferManager" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo" = type { %"class.gfx::GenericSharedMemoryId", i32, i64, %"class.base::UnguessableToken" }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.gfx::GpuMemoryBufferHandle" = type { i32, %"class.gfx::GenericSharedMemoryId", %"class.base::UnsafeSharedMemoryRegion", i32, i32, %"struct.gfx::NativePixmapHandle" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::NativePixmapPlane"* }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.9", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::map.9" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector.28" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.27 }
%union.anon.27 = type { i64 }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.30" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN3gpu22GpuMemoryBufferManagerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::GpuMemoryBufferManager"*)* @_ZN3gpu22GpuMemoryBufferManagerD2Ev to i8*), i8* bitcast (void (%"class.gpu::GpuMemoryBufferManager"*)* @_ZN3gpu22GpuMemoryBufferManagerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [38 x i8] c"gpumemorybuffer/client_0x%X/buffer_%d\00", align 1
@_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE = external constant [0 x i8], align 1

@_ZN3gpu22GpuMemoryBufferManagerD1Ev = hidden unnamed_addr alias void (%"class.gpu::GpuMemoryBufferManager"*), void (%"class.gpu::GpuMemoryBufferManager"*)* @_ZN3gpu22GpuMemoryBufferManagerD2Ev
@_ZN3gpu22GpuMemoryBufferManager19AllocatedBufferInfoC1ERKN3gfx21GpuMemoryBufferHandleERKNS2_4SizeENS2_12BufferFormatE = hidden unnamed_addr alias void (%"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"*, i32), void (%"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"*, i32)* @_ZN3gpu22GpuMemoryBufferManager19AllocatedBufferInfoC2ERKN3gfx21GpuMemoryBufferHandleERKNS2_4SizeENS2_12BufferFormatE
@_ZN3gpu22GpuMemoryBufferManager19AllocatedBufferInfoD1Ev = hidden unnamed_addr alias void (%"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"*), void (%"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"*)* @_ZN3gpu22GpuMemoryBufferManager19AllocatedBufferInfoD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu22GpuMemoryBufferManagerC2Ev(%"class.gpu::GpuMemoryBufferManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuMemoryBufferManager", %"class.gpu::GpuMemoryBufferManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu22GpuMemoryBufferManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu22GpuMemoryBufferManagerD2Ev(%"class.gpu::GpuMemoryBufferManager"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3gpu22GpuMemoryBufferManagerD0Ev(%"class.gpu::GpuMemoryBufferManager"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu22GpuMemoryBufferManager19AllocatedBufferInfoC2ERKN3gfx21GpuMemoryBufferHandleERKNS2_4SizeENS2_12BufferFormatE(%"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* nocapture, %"struct.gfx::GpuMemoryBufferHandle"* nocapture readonly dereferenceable(112), %"class.gfx::Size"* dereferenceable(8), i32) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %1, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo", %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %5, align 4
  store i32 %7, i32* %6, align 8
  %8 = getelementptr inbounds %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo", %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo", %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* %0, i64 0, i32 2
  %12 = tail call i64 @_ZN3gfx25BufferSizeForBufferFormatERKNS_4SizeENS_12BufferFormatE(%"class.gfx::Size"* dereferenceable(8) %2, i32 %3) #9
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo", %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* %0, i64 0, i32 3
  %14 = bitcast %"class.base::UnguessableToken"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #9
  %15 = load i32, i32* %8, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %1, i64 0, i32 2, i32 0, i32 3
  %19 = bitcast %"class.base::UnguessableToken"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %19, i64 16, i1 false)
  br label %20

20:                                               ; preds = %17, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare i64 @_ZN3gfx25BufferSizeForBufferFormatERKNS_4SizeENS_12BufferFormatE(%"class.gfx::Size"* dereferenceable(8), i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu22GpuMemoryBufferManager19AllocatedBufferInfoD2Ev(%"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gpu22GpuMemoryBufferManager19AllocatedBufferInfo12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEim(%"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"*, %"class.base::trace_event::ProcessMemoryDump"*, i32, i64) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo", %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* %0, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 %2, i32 %9) #9
  %10 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #9
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %4, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  %19 = icmp eq %"class.base::trace_event::MemoryAllocatorDump"* %10, null
  br i1 %19, label %36, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo", %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* %0, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* nonnull %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %22) #9
  %23 = getelementptr inbounds %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo", %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %10, i64 0, i32 1
  %28 = getelementptr inbounds %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo", %"class.gpu::GpuMemoryBufferManager::AllocatedBufferInfo"* %0, i64 0, i32 3
  call void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %27, %"class.base::UnguessableToken"* dereferenceable(16) %28, i32 0) #9
  br label %36

29:                                               ; preds = %20
  %30 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDumpGuid", %"class.base::trace_event::MemoryAllocatorDumpGuid"* %6, i64 0, i32 0
  %32 = load i32, i32* %8, align 8
  %33 = call i64 @_ZN3gfx39GetGenericSharedGpuMemoryGUIDForTracingEmNS_21GenericSharedMemoryIdE(i64 %3, i32 %32) #9
  store i64 %33, i64* %31, align 8
  %34 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedGlobalAllocatorDumpERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %6) #9
  %35 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %10, i64 0, i32 1
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %35, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %36

36:                                               ; preds = %26, %29, %18
  %37 = phi i1 [ false, %18 ], [ true, %29 ], [ true, %26 ]
  ret i1 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #6

declare void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i32) local_unnamed_addr #6

declare i64 @_ZN3gfx39GetGenericSharedGpuMemoryGUIDForTracingEmNS_21GenericSharedMemoryIdE(i64, i32) local_unnamed_addr #6

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedGlobalAllocatorDumpERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8)) local_unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
