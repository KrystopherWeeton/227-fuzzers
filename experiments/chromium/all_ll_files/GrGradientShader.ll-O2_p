; ModuleID = '../../third_party/skia/src/gpu/gradients/GrGradientShader.cpp'
source_filename = "../../third_party/skia/src/gpu/gradients/GrGradientShader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRGBA4f.74 = type { float, float, float, float }
%class.GrGradientBitmapCache = type { %class.SkMutex, i32, i32, i32, %"struct.GrGradientBitmapCache::Entry"*, %"struct.GrGradientBitmapCache::Entry"* }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"struct.GrGradientBitmapCache::Entry" = type opaque
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.SkLinearGradient = type { %class.SkGradientShaderBase.base, %struct.SkPoint, %struct.SkPoint, [4 x i8] }
%class.SkGradientShaderBase.base = type <{ %class.SkShaderBase.base, %class.SkMatrix, i32, i8, [7 x i8], %struct.SkRGBA4f*, float*, i32, [4 x i8], %class.sk_sp, %class.SkAutoSTMalloc, i8 }>
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkAutoSTMalloc = type { i8*, %union.anon }
%union.anon = type { [20 x i32] }
%struct.SkPoint = type { float, float }
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.8", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.7 }
%class.sk_sp.7 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.11, %class.SkTHashMap, %class.SkTHashMap.19, %class.SkTArray.28, %class.SkTArray.30, i32, i8, [3 x i8] }>
%class.SkTArray.11 = type { %"class.std::__1::unique_ptr.12"*, i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.30, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.31 }
%class.sk_sp.31 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.19 = type { %class.SkTHashTable.20 }
%class.SkTHashTable.20 = type { i32, i32, %class.SkAutoTArray.21 }
%class.SkAutoTArray.21 = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.66" }
%"struct.std::__1::pair.66" = type { i32, %class.SkTArray.67* }
%class.SkTArray.67 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.28 = type { %"class.std::__1::unique_ptr.29"*, i64 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.67, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.30 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.44 }
%class.SkFibBlockSizes.44 = type { i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.SkMatrixProvider = type opaque
%class.GrColorInfo = type { %class.sk_sp, %class.sk_sp.60, i32, i32 }
%class.sk_sp.60 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.SkGradientShaderBase = type <{ %class.SkShaderBase.base, %class.SkMatrix, i32, i8, [7 x i8], %struct.SkRGBA4f*, float*, i32, [4 x i8], %class.sk_sp, %class.SkAutoSTMalloc, i8, [7 x i8] }>
%class.GrBackendFormat = type { i32, i8, %union.anon.81, i32, [4 x i8] }
%union.anon.81 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp.83, %class.SkPixmap, %class.sk_sp.84 }
%class.sk_sp.83 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.84 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.129", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.85, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.85 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.86, %class.sk_sp.87, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.124" }
%class.SkNVRefCnt.86 = type { %"struct.std::__1::atomic" }
%class.sk_sp.87 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.92 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc.88 }
%class.SkAutoSTMalloc.88 = type <{ i32*, %union.anon.89, [4 x i8] }>
%union.anon.89 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.90, i8* }
%class.sk_sp.90 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.91, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.91 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.92 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.93, void (i8*)*, i8* }
%class.SkNVRefCnt.93 = type { %"struct.std::__1::atomic" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.87, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.122, %class.sk_sp.123, %class.sk_sp.123 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.102, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.113, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.94 }
%class.SkTHashTable.94 = type { i32, i32, %class.SkAutoTArray.95 }
%class.SkAutoTArray.95 = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.102 = type { %class.SkTHashTable.103 }
%class.SkTHashTable.103 = type { i32, i32, %class.SkAutoTArray.104 }
%class.SkAutoTArray.104 = type { %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.111, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.111 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.112, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.112 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.113 = type { %class.SkTHashTable.114 }
%class.SkTHashTable.114 = type { i32, i32, %class.SkAutoTArray.115 }
%class.SkAutoTArray.115 = type { %"class.std::__1::unique_ptr.116" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.122 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.80, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.80 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.123 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.124" = type { %"struct.std::__1::__atomic_base.125" }
%"struct.std::__1::__atomic_base.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__cxx_atomic_impl.127" }
%"struct.std::__1::__cxx_atomic_impl.127" = type { %"struct.std::__1::__cxx_atomic_base_impl.128" }
%"struct.std::__1::__cxx_atomic_base_impl.128" = type { i64 }
%class.GrSwizzle = type { i16 }
%"class.std::__1::__tuple_leaf.129" = type { i32 }
%class.SkAutoSTMalloc.73 = type { %struct.SkRGBA4f.74*, %union.anon.75 }
%union.anon.75 = type { [16 x i32] }
%struct.SkColor4fXformer = type { %struct.SkRGBA4f*, %class.SkSTArray.76 }
%class.SkSTArray.76 = type { %class.SkAlignedSTStorage.77, %class.SkTArray.78 }
%class.SkAlignedSTStorage.77 = type { [64 x i8] }
%class.SkTArray.78 = type { %struct.SkRGBA4f*, i64 }
%class.SkTArray.79 = type { float*, i64 }
%class.SkRadialGradient = type { %class.SkGradientShaderBase.base, %struct.SkPoint, float }
%class.SkSweepGradient = type { %class.SkGradientShaderBase.base, %struct.SkPoint, float, float, [4 x i8] }
%class.SkTwoPointConicalGradient = type { %class.SkGradientShaderBase.base, %struct.SkPoint, %struct.SkPoint, float, float, i32, %"struct.SkTwoPointConicalGradient::FocalData", [4 x i8] }
%"struct.SkTwoPointConicalGradient::FocalData" = type { float, float, i8 }

$_ZN8SkTArrayIfLb1EE12checkReallocEiNS0_11ReallocTypeE = comdat any

@_ZL17SK_PMColor4fWHITE = internal constant %struct.SkRGBA4f.74 { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@_ZTV33GrSingleIntervalGradientColorizer = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZZL23make_textured_colorizerPK8SkRGBA4fIL11SkAlphaType2EEPKfibRK8GrFPArgsE6gCache = internal global %class.GrGradientBitmapCache zeroinitializer, align 8
@_ZGVZL23make_textured_colorizerPK8SkRGBA4fIL11SkAlphaType2EEPKfibRK8GrFPArgsE6gCache = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@.str.2 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/gradients/GrGradientShader.cpp\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"Gradient won't draw. Could not create texture.\00", align 1
@_ZTV21GrTiledGradientEffect = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTV23GrClampedGradientEffect = external unnamed_addr constant { [10 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN16GrGradientShader10MakeLinearERK16SkLinearGradientRK8GrFPArgs(%class.SkLinearGradient* dereferenceable(248), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #0 {
  %3 = bitcast %class.SkLinearGradient* %0 to %class.SkGradientShaderBase*
  %4 = tail call %class.GrFragmentProcessor* @_ZN22GrLinearGradientLayout4MakeERK16SkLinearGradientRK8GrFPArgs(%class.SkLinearGradient* dereferenceable(248) %0, %struct.GrFPArgs* dereferenceable(40) %1) #8
  %5 = tail call fastcc %class.GrFragmentProcessor* @_ZL13make_gradientRK20SkGradientShaderBaseRK8GrFPArgsNSt3__110unique_ptrI19GrFragmentProcessorNS5_14default_deleteIS7_EEEE(%class.SkGradientShaderBase* dereferenceable(232) %3, %struct.GrFPArgs* dereferenceable(40) %1, %class.GrFragmentProcessor* %4)
  ret %class.GrFragmentProcessor* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.GrFragmentProcessor* @_ZL13make_gradientRK20SkGradientShaderBaseRK8GrFPArgsNSt3__110unique_ptrI19GrFragmentProcessorNS5_14default_deleteIS7_EEEE(%class.SkGradientShaderBase* nocapture readonly dereferenceable(232), %struct.GrFPArgs* nocapture readonly dereferenceable(40), %class.GrFragmentProcessor*) unnamed_addr #1 {
  %4 = alloca %class.GrBackendFormat, align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca %class.GrSurfaceProxyView, align 8
  %9 = alloca %class.SkAutoSTMalloc.73, align 8
  %10 = alloca %struct.SkColor4fXformer, align 8
  %11 = alloca %class.SkTArray.79, align 8
  %12 = ptrtoint %class.GrFragmentProcessor* %2 to i64
  %13 = icmp eq %class.GrFragmentProcessor* %2, null
  br i1 %13, label %572, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, 1
  %18 = icmp ne i8 %17, 0
  %19 = bitcast %class.SkAutoSTMalloc.73* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 72, i1 false)
  %20 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %0, i64 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = icmp ugt i32 %21, 4
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = sext i32 %21 to i64
  %25 = tail call i8* @_Z15sk_malloc_throwmm(i64 %24, i64 16) #8
  %26 = bitcast %class.SkAutoSTMalloc.73* %9 to i8**
  store i8* %25, i8** %26, align 8
  %27 = load i32, i32* %20, align 8
  br label %35

28:                                               ; preds = %14
  %29 = icmp eq i32 %21, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %class.SkAutoSTMalloc.73, %class.SkAutoSTMalloc.73* %9, i64 0, i32 1
  %32 = bitcast %class.SkAutoSTMalloc.73* %9 to %union.anon.75**
  store %union.anon.75* %31, %union.anon.75** %32, align 8
  br label %35

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.SkAutoSTMalloc.73, %class.SkAutoSTMalloc.73* %9, i64 0, i32 0
  store %struct.SkRGBA4f.74* null, %struct.SkRGBA4f.74** %34, align 8
  br label %35

35:                                               ; preds = %23, %30, %33
  %36 = phi i32 [ %27, %23 ], [ %21, %30 ], [ 0, %33 ]
  %37 = bitcast %struct.SkColor4fXformer* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 88, i1 false)
  %38 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %0, i64 0, i32 5
  %39 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %38, align 8
  %40 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %0, i64 0, i32 9, i32 0
  %41 = load %class.SkColorSpace*, %class.SkColorSpace** %40, align 8
  %42 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 4
  %43 = load %class.GrColorInfo*, %class.GrColorInfo** %42, align 8
  %44 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %43, i64 0, i32 0, i32 0
  %45 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  call void @_ZN16SkColor4fXformerC1EPK8SkRGBA4fIL11SkAlphaType3EEiP12SkColorSpaceS6_(%struct.SkColor4fXformer* nonnull %10, %struct.SkRGBA4f* %39, i32 %36, %class.SkColorSpace* %41, %class.SkColorSpace* %45) #8
  %46 = load i32, i32* %20, align 8
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %35
  %49 = getelementptr inbounds %struct.SkColor4fXformer, %struct.SkColor4fXformer* %10, i64 0, i32 0
  %50 = getelementptr inbounds %class.SkAutoSTMalloc.73, %class.SkAutoSTMalloc.73* %9, i64 0, i32 0
  br label %60

51:                                               ; preds = %106, %35
  %52 = phi i8 [ 1, %35 ], [ %107, %106 ]
  %53 = phi i32 [ %46, %35 ], [ %109, %106 ]
  %54 = bitcast %class.SkTArray.79* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #8
  %55 = getelementptr inbounds %class.SkTArray.79, %class.SkTArray.79* %11, i64 0, i32 0
  %56 = getelementptr inbounds %class.SkTArray.79, %class.SkTArray.79* %11, i64 0, i32 1
  store float* null, float** %55, align 8
  store i64 1, i64* %56, align 8
  %57 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %0, i64 0, i32 6
  %58 = load float*, float** %57, align 8
  %59 = icmp eq float* %58, null
  br i1 %59, label %112, label %167

60:                                               ; preds = %48, %106
  %61 = phi i64 [ 0, %48 ], [ %108, %106 ]
  %62 = phi i8 [ 1, %48 ], [ %107, %106 ]
  %63 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %49, align 8
  %64 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %63, i64 %61, i32 0
  %65 = load float, float* %64, align 4
  br i1 %18, label %66, label %80

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %63, i64 %61, i32 3
  %68 = load float, float* %67, align 4
  %69 = fmul float %65, %68
  %70 = insertelement <2 x float> undef, float %69, i32 0
  %71 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %63, i64 %61, i32 1
  %72 = load float, float* %71, align 4
  %73 = fmul float %68, %72
  %74 = insertelement <2 x float> %70, float %73, i32 1
  %75 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %63, i64 %61, i32 2
  %76 = load float, float* %75, align 4
  %77 = fmul float %68, %76
  %78 = insertelement <2 x float> undef, float %77, i32 0
  %79 = insertelement <2 x float> %78, float %68, i32 1
  br label %88

80:                                               ; preds = %60
  %81 = insertelement <2 x float> undef, float %65, i32 0
  %82 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %63, i64 %61, i32 1
  %83 = load float, float* %82, align 4
  %84 = insertelement <2 x float> %81, float %83, i32 1
  %85 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %63, i64 %61, i32 2
  %86 = bitcast float* %85 to <2 x float>*
  %87 = load <2 x float>, <2 x float>* %86, align 4
  br label %88

88:                                               ; preds = %80, %66
  %89 = phi <2 x float> [ %74, %66 ], [ %84, %80 ]
  %90 = phi <2 x float> [ %79, %66 ], [ %87, %80 ]
  %91 = load %struct.SkRGBA4f.74*, %struct.SkRGBA4f.74** %50, align 8
  %92 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %91, i64 %61
  %93 = bitcast %struct.SkRGBA4f.74* %92 to <2 x float>*
  store <2 x float> %89, <2 x float>* %93, align 4
  %94 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %91, i64 %61, i32 2
  %95 = bitcast float* %94 to <2 x float>*
  store <2 x float> %90, <2 x float>* %95, align 4
  %96 = and i8 %62, 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %88
  %99 = load %struct.SkRGBA4f.74*, %struct.SkRGBA4f.74** %50, align 8
  %100 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %99, i64 %61, i32 3
  %101 = load float, float* %100, align 4
  %102 = fadd float %101, -1.000000e+00
  %103 = call float @llvm.fabs.f32(float %102) #8
  %104 = fcmp ole float %103, 0x3F30000000000000
  %105 = select i1 %104, i8 %62, i8 0
  br label %106

106:                                              ; preds = %98, %88
  %107 = phi i8 [ %62, %88 ], [ %105, %98 ]
  %108 = add nuw nsw i64 %61, 1
  %109 = load i32, i32* %20, align 8
  %110 = sext i32 %109 to i64
  %111 = icmp slt i64 %108, %110
  br i1 %111, label %60, label %51

112:                                              ; preds = %51
  %113 = icmp sgt i32 %53, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %112
  store i64 1, i64* %56, align 8
  br label %167

115:                                              ; preds = %112
  %116 = sext i32 %53 to i64
  %117 = icmp slt i64 %116, 2147483647
  %118 = select i1 %117, i64 %116, i64 2147483647
  %119 = icmp sgt i64 %118, -2147483647
  %120 = select i1 %119, i64 %118, i64 -2147483647
  %121 = shl i64 %120, 33
  %122 = or i64 %121, 1
  store i64 %122, i64* %56, align 8
  %123 = and i64 %120, 2147483647
  %124 = call i8* @_Z15sk_malloc_throwmm(i64 %123, i64 4) #8
  %125 = load i64, i64* %56, align 8
  %126 = shl i64 %125, 1
  %127 = and i64 %126, 8589934588
  %128 = icmp eq i64 %127, 0
  %129 = bitcast %class.SkTArray.79* %11 to i8**
  br i1 %128, label %133, label %130

130:                                              ; preds = %115
  %131 = load i8*, i8** %129, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %124, i8* align 1 %131, i64 %127, i1 false) #8
  %132 = load i64, i64* %56, align 8
  br label %133

133:                                              ; preds = %115, %130
  %134 = phi i64 [ %132, %130 ], [ %125, %115 ]
  %135 = and i64 %134, 1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %133
  %138 = load i8*, i8** %129, align 8
  call void @_Z7sk_freePv(i8* %138) #8
  %139 = load i64, i64* %56, align 8
  br label %140

140:                                              ; preds = %133, %137
  %141 = phi i64 [ %139, %137 ], [ %134, %133 ]
  store i8* %124, i8** %129, align 8
  %142 = or i64 %141, 4294967297
  %143 = load i32, i32* %20, align 8
  %144 = bitcast i8* %124 to float*
  store i64 %142, i64* %56, align 8
  %145 = add nsw i32 %143, -1
  %146 = sitofp i32 %145 to float
  %147 = fdiv float 1.000000e+00, %146
  %148 = icmp sgt i32 %143, 0
  br i1 %148, label %151, label %167

149:                                              ; preds = %151
  %150 = load float*, float** %55, align 8
  br label %167

151:                                              ; preds = %140, %151
  %152 = phi i32 [ %164, %151 ], [ 0, %140 ]
  %153 = sitofp i32 %152 to float
  %154 = fmul float %147, %153
  call void @_ZN8SkTArrayIfLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.79* nonnull %11, i32 1, i32 1) #8
  %155 = load float*, float** %55, align 8
  %156 = load i64, i64* %56, align 8
  %157 = lshr i64 %156, 1
  %158 = and i64 %157, 2147483647
  %159 = getelementptr inbounds float, float* %155, i64 %158
  %160 = add i64 %156, 2
  %161 = and i64 %160, 4294967294
  %162 = and i64 %156, -4294967295
  %163 = or i64 %161, %162
  store i64 %163, i64* %56, align 8
  store float %154, float* %159, align 4
  %164 = add nuw nsw i32 %152, 1
  %165 = load i32, i32* %20, align 8
  %166 = icmp slt i32 %164, %165
  br i1 %166, label %151, label %149

167:                                              ; preds = %140, %149, %114, %51
  %168 = phi i32 [ %53, %51 ], [ %165, %149 ], [ %143, %140 ], [ %53, %114 ]
  %169 = phi float* [ %58, %51 ], [ %150, %149 ], [ %144, %140 ], [ null, %114 ]
  %170 = getelementptr inbounds %class.SkAutoSTMalloc.73, %class.SkAutoSTMalloc.73* %9, i64 0, i32 0
  %171 = load %struct.SkRGBA4f.74*, %struct.SkRGBA4f.74** %170, align 8
  %172 = load float, float* %169, align 4
  %173 = getelementptr inbounds float, float* %169, i64 1
  %174 = load float, float* %173, align 4
  %175 = fsub float %172, %174
  %176 = call float @llvm.fabs.f32(float %175) #8
  %177 = fcmp ole float %176, 0x3F30000000000000
  %178 = add nsw i32 %168, -2
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds float, float* %169, i64 %179
  %181 = load float, float* %180, align 4
  %182 = add nsw i32 %168, -1
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds float, float* %169, i64 %183
  %185 = load float, float* %184, align 4
  %186 = fsub float %181, %185
  %187 = call float @llvm.fabs.f32(float %186) #8
  %188 = fcmp ole float %187, 0x3F30000000000000
  %189 = zext i1 %177 to i32
  %190 = select i1 %177, i32 %182, i32 %168
  %191 = zext i1 %188 to i32
  %192 = sub i32 %190, %191
  %193 = icmp eq i32 %192, 2
  br i1 %193, label %194, label %222

194:                                              ; preds = %167
  %195 = zext i1 %177 to i64
  %196 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %195
  %197 = bitcast %struct.SkRGBA4f.74* %196 to <2 x i64>*
  %198 = load <2 x i64>, <2 x i64>* %197, align 4
  %199 = select i1 %177, i64 2, i64 1
  %200 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %199
  %201 = bitcast %struct.SkRGBA4f.74* %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 4
  %203 = call i8* @_ZN11GrProcessornwEm(i64 96) #8
  %204 = bitcast i8* %203 to i32 (...)***
  %205 = getelementptr inbounds i8, i8* %203, i64 8
  %206 = bitcast i8* %205 to i32*
  store i32 75, i32* %206, align 8
  %207 = getelementptr inbounds i8, i8* %203, i64 12
  %208 = bitcast i8* %207 to i32*
  store i32 0, i32* %208, align 4
  %209 = getelementptr inbounds i8, i8* %203, i64 24
  %210 = getelementptr inbounds i8, i8* %203, i64 16
  %211 = getelementptr inbounds i8, i8* %203, i64 32
  %212 = bitcast i8* %211 to i64*
  %213 = bitcast i8* %209 to i8**
  store i8* %210, i8** %213, align 8
  store i64 8589934592, i64* %212, align 8
  %214 = getelementptr inbounds i8, i8* %203, i64 40
  %215 = getelementptr inbounds i8, i8* %203, i64 48
  %216 = bitcast i8* %215 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %214, i8 0, i64 17, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV33GrSingleIntervalGradientColorizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %204, align 8
  %217 = getelementptr inbounds i8, i8* %203, i64 60
  %218 = bitcast i8* %217 to <2 x i64>*
  store <2 x i64> %198, <2 x i64>* %218, align 4
  %219 = getelementptr inbounds i8, i8* %203, i64 76
  %220 = bitcast i8* %219 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %220, align 4
  store i32 16, i32* %216, align 8
  %221 = ptrtoint i8* %203 to i64
  br label %375

222:                                              ; preds = %167
  %223 = icmp slt i32 %192, 17
  %224 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 0
  %225 = bitcast %struct.GrFPArgs* %1 to %class.GrContext_Base**
  %226 = load %class.GrContext_Base*, %class.GrContext_Base** %225, align 8
  %227 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %226) #8
  %228 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %227, i64 0, i32 2, i32 0
  %229 = load %class.GrShaderCaps*, %class.GrShaderCaps** %228, align 8
  %230 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %229, i64 0, i32 2
  %231 = bitcast i56* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = and i64 %232, 131072
  %234 = icmp ne i64 %233, 0
  %235 = xor i1 %223, true
  %236 = or i1 %234, %235
  br i1 %236, label %255, label %237

237:                                              ; preds = %222
  %238 = add nsw i32 %192, -1
  %239 = zext i1 %177 to i64
  %240 = sext i32 %238 to i64
  br label %241

241:                                              ; preds = %244, %237
  %242 = phi i64 [ %239, %237 ], [ %247, %244 ]
  %243 = icmp slt i64 %242, %240
  br i1 %243, label %244, label %255

244:                                              ; preds = %241
  %245 = getelementptr inbounds float, float* %169, i64 %242
  %246 = load float, float* %245, align 4
  %247 = add nuw nsw i64 %242, 1
  %248 = getelementptr inbounds float, float* %169, i64 %247
  %249 = load float, float* %248, align 4
  %250 = fsub float %246, %249
  %251 = call float @llvm.fabs.f32(float %250) #8
  %252 = fcmp ole float %251, 0x3F847AE140000000
  %253 = fcmp ogt float %251, 0x3F30000000000000
  %254 = and i1 %252, %253
  br i1 %254, label %298, label %241

255:                                              ; preds = %241, %222
  br i1 %223, label %258, label %256

256:                                              ; preds = %255
  %257 = zext i1 %177 to i64
  br label %298

258:                                              ; preds = %255
  switch i32 %192, label %291 [
    i32 3, label %259
    i32 4, label %271
  ]

259:                                              ; preds = %258
  %260 = zext i1 %177 to i64
  %261 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %260
  %262 = select i1 %177, i64 2, i64 1
  %263 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %262
  %264 = or i32 %189, 2
  %265 = zext i32 %264 to i64
  %266 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %265
  %267 = getelementptr inbounds float, float* %169, i64 %262
  %268 = load float, float* %267, align 4
  %269 = call %class.GrFragmentProcessor* @_ZN31GrDualIntervalGradientColorizer4MakeERK8SkRGBA4fIL11SkAlphaType2EES4_S4_S4_f(%struct.SkRGBA4f.74* dereferenceable(16) %261, %struct.SkRGBA4f.74* dereferenceable(16) %263, %struct.SkRGBA4f.74* dereferenceable(16) %263, %struct.SkRGBA4f.74* dereferenceable(16) %266, float %268) #8
  %270 = ptrtoint %class.GrFragmentProcessor* %269 to i64
  br label %375

271:                                              ; preds = %258
  %272 = select i1 %177, i64 2, i64 1
  %273 = getelementptr inbounds float, float* %169, i64 %272
  %274 = load float, float* %273, align 4
  %275 = or i32 %189, 2
  %276 = zext i32 %275 to i64
  %277 = getelementptr inbounds float, float* %169, i64 %276
  %278 = load float, float* %277, align 4
  %279 = fsub float %274, %278
  %280 = call float @llvm.fabs.f32(float %279) #8
  %281 = fcmp ugt float %280, 0x3F30000000000000
  br i1 %281, label %291, label %282

282:                                              ; preds = %271
  %283 = zext i1 %177 to i64
  %284 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %283
  %285 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %272
  %286 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %276
  %287 = select i1 %177, i64 4, i64 3
  %288 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %287
  %289 = call %class.GrFragmentProcessor* @_ZN31GrDualIntervalGradientColorizer4MakeERK8SkRGBA4fIL11SkAlphaType2EES4_S4_S4_f(%struct.SkRGBA4f.74* dereferenceable(16) %284, %struct.SkRGBA4f.74* dereferenceable(16) %285, %struct.SkRGBA4f.74* dereferenceable(16) %286, %struct.SkRGBA4f.74* dereferenceable(16) %288, float %274) #8
  %290 = ptrtoint %class.GrFragmentProcessor* %289 to i64
  br label %375

291:                                              ; preds = %271, %258
  %292 = zext i1 %177 to i64
  %293 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %292
  %294 = getelementptr inbounds float, float* %169, i64 %292
  %295 = call %class.GrFragmentProcessor* @_ZN33GrUnrolledBinaryGradientColorizer4MakeEPK8SkRGBA4fIL11SkAlphaType2EEPKfi(%struct.SkRGBA4f.74* %293, float* %294, i32 %192) #8
  %296 = ptrtoint %class.GrFragmentProcessor* %295 to i64
  %297 = icmp eq %class.GrFragmentProcessor* %295, null
  br i1 %297, label %298, label %375

298:                                              ; preds = %244, %256, %291
  %299 = phi i64 [ %292, %291 ], [ %257, %256 ], [ %239, %244 ]
  %300 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %171, i64 %299
  %301 = getelementptr inbounds float, float* %169, i64 %299
  %302 = bitcast %class.GrSurfaceProxyView* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %302) #8
  %303 = load atomic i8, i8* bitcast (i64* @_ZGVZL23make_textured_colorizerPK8SkRGBA4fIL11SkAlphaType2EEPKfibRK8GrFPArgsE6gCache to i8*) acquire, align 8
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %305, label %310, !prof !2

305:                                              ; preds = %298
  %306 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL23make_textured_colorizerPK8SkRGBA4fIL11SkAlphaType2EEPKfibRK8GrFPArgsE6gCache) #8
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %310, label %308

308:                                              ; preds = %305
  call void @_ZN21GrGradientBitmapCacheC1Eii(%class.GrGradientBitmapCache* nonnull @_ZZL23make_textured_colorizerPK8SkRGBA4fIL11SkAlphaType2EEPKfibRK8GrFPArgsE6gCache, i32 32, i32 256) #8
  %309 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.GrGradientBitmapCache*)* @_ZN21GrGradientBitmapCacheD1Ev to void (i8*)*), i8* bitcast (%class.GrGradientBitmapCache* @_ZZL23make_textured_colorizerPK8SkRGBA4fIL11SkAlphaType2EEPKfibRK8GrFPArgsE6gCache to i8*), i8* nonnull @__dso_handle) #8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZL23make_textured_colorizerPK8SkRGBA4fIL11SkAlphaType2EEPKfibRK8GrFPArgsE6gCache) #8
  br label %310

310:                                              ; preds = %308, %305, %298
  %311 = load %class.GrColorInfo*, %class.GrColorInfo** %42, align 8
  %312 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %311, i64 0, i32 2
  %313 = load i32, i32* %312, align 8
  switch i32 %313, label %314 [
    i32 0, label %323
    i32 1, label %323
    i32 2, label %323
    i32 3, label %323
    i32 4, label %323
    i32 5, label %323
    i32 6, label %323
    i32 7, label %323
    i32 8, label %323
    i32 9, label %315
    i32 10, label %315
    i32 11, label %323
    i32 12, label %323
    i32 13, label %315
    i32 14, label %315
    i32 15, label %315
    i32 16, label %315
    i32 21, label %323
    i32 22, label %315
    i32 23, label %323
    i32 17, label %315
    i32 18, label %315
    i32 20, label %315
    i32 19, label %315
    i32 24, label %323
    i32 25, label %323
    i32 26, label %315
    i32 27, label %315
    i32 28, label %315
    i32 30, label %323
    i32 29, label %323
  ]

314:                                              ; preds = %310
  call void @llvm.trap() #8
  unreachable

315:                                              ; preds = %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310
  %316 = bitcast %class.GrBackendFormat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %316) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %316, i8 -86, i64 72, i1 false) #8
  %317 = load %class.GrContext_Base*, %class.GrContext_Base** %225, align 8
  %318 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %317) #8
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %4, %class.GrCaps* %318, i32 14, i1 zeroext false) #8
  %319 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %4, i64 0, i32 1
  %320 = load i8, i8* %319, align 4, !range !3
  %321 = icmp eq i8 %320, 0
  %322 = select i1 %321, i32 4, i32 13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %316) #8
  br label %323

323:                                              ; preds = %315, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310
  %324 = phi i32 [ %322, %315 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ], [ 4, %310 ]
  %325 = select i1 %18, i32 2, i32 3
  %326 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %326) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 -86, i64 56, i1 false) #8
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #8
  call void @_ZN21GrGradientBitmapCache11getGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeS1_P8SkBitmap(%class.GrGradientBitmapCache* nonnull @_ZZL23make_textured_colorizerPK8SkRGBA4fIL11SkAlphaType2EEPKfibRK8GrFPArgsE6gCache, %struct.SkRGBA4f.74* %300, float* %301, i32 %192, i32 %324, i32 %325, %class.SkBitmap* nonnull %5) #8
  %327 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %327) #8
  %328 = load %class.GrRecordingContext*, %class.GrRecordingContext** %224, align 8
  call void @_Z27GrMakeCachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped(%"class.std::__1::tuple"* nonnull sret %6, %class.GrRecordingContext* %328, %class.SkBitmap* nonnull dereferenceable(56) %5, i1 zeroext false) #8
  %329 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = bitcast %"class.std::__1::tuple"* %6 to i64*
  %331 = load i64, i64* %330, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %329, align 8
  %332 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %333 = load i32, i32* %332, align 8
  %334 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %335 = load i16, i16* %334, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %327) #8
  %336 = icmp eq i64 %331, 0
  br i1 %336, label %372, label %337

337:                                              ; preds = %323
  %338 = inttoptr i64 %331 to %class.GrSurfaceProxy*
  %339 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %339) #8
  %340 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %341 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %338, i64 0, i32 6
  %342 = bitcast %struct.SkISize* %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = trunc i64 %343 to i32
  %345 = sitofp i32 %344 to float
  %346 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %346, align 16, !alias.scope !4
  %347 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %348 = bitcast float* %347 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %348, align 16, !alias.scope !4
  %349 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %349, align 16, !alias.scope !4
  store i32 16, i32* %340, align 4, !alias.scope !4
  %350 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %7, float %345, float 1.000000e+00) #8
  %351 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  store i64 %331, i64* %351, align 8
  %352 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 1
  store i32 %333, i32* %352, align 8
  %353 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 2, i32 0
  store i16 %335, i16* %353, align 4
  %354 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %8, i32 %325, %class.SkMatrix* nonnull dereferenceable(40) %7, i32 1, i32 0) #8
  %355 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 0, i32 0
  %356 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %355, align 8
  %357 = icmp eq %class.GrSurfaceProxy* %356, null
  br i1 %357, label %370, label %358

358:                                              ; preds = %337
  %359 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %356, i64 0, i32 1
  %360 = getelementptr inbounds %class.SkNVRefCnt.86, %class.SkNVRefCnt.86* %359, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = atomicrmw add i32* %360, i32 -1 acq_rel
  %362 = icmp eq i32 %361, 1
  br i1 %362, label %363, label %370

363:                                              ; preds = %358
  %364 = getelementptr inbounds %class.SkNVRefCnt.86, %class.SkNVRefCnt.86* %359, i64 -2
  %365 = bitcast %class.SkNVRefCnt.86* %364 to %class.GrSurfaceProxy*
  %366 = bitcast %class.SkNVRefCnt.86* %364 to void (%class.GrSurfaceProxy*)***
  %367 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %366, align 8
  %368 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %367, i64 1
  %369 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %368, align 8
  call void %369(%class.GrSurfaceProxy* nonnull %365) #8
  br label %370

370:                                              ; preds = %363, %358, %337
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %339) #8
  %371 = ptrtoint %class.GrFragmentProcessor* %354 to i64
  br label %373

372:                                              ; preds = %323
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %373

373:                                              ; preds = %372, %370
  %374 = phi i64 [ %371, %370 ], [ 0, %372 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %326) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %302) #8
  br label %375

375:                                              ; preds = %194, %259, %282, %291, %373
  %376 = phi i64 [ %221, %194 ], [ %374, %373 ], [ %290, %282 ], [ %270, %259 ], [ %296, %291 ]
  %377 = inttoptr i64 %376 to %class.GrFragmentProcessor*
  %378 = icmp eq i64 %376, 0
  br i1 %378, label %545, label %379

379:                                              ; preds = %375
  %380 = and i8 %52, 1
  %381 = icmp eq i8 %380, 0
  %382 = xor i1 %18, true
  %383 = and i1 %381, %382
  %384 = getelementptr inbounds %class.SkGradientShaderBase, %class.SkGradientShaderBase* %0, i64 0, i32 2
  %385 = load i32, i32* %384, align 4
  switch i32 %385, label %540 [
    i32 1, label %386
    i32 2, label %419
    i32 0, label %452
    i32 3, label %497
  ]

386:                                              ; preds = %379
  %387 = icmp ne i8 %380, 0
  %388 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 0, i32 3
  %389 = load i32, i32* %388, align 8
  %390 = and i32 %389, 2
  %391 = icmp ne i32 %390, 0
  %392 = call i8* @_ZN11GrProcessornwEm(i64 64) #8
  %393 = zext i1 %383 to i8
  %394 = lshr exact i32 %390, 1
  %395 = trunc i32 %394 to i8
  %396 = and i1 %387, %391
  %397 = select i1 %396, i32 3, i32 1
  %398 = bitcast i8* %392 to i32 (...)***
  %399 = getelementptr inbounds i8, i8* %392, i64 8
  %400 = bitcast i8* %399 to i32*
  store i32 81, i32* %400, align 8
  %401 = getelementptr inbounds i8, i8* %392, i64 12
  %402 = bitcast i8* %401 to i32*
  store i32 0, i32* %402, align 4
  %403 = getelementptr inbounds i8, i8* %392, i64 24
  %404 = getelementptr inbounds i8, i8* %392, i64 16
  %405 = getelementptr inbounds i8, i8* %392, i64 32
  %406 = bitcast i8* %405 to i64*
  %407 = bitcast i8* %403 to i8**
  store i8* %404, i8** %407, align 8
  store i64 8589934592, i64* %406, align 8
  %408 = getelementptr inbounds i8, i8* %392, i64 40
  %409 = bitcast i8* %408 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %409, align 8
  %410 = getelementptr inbounds i8, i8* %392, i64 48
  %411 = bitcast i8* %410 to i32*
  store i32 %397, i32* %411, align 8
  %412 = getelementptr inbounds i8, i8* %392, i64 52
  %413 = bitcast i8* %412 to i32*
  store i32 0, i32* %413, align 4
  %414 = getelementptr inbounds i8, i8* %392, i64 56
  store i8 0, i8* %414, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV21GrTiledGradientEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %398, align 8
  %415 = getelementptr inbounds i8, i8* %392, i64 60
  store i8 0, i8* %415, align 4
  %416 = getelementptr inbounds i8, i8* %392, i64 61
  store i8 %393, i8* %416, align 1
  %417 = getelementptr inbounds i8, i8* %392, i64 62
  store i8 %380, i8* %417, align 2
  %418 = getelementptr inbounds i8, i8* %392, i64 63
  store i8 %395, i8* %418, align 1
  br label %526

419:                                              ; preds = %379
  %420 = icmp ne i8 %380, 0
  %421 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 0, i32 3
  %422 = load i32, i32* %421, align 8
  %423 = and i32 %422, 2
  %424 = icmp ne i32 %423, 0
  %425 = call i8* @_ZN11GrProcessornwEm(i64 64) #8
  %426 = zext i1 %383 to i8
  %427 = lshr exact i32 %423, 1
  %428 = trunc i32 %427 to i8
  %429 = and i1 %420, %424
  %430 = select i1 %429, i32 3, i32 1
  %431 = bitcast i8* %425 to i32 (...)***
  %432 = getelementptr inbounds i8, i8* %425, i64 8
  %433 = bitcast i8* %432 to i32*
  store i32 81, i32* %433, align 8
  %434 = getelementptr inbounds i8, i8* %425, i64 12
  %435 = bitcast i8* %434 to i32*
  store i32 0, i32* %435, align 4
  %436 = getelementptr inbounds i8, i8* %425, i64 24
  %437 = getelementptr inbounds i8, i8* %425, i64 16
  %438 = getelementptr inbounds i8, i8* %425, i64 32
  %439 = bitcast i8* %438 to i64*
  %440 = bitcast i8* %436 to i8**
  store i8* %437, i8** %440, align 8
  store i64 8589934592, i64* %439, align 8
  %441 = getelementptr inbounds i8, i8* %425, i64 40
  %442 = bitcast i8* %441 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %442, align 8
  %443 = getelementptr inbounds i8, i8* %425, i64 48
  %444 = bitcast i8* %443 to i32*
  store i32 %430, i32* %444, align 8
  %445 = getelementptr inbounds i8, i8* %425, i64 52
  %446 = bitcast i8* %445 to i32*
  store i32 0, i32* %446, align 4
  %447 = getelementptr inbounds i8, i8* %425, i64 56
  store i8 0, i8* %447, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV21GrTiledGradientEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %431, align 8
  %448 = getelementptr inbounds i8, i8* %425, i64 60
  store i8 1, i8* %448, align 4
  %449 = getelementptr inbounds i8, i8* %425, i64 61
  store i8 %426, i8* %449, align 1
  %450 = getelementptr inbounds i8, i8* %425, i64 62
  store i8 %380, i8* %450, align 2
  %451 = getelementptr inbounds i8, i8* %425, i64 63
  store i8 %428, i8* %451, align 1
  br label %526

452:                                              ; preds = %379
  %453 = load %struct.SkRGBA4f.74*, %struct.SkRGBA4f.74** %170, align 8
  %454 = bitcast %struct.SkRGBA4f.74* %453 to <2 x i64>*
  %455 = load <2 x i64>, <2 x i64>* %454, align 4
  %456 = load i32, i32* %20, align 8
  %457 = add nsw i32 %456, -1
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds %struct.SkRGBA4f.74, %struct.SkRGBA4f.74* %453, i64 %458
  %460 = bitcast %struct.SkRGBA4f.74* %459 to <2 x i64>*
  %461 = load <2 x i64>, <2 x i64>* %460, align 4
  %462 = icmp ne i8 %380, 0
  %463 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 0, i32 3
  %464 = load i32, i32* %463, align 8
  %465 = and i32 %464, 2
  %466 = icmp ne i32 %465, 0
  %467 = call i8* @_ZN11GrProcessornwEm(i64 96) #8
  %468 = zext i1 %383 to i8
  %469 = lshr exact i32 %465, 1
  %470 = trunc i32 %469 to i8
  %471 = and i1 %462, %466
  %472 = select i1 %471, i32 3, i32 1
  %473 = bitcast i8* %467 to i32 (...)***
  %474 = getelementptr inbounds i8, i8* %467, i64 8
  %475 = bitcast i8* %474 to i32*
  store i32 30, i32* %475, align 8
  %476 = getelementptr inbounds i8, i8* %467, i64 12
  %477 = bitcast i8* %476 to i32*
  store i32 0, i32* %477, align 4
  %478 = getelementptr inbounds i8, i8* %467, i64 24
  %479 = getelementptr inbounds i8, i8* %467, i64 16
  %480 = getelementptr inbounds i8, i8* %467, i64 32
  %481 = bitcast i8* %480 to i64*
  %482 = bitcast i8* %478 to i8**
  store i8* %479, i8** %482, align 8
  store i64 8589934592, i64* %481, align 8
  %483 = getelementptr inbounds i8, i8* %467, i64 40
  %484 = bitcast i8* %483 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %484, align 8
  %485 = getelementptr inbounds i8, i8* %467, i64 48
  %486 = bitcast i8* %485 to i32*
  store i32 %472, i32* %486, align 8
  %487 = getelementptr inbounds i8, i8* %467, i64 52
  %488 = bitcast i8* %487 to i32*
  store i32 0, i32* %488, align 4
  %489 = getelementptr inbounds i8, i8* %467, i64 56
  store i8 0, i8* %489, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23GrClampedGradientEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %473, align 8
  %490 = getelementptr inbounds i8, i8* %467, i64 60
  %491 = bitcast i8* %490 to <2 x i64>*
  store <2 x i64> %455, <2 x i64>* %491, align 4
  %492 = getelementptr inbounds i8, i8* %467, i64 76
  %493 = bitcast i8* %492 to <2 x i64>*
  store <2 x i64> %461, <2 x i64>* %493, align 4
  %494 = getelementptr inbounds i8, i8* %467, i64 92
  store i8 %468, i8* %494, align 4
  %495 = getelementptr inbounds i8, i8* %467, i64 93
  store i8 %380, i8* %495, align 1
  %496 = getelementptr inbounds i8, i8* %467, i64 94
  store i8 %470, i8* %496, align 2
  br label %526

497:                                              ; preds = %379
  %498 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 0, i32 3
  %499 = load i32, i32* %498, align 8
  %500 = call i8* @_ZN11GrProcessornwEm(i64 96) #8
  %501 = zext i1 %383 to i8
  %502 = lshr i32 %499, 1
  %503 = trunc i32 %502 to i8
  %504 = and i8 %503, 1
  %505 = bitcast i8* %500 to i32 (...)***
  %506 = getelementptr inbounds i8, i8* %500, i64 8
  %507 = bitcast i8* %506 to i32*
  store i32 30, i32* %507, align 8
  %508 = getelementptr inbounds i8, i8* %500, i64 12
  %509 = bitcast i8* %508 to i32*
  store i32 0, i32* %509, align 4
  %510 = getelementptr inbounds i8, i8* %500, i64 24
  %511 = getelementptr inbounds i8, i8* %500, i64 16
  %512 = getelementptr inbounds i8, i8* %500, i64 32
  %513 = bitcast i8* %512 to i64*
  %514 = bitcast i8* %510 to i8**
  store i8* %511, i8** %514, align 8
  store i64 8589934592, i64* %513, align 8
  %515 = getelementptr inbounds i8, i8* %500, i64 40
  %516 = bitcast i8* %515 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %516, align 8
  %517 = getelementptr inbounds i8, i8* %500, i64 48
  %518 = bitcast i8* %517 to i32*
  store i32 1, i32* %518, align 8
  %519 = getelementptr inbounds i8, i8* %500, i64 52
  %520 = bitcast i8* %519 to i32*
  store i32 0, i32* %520, align 4
  %521 = getelementptr inbounds i8, i8* %500, i64 56
  store i8 0, i8* %521, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV23GrClampedGradientEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %505, align 8
  %522 = getelementptr inbounds i8, i8* %500, i64 60
  %523 = getelementptr inbounds i8, i8* %500, i64 92
  call void @llvm.memset.p0i8.i64(i8* align 4 %522, i8 0, i64 32, i1 false)
  store i8 %501, i8* %523, align 4
  %524 = getelementptr inbounds i8, i8* %500, i64 93
  store i8 0, i8* %524, align 1
  %525 = getelementptr inbounds i8, i8* %500, i64 94
  store i8 %504, i8* %525, align 2
  br label %526

526:                                              ; preds = %497, %452, %419, %386
  %527 = phi i8* [ %500, %497 ], [ %467, %452 ], [ %425, %419 ], [ %392, %386 ]
  %528 = bitcast i8* %527 to %class.GrFragmentProcessor*
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %528, %class.GrFragmentProcessor* nonnull %377, i64 3) #8
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %528, %class.GrFragmentProcessor* nonnull %2, i64 1) #8
  %529 = icmp eq i8* %527, null
  br i1 %529, label %545, label %530

530:                                              ; preds = %526
  %531 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 3
  %532 = load i8, i8* %531, align 8, !range !3
  %533 = icmp eq i8 %532, 0
  br i1 %533, label %537, label %534

534:                                              ; preds = %530
  %535 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13OverrideInputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EEb(%class.GrFragmentProcessor* nonnull %528, %struct.SkRGBA4f.74* nonnull dereferenceable(16) @_ZL17SK_PMColor4fWHITE, i1 zeroext false) #8
  %536 = ptrtoint %class.GrFragmentProcessor* %535 to i64
  br label %545

537:                                              ; preds = %530
  %538 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor20MulChildByInputAlphaENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.GrFragmentProcessor* nonnull %528) #8
  %539 = ptrtoint %class.GrFragmentProcessor* %538 to i64
  br label %545

540:                                              ; preds = %379
  %541 = inttoptr i64 %376 to void (%class.GrFragmentProcessor*)***
  %542 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %541, align 8
  %543 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %542, i64 1
  %544 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %543, align 8
  call void %544(%class.GrFragmentProcessor* nonnull %377) #8
  br label %545

545:                                              ; preds = %375, %526, %537, %534, %540
  %546 = phi i64 [ 0, %540 ], [ %539, %537 ], [ %536, %534 ], [ 0, %526 ], [ 0, %375 ]
  %547 = phi i64 [ %12, %540 ], [ 0, %537 ], [ 0, %534 ], [ 0, %526 ], [ %12, %375 ]
  %548 = load i64, i64* %56, align 8
  %549 = and i64 %548, 1
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %554, label %551

551:                                              ; preds = %545
  %552 = bitcast %class.SkTArray.79* %11 to i8**
  %553 = load i8*, i8** %552, align 8
  call void @_Z7sk_freePv(i8* %553) #8
  br label %554

554:                                              ; preds = %545, %551
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #8
  %555 = getelementptr inbounds %struct.SkColor4fXformer, %struct.SkColor4fXformer* %10, i64 0, i32 1, i32 0, i32 0, i64 72
  %556 = bitcast i8* %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = and i64 %557, 1
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %564, label %560

560:                                              ; preds = %554
  %561 = getelementptr inbounds %struct.SkColor4fXformer, %struct.SkColor4fXformer* %10, i64 0, i32 1, i32 0, i32 0, i64 64
  %562 = bitcast i8* %561 to i8**
  %563 = load i8*, i8** %562, align 8
  call void @_Z7sk_freePv(i8* %563) #8
  br label %564

564:                                              ; preds = %554, %560
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %37) #8
  %565 = load %struct.SkRGBA4f.74*, %struct.SkRGBA4f.74** %170, align 8
  %566 = getelementptr inbounds %class.SkAutoSTMalloc.73, %class.SkAutoSTMalloc.73* %9, i64 0, i32 1
  %567 = bitcast %union.anon.75* %566 to %struct.SkRGBA4f.74*
  %568 = icmp eq %struct.SkRGBA4f.74* %565, %567
  br i1 %568, label %571, label %569

569:                                              ; preds = %564
  %570 = bitcast %struct.SkRGBA4f.74* %565 to i8*
  call void @_Z7sk_freePv(i8* %570) #8
  br label %571

571:                                              ; preds = %564, %569
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #8
  br label %572

572:                                              ; preds = %3, %571
  %573 = phi i64 [ %547, %571 ], [ %12, %3 ]
  %574 = phi i64 [ %546, %571 ], [ 0, %3 ]
  %575 = icmp eq i64 %573, 0
  br i1 %575, label %582, label %576

576:                                              ; preds = %572
  %577 = inttoptr i64 %573 to %class.GrFragmentProcessor*
  %578 = inttoptr i64 %573 to void (%class.GrFragmentProcessor*)***
  %579 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %578, align 8
  %580 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %579, i64 1
  %581 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %580, align 8
  call void %581(%class.GrFragmentProcessor* nonnull %577) #8
  br label %582

582:                                              ; preds = %572, %576
  %583 = inttoptr i64 %574 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %583
}

declare %class.GrFragmentProcessor* @_ZN22GrLinearGradientLayout4MakeERK16SkLinearGradientRK8GrFPArgs(%class.SkLinearGradient* dereferenceable(248), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN16GrGradientShader10MakeRadialERK16SkRadialGradientRK8GrFPArgs(%class.SkRadialGradient* dereferenceable(240), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #0 {
  %3 = bitcast %class.SkRadialGradient* %0 to %class.SkGradientShaderBase*
  %4 = tail call %class.GrFragmentProcessor* @_ZN22GrRadialGradientLayout4MakeERK16SkRadialGradientRK8GrFPArgs(%class.SkRadialGradient* dereferenceable(240) %0, %struct.GrFPArgs* dereferenceable(40) %1) #8
  %5 = tail call fastcc %class.GrFragmentProcessor* @_ZL13make_gradientRK20SkGradientShaderBaseRK8GrFPArgsNSt3__110unique_ptrI19GrFragmentProcessorNS5_14default_deleteIS7_EEEE(%class.SkGradientShaderBase* dereferenceable(232) %3, %struct.GrFPArgs* dereferenceable(40) %1, %class.GrFragmentProcessor* %4)
  ret %class.GrFragmentProcessor* %5
}

declare %class.GrFragmentProcessor* @_ZN22GrRadialGradientLayout4MakeERK16SkRadialGradientRK8GrFPArgs(%class.SkRadialGradient* dereferenceable(240), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN16GrGradientShader9MakeSweepERK15SkSweepGradientRK8GrFPArgs(%class.SkSweepGradient* dereferenceable(248), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #0 {
  %3 = bitcast %class.SkSweepGradient* %0 to %class.SkGradientShaderBase*
  %4 = tail call %class.GrFragmentProcessor* @_ZN21GrSweepGradientLayout4MakeERK15SkSweepGradientRK8GrFPArgs(%class.SkSweepGradient* dereferenceable(248) %0, %struct.GrFPArgs* dereferenceable(40) %1) #8
  %5 = tail call fastcc %class.GrFragmentProcessor* @_ZL13make_gradientRK20SkGradientShaderBaseRK8GrFPArgsNSt3__110unique_ptrI19GrFragmentProcessorNS5_14default_deleteIS7_EEEE(%class.SkGradientShaderBase* dereferenceable(232) %3, %struct.GrFPArgs* dereferenceable(40) %1, %class.GrFragmentProcessor* %4)
  ret %class.GrFragmentProcessor* %5
}

declare %class.GrFragmentProcessor* @_ZN21GrSweepGradientLayout4MakeERK15SkSweepGradientRK8GrFPArgs(%class.SkSweepGradient* dereferenceable(248), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN16GrGradientShader11MakeConicalERK25SkTwoPointConicalGradientRK8GrFPArgs(%class.SkTwoPointConicalGradient* dereferenceable(272), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #0 {
  %3 = bitcast %class.SkTwoPointConicalGradient* %0 to %class.SkGradientShaderBase*
  %4 = tail call %class.GrFragmentProcessor* @_ZN31GrTwoPointConicalGradientLayout4MakeERK25SkTwoPointConicalGradientRK8GrFPArgs(%class.SkTwoPointConicalGradient* dereferenceable(272) %0, %struct.GrFPArgs* dereferenceable(40) %1) #8
  %5 = tail call fastcc %class.GrFragmentProcessor* @_ZL13make_gradientRK20SkGradientShaderBaseRK8GrFPArgsNSt3__110unique_ptrI19GrFragmentProcessorNS5_14default_deleteIS7_EEEE(%class.SkGradientShaderBase* dereferenceable(232) %3, %struct.GrFPArgs* dereferenceable(40) %1, %class.GrFragmentProcessor* %4)
  ret %class.GrFragmentProcessor* %5
}

declare %class.GrFragmentProcessor* @_ZN31GrTwoPointConicalGradientLayout4MakeERK25SkTwoPointConicalGradientRK8GrFPArgs(%class.SkTwoPointConicalGradient* dereferenceable(272), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN16SkColor4fXformerC1EPK8SkRGBA4fIL11SkAlphaType3EEiP12SkColorSpaceS6_(%struct.SkColor4fXformer*, %struct.SkRGBA4f*, i32, %class.SkColorSpace*, %class.SkColorSpace*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13OverrideInputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EEb(%class.GrFragmentProcessor*, %struct.SkRGBA4f.74* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor20MulChildByInputAlphaENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.GrFragmentProcessor*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIfLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.79*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.79, %class.SkTArray.79* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 4) #8
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 1
  %47 = and i64 %46, 8589934588
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray.79* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #8
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray.79* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #8
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN31GrDualIntervalGradientColorizer4MakeERK8SkRGBA4fIL11SkAlphaType2EES4_S4_S4_f(%struct.SkRGBA4f.74* dereferenceable(16), %struct.SkRGBA4f.74* dereferenceable(16), %struct.SkRGBA4f.74* dereferenceable(16), %struct.SkRGBA4f.74* dereferenceable(16), float) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN33GrUnrolledBinaryGradientColorizer4MakeEPK8SkRGBA4fIL11SkAlphaType2EEPKfi(%struct.SkRGBA4f.74*, float*, i32) local_unnamed_addr #2

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

declare void @_ZN21GrGradientBitmapCacheC1Eii(%class.GrGradientBitmapCache*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN21GrGradientBitmapCacheD1Ev(%class.GrGradientBitmapCache*) unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* sret, %class.GrCaps*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN21GrGradientBitmapCache11getGradientEPK8SkRGBA4fIL11SkAlphaType2EEPKfi11SkColorTypeS1_P8SkBitmap(%class.GrGradientBitmapCache*, %struct.SkRGBA4f.74*, float*, i32, i32, i32, %class.SkBitmap*) local_unnamed_addr #2

declare void @_Z27GrMakeCachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped(%"class.std::__1::tuple"* sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext) local_unnamed_addr #2

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #7

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!6 = distinct !{!6, !"_ZN8SkMatrix5ScaleEff"}
