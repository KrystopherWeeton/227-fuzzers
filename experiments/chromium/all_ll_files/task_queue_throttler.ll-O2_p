; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/throttling/task_queue_throttler.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/throttling/task_queue_throttler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::scheduler::TaskQueueThrottler" = type { %"class.blink::scheduler::BudgetPoolController", %"class.WTF::HashMap", %"class.base::RepeatingCallback.86", %class.scoped_refptr.71, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.106", %"class.blink::scheduler::CancelableClosureHolder", %"class.absl::optional", i8, [7 x i8], %"class.WTF::HashMap.114", %"class.base::WeakPtrFactory.125" }
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.base::sequence_manager::TaskQueue"*, %"class.std::__1::unique_ptr.73" }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr", %"class.base::WeakPtr", %class.scoped_refptr, %class.scoped_refptr.71, i32, i32, i8*, %"class.base::WeakPtrFactory.72" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr, %class.scoped_refptr.2, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.2 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.3", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.4", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.9, i8, [7 x i8] }>
%class.scoped_refptr.9 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.10", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.11" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.14" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.19", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.24", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.54", %"class.base::RepeatingCallback.55", %"class.absl::optional.56", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.31", %"struct.std::__1::less" }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.35" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.33, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.33 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34" }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.40", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.42" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.47 }
%class.scoped_refptr.47 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.48", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.48" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.49" }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i8 }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.54" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.55" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.61", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.126", i64, [64 x %"class.base::RepeatingCallback.112"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.61", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__cxx_atomic_impl.129" }
%"struct.std::__1::__cxx_atomic_impl.129" = type { %"struct.std::__1::__cxx_atomic_base_impl.130" }
%"struct.std::__1::__cxx_atomic_base_impl.130" = type { i64 }
%"class.base::RepeatingCallback.112" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.1", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.72" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::scheduler::TaskQueueThrottler::Metadata"* }
%"class.blink::scheduler::TaskQueueThrottler::Metadata" = type { %"class.base::sequence_manager::TaskQueue::Observer", %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.WTF::HashSet", %"class.base::TimeTicks" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.76" }
%"class.WTF::HashTable.76" = type <{ %"class.blink::scheduler::BudgetPool"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::BudgetPool" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.79", i8, [7 x i8] }>
%"class.WTF::HashSet.79" = type { %"class.WTF::HashTable.80" }
%"class.WTF::HashTable.80" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.base::RepeatingCallback.86" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.71 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::scheduler::ThrottledTimeDomain"* }
%"class.blink::scheduler::ThrottledTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.absl::optional" }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.112", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.112", %"class.base::WeakPtrFactory.113" }
%"class.base::WeakPtrFactory.113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.WTF::HashMap.114" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ %"struct.WTF::KeyValuePair.118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.118" = type { %"class.blink::scheduler::BudgetPool"*, %"class.std::__1::unique_ptr.119" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::scheduler::BudgetPool"* }
%"class.base::WeakPtrFactory.125" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.102", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { float }
%"class.base::WeakPtr.131" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::sequence_manager::LazyNow" = type { %"class.base::TickClock"*, %"class.absl::optional" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::internal::RetainedRefWrapper" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.base::sequence_manager::TaskQueue"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34", [4 x i8] }>
%"struct.base::internal::BindState.202" = type { %"class.base::internal::BindStateBase", %"class.base::RepeatingCallback.86", %"class.std::__1::tuple.203" }
%"class.std::__1::tuple.203" = type { %"struct.std::__1::__tuple_impl.204" }
%"struct.std::__1::__tuple_impl.204" = type { %"class.std::__1::__tuple_leaf.205", %"class.std::__1::__tuple_leaf.206" }
%"class.std::__1::__tuple_leaf.205" = type { %"class.base::internal::RetainedRefWrapper" }
%"class.std::__1::__tuple_leaf.206" = type { %"class.base::TimeTicks" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.179", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.181", i64, i64 }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.160" }
%"class.std::__1::list.160" = type { %"class.std::__1::__list_imp.161" }
%"class.std::__1::__list_imp.161" = type { %"struct.std::__1::__list_node_base.162", %"class.std::__1::__compressed_pair.163" }
%"struct.std::__1::__list_node_base.162" = type { %"struct.std::__1::__list_node_base.162"*, %"struct.std::__1::__list_node_base.162"* }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.136", %"class.absl::optional.136", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.141" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.79", i8 }>
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.base::RepeatingCallback.141" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::scheduler::CPUTimeBudgetPool"* }
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::scheduler::WakeUpBudgetPool"* }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.171 }
%union.anon.171 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIlEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS5_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS5_EEEEEFvS8_S9_EE3RunEPNS0_13BindStateBaseES8_OS9_ = comdat any

$_ZN4base8internal9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE = comdat any

$_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISN_SI_SO_EERS4_SE_EENS_18HashTableAddResultISP_SF_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE6ExpandEPSF_ = comdat any

$_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE8RehashToEPSF_jSQ_ = comdat any

$_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZNK3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS4_EES6_EE6CreateIRS8_JSA_RS6_EEEPSB_PFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS5_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS4_EES6_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS5_EES7_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_RS4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPNS2_17CPUTimeBudgetPoolENS7_ISP_NS8_ISP_EEEEEENS_18HashTableAddResultISL_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_ = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPNS2_16WakeUpBudgetPoolENS7_ISP_NS8_ISP_EEEEEENS_18HashTableAddResultISL_SB_EEOT0_OT1_ = comdat any

$_ZN8perfetto8internal9WriteImplIPN5blink9scheduler18TaskQueueThrottler8MetadataEEEDTcmclsr17TraceFormatTraitsINS_4base12remove_cvrefIT_E4typeEEE14WriteIntoTraceclL_ZNSt3__17declvalINS_11TracedValueEEEDTclsr3std3__1E9__declvalIS9_ELi0EEEvEEclsr3stdE7declvalIS9_EEEcvv_EENS7_12priority_tagILm3EEESE_OS9_ = comdat any

$_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

@_ZTVN5blink9scheduler18TaskQueueThrottlerE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::TaskQueueThrottler"*)* @_ZN5blink9scheduler18TaskQueueThrottlerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::TaskQueueThrottler"*)* @_ZN5blink9scheduler18TaskQueueThrottlerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*)* @_ZN5blink9scheduler18TaskQueueThrottler20AddQueueToBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE to i8*), i8* bitcast (void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*)* @_ZN5blink9scheduler18TaskQueueThrottler25RemoveQueueFromBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE to i8*), i8* bitcast (void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::BudgetPool"*)* @_ZN5blink9scheduler18TaskQueueThrottler20UnregisterBudgetPoolEPNS0_10BudgetPoolE to i8*), i8* bitcast (void (%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*)* @_ZN5blink9scheduler18TaskQueueThrottler35UpdateQueueSchedulingLifecycleStateEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE to i8*), i8* bitcast (i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)* @_ZNK5blink9scheduler18TaskQueueThrottler11IsThrottledEPN4base16sequence_manager9TaskQueueE to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [38 x i8] c"TaskQueueThrottler_TaskQueueThrottled\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"task_queue\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"TaskQueueThrottler_TaskQueueUnthrottled\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"OnQueueNextWakeUpChanged\00", align 1
@.str.4 = private unnamed_addr constant [94 x i8] c"../../third_party/blink/renderer/platform/scheduler/common/throttling/task_queue_throttler.cc\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"TaskQueueThrottler::OnQueueNextWakeUpChanged\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"TaskQueueThrottler::PumpThrottledTasks\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"TaskQueueThrottler::MaybeSchedulePumpThrottledTasks\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"delay_till_next_pump_ms\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"UpdateQueueSchedulingLifecycleStateInternal\00", align 1
@.str.10 = private unnamed_addr constant [62 x i8] c"TaskQueueThrottler::PumpThrottledTasks_ExpensiveTaskThrottled\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"throttle_time_in_seconds\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c"next_throttled_tasks_pump_in_seconds\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"allow_throttling\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"time_budget_pools\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"queue_details\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"queue_name\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"metadata\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"TaskQueueThrottler_DisableThrottling\00", align 1
@.str.19 = private unnamed_addr constant [36 x i8] c"TaskQueueThrottler_EnableThrottling\00", align 1
@_ZTVN5blink9scheduler18TaskQueueThrottler8MetadataE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)* @_ZN5blink9scheduler18TaskQueueThrottler8MetadataD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)* @_ZN5blink9scheduler18TaskQueueThrottler8MetadataD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*, i64)* @_ZN5blink9scheduler18TaskQueueThrottler8Metadata24OnQueueNextWakeUpChangedEN4base9TimeTicksE to i8*)] }, align 8
@.str.20 = private unnamed_addr constant [21 x i8] c"throttling_ref_count\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"next_granted_run_time\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9scheduler10BudgetPoolEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::scheduler::BudgetPool *]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN4base16sequence_manager9TaskQueueENSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEEEEPKcv = private unnamed_addr constant [248 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<base::sequence_manager::TaskQueue *, std::__1::unique_ptr<blink::scheduler::TaskQueueThrottler::Metadata, std::__1::default_delete<blink::scheduler::TaskQueueThrottler::Metadata> > >]\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9scheduler10BudgetPoolENSt3__110unique_ptrIS4_NS6_14default_deleteIS4_EEEEEEEEPKcv = private unnamed_addr constant [207 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::scheduler::BudgetPool *, std::__1::unique_ptr<blink::scheduler::BudgetPool, std::__1::default_delete<blink::scheduler::BudgetPool> > >]\00", align 1

@_ZN5blink9scheduler18TaskQueueThrottlerC1EPNS0_19ThreadSchedulerImplEPNS0_27TraceableVariableControllerE = hidden unnamed_addr alias void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*), void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*)* @_ZN5blink9scheduler18TaskQueueThrottlerC2EPNS0_19ThreadSchedulerImplEPNS0_27TraceableVariableControllerE
@_ZN5blink9scheduler18TaskQueueThrottlerD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::TaskQueueThrottler"*), void (%"class.blink::scheduler::TaskQueueThrottler"*)* @_ZN5blink9scheduler18TaskQueueThrottlerD2Ev
@_ZN5blink9scheduler18TaskQueueThrottler8MetadataC1EPN4base16sequence_manager9TaskQueueEPS1_ = hidden unnamed_addr alias void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::TaskQueueThrottler"*), void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::TaskQueueThrottler"*)* @_ZN5blink9scheduler18TaskQueueThrottler8MetadataC2EPN4base16sequence_manager9TaskQueueEPS1_
@_ZN5blink9scheduler18TaskQueueThrottler8MetadataD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*), void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)* @_ZN5blink9scheduler18TaskQueueThrottler8MetadataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottlerC2EPNS0_19ThreadSchedulerImplEPNS0_27TraceableVariableControllerE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.base::RepeatingCallback.112", align 8
  %7 = alloca %"class.base::WeakPtr.131", align 8
  %8 = alloca %"class.base::RepeatingCallback.86", align 8
  %9 = alloca %"class.base::WeakPtr.131", align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler18TaskQueueThrottlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %12 = bitcast %"class.WTF::HashMap"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #10
  %13 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::RepeatingCallback.86", %"class.base::RepeatingCallback.86"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %15 = bitcast %"class.blink::scheduler::ThreadSchedulerImpl"* %1 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)***
  %16 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %16, i64 28
  %18 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %17, align 8
  %19 = tail call %"class.base::SingleThreadTaskRunner"* %18(%"class.blink::scheduler::ThreadSchedulerImpl"* %1) #10
  %20 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 3, i32 0
  store %"class.base::SingleThreadTaskRunner"* %19, %"class.base::SingleThreadTaskRunner"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 4
  store %"class.blink::scheduler::ThreadSchedulerImpl"* %1, %"class.blink::scheduler::ThreadSchedulerImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 5
  store %"class.blink::scheduler::TraceableVariableController"* %2, %"class.blink::scheduler::TraceableVariableController"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 6
  %24 = bitcast %"class.blink::scheduler::ThreadSchedulerImpl"* %1 to %"class.base::TickClock"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)***
  %25 = load %"class.base::TickClock"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)**, %"class.base::TickClock"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.base::TickClock"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %25, i64 32
  %27 = load %"class.base::TickClock"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %26, align 8
  %28 = tail call %"class.base::TickClock"* %27(%"class.blink::scheduler::ThreadSchedulerImpl"* %1) #10
  store %"class.base::TickClock"* %28, %"class.base::TickClock"** %23, align 8
  %29 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 7
  %30 = tail call i8* @_Znwm(i64 72) #11
  %31 = bitcast i8* %30 to %"class.blink::scheduler::ThrottledTimeDomain"*
  tail call void @_ZN5blink9scheduler19ThrottledTimeDomainC1Ev(%"class.blink::scheduler::ThrottledTimeDomain"* nonnull %31) #10
  %32 = ptrtoint i8* %30 to i64
  %33 = bitcast %"class.std::__1::unique_ptr.106"* %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 8
  tail call void @_ZN5blink9scheduler23CancelableClosureHolderC1Ev(%"class.blink::scheduler::CancelableClosureHolder"* %34) #10
  %35 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 10
  store i8 1, i8* %36, align 8
  %37 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12
  %38 = bitcast %"class.WTF::HashMap.114"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 20, i1 false) #10
  %39 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 13
  %40 = getelementptr inbounds %"class.base::WeakPtrFactory.125", %"class.base::WeakPtrFactory.125"* %39, i64 0, i32 0
  %41 = ptrtoint %"class.blink::scheduler::TaskQueueThrottler"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %40, i64 %41) #10
  %42 = bitcast %"class.base::RepeatingCallback.112"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #10
  %43 = bitcast %"class.base::WeakPtr.131"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #10
  %44 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10, !noalias !2
  %45 = getelementptr inbounds %"class.base::WeakPtrFactory.125", %"class.base::WeakPtrFactory.125"* %39, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %45) #10, !noalias !2
  %46 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 13, i32 0, i32 1
  %47 = load i64, i64* %46, align 8, !noalias !2
  %48 = getelementptr inbounds %"class.base::WeakPtr.131", %"class.base::WeakPtr.131"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %48, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %47) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10, !noalias !2
  %49 = call i8* @_Znwm(i64 64) #11, !noalias !5
  %50 = bitcast i8* %49 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %50, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS5_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #10, !noalias !5
  %51 = getelementptr inbounds i8, i8* %49, i64 32
  %52 = bitcast i8* %51 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::scheduler::TaskQueueThrottler"*)* @_ZN5blink9scheduler18TaskQueueThrottler18PumpThrottledTasksEv to i64), i64 0>, <2 x i64>* %52, align 8, !noalias !5
  %53 = getelementptr inbounds i8, i8* %49, i64 48
  %54 = bitcast i8* %53 to %"class.base::internal::WeakReference"*
  %55 = getelementptr inbounds %"class.base::WeakPtr.131", %"class.base::WeakPtr.131"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %54, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %55) #10, !noalias !5
  %56 = getelementptr inbounds i8, i8* %49, i64 56
  %57 = bitcast i8* %56 to i64*
  %58 = getelementptr inbounds %"class.base::WeakPtr.131", %"class.base::WeakPtr.131"* %7, i64 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8, !noalias !5
  store i64 %59, i64* %57, align 8, !noalias !5
  %60 = bitcast %"class.base::RepeatingCallback.112"* %6 to i8**
  store i8* %49, i8** %60, align 8, !alias.scope !5
  call void @_ZN5blink9scheduler23CancelableClosureHolder5ResetERKN4base17RepeatingCallbackIFvvEEE(%"class.blink::scheduler::CancelableClosureHolder"* %34, %"class.base::RepeatingCallback.112"* nonnull dereferenceable(8) %6) #10
  %61 = getelementptr inbounds %"class.base::RepeatingCallback.112", %"class.base::RepeatingCallback.112"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %48) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  %62 = bitcast %"class.base::RepeatingCallback.86"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  %63 = bitcast %"class.base::WeakPtr.131"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #10
  %64 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10, !noalias !10
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %45) #10, !noalias !10
  %65 = load i64, i64* %46, align 8, !noalias !10
  %66 = getelementptr inbounds %"class.base::WeakPtr.131", %"class.base::WeakPtr.131"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %66, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %65) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #10, !noalias !10
  %67 = call i8* @_Znwm(i64 64) #11, !noalias !13
  %68 = bitcast i8* %67 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %68, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::sequence_manager::TaskQueue"*, %"class.base::TimeTicks"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS5_EEEEEFvS8_S9_EE3RunEPNS0_13BindStateBaseES8_OS9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #10, !noalias !13
  %69 = getelementptr inbounds i8, i8* %67, i64 32
  %70 = bitcast i8* %69 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64)* @_ZN5blink9scheduler18TaskQueueThrottler24OnQueueNextWakeUpChangedEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksE to i64), i64 0>, <2 x i64>* %70, align 8, !noalias !13
  %71 = getelementptr inbounds i8, i8* %67, i64 48
  %72 = bitcast i8* %71 to %"class.base::internal::WeakReference"*
  %73 = getelementptr inbounds %"class.base::WeakPtr.131", %"class.base::WeakPtr.131"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %72, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %73) #10, !noalias !13
  %74 = getelementptr inbounds i8, i8* %67, i64 56
  %75 = bitcast i8* %74 to i64*
  %76 = getelementptr inbounds %"class.base::WeakPtr.131", %"class.base::WeakPtr.131"* %9, i64 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8, !noalias !13
  store i64 %77, i64* %75, align 8, !noalias !13
  %78 = bitcast %"class.base::RepeatingCallback.86"* %8 to i8**
  store i8* %67, i8** %78, align 8, !alias.scope !13
  %79 = getelementptr inbounds %"class.base::RepeatingCallback.86", %"class.base::RepeatingCallback.86"* %13, i64 0, i32 0
  %80 = getelementptr inbounds %"class.base::RepeatingCallback.86", %"class.base::RepeatingCallback.86"* %8, i64 0, i32 0
  %81 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %79, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %80) #10
  %82 = getelementptr inbounds %"class.base::RepeatingCallback.86", %"class.base::RepeatingCallback.86"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %82) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %66) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  %83 = load %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::ThreadSchedulerImpl"** %21, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106"* %29, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::scheduler::ThrottledTimeDomain"*, %"class.blink::scheduler::ThrottledTimeDomain"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %85, i64 0, i32 0
  %87 = bitcast %"class.blink::scheduler::ThreadSchedulerImpl"* %83 to void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)***
  %88 = load void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)**, void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)** %88, i64 29
  %90 = load void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)** %89, align 8
  call void %90(%"class.blink::scheduler::ThreadSchedulerImpl"* %83, %"class.base::sequence_manager::TimeDomain"* %86) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN5blink9scheduler19ThrottledTimeDomainC1Ev(%"class.blink::scheduler::ThrottledTimeDomain"*) unnamed_addr #2

declare void @_ZN5blink9scheduler23CancelableClosureHolderC1Ev(%"class.blink::scheduler::CancelableClosureHolder"*) unnamed_addr #2

declare void @_ZN5blink9scheduler23CancelableClosureHolder5ResetERKN4base17RepeatingCallbackIFvvEEE(%"class.blink::scheduler::CancelableClosureHolder"*, %"class.base::RepeatingCallback.112"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler18PumpThrottledTasksEv(%"class.blink::scheduler::TaskQueueThrottler"*) #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::sequence_manager::LazyNow", align 8
  %4 = alloca %"class.WTF::HashSet", align 8
  %5 = alloca %"class.blink::scheduler::BudgetPool"*, align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !18

9:                                                ; preds = %1
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %11 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), %9 ]
  %18 = phi i64 [ -6148914691236517206, %1 ], [ %14, %9 ]
  %19 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  %20 = bitcast %"class.base::sequence_manager::LazyNow"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 6
  %22 = load %"class.base::TickClock"*, %"class.base::TickClock"** %21, align 8
  call void @_ZN4base16sequence_manager7LazyNowC1EPKNS_9TickClockE(%"class.base::sequence_manager::LazyNow"* nonnull %3, %"class.base::TickClock"* %22) #10
  %23 = bitcast %"class.WTF::HashSet"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 2
  %27 = bitcast %"class.WTF::HashSet"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 20, i1 false) #10
  %28 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 %35
  br i1 %30, label %136, label %37

37:                                               ; preds = %15
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %37, %43
  %40 = phi %"struct.WTF::KeyValuePair"* [ %44, %43 ], [ %32, %37 ]
  %41 = bitcast %"struct.WTF::KeyValuePair"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  switch i64 %42, label %46 [
    i64 -1, label %43
    i64 0, label %43
  ]

43:                                               ; preds = %39, %39
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 1
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, %36
  br i1 %45, label %134, label %39

46:                                               ; preds = %39, %37
  %47 = phi %"struct.WTF::KeyValuePair"* [ %32, %37 ], [ %40, %39 ]
  %48 = icmp eq %"struct.WTF::KeyValuePair"* %47, %36
  br i1 %48, label %134, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0
  %51 = bitcast %"class.blink::scheduler::BudgetPool"** %5 to i8*
  %52 = bitcast %"class.blink::scheduler::BudgetPool"** %5 to i64*
  br label %72

53:                                               ; preds = %122, %132, %129
  %54 = load i32, i32* %26, align 4
  %55 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %24, align 8
  %56 = load i32, i32* %25, align 8
  %57 = icmp eq i32 %54, 0
  %58 = zext i32 %56 to i64
  %59 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %55, i64 %58
  br i1 %57, label %134, label %60

60:                                               ; preds = %53
  %61 = icmp eq i32 %56, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %60, %66
  %63 = phi %"class.blink::scheduler::BudgetPool"** [ %67, %66 ], [ %55, %60 ]
  %64 = bitcast %"class.blink::scheduler::BudgetPool"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %69 [
    i64 -1, label %66
    i64 0, label %66
  ]

66:                                               ; preds = %62, %62
  %67 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %63, i64 1
  %68 = icmp eq %"class.blink::scheduler::BudgetPool"** %67, %59
  br i1 %68, label %134, label %62

69:                                               ; preds = %62, %60
  %70 = phi %"class.blink::scheduler::BudgetPool"** [ %55, %60 ], [ %63, %62 ]
  %71 = icmp eq %"class.blink::scheduler::BudgetPool"** %70, %59
  br i1 %71, label %134, label %155

72:                                               ; preds = %49, %132
  %73 = phi %"struct.WTF::KeyValuePair"* [ %47, %49 ], [ %126, %132 ]
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* nonnull %3) #10
  %79 = icmp sgt i64 %77, %78
  br i1 %79, label %122, label %80

80:                                               ; preds = %72
  %81 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %74, align 8
  %82 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %81, i64 0, i32 4, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  call void @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.76"* nonnull %50, i32 %83) #10
  %84 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %74, align 8
  %85 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %84, i64 0, i32 4, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %84, i64 0, i32 4, i32 0, i32 0
  %89 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %88, align 8
  %90 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %84, i64 0, i32 4, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %89, i64 %92
  br i1 %87, label %122, label %94

94:                                               ; preds = %80
  %95 = icmp eq i32 %91, 0
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %100
  %97 = phi %"class.blink::scheduler::BudgetPool"** [ %101, %100 ], [ %89, %94 ]
  %98 = bitcast %"class.blink::scheduler::BudgetPool"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  switch i64 %99, label %103 [
    i64 -1, label %100
    i64 0, label %100
  ]

100:                                              ; preds = %96, %96
  %101 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %97, i64 1
  %102 = icmp eq %"class.blink::scheduler::BudgetPool"** %101, %93
  br i1 %102, label %122, label %96

103:                                              ; preds = %96, %94
  %104 = phi %"class.blink::scheduler::BudgetPool"** [ %89, %94 ], [ %97, %96 ]
  %105 = icmp eq %"class.blink::scheduler::BudgetPool"** %104, %93
  br i1 %105, label %122, label %106

106:                                              ; preds = %103, %120
  %107 = phi %"class.blink::scheduler::BudgetPool"** [ %114, %120 ], [ %104, %103 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  store %"class.blink::scheduler::BudgetPool"* inttoptr (i64 -6148914691236517206 to %"class.blink::scheduler::BudgetPool"*), %"class.blink::scheduler::BudgetPool"** %5, align 8
  %108 = bitcast %"class.blink::scheduler::BudgetPool"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  store i64 %109, i64* %52, align 8
  %110 = call { %"class.blink::scheduler::BudgetPool"**, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_RS4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.76"* nonnull %50, %"class.blink::scheduler::BudgetPool"** nonnull dereferenceable(8) %5, %"class.blink::scheduler::BudgetPool"** nonnull dereferenceable(8) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  %111 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %107, i64 1
  %112 = icmp eq %"class.blink::scheduler::BudgetPool"** %111, %93
  br i1 %112, label %122, label %113

113:                                              ; preds = %106, %117
  %114 = phi %"class.blink::scheduler::BudgetPool"** [ %118, %117 ], [ %111, %106 ]
  %115 = bitcast %"class.blink::scheduler::BudgetPool"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  switch i64 %116, label %120 [
    i64 -1, label %117
    i64 0, label %117
  ]

117:                                              ; preds = %113, %113
  %118 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %114, i64 1
  %119 = icmp eq %"class.blink::scheduler::BudgetPool"** %118, %93
  br i1 %119, label %122, label %113

120:                                              ; preds = %113
  %121 = icmp eq %"class.blink::scheduler::BudgetPool"** %114, %93
  br i1 %121, label %122, label %106

122:                                              ; preds = %100, %106, %120, %117, %80, %103, %72
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 1
  %124 = icmp eq %"struct.WTF::KeyValuePair"* %123, %36
  br i1 %124, label %53, label %125

125:                                              ; preds = %122, %129
  %126 = phi %"struct.WTF::KeyValuePair"* [ %130, %129 ], [ %123, %122 ]
  %127 = bitcast %"struct.WTF::KeyValuePair"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  switch i64 %128, label %132 [
    i64 -1, label %129
    i64 0, label %129
  ]

129:                                              ; preds = %125, %125
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 1
  %131 = icmp eq %"struct.WTF::KeyValuePair"* %130, %36
  br i1 %131, label %53, label %125

132:                                              ; preds = %125
  %133 = icmp eq %"struct.WTF::KeyValuePair"* %126, %36
  br i1 %133, label %53, label %72

134:                                              ; preds = %43, %66, %155, %172, %169, %69, %53, %46
  %135 = load i32, i32* %33, align 8
  br label %136

136:                                              ; preds = %134, %15
  %137 = phi i32 [ %135, %134 ], [ %34, %15 ]
  %138 = load i32, i32* %28, align 4
  %139 = icmp eq i32 %138, 0
  %140 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %141 = zext i32 %137 to i64
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %140, i64 %141
  br i1 %139, label %174, label %143

143:                                              ; preds = %136
  %144 = icmp eq i32 %137, 0
  br i1 %144, label %152, label %145

145:                                              ; preds = %143, %149
  %146 = phi %"struct.WTF::KeyValuePair"* [ %150, %149 ], [ %140, %143 ]
  %147 = bitcast %"struct.WTF::KeyValuePair"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  switch i64 %148, label %152 [
    i64 -1, label %149
    i64 0, label %149
  ]

149:                                              ; preds = %145, %145
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %146, i64 1
  %151 = icmp eq %"struct.WTF::KeyValuePair"* %150, %142
  br i1 %151, label %174, label %145

152:                                              ; preds = %145, %143
  %153 = phi %"struct.WTF::KeyValuePair"* [ %140, %143 ], [ %146, %145 ]
  %154 = icmp eq %"struct.WTF::KeyValuePair"* %153, %142
  br i1 %154, label %174, label %186

155:                                              ; preds = %69, %172
  %156 = phi %"class.blink::scheduler::BudgetPool"** [ %166, %172 ], [ %70, %69 ]
  %157 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %156, align 8
  %158 = call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* nonnull %3) #10
  %159 = bitcast %"class.blink::scheduler::BudgetPool"* %157 to void (%"class.blink::scheduler::BudgetPool"*, i64)***
  %160 = load void (%"class.blink::scheduler::BudgetPool"*, i64)**, void (%"class.blink::scheduler::BudgetPool"*, i64)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*, i64)*, void (%"class.blink::scheduler::BudgetPool"*, i64)** %160, i64 7
  %162 = load void (%"class.blink::scheduler::BudgetPool"*, i64)*, void (%"class.blink::scheduler::BudgetPool"*, i64)** %161, align 8
  call void %162(%"class.blink::scheduler::BudgetPool"* %157, i64 %158) #10
  %163 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %156, i64 1
  %164 = icmp eq %"class.blink::scheduler::BudgetPool"** %163, %59
  br i1 %164, label %134, label %165

165:                                              ; preds = %155, %169
  %166 = phi %"class.blink::scheduler::BudgetPool"** [ %170, %169 ], [ %163, %155 ]
  %167 = bitcast %"class.blink::scheduler::BudgetPool"** %166 to i64*
  %168 = load i64, i64* %167, align 8
  switch i64 %168, label %172 [
    i64 -1, label %169
    i64 0, label %169
  ]

169:                                              ; preds = %165, %165
  %170 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %166, i64 1
  %171 = icmp eq %"class.blink::scheduler::BudgetPool"** %170, %59
  br i1 %171, label %134, label %165

172:                                              ; preds = %165
  %173 = icmp eq %"class.blink::scheduler::BudgetPool"** %166, %59
  br i1 %173, label %134, label %155

174:                                              ; preds = %149, %186, %200, %197, %136, %152
  %175 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %24, align 8
  %176 = icmp eq %"class.blink::scheduler::BudgetPool"** %175, null
  br i1 %176, label %179, label %177, !prof !18

177:                                              ; preds = %174
  %178 = bitcast %"class.blink::scheduler::BudgetPool"** %175 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %178) #10
  store %"class.blink::scheduler::BudgetPool"** null, %"class.blink::scheduler::BudgetPool"*** %24, align 8
  br label %179

179:                                              ; preds = %174, %177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  %180 = icmp eq i8* %16, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %179
  %182 = load i8, i8* %16, align 1
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %185, label %184

184:                                              ; preds = %181
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %17, i64 %18) #10
  br label %185

185:                                              ; preds = %179, %181, %184
  ret void

186:                                              ; preds = %152, %200
  %187 = phi %"struct.WTF::KeyValuePair"* [ %194, %200 ], [ %153, %152 ]
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %187, i64 0, i32 0
  %189 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %188, align 8
  %190 = call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* nonnull %3) #10
  call void @_ZN5blink9scheduler18TaskQueueThrottler43UpdateQueueSchedulingLifecycleStateInternalEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueEb(%"class.blink::scheduler::TaskQueueThrottler"* %0, i64 %190, %"class.base::sequence_manager::TaskQueue"* %189, i1 zeroext true)
  %191 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %187, i64 1
  %192 = icmp eq %"struct.WTF::KeyValuePair"* %191, %142
  br i1 %192, label %174, label %193

193:                                              ; preds = %186, %197
  %194 = phi %"struct.WTF::KeyValuePair"* [ %198, %197 ], [ %191, %186 ]
  %195 = bitcast %"struct.WTF::KeyValuePair"* %194 to i64*
  %196 = load i64, i64* %195, align 8
  switch i64 %196, label %200 [
    i64 -1, label %197
    i64 0, label %197
  ]

197:                                              ; preds = %193, %193
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %194, i64 1
  %199 = icmp eq %"struct.WTF::KeyValuePair"* %198, %142
  br i1 %199, label %174, label %193

200:                                              ; preds = %193
  %201 = icmp eq %"struct.WTF::KeyValuePair"* %194, %142
  br i1 %201, label %174, label %186
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler24OnQueueNextWakeUpChangedEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64) #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::internal::RetainedRefWrapper", align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  store i64 %2, i64* %13, align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %14 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 3, i32 0
  %15 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %14, align 8
  %16 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to %"class.base::SequencedTaskRunner"*
  %17 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to i1 (%"class.base::SequencedTaskRunner"*)***
  %18 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %18, i64 5
  %20 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.base::SequencedTaskRunner"* %16) #10
  br i1 %21, label %55, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.base::SingleThreadTaskRunner"** %14 to %"class.base::TaskRunner"**
  %24 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %23, align 8
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.4, i64 0, i64 0), i32 157) #10
  %26 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 2
  %27 = bitcast %"class.base::internal::RetainedRefWrapper"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %29 = icmp eq %"class.base::sequence_manager::TaskQueue"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  br label %33

33:                                               ; preds = %22, %30
  %34 = getelementptr inbounds %"class.base::internal::RetainedRefWrapper", %"class.base::internal::RetainedRefWrapper"* %9, i64 0, i32 0, i32 0
  store %"class.base::sequence_manager::TaskQueue"* %28, %"class.base::sequence_manager::TaskQueue"** %34, align 8
  %35 = call %"struct.base::internal::BindState.202"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS4_EES6_EE6CreateIRS8_JSA_RS6_EEEPSB_PFvvEOT_DpOT0_(void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS5_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::RepeatingCallback.86"* dereferenceable(8) %26, %"class.base::internal::RetainedRefWrapper"* nonnull dereferenceable(8) %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5) #10, !noalias !19
  %36 = getelementptr inbounds %"struct.base::internal::BindState.202", %"struct.base::internal::BindState.202"* %35, i64 0, i32 0
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %36, %"class.base::internal::BindStateBase"** %37, align 8, !alias.scope !19
  %38 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %24, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %8) #10
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #10
  %40 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %34, align 8
  %41 = icmp eq %"class.base::sequence_manager::TaskQueue"* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %40, i64 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 -2
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %48 to %"class.base::sequence_manager::TaskQueue"*
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %48 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %51 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %51, i64 3
  %53 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %52, align 8
  call void %53(%"class.base::sequence_manager::TaskQueue"* nonnull %49) #10
  br label %54

54:                                               ; preds = %33, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  br label %161

55:                                               ; preds = %3
  %56 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %57 = and i8 %56, 25
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %66, label %59, !prof !18

59:                                               ; preds = %55
  %60 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %61 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %63 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %63, i64* %62, align 8
  %64 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %60, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  %65 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  br label %66

66:                                               ; preds = %55, %59
  %67 = phi %"class.base::sequence_manager::TaskQueue"* [ %1, %55 ], [ %65, %59 ]
  %68 = phi i8* [ null, %55 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), %59 ]
  %69 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %55 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), %59 ]
  %70 = phi i64 [ -6148914691236517206, %55 ], [ %64, %59 ]
  %71 = call zeroext i1 @_ZNK4base16sequence_manager9TaskQueue14IsQueueEnabledEv(%"class.base::sequence_manager::TaskQueue"* %67) #10
  br i1 %71, label %72, label %155

72:                                               ; preds = %66
  %73 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  %74 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 6
  %75 = load %"class.base::TickClock"*, %"class.base::TickClock"** %74, align 8
  %76 = bitcast %"class.base::TickClock"* %75 to i64 (%"class.base::TickClock"*)***
  %77 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %76, align 8
  %78 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %77, i64 2
  %79 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %78, align 8
  %80 = call i64 %79(%"class.base::TickClock"* %75) #10
  store i64 %80, i64* %10, align 8
  %81 = load i64, i64* %13, align 8
  %82 = icmp slt i64 %80, %81
  %83 = bitcast i64* %10 to %"class.base::TimeTicks"*
  %84 = select i1 %82, %"class.base::TimeTicks"* %5, %"class.base::TimeTicks"* %83
  %85 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %84, i64 0, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %13, align 8
  %87 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %87, i64 0, i32 0
  %89 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %88, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %6) #10
  %90 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %89, 0
  %91 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %87, i64 0, i32 0, i32 0
  %92 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 %95
  %97 = icmp eq %"struct.WTF::KeyValuePair"* %90, %96
  br i1 %97, label %154, label %98

98:                                               ; preds = %72
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %100, i64 0, i32 4, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %100, i64 0, i32 4, i32 0, i32 0
  %105 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %104, align 8
  %106 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %100, i64 0, i32 4, i32 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %105, i64 %108
  br i1 %103, label %122, label %110

110:                                              ; preds = %98
  %111 = icmp eq i32 %107, 0
  br i1 %111, label %119, label %112

112:                                              ; preds = %110, %116
  %113 = phi %"class.blink::scheduler::BudgetPool"** [ %117, %116 ], [ %105, %110 ]
  %114 = bitcast %"class.blink::scheduler::BudgetPool"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  switch i64 %115, label %119 [
    i64 -1, label %116
    i64 0, label %116
  ]

116:                                              ; preds = %112, %112
  %117 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %113, i64 1
  %118 = icmp eq %"class.blink::scheduler::BudgetPool"** %117, %109
  br i1 %118, label %122, label %112

119:                                              ; preds = %112, %110
  %120 = phi %"class.blink::scheduler::BudgetPool"** [ %105, %110 ], [ %113, %112 ]
  %121 = icmp eq %"class.blink::scheduler::BudgetPool"** %120, %109
  br i1 %121, label %122, label %134

122:                                              ; preds = %116, %134, %152, %149, %98, %119
  %123 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123)
  %124 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %125 = load i64, i64* %13, align 8
  %126 = call i64 @_ZN5blink9scheduler18TaskQueueThrottler24UpdateNextAllowedRunTimeEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksE(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::sequence_manager::TaskQueue"* %124, i64 %125)
  store i64 %126, i64* %11, align 8
  %127 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.4, i64 0, i64 0), i32 186) #10
  %128 = load i64, i64* %13, align 8
  %129 = icmp slt i64 %128, %126
  %130 = bitcast i64* %11 to %"class.base::TimeTicks"*
  %131 = select i1 %129, %"class.base::TimeTicks"* %130, %"class.base::TimeTicks"* %5
  %132 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %131, i64 0, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  call void @_ZN5blink9scheduler18TaskQueueThrottler31MaybeSchedulePumpThrottledTasksERKN4base8LocationENS2_9TimeTicksES6_(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::Location"* nonnull dereferenceable(32) %12, i64 %80, i64 %133)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123)
  br label %154

134:                                              ; preds = %119, %152
  %135 = phi %"class.blink::scheduler::BudgetPool"** [ %146, %152 ], [ %120, %119 ]
  %136 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %135, align 8
  %137 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %138 = load i64, i64* %13, align 8
  %139 = bitcast %"class.blink::scheduler::BudgetPool"* %136 to void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)***
  %140 = load void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)**, void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)*, void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)** %140, i64 6
  %142 = load void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)*, void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)** %141, align 8
  call void %142(%"class.blink::scheduler::BudgetPool"* %136, %"class.base::sequence_manager::TaskQueue"* %137, i64 %80, i64 %138) #10
  %143 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %135, i64 1
  %144 = icmp eq %"class.blink::scheduler::BudgetPool"** %143, %109
  br i1 %144, label %122, label %145

145:                                              ; preds = %134, %149
  %146 = phi %"class.blink::scheduler::BudgetPool"** [ %150, %149 ], [ %143, %134 ]
  %147 = bitcast %"class.blink::scheduler::BudgetPool"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  switch i64 %148, label %152 [
    i64 -1, label %149
    i64 0, label %149
  ]

149:                                              ; preds = %145, %145
  %150 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %146, i64 1
  %151 = icmp eq %"class.blink::scheduler::BudgetPool"** %150, %109
  br i1 %151, label %122, label %145

152:                                              ; preds = %145
  %153 = icmp eq %"class.blink::scheduler::BudgetPool"** %146, %109
  br i1 %153, label %122, label %134

154:                                              ; preds = %72, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  br label %155

155:                                              ; preds = %66, %154
  %156 = icmp eq i8* %68, null
  br i1 %156, label %161, label %157

157:                                              ; preds = %155
  %158 = load i8, i8* %68, align 1
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %161, label %160

160:                                              ; preds = %157
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %68, i8* %69, i64 %70) #10
  br label %161

161:                                              ; preds = %160, %157, %155, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottlerD2Ev(%"class.blink::scheduler::TaskQueueThrottler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler18TaskQueueThrottlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  br i1 %5, label %27, label %12

12:                                               ; preds = %1
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12, %18
  %15 = phi %"struct.WTF::KeyValuePair"* [ %19, %18 ], [ %7, %12 ]
  %16 = bitcast %"struct.WTF::KeyValuePair"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 1
  %20 = icmp eq %"struct.WTF::KeyValuePair"* %19, %11
  br i1 %20, label %27, label %14

21:                                               ; preds = %14, %12
  %22 = phi %"struct.WTF::KeyValuePair"* [ %7, %12 ], [ %15, %14 ]
  %23 = icmp eq %"struct.WTF::KeyValuePair"* %22, %11
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::scheduler::TaskQueueThrottler"* %0 to i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)***
  %26 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 4
  br label %116

27:                                               ; preds = %18, %131, %141, %138, %1, %21
  %28 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 4
  %29 = load %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::ThreadSchedulerImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %31 = load %"class.blink::scheduler::ThrottledTimeDomain"*, %"class.blink::scheduler::ThrottledTimeDomain"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %31, i64 0, i32 0
  %33 = bitcast %"class.blink::scheduler::ThreadSchedulerImpl"* %29 to void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)***
  %34 = load void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)**, void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)** %34, i64 30
  %36 = load void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.base::sequence_manager::TimeDomain"*)** %35, align 8
  tail call void %36(%"class.blink::scheduler::ThreadSchedulerImpl"* %29, %"class.base::sequence_manager::TimeDomain"* %32) #10
  %37 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 13, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %37) #10
  %38 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0, i32 0
  %39 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %38, align 8
  %40 = icmp eq %"struct.WTF::KeyValuePair.118"* %39, null
  br i1 %40, label %66, label %41, !prof !18

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %64, label %45

45:                                               ; preds = %41
  %46 = zext i32 %43 to i64
  br label %47

47:                                               ; preds = %61, %45
  %48 = phi i64 [ 0, %45 ], [ %62, %61 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %39, i64 %48, i32 0
  %50 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %49, align 8
  %51 = icmp eq %"class.blink::scheduler::BudgetPool"* %50, inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*)
  br i1 %51, label %61, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %39, i64 %48, i32 1, i32 0, i32 0, i32 0
  %54 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %53, align 8
  store %"class.blink::scheduler::BudgetPool"* null, %"class.blink::scheduler::BudgetPool"** %53, align 8
  %55 = icmp eq %"class.blink::scheduler::BudgetPool"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.blink::scheduler::BudgetPool"* %54 to void (%"class.blink::scheduler::BudgetPool"*)***
  %58 = load void (%"class.blink::scheduler::BudgetPool"*)**, void (%"class.blink::scheduler::BudgetPool"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %58, i64 1
  %60 = load void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %59, align 8
  tail call void %60(%"class.blink::scheduler::BudgetPool"* nonnull %54) #10
  br label %61

61:                                               ; preds = %56, %52, %47
  %62 = add nuw nsw i64 %48, 1
  %63 = icmp eq i64 %62, %46
  br i1 %63, label %64, label %47

64:                                               ; preds = %61, %41
  %65 = bitcast %"struct.WTF::KeyValuePair.118"* %39 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %65) #10
  store %"struct.WTF::KeyValuePair.118"* null, %"struct.WTF::KeyValuePair.118"** %38, align 8
  br label %66

66:                                               ; preds = %27, %64
  %67 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 8
  tail call void @_ZN5blink9scheduler23CancelableClosureHolderD1Ev(%"class.blink::scheduler::CancelableClosureHolder"* %67) #10
  %68 = load %"class.blink::scheduler::ThrottledTimeDomain"*, %"class.blink::scheduler::ThrottledTimeDomain"** %30, align 8
  store %"class.blink::scheduler::ThrottledTimeDomain"* null, %"class.blink::scheduler::ThrottledTimeDomain"** %30, align 8
  %69 = icmp eq %"class.blink::scheduler::ThrottledTimeDomain"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.blink::scheduler::ThrottledTimeDomain"* %68 to void (%"class.blink::scheduler::ThrottledTimeDomain"*)***
  %72 = load void (%"class.blink::scheduler::ThrottledTimeDomain"*)**, void (%"class.blink::scheduler::ThrottledTimeDomain"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::scheduler::ThrottledTimeDomain"*)*, void (%"class.blink::scheduler::ThrottledTimeDomain"*)** %72, i64 1
  %74 = load void (%"class.blink::scheduler::ThrottledTimeDomain"*)*, void (%"class.blink::scheduler::ThrottledTimeDomain"*)** %73, align 8
  tail call void %74(%"class.blink::scheduler::ThrottledTimeDomain"* nonnull %68) #10
  br label %75

75:                                               ; preds = %66, %70
  %76 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 3, i32 0
  %77 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %76, align 8
  %78 = icmp eq %"class.base::SingleThreadTaskRunner"* %77, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %77, i64 0, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw sub i32* %81, i32 1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %80, i64 -2
  %86 = bitcast %"class.base::RefCountedThreadSafe.34"* %85 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %86) #10
  br label %87

87:                                               ; preds = %75, %79, %84
  %88 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %88) #10
  %89 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %90 = icmp eq %"struct.WTF::KeyValuePair"* %89, null
  br i1 %90, label %115, label %91, !prof !18

91:                                               ; preds = %87
  %92 = load i32, i32* %8, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %113, label %94

94:                                               ; preds = %91
  %95 = zext i32 %92 to i64
  br label %96

96:                                               ; preds = %110, %94
  %97 = phi i64 [ 0, %94 ], [ %111, %110 ]
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 %97, i32 0
  %99 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %98, align 8
  %100 = icmp eq %"class.base::sequence_manager::TaskQueue"* %99, inttoptr (i64 -1 to %"class.base::sequence_manager::TaskQueue"*)
  br i1 %100, label %110, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 %97, i32 1, i32 0, i32 0, i32 0
  %103 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %102, align 8
  store %"class.blink::scheduler::TaskQueueThrottler::Metadata"* null, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %102, align 8
  %104 = icmp eq %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %101
  %106 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %103 to void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)***
  %107 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)**, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %107, i64 1
  %109 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %108, align 8
  tail call void %109(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nonnull %103) #10
  br label %110

110:                                              ; preds = %105, %101, %96
  %111 = add nuw nsw i64 %97, 1
  %112 = icmp eq i64 %111, %95
  br i1 %112, label %113, label %96

113:                                              ; preds = %110, %91
  %114 = bitcast %"struct.WTF::KeyValuePair"* %89 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %114) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %115

115:                                              ; preds = %87, %113
  ret void

116:                                              ; preds = %143, %24
  %117 = phi i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)** [ bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler18TaskQueueThrottlerE, i64 0, inrange i32 0, i64 2) to i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)**), %24 ], [ %144, %143 ]
  %118 = phi %"struct.WTF::KeyValuePair"* [ %22, %24 ], [ %135, %143 ]
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %118, i64 0, i32 0
  %120 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %119, align 8
  %121 = getelementptr inbounds i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)*, i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)** %117, i64 6
  %122 = load i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)*, i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)** %121, align 8
  %123 = tail call zeroext i1 %122(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::sequence_manager::TaskQueue"* %120) #10
  br i1 %123, label %124, label %131

124:                                              ; preds = %116
  %125 = load %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::ThreadSchedulerImpl"** %26, align 8
  %126 = bitcast %"class.blink::scheduler::ThreadSchedulerImpl"* %125 to %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)***
  %127 = load %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)**, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*** %126, align 8
  %128 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %127, i64 31
  %129 = load %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %128, align 8
  %130 = tail call %"class.base::sequence_manager::TimeDomain"* %129(%"class.blink::scheduler::ThreadSchedulerImpl"* %125) #10
  tail call void @_ZN4base16sequence_manager9TaskQueue13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::TaskQueue"* %120, %"class.base::sequence_manager::TimeDomain"* %130) #10
  tail call void @_ZN4base16sequence_manager9TaskQueue11RemoveFenceEv(%"class.base::sequence_manager::TaskQueue"* %120) #10
  br label %131

131:                                              ; preds = %124, %116
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %118, i64 1
  %133 = icmp eq %"struct.WTF::KeyValuePair"* %132, %11
  br i1 %133, label %27, label %134

134:                                              ; preds = %131, %138
  %135 = phi %"struct.WTF::KeyValuePair"* [ %139, %138 ], [ %132, %131 ]
  %136 = bitcast %"struct.WTF::KeyValuePair"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  switch i64 %137, label %141 [
    i64 -1, label %138
    i64 0, label %138
  ]

138:                                              ; preds = %134, %134
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 1
  %140 = icmp eq %"struct.WTF::KeyValuePair"* %139, %11
  br i1 %140, label %27, label %134

141:                                              ; preds = %134
  %142 = icmp eq %"struct.WTF::KeyValuePair"* %135, %11
  br i1 %142, label %27, label %143

143:                                              ; preds = %141
  %144 = load i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)**, i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)*** %25, align 8
  br label %116
}

declare void @_ZN4base16sequence_manager9TaskQueue13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #2

declare void @_ZN4base16sequence_manager9TaskQueue11RemoveFenceEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink9scheduler23CancelableClosureHolderD1Ev(%"class.blink::scheduler::CancelableClosureHolder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottlerD0Ev(%"class.blink::scheduler::TaskQueueThrottler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9scheduler18TaskQueueThrottlerD2Ev(%"class.blink::scheduler::TaskQueueThrottler"* %0) #10
  %2 = bitcast %"class.blink::scheduler::TaskQueueThrottler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler24IncreaseThrottleRefCountEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  %4 = alloca %"class.std::__1::unique_ptr.73", align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.base::sequence_manager::LazyNow", align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.73"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = ptrtoint %"class.blink::scheduler::TaskQueueThrottler"* %0 to i64
  %9 = tail call i8* @_Znwm(i64 64) #11
  %10 = bitcast %"class.base::sequence_manager::TaskQueue"** %3 to i64*
  %11 = ptrtoint %"class.base::sequence_manager::TaskQueue"* %1 to i64
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler18TaskQueueThrottler8MetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 24
  %18 = getelementptr inbounds i8, i8* %9, i64 56
  %19 = bitcast i8* %18 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 28, i1 false) #10
  store i64 9223372036854775807, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.73"* %4 to i8**
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0
  %23 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISN_SI_SO_EERS4_SE_EENS_18HashTableAddResultISP_SF_EEOT0_OT1_(%"class.WTF::HashTable"* %22, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %3, %"class.std::__1::unique_ptr.73"* nonnull dereferenceable(8) %4) #10
  %24 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %23, 0
  %25 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %20, align 8
  store %"class.blink::scheduler::TaskQueueThrottler::Metadata"* null, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %20, align 8
  %26 = icmp eq %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %25 to void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)***
  %29 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)**, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %29, i64 1
  %31 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %30, align 8
  call void %31(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nonnull %25) #10
  br label %32

32:                                               ; preds = %2, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %34, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %39, label %91

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %34, i64 0, i32 1
  %41 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %34, i64 0, i32 0
  call void @_ZN4base16sequence_manager9TaskQueue11SetObserverEPNS1_8ObserverE(%"class.base::sequence_manager::TaskQueue"* %41, %"class.base::sequence_manager::TaskQueue::Observer"* %42) #10
  %43 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %44 = and i8 %43, 25
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %51, label %46, !prof !18

46:                                               ; preds = %39
  %47 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  %48 = load i64, i64* %10, align 8
  %49 = bitcast i8** %5 to i64*
  store i64 %48, i64* %49, align 8
  %50 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %51

51:                                               ; preds = %39, %46
  %52 = phi i8* [ null, %39 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), %46 ]
  %53 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %39 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), %46 ]
  %54 = phi i64 [ -6148914691236517206, %39 ], [ %50, %46 ]
  %55 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 10
  %56 = load i8, i8* %55, align 8, !range !24
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %85, label %58

58:                                               ; preds = %51
  %59 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %60 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %61 = load %"class.blink::scheduler::ThrottledTimeDomain"*, %"class.blink::scheduler::ThrottledTimeDomain"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %61, i64 0, i32 0
  call void @_ZN4base16sequence_manager9TaskQueue13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::TaskQueue"* %59, %"class.base::sequence_manager::TimeDomain"* %62) #10
  %63 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  call void @_ZN4base16sequence_manager9TaskQueue11InsertFenceENS1_19InsertFencePositionE(%"class.base::sequence_manager::TaskQueue"* %63, i32 1) #10
  %64 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %65 = call zeroext i1 @_ZNK4base16sequence_manager9TaskQueue14IsQueueEnabledEv(%"class.base::sequence_manager::TaskQueue"* %64) #10
  br i1 %65, label %66, label %85

66:                                               ; preds = %58
  %67 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %68 = call zeroext i1 @_ZNK4base16sequence_manager9TaskQueue7IsEmptyEv(%"class.base::sequence_manager::TaskQueue"* %67) #10
  br i1 %68, label %85, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.base::sequence_manager::LazyNow"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  %71 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 6
  %72 = load %"class.base::TickClock"*, %"class.base::TickClock"** %71, align 8
  call void @_ZN4base16sequence_manager7LazyNowC1EPKNS_9TickClockE(%"class.base::sequence_manager::LazyNow"* nonnull %6, %"class.base::TickClock"* %72) #10
  %73 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %74 = call zeroext i1 @_ZNK4base16sequence_manager9TaskQueue23HasTaskToRunImmediatelyEv(%"class.base::sequence_manager::TaskQueue"* %73) #10
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* nonnull %6) #10
  br label %83

77:                                               ; preds = %69
  %78 = call { i8, i64 } @_ZN4base16sequence_manager9TaskQueue22GetNextScheduledWakeUpEv(%"class.base::sequence_manager::TaskQueue"* %73) #10
  %79 = extractvalue { i8, i64 } %78, 0
  %80 = extractvalue { i8, i64 } %78, 1
  %81 = icmp eq i8 %79, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %77
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #12
  unreachable

83:                                               ; preds = %75, %77
  %84 = phi i64 [ %76, %75 ], [ %80, %77 ]
  call void @_ZN5blink9scheduler18TaskQueueThrottler24OnQueueNextWakeUpChangedEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksE(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::sequence_manager::TaskQueue"* %73, i64 %84)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #10
  br label %85

85:                                               ; preds = %66, %83, %58, %51
  %86 = icmp eq i8* %52, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %85
  %88 = load i8, i8* %52, align 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %91, label %90

90:                                               ; preds = %87
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %52, i8* %53, i64 %54) #10
  br label %91

91:                                               ; preds = %90, %87, %85, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler18TaskQueueThrottler8Metadata17IncrementRefCountEv(%"class.blink::scheduler::TaskQueueThrottler::Metadata"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %2, align 8
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 1
  %8 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager9TaskQueue11SetObserverEPNS1_8ObserverE(%"class.base::sequence_manager::TaskQueue"* %8, %"class.base::sequence_manager::TaskQueue::Observer"* %9) #10
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i1 [ true, %6 ], [ false, %1 ]
  ret i1 %11
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8** dereferenceable(8)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 5, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = bitcast i8** %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #10
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #10
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #10
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4base16sequence_manager9TaskQueue11InsertFenceENS1_19InsertFencePositionE(%"class.base::sequence_manager::TaskQueue"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base16sequence_manager9TaskQueue14IsQueueEnabledEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base16sequence_manager9TaskQueue7IsEmptyEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

declare void @_ZN4base16sequence_manager7LazyNowC1EPKNS_9TickClockE(%"class.base::sequence_manager::LazyNow"*, %"class.base::TickClock"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler24DecreaseThrottleRefCountEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  %4 = alloca i8*, align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %6, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %3) #10
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %7, 0
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %7, 1
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %8, %15
  br i1 %16, label %61, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %19, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %61, label %23

23:                                               ; preds = %17
  %24 = add i64 %21, -1
  store i64 %24, i64* %20, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %61

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %19, i64 0, i32 1
  %28 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %27, align 8
  call void @_ZN4base16sequence_manager9TaskQueue11SetObserverEPNS1_8ObserverE(%"class.base::sequence_manager::TaskQueue"* %28, %"class.base::sequence_manager::TaskQueue::Observer"* null) #10
  %29 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %30 = and i8 %29, 25
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %38, label %32, !prof !18

32:                                               ; preds = %26
  %33 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = bitcast %"class.base::sequence_manager::TaskQueue"** %3 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast i8** %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  br label %38

38:                                               ; preds = %26, %32
  %39 = phi i64 [ -6148914691236517206, %26 ], [ %37, %32 ]
  %40 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %26 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), %32 ]
  %41 = phi i8* [ null, %26 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), %32 ]
  call void @_ZN5blink9scheduler18TaskQueueThrottler24MaybeDeleteQueueMetadataEN3WTF24HashTableIteratorAdapterINS2_9HashTableIPN4base16sequence_manager9TaskQueueENS2_12KeyValuePairIS8_NSt3__110unique_ptrINS1_8MetadataENSA_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSL_ISF_EEEESM_NS2_18PartitionAllocatorEEESG_EE(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"struct.WTF::KeyValuePair"* %8, %"struct.WTF::KeyValuePair"* %9)
  %42 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 10
  %43 = load i8, i8* %42, align 8, !range !24
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %38
  %46 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %47 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 4
  %48 = load %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::ThreadSchedulerImpl"** %47, align 8
  %49 = bitcast %"class.blink::scheduler::ThreadSchedulerImpl"* %48 to %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)***
  %50 = load %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)**, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %50, i64 31
  %52 = load %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %51, align 8
  %53 = call %"class.base::sequence_manager::TimeDomain"* %52(%"class.blink::scheduler::ThreadSchedulerImpl"* %48) #10
  call void @_ZN4base16sequence_manager9TaskQueue13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::TaskQueue"* %46, %"class.base::sequence_manager::TimeDomain"* %53) #10
  %54 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  call void @_ZN4base16sequence_manager9TaskQueue11RemoveFenceEv(%"class.base::sequence_manager::TaskQueue"* %54) #10
  br label %55

55:                                               ; preds = %38, %45
  %56 = icmp eq i8* %41, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %55
  %58 = load i8, i8* %41, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %41, i8* %40, i64 %39) #10
  br label %61

61:                                               ; preds = %23, %17, %60, %57, %55, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler18TaskQueueThrottler8Metadata17DecrementRefCountEv(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = add i64 %3, -1
  store i64 %6, i64* %2, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 1
  %10 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %9, align 8
  tail call void @_ZN4base16sequence_manager9TaskQueue11SetObserverEPNS1_8ObserverE(%"class.base::sequence_manager::TaskQueue"* %10, %"class.base::sequence_manager::TaskQueue::Observer"* null) #10
  br label %11

11:                                               ; preds = %5, %1, %8
  %12 = phi i1 [ true, %8 ], [ false, %1 ], [ false, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler24MaybeDeleteQueueMetadataEN3WTF24HashTableIteratorAdapterINS2_9HashTableIPN4base16sequence_manager9TaskQueueENS2_12KeyValuePairIS8_NSt3__110unique_ptrINS1_8MetadataENSA_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSL_ISF_EEEESM_NS2_18PartitionAllocatorEEESG_EE(%"class.blink::scheduler::TaskQueueThrottler"*, %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %5, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %53

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %5, i64 0, i32 4, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %53

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %14, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %20
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, %1
  br i1 %22, label %53, label %23

23:                                               ; preds = %13
  store %"class.blink::scheduler::TaskQueueThrottler::Metadata"* null, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %4, align 8
  %24 = icmp eq %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %5, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %5 to void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)***
  %27 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)**, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %27, i64 1
  %29 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %28, align 8
  tail call void %29(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nonnull %5) #10
  br label %30

30:                                               ; preds = %25, %23
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store %"class.base::sequence_manager::TaskQueue"* inttoptr (i64 -1 to %"class.base::sequence_manager::TaskQueue"*), %"class.base::sequence_manager::TaskQueue"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  %35 = and i32 %34, 2147483647
  %36 = and i32 %33, -2147483648
  %37 = or i32 %35, %36
  store i32 %37, i32* %32, align 8
  %38 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -1
  store i32 %40, i32* %38, align 4
  %41 = mul i32 %40, 6
  %42 = load i32, i32* %18, align 8
  %43 = icmp ult i32 %41, %42
  %44 = icmp ugt i32 %42, 8
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %53

46:                                               ; preds = %30
  %47 = lshr i32 %42, 1
  %48 = zext i32 %47 to i64
  %49 = shl nuw nsw i64 %48, 4
  %50 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %49, i8* getelementptr inbounds ([248 x i8], [248 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN4base16sequence_manager9TaskQueueENSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 0, i64 %49, i1 false) #10
  %51 = bitcast i8* %50 to %"struct.WTF::KeyValuePair"*
  %52 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE8RehashToEPSF_jSQ_(%"class.WTF::HashTable"* %15, %"struct.WTF::KeyValuePair"* %51, i32 %47, %"struct.WTF::KeyValuePair"* null) #10
  br label %53

53:                                               ; preds = %46, %30, %13, %9, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9scheduler18TaskQueueThrottler11IsThrottledEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 8, !range !24
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0
  %10 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %9, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %3) #10
  %11 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %10, 0
  %12 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %16
  %18 = icmp eq %"struct.WTF::KeyValuePair"* %11, %17
  br i1 %18, label %25, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %21, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = icmp ne i64 %23, 0
  br label %25

25:                                               ; preds = %19, %7, %2
  %26 = phi i1 [ false, %2 ], [ %24, %19 ], [ false, %7 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler17ShutdownTaskQueueEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  %4 = alloca %"class.WTF::HashSet", align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %6, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %3) #10
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %8, %14
  br i1 %15, label %152, label %16

16:                                               ; preds = %2
  %17 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  %18 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 4
  %19 = load %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::ThreadSchedulerImpl"** %18, align 8
  %20 = bitcast %"class.blink::scheduler::ThreadSchedulerImpl"* %19 to %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)***
  %21 = load %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)**, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %21, i64 31
  %23 = load %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %22, align 8
  %24 = call %"class.base::sequence_manager::TimeDomain"* %23(%"class.blink::scheduler::ThreadSchedulerImpl"* %19) #10
  call void @_ZN4base16sequence_manager9TaskQueue13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::TaskQueue"* %17, %"class.base::sequence_manager::TimeDomain"* %24) #10
  %25 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  call void @_ZN4base16sequence_manager9TaskQueue11RemoveFenceEv(%"class.base::sequence_manager::TaskQueue"* %25) #10
  %26 = bitcast %"class.WTF::HashSet"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 2
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = bitcast %"class.WTF::HashSet"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  %32 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %30, align 8
  %33 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %32, i64 0, i32 4, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 20, i1 false) #10
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %72, label %37

37:                                               ; preds = %16
  call void @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.76"* nonnull %33, i32 %35) #10
  %38 = load i32, i32* %34, align 4
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %32, i64 0, i32 4, i32 0, i32 0
  %41 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %40, align 8
  %42 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %32, i64 0, i32 4, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %41, i64 %44
  br i1 %39, label %72, label %46

46:                                               ; preds = %37
  %47 = icmp eq i32 %43, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %46, %52
  %49 = phi %"class.blink::scheduler::BudgetPool"** [ %53, %52 ], [ %41, %46 ]
  %50 = bitcast %"class.blink::scheduler::BudgetPool"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %55 [
    i64 -1, label %52
    i64 0, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %49, i64 1
  %54 = icmp eq %"class.blink::scheduler::BudgetPool"** %53, %45
  br i1 %54, label %72, label %48

55:                                               ; preds = %48, %46
  %56 = phi %"class.blink::scheduler::BudgetPool"** [ %41, %46 ], [ %49, %48 ]
  %57 = icmp eq %"class.blink::scheduler::BudgetPool"** %56, %45
  br i1 %57, label %72, label %58

58:                                               ; preds = %55, %70
  %59 = phi %"class.blink::scheduler::BudgetPool"** [ %64, %70 ], [ %56, %55 ]
  %60 = call { %"class.blink::scheduler::BudgetPool"**, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.76"* nonnull %33, %"class.blink::scheduler::BudgetPool"** dereferenceable(8) %59, %"class.blink::scheduler::BudgetPool"** dereferenceable(8) %59) #10
  %61 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %59, i64 1
  %62 = icmp eq %"class.blink::scheduler::BudgetPool"** %61, %45
  br i1 %62, label %72, label %63

63:                                               ; preds = %58, %67
  %64 = phi %"class.blink::scheduler::BudgetPool"** [ %68, %67 ], [ %61, %58 ]
  %65 = bitcast %"class.blink::scheduler::BudgetPool"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  switch i64 %66, label %70 [
    i64 -1, label %67
    i64 0, label %67
  ]

67:                                               ; preds = %63, %63
  %68 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %64, i64 1
  %69 = icmp eq %"class.blink::scheduler::BudgetPool"** %68, %45
  br i1 %69, label %72, label %63

70:                                               ; preds = %63
  %71 = icmp eq %"class.blink::scheduler::BudgetPool"** %64, %45
  br i1 %71, label %72, label %58

72:                                               ; preds = %52, %58, %70, %67, %16, %37, %55
  %73 = load i32, i32* %29, align 4
  %74 = icmp eq i32 %73, 0
  %75 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %27, align 8
  %76 = load i32, i32* %28, align 8
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %75, i64 %77
  br i1 %74, label %91, label %79

79:                                               ; preds = %72
  %80 = icmp eq i32 %76, 0
  br i1 %80, label %88, label %81

81:                                               ; preds = %79, %85
  %82 = phi %"class.blink::scheduler::BudgetPool"** [ %86, %85 ], [ %75, %79 ]
  %83 = bitcast %"class.blink::scheduler::BudgetPool"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  switch i64 %84, label %88 [
    i64 -1, label %85
    i64 0, label %85
  ]

85:                                               ; preds = %81, %81
  %86 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %82, i64 1
  %87 = icmp eq %"class.blink::scheduler::BudgetPool"** %86, %78
  br i1 %87, label %91, label %81

88:                                               ; preds = %81, %79
  %89 = phi %"class.blink::scheduler::BudgetPool"** [ %75, %79 ], [ %82, %81 ]
  %90 = icmp eq %"class.blink::scheduler::BudgetPool"** %89, %78
  br i1 %90, label %91, label %137

91:                                               ; preds = %85, %137, %150, %147, %72, %88
  %92 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %6, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %3) #10
  %93 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %92, 0
  %94 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %95 = load i32, i32* %11, align 8
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %96
  %98 = icmp eq %"struct.WTF::KeyValuePair"* %97, %93
  br i1 %98, label %131, label %99

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 1, i32 0, i32 0, i32 0
  %101 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %100, align 8
  store %"class.blink::scheduler::TaskQueueThrottler::Metadata"* null, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %100, align 8
  %102 = icmp eq %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %101 to void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)***
  %105 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)**, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %105, i64 1
  %107 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %106, align 8
  call void %107(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nonnull %101) #10
  br label %108

108:                                              ; preds = %103, %99
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 0
  store %"class.base::sequence_manager::TaskQueue"* inttoptr (i64 -1 to %"class.base::sequence_manager::TaskQueue"*), %"class.base::sequence_manager::TaskQueue"** %109, align 8
  %110 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 1
  %113 = and i32 %112, 2147483647
  %114 = and i32 %111, -2147483648
  %115 = or i32 %113, %114
  store i32 %115, i32* %110, align 8
  %116 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = add i32 %117, -1
  store i32 %118, i32* %116, align 4
  %119 = mul i32 %118, 6
  %120 = load i32, i32* %11, align 8
  %121 = icmp ult i32 %119, %120
  %122 = icmp ugt i32 %120, 8
  %123 = and i1 %121, %122
  br i1 %123, label %124, label %131

124:                                              ; preds = %108
  %125 = lshr i32 %120, 1
  %126 = zext i32 %125 to i64
  %127 = shl nuw nsw i64 %126, 4
  %128 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %127, i8* getelementptr inbounds ([248 x i8], [248 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN4base16sequence_manager9TaskQueueENSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %128, i8 0, i64 %127, i1 false) #10
  %129 = bitcast i8* %128 to %"struct.WTF::KeyValuePair"*
  %130 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE8RehashToEPSF_jSQ_(%"class.WTF::HashTable"* %6, %"struct.WTF::KeyValuePair"* %129, i32 %125, %"struct.WTF::KeyValuePair"* null) #10
  br label %131

131:                                              ; preds = %91, %108, %124
  %132 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %27, align 8
  %133 = icmp eq %"class.blink::scheduler::BudgetPool"** %132, null
  br i1 %133, label %136, label %134, !prof !18

134:                                              ; preds = %131
  %135 = bitcast %"class.blink::scheduler::BudgetPool"** %132 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %135) #10
  store %"class.blink::scheduler::BudgetPool"** null, %"class.blink::scheduler::BudgetPool"*** %27, align 8
  br label %136

136:                                              ; preds = %131, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  br label %152

137:                                              ; preds = %88, %150
  %138 = phi %"class.blink::scheduler::BudgetPool"** [ %144, %150 ], [ %89, %88 ]
  %139 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %138, align 8
  %140 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %3, align 8
  call void @_ZN5blink9scheduler10BudgetPool15UnregisterQueueEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::BudgetPool"* %139, %"class.base::sequence_manager::TaskQueue"* %140) #10
  %141 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %138, i64 1
  %142 = icmp eq %"class.blink::scheduler::BudgetPool"** %141, %78
  br i1 %142, label %91, label %143

143:                                              ; preds = %137, %147
  %144 = phi %"class.blink::scheduler::BudgetPool"** [ %148, %147 ], [ %141, %137 ]
  %145 = bitcast %"class.blink::scheduler::BudgetPool"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  switch i64 %146, label %150 [
    i64 -1, label %147
    i64 0, label %147
  ]

147:                                              ; preds = %143, %143
  %148 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %144, i64 1
  %149 = icmp eq %"class.blink::scheduler::BudgetPool"** %148, %78
  br i1 %149, label %91, label %143

150:                                              ; preds = %143
  %151 = icmp eq %"class.blink::scheduler::BudgetPool"** %144, %78
  br i1 %151, label %91, label %137

152:                                              ; preds = %2, %136
  ret void
}

declare void @_ZN5blink9scheduler10BudgetPool15UnregisterQueueEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink9scheduler18TaskQueueThrottler24UpdateNextAllowedRunTimeEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %6, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %4) #10
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %8, %14
  br i1 %15, label %68, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %18, i64 0, i32 4, i32 0, i32 0
  %23 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %18, i64 0, i32 4, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %23, i64 %26
  br i1 %21, label %42, label %28

28:                                               ; preds = %16
  %29 = icmp eq i32 %25, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %28, %34
  %31 = phi %"class.blink::scheduler::BudgetPool"** [ %35, %34 ], [ %23, %28 ]
  %32 = bitcast %"class.blink::scheduler::BudgetPool"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  switch i64 %33, label %37 [
    i64 -1, label %34
    i64 0, label %34
  ]

34:                                               ; preds = %30, %30
  %35 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %31, i64 1
  %36 = icmp eq %"class.blink::scheduler::BudgetPool"** %35, %27
  br i1 %36, label %42, label %30

37:                                               ; preds = %30, %28
  %38 = phi %"class.blink::scheduler::BudgetPool"** [ %23, %28 ], [ %31, %30 ]
  %39 = icmp eq %"class.blink::scheduler::BudgetPool"** %38, %27
  br i1 %39, label %42, label %46

40:                                               ; preds = %46, %66, %63
  %41 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %17, align 8
  br label %42

42:                                               ; preds = %34, %16, %40, %37
  %43 = phi i64 [ %56, %40 ], [ %2, %37 ], [ %2, %16 ], [ %2, %34 ]
  %44 = phi %"class.blink::scheduler::TaskQueueThrottler::Metadata"* [ %41, %40 ], [ %18, %37 ], [ %18, %16 ], [ %18, %34 ]
  %45 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %44, i64 0, i32 5, i32 0, i32 0
  store i64 %43, i64* %45, align 8
  br label %68

46:                                               ; preds = %37, %66
  %47 = phi i64 [ %56, %66 ], [ %2, %37 ]
  %48 = phi %"class.blink::scheduler::BudgetPool"** [ %60, %66 ], [ %38, %37 ]
  %49 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %48, align 8
  %50 = bitcast %"class.blink::scheduler::BudgetPool"* %49 to i64 (%"class.blink::scheduler::BudgetPool"*, i64)***
  %51 = load i64 (%"class.blink::scheduler::BudgetPool"*, i64)**, i64 (%"class.blink::scheduler::BudgetPool"*, i64)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.blink::scheduler::BudgetPool"*, i64)*, i64 (%"class.blink::scheduler::BudgetPool"*, i64)** %51, i64 3
  %53 = load i64 (%"class.blink::scheduler::BudgetPool"*, i64)*, i64 (%"class.blink::scheduler::BudgetPool"*, i64)** %52, align 8
  %54 = call i64 %53(%"class.blink::scheduler::BudgetPool"* %49, i64 %2) #10
  %55 = icmp slt i64 %47, %54
  %56 = select i1 %55, i64 %54, i64 %47
  %57 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %48, i64 1
  %58 = icmp eq %"class.blink::scheduler::BudgetPool"** %57, %27
  br i1 %58, label %40, label %59

59:                                               ; preds = %46, %63
  %60 = phi %"class.blink::scheduler::BudgetPool"** [ %64, %63 ], [ %57, %46 ]
  %61 = bitcast %"class.blink::scheduler::BudgetPool"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  switch i64 %62, label %66 [
    i64 -1, label %63
    i64 0, label %63
  ]

63:                                               ; preds = %59, %59
  %64 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %60, i64 1
  %65 = icmp eq %"class.blink::scheduler::BudgetPool"** %64, %27
  br i1 %65, label %40, label %59

66:                                               ; preds = %59
  %67 = icmp eq %"class.blink::scheduler::BudgetPool"** %60, %27
  br i1 %67, label %40, label %46

68:                                               ; preds = %3, %42
  %69 = phi i64 [ %2, %3 ], [ %43, %42 ]
  ret i64 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler31MaybeSchedulePumpThrottledTasksERKN4base8LocationENS2_9TimeTicksES6_(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::Location"* dereferenceable(32), i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.base::RepeatingCallback.112", align 8
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 10
  %14 = load i8, i8* %13, align 8, !range !24
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %68, label %16

16:                                               ; preds = %4
  %17 = icmp slt i64 %2, %3
  %18 = select i1 %17, %"class.base::TimeTicks"* %6, %"class.base::TimeTicks"* %5
  %19 = call i64 @_ZNK4base9TimeTicks17SnappedToNextTickES0_NS_9TimeDeltaE(%"class.base::TimeTicks"* nonnull %18, i64 0, i64 1000000) #10
  %20 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !24
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br i1 %22, label %28, label %24

24:                                               ; preds = %16
  %25 = load i64, i64* %23, align 8
  %26 = icmp slt i64 %19, %25
  br i1 %26, label %27, label %68

27:                                               ; preds = %24
  store i64 %19, i64* %23, align 8
  br label %29

28:                                               ; preds = %16
  store i64 %19, i64* %23, align 8
  store i8 1, i8* %20, align 8
  br label %29

29:                                               ; preds = %27, %28
  %30 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 8
  call void @_ZN5blink9scheduler23CancelableClosureHolder6CancelEv(%"class.blink::scheduler::CancelableClosureHolder"* %30) #10
  %31 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 -6148914691236517206, i64* %32, align 8
  %33 = load i8, i8* %20, align 8, !range !24
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %29
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #12
  unreachable

36:                                               ; preds = %29
  %37 = load i64, i64* %11, align 8
  %38 = load i64, i64* %23, align 8
  %39 = sub nsw i64 %38, %37
  store i64 %39, i64* %32, align 8
  %40 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %41 = and i8 %40, 25
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %47, label %43, !prof !18

43:                                               ; preds = %36
  %44 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  %45 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %7) #10
  store i64 %45, i64* %8, align 8
  %46 = call i64 @_ZN20trace_event_internal13AddTraceEventIlEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64* nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  br label %47

47:                                               ; preds = %36, %43
  %48 = phi i64 [ -6148914691236517206, %36 ], [ %46, %43 ]
  %49 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %36 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), %43 ]
  %50 = phi i8* [ null, %36 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), %43 ]
  %51 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 3, i32 0
  %52 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %51, align 8
  %53 = bitcast %"class.base::SingleThreadTaskRunner"* %52 to %"class.base::TaskRunner"*
  call void @_ZNK5blink9scheduler23CancelableClosureHolder11GetCallbackEv(%"class.base::RepeatingCallback.112"* nonnull sret %10, %"class.blink::scheduler::CancelableClosureHolder"* %30) #10
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  %55 = getelementptr inbounds %"class.base::RepeatingCallback.112", %"class.base::RepeatingCallback.112"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %54, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %55) #10
  %56 = load i64, i64* %32, align 8
  %57 = bitcast %"class.base::SingleThreadTaskRunner"* %52 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %58 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %57, align 8
  %59 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %58, align 8
  %60 = call zeroext i1 %59(%"class.base::TaskRunner"* %53, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %9, i64 %56) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #10
  %61 = getelementptr inbounds %"class.base::RepeatingCallback.112", %"class.base::RepeatingCallback.112"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #10
  %62 = icmp eq i8* %50, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %47
  %64 = load i8, i8* %50, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %50, i8* %49, i64 %48) #10
  br label %67

67:                                               ; preds = %47, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %68

68:                                               ; preds = %24, %67, %4
  ret void
}

declare i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler43UpdateQueueSchedulingLifecycleStateInternalEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueEb(%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  %6 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  %7 = alloca %"class.base::sequence_manager::LazyNow", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca double, align 8
  %10 = alloca %"class.base::Location", align 8
  store %"class.base::sequence_manager::TaskQueue"* %2, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %11, i64 0, i32 0
  %13 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %12, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %6) #10
  %14 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %11, i64 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 %19
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %14, %20
  br i1 %21, label %26, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %24, i64 0, i32 5, i32 0, i32 0
  store i64 9223372036854775807, i64* %25, align 8
  br label %26

26:                                               ; preds = %4, %22
  %27 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %28 = call zeroext i1 @_ZNK4base16sequence_manager9TaskQueue14IsQueueEnabledEv(%"class.base::sequence_manager::TaskQueue"* %27) #10
  br i1 %28, label %29, label %180

29:                                               ; preds = %26
  %30 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %31 = bitcast %"class.blink::scheduler::TaskQueueThrottler"* %0 to i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)***
  %32 = load i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)**, i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)*, i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)** %32, i64 6
  %34 = load i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)*, i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)** %33, align 8
  %35 = call zeroext i1 %34(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::sequence_manager::TaskQueue"* %30) #10
  br i1 %35, label %36, label %180

36:                                               ; preds = %29
  %37 = bitcast %"class.base::sequence_manager::LazyNow"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  call void @_ZN4base16sequence_manager7LazyNowC1ENS_9TimeTicksE(%"class.base::sequence_manager::LazyNow"* nonnull %7, i64 %1) #10
  %38 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %39 = call zeroext i1 @_ZNK4base16sequence_manager9TaskQueue23HasTaskToRunImmediatelyEv(%"class.base::sequence_manager::TaskQueue"* %38) #10
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* nonnull %7) #10
  br label %46

42:                                               ; preds = %36
  %43 = call { i8, i64 } @_ZN4base16sequence_manager9TaskQueue22GetNextScheduledWakeUpEv(%"class.base::sequence_manager::TaskQueue"* %38) #10
  %44 = extractvalue { i8, i64 } %43, 0
  %45 = extractvalue { i8, i64 } %43, 1
  br label %46

46:                                               ; preds = %40, %42
  %47 = phi i8 [ 1, %40 ], [ %44, %42 ]
  %48 = phi i64 [ %41, %40 ], [ %45, %42 ]
  %49 = bitcast %"class.base::sequence_manager::TaskQueue"** %6 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.base::sequence_manager::TaskQueue"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = bitcast %"class.base::sequence_manager::TaskQueue"** %5 to i64*
  store i64 %50, i64* %52, align 8
  %53 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %12, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %5) #10
  %54 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %53, 0
  %55 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %56 = load i32, i32* %17, align 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 %57
  %59 = icmp eq %"struct.WTF::KeyValuePair"* %54, %58
  br i1 %59, label %107, label %60

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %62, i64 0, i32 4, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %62, i64 0, i32 4, i32 0, i32 0
  %67 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %66, align 8
  %68 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %62, i64 0, i32 4, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %67, i64 %70
  br i1 %65, label %107, label %72

72:                                               ; preds = %60
  %73 = icmp eq i32 %69, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %72, %78
  %75 = phi %"class.blink::scheduler::BudgetPool"** [ %79, %78 ], [ %67, %72 ]
  %76 = bitcast %"class.blink::scheduler::BudgetPool"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  switch i64 %77, label %81 [
    i64 -1, label %78
    i64 0, label %78
  ]

78:                                               ; preds = %74, %74
  %79 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %75, i64 1
  %80 = icmp eq %"class.blink::scheduler::BudgetPool"** %79, %71
  br i1 %80, label %107, label %74

81:                                               ; preds = %74, %72
  %82 = phi %"class.blink::scheduler::BudgetPool"** [ %67, %72 ], [ %75, %74 ]
  %83 = icmp eq %"class.blink::scheduler::BudgetPool"** %82, %71
  br i1 %83, label %107, label %84

84:                                               ; preds = %81
  %85 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %82, align 8
  br label %86

86:                                               ; preds = %84, %104
  %87 = phi %"class.blink::scheduler::BudgetPool"* [ %105, %104 ], [ %85, %84 ]
  %88 = phi %"class.blink::scheduler::BudgetPool"** [ %98, %104 ], [ %82, %84 ]
  %89 = bitcast %"class.blink::scheduler::BudgetPool"* %87 to i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)***
  %90 = load i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)**, i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*** %89, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*, i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)** %90, i64 4
  %92 = load i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*, i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)** %91, align 8
  %93 = call zeroext i1 %92(%"class.blink::scheduler::BudgetPool"* %87, i64 %1, i1 zeroext %3) #10
  br i1 %93, label %94, label %137

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %88, i64 1
  %96 = icmp eq %"class.blink::scheduler::BudgetPool"** %95, %71
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %101
  %98 = phi %"class.blink::scheduler::BudgetPool"** [ %102, %101 ], [ %95, %94 ]
  %99 = bitcast %"class.blink::scheduler::BudgetPool"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  switch i64 %100, label %104 [
    i64 -1, label %101
    i64 0, label %101
  ]

101:                                              ; preds = %97, %97
  %102 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %98, i64 1
  %103 = icmp eq %"class.blink::scheduler::BudgetPool"** %102, %71
  br i1 %103, label %107, label %97

104:                                              ; preds = %97
  %105 = inttoptr i64 %100 to %"class.blink::scheduler::BudgetPool"*
  %106 = icmp eq %"class.blink::scheduler::BudgetPool"** %98, %71
  br i1 %106, label %107, label %86

107:                                              ; preds = %78, %94, %104, %101, %46, %81, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  %108 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %109 = call i64 @_ZNK5blink9scheduler18TaskQueueThrottler23GetTimeTasksCanRunUntilEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksEb(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::sequence_manager::TaskQueue"* %108, i64 %1, i1 zeroext %3)
  %110 = icmp eq i64 %109, 9223372036854775807
  br i1 %110, label %111, label %113

111:                                              ; preds = %107
  %112 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  call void @_ZN4base16sequence_manager9TaskQueue11RemoveFenceEv(%"class.base::sequence_manager::TaskQueue"* %112) #10
  br label %118

113:                                              ; preds = %107
  %114 = icmp sgt i64 %109, %1
  %115 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  br i1 %114, label %116, label %117

116:                                              ; preds = %113
  call void @_ZN4base16sequence_manager9TaskQueue13InsertFenceAtENS_9TimeTicksE(%"class.base::sequence_manager::TaskQueue"* %115, i64 %109) #10
  br label %118

117:                                              ; preds = %113
  call void @_ZN4base16sequence_manager9TaskQueue11InsertFenceENS1_19InsertFencePositionE(%"class.base::sequence_manager::TaskQueue"* %115, i32 0) #10
  br label %118

118:                                              ; preds = %116, %117, %111
  %119 = icmp ne i8 %47, 0
  %120 = icmp ne i64 %48, %1
  %121 = and i1 %119, %120
  %122 = icmp slt i64 %48, %109
  %123 = and i1 %121, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %126 = load %"class.blink::scheduler::ThrottledTimeDomain"*, %"class.blink::scheduler::ThrottledTimeDomain"** %125, align 8
  call void @_ZN5blink9scheduler19ThrottledTimeDomain18SetNextTaskRunTimeEN4base9TimeTicksE(%"class.blink::scheduler::ThrottledTimeDomain"* %126, i64 %48) #10
  br label %127

127:                                              ; preds = %124, %118
  %128 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %129 = call { i8, i64 } @_ZN4base16sequence_manager9TaskQueue22GetNextScheduledWakeUpEv(%"class.base::sequence_manager::TaskQueue"* %128) #10
  %130 = extractvalue { i8, i64 } %129, 0
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %179, label %132

132:                                              ; preds = %127
  %133 = extractvalue { i8, i64 } %129, 1
  %134 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.4, i64 0, i64 0), i32 347) #10
  %135 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %136 = call i64 @_ZN5blink9scheduler18TaskQueueThrottler24UpdateNextAllowedRunTimeEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksE(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::sequence_manager::TaskQueue"* %135, i64 %133)
  call void @_ZN5blink9scheduler18TaskQueueThrottler31MaybeSchedulePumpThrottledTasksERKN4base8LocationENS2_9TimeTicksES6_(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::Location"* nonnull dereferenceable(32) %8, i64 %1, i64 %136)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #10
  br label %179

137:                                              ; preds = %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  %138 = icmp eq i8 %47, 0
  br i1 %138, label %179, label %139

139:                                              ; preds = %137
  %140 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %141 = call i64 @_ZN5blink9scheduler18TaskQueueThrottler24UpdateNextAllowedRunTimeEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksE(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::sequence_manager::TaskQueue"* %140, i64 %48)
  %142 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %143 = call i64 @_ZN5blink9scheduler18TaskQueueThrottler17GetQueueBlockTypeEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"* %0, i64 %1, %"class.base::sequence_manager::TaskQueue"* %142)
  %144 = trunc i64 %143 to i8
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %139
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #12
  unreachable

147:                                              ; preds = %139
  %148 = lshr i64 %143, 32
  %149 = trunc i64 %148 to i32
  switch i32 %149, label %177 [
    i32 0, label %150
    i32 1, label %172
  ]

150:                                              ; preds = %147
  %151 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  call void @_ZN4base16sequence_manager9TaskQueue11InsertFenceENS1_19InsertFencePositionE(%"class.base::sequence_manager::TaskQueue"* %151, i32 1) #10
  %152 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %153 = and i8 %152, 25
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %177, label %155, !prof !18

155:                                              ; preds = %150
  %156 = bitcast double* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #10
  %157 = sub nsw i64 %141, %48
  %158 = add i64 %157, -9223372036854775807
  %159 = icmp ult i64 %158, 2
  br i1 %159, label %163, label %160

160:                                              ; preds = %155
  %161 = sitofp i64 %157 to double
  %162 = fdiv double %161, 1.000000e+06
  br label %166

163:                                              ; preds = %155
  %164 = icmp slt i64 %157, 0
  %165 = select i1 %164, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %166

166:                                              ; preds = %160, %163
  %167 = phi double [ %165, %163 ], [ %162, %160 ]
  store double %167, double* %9, align 8
  %168 = call i64 @_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), double* nonnull dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #10
  %169 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %177, label %171

171:                                              ; preds = %166
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0), i64 %168) #10
  br label %177

172:                                              ; preds = %147
  %173 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %174 = call zeroext i1 @_ZN4base16sequence_manager9TaskQueue14HasActiveFenceEv(%"class.base::sequence_manager::TaskQueue"* %173) #10
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  call void @_ZN4base16sequence_manager9TaskQueue11InsertFenceENS1_19InsertFencePositionE(%"class.base::sequence_manager::TaskQueue"* %176, i32 0) #10
  br label %177

177:                                              ; preds = %150, %171, %166, %172, %175, %147
  %178 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %178) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.4, i64 0, i64 0), i32 388) #10
  call void @_ZN5blink9scheduler18TaskQueueThrottler31MaybeSchedulePumpThrottledTasksERKN4base8LocationENS2_9TimeTicksES6_(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::Location"* nonnull dereferenceable(32) %10, i64 %1, i64 %141)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %178) #10
  br label %179

179:                                              ; preds = %132, %127, %137, %177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  br label %180

180:                                              ; preds = %26, %29, %179
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink9scheduler18TaskQueueThrottler23AlignedThrottledRunTimeEN4base9TimeTicksE(i64) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %0, i64 1000000) #10
  %4 = extractvalue { i64, i1 } %3, 1
  %5 = extractvalue { i64, i1 } %3, 0
  %6 = select i1 %4, i64 9223372036854775807, i64 %5, !prof !25
  %7 = add i64 %0, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  %9 = srem i64 %0, 1000000
  %10 = select i1 %8, i64 %0, i64 %9
  %11 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %6, i64* %12, align 8
  %13 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %2, i64 %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  ret i64 %13
}

declare i64 @_ZNK4base9TimeTicks17SnappedToNextTickES0_NS_9TimeDeltaE(%"class.base::TimeTicks"*, i64, i64) local_unnamed_addr #2

declare void @_ZN5blink9scheduler23CancelableClosureHolder6CancelEv(%"class.blink::scheduler::CancelableClosureHolder"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIlEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i64, i64* %8, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %22 = load i8, i8* %16, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %58, label %24

24:                                               ; preds = %9, %53
  %25 = phi i64 [ %54, %53 ], [ 0, %9 ]
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %31 = bitcast %"union.base::trace_event::TraceValue"* %30 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %32 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %31, align 8
  %33 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %32 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %36 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %36, i64 1
  %38 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, align 8
  call void %38(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %32) #10
  %39 = load i8, i8* %26, align 1
  br label %40

40:                                               ; preds = %34, %24
  %41 = phi i8 [ %27, %24 ], [ %39, %34 ]
  %42 = icmp eq i8 %41, 9
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.protozero::HeapBuffered"**
  %46 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %45, align 8
  %47 = icmp eq %"class.protozero::HeapBuffered"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %49) #10
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %51) #10
  %52 = bitcast %"class.protozero::HeapBuffered"* %46 to i8*
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %48, %43, %40, %29
  %54 = add nuw nsw i64 %25, 1
  %55 = load i8, i8* %16, align 8
  %56 = zext i8 %55 to i64
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %24, label %58

58:                                               ; preds = %53, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %21
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

declare void @_ZNK5blink9scheduler23CancelableClosureHolder11GetCallbackEv(%"class.base::RepeatingCallback.112"* sret, %"class.blink::scheduler::CancelableClosureHolder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::scheduler::CPUTimeBudgetPool"* @_ZN5blink9scheduler18TaskQueueThrottler23CreateCPUTimeBudgetPoolEPKc(%"class.blink::scheduler::TaskQueueThrottler"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::scheduler::CPUTimeBudgetPool"*, align 8
  %4 = alloca %"class.std::__1::unique_ptr.143", align 8
  %5 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store %"class.blink::scheduler::CPUTimeBudgetPool"* inttoptr (i64 -6148914691236517206 to %"class.blink::scheduler::CPUTimeBudgetPool"*), %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  %6 = tail call noalias i8* @malloc(i64 160) #10
  %7 = bitcast i8* %6 to %"class.blink::scheduler::CPUTimeBudgetPool"*
  %8 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 5
  %10 = load %"class.blink::scheduler::TraceableVariableController"*, %"class.blink::scheduler::TraceableVariableController"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 6
  %12 = load %"class.base::TickClock"*, %"class.base::TickClock"** %11, align 8
  %13 = bitcast %"class.base::TickClock"* %12 to i64 (%"class.base::TickClock"*)***
  %14 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %14, i64 2
  %16 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::TickClock"* %12) #10
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPoolC1EPKcPNS0_20BudgetPoolControllerEPNS0_27TraceableVariableControllerEN4base9TimeTicksE(%"class.blink::scheduler::CPUTimeBudgetPool"* %7, i8* %1, %"class.blink::scheduler::BudgetPoolController"* %8, %"class.blink::scheduler::TraceableVariableController"* %10, i64 %17) #10
  %18 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"** %3 to i8**
  store i8* %6, i8** %18, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.143"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.143"* %4 to i8**
  store i8* %6, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0
  %23 = call { %"struct.WTF::KeyValuePair.118"*, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPNS2_17CPUTimeBudgetPoolENS7_ISP_NS8_ISP_EEEEEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.115"* %22, %"class.blink::scheduler::CPUTimeBudgetPool"** nonnull dereferenceable(8) %3, %"class.std::__1::unique_ptr.143"* nonnull dereferenceable(8) %4) #10
  %24 = extractvalue { %"struct.WTF::KeyValuePair.118"*, i8 } %23, 1
  %25 = and i8 %24, 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %2
  %28 = extractvalue { %"struct.WTF::KeyValuePair.118"*, i8 } %23, 0
  %29 = bitcast %"class.std::__1::unique_ptr.143"* %4 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.blink::scheduler::CPUTimeBudgetPool"* null, %"class.blink::scheduler::CPUTimeBudgetPool"** %20, align 8
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %28, i64 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.119"* %31 to i64*
  store i64 %30, i64* %34, align 8
  %35 = icmp eq %"class.blink::scheduler::BudgetPool"* %33, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.blink::scheduler::BudgetPool"* %33 to void (%"class.blink::scheduler::BudgetPool"*)***
  %38 = load void (%"class.blink::scheduler::BudgetPool"*)**, void (%"class.blink::scheduler::BudgetPool"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %38, i64 1
  %40 = load void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %39, align 8
  call void %40(%"class.blink::scheduler::BudgetPool"* nonnull %33) #10
  br label %41

41:                                               ; preds = %2, %27, %36
  %42 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %20, align 8
  store %"class.blink::scheduler::CPUTimeBudgetPool"* null, %"class.blink::scheduler::CPUTimeBudgetPool"** %20, align 8
  %43 = icmp eq %"class.blink::scheduler::CPUTimeBudgetPool"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"* %42 to void (%"class.blink::scheduler::CPUTimeBudgetPool"*)***
  %46 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)**, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %46, i64 1
  %48 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %47, align 8
  call void %48(%"class.blink::scheduler::CPUTimeBudgetPool"* nonnull %42) #10
  br label %49

49:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %50 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret %"class.blink::scheduler::CPUTimeBudgetPool"* %50
}

declare void @_ZN5blink9scheduler17CPUTimeBudgetPoolC1EPKcPNS0_20BudgetPoolControllerEPNS0_27TraceableVariableControllerEN4base9TimeTicksE(%"class.blink::scheduler::CPUTimeBudgetPool"*, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.blink::scheduler::TraceableVariableController"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::scheduler::WakeUpBudgetPool"* @_ZN5blink9scheduler18TaskQueueThrottler22CreateWakeUpBudgetPoolEPKc(%"class.blink::scheduler::TaskQueueThrottler"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::scheduler::WakeUpBudgetPool"*, align 8
  %4 = alloca %"class.std::__1::unique_ptr.149", align 8
  %5 = bitcast %"class.blink::scheduler::WakeUpBudgetPool"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store %"class.blink::scheduler::WakeUpBudgetPool"* inttoptr (i64 -6148914691236517206 to %"class.blink::scheduler::WakeUpBudgetPool"*), %"class.blink::scheduler::WakeUpBudgetPool"** %3, align 8
  %6 = tail call noalias i8* @malloc(i64 96) #10
  %7 = bitcast i8* %6 to %"class.blink::scheduler::WakeUpBudgetPool"*
  %8 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 6
  %10 = load %"class.base::TickClock"*, %"class.base::TickClock"** %9, align 8
  %11 = bitcast %"class.base::TickClock"* %10 to i64 (%"class.base::TickClock"*)***
  %12 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %12, i64 2
  %14 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::TickClock"* %10) #10
  tail call void @_ZN5blink9scheduler16WakeUpBudgetPoolC1EPKcPNS0_20BudgetPoolControllerEN4base9TimeTicksE(%"class.blink::scheduler::WakeUpBudgetPool"* %7, i8* %1, %"class.blink::scheduler::BudgetPoolController"* %8, i64 %15) #10
  %16 = bitcast %"class.blink::scheduler::WakeUpBudgetPool"** %3 to i8**
  store i8* %6, i8** %16, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.149"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr.149"* %4 to i8**
  store i8* %6, i8** %19, align 8
  %20 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0
  %21 = call { %"struct.WTF::KeyValuePair.118"*, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPNS2_16WakeUpBudgetPoolENS7_ISP_NS8_ISP_EEEEEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.115"* %20, %"class.blink::scheduler::WakeUpBudgetPool"** nonnull dereferenceable(8) %3, %"class.std::__1::unique_ptr.149"* nonnull dereferenceable(8) %4) #10
  %22 = extractvalue { %"struct.WTF::KeyValuePair.118"*, i8 } %21, 1
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %2
  %26 = extractvalue { %"struct.WTF::KeyValuePair.118"*, i8 } %21, 0
  %27 = bitcast %"class.std::__1::unique_ptr.149"* %4 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.blink::scheduler::WakeUpBudgetPool"* null, %"class.blink::scheduler::WakeUpBudgetPool"** %18, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %26, i64 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.119"* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %"class.blink::scheduler::BudgetPool"* %31, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %25
  %35 = bitcast %"class.blink::scheduler::BudgetPool"* %31 to void (%"class.blink::scheduler::BudgetPool"*)***
  %36 = load void (%"class.blink::scheduler::BudgetPool"*)**, void (%"class.blink::scheduler::BudgetPool"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %36, i64 1
  %38 = load void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %37, align 8
  call void %38(%"class.blink::scheduler::BudgetPool"* nonnull %31) #10
  br label %39

39:                                               ; preds = %2, %25, %34
  %40 = load %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"** %18, align 8
  store %"class.blink::scheduler::WakeUpBudgetPool"* null, %"class.blink::scheduler::WakeUpBudgetPool"** %18, align 8
  %41 = icmp eq %"class.blink::scheduler::WakeUpBudgetPool"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::scheduler::WakeUpBudgetPool"* %40 to void (%"class.blink::scheduler::WakeUpBudgetPool"*)***
  %44 = load void (%"class.blink::scheduler::WakeUpBudgetPool"*)**, void (%"class.blink::scheduler::WakeUpBudgetPool"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::scheduler::WakeUpBudgetPool"*)*, void (%"class.blink::scheduler::WakeUpBudgetPool"*)** %44, i64 1
  %46 = load void (%"class.blink::scheduler::WakeUpBudgetPool"*)*, void (%"class.blink::scheduler::WakeUpBudgetPool"*)** %45, align 8
  call void %46(%"class.blink::scheduler::WakeUpBudgetPool"* nonnull %40) #10
  br label %47

47:                                               ; preds = %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %48 = load %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret %"class.blink::scheduler::WakeUpBudgetPool"* %48
}

declare void @_ZN5blink9scheduler16WakeUpBudgetPoolC1EPKcPNS0_20BudgetPoolControllerEN4base9TimeTicksE(%"class.blink::scheduler::WakeUpBudgetPool"*, i8*, %"class.blink::scheduler::BudgetPoolController"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler21OnTaskRunTimeReportedEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksES6_(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %5, align 8
  %6 = bitcast %"class.blink::scheduler::TaskQueueThrottler"* %0 to i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)***
  %7 = load i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)**, i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)*, i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)** %7, i64 6
  %9 = load i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)*, i1 (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"class.base::sequence_manager::TaskQueue"* %1) #10
  br i1 %10, label %11, label %66

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0
  %14 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %13, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %5) #10
  %15 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %20
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %15, %21
  br i1 %22, label %66, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %25, i64 0, i32 4, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %25, i64 0, i32 4, i32 0, i32 0
  %30 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %25, i64 0, i32 4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %30, i64 %33
  br i1 %28, label %66, label %35

35:                                               ; preds = %23
  %36 = icmp eq i32 %32, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %35, %41
  %38 = phi %"class.blink::scheduler::BudgetPool"** [ %42, %41 ], [ %30, %35 ]
  %39 = bitcast %"class.blink::scheduler::BudgetPool"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %44 [
    i64 -1, label %41
    i64 0, label %41
  ]

41:                                               ; preds = %37, %37
  %42 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %38, i64 1
  %43 = icmp eq %"class.blink::scheduler::BudgetPool"** %42, %34
  br i1 %43, label %66, label %37

44:                                               ; preds = %37, %35
  %45 = phi %"class.blink::scheduler::BudgetPool"** [ %30, %35 ], [ %38, %37 ]
  %46 = icmp eq %"class.blink::scheduler::BudgetPool"** %45, %34
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %64
  %48 = phi %"class.blink::scheduler::BudgetPool"** [ %58, %64 ], [ %45, %44 ]
  %49 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %48, align 8
  %50 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %5, align 8
  %51 = bitcast %"class.blink::scheduler::BudgetPool"* %49 to void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)***
  %52 = load void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)**, void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)*, void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)** %52, i64 2
  %54 = load void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)*, void (%"class.blink::scheduler::BudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64)** %53, align 8
  call void %54(%"class.blink::scheduler::BudgetPool"* %49, %"class.base::sequence_manager::TaskQueue"* %50, i64 %2, i64 %3) #10
  %55 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %48, i64 1
  %56 = icmp eq %"class.blink::scheduler::BudgetPool"** %55, %34
  br i1 %56, label %66, label %57

57:                                               ; preds = %47, %61
  %58 = phi %"class.blink::scheduler::BudgetPool"** [ %62, %61 ], [ %55, %47 ]
  %59 = bitcast %"class.blink::scheduler::BudgetPool"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %64 [
    i64 -1, label %61
    i64 0, label %61
  ]

61:                                               ; preds = %57, %57
  %62 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %58, i64 1
  %63 = icmp eq %"class.blink::scheduler::BudgetPool"** %62, %34
  br i1 %63, label %66, label %57

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::scheduler::BudgetPool"** %58, %34
  br i1 %65, label %66, label %47

66:                                               ; preds = %41, %47, %64, %61, %23, %44, %11, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler35UpdateQueueSchedulingLifecycleStateEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9scheduler18TaskQueueThrottler43UpdateQueueSchedulingLifecycleStateInternalEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueEb(%"class.blink::scheduler::TaskQueueThrottler"* %0, i64 %1, %"class.base::sequence_manager::TaskQueue"* %2, i1 zeroext false)
  ret void
}

declare void @_ZN4base16sequence_manager7LazyNowC1ENS_9TimeTicksE(%"class.base::sequence_manager::LazyNow"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler18TaskQueueThrottler13CanRunTasksAtEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksEb(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0
  %8 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %7, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %5) #10
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %9, %15
  br i1 %16, label %61, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %19, i64 0, i32 4, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %19, i64 0, i32 4, i32 0, i32 0
  %24 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %19, i64 0, i32 4, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %24, i64 %27
  br i1 %22, label %61, label %29

29:                                               ; preds = %17
  %30 = icmp eq i32 %26, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %29, %35
  %32 = phi %"class.blink::scheduler::BudgetPool"** [ %36, %35 ], [ %24, %29 ]
  %33 = bitcast %"class.blink::scheduler::BudgetPool"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  switch i64 %34, label %38 [
    i64 -1, label %35
    i64 0, label %35
  ]

35:                                               ; preds = %31, %31
  %36 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %32, i64 1
  %37 = icmp eq %"class.blink::scheduler::BudgetPool"** %36, %28
  br i1 %37, label %61, label %31

38:                                               ; preds = %31, %29
  %39 = phi %"class.blink::scheduler::BudgetPool"** [ %24, %29 ], [ %32, %31 ]
  %40 = icmp eq %"class.blink::scheduler::BudgetPool"** %39, %28
  br i1 %40, label %61, label %41

41:                                               ; preds = %38, %59
  %42 = phi %"class.blink::scheduler::BudgetPool"** [ %53, %59 ], [ %39, %38 ]
  %43 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %42, align 8
  %44 = bitcast %"class.blink::scheduler::BudgetPool"* %43 to i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)***
  %45 = load i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)**, i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*, i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)** %45, i64 4
  %47 = load i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*, i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)** %46, align 8
  %48 = call zeroext i1 %47(%"class.blink::scheduler::BudgetPool"* %43, i64 %2, i1 zeroext %3) #10
  br i1 %48, label %49, label %61

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %42, i64 1
  %51 = icmp eq %"class.blink::scheduler::BudgetPool"** %50, %28
  br i1 %51, label %61, label %52

52:                                               ; preds = %49, %56
  %53 = phi %"class.blink::scheduler::BudgetPool"** [ %57, %56 ], [ %50, %49 ]
  %54 = bitcast %"class.blink::scheduler::BudgetPool"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  switch i64 %55, label %59 [
    i64 -1, label %56
    i64 0, label %56
  ]

56:                                               ; preds = %52, %52
  %57 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %53, i64 1
  %58 = icmp eq %"class.blink::scheduler::BudgetPool"** %57, %28
  br i1 %58, label %61, label %52

59:                                               ; preds = %52
  %60 = icmp eq %"class.blink::scheduler::BudgetPool"** %53, %28
  br i1 %60, label %61, label %41

61:                                               ; preds = %35, %49, %41, %59, %56, %17, %38, %4
  %62 = phi i1 [ true, %4 ], [ true, %38 ], [ true, %17 ], [ true, %56 ], [ true, %49 ], [ false, %41 ], [ true, %59 ], [ true, %35 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9scheduler18TaskQueueThrottler23GetTimeTasksCanRunUntilEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksEb(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0
  %8 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %7, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %5) #10
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %9, %15
  br i1 %16, label %63, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %19, i64 0, i32 4, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %19, i64 0, i32 4, i32 0, i32 0
  %24 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %19, i64 0, i32 4, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %24, i64 %27
  br i1 %22, label %63, label %29

29:                                               ; preds = %17
  %30 = icmp eq i32 %26, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %29, %35
  %32 = phi %"class.blink::scheduler::BudgetPool"** [ %36, %35 ], [ %24, %29 ]
  %33 = bitcast %"class.blink::scheduler::BudgetPool"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  switch i64 %34, label %38 [
    i64 -1, label %35
    i64 0, label %35
  ]

35:                                               ; preds = %31, %31
  %36 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %32, i64 1
  %37 = icmp eq %"class.blink::scheduler::BudgetPool"** %36, %28
  br i1 %37, label %63, label %31

38:                                               ; preds = %31, %29
  %39 = phi %"class.blink::scheduler::BudgetPool"** [ %24, %29 ], [ %32, %31 ]
  %40 = icmp eq %"class.blink::scheduler::BudgetPool"** %39, %28
  br i1 %40, label %63, label %41

41:                                               ; preds = %38, %61
  %42 = phi i64 [ %51, %61 ], [ 9223372036854775807, %38 ]
  %43 = phi %"class.blink::scheduler::BudgetPool"** [ %55, %61 ], [ %39, %38 ]
  %44 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %43, align 8
  %45 = bitcast %"class.blink::scheduler::BudgetPool"* %44 to i64 (%"class.blink::scheduler::BudgetPool"*, i64, i1)***
  %46 = load i64 (%"class.blink::scheduler::BudgetPool"*, i64, i1)**, i64 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*** %45, align 8
  %47 = getelementptr inbounds i64 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*, i64 (%"class.blink::scheduler::BudgetPool"*, i64, i1)** %46, i64 5
  %48 = load i64 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*, i64 (%"class.blink::scheduler::BudgetPool"*, i64, i1)** %47, align 8
  %49 = call i64 %48(%"class.blink::scheduler::BudgetPool"* %44, i64 %2, i1 zeroext %3) #10
  %50 = icmp slt i64 %49, %42
  %51 = select i1 %50, i64 %49, i64 %42
  %52 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %43, i64 1
  %53 = icmp eq %"class.blink::scheduler::BudgetPool"** %52, %28
  br i1 %53, label %63, label %54

54:                                               ; preds = %41, %58
  %55 = phi %"class.blink::scheduler::BudgetPool"** [ %59, %58 ], [ %52, %41 ]
  %56 = bitcast %"class.blink::scheduler::BudgetPool"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  switch i64 %57, label %61 [
    i64 -1, label %58
    i64 0, label %58
  ]

58:                                               ; preds = %54, %54
  %59 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %55, i64 1
  %60 = icmp eq %"class.blink::scheduler::BudgetPool"** %59, %28
  br i1 %60, label %63, label %54

61:                                               ; preds = %54
  %62 = icmp eq %"class.blink::scheduler::BudgetPool"** %55, %28
  br i1 %62, label %63, label %41

63:                                               ; preds = %35, %41, %61, %58, %17, %38, %4
  %64 = phi i64 [ 9223372036854775807, %38 ], [ 9223372036854775807, %4 ], [ 9223372036854775807, %17 ], [ %51, %58 ], [ %51, %61 ], [ %51, %41 ], [ 9223372036854775807, %35 ]
  ret i64 %64
}

declare void @_ZN4base16sequence_manager9TaskQueue13InsertFenceAtENS_9TimeTicksE(%"class.base::sequence_manager::TaskQueue"*, i64) local_unnamed_addr #2

declare void @_ZN5blink9scheduler19ThrottledTimeDomain18SetNextTaskRunTimeEN4base9TimeTicksE(%"class.blink::scheduler::ThrottledTimeDomain"*, i64) local_unnamed_addr #2

declare { i8, i64 } @_ZN4base16sequence_manager9TaskQueue22GetNextScheduledWakeUpEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink9scheduler18TaskQueueThrottler17GetQueueBlockTypeEN4base9TimeTicksEPNS2_16sequence_manager9TaskQueueE(%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  store %"class.base::sequence_manager::TaskQueue"* %2, %"class.base::sequence_manager::TaskQueue"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %6, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %4) #10
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %8, %14
  br i1 %15, label %73, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %18, i64 0, i32 4, i32 0, i32 0
  %23 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %18, i64 0, i32 4, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %23, i64 %26
  br i1 %21, label %69, label %28

28:                                               ; preds = %16
  %29 = icmp eq i32 %25, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %28, %34
  %31 = phi %"class.blink::scheduler::BudgetPool"** [ %35, %34 ], [ %23, %28 ]
  %32 = bitcast %"class.blink::scheduler::BudgetPool"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  switch i64 %33, label %37 [
    i64 -1, label %34
    i64 0, label %34
  ]

34:                                               ; preds = %30, %30
  %35 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %31, i64 1
  %36 = icmp eq %"class.blink::scheduler::BudgetPool"** %35, %27
  br i1 %36, label %69, label %30

37:                                               ; preds = %30, %28
  %38 = phi %"class.blink::scheduler::BudgetPool"** [ %23, %28 ], [ %31, %30 ]
  %39 = icmp eq %"class.blink::scheduler::BudgetPool"** %38, %27
  br i1 %39, label %69, label %40

40:                                               ; preds = %37, %67
  %41 = phi i8 [ %57, %67 ], [ 0, %37 ]
  %42 = phi %"class.blink::scheduler::BudgetPool"** [ %61, %67 ], [ %38, %37 ]
  %43 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %42, align 8
  %44 = bitcast %"class.blink::scheduler::BudgetPool"* %43 to i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)***
  %45 = load i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)**, i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*, i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)** %45, i64 4
  %47 = load i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)*, i1 (%"class.blink::scheduler::BudgetPool"*, i64, i1)** %46, align 8
  %48 = call zeroext i1 %47(%"class.blink::scheduler::BudgetPool"* %43, i64 %1, i1 zeroext false) #10
  br i1 %48, label %56, label %49

49:                                               ; preds = %40
  %50 = bitcast %"class.blink::scheduler::BudgetPool"* %43 to i32 (%"class.blink::scheduler::BudgetPool"*)***
  %51 = load i32 (%"class.blink::scheduler::BudgetPool"*)**, i32 (%"class.blink::scheduler::BudgetPool"*)*** %50, align 8
  %52 = getelementptr inbounds i32 (%"class.blink::scheduler::BudgetPool"*)*, i32 (%"class.blink::scheduler::BudgetPool"*)** %51, i64 8
  %53 = load i32 (%"class.blink::scheduler::BudgetPool"*)*, i32 (%"class.blink::scheduler::BudgetPool"*)** %52, align 8
  %54 = call i32 %53(%"class.blink::scheduler::BudgetPool"* %43) #10
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %73, label %56

56:                                               ; preds = %49, %40
  %57 = phi i8 [ 1, %49 ], [ %41, %40 ]
  %58 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %42, i64 1
  %59 = icmp eq %"class.blink::scheduler::BudgetPool"** %58, %27
  br i1 %59, label %69, label %60

60:                                               ; preds = %56, %64
  %61 = phi %"class.blink::scheduler::BudgetPool"** [ %65, %64 ], [ %58, %56 ]
  %62 = bitcast %"class.blink::scheduler::BudgetPool"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  switch i64 %63, label %67 [
    i64 -1, label %64
    i64 0, label %64
  ]

64:                                               ; preds = %60, %60
  %65 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %61, i64 1
  %66 = icmp eq %"class.blink::scheduler::BudgetPool"** %65, %27
  br i1 %66, label %69, label %60

67:                                               ; preds = %60
  %68 = icmp eq %"class.blink::scheduler::BudgetPool"** %61, %27
  br i1 %68, label %69, label %40

69:                                               ; preds = %34, %56, %67, %64, %16, %37
  %70 = phi i8 [ 0, %37 ], [ 0, %16 ], [ %57, %64 ], [ %57, %67 ], [ %57, %56 ], [ 0, %34 ]
  %71 = and i8 %70, 1
  %72 = zext i8 %71 to i64
  br label %73

73:                                               ; preds = %49, %69, %3
  %74 = phi i64 [ 0, %3 ], [ %72, %69 ], [ 1, %49 ]
  %75 = phi i64 [ 0, %3 ], [ 4294967296, %69 ], [ 0, %49 ]
  %76 = or i64 %75, %74
  ret i64 %76
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, double* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 4, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = bitcast double* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #10
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #10
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #10
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %22
}

declare zeroext i1 @_ZN4base16sequence_manager9TaskQueue14HasActiveFenceEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9scheduler18TaskQueueThrottler14WriteIntoTraceEN8perfetto11TracedValueEN4base9TimeTicksE(%"class.blink::scheduler::TaskQueueThrottler"* nocapture readonly, %"class.perfetto::TracedValue"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedDictionary", align 8
  %14 = alloca %"class.perfetto::TracedArray", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = alloca %"class.perfetto::TracedArray", align 8
  %17 = alloca %"class.perfetto::TracedDictionary", align 8
  %18 = bitcast %"class.perfetto::TracedDictionary"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10
  %19 = bitcast %"class.perfetto::TracedDictionary"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %13, %"class.perfetto::TracedValue"* %1) #10
  %20 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !24
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %39, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = sub nsw i64 %25, %2
  %27 = add i64 %26, -9223372036854775807
  %28 = icmp ult i64 %27, 2
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = sitofp i64 %26 to double
  %31 = fdiv double %30, 1.000000e+06
  br label %35

32:                                               ; preds = %23
  %33 = icmp slt i64 %26, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %35

35:                                               ; preds = %29, %32
  %36 = phi double [ %34, %32 ], [ %31, %29 ]
  %37 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0)) #10
  %38 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %37, i64 16, i1 false) #10
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %6, double %36) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37)
  br label %39

39:                                               ; preds = %3, %35
  %40 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 10
  %41 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %5, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0)) #10
  %42 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %41, i64 16, i1 false) #10
  %43 = load i8, i8* %40, align 1, !range !24
  %44 = icmp ne i8 %43, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %4, i1 zeroext %44) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  %45 = bitcast %"class.perfetto::TracedArray"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #10
  %46 = bitcast %"class.perfetto::TracedArray"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  call void @_ZN8perfetto16TracedDictionary8AddArrayENS_12StaticStringE(%"class.perfetto::TracedArray"* nonnull sret %14, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0)) #10
  %47 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %51, i64 %54
  br i1 %49, label %68, label %56

56:                                               ; preds = %39
  %57 = icmp eq i32 %53, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %56, %62
  %59 = phi %"struct.WTF::KeyValuePair.118"* [ %63, %62 ], [ %51, %56 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.118"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  switch i64 %61, label %65 [
    i64 -1, label %62
    i64 0, label %62
  ]

62:                                               ; preds = %58, %58
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %59, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair.118"* %63, %55
  br i1 %64, label %68, label %58

65:                                               ; preds = %58, %56
  %66 = phi %"struct.WTF::KeyValuePair.118"* [ %51, %56 ], [ %59, %58 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.118"* %66, %55
  br i1 %67, label %68, label %101

68:                                               ; preds = %62, %101, %118, %115, %39, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #10
  %69 = bitcast %"class.perfetto::TracedArray"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #10
  %70 = bitcast %"class.perfetto::TracedArray"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 16, i1 false)
  call void @_ZN8perfetto16TracedDictionary8AddArrayENS_12StaticStringE(%"class.perfetto::TracedArray"* nonnull sret %16, %"class.perfetto::TracedDictionary"* nonnull %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0)) #10
  %71 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 0
  %75 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %78
  br i1 %73, label %120, label %80

80:                                               ; preds = %68
  %81 = icmp eq i32 %77, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %80, %86
  %83 = phi %"struct.WTF::KeyValuePair"* [ %87, %86 ], [ %75, %80 ]
  %84 = bitcast %"struct.WTF::KeyValuePair"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  switch i64 %85, label %89 [
    i64 -1, label %86
    i64 0, label %86
  ]

86:                                               ; preds = %82, %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 1
  %88 = icmp eq %"struct.WTF::KeyValuePair"* %87, %79
  br i1 %88, label %120, label %82

89:                                               ; preds = %82, %80
  %90 = phi %"struct.WTF::KeyValuePair"* [ %75, %80 ], [ %83, %82 ]
  %91 = icmp eq %"struct.WTF::KeyValuePair"* %90, %79
  br i1 %91, label %120, label %92

92:                                               ; preds = %89
  %93 = bitcast %"class.perfetto::TracedDictionary"* %17 to i8*
  %94 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  %95 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  %96 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  %97 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %11 to i8*
  %98 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %11 to i64*
  %99 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %100 = bitcast %"class.perfetto::TracedDictionary"* %17 to i8*
  br label %121

101:                                              ; preds = %65, %118
  %102 = phi %"struct.WTF::KeyValuePair.118"* [ %112, %118 ], [ %66, %65 ]
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %102, i64 0, i32 0
  %104 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %103, align 8
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %15, %"class.perfetto::TracedArray"* nonnull %14) #10
  %105 = bitcast %"class.blink::scheduler::BudgetPool"* %104 to void (%"class.blink::scheduler::BudgetPool"*, %"class.perfetto::TracedValue"*, i64)***
  %106 = load void (%"class.blink::scheduler::BudgetPool"*, %"class.perfetto::TracedValue"*, i64)**, void (%"class.blink::scheduler::BudgetPool"*, %"class.perfetto::TracedValue"*, i64)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*, %"class.perfetto::TracedValue"*, i64)*, void (%"class.blink::scheduler::BudgetPool"*, %"class.perfetto::TracedValue"*, i64)** %106, i64 9
  %108 = load void (%"class.blink::scheduler::BudgetPool"*, %"class.perfetto::TracedValue"*, i64)*, void (%"class.blink::scheduler::BudgetPool"*, %"class.perfetto::TracedValue"*, i64)** %107, align 8
  call void %108(%"class.blink::scheduler::BudgetPool"* %104, %"class.perfetto::TracedValue"* nonnull %15, i64 %2) #10
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %102, i64 1
  %110 = icmp eq %"struct.WTF::KeyValuePair.118"* %109, %55
  br i1 %110, label %68, label %111

111:                                              ; preds = %101, %115
  %112 = phi %"struct.WTF::KeyValuePair.118"* [ %116, %115 ], [ %109, %101 ]
  %113 = bitcast %"struct.WTF::KeyValuePair.118"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  switch i64 %114, label %118 [
    i64 -1, label %115
    i64 0, label %115
  ]

115:                                              ; preds = %111, %111
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %112, i64 1
  %117 = icmp eq %"struct.WTF::KeyValuePair.118"* %116, %55
  br i1 %117, label %68, label %111

118:                                              ; preds = %111
  %119 = icmp eq %"struct.WTF::KeyValuePair.118"* %112, %55
  br i1 %119, label %68, label %101

120:                                              ; preds = %86, %121, %142, %139, %68, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10
  ret void

121:                                              ; preds = %92, %142
  %122 = phi %"struct.WTF::KeyValuePair"* [ %90, %92 ], [ %136, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 16, i1 false)
  call void @_ZN8perfetto11TracedArray16AppendDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %17, %"class.perfetto::TracedArray"* nonnull %16) #10
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0
  %124 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %123, align 8
  %125 = bitcast %"class.base::sequence_manager::TaskQueue"* %124 to i8* (%"class.base::sequence_manager::TaskQueue"*)***
  %126 = load i8* (%"class.base::sequence_manager::TaskQueue"*)**, i8* (%"class.base::sequence_manager::TaskQueue"*)*** %125, align 8
  %127 = getelementptr inbounds i8* (%"class.base::sequence_manager::TaskQueue"*)*, i8* (%"class.base::sequence_manager::TaskQueue"*)** %126, i64 1
  %128 = load i8* (%"class.base::sequence_manager::TaskQueue"*)*, i8* (%"class.base::sequence_manager::TaskQueue"*)** %127, align 8
  %129 = call i8* %128(%"class.base::sequence_manager::TaskQueue"* %124) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %9, %"class.perfetto::TracedDictionary"* nonnull %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0)) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %95, i8* nonnull align 8 %94, i64 16, i1 false) #10
  call void @_ZNO8perfetto11TracedValue11WriteStringEPKc(%"class.perfetto::TracedValue"* nonnull %8, i8* %129) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94)
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #10
  %131 = bitcast %"class.std::__1::unique_ptr.73"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %98, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* nonnull align 8 %96, i64 16, i1 false) #10
  call void @_ZN8perfetto8internal9WriteImplIPN5blink9scheduler18TaskQueueThrottler8MetadataEEEDTcmclsr17TraceFormatTraitsINS_4base12remove_cvrefIT_E4typeEEE14WriteIntoTraceclL_ZNSt3__17declvalINS_11TracedValueEEEDTclsr3std3__1E9__declvalIS9_ELi0EEEvEEclsr3stdE7declvalIS9_EEEcvv_EENS7_12priority_tagILm3EEESE_OS9_(%"class.perfetto::TracedValue"* nonnull %10, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** nonnull dereferenceable(8) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #10
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 1
  %134 = icmp eq %"struct.WTF::KeyValuePair"* %133, %79
  br i1 %134, label %120, label %135

135:                                              ; preds = %121, %139
  %136 = phi %"struct.WTF::KeyValuePair"* [ %140, %139 ], [ %133, %121 ]
  %137 = bitcast %"struct.WTF::KeyValuePair"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  switch i64 %138, label %142 [
    i64 -1, label %139
    i64 0, label %139
  ]

139:                                              ; preds = %135, %135
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 1
  %141 = icmp eq %"struct.WTF::KeyValuePair"* %140, %79
  br i1 %141, label %120, label %135

142:                                              ; preds = %135
  %143 = icmp eq %"struct.WTF::KeyValuePair"* %136, %79
  br i1 %143, label %120, label %121
}

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto16TracedDictionary8AddArrayENS_12StaticStringE(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

declare void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #2

declare void @_ZN8perfetto11TracedArray16AppendDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler20AddQueueToBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  %5 = alloca %"class.blink::scheduler::BudgetPool"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr.73", align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %4, align 8
  store %"class.blink::scheduler::BudgetPool"* %2, %"class.blink::scheduler::BudgetPool"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.73"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = ptrtoint %"class.blink::scheduler::TaskQueueThrottler"* %0 to i64
  %9 = tail call i8* @_Znwm(i64 64) #11
  %10 = ptrtoint %"class.base::sequence_manager::TaskQueue"* %1 to i64
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler18TaskQueueThrottler8MetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %8, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 24
  %17 = getelementptr inbounds i8, i8* %9, i64 56
  %18 = bitcast i8* %17 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 28, i1 false) #10
  store i64 9223372036854775807, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %6, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr.73"* %6 to i8**
  store i8* %9, i8** %20, align 8
  %21 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0
  %22 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISN_SI_SO_EERS4_SE_EENS_18HashTableAddResultISP_SF_EEOT0_OT1_(%"class.WTF::HashTable"* %21, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %4, %"class.std::__1::unique_ptr.73"* nonnull dereferenceable(8) %6) #10
  %23 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %22, 0
  %24 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %19, align 8
  store %"class.blink::scheduler::TaskQueueThrottler::Metadata"* null, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %19, align 8
  %25 = icmp eq %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %24 to void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)***
  %28 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)**, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %28, i64 1
  %30 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %29, align 8
  call void %30(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nonnull %24) #10
  br label %31

31:                                               ; preds = %3, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %33, i64 0, i32 4, i32 0
  %35 = call { %"class.blink::scheduler::BudgetPool"**, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_RS4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.76"* %34, %"class.blink::scheduler::BudgetPool"** nonnull dereferenceable(8) %5, %"class.blink::scheduler::BudgetPool"** nonnull dereferenceable(8) %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler25RemoveQueueFromBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::sequence_manager::TaskQueue"*, align 8
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %4, align 8
  %5 = ptrtoint %"class.blink::scheduler::BudgetPool"* %2 to i64
  %6 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %6, %"class.base::sequence_manager::TaskQueue"** nonnull dereferenceable(8) %4) #10
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %7, 0
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %7, 1
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %11, i64 0, i32 4
  %13 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %12, i64 0, i32 0, i32 0
  %15 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %14, align 8
  %16 = icmp eq %"class.blink::scheduler::BudgetPool"** %15, null
  %17 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %11, i64 0, i32 4, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  br i1 %16, label %80, label %19

19:                                               ; preds = %3
  %20 = add i32 %18, -1
  %21 = zext i32 %20 to i64
  %22 = shl i64 %5, 32
  %23 = xor i64 %22, -1
  %24 = add i64 %23, %5
  %25 = lshr i64 %24, 22
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 13
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 8
  %31 = xor i64 %30, %29
  %32 = mul i64 %31, 9
  %33 = lshr i64 %32, 15
  %34 = xor i64 %33, %32
  %35 = shl i64 %34, 27
  %36 = xor i64 %35, -1
  %37 = add i64 %34, %36
  %38 = lshr i64 %37, 31
  %39 = xor i64 %38, %37
  %40 = trunc i64 %39 to i32
  %41 = and i32 %20, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %15, i64 %42
  %44 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %43, align 8
  %45 = icmp eq %"class.blink::scheduler::BudgetPool"* %44, %2
  br i1 %45, label %75, label %46

46:                                               ; preds = %19
  %47 = xor i32 %40, -1
  %48 = lshr i32 %40, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %65, %46
  %61 = phi %"class.blink::scheduler::BudgetPool"* [ %44, %46 ], [ %71, %65 ]
  %62 = phi i64 [ %42, %46 ], [ %69, %65 ]
  %63 = phi i64 [ 0, %46 ], [ %67, %65 ]
  %64 = icmp eq %"class.blink::scheduler::BudgetPool"* %61, null
  br i1 %64, label %80, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %63, 0
  %67 = select i1 %66, i64 %59, i64 %63
  %68 = add i64 %67, %62
  %69 = and i64 %68, %21
  %70 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %15, i64 %69
  %71 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %70, align 8
  %72 = icmp eq %"class.blink::scheduler::BudgetPool"* %71, %2
  br i1 %72, label %73, label %60

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %15, i64 %69
  br label %75

75:                                               ; preds = %73, %19
  %76 = phi %"class.blink::scheduler::BudgetPool"** [ %43, %19 ], [ %74, %73 ]
  %77 = icmp eq %"class.blink::scheduler::BudgetPool"** %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = zext i32 %18 to i64
  br label %83

80:                                               ; preds = %60, %75, %3
  %81 = zext i32 %18 to i64
  %82 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %15, i64 %81
  br label %83

83:                                               ; preds = %78, %80
  %84 = phi i64 [ %79, %78 ], [ %81, %80 ]
  %85 = phi %"class.blink::scheduler::BudgetPool"** [ %76, %78 ], [ %82, %80 ]
  %86 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %15, i64 %84
  %87 = icmp eq %"class.blink::scheduler::BudgetPool"** %86, %85
  br i1 %87, label %110, label %88

88:                                               ; preds = %83
  store %"class.blink::scheduler::BudgetPool"* inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*), %"class.blink::scheduler::BudgetPool"** %85, align 8
  %89 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %11, i64 0, i32 4, i32 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, 1
  %92 = and i32 %91, 2147483647
  %93 = and i32 %90, -2147483648
  %94 = or i32 %92, %93
  store i32 %94, i32* %89, align 8
  %95 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %11, i64 0, i32 4, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, -1
  store i32 %97, i32* %95, align 4
  %98 = mul i32 %97, 6
  %99 = load i32, i32* %17, align 8
  %100 = icmp ult i32 %98, %99
  %101 = icmp ugt i32 %99, 8
  %102 = and i1 %100, %101
  br i1 %102, label %103, label %110

103:                                              ; preds = %88
  %104 = lshr i32 %99, 1
  %105 = zext i32 %104 to i64
  %106 = shl nuw nsw i64 %105, 3
  %107 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %106, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9scheduler10BudgetPoolEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %107, i8 0, i64 %106, i1 false) #10
  %108 = bitcast i8* %107 to %"class.blink::scheduler::BudgetPool"**
  %109 = call %"class.blink::scheduler::BudgetPool"** @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.76"* %13, %"class.blink::scheduler::BudgetPool"** %108, i32 %104, %"class.blink::scheduler::BudgetPool"** null) #10
  br label %110

110:                                              ; preds = %83, %88, %103
  call void @_ZN5blink9scheduler18TaskQueueThrottler24MaybeDeleteQueueMetadataEN3WTF24HashTableIteratorAdapterINS2_9HashTableIPN4base16sequence_manager9TaskQueueENS2_12KeyValuePairIS8_NSt3__110unique_ptrINS1_8MetadataENSA_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS7_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSL_ISF_EEEESM_NS2_18PartitionAllocatorEEESG_EE(%"class.blink::scheduler::TaskQueueThrottler"* %0, %"struct.WTF::KeyValuePair"* %8, %"struct.WTF::KeyValuePair"* %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler20UnregisterBudgetPoolEPNS0_10BudgetPoolE(%"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::BudgetPool"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::scheduler::BudgetPool"*, align 8
  store %"class.blink::scheduler::BudgetPool"* %1, %"class.blink::scheduler::BudgetPool"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12
  %5 = getelementptr inbounds %"class.WTF::HashMap.114", %"class.WTF::HashMap.114"* %4, i64 0, i32 0
  %6 = call { %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"* } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.115"* %5, %"class.blink::scheduler::BudgetPool"** nonnull dereferenceable(8) %3) #10
  %7 = extractvalue { %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.114", %"class.WTF::HashMap.114"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair.118"* %13, %7
  br i1 %14, label %47, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %16, align 8
  store %"class.blink::scheduler::BudgetPool"* null, %"class.blink::scheduler::BudgetPool"** %16, align 8
  %18 = icmp eq %"class.blink::scheduler::BudgetPool"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::scheduler::BudgetPool"* %17 to void (%"class.blink::scheduler::BudgetPool"*)***
  %21 = load void (%"class.blink::scheduler::BudgetPool"*)**, void (%"class.blink::scheduler::BudgetPool"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %21, i64 1
  %23 = load void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %22, align 8
  call void %23(%"class.blink::scheduler::BudgetPool"* nonnull %17) #10
  br label %24

24:                                               ; preds = %19, %15
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %7, i64 0, i32 0
  store %"class.blink::scheduler::BudgetPool"* inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*), %"class.blink::scheduler::BudgetPool"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  %29 = and i32 %28, 2147483647
  %30 = and i32 %27, -2147483648
  %31 = or i32 %29, %30
  store i32 %31, i32* %26, align 8
  %32 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 12, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, -1
  store i32 %34, i32* %32, align 4
  %35 = mul i32 %34, 6
  %36 = load i32, i32* %10, align 8
  %37 = icmp ult i32 %35, %36
  %38 = icmp ugt i32 %36, 8
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47

40:                                               ; preds = %24
  %41 = lshr i32 %36, 1
  %42 = zext i32 %41 to i64
  %43 = shl nuw nsw i64 %42, 4
  %44 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([207 x i8], [207 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9scheduler10BudgetPoolENSt3__110unique_ptrIS4_NS6_14default_deleteIS4_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %43, i1 false) #10
  %45 = bitcast i8* %44 to %"struct.WTF::KeyValuePair.118"*
  %46 = call %"struct.WTF::KeyValuePair.118"* @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.115"* %5, %"struct.WTF::KeyValuePair.118"* %45, i32 %41, %"struct.WTF::KeyValuePair.118"* null) #10
  br label %47

47:                                               ; preds = %2, %24, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler17DisableThrottlingEv(%"class.blink::scheduler::TaskQueueThrottler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 8, !range !24
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %73, label %6

6:                                                ; preds = %1
  store i8 0, i8* %3, align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  br i1 %9, label %30, label %16

16:                                               ; preds = %6
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %15
  br i1 %24, label %30, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %15
  br i1 %27, label %30, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 4
  br label %36

30:                                               ; preds = %22, %52, %62, %59, %6, %25
  %31 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 8
  tail call void @_ZN5blink9scheduler23CancelableClosureHolder6CancelEv(%"class.blink::scheduler::CancelableClosureHolder"* %31) #10
  %32 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %34 = and i8 %33, 25
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %73, label %64, !prof !18

36:                                               ; preds = %28, %62
  %37 = phi %"struct.WTF::KeyValuePair"* [ %26, %28 ], [ %56, %62 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %39, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 0
  %45 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %44, align 8
  %46 = load %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::ThreadSchedulerImpl"** %29, align 8
  %47 = bitcast %"class.blink::scheduler::ThreadSchedulerImpl"* %46 to %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)***
  %48 = load %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)**, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %48, i64 31
  %50 = load %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)*, %"class.base::sequence_manager::TimeDomain"* (%"class.blink::scheduler::ThreadSchedulerImpl"*)** %49, align 8
  %51 = tail call %"class.base::sequence_manager::TimeDomain"* %50(%"class.blink::scheduler::ThreadSchedulerImpl"* %46) #10
  tail call void @_ZN4base16sequence_manager9TaskQueue13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::TaskQueue"* %45, %"class.base::sequence_manager::TimeDomain"* %51) #10
  tail call void @_ZN4base16sequence_manager9TaskQueue11RemoveFenceEv(%"class.base::sequence_manager::TaskQueue"* %45) #10
  br label %52

52:                                               ; preds = %36, %43
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair"* %53, %15
  br i1 %54, label %30, label %55

55:                                               ; preds = %52, %59
  %56 = phi %"struct.WTF::KeyValuePair"* [ %60, %59 ], [ %53, %52 ]
  %57 = bitcast %"struct.WTF::KeyValuePair"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  switch i64 %58, label %62 [
    i64 -1, label %59
    i64 0, label %59
  ]

59:                                               ; preds = %55, %55
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 1
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, %15
  br i1 %61, label %30, label %55

62:                                               ; preds = %55
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %56, %15
  br i1 %63, label %30, label %36

64:                                               ; preds = %30
  %65 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %66 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #10
  %67 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %68 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %68, i64* %67, align 8
  %69 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %65, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #10
  %70 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %64
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i64 %69) #10
  br label %73

73:                                               ; preds = %30, %72, %64, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler16EnableThrottlingEv(%"class.blink::scheduler::TaskQueueThrottler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::sequence_manager::LazyNow", align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 8, !range !24
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %77

7:                                                ; preds = %1
  store i8 1, i8* %4, align 8
  %8 = bitcast %"class.base::sequence_manager::LazyNow"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 6
  %10 = load %"class.base::TickClock"*, %"class.base::TickClock"** %9, align 8
  call void @_ZN4base16sequence_manager7LazyNowC1EPKNS_9TickClockE(%"class.base::sequence_manager::LazyNow"* nonnull %3, %"class.base::TickClock"* %10) #10
  %11 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %18
  br i1 %13, label %35, label %20

20:                                               ; preds = %7
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20, %26
  %23 = phi %"struct.WTF::KeyValuePair"* [ %27, %26 ], [ %15, %20 ]
  %24 = bitcast %"struct.WTF::KeyValuePair"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  switch i64 %25, label %29 [
    i64 -1, label %26
    i64 0, label %26
  ]

26:                                               ; preds = %22, %22
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 1
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, %19
  br i1 %28, label %35, label %22

29:                                               ; preds = %22, %20
  %30 = phi %"struct.WTF::KeyValuePair"* [ %15, %20 ], [ %23, %22 ]
  %31 = icmp eq %"struct.WTF::KeyValuePair"* %30, %19
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler", %"class.blink::scheduler::TaskQueueThrottler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %34 = bitcast %"class.blink::scheduler::TaskQueueThrottler"* %0 to void (%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*)***
  br label %39

35:                                               ; preds = %26, %55, %65, %62, %7, %29
  %36 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %37 = and i8 %36, 25
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %76, label %67, !prof !18

39:                                               ; preds = %32, %65
  %40 = phi %"struct.WTF::KeyValuePair"* [ %30, %32 ], [ %59, %65 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %42, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0
  %48 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %47, align 8
  call void @_ZN4base16sequence_manager9TaskQueue11InsertFenceENS1_19InsertFencePositionE(%"class.base::sequence_manager::TaskQueue"* %48, i32 1) #10
  %49 = load %"class.blink::scheduler::ThrottledTimeDomain"*, %"class.blink::scheduler::ThrottledTimeDomain"** %33, align 8
  %50 = getelementptr inbounds %"class.blink::scheduler::ThrottledTimeDomain", %"class.blink::scheduler::ThrottledTimeDomain"* %49, i64 0, i32 0
  call void @_ZN4base16sequence_manager9TaskQueue13SetTimeDomainEPNS0_10TimeDomainE(%"class.base::sequence_manager::TaskQueue"* %48, %"class.base::sequence_manager::TimeDomain"* %50) #10
  %51 = call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* nonnull %3) #10
  %52 = load void (%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*)**, void (%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*)*** %34, align 8
  %53 = getelementptr inbounds void (%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*)*, void (%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*)** %52, i64 5
  %54 = load void (%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*)*, void (%"class.blink::scheduler::TaskQueueThrottler"*, i64, %"class.base::sequence_manager::TaskQueue"*)** %53, align 8
  call void %54(%"class.blink::scheduler::TaskQueueThrottler"* %0, i64 %51, %"class.base::sequence_manager::TaskQueue"* %48) #10
  br label %55

55:                                               ; preds = %39, %46
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 1
  %57 = icmp eq %"struct.WTF::KeyValuePair"* %56, %19
  br i1 %57, label %35, label %58

58:                                               ; preds = %55, %62
  %59 = phi %"struct.WTF::KeyValuePair"* [ %63, %62 ], [ %56, %55 ]
  %60 = bitcast %"struct.WTF::KeyValuePair"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  switch i64 %61, label %65 [
    i64 -1, label %62
    i64 0, label %62
  ]

62:                                               ; preds = %58, %58
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %63, %19
  br i1 %64, label %35, label %58

65:                                               ; preds = %58
  %66 = icmp eq %"struct.WTF::KeyValuePair"* %59, %19
  br i1 %66, label %35, label %39

67:                                               ; preds = %35
  %68 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %69 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #10
  %70 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %71 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %71, i64* %70, align 8
  %72 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %68, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #10
  %73 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %67
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0), i64 %72) #10
  br label %76

76:                                               ; preds = %35, %67, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  br label %77

77:                                               ; preds = %1, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler8MetadataC2EPN4base16sequence_manager9TaskQueueEPS1_(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nocapture, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::TaskQueueThrottler"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler18TaskQueueThrottler8MetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 1
  store %"class.base::sequence_manager::TaskQueue"* %1, %"class.base::sequence_manager::TaskQueue"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 2
  store %"class.blink::scheduler::TaskQueueThrottler"* %2, %"class.blink::scheduler::TaskQueueThrottler"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 28, i1 false)
  store i64 9223372036854775807, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler8MetadataD2Ev(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler18TaskQueueThrottler8MetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 1
  %8 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %7, align 8
  tail call void @_ZN4base16sequence_manager9TaskQueue11SetObserverEPNS1_8ObserverE(%"class.base::sequence_manager::TaskQueue"* %8, %"class.base::sequence_manager::TaskQueue::Observer"* null) #10
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %10, align 8
  %12 = icmp eq %"class.blink::scheduler::BudgetPool"** %11, null
  br i1 %12, label %15, label %13, !prof !18

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::scheduler::BudgetPool"** %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #10
  store %"class.blink::scheduler::BudgetPool"** null, %"class.blink::scheduler::BudgetPool"*** %10, align 8
  br label %15

15:                                               ; preds = %9, %13
  ret void
}

declare void @_ZN4base16sequence_manager9TaskQueue11SetObserverEPNS1_8ObserverE(%"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue::Observer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler8MetadataD0Ev(%"class.blink::scheduler::TaskQueueThrottler::Metadata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler18TaskQueueThrottler8MetadataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 1
  %8 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %7, align 8
  tail call void @_ZN4base16sequence_manager9TaskQueue11SetObserverEPNS1_8ObserverE(%"class.base::sequence_manager::TaskQueue"* %8, %"class.base::sequence_manager::TaskQueue::Observer"* null) #10
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %10, align 8
  %12 = icmp eq %"class.blink::scheduler::BudgetPool"** %11, null
  br i1 %12, label %15, label %13, !prof !18

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::scheduler::BudgetPool"** %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #10
  br label %15

15:                                               ; preds = %9, %13
  %16 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler18TaskQueueThrottler8Metadata24OnQueueNextWakeUpChangedEN4base9TimeTicksE(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 2
  %4 = load %"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::TaskQueueThrottler"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 1
  %6 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %5, align 8
  tail call void @_ZN5blink9scheduler18TaskQueueThrottler24OnQueueNextWakeUpChangedEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksE(%"class.blink::scheduler::TaskQueueThrottler"* %4, %"class.base::sequence_manager::TaskQueue"* %6, i64 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9scheduler18TaskQueueThrottler8Metadata14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedDictionary", align 8
  %8 = bitcast %"class.perfetto::TracedDictionary"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = bitcast %"class.perfetto::TracedDictionary"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %7, %"class.perfetto::TracedValue"* %1) #10
  %10 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 3
  %11 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)) #10
  %12 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %11, i64 16, i1 false) #10
  %13 = load i64, i64* %10, align 8
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %3, i64 %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  %14 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0)) #10
  %15 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %0, i64 0, i32 5, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %14, i64 16, i1 false) #10
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %5, i64 %16) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base16sequence_manager9TaskQueue23HasTaskToRunImmediatelyEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.76"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9scheduler10BudgetPoolEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #10
  %30 = bitcast i8* %29 to %"class.blink::scheduler::BudgetPool"**
  %31 = call %"class.blink::scheduler::BudgetPool"** @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.76"* %0, %"class.blink::scheduler::BudgetPool"** %30, i32 %17, %"class.blink::scheduler::BudgetPool"** null) #10
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::scheduler::BudgetPool"** @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.76"*, %"class.blink::scheduler::BudgetPool"**, i32, %"class.blink::scheduler::BudgetPool"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::scheduler::BudgetPool"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.76"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %9, align 8
  %17 = ptrtoint %"class.blink::scheduler::BudgetPool"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.76"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::scheduler::BudgetPool"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #10
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::scheduler::BudgetPool"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::scheduler::BudgetPool"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::scheduler::BudgetPool"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %34, i64 %37
  %39 = bitcast %"class.blink::scheduler::BudgetPool"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %1, i64 %62
  %64 = ptrtoint %"class.blink::scheduler::BudgetPool"** %63 to i64
  %65 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %63, align 8
  %66 = icmp eq %"class.blink::scheduler::BudgetPool"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::scheduler::BudgetPool"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::scheduler::BudgetPool"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::scheduler::BudgetPool"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::scheduler::BudgetPool"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::scheduler::BudgetPool"** %87, null
  %89 = ptrtoint %"class.blink::scheduler::BudgetPool"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::scheduler::BudgetPool"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::scheduler::BudgetPool"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::scheduler::BudgetPool"* %93, inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %1, i64 %104
  %106 = ptrtoint %"class.blink::scheduler::BudgetPool"** %105 to i64
  %107 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %105, align 8
  %108 = icmp eq %"class.blink::scheduler::BudgetPool"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::scheduler::BudgetPool"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %113, i64 %37
  %115 = icmp eq %"class.blink::scheduler::BudgetPool"** %114, %3
  %116 = select i1 %115, %"class.blink::scheduler::BudgetPool"** %111, %"class.blink::scheduler::BudgetPool"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::scheduler::BudgetPool"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::scheduler::BudgetPool"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::scheduler::BudgetPool"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::scheduler::BudgetPool"**, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.76"*, %"class.blink::scheduler::BudgetPool"** dereferenceable(8), %"class.blink::scheduler::BudgetPool"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 0
  %5 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %4, align 8
  %6 = icmp eq %"class.blink::scheduler::BudgetPool"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::scheduler::BudgetPool"** @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.76"* %0, %"class.blink::scheduler::BudgetPool"** null)
  %9 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::scheduler::BudgetPool"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::scheduler::BudgetPool"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %11, i64 %38
  %40 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %39, align 8
  %41 = icmp eq %"class.blink::scheduler::BudgetPool"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::scheduler::BudgetPool"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::scheduler::BudgetPool"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::scheduler::BudgetPool"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::scheduler::BudgetPool"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::scheduler::BudgetPool"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::scheduler::BudgetPool"* %58, inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*)
  %66 = select i1 %65, %"class.blink::scheduler::BudgetPool"** %59, %"class.blink::scheduler::BudgetPool"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %11, i64 %70
  %72 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %71, align 8
  %73 = icmp eq %"class.blink::scheduler::BudgetPool"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::scheduler::BudgetPool"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::scheduler::BudgetPool"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::scheduler::BudgetPool"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::scheduler::BudgetPool"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::scheduler::BudgetPool"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::scheduler::BudgetPool"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::scheduler::BudgetPool"** @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.76"* %0, %"class.blink::scheduler::BudgetPool"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::scheduler::BudgetPool"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::scheduler::BudgetPool"**, i8 } undef, %"class.blink::scheduler::BudgetPool"** %105, 0
  %107 = insertvalue { %"class.blink::scheduler::BudgetPool"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::scheduler::BudgetPool"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::scheduler::BudgetPool"** @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.76"*, %"class.blink::scheduler::BudgetPool"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9scheduler10BudgetPoolEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.blink::scheduler::BudgetPool"**
  %37 = call %"class.blink::scheduler::BudgetPool"** @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.76"* %0, %"class.blink::scheduler::BudgetPool"** %36, i32 %32, %"class.blink::scheduler::BudgetPool"** %1) #10
  ret %"class.blink::scheduler::BudgetPool"** %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #10
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !25
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #7

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS5_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::scheduler::TaskQueueThrottler"**
  %10 = load %"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::TaskQueueThrottler"** %9, align 8
  %11 = icmp eq %"class.blink::scheduler::TaskQueueThrottler"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::scheduler::TaskQueueThrottler"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::scheduler::TaskQueueThrottler"*)**
  %37 = load void (%"class.blink::scheduler::TaskQueueThrottler"*)*, void (%"class.blink::scheduler::TaskQueueThrottler"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::scheduler::TaskQueueThrottler"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::scheduler::TaskQueueThrottler"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.blink::scheduler::TaskQueueThrottler"* %28) #10
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::scheduler::TaskQueueThrottler"**
  %9 = load %"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::TaskQueueThrottler"** %8, align 8
  %10 = icmp ne %"class.blink::scheduler::TaskQueueThrottler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS5_EEEEEFvS8_S9_EE3RunEPNS0_13BindStateBaseES8_OS9_(%"class.base::internal::BindStateBase"*, %"class.base::sequence_manager::TaskQueue"*, %"class.base::TimeTicks"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %8, label %9, label %46

9:                                                ; preds = %3
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.blink::scheduler::TaskQueueThrottler"**
  %12 = load %"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::TaskQueueThrottler"** %11, align 8
  %13 = icmp eq %"class.blink::scheduler::TaskQueueThrottler"* %12, null
  br i1 %13, label %46, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #10
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.blink::scheduler::TaskQueueThrottler"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64)**
  %39 = load void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64)*, void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.blink::scheduler::TaskQueueThrottler"*, %"class.base::sequence_manager::TaskQueue"*, i64)* [ %39, %33 ], [ %41, %40 ]
  %44 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  call void %43(%"class.blink::scheduler::TaskQueueThrottler"* %30, %"class.base::sequence_manager::TaskQueue"* %1, i64 %45) #10
  br label %46

46:                                               ; preds = %3, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::scheduler::TaskQueueThrottler"**
  %9 = load %"class.blink::scheduler::TaskQueueThrottler"*, %"class.blink::scheduler::TaskQueueThrottler"** %8, align 8
  %10 = icmp ne %"class.blink::scheduler::TaskQueueThrottler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISN_SI_SO_EERS4_SE_EENS_18HashTableAddResultISP_SF_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.base::sequence_manager::TaskQueue"** dereferenceable(8), %"class.std::__1::unique_ptr.73"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE6ExpandEPSF_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.base::sequence_manager::TaskQueue"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %40, align 8
  %42 = icmp eq %"class.base::sequence_manager::TaskQueue"* %41, null
  %43 = inttoptr i64 %17 to %"class.base::sequence_manager::TaskQueue"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.base::sequence_manager::TaskQueue"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.base::sequence_manager::TaskQueue"* %59, %43
  br i1 %64, label %116, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.base::sequence_manager::TaskQueue"* %59, inttoptr (i64 -1 to %"class.base::sequence_manager::TaskQueue"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0
  %74 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %73, align 8
  %75 = icmp eq %"class.base::sequence_manager::TaskQueue"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %2, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.73"* %2 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.blink::scheduler::TaskQueueThrottler::Metadata"* null, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %92, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %91, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.73"* %91 to i64*
  store i64 %94, i64* %97, align 8
  %98 = icmp eq %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %96, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %87
  %100 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %96 to void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)***
  %101 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)**, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %101, i64 1
  %103 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %102, align 8
  tail call void %103(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nonnull %96) #10
  br label %104

104:                                              ; preds = %87, %99
  %105 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, %107
  %111 = shl i32 %110, 1
  %112 = load i32, i32* %12, align 8
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE6ExpandEPSF_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %116

116:                                              ; preds = %58, %104, %114
  %117 = phi i8 [ 1, %104 ], [ 1, %114 ], [ 0, %58 ]
  %118 = phi %"struct.WTF::KeyValuePair"* [ %89, %104 ], [ %115, %114 ], [ %60, %58 ]
  %119 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %118, 0
  %120 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %119, i8 %117, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE6ExpandEPSF_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([248 x i8], [248 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN4base16sequence_manager9TaskQueueENSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE8RehashToEPSF_jSQ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE8RehashToEPSF_jSQ_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %64

24:                                               ; preds = %101
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %102, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %105, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %103, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %60, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %55, %39
  %42 = phi i64 [ 0, %39 ], [ %56, %55 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0
  %44 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %43, align 8
  %45 = icmp eq %"class.base::sequence_manager::TaskQueue"* %44, inttoptr (i64 -1 to %"class.base::sequence_manager::TaskQueue"*)
  br i1 %45, label %55, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %47, align 8
  store %"class.blink::scheduler::TaskQueueThrottler::Metadata"* null, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %47, align 8
  %49 = icmp eq %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %48 to void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)***
  %52 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)**, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %52, i64 1
  %54 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %53, align 8
  call void %54(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nonnull %48) #10
  br label %55

55:                                               ; preds = %50, %46, %41
  %56 = add nuw nsw i64 %42, 1
  %57 = icmp eq i64 %56, %40
  br i1 %57, label %58, label %41

58:                                               ; preds = %55, %37
  %59 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %59) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %60

60:                                               ; preds = %28, %58
  %61 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, -2147483648
  store i32 %63, i32* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair"* %33

64:                                               ; preds = %21, %101
  %65 = phi i64 [ %102, %101 ], [ %23, %21 ]
  %66 = phi i32 [ %103, %101 ], [ %13, %21 ]
  %67 = phi %"struct.WTF::KeyValuePair"* [ %104, %101 ], [ %22, %21 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %105, %101 ], [ null, %21 ]
  %69 = phi i32 [ %106, %101 ], [ 0, %21 ]
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 %70
  %72 = bitcast %"struct.WTF::KeyValuePair"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  switch i64 %73, label %74 [
    i64 -1, label %101
    i64 0, label %101
  ]

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 0
  %76 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.base::sequence_manager::TaskQueue"** dereferenceable(8) %75) #10
  %77 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, 0
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %78, align 8
  store %"class.blink::scheduler::TaskQueueThrottler::Metadata"* null, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %78, align 8
  %80 = icmp eq %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %74
  %82 = bitcast %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %79 to void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)***
  %83 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)**, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %83, i64 1
  %85 = load void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)*, void (%"class.blink::scheduler::TaskQueueThrottler::Metadata"*)** %84, align 8
  call void %85(%"class.blink::scheduler::TaskQueueThrottler::Metadata"* nonnull %79) #10
  br label %86

86:                                               ; preds = %74, %81
  %87 = load i64, i64* %72, align 8
  %88 = bitcast %"struct.WTF::KeyValuePair"* %77 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 %70, i32 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.73"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.blink::scheduler::TaskQueueThrottler::Metadata"* null, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.73"* %89 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %70
  %97 = icmp eq %"struct.WTF::KeyValuePair"* %96, %3
  %98 = select i1 %97, %"struct.WTF::KeyValuePair"* %77, %"struct.WTF::KeyValuePair"* %68
  %99 = load i32, i32* %12, align 8
  %100 = ptrtoint %"struct.WTF::KeyValuePair"* %95 to i64
  br label %101

101:                                              ; preds = %64, %64, %86
  %102 = phi i64 [ %65, %64 ], [ %100, %86 ], [ %65, %64 ]
  %103 = phi i32 [ %66, %64 ], [ %99, %86 ], [ %66, %64 ]
  %104 = phi %"struct.WTF::KeyValuePair"* [ %67, %64 ], [ %95, %86 ], [ %67, %64 ]
  %105 = phi %"struct.WTF::KeyValuePair"* [ %68, %64 ], [ %98, %86 ], [ %68, %64 ]
  %106 = add i32 %69, 1
  %107 = icmp eq i32 %106, %103
  br i1 %107, label %24, label %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.base::sequence_manager::TaskQueue"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.base::sequence_manager::TaskQueue"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %35 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %34, align 8
  %36 = icmp eq %"class.base::sequence_manager::TaskQueue"* %35, null
  %37 = inttoptr i64 %10 to %"class.base::sequence_manager::TaskQueue"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.base::sequence_manager::TaskQueue"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.base::sequence_manager::TaskQueue"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.base::sequence_manager::TaskQueue"* %63, inttoptr (i64 -1 to %"class.base::sequence_manager::TaskQueue"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %78 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %77, align 8
  %79 = icmp eq %"class.base::sequence_manager::TaskQueue"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %85
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"*, %"class.base::sequence_manager::TaskQueue"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.base::sequence_manager::TaskQueue"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  %36 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.base::sequence_manager::TaskQueue"*
  %38 = icmp eq %"class.base::sequence_manager::TaskQueue"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.base::sequence_manager::TaskQueue"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.base::sequence_manager::TaskQueue"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %64, align 8
  %66 = icmp eq %"class.base::sequence_manager::TaskQueue"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79, %"struct.WTF::KeyValuePair"* %78, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIPN4base16sequence_manager9TaskQueueENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink9scheduler18TaskQueueThrottler8MetadataENS6_14default_deleteISB_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSK_ISE_EEEESL_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"*, %"class.base::sequence_manager::TaskQueue"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.base::sequence_manager::TaskQueue"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  %36 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.base::sequence_manager::TaskQueue"*
  %38 = icmp eq %"class.base::sequence_manager::TaskQueue"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.base::sequence_manager::TaskQueue"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.base::sequence_manager::TaskQueue"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %64, align 8
  %66 = icmp eq %"class.base::sequence_manager::TaskQueue"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79, %"struct.WTF::KeyValuePair"* %78, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::BindState.202"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS4_EES6_EE6CreateIRS8_JSA_RS6_EEEPSB_PFvvEOT_DpOT0_(void ()*, %"class.base::RepeatingCallback.86"* dereferenceable(8), %"class.base::internal::RetainedRefWrapper"* dereferenceable(8), %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call i8* @_Znwm(i64 56) #11
  %7 = bitcast i8* %6 to %"struct.base::internal::BindState.202"*
  %8 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %8, void ()* %0, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS4_EES6_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS5_EES7_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #10
  %9 = getelementptr inbounds i8, i8* %6, i64 32
  %10 = bitcast i8* %9 to %"class.base::internal::CallbackBaseCopyable"*
  %11 = getelementptr inbounds %"class.base::RepeatingCallback.86", %"class.base::RepeatingCallback.86"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %10, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %11) #10
  %12 = getelementptr inbounds i8, i8* %6, i64 40
  %13 = getelementptr inbounds %"class.base::internal::RetainedRefWrapper", %"class.base::internal::RetainedRefWrapper"* %2, i64 0, i32 0, i32 0
  %14 = bitcast %"class.base::internal::RetainedRefWrapper"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::sequence_manager::TaskQueue"* null, %"class.base::sequence_manager::TaskQueue"** %13, align 8
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds i8, i8* %6, i64 48
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %17, align 8
  store i64 %20, i64* %19, align 8
  %21 = bitcast i8* %9 to %"class.base::internal::BindStateBase"**
  %22 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %21, align 8
  %23 = icmp eq %"class.base::internal::BindStateBase"* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %4
  %25 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0)) #10
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %27

27:                                               ; preds = %4, %24
  ret %"struct.base::internal::BindState.202"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS5_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::RepeatingCallback.86", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::sequence_manager::TaskQueue"**
  %7 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  store i64 %10, i64* %12, align 8
  %13 = bitcast %"class.base::RepeatingCallback.86"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::BindStateBase"**
  %15 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::RepeatingCallback.86"* %3 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %"class.base::RepeatingCallback.86", %"class.base::RepeatingCallback.86"* %3, i64 0, i32 0, i32 0
  %19 = inttoptr i64 %16 to %"class.base::internal::BindStateBase"*
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %19, i64 0, i32 1
  %21 = bitcast void ()** %20 to void (%"class.base::internal::BindStateBase"*, %"class.base::sequence_manager::TaskQueue"*, %"class.base::TimeTicks"*)**
  %22 = load void (%"class.base::internal::BindStateBase"*, %"class.base::sequence_manager::TaskQueue"*, %"class.base::TimeTicks"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::sequence_manager::TaskQueue"*, %"class.base::TimeTicks"*)** %21, align 8
  call void %22(%"class.base::internal::BindStateBase"* %19, %"class.base::sequence_manager::TaskQueue"* %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS4_EES6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::sequence_manager::TaskQueue"**
  %6 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %5, align 8
  %7 = icmp eq %"class.base::sequence_manager::TaskQueue"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::sequence_manager::TaskQueue"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %17 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %17, i64 3
  %19 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %18, align 8
  tail call void %19(%"class.base::sequence_manager::TaskQueue"* nonnull %15) #10
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %22 = bitcast %"class.base::internal::BindStateBase"* %21 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %22) #10
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS5_EES7_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #10
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #10
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::scheduler::BudgetPool"**, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_RS4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.76"*, %"class.blink::scheduler::BudgetPool"** dereferenceable(8), %"class.blink::scheduler::BudgetPool"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 0
  %5 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %4, align 8
  %6 = icmp eq %"class.blink::scheduler::BudgetPool"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::scheduler::BudgetPool"** @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.76"* %0, %"class.blink::scheduler::BudgetPool"** null)
  %9 = load %"class.blink::scheduler::BudgetPool"**, %"class.blink::scheduler::BudgetPool"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::scheduler::BudgetPool"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::scheduler::BudgetPool"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %11, i64 %38
  %40 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %39, align 8
  %41 = icmp eq %"class.blink::scheduler::BudgetPool"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::scheduler::BudgetPool"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::scheduler::BudgetPool"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::scheduler::BudgetPool"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::scheduler::BudgetPool"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::scheduler::BudgetPool"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::scheduler::BudgetPool"* %58, inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*)
  %66 = select i1 %65, %"class.blink::scheduler::BudgetPool"** %59, %"class.blink::scheduler::BudgetPool"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %11, i64 %70
  %72 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %71, align 8
  %73 = icmp eq %"class.blink::scheduler::BudgetPool"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::scheduler::BudgetPool"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::scheduler::BudgetPool"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::scheduler::BudgetPool"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::scheduler::BudgetPool"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::scheduler::BudgetPool"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::scheduler::BudgetPool"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.76", %"class.WTF::HashTable.76"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::scheduler::BudgetPool"** @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.76"* %0, %"class.blink::scheduler::BudgetPool"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::scheduler::BudgetPool"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::scheduler::BudgetPool"**, i8 } undef, %"class.blink::scheduler::BudgetPool"** %105, 0
  %107 = insertvalue { %"class.blink::scheduler::BudgetPool"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::scheduler::BudgetPool"**, i8 } %107
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.118"*, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPNS2_17CPUTimeBudgetPoolENS7_ISP_NS8_ISP_EEEEEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.115"*, %"class.blink::scheduler::CPUTimeBudgetPool"** dereferenceable(8), %"class.std::__1::unique_ptr.143"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.118"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.118"* @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.115"* %0, %"struct.WTF::KeyValuePair.118"* null)
  %9 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.118"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %39, i64 0, i32 0
  %41 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %40, align 8
  %42 = icmp eq %"class.blink::scheduler::BudgetPool"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::scheduler::BudgetPool"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::scheduler::BudgetPool"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.118"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.118"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::scheduler::BudgetPool"* %59, %43
  br i1 %64, label %116, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::scheduler::BudgetPool"* %59, inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.118"* %60, %"struct.WTF::KeyValuePair.118"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %72, i64 0, i32 0
  %74 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %73, align 8
  %75 = icmp eq %"class.blink::scheduler::BudgetPool"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.118"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.118"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.118"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.118"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143"* %2, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.143"* %2 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.blink::scheduler::CPUTimeBudgetPool"* null, %"class.blink::scheduler::CPUTimeBudgetPool"** %91, align 8
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %89, i64 0, i32 1
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.119"* %94 to i64*
  store i64 %93, i64* %97, align 8
  %98 = icmp eq %"class.blink::scheduler::BudgetPool"* %96, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %87
  %100 = bitcast %"class.blink::scheduler::BudgetPool"* %96 to void (%"class.blink::scheduler::BudgetPool"*)***
  %101 = load void (%"class.blink::scheduler::BudgetPool"*)**, void (%"class.blink::scheduler::BudgetPool"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %101, i64 1
  %103 = load void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %102, align 8
  tail call void %103(%"class.blink::scheduler::BudgetPool"* nonnull %96) #10
  br label %104

104:                                              ; preds = %87, %99
  %105 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, %107
  %111 = shl i32 %110, 1
  %112 = load i32, i32* %12, align 8
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = tail call %"struct.WTF::KeyValuePair.118"* @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.115"* %0, %"struct.WTF::KeyValuePair.118"* %89)
  br label %116

116:                                              ; preds = %58, %104, %114
  %117 = phi i8 [ 1, %104 ], [ 1, %114 ], [ 0, %58 ]
  %118 = phi %"struct.WTF::KeyValuePair.118"* [ %89, %104 ], [ %115, %114 ], [ %60, %58 ]
  %119 = insertvalue { %"struct.WTF::KeyValuePair.118"*, i8 } undef, %"struct.WTF::KeyValuePair.118"* %118, 0
  %120 = insertvalue { %"struct.WTF::KeyValuePair.118"*, i8 } %119, i8 %117, 1
  ret { %"struct.WTF::KeyValuePair.118"*, i8 } %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.118"* @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.115"*, %"struct.WTF::KeyValuePair.118"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([207 x i8], [207 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9scheduler10BudgetPoolENSt3__110unique_ptrIS4_NS6_14default_deleteIS4_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.118"*
  %37 = call %"struct.WTF::KeyValuePair.118"* @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.115"* %0, %"struct.WTF::KeyValuePair.118"* %36, i32 %32, %"struct.WTF::KeyValuePair.118"* %1) #10
  ret %"struct.WTF::KeyValuePair.118"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.118"* @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.115"*, %"struct.WTF::KeyValuePair.118"*, i32, %"struct.WTF::KeyValuePair.118"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.115", align 8
  %6 = bitcast %"class.WTF::HashTable.115"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.115"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.118"* %1, %"struct.WTF::KeyValuePair.118"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.118"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.115"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.115"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.118"* %22 to i64
  br label %64

24:                                               ; preds = %101
  %25 = bitcast %"class.WTF::HashTable.115"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.115"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %102, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.118"* [ null, %16 ], [ %105, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %103, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.118"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %60, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %55, %39
  %42 = phi i64 [ 0, %39 ], [ %56, %55 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %35, i64 %42, i32 0
  %44 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %43, align 8
  %45 = icmp eq %"class.blink::scheduler::BudgetPool"* %44, inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*)
  br i1 %45, label %55, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %47, align 8
  store %"class.blink::scheduler::BudgetPool"* null, %"class.blink::scheduler::BudgetPool"** %47, align 8
  %49 = icmp eq %"class.blink::scheduler::BudgetPool"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::scheduler::BudgetPool"* %48 to void (%"class.blink::scheduler::BudgetPool"*)***
  %52 = load void (%"class.blink::scheduler::BudgetPool"*)**, void (%"class.blink::scheduler::BudgetPool"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %52, i64 1
  %54 = load void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %53, align 8
  call void %54(%"class.blink::scheduler::BudgetPool"* nonnull %48) #10
  br label %55

55:                                               ; preds = %50, %46, %41
  %56 = add nuw nsw i64 %42, 1
  %57 = icmp eq i64 %56, %40
  br i1 %57, label %58, label %41

58:                                               ; preds = %55, %37
  %59 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %59) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %60

60:                                               ; preds = %28, %58
  %61 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, -2147483648
  store i32 %63, i32* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.118"* %33

64:                                               ; preds = %21, %101
  %65 = phi i64 [ %102, %101 ], [ %23, %21 ]
  %66 = phi i32 [ %103, %101 ], [ %13, %21 ]
  %67 = phi %"struct.WTF::KeyValuePair.118"* [ %104, %101 ], [ %22, %21 ]
  %68 = phi %"struct.WTF::KeyValuePair.118"* [ %105, %101 ], [ null, %21 ]
  %69 = phi i32 [ %106, %101 ], [ 0, %21 ]
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %67, i64 %70
  %72 = bitcast %"struct.WTF::KeyValuePair.118"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  switch i64 %73, label %74 [
    i64 -1, label %101
    i64 0, label %101
  ]

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %71, i64 0, i32 0
  %76 = call { %"struct.WTF::KeyValuePair.118"*, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.115"* nonnull %5, %"class.blink::scheduler::BudgetPool"** dereferenceable(8) %75) #10
  %77 = extractvalue { %"struct.WTF::KeyValuePair.118"*, i8 } %76, 0
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %78, align 8
  store %"class.blink::scheduler::BudgetPool"* null, %"class.blink::scheduler::BudgetPool"** %78, align 8
  %80 = icmp eq %"class.blink::scheduler::BudgetPool"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %74
  %82 = bitcast %"class.blink::scheduler::BudgetPool"* %79 to void (%"class.blink::scheduler::BudgetPool"*)***
  %83 = load void (%"class.blink::scheduler::BudgetPool"*)**, void (%"class.blink::scheduler::BudgetPool"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %83, i64 1
  %85 = load void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %84, align 8
  call void %85(%"class.blink::scheduler::BudgetPool"* nonnull %79) #10
  br label %86

86:                                               ; preds = %74, %81
  %87 = load i64, i64* %72, align 8
  %88 = bitcast %"struct.WTF::KeyValuePair.118"* %77 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %77, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %67, i64 %70, i32 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.119"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.blink::scheduler::BudgetPool"* null, %"class.blink::scheduler::BudgetPool"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.119"* %89 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %15, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %95, i64 %70
  %97 = icmp eq %"struct.WTF::KeyValuePair.118"* %96, %3
  %98 = select i1 %97, %"struct.WTF::KeyValuePair.118"* %77, %"struct.WTF::KeyValuePair.118"* %68
  %99 = load i32, i32* %12, align 8
  %100 = ptrtoint %"struct.WTF::KeyValuePair.118"* %95 to i64
  br label %101

101:                                              ; preds = %64, %64, %86
  %102 = phi i64 [ %65, %64 ], [ %100, %86 ], [ %65, %64 ]
  %103 = phi i32 [ %66, %64 ], [ %99, %86 ], [ %66, %64 ]
  %104 = phi %"struct.WTF::KeyValuePair.118"* [ %67, %64 ], [ %95, %86 ], [ %67, %64 ]
  %105 = phi %"struct.WTF::KeyValuePair.118"* [ %68, %64 ], [ %98, %86 ], [ %68, %64 ]
  %106 = add i32 %69, 1
  %107 = icmp eq i32 %106, %103
  br i1 %107, label %24, label %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.118"*, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.115"*, %"class.blink::scheduler::BudgetPool"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::scheduler::BudgetPool"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.118"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %32, i64 0, i32 0
  %35 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %34, align 8
  %36 = icmp eq %"class.blink::scheduler::BudgetPool"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::scheduler::BudgetPool"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.118"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.118"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.118"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.118"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.118"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::scheduler::BudgetPool"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::scheduler::BudgetPool"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::scheduler::BudgetPool"* %63, inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.118"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %75, i64 0, i32 0
  %78 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %77, align 8
  %79 = icmp eq %"class.blink::scheduler::BudgetPool"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.118"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.118"*, i8 } undef, %"struct.WTF::KeyValuePair.118"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.118"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.118"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.118"*, i8 } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERPNS2_16WakeUpBudgetPoolENS7_ISP_NS8_ISP_EEEEEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.115"*, %"class.blink::scheduler::WakeUpBudgetPool"** dereferenceable(8), %"class.std::__1::unique_ptr.149"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.118"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.118"* @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.115"* %0, %"struct.WTF::KeyValuePair.118"* null)
  %9 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.118"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::scheduler::WakeUpBudgetPool"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %39, i64 0, i32 0
  %41 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %40, align 8
  %42 = icmp eq %"class.blink::scheduler::BudgetPool"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::scheduler::BudgetPool"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::scheduler::BudgetPool"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.118"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.118"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::scheduler::BudgetPool"* %59, %43
  br i1 %64, label %116, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::scheduler::BudgetPool"* %59, inttoptr (i64 -1 to %"class.blink::scheduler::BudgetPool"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.118"* %60, %"struct.WTF::KeyValuePair.118"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %72, i64 0, i32 0
  %74 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %73, align 8
  %75 = icmp eq %"class.blink::scheduler::BudgetPool"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.118"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.118"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.118"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.118"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149"* %2, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.149"* %2 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.blink::scheduler::WakeUpBudgetPool"* null, %"class.blink::scheduler::WakeUpBudgetPool"** %91, align 8
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %89, i64 0, i32 1
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.119"* %94 to i64*
  store i64 %93, i64* %97, align 8
  %98 = icmp eq %"class.blink::scheduler::BudgetPool"* %96, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %87
  %100 = bitcast %"class.blink::scheduler::BudgetPool"* %96 to void (%"class.blink::scheduler::BudgetPool"*)***
  %101 = load void (%"class.blink::scheduler::BudgetPool"*)**, void (%"class.blink::scheduler::BudgetPool"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %101, i64 1
  %103 = load void (%"class.blink::scheduler::BudgetPool"*)*, void (%"class.blink::scheduler::BudgetPool"*)** %102, align 8
  tail call void %103(%"class.blink::scheduler::BudgetPool"* nonnull %96) #10
  br label %104

104:                                              ; preds = %87, %99
  %105 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, %107
  %111 = shl i32 %110, 1
  %112 = load i32, i32* %12, align 8
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = tail call %"struct.WTF::KeyValuePair.118"* @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.115"* %0, %"struct.WTF::KeyValuePair.118"* %89)
  br label %116

116:                                              ; preds = %58, %104, %114
  %117 = phi i8 [ 1, %104 ], [ 1, %114 ], [ 0, %58 ]
  %118 = phi %"struct.WTF::KeyValuePair.118"* [ %89, %104 ], [ %115, %114 ], [ %60, %58 ]
  %119 = insertvalue { %"struct.WTF::KeyValuePair.118"*, i8 } undef, %"struct.WTF::KeyValuePair.118"* %118, 0
  %120 = insertvalue { %"struct.WTF::KeyValuePair.118"*, i8 } %119, i8 %117, 1
  ret { %"struct.WTF::KeyValuePair.118"*, i8 } %120
}

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"*, double) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue11WriteStringEPKc(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto8internal9WriteImplIPN5blink9scheduler18TaskQueueThrottler8MetadataEEEDTcmclsr17TraceFormatTraitsINS_4base12remove_cvrefIT_E4typeEEE14WriteIntoTraceclL_ZNSt3__17declvalINS_11TracedValueEEEDTclsr3std3__1E9__declvalIS9_ELi0EEEvEEclsr3stdE7declvalIS9_EEEcvv_EENS7_12priority_tagILm3EEESE_OS9_(%"class.perfetto::TracedValue"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedDictionary", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  %11 = bitcast %"class.perfetto::TracedValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false)
  %12 = load %"class.blink::scheduler::TaskQueueThrottler::Metadata"*, %"class.blink::scheduler::TaskQueueThrottler::Metadata"** %1, align 8
  %13 = icmp eq %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  call void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"* nonnull %9, i8* null) #10
  br label %26

15:                                               ; preds = %2
  %16 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %10, i64 16, i1 false) #10
  %17 = bitcast %"class.perfetto::TracedDictionary"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false) #10
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %7, %"class.perfetto::TracedValue"* nonnull %8) #10
  %18 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %12, i64 0, i32 3
  %19 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)) #10
  %20 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %19, i64 16, i1 false) #10
  %21 = load i64, i64* %18, align 8
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %3, i64 %21) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  %22 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0)) #10
  %23 = getelementptr inbounds %"class.blink::scheduler::TaskQueueThrottler::Metadata", %"class.blink::scheduler::TaskQueueThrottler::Metadata"* %12, i64 0, i32 5, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %22, i64 16, i1 false) #10
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %5, i64 %24) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  br label %26

26:                                               ; preds = %14, %15
  ret void
}

declare void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"* } @_ZN3WTF9HashTableIPN5blink9scheduler10BudgetPoolENS_12KeyValuePairIS4_NSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.115"*, %"class.blink::scheduler::BudgetPool"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.118"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.115", %"class.WTF::HashTable.115"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::scheduler::BudgetPool"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %34, i64 0, i32 0
  %36 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::scheduler::BudgetPool"*
  %38 = icmp eq %"class.blink::scheduler::BudgetPool"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::scheduler::BudgetPool"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::scheduler::BudgetPool"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %63, i64 0, i32 0
  %65 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %64, align 8
  %66 = icmp eq %"class.blink::scheduler::BudgetPool"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.118"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.118"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.118", %"struct.WTF::KeyValuePair.118"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.118"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.118"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"* } undef, %"struct.WTF::KeyValuePair.118"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"* } %79, %"struct.WTF::KeyValuePair.118"* %78, 1
  ret { %"struct.WTF::KeyValuePair.118"*, %"struct.WTF::KeyValuePair.118"* } %80
}

declare void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler18TaskQueueThrottlerEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler18TaskQueueThrottlerEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base13BindRepeatingIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!9 = distinct !{!9, !"_ZN4base13BindRepeatingIMN5blink9scheduler18TaskQueueThrottlerEFvvEJNS_7WeakPtrIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler18TaskQueueThrottlerEE10GetWeakPtrEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base14WeakPtrFactoryIN5blink9scheduler18TaskQueueThrottlerEE10GetWeakPtrEv"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base13BindRepeatingIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!17 = distinct !{!17, !"_ZN4base13BindRepeatingIMN5blink9scheduler18TaskQueueThrottlerEFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEJNS_7WeakPtrIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!18 = !{!"branch_weights", i32 2000, i32 1}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackERNS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS5_EERS7_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackERNS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS0_18RetainedRefWrapperIS5_EERS7_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIRNS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS_8internal18RetainedRefWrapperIS3_EERS5_EEENS_12OnceCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIRNS_17RepeatingCallbackIFvPNS_16sequence_manager9TaskQueueENS_9TimeTicksEEEEJNS_8internal18RetainedRefWrapperIS3_EERS5_EEENS_12OnceCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!24 = !{i8 0, i8 2}
!25 = !{!"branch_weights", i32 1, i32 2000}
