; ModuleID = '../../extensions/browser/content_hash_tree.cc'
source_filename = "../../extensions/browser/content_hash_tree.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.crypto::SecureHash" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions19ComputeTreeHashRootERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEi(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %8, %10
  %12 = icmp slt i32 %2, 2
  %13 = or i1 %12, %11
  %14 = ptrtoint %"class.std::__1::basic_string"* %8 to i64
  br i1 %13, label %15, label %17

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #7
  br label %214

17:                                               ; preds = %3
  %18 = ptrtoint %"class.std::__1::basic_string"* %10 to i64
  %19 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #7
  %21 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #7
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #7
  %25 = sub i64 %18, %14
  %26 = sdiv exact i64 %25, 24
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %28, label %152

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"** %23 to i64*
  %34 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::vector"* %4 to i64*
  %37 = bitcast %"class.std::__1::vector"* %5 to i64*
  %38 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %39 = bitcast %"class.std::__1::basic_string"** %29 to i64*
  %40 = bitcast %"class.std::__1::basic_string"** %24 to i64*
  %41 = bitcast i64* %32 to <2 x i64>*
  br label %42

42:                                               ; preds = %28, %144
  %43 = phi i64 [ 0, %28 ], [ %126, %144 ]
  %44 = phi i64 [ 0, %28 ], [ %46, %144 ]
  %45 = phi i64 [ 0, %28 ], [ %124, %144 ]
  %46 = phi i64 [ 0, %28 ], [ %125, %144 ]
  %47 = phi %"class.std::__1::basic_string"* [ %10, %28 ], [ %131, %144 ]
  %48 = phi %"class.std::__1::basic_string"* [ %8, %28 ], [ %130, %144 ]
  %49 = phi %"class.std::__1::basic_string"** [ %9, %28 ], [ %20, %144 ]
  %50 = icmp eq %"class.std::__1::basic_string"* %48, %47
  br i1 %50, label %123, label %51

51:                                               ; preds = %42, %96
  %52 = phi %"class.std::__1::basic_string"* [ %61, %96 ], [ %48, %42 ]
  %53 = call %"class.crypto::SecureHash"* @_ZN6crypto10SecureHash6CreateENS0_9AlgorithmE(i32 0) #7
  %54 = bitcast %"class.crypto::SecureHash"* %53 to void (%"class.crypto::SecureHash"*, i8*, i64)***
  br label %55

55:                                               ; preds = %112, %51
  %56 = phi i32 [ 0, %51 ], [ %119, %112 ]
  %57 = phi %"class.std::__1::basic_string"* [ %52, %51 ], [ %118, %112 ]
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %49, align 8
  %59 = icmp eq %"class.std::__1::basic_string"* %57, %58
  br i1 %59, label %60, label %99

60:                                               ; preds = %55, %112
  %61 = phi %"class.std::__1::basic_string"* [ %57, %55 ], [ %118, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #7
  %62 = call i8* @_Znwm(i64 48) #8
  store i8* %62, i8** %31, align 8
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %41, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %62, i8 0, i64 33, i1 false)
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %65 = icmp ult %"class.std::__1::basic_string"* %63, %64
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %30, i64 24, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #7
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 1
  %69 = ptrtoint %"class.std::__1::basic_string"* %68 to i64
  store i64 %69, i64* %33, align 8
  br label %75

70:                                               ; preds = %60
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  %71 = load i8, i8* %35, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %74) #8
  br label %75

75:                                               ; preds = %66, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #7
  %76 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 -1
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %85 = select i1 %81, i8* %83, i8* %84
  %86 = bitcast %"class.crypto::SecureHash"* %53 to void (%"class.crypto::SecureHash"*, i8*, i64)***
  %87 = load void (%"class.crypto::SecureHash"*, i8*, i64)**, void (%"class.crypto::SecureHash"*, i8*, i64)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %87, i64 3
  %89 = load void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %88, align 8
  call void %89(%"class.crypto::SecureHash"* %53, i8* %85, i64 32) #7
  %90 = icmp eq %"class.crypto::SecureHash"* %53, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %75
  %92 = bitcast %"class.crypto::SecureHash"* %53 to void (%"class.crypto::SecureHash"*)***
  %93 = load void (%"class.crypto::SecureHash"*)**, void (%"class.crypto::SecureHash"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.crypto::SecureHash"*)*, void (%"class.crypto::SecureHash"*)** %93, i64 1
  %95 = load void (%"class.crypto::SecureHash"*)*, void (%"class.crypto::SecureHash"*)** %94, align 8
  call void %95(%"class.crypto::SecureHash"* nonnull %53) #7
  br label %96

96:                                               ; preds = %75, %91
  %97 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %49, align 8
  %98 = icmp eq %"class.std::__1::basic_string"* %61, %97
  br i1 %98, label %121, label %51

99:                                               ; preds = %55
  %100 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  br label %112

109:                                              ; preds = %99
  %110 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %111 = zext i8 %102 to i64
  br label %112

112:                                              ; preds = %104, %109
  %113 = phi i8* [ %106, %104 ], [ %110, %109 ]
  %114 = phi i64 [ %108, %104 ], [ %111, %109 ]
  %115 = load void (%"class.crypto::SecureHash"*, i8*, i64)**, void (%"class.crypto::SecureHash"*, i8*, i64)*** %54, align 8
  %116 = getelementptr inbounds void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %115, i64 2
  %117 = load void (%"class.crypto::SecureHash"*, i8*, i64)*, void (%"class.crypto::SecureHash"*, i8*, i64)** %116, align 8
  call void %117(%"class.crypto::SecureHash"* %53, i8* %113, i64 %114) #7
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 1
  %119 = add nuw nsw i32 %56, 1
  %120 = icmp eq i32 %119, %2
  br i1 %120, label %60, label %55

121:                                              ; preds = %96
  %122 = load i64, i64* %33, align 8
  br label %123

123:                                              ; preds = %121, %42
  %124 = phi i64 [ %122, %121 ], [ %44, %42 ]
  %125 = load i64, i64* %37, align 8
  store i64 %125, i64* %36, align 8
  store i64 %46, i64* %37, align 8
  store i64 %124, i64* %38, align 8
  store i64 %45, i64* %33, align 8
  %126 = load i64, i64* %40, align 8
  store i64 %126, i64* %39, align 8
  store i64 %43, i64* %40, align 8
  %127 = inttoptr i64 %46 to %"class.std::__1::basic_string"*
  %128 = inttoptr i64 %45 to %"class.std::__1::basic_string"*
  %129 = icmp eq %"class.std::__1::basic_string"* %127, %128
  %130 = inttoptr i64 %125 to %"class.std::__1::basic_string"*
  %131 = inttoptr i64 %124 to %"class.std::__1::basic_string"*
  br i1 %129, label %144, label %132

132:                                              ; preds = %123, %142
  %133 = phi %"class.std::__1::basic_string"* [ %134, %142 ], [ %128, %123 ]
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 -1
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  call void @_ZdlPv(i8* %141) #8
  br label %142

142:                                              ; preds = %139, %132
  %143 = icmp eq %"class.std::__1::basic_string"* %134, %127
  br i1 %143, label %144, label %132

144:                                              ; preds = %142, %123
  store %"class.std::__1::basic_string"* %127, %"class.std::__1::basic_string"** %23, align 8
  %145 = sub i64 %124, %125
  %146 = sdiv exact i64 %145, 24
  %147 = icmp ugt i64 %146, 1
  br i1 %147, label %42, label %148

148:                                              ; preds = %144
  %149 = inttoptr i64 %125 to %"class.std::__1::basic_string"*
  %150 = inttoptr i64 %124 to %"class.std::__1::basic_string"*
  %151 = inttoptr i64 %125 to i8*
  br label %152

152:                                              ; preds = %148, %17
  %153 = phi i8* [ null, %17 ], [ %151, %148 ]
  %154 = phi %"class.std::__1::basic_string"* [ null, %17 ], [ %150, %148 ]
  %155 = phi %"class.std::__1::basic_string"* [ null, %17 ], [ %149, %148 ]
  %156 = phi i64 [ %14, %17 ], [ %125, %148 ]
  %157 = phi %"class.std::__1::basic_string"* [ %8, %17 ], [ %149, %148 ]
  %158 = inttoptr i64 %156 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %152
  %163 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %164 = inttoptr i64 %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 24, i1 false) #7
  br label %170

165:                                              ; preds = %152
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = load i64, i64* %168, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %167, i64 %169) #7
  br label %170

170:                                              ; preds = %162, %165
  %171 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %172 = icmp eq %"class.std::__1::basic_string"* %171, null
  br i1 %172, label %194, label %173

173:                                              ; preds = %170
  %174 = bitcast %"class.std::__1::basic_string"* %171 to i8*
  %175 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %176 = icmp eq %"class.std::__1::basic_string"* %175, %171
  br i1 %176, label %192, label %177

177:                                              ; preds = %173, %187
  %178 = phi %"class.std::__1::basic_string"* [ %179, %187 ], [ %175, %173 ]
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %178, i64 -1
  %180 = bitcast %"class.std::__1::basic_string"* %179 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %177
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %186) #8
  br label %187

187:                                              ; preds = %184, %177
  %188 = icmp eq %"class.std::__1::basic_string"* %179, %171
  br i1 %188, label %189, label %177

189:                                              ; preds = %187
  %190 = bitcast %"class.std::__1::vector"* %5 to i8**
  %191 = load i8*, i8** %190, align 8
  br label %192

192:                                              ; preds = %189, %173
  %193 = phi i8* [ %191, %189 ], [ %174, %173 ]
  store %"class.std::__1::basic_string"* %171, %"class.std::__1::basic_string"** %23, align 8
  call void @_ZdlPv(i8* %193) #8
  br label %194

194:                                              ; preds = %170, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7
  %195 = icmp eq %"class.std::__1::basic_string"* %155, null
  br i1 %195, label %213, label %196

196:                                              ; preds = %194
  %197 = bitcast %"class.std::__1::basic_string"* %155 to i8*
  %198 = icmp eq %"class.std::__1::basic_string"* %154, %155
  br i1 %198, label %211, label %199

199:                                              ; preds = %196, %209
  %200 = phi %"class.std::__1::basic_string"* [ %201, %209 ], [ %154, %196 ]
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %200, i64 -1
  %202 = bitcast %"class.std::__1::basic_string"* %201 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  %204 = load i8, i8* %203, align 1
  %205 = icmp slt i8 %204, 0
  br i1 %205, label %206, label %209

206:                                              ; preds = %199
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %208) #8
  br label %209

209:                                              ; preds = %206, %199
  %210 = icmp eq %"class.std::__1::basic_string"* %201, %155
  br i1 %210, label %211, label %199

211:                                              ; preds = %209, %196
  %212 = phi i8* [ %197, %196 ], [ %153, %209 ]
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %20, align 8
  call void @_ZdlPv(i8* %212) #8
  br label %213

213:                                              ; preds = %194, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #7
  br label %214

214:                                              ; preds = %213, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.crypto::SecureHash"* @_ZN6crypto10SecureHash6CreateENS0_9AlgorithmE(i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #8
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #7
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #7
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #8
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #8
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
