; ModuleID = '../../third_party/blink/renderer/platform/exported/web_font_description.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_font_description.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.2, %class.scoped_refptr.3, %class.scoped_refptr.13, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.20 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.21", [4 x i8] }>
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.2 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.4", %"class.WTF::RefCounted.11", [4 x i8] }>
%"class.blink::FontSettings.4" = type { %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::FontTagValuePair.8"*, i32, i32 }
%"class.blink::FontTagValuePair.8" = type { i32, float }
%"class.WTF::RefCounted.11" = type { %"class.base::RefCounted.12" }
%"class.base::RefCounted.12" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.13 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.14", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.17, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.14" = type { %"class.base::RefCounted.15" }
%"class.base::RefCounted.15" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.17 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.18", [4 x i8] }>
%"class.WTF::RefCounted.18" = type { %"class.base::RefCounted.19" }
%"class.base::RefCounted.19" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.20 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"struct.blink::WebFontDescription" = type <{ %"class.blink::WebString", i32, float, i8, i8, [2 x i8], i32, i16, i16, [4 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN5blink10FontFamilyaSERKS0_ = comdat any

@__const._ZNK5blink18WebFontDescriptioncvNS_15FontDescriptionEEv.desc = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.1 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.2 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.3 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.13 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.20 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal global i64 0, align 8
@_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal global i64 0, align 8

@_ZN5blink18WebFontDescriptionC1ERKNS_15FontDescriptionE = hidden unnamed_addr alias void (%"struct.blink::WebFontDescription"*, %"class.blink::FontDescription"*), void (%"struct.blink::WebFontDescription"*, %"class.blink::FontDescription"*)* @_ZN5blink18WebFontDescriptionC2ERKNS_15FontDescriptionE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WebFontDescriptionC2ERKNS_15FontDescriptionE(%"struct.blink::WebFontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %3) #8
  %4 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF12AtomicStringE(%"class.blink::WebString"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %4) #8
  %6 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %7 = bitcast %"struct.blink::FontDescription::BitFields"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 8
  %10 = trunc i64 %9 to i32
  %11 = and i32 %10, 7
  %12 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 4
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %0, i64 0, i32 2
  %17 = bitcast float* %16 to i32*
  store i32 %15, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 2, i32 0
  %19 = load i16, i16* %18, align 4
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26, !prof !2

22:                                               ; preds = %2
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #8
  br label %26

26:                                               ; preds = %2, %22, %25
  %27 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %28 = icmp eq i16 %19, %27
  %29 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %0, i64 0, i32 3
  %30 = zext i1 %28 to i8
  store i8 %30, i8* %29, align 8
  %31 = load i64, i64* %7, align 8
  %32 = and i64 %31, 112
  %33 = icmp eq i64 %32, 16
  %34 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %0, i64 0, i32 4
  %35 = zext i1 %33 to i8
  store i8 %35, i8* %34, align 1
  %36 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 0, i32 0
  %37 = load i16, i16* %36, align 8
  %38 = sitofp i16 %37 to float
  %39 = fmul float %38, 2.500000e-01
  %40 = fptosi float %39 to i32
  %41 = sdiv i32 %40, 100
  %42 = add nsw i32 %41, -1
  %43 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %0, i64 0, i32 6
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 8
  %45 = load float, float* %44, align 8
  %46 = fptosi float %45 to i16
  %47 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %0, i64 0, i32 7
  store i16 %46, i16* %47, align 8
  %48 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 9
  %49 = load float, float* %48, align 4
  %50 = fptosi float %49 to i16
  %51 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %0, i64 0, i32 8
  store i16 %50, i16* %51, align 2
  ret void
}

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #1

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF12AtomicStringE(%"class.blink::WebString"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18WebFontDescriptioncvNS_15FontDescriptionEEv(%"class.blink::FontDescription"* noalias sret, %"struct.blink::WebFontDescription"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FontFamily", align 8
  %4 = bitcast %"class.blink::FontFamily"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #8
  %6 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %1, i64 0, i32 0
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* %6) #8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %11 = bitcast %"class.blink::FontFamily"* %3 to i64*
  store i64 %10, i64* %11, align 8
  br label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %46

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %30 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %31 = bitcast %"class.blink::FontFamily"* %3 to i64*
  store i64 %30, i64* %31, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %32, label %49, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %49

46:                                               ; preds = %12
  %47 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %48 = bitcast %"class.blink::FontFamily"* %3 to i64*
  store i64 %47, i64* %48, align 8
  br label %49

49:                                               ; preds = %45, %42, %27, %46
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #8
  br label %62

62:                                               ; preds = %9, %58, %61
  %63 = bitcast %"class.blink::FontDescription"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZNK5blink18WebFontDescriptioncvNS_15FontDescriptionEEv.desc to i8*), i64 80, i1 false)
  tail call void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"* %0) #8
  %64 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  %65 = call dereferenceable(16) %"class.blink::FontFamily"* @_ZN5blink10FontFamilyaSERKS0_(%"class.blink::FontFamily"* %64, %"class.blink::FontFamily"* nonnull dereferenceable(16) %3) #8
  %66 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %1, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 12, i32 0
  %69 = bitcast %"struct.blink::FontDescription::BitFields"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = shl i32 %67, 8
  %72 = and i32 %71, 1792
  %73 = zext i32 %72 to i64
  %74 = and i64 %70, -1793
  %75 = or i64 %74, %73
  store i64 %75, i64* %69, align 8
  %76 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %1, i64 0, i32 2
  %77 = load float, float* %76, align 4
  %78 = fcmp ult float %77, 0x47EFFFFFE0000000
  %79 = fcmp ole float %77, 0xC7EFFFFFE0000000
  %80 = select i1 %79, float 0xC7EFFFFFE0000000, float %77
  %81 = select i1 %78, float %80, float 0x47EFFFFFE0000000
  %82 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 4
  store float %81, float* %82, align 8
  %83 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 5
  store float %81, float* %83, align 4
  %84 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %1, i64 0, i32 3
  %85 = load i8, i8* %84, align 8, !range !4
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %62
  %88 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %101, !prof !2

90:                                               ; preds = %87
  %91 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %90
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #8
  br label %101

94:                                               ; preds = %62
  %95 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %101, !prof !2

97:                                               ; preds = %94
  %98 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #8
  br label %101

101:                                              ; preds = %100, %97, %94, %93, %90, %87
  %102 = phi %"class.blink::FontSelectionValue"* [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to %"class.blink::FontSelectionValue"*), %87 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to %"class.blink::FontSelectionValue"*), %90 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to %"class.blink::FontSelectionValue"*), %93 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %94 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %97 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to %"class.blink::FontSelectionValue"*), %100 ]
  %103 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %102, i64 0, i32 0
  %104 = load i16, i16* %103, align 2
  call void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"* %0, i16 %104) #8
  %105 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %1, i64 0, i32 4
  %106 = load i8, i8* %105, align 1, !range !4
  %107 = zext i8 %106 to i32
  call void @_ZN5blink15FontDescription14SetVariantCapsENS0_15FontVariantCapsE(%"class.blink::FontDescription"* %0, i32 %107) #8
  %108 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %1, i64 0, i32 6
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 %109, 100
  %111 = add i32 %110, 100
  %112 = icmp slt i32 %111, 8192
  %113 = icmp sgt i32 %111, -8192
  %114 = trunc i32 %111 to i16
  %115 = shl i16 %114, 2
  %116 = select i1 %113, i16 %115, i16 -32768
  %117 = select i1 %112, i16 %116, i16 32767
  %118 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 10, i32 0, i32 0
  store i16 %117, i16* %118, align 8
  %119 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %1, i64 0, i32 7
  %120 = load i16, i16* %119, align 8
  %121 = sitofp i16 %120 to float
  %122 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 8
  store float %121, float* %122, align 8
  call void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* %0) #8
  %123 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %1, i64 0, i32 8
  %124 = load i16, i16* %123, align 2
  %125 = sitofp i16 %124 to float
  %126 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 9
  store float %125, float* %126, align 4
  call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"*) local_unnamed_addr #1

declare void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"*) unnamed_addr #1

declare void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"*, i16) local_unnamed_addr #1

declare void @_ZN5blink15FontDescription14SetVariantCapsENS0_15FontVariantCapsE(%"class.blink::FontDescription"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #8
  %15 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.22"* %19 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %20) #8
  %21 = bitcast %"class.base::RefCounted.22"* %19 to i8*
  tail call void @free(i8* %21) #8
  br label %22

22:                                               ; preds = %10, %18
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #8
  %27 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.22"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #8
  %33 = bitcast %"class.base::RefCounted.22"* %31 to i8*
  tail call void @free(i8* %33) #8
  br label %34

34:                                               ; preds = %22, %24, %30
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #8
  %40 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.22"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #8
  %46 = bitcast %"class.base::RefCounted.22"* %44 to i8*
  tail call void @free(i8* %46) #8
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #8
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::FontFamily"* @_ZN5blink10FontFamilyaSERKS0_(%"class.blink::FontFamily"*, %"class.blink::FontFamily"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #8
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #8
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"class.blink::FontFamily"* %0 to i64*
  %26 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %1, i64 0, i32 1, i32 0
  %45 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %44, align 8
  %46 = icmp eq %"class.blink::SharedFontFamily"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %45, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #8
  br label %49

49:                                               ; preds = %42, %47
  %50 = ptrtoint %"class.blink::SharedFontFamily"* %45 to i64
  %51 = bitcast %class.scoped_refptr.1* %43 to i64*
  %52 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %43, i64 0, i32 0
  %53 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %52, align 8
  store i64 %50, i64* %51, align 8
  %54 = icmp eq %"class.blink::SharedFontFamily"* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %53, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %56, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %57) #8
  %58 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %56, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.base::RefCounted.22", %"class.base::RefCounted.22"* %56, i64 -4
  %63 = bitcast %"class.base::RefCounted.22"* %62 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %63) #8
  %64 = bitcast %"class.base::RefCounted.22"* %62 to i8*
  tail call void @free(i8* %64) #8
  br label %65

65:                                               ; preds = %49, %55, %61
  ret %"class.blink::FontFamily"* %0
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
